@&#MAIN-TITLE@&#A robust non-rigid point set registration method based on asymmetric gaussian representation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An asymmetric Gaussian representation based method for point set registration.


                        
                        
                           
                           A robust estimator (L2E) is used to estimate the transformation in RKHS.


                        
                        
                           
                           Low-rank kernel matrix approximation trick to reduce the computational complexity.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Point matching

Point set registration

Asymmetric Gaussian distribution

Kernel method

@&#ABSTRACT@&#


               
               
                  Point set registration problem confronts with the challenge of large degree of degradations, such as deformation, noise, occlusion and outlier. In this paper, we present a novel robust method for non-rigid point set registration, and it includes four important parts are as follows: First, we used a mixture of asymmetric Gaussian model (MoAG) Kato et al. (2002) [1], a new probability model which can capture spatially asymmetric distributions, to represent each point set. Second, based on the representation of point set by MoAG, we used soft assignment technique to recover the correspondences, and correlation-based method to estimate the transformation parameters between two point sets. Point set registration is formulated as an optimization problem. Third, we solved the optimization problem under regularization theory in a feature space, i.e., Reproducing Kernel Hilbert Space (RKHS). Finally, we chose control points to build a kernel using low-rank kernel matrix approximation. Thus the computational complexity can be reduced down to O(N) approximately. Experimental results on 2D, 3D non-rigid point set, and real image registration demonstrate that our method is robust to a large degree of degradations, and it outperforms several state-of-the-art methods in most tested scenarios.
               
            

@&#INTRODUCTION@&#

Point set registration plays an important role in both computer vision and pattern recognition, and it frequently arises in many applications, such as image registration, medical imaging, structure from motion, 3D reconstruction, image stitching, image retrieval, and object tracking.

Formally, a general point set registration method contains two parts, the first one is to recover the correspondences between two point sets, and the second one is to estimate the best transformation which can align the corresponding point pairs. However, point set registration becomes increasingly difficult, because of the challenge of large degree of degradations which make the distribution of point set more complex. In this paper, we mainly concentrate on four cases of degradation, i.e., deformation, noise, occlusion, and outlier. Briefly, noisy data means the feature points cannot be matched precisely, and the data with occlusion and outlier mean some points cannot find their correspondences in the corresponding point set.

Generally, the point set registration can be categorized into rigid and non-rigid depends on the transformation pattern. A rigid transformation, which allows the translation, rotation and scaling, is relatively easy to estimate. By contrast, a non-rigid transformation is very difficult to estimate since the true transformation model is usually unknown and difficult to approximate. Moreover, the non-rigid transformation is a main element in point set registration, because it exists in numerous applications, including hand-written character recognition, facial-expression recognition, and medical image registration.

Recently, numerous methods exist for rigid and non-rigid point set registration. The Iterative Closest Point (ICP) algorithm [2] is one of the best known algorithms for point set registration, because of its simplicity and low computational complexity. The nearest-neighbor distance criterion is used to assign a binary correspondence at each step of the ICP. Then the transformation is refined by the estimated correspondence. However, it requires a good initial position, i.e., adequately close distance between two point sets.

In order to address the limitations of ICP and improve its performance, many interesting methods are proposed. Granger et al. [3] proposed a fast and robust method to align point sets under the expectation maximization (EM) framework, namely EM-ICP. Chui et al. [4] introduced a soft assignment technique and the deterministic annealing to construct a general framework to estimate the transformation and recover the correspondences for non-rigid matching. The core of their work is the transformation model which is built by thin-plate splines (TPS). They present a robust point set registration algorithm named TPS-RPM, and it is more robust than ICP to deformation, noise, occlusion, and outlier, but it has high computational complexity. Zheng et al. [5] proposed a robust point set registration method for non-rigid shapes, and it preserves local neighborhood structures. Moreover, the point set registration problem is interpreted as a graph matching which outperforms the shape context [6] method and TPS-RPM. Huang et al. [7] proposed a shape registration method, which measures the similarity between free form deformations and the shape in the distance transform space.

Tsin et al. [8] proposed a correlation-based method named kernel correlation (KC) for point set registration, where the correlation of two kernel density estimates are used to formulate the cost function, and maximizing the correlation between kernels (as an M-estimator) can get the best transformation parameters. Based on the theory of kernel correlation, Jian et al. [9] presented a robust point set registration approach using Gaussian mixture models (GMM), namely L2-TPS, they leverage the closed-form expression for the L2 distance between two Gaussian mixtures which represent the given point sets. Alternatively, Ma et al. [10] introduced L2-minimizing estimate (L2E) [11], a robust estimator in statistics, to estimate the non-rigid transformation, and it needs putative correspondences. Then they use shape context as the feature descriptor to update the correspondences iteratively for point set registration. Li et al. [12] proposed an asymmetric shape representation and a new high-peak-fat-tail Gaussian mixtures kernel method to align two shapes, and they use particle swarm optimization (PSO) instead of the gradient-based methods to find the optimal transformation parameters.

Theoretically speaking, all above point set registration methods use distance-based similarity measure to formulate energy functions, and they do not need to build a more complex model which includes outliers. In another idea, more complex model, which includes outliers, is built for point set registration. For example, Myronenko et al. [13] proposed an efficient algorithm, namely coherence point drift (CPD), based on the motion coherence theory (MCT) [14,15]. They use the Gaussian radial basis function (GRBF) to build the transformation model instead of the TPS, and consider the points in a point set which needs to move as the GMM centroids. Most importantly, EM framework is used to estimate the unknown transformation parameters. CPD can get good results in a very short time when handling a large number of points. Ma et al. [16] proposed an interesting method for point set registration by vector field consensus [17], namely RPM-VFC, and it is very similar in the transformation model to CPD.

However, point set registration methods still have many unsolved problems: 1) they are sensitive to large degree of degradations, e.g., deformation, noise, occlusion and outlier, 2) the numerical optimization often falls into local minima, 3) their computational complexity are challenging to reduce when handling large data sets.

In this paper, we focus on the above unsolved problems of non-rigid point set registration, and present a novel robust point set registration method. Briefly, the core of our method is based on a asymmetric Gaussian representation method, i.e., a mixture of asymmetric Gaussian model (MoAG) to represent the density of the given point set, in particular, assuming that the point set often satisfies asymmetric distribution. Then we use the improved soft assignment technique to fit the correspondences. A robust correlation-based method is used to estimate the parameters of the transformation model, which has been well studied in [11,18]. Moreover, we use the kernel method to build a feature space (RKHS) to solve our cost function in the style of a regularized least square, and we consider the non-rigid transformation as a functional in RKHS. Local minima often exists in gradient based numerical optimization methods, so we use annealing framework to escape the trap of local minima. Finally, we use low-rank kernel matrix approximation to reduce the computational complexity. In our previous work [19], it has been shown that the MoAG model can get better performance in most degradations on 2D point set. Here, we add more method details and experimental analysis. The experimental results demonstrate that our proposed method is robust against a large degree of degradations, and it outperforms several existing methods in most tested scenarios on 2D, 3D point set, and real image data.

The rest of the paper is organized as follows: in Section 2, we present the method to represent a point set using mixture of asymmetric Gaussian model. In Section 3, we formulate point set registration based on correlation based method as an optimization problem, and search the optimal solution in RKHS by kernel method. In Section 4, we show the experimental results on 2D, 3D synthetic data and 2D real images. In Section 5, we present a conclusion.

Single Gaussian and Gaussian mixture models (GMM) have been proven the popular models in computer vision and pattern recognition. However, they do not always adapt and fit any distribution of patterns, Kato et al. [1] introduced a new probability model named asymmetric Gaussian model (AG) which can capture spatially asymmetric distributions. Asymmetric Gaussian model is another form extending from Gaussian model. It is shown that Gaussian distribution has a symmetric distribution while asymmetric Gaussian representation has an asymmetric distribution, as shown in Fig. 1, where the density functions are plotted. The distribution of asymmetric Gaussian model is given by
                     
                     
                     
                     
                        
                           (1)
                           
                              
                                 
                                    
                                       
                                          A
                                          
                                             (
                                             
                                                
                                                   x
                                                   |
                                                   μ
                                                   ,
                                                
                                                
                                                   σ
                                                   2
                                                
                                                ,
                                                r
                                             
                                             )
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             1
                                             
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            2
                                                            π
                                                            
                                                               σ
                                                               2
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                   
                                                      D
                                                      /
                                                      2
                                                   
                                                
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               (
                                                               
                                                                  r
                                                                  +
                                                                  1
                                                               
                                                               )
                                                            
                                                            /
                                                            2
                                                         
                                                         )
                                                      
                                                   
                                                   D
                                                
                                             
                                          
                                          
                                             [
                                             γ
                                             exp
                                             
                                                (
                                                
                                                   −
                                                   
                                                      
                                                         
                                                            
                                                               |
                                                               
                                                                  x
                                                                  −
                                                                  μ
                                                               
                                                               |
                                                            
                                                         
                                                         2
                                                      
                                                      
                                                         2
                                                         
                                                            σ
                                                            2
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          
                                             
                                                (
                                                
                                                   1
                                                   −
                                                   γ
                                                
                                                )
                                             
                                             exp
                                             
                                                (
                                                
                                                   −
                                                   
                                                      
                                                         
                                                            
                                                               |
                                                               
                                                                  x
                                                                  −
                                                                  μ
                                                               
                                                               |
                                                            
                                                         
                                                         2
                                                      
                                                      
                                                         2
                                                         
                                                            r
                                                            2
                                                         
                                                         
                                                            σ
                                                            2
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             ]
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where D is the dimension of data, γ ∈ (0, 1) denotes the weighting between two Gaussian components of an asymmetric Gaussian model, 
                        
                           γ
                           =
                           1
                        
                      for x ≤ μ, and 
                        
                           γ
                           =
                           0
                        
                      for x > μ. σ
                     2 and r
                     2
                     σ
                     2 are the standard deviations of an asymmetric Gaussian model. Note that 
                        
                           r
                           =
                           1
                        
                      means asymmetric Gaussian model is equivalent to Gaussian model.

Based on the definition of a single asymmetric Gaussian model, it is easy to construct a mixture of asymmetric Gaussian model which may be well approximate almost any density with a linear combination of local asymmetric Gaussian model. The overall density of the J-component mixture is given by

                        
                           (2)
                           
                              
                                 p
                                 
                                    (
                                    x
                                    )
                                 
                                 =
                                 
                                    ∑
                                    
                                       j
                                       
                                       =
                                       
                                       1
                                    
                                    J
                                 
                                 
                                    w
                                    j
                                 
                                 A
                                 
                                    (
                                    
                                       
                                          x
                                          |
                                          μ
                                          ,
                                       
                                       
                                          σ
                                          2
                                       
                                       ,
                                       r
                                    
                                    )
                                 
                                 ,
                              
                           
                        
                     where wj
                      is the weight of each component, and 
                        
                           
                              {
                              
                                 w
                                 j
                              
                              }
                           
                           
                              j
                              
                              =
                              
                              1
                           
                           J
                        
                      are mixing proportions satisfying 0 ≤ wj
                      ≤ 1 and 
                        
                           
                              ∑
                              
                                 j
                                 
                                 =
                                 
                                 1
                              
                              J
                           
                           
                              w
                              j
                           
                           =
                           1
                        
                     .

In this paper, we define the first point set 
                        
                           
                              X
                              
                                 M
                                 ×
                                 D
                              
                           
                           =
                           
                              
                                 (
                                 
                                    
                                       x
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       x
                                       M
                                    
                                 
                                 )
                              
                              T
                           
                        
                      as the moving Model set, and the second point set 
                        
                           
                              Y
                              
                                 N
                                 ×
                                 D
                              
                           
                           =
                           
                              
                                 (
                                 
                                    
                                       y
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       y
                                       N
                                    
                                 
                                 )
                              
                              T
                           
                        
                      as the fixed Scene set, 
                        
                           X
                           ,
                           Y
                           ∈
                           
                              R
                              2
                           
                        
                      or 
                        
                           X
                           ,
                           Y
                           ∈
                           
                              R
                              3
                           
                        
                     . We can represent both point sets by a single mixture of asymmetric Gaussian model respectively where the number of asymmetric Gaussian components is equivalent to the number of points in the point set. Note that all asymmetric Gaussian components are weighted equally, and both point sets are normalized as distributions with zero mean and unit variance first.

We motivated by the reason that the error of L2-minimizing estimator is less than the error of maximum likelihood estimation (MLE) [11]. Then, in this paper, we use correlation-based method to estimate the similarity between the input point sets, where the point sets are represented by mixture of asymmetric Gaussian model. L2 Euclidean distance is widely used in multiple applications, and many registration methods [2,8–10] based on it. Thus, the problem of point set registration can be well formulated by minimizing the L2 Euclidean distance between two point sets. Note that the structure of the Model set is transformed as v(X, θ) after each step of registration. The correlation between two point sets based on L2 Euclidean distance is defined as follows:

                           
                              (3)
                              
                                 
                                    d
                                    i
                                    s
                                    t
                                    
                                       (
                                       
                                          X
                                          ,
                                          Y
                                          ,
                                          θ
                                       
                                       )
                                    
                                    =
                                    
                                       ∫
                                       
                                          
                                             
                                                (
                                                
                                                   M
                                                   o
                                                   A
                                                   G
                                                   
                                                      (
                                                      Y
                                                      )
                                                   
                                                   −
                                                   M
                                                   o
                                                   A
                                                   G
                                                   
                                                      (
                                                      
                                                         v
                                                         
                                                            (
                                                            
                                                               X
                                                               ,
                                                               θ
                                                            
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                                )
                                             
                                          
                                          2
                                       
                                       d
                                       x
                                    
                                    ,
                                 
                              
                           
                        where MoAG( · ) denotes mixture density of asymmetric Gaussian model constructed from a point set. Thus the parameter θ of the non-rigid transformation can be solved by minimizing Eq. (3)
                        
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             θ
                                             ^
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             arg
                                             
                                                min
                                                θ
                                             
                                             ∫
                                             
                                                M
                                                o
                                                A
                                                G
                                                
                                                   
                                                      
                                                         (
                                                         Y
                                                         )
                                                      
                                                   
                                                   2
                                                
                                             
                                             d
                                             x
                                             +
                                             ∫
                                             
                                                M
                                                o
                                                A
                                                G
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            v
                                                            
                                                               (
                                                               
                                                                  X
                                                                  ,
                                                                  θ
                                                               
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                   2
                                                
                                             
                                             d
                                             x
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             −
                                             2
                                             ∫
                                             
                                                M
                                                o
                                                A
                                                G
                                                
                                                   (
                                                   Y
                                                   )
                                                
                                                M
                                                o
                                                A
                                                G
                                                
                                                   (
                                                   
                                                      v
                                                      
                                                         (
                                                         
                                                            X
                                                            ,
                                                            θ
                                                         
                                                         )
                                                      
                                                   
                                                   )
                                                
                                             
                                             d
                                             x
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        Note that the first term ∫MoAG(Y)2
                        dx is a constant, because it is independent of θ. The second term does not require to estimate, since it can be evaluated exactly for any value of θ. The last term of Eq. (4), ∫MoAG(Y)MoAG(v(X, θ))dx is the key quantity to estimate. Formally, this estimation is equivalent to the Integrated Square Error (ISE or L2E) [10] which is a robust estimator to estimate densities between two point sets. Rewriting Eq. (4), we obtain

                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             θ
                                             ^
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             arg
                                             
                                                min
                                                θ
                                             
                                             [
                                             
                                                ∫
                                                
                                                   M
                                                   o
                                                   A
                                                   G
                                                   
                                                      
                                                         
                                                            (
                                                            
                                                               v
                                                               
                                                                  (
                                                                  
                                                                     X
                                                                     ,
                                                                     θ
                                                                  
                                                                  )
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      2
                                                   
                                                
                                                d
                                                x
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                −
                                                
                                                   2
                                                   
                                                      M
                                                      N
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      i
                                                      
                                                      =
                                                      
                                                      1
                                                   
                                                   N
                                                
                                                
                                                   
                                                      ∑
                                                      
                                                         j
                                                         
                                                         =
                                                         
                                                         1
                                                      
                                                      M
                                                   
                                                   
                                                      M
                                                      o
                                                      A
                                                      G
                                                      
                                                         (
                                                         
                                                            
                                                               y
                                                               i
                                                            
                                                            −
                                                            v
                                                            
                                                               (
                                                               
                                                                  
                                                                     x
                                                                     j
                                                                  
                                                                  ,
                                                                  θ
                                                               
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             ]
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where v is a parameterized spatial transformation family in point set registration, and MN is a normalization term. Under the registration framework, the first term of Eq. (5) is only dependent on Model set, and it is not a key component to estimate. Ignoring the constant independent of parameter θ, σ
                        2, and r, so we can define the cost function of the registration algorithm as follows:

                           
                              (6)
                              
                                 
                                    C
                                    o
                                    s
                                    t
                                    
                                       (
                                       
                                          θ
                                          ,
                                          
                                             σ
                                             2
                                          
                                          ,
                                          r
                                       
                                       )
                                    
                                    =
                                    C
                                    −
                                    
                                       2
                                       
                                          M
                                          N
                                       
                                    
                                    
                                       ∑
                                       
                                          i
                                          
                                          =
                                          
                                          1
                                       
                                       N
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             
                                             =
                                             
                                             1
                                          
                                          M
                                       
                                       
                                          M
                                          o
                                          A
                                          G
                                          
                                             (
                                             
                                                
                                                   y
                                                   i
                                                
                                                −
                                                v
                                                
                                                   (
                                                   
                                                      
                                                         x
                                                         j
                                                      
                                                      ,
                                                      θ
                                                   
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              C
                              =
                              
                                 1
                                 
                                    
                                       
                                          
                                             (
                                             
                                                2
                                                π
                                                
                                                   σ
                                                   2
                                                
                                             
                                             )
                                          
                                       
                                       
                                          D
                                          /
                                          2
                                       
                                    
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   (
                                                   
                                                      r
                                                      +
                                                      1
                                                   
                                                   )
                                                
                                                /
                                                2
                                             
                                             )
                                          
                                       
                                       D
                                    
                                 
                              
                           
                         is a constant.

Note that the corresponding points can be estimated by minimizing the last term of Eq. (6), then the newly estimated point position of point yi
                         that corresponds to xj
                         is defined as: 
                           
                              
                                 t
                                 j
                              
                              =
                              
                                 ∑
                                 
                                    i
                                    
                                    =
                                    
                                    1
                                 
                                 N
                              
                              
                                 
                                    φ
                                    
                                       j
                                       i
                                    
                                 
                                 
                                    y
                                    i
                                 
                              
                              ,
                           
                         where φ is a soft assignment [20–22] correspondence matrix of size M × N in the interval [0, 1], and satisfies 
                           
                              
                                 ∑
                                 
                                    i
                                    
                                    =
                                    
                                    1
                                 
                                 N
                              
                              
                                 φ
                                 
                                    j
                                    i
                                 
                              
                              =
                              1
                           
                         for 
                           
                              j
                              ∈
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              M
                           
                        .

Mathematically, for points 
                           
                              {
                              
                                 
                                    y
                                    i
                                 
                                 ,
                                 i
                                 ∈
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 N
                              
                              }
                           
                         and 
                           
                              {
                              
                                 
                                    x
                                    j
                                 
                                 ,
                                 j
                                 ∈
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 M
                              
                              }
                           
                         of two point sets, the distance between arbitrary two points (∀yi
                         ∈ Y, ∀xj
                         ∈ X) satisfies a Gaussian distribution, we obtain

                           
                              (7)
                              
                                 
                                    
                                       φ
                                       
                                          j
                                          i
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          
                                             
                                                2
                                                π
                                             
                                          
                                          
                                             σ
                                             2
                                          
                                       
                                    
                                    exp
                                    
                                       (
                                       
                                          −
                                          
                                             
                                                
                                                   
                                                      ∥
                                                      
                                                         
                                                            y
                                                            i
                                                         
                                                         −
                                                         v
                                                         
                                                            (
                                                            
                                                               
                                                                  x
                                                                  j
                                                               
                                                               ,
                                                               θ
                                                            
                                                            )
                                                         
                                                      
                                                      ∥
                                                   
                                                
                                                2
                                             
                                             
                                                2
                                                
                                                   σ
                                                   2
                                                
                                             
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        Then for outliers, we use xo, yo
                         to denote the outlier cluster centers as discussed in [4]
                        
                           
                              (8)
                              
                                 
                                    
                                       φ
                                       
                                          o
                                          i
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          
                                             
                                                2
                                                π
                                             
                                          
                                          
                                             ξ
                                             2
                                          
                                       
                                    
                                    exp
                                    
                                       (
                                       
                                          −
                                          
                                             
                                                
                                                   
                                                      ∥
                                                      
                                                         
                                                            y
                                                            i
                                                         
                                                         −
                                                         
                                                            x
                                                            o
                                                         
                                                      
                                                      ∥
                                                   
                                                
                                                2
                                             
                                             
                                                2
                                                
                                                   ξ
                                                   2
                                                
                                             
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       φ
                                       
                                          j
                                          o
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          
                                             
                                                2
                                                π
                                             
                                          
                                          
                                             ξ
                                             2
                                          
                                       
                                    
                                    exp
                                    
                                       (
                                       
                                          −
                                          
                                             
                                                
                                                   
                                                      ∥
                                                      
                                                         
                                                            y
                                                            o
                                                         
                                                         −
                                                         v
                                                         
                                                            (
                                                            
                                                               
                                                                  x
                                                                  j
                                                               
                                                               ,
                                                               θ
                                                            
                                                            )
                                                         
                                                      
                                                      ∥
                                                   
                                                
                                                2
                                             
                                             
                                                2
                                                
                                                   ξ
                                                   2
                                                
                                             
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        where
                        
                         
                        ξ denotes a very large scale, in our method, we set 
                           
                              ξ
                              =
                              max
                              
                                 
                                    (
                                    
                                       y
                                       i
                                    
                                    )
                                 
                                 2
                              
                           
                        . Thus we can obtain the soft assignment correspondence matrix after row and column normalization 
                           
                              
                                 φ
                                 
                                    j
                                    i
                                 
                              
                              =
                              
                                 
                                    φ
                                    
                                       j
                                       i
                                    
                                 
                                 
                                    
                                       
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          M
                                       
                                       
                                          φ
                                          
                                             j
                                             i
                                          
                                       
                                       +
                                       
                                          φ
                                          
                                             o
                                             i
                                          
                                       
                                    
                                 
                              
                              ,
                           
                         and 
                           
                              
                                 φ
                                 
                                    j
                                    i
                                 
                              
                              =
                              
                                 
                                    φ
                                    
                                       j
                                       i
                                    
                                 
                                 
                                    
                                       
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          N
                                       
                                       
                                          φ
                                          
                                             j
                                             i
                                          
                                       
                                       +
                                       
                                          φ
                                          
                                             j
                                             o
                                          
                                       
                                    
                                 
                              
                           
                        , respectively. Following the soft assignment, the correspondences can be updated iteratively.

The correspondence set is used to update the transformation between Model and Scene point set. After estimating the correspondence in the Section 3.2, we can obtain the newly set of point correspondences 
                           
                              S
                              =
                              
                                 
                                    {
                                    
                                       (
                                       
                                          
                                             t
                                             j
                                          
                                          ,
                                          
                                             x
                                             j
                                          
                                       
                                       )
                                    
                                    }
                                 
                                 
                                    j
                                    
                                    =
                                    
                                    1
                                 
                                 M
                              
                           
                         in each iteration. So the objective function (6) can be rewritten as follows:

                           
                              (10)
                              
                                 
                                    C
                                    o
                                    s
                                    t
                                    
                                       (
                                       
                                          θ
                                          ,
                                          
                                             σ
                                             2
                                          
                                          ,
                                          r
                                       
                                       )
                                    
                                    =
                                    C
                                    −
                                    
                                       2
                                       M
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          M
                                       
                                       
                                          M
                                          o
                                          A
                                          G
                                          
                                             (
                                             
                                                
                                                   t
                                                   j
                                                
                                                −
                                                v
                                                
                                                   (
                                                   
                                                      
                                                         x
                                                         j
                                                      
                                                      ,
                                                      θ
                                                   
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The motivation to use reproducing kernel Hilbert spaces (RKHS) and the representation theorem: 1) the representation theorem which states that every function in an RKHS is a linear combination of the kernel term evaluated at the training points, and 2) the empirical risk minimization problem from an infinite dimensional to a finite dimensional optimization problem can be effectively simplified by the representation theorem. Then the functional form of the non-rigid transformation family v can be found by calculus of variation in an RKHS.

Given the Model set 
                           
                              X
                              ∈
                              
                                 R
                                 D
                              
                              ,
                           
                         the Scene set 
                           
                              Y
                              ∈
                              
                                 R
                                 D
                              
                           
                         (where 
                           
                              D
                              =
                              2
                           
                         or 
                           
                              D
                              =
                              3
                           
                        ), and the estimated correspondences S, so we can define an RKHS 
                           H
                         with a positive definite kernel function k. In this paper, we choose Gaussian radial basis function (GRBF) as the kernel function of our method, which is defined as: 
                           
                              k
                              
                                 (
                                 
                                    
                                       x
                                       i
                                    
                                    ,
                                    
                                       x
                                       j
                                    
                                 
                                 )
                              
                              =
                              exp
                              
                                 (
                                 
                                    −
                                    β
                                    
                                       
                                          
                                             ∥
                                          
                                          
                                             
                                                x
                                                i
                                             
                                             −
                                             
                                                x
                                                j
                                             
                                          
                                          
                                             ∥
                                          
                                       
                                       2
                                    
                                 
                                 )
                              
                              ,
                           
                         where β is a constant. Thus, we can obtain the kernel matrix K
                        
                           
                              (11)
                              
                                 
                                    K
                                    =
                                    
                                       [
                                       
                                          
                                             
                                                
                                                   k
                                                   
                                                      (
                                                      
                                                         
                                                            x
                                                            1
                                                         
                                                         ,
                                                         
                                                            x
                                                            1
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                …
                                             
                                             
                                                
                                                   k
                                                   
                                                      (
                                                      
                                                         
                                                            x
                                                            1
                                                         
                                                         ,
                                                         
                                                            x
                                                            M
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ⋮
                                             
                                             
                                                ⋱
                                             
                                             
                                                ⋮
                                             
                                          
                                          
                                             
                                                
                                                   k
                                                   
                                                      (
                                                      
                                                         
                                                            x
                                                            M
                                                         
                                                         ,
                                                         
                                                            x
                                                            1
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                ⋯
                                             
                                             
                                                
                                                   k
                                                   
                                                      (
                                                      
                                                         
                                                            x
                                                            M
                                                         
                                                         ,
                                                         
                                                            x
                                                            M
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                       ]
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              K
                              :
                              
                                 R
                                 D
                              
                              ×
                              
                                 R
                                 D
                              
                              →
                              
                                 R
                                 
                                    D
                                    ×
                                    D
                                 
                              
                           
                         is an M × M matrix. Note that the kernel matrix associated with a positive definite kernel is positive semi-definite.

The transformation function 
                           
                              v
                              ∈
                              H
                           
                         can be found by minimizing the following regularized least-squares [23,24]:

                           
                              (12)
                              
                                 
                                    
                                       ɛ
                                    
                                    
                                       (
                                       v
                                       )
                                    
                                    =
                                    
                                       min
                                       
                                          v
                                          ∈
                                          H
                                       
                                    
                                    C
                                    o
                                    s
                                    t
                                    
                                       (
                                       
                                          θ
                                          ,
                                          
                                             σ
                                             2
                                          
                                          ,
                                          r
                                       
                                       )
                                    
                                    +
                                    
                                       λ
                                       2
                                    
                                    
                                       
                                          ∥
                                          v
                                          ∥
                                       
                                       K
                                       2
                                    
                                    ,
                                 
                              
                           
                        where the first term is the empirical risk, and the second term is the Tikhonov regularization [25], λ > 0 is a trade-off parameter, ‖ · ‖
                           K
                         denotes a norm in the RKHS. Tikhonov regularization form smoothly determines the trade-off between 
                           
                              
                                 ∥
                                 v
                                 ∥
                              
                              K
                              2
                           
                         and the Cost(θ, σ
                        2, r), most importantly, it solves the ill-posed problems in point set registration.

According to the representation theorem [26], the solution of Eq. (12) to the Tikhonov regularization can be written in the following form:

                           
                              (13)
                              
                                 
                                    v
                                    
                                       (
                                       ·
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          j
                                          
                                          =
                                          
                                          1
                                       
                                       M
                                    
                                    
                                       h
                                       j
                                    
                                    K
                                    
                                       (
                                       
                                          
                                             x
                                             j
                                          
                                          ,
                                          ·
                                       
                                       )
                                    
                                 
                              
                           
                        for some 
                           
                              
                                 h
                                 j
                              
                              ∈
                              
                                 R
                                 M
                              
                           
                        .

For such a non-rigid transformation, the norm in the RKHS can be rewritten as follows:

                           
                              (14)
                              
                                 
                                    
                                       
                                          ∥
                                          v
                                          ∥
                                       
                                       K
                                       2
                                    
                                    =
                                    t
                                    r
                                    
                                       (
                                       
                                          
                                             H
                                             T
                                          
                                          K
                                          H
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              H
                              =
                              
                                 
                                    (
                                    
                                       h
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       h
                                       M
                                    
                                    )
                                 
                                 T
                              
                           
                         is a coefficient matrix of size M × D.

Substituting Eqs. (13) and (14) into the cost function (10), we can therefore rewrite it with the Tikhonov regularization as follows:

                           
                              (15)
                              
                                 
                                    E
                                    
                                       (
                                       
                                          H
                                          ,
                                          
                                             σ
                                             2
                                          
                                          ,
                                          r
                                       
                                       )
                                    
                                    =
                                    C
                                    −
                                    
                                       2
                                       M
                                    
                                    M
                                    o
                                    A
                                    G
                                    
                                       (
                                       
                                          T
                                          −
                                          K
                                          H
                                       
                                       )
                                    
                                    +
                                    
                                       λ
                                       2
                                    
                                    t
                                    r
                                    
                                       (
                                       
                                          
                                             H
                                             T
                                          
                                          K
                                          H
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        where tr( · ) denotes the trace of a matrix, and 
                           T
                         is the estimated correspondence set of the point set Y that corresponds to X.

The aforementioned cost function is convex in the neighborhood of the optimal position and, most importantly, always differentiable. Thus, the numerical optimization problem can be solved by employing some gradient-based optimization methods, such as Quasi–Newton method [27], or global optimization methods, such as Particle Swarm Optimization (PSO). Taking the partial derivative of Eq. (15) with respect to H, we obtain:

                           
                              (16)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∂
                                                E
                                             
                                             
                                                ∂
                                                H
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                2
                                                K
                                             
                                             
                                                M
                                                
                                                   σ
                                                   2
                                                
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               π
                                                               
                                                                  σ
                                                                  2
                                                               
                                                               
                                                                  
                                                                     
                                                                        (
                                                                        
                                                                           r
                                                                           +
                                                                           1
                                                                        
                                                                        )
                                                                     
                                                                  
                                                                  2
                                                               
                                                            
                                                            /
                                                            2
                                                         
                                                         )
                                                      
                                                   
                                                   
                                                      D
                                                      /
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             ×
                                             
                                                (
                                                
                                                   γ
                                                   V
                                                   ∘
                                                   
                                                      (
                                                      
                                                         B
                                                         ⊗
                                                         1
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      (
                                                      
                                                         1
                                                         −
                                                         γ
                                                      
                                                      )
                                                   
                                                   
                                                      1
                                                      
                                                         r
                                                         2
                                                      
                                                   
                                                   V
                                                   ∘
                                                   
                                                      (
                                                      
                                                         
                                                            B
                                                            ^
                                                         
                                                         ⊗
                                                         1
                                                      
                                                      )
                                                   
                                                
                                                )
                                             
                                             +
                                             λ
                                             K
                                             H
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              V
                              =
                              K
                              H
                              −
                              T
                              ,
                           
                        
                        
                           
                              B
                              =
                              exp
                              (
                              d
                              i
                              a
                              g
                              
                                 (
                                 
                                    V
                                    
                                       V
                                       T
                                    
                                 
                                 )
                              
                              /
                              
                                 2
                                 
                                    σ
                                    2
                                 
                              
                              )
                              ,
                           
                        
                        
                           
                              
                                 B
                                 ^
                              
                              =
                              exp
                              
                                 (
                                 d
                                 i
                                 a
                                 g
                                 
                                    (
                                    
                                       V
                                       
                                          V
                                          T
                                       
                                    
                                    )
                                 
                                 /
                                 
                                    2
                                    
                                       r
                                       2
                                    
                                    
                                       σ
                                       2
                                    
                                 
                                 )
                              
                              ,
                           
                         
                        1 is an 1 × D row vector of all ones, 
                           
                              γ
                              =
                              1
                           
                         for tj
                         ≤ (KH)
                           j
                        , and 
                           
                              γ
                              =
                              0
                           
                         for tj
                         > (KH)
                           j
                        . ○ denotes the Hadamard product and ⊗ denotes the tensor product.

However, there often exists local minima which may trap the numerical optimization. Since the large global motion or the non-rigid transformation model has high degrees of freedom. In order to escape from the trap of local minima, we adopt a coarse-to-fine manner, i.e., deterministic annealing optimization framework, which is a useful heuristic method introduced by [4]. The initial temperatures of our method is σ
                        2. Then we reduce the temperatures according to 
                           
                              
                                 σ
                                 2
                              
                              =
                              α
                              ×
                              
                                 σ
                                 2
                              
                              ,
                           
                         where α is an annealing rate in the interval [0.90, 0.99], and we set 
                           
                              α
                              =
                              0.93
                           
                         in our experiments. Note that the temperature should be set to a relatively large value to make the annealing process slow enough, in this way, we can obtain robust experimental results. Finally, the cost function will converge to an optimal solution after several iterations.

The kernel matrix [26,28] plays an important role in the regularization theory, and it provides an easy way to choose an RKHS. However, it is time consuming with the original kernel matrix in registration method, in particular, handling large amount of points. The computational complexity of our method is approximately 
                           
                              O
                              (
                              
                                 M
                                 3
                              
                              +
                              
                                 M
                                 2
                              
                              +
                              M
                              N
                              )
                           
                        . Motivated by the principle component analysis, we have an idea to use a low-rank kernel matrix to approximate the original one, because it can choose several principle feature vectors of the kernel matrix, and effectively reduce the computational complexity. Hopefully, low-rank kernel matrix approximation [29] can yield a large increase in speed with little loss in accuracy. Then the low-rank kernel matrix approximation of K can be defined as follows:

                           
                              (17)
                              
                                 
                                    
                                       min
                                       
                                          K
                                          ^
                                       
                                    
                                    
                                       
                                          ∥
                                          
                                             K
                                             −
                                             
                                                K
                                                ^
                                             
                                          
                                          ∥
                                       
                                       *
                                    
                                    ,
                                 
                              
                           
                        where ‖ · ‖* denotes L2 and Frobenius norms. 
                           
                              K
                              ^
                           
                         is the closest τ-rank matrix approximation to K, and it satisfies both L2 and Frobenius norms. Thus, we can use the matrix 
                           
                              K
                              ^
                           
                         in place of the original kernel matrix K.

Using eigenvalue decomposition of K, we obtain the approximation matrix

                           
                              (18)
                              
                                 
                                    
                                       K
                                       ^
                                    
                                    =
                                    Q
                                    Λ
                                    
                                       Q
                                       T
                                    
                                    ,
                                 
                              
                           
                        where Λ is a diagonal matrix of size τ × τ with τ largest eigenvalues, and Q is an N × τ matrix with the corresponding eigenvectors.

Based on the approximation matrix 
                           
                              
                                 K
                                 ^
                              
                              ,
                           
                         we can calculate parameter matrix 
                           
                              H
                              ^
                           
                         of size τ × D instead of the original matrix H. Thus, Eq. (13) can be rewritten as follows:

                           
                              (19)
                              
                                 
                                    v
                                    =
                                    Q
                                    Λ
                                    
                                       H
                                       ^
                                    
                                    .
                                 
                              
                           
                        
                     

Substituting Eqs. (18) and (19) into Eq. (15), the cost function of our method therefore can be rewritten as follows:

                           
                              (20)
                              
                                 
                                    
                                       E
                                       ^
                                    
                                    
                                       (
                                       
                                          
                                             H
                                             ^
                                          
                                          ,
                                          
                                             σ
                                             2
                                          
                                          ,
                                          r
                                       
                                       )
                                    
                                    =
                                    C
                                    −
                                    
                                       2
                                       M
                                    
                                    M
                                    o
                                    A
                                    G
                                    
                                       (
                                       
                                          T
                                          −
                                          U
                                          
                                             H
                                             ^
                                          
                                       
                                       )
                                    
                                    +
                                    
                                       λ
                                       2
                                    
                                    t
                                    r
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   H
                                                   ^
                                                
                                             
                                             T
                                          
                                          U
                                          
                                             H
                                             ^
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              
                                 U
                                 
                                    M
                                    ×
                                    τ
                                 
                              
                              =
                              Q
                              Λ
                           
                        .

Thus, in the optimization processing, we use the partial derivative of Eq. (20) with respect to 
                           
                              H
                              ^
                           
                         instead of the Eq. (16)
                        
                           
                              (21)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∂
                                                
                                                   E
                                                   ^
                                                
                                             
                                             
                                                ∂
                                                
                                                   H
                                                   ^
                                                
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                2
                                                U
                                             
                                             
                                                M
                                                
                                                   σ
                                                   2
                                                
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               π
                                                               
                                                                  σ
                                                                  2
                                                               
                                                               
                                                                  
                                                                     
                                                                        (
                                                                        
                                                                           r
                                                                           +
                                                                           1
                                                                        
                                                                        )
                                                                     
                                                                  
                                                                  2
                                                               
                                                            
                                                            /
                                                            2
                                                         
                                                         )
                                                      
                                                   
                                                   
                                                      D
                                                      /
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             ×
                                             
                                                (
                                                
                                                   γ
                                                   
                                                      V
                                                      ^
                                                   
                                                   ∘
                                                   
                                                      (
                                                      
                                                         P
                                                         ⊗
                                                         1
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      (
                                                      
                                                         1
                                                         −
                                                         γ
                                                      
                                                      )
                                                   
                                                   
                                                      1
                                                      
                                                         r
                                                         2
                                                      
                                                   
                                                   
                                                      V
                                                      ^
                                                   
                                                   ∘
                                                   
                                                      (
                                                      
                                                         
                                                            P
                                                            ^
                                                         
                                                         ⊗
                                                         1
                                                      
                                                      )
                                                   
                                                
                                                )
                                             
                                             +
                                             λ
                                             U
                                             
                                                H
                                                ^
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 V
                                 ^
                              
                              =
                              U
                              
                                 H
                                 ^
                              
                              −
                              T
                              ,
                           
                        
                        
                           
                              P
                              =
                              exp
                              (
                              
                                 
                                    d
                                    i
                                    a
                                    g
                                    (
                                    
                                       
                                          V
                                          ^
                                       
                                       
                                          
                                             
                                                V
                                                ^
                                             
                                          
                                          T
                                       
                                    
                                    )
                                 
                                 /
                                 
                                    2
                                    
                                       σ
                                       2
                                    
                                 
                              
                              )
                              ,
                           
                        
                        
                           
                              
                                 P
                                 ^
                              
                              =
                              exp
                              
                                 (
                                 d
                                 i
                                 a
                                 g
                                 
                                    (
                                    
                                       V
                                       ^
                                    
                                    
                                       
                                          
                                             V
                                             ^
                                          
                                       
                                       T
                                    
                                    )
                                 
                                 /
                                 
                                    2
                                    
                                       r
                                       2
                                    
                                    
                                       σ
                                       2
                                    
                                 
                                 )
                              
                              ,
                           
                        
                        
                           
                              γ
                              =
                              1
                           
                         for 
                           
                              
                                 t
                                 j
                              
                              ≤
                              
                                 
                                    (
                                    
                                       U
                                       
                                          H
                                          ^
                                       
                                    
                                    )
                                 
                                 j
                              
                              ,
                           
                         and 
                           
                              γ
                              =
                              0
                           
                         for 
                           
                              
                                 t
                                 j
                              
                              >
                              
                                 
                                    (
                                    
                                       U
                                       
                                          H
                                          ^
                                       
                                    
                                    )
                                 
                                 j
                              
                           
                        .

In practice, τ ≪ M and we set 
                           
                              τ
                              =
                              15
                           
                         in our experiments. Therefore, the computational complexity of our method will be reduced to 
                           
                              O
                              (
                              
                                 τ
                                 3
                              
                              +
                              
                                 τ
                                 2
                              
                              +
                              τ
                              N
                              )
                           
                         approximately, then it can be expressed as O(N) if the number of point set is largish. In other words, low-rank kernel matrix approximation enables our method to be applied to large point sets.

There are mainly six free parameters: the scale parameter σ
                        2, the asymmetric Gaussian weighting parameter r, the GRBF parameter β, the regularization parameter λ, the number of low-rank feature vectors τ, and the annealing parameter α, in our method.


                        Scale parameter: σ
                        2 denotes a capture range for each mixture of asymmetric Gaussian model, and we set the initial scale 
                           
                              
                                 σ
                                 2
                              
                              =
                              
                                 (
                                 
                                    1
                                    
                                       M
                                       N
                                       D
                                    
                                 
                                 )
                              
                              
                                 
                                    ∑
                                    
                                       i
                                       
                                       =
                                       
                                       1
                                    
                                    N
                                 
                                 
                                    
                                       
                                          ∑
                                          
                                             j
                                             
                                             =
                                             
                                             1
                                          
                                          M
                                       
                                       
                                          
                                             ∥
                                          
                                          
                                             (
                                             
                                                
                                                   y
                                                   i
                                                
                                                −
                                                
                                                   x
                                                   j
                                                
                                             
                                             )
                                          
                                          
                                             ∥
                                          
                                       
                                    
                                    2
                                 
                              
                           
                        .


                        Asymmetric Gaussian weighting parameter: r controls the asymmetric scale of each asymmetric Gaussian model, and r is set to 1.5.


                        GRBF parameter: β controls the structural strength of the moving point set. β produces locally smooth transformation with small values, while it produces globally translation transformation with large values. Thus, β is set to 0.8.


                        Regularization parameter: λ plays an important role to trade off the empirical risk and smoothness regularization, and λ is set to 0.1.


                        The number of low-rank feature vectors: τ is a small integer, and denotes the degree of approximation between low-rank kernel matrix and the original one. τ ≪ M, and it is set to 15.


                        Annealing parameter: α is annealing rate in the deterministic annealing framework. In order to get robust results, the annealing process is need to slow enough for the method. Due to α is normally between [0.90, 0.99], thus α is usually set to 0.93.

Point set registration algorithms usually contain iteration process, we can estimate the non-rigid transformation parameters to update and move the Model point set iteratively, until reach a given termination condition. In the deterministic annealing framework, the termination condition 
                           
                              σ
                              
                                 f
                                 i
                                 n
                                 a
                                 l
                              
                              2
                           
                         is set to 0.001 according to the initial scale σ
                        2.

The pseudo code of our non-rigid point registration method is outlined in Algorithm 1
                         (referred to as MoAGREG).

@&#EXPERIMENTS@&#

The algorithm is implemented in Matlab 2012b, and tested on a Pentium Core I5-2450 CPU with 8GB RAM.


                        Experimental data. In order to evaluate the performance of our method, we design five main experiments to demonstrate the efficiency of our method: 1) non-rigid point set registration on 2D data under degradations 
                           1
                        
                        
                           1
                           
                              http://www.cise.ufl.edu/~anand/students/chui/tps-rpm.html
                           
                        , e.g., deformation, noise, occlusion, and outlier, 2) non-rigid point set registration on 3D face data 
                           2
                        
                        
                           2
                           
                              https://sites.google.com/site/myronenko/research/cpd
                           
                        , 3) point matching on CMU house image dataset 
                           3
                        
                        
                           3
                           
                              http://vasc.ri.cmu.edu/idb/html/motion/house/
                           
                        , 4) point registration on Oxford affine covariant regions datasets 
                           4
                        
                        
                           4
                           
                              http://www.robots.ox.ac.uk/~vgg/data/data-aff.html
                           
                        , and 5) point set correspondence on wide-baseline real images [30]. Note that the point sets are normalized to zero mean and unit variance at the beginning of the experiments.


                        Comparison methods. Point set registration methods: TPS-RPM [4], L2-TPS [9], CPD [13], and RPM-L2E [10]. Graph-based matching methods: integer projected fixed point method (IPFP) [31], reweighted random walks for graph matching (RRWM) [32], and factorized graph matching (FGM) [33,34]. Feature correspondence method: random sample consensus (RANSAC) [35]. All methods are implemented in Matlab, and tested on an I5-2450 CPU with 8GB RAM.


                        Parameter setting. TPS-RPM: 
                           
                              
                                 σ
                                 
                                    i
                                    n
                                    i
                                    t
                                    i
                                    a
                                    l
                                 
                                 2
                              
                              =
                              0.5
                              ,
                           
                         iteration number 
                           
                              =
                              500
                              ,
                           
                         and annealing rate: 
                           
                              α
                              =
                              0.93
                           
                        . L2-TPS: 
                           
                              
                                 σ
                                 
                                    i
                                    n
                                    i
                                    t
                                    i
                                    a
                                    l
                                 
                                 2
                              
                              =
                              det
                              
                                 
                                    (
                                    
                                       
                                          
                                             X
                                             T
                                          
                                          X
                                       
                                       M
                                    
                                    )
                                 
                                 
                                    1
                                    /
                                    
                                       2
                                       D
                                    
                                 
                              
                              ,
                           
                        
                        
                           
                              β
                              =
                              1.0
                              ,
                           
                        
                        
                           
                              λ
                              =
                              0
                              ,
                           
                         and the max iteration number is set to 103. CPD: 
                           
                              
                                 σ
                                 
                                    i
                                    n
                                    i
                                    t
                                    i
                                    a
                                    l
                                 
                                 2
                              
                              =
                              
                                 (
                                 
                                    1
                                    
                                       
                                       
                                          M
                                          N
                                          D
                                       
                                    
                                 
                                 )
                              
                              
                                 
                                    ∑
                                    
                                       i
                                       
                                       =
                                       
                                       1
                                    
                                    N
                                 
                                 
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          M
                                       
                                       
                                          
                                             ∥
                                          
                                          
                                             (
                                             
                                                
                                                   y
                                                   i
                                                
                                                −
                                                
                                                   x
                                                   j
                                                
                                             
                                             )
                                          
                                          
                                             ∥
                                          
                                       
                                    
                                    2
                                 
                              
                              ,
                           
                        
                        
                           
                              β
                              =
                              2.0
                              ,
                           
                        
                        
                           
                              λ
                              =
                              3.0
                              ,
                           
                         outlier weighting parameter is set to 0.7 just for outlier scenarios, and the termination condition is 
                           
                              
                                 σ
                                 
                                    f
                                    i
                                    n
                                    a
                                    l
                                 
                                 2
                              
                              =
                              
                                 10
                                 
                                    −
                                    8
                                 
                              
                           
                         or iteration number 
                           
                              =
                              100
                              ,
                           
                         note that it does not use the fast Gauss transform (FGT) [36] by default. RPM-L2E: 
                           
                              
                                 σ
                                 
                                    i
                                    n
                                    i
                                    t
                                    i
                                    a
                                    l
                                 
                                 2
                              
                              =
                              0.05
                              ,
                           
                        
                        
                           
                              β
                              =
                              0.8
                              ,
                           
                        
                        
                           
                              λ
                              =
                              0.1
                              ,
                           
                         iteration number 
                           
                              =
                              20
                              ,
                           
                         and annealing rate: 
                           
                              α
                              =
                              0.5
                              ,
                           
                         note that it uses shape context (SC) [6] to estimate the correspondences iteratively. The graph matching methods keep the default parameters which are implemented by Zhou [34]. We use the RANSAC implemented by Vedaldi [37] in Matlab, and its iteration number is set to 104.


                        Evaluation criterions. Recall-precision, as well known in statistics and pattern recognition, is used to measure the relevance between results and ground-truth. Recall-accuracy curve, as used in [9,38], which denotes the ability of a registration method finding correct correspondences as many as possible with low accuracy errors. F1 measure (i.e. F1 score) is used to evaluate the balance between recall and precision. Root mean-squared error (RMSE) is used to measure the registration error.

                           
                              (22)
                              
                                 
                                    Recall
                                    =
                                    
                                       TP
                                       
                                          TP
                                          +
                                          FN
                                       
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    Precision
                                    =
                                    
                                       TP
                                       
                                          TP
                                          +
                                          FP
                                       
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       F
                                       1
                                    
                                    =
                                    
                                       
                                          2
                                          ·
                                          Precision
                                          ·
                                          Recall
                                       
                                       
                                          Precision
                                          +
                                          Recall
                                       
                                    
                                    ,
                                 
                              
                           
                        where TP denotes true positive, FP denotes false positive, and FN denotes false negative. 0 ≤ Recall ≤ 1, 0 ≤ Precision ≤ 1, and 0 ≤ F1 ≤ 1.
                        
                        
                        
                           
                              (25)
                              
                                 
                                    Error
                                    =
                                    
                                       
                                          
                                             1
                                             M
                                          
                                          
                                             ∑
                                             
                                                j
                                                
                                                =
                                                
                                                1
                                             
                                             M
                                          
                                          
                                             (
                                             
                                                
                                                   t
                                                   j
                                                
                                                −
                                                v
                                                
                                                   (
                                                   
                                                      
                                                         x
                                                         j
                                                      
                                                      ,
                                                      θ
                                                   
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where M is the total number of the estimated correspondences, and tj
                         is the ground-truth that corresponds to xj
                        .

In this section, we first present the results of point set registration methods, and then evaluate them via recall-accuracy and registration error between the transformed Model set and the fixed Scene set. Meanwhile, we compared the performance of our method against four state-of-the-art methods: TPS-RPM [4], L2-TPS [9], CPD [13], and RPM-L2E [10], which are implemented by their publicly available codes in Matlab.

We
                         tested the performance of registration method on the same data sets as used in [4,5,10] named Chui–Rangarajan synthesized data sets. Four group point sets are selected and designed to evaluate the robust performance of registration methods under degradations, such as deformation, noise, occlusion and outlier. Specifically speaking, noise is defined as white Gaussian noise with a zero mean and standard deviation from 0.01 to 0.05, which disturbs the true position of each point. Occlusion, i.e. missing points, denotes some points of one set have no corresponding points in the other set. Outlier, likes occlusion, may affect matching and registration results significantly. Note that each group of point set also has some degree of rotation (
                           
                              [
                              −
                              π
                              ,
                              π
                              ]
                           
                         approximately). Non-rigid Fish and Chinese character shape point sets are used for point set registration, respectively. There are 100 samples in each degradation level, 4000 samples in all.

16 examples of qualitative experimental results on 2D fish point set, as shown in Fig. 2, under the largest degradations of deformation (degree 0.08), noise (level 0.05), occlusion (ratio 0.5), and outlier (ratio 2.0). Deformation: the Model point set is aligned to the Scene point set, all tested methods performs well in this example. Noise: the point positions of the Scene point set are disturbed by white Gaussian noise, and all tested methods cannot align these point set pairs perfectly. Occlusion: the Model point set misses some points, and TPS-RPM, CPD, and our method perform well, while the performance of L2-TPS is affected by the missing points. Outlier: a lot of outliers are added in the Scene point set, which satisfy the Gaussian distribution, and our method aligned better than the other tested methods.

Quantitative experimental comparison results using recall-accuracy on 2D fish point set are shown in Fig. 3 under the four largest degradation scenarios. In registration methods, it is better to find all true positive correspondences with lower error. Note that all 100 examples of each degradation are tested. The comparison curves of Fig. 3 show that our method can get better recall values in most tested accuracy threshold than the other methods. RPM-L2E performs well in the case of noise, because of the robustness of shape context to some degree of noise.

Quantitative experimental comparison results using error bars on 2D fish point set are shown in Fig. 4 under all degradations. The performances of all tested methods are recognized clearly. Generally, the registration errors of all methods become large as increasing the degree of degradations. L2-TPS obtained poor performances when faced with large degradations, while the other tested methods performs well. Moreover, shape context is not robust to outliers, and then RPM-L2E obtained large errors under some degree of outliers. Relatively speaking, our method gives the best performances over all degradations in the experiment.

This point set is different from the above one (fish), and its shape point set is not well clustered. Fig. 5 shows the examples of qualitative experimental results under four degradations. Our method aligns both point sets perfectly under deformation, occlusion and outlier degradations. Although the large degree of noise also affects the accuracy of registration, our method can get better alignment than TPS-RPM, L2-TPS, and CPD.


                           Fig. 6 shows the recall-accuracy curves of TPS-RPM, L2-TPS, CPD, RPM-L2E, and our method when facing with deformation (0.08), noise (0.05), occlusion (0.5) and outlier (2.0). Those curves also demonstrate that our method gives better recall values with lower errors than the other tested methods.

Follow the above experiment, we tested 2000 pairs of Chinese character point sets, and the error bars are shown in Fig. 7. The whole tendency of error bars is similar with the results of fish point set registration, and the registration error of our method when facing with outlier are slightly higher than the above fish experiment, because those point sets are not well clustered. Fig. 7 demonstrates that our method gives the lower registration errors than the other tested methods under all degradation scenarios.

In this experiment, we use the 3D face point set as used in [13] with 392 points to test the registration method. Based on the original 3D face data structure, we constructed several point set pairs with respect to some degree of noise, occlusion and outlier. Here, we compare our method against TPS-RPM, L2-TPS, and CPD.

Qualitative experimental results are shown in Fig. 8. Our method shows accurate alignments under deformation, noise, and occlusion. The degree of deformation is small, and all tested methods obtain well performances. The performances slightly decreased when adding some degree of white Gaussian noises, while our method gets the better result. Although 100 points of the Model point set are occluded, the remaining points are also aligned perfectly to their corresponding points. Furthermore, we added 392, 588, and 784 outliers to the Scene point set randomly, and the registration results of our method are shown in Fig. 9. Registration results show that our method aligns perfectly when the Model set is contaminated with a large number of outliers.

Quantitative experimental results using recall-accuracy curves are shown in Fig. 10. The first two figures (deformation and noise) show that all tested methods get the best performances, while the other tested methods get poor performances under occlusion and outlier degradations. Our method shows the best performances under these degradations. Observe that our method is not sensitive to outliers as increasing the outlier to data ratio. Almost true corresponding points of two point set are aligned quite well and, most importantly, our method takes less than 10 s, while the naive method without low-rank approximation takes more than 20 min for about 1000 points in the experiment.

We use the CMU house sequence, which consists of 111 frames of a toy house with different viewpoints, to test our method on point matching. 30 landmarks are used to label each of the house images, in other words, all correspondences between any two frames are obtained. Fig. 11 shows a matching example using our method between frame 1 and frame 111, where the red points are the landmarks. Here, we evaluate our method against several graph matching methods: IPFP [31] initialized with spectral matching (IPFP-SM), RRWM [32], and FGM [33,34] (FGM-D for directed graphs and FGM-U for undirected graphs) under all possible frame pairs. We selected all 30 landmark points to test the matching rate between frame pairs, then we selected 25 points randomly to evaluate the matching performances of the comparison methods. Note that 25 points experiment means that consists of some outliers. The matching results are shown in Table 1
                        . All methods get the same performance under all 30 landmarks, while the graph based methods are sensitive to outliers when selecting 25 landmarks randomly. Our method performs better than the tested methods.

The Oxford affine covariant regions datasets consist of eight group of real images, and each group consists of six images. We constructed five image pairs from image 1 to image 2, 3, 4, 5, 6, respectively. Varying blur, viewpoint, scale, rotation, light, and JPEG compression between image pairs (Fig. 12).

In this experiment, we first extracted feature points from each image using SIFT (implemented by Vedaldi [37] in Matlab), then the correspondences are correctly matched by the best-bin-first (BBF) method [39]. Thus, the Model and the Scene point sets are constructed to test the registration methods: L2-TPS, CPD, and our method. Note that we randomly selected 100 points (when the number of correspondences is greater than 100), and ran for 100 times. Fig. 13 shows the performances of registration methods. Most average registration errors of our method are less than 1pixel, and our method performs better than L2-TPS and CPD in most tested scenarios.

In this experiment, we use the wide-baseline image pairs [30] to test the performance of our method on point set correspondence recovering. First, SIFT [39] feature points are extracted to construct the input point sets: the Model set and the Scene set. In addition, we use precision-recall pairs and F1 measure criterion to evaluate the performances of the tested methods: RANSAC [35] and Ma et al. [10]. The well known RANSAC is widely used to fit subspace and reject outliers, which is implemented by Vedaldi [37] in Matlab. RPM-L2E (Ma et al. [10]) based on L2E which is a very robust method to eliminate outliers in the application of mismatch removal. The threshold of our method is defined as: 
                           
                              ∑
                              
                                 (
                                 
                                    γ
                                    exp
                                    
                                       (
                                       
                                          −
                                          
                                             
                                                Y
                                                −
                                                
                                                   X
                                                   ^
                                                
                                             
                                             
                                                2
                                                
                                                   σ
                                                   
                                                      f
                                                      i
                                                      n
                                                      a
                                                      l
                                                   
                                                   2
                                                
                                             
                                          
                                       
                                       )
                                    
                                    +
                                    
                                       (
                                       
                                          1
                                          −
                                          γ
                                       
                                       )
                                    
                                    exp
                                    
                                       (
                                       
                                          −
                                          
                                             
                                                Y
                                                −
                                                
                                                   X
                                                   ^
                                                
                                             
                                             
                                                2
                                                
                                                   r
                                                   2
                                                
                                                
                                                   σ
                                                   
                                                      f
                                                      i
                                                      n
                                                      a
                                                      l
                                                   
                                                   2
                                                
                                             
                                          
                                       
                                       )
                                    
                                 
                                 )
                              
                              ≥
                              L
                           
                         , where 
                           
                              γ
                              =
                              1
                           
                         for 
                           
                              
                                 y
                                 j
                              
                              ≤
                              
                                 
                                    x
                                    ^
                                 
                                 j
                              
                              ,
                           
                         and 
                           
                              γ
                              =
                              0
                           
                         for 
                           
                              
                                 y
                                 j
                              
                              >
                              
                                 
                                    x
                                    ^
                                 
                                 j
                              
                              ,
                           
                         and our method performs well for threshold in [0.1, 0.8]. Then we set 
                           
                              L
                              =
                              0.5
                           
                         for our method to remove outliers, and the threshold of RPM-L2E is also set to 0.5. Note that the threshold decides whether a point is an inlier or not.


                        Fig. 14 shows the experimental results on 3 pairs of wide-baseline images without outliers. Our method recovers almost all correspondences, and its performance is better than RANSAC and RPM-L2E.

Then we added outliers to those image pairs from outlier to data ratio 0.1–0.9 to test the robustness of the method to outliers. In our study, the results of RPM-L2E are instable, and for instance, we run it for five times on the image pairs Tree with 43.71% outliers, and its results are (92.77%, 81.91%), (93.97%, 82.97%), (93.40%, 90.42%), (91.57%, 92.55%) and (93.25%, 88.29%), respectively. By contrast, our method can obtain well stable result (95.83%, 97.87%) and have better trade-off between precision and recall evaluation criterions. The comparison curves are shown in Fig. 15. Observed that the F1 measure curves are decreased as increasing outlier to data ratio. Our method still gives higher F1 scores than RANSAC and RPM-L2E in most tested scenarios.

@&#CONCLUSION@&#

Point set registration problem is still unsolved in computer vision, because it confronts with the challenge of degradations, such as deformation, noise, occlusion, and outlier. In this paper, we focus on the degradations, and present a novel robust point set registration method based on asymmetric Gaussian representation. We assume that the distribution of point set satisfies asymmetric Gaussian model, and a mixture of asymmetric Gaussian model (MoAG) can capture spatially asymmetric distributions. It is different from the methods, e.g., CPD and L2-TPS, which use the Gaussian mixture models (GMM) to represent the point set. We iteratively estimate the closest distance between two MoAGs by minimizing the correlation-based cost function. It is different from the methods, e.g., KC and L2-TPS, because they estimate the transformations without updating the correspondences. Both our method and TPS-RPM, a robust point set registration method, perform well with respect to degradations, but the performance of our method is better than TPS-RPM, because of the robust estimator for non-rigid transformation of our proposed method.

Our method includes three main aspects: for the point set representation, we use the mixture of asymmetric Gaussian model (MoAG) which is more accuracy than Mixture of Gaussian model [1]. For robust estimation of non-rigid transformation, we formulate point set registration as an optimization problem by the regularized least square. In RKHS, we use the Tikhonov regularization theory and the representation theorem to get the solution form of the non-rigid transformation. Gradient based numerical optimization combines the deterministic annealing scheme to search for an optimal solution, and escape the potential local minima. For reducing the computational complexity of the method, we use low-rank kernel matrix approximation as choosing the principle component to reduce the computational time. Extensive experimental results demonstrate that our method outperforms several state-of-the-art methods on 2D, 3D point sets and real image data.

@&#ACKNOWLEDGMENT@&#

This work was supported by National Natural Science Foundation of China (NSFC, No. 61103070), and Program for Young Excellent Talents in Tongji University (2013KJ008). The authors wish to acknowledge H. Chui, A. Myronenko, B. Jian, F. Zhou and J. Ma for providing their implemented source codes and test data sets.

@&#REFERENCES@&#

