@&#MAIN-TITLE@&#Abstraction of mid-surfaces from solid models of thin-walled parts: A divide-and-conquer approach

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Identification of and discussion on general issues on the existing methods for mid-surface abstraction.


                        
                        
                           
                           Adoption of the divide-and-conquer paradigm to address the issues on the mid-surface abstraction.


                        
                        
                           
                           Providing a general algorithm to abstract more complete mid-surfaces for complex solid models.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Mid-surface abstraction

Divide-and-conquer

Geometric modeling

Solid model simplification

@&#ABSTRACT@&#


               
               
                  ion of mid-surfaces from solid models of thin-walled parts is becoming a useful function for idealizing the solid models for engineering analysis. Various abstraction techniques have been developed and adapted to commercial CAD systems. However, they are generally lacking in completeness and robustness. That is, for some complex solid models, valid mid-surfaces are not created and mid-surfaces which are created may not be valid or of little use in practice. Existing techniques utilize rules and heuristics in detecting appropriate face-pairs and generating mid-surface patches, but these rules and heuristics often do not apply to complex solid models. To address this problem, a divide-and-conquer approach to mid-surface abstraction is proposed in this paper. A solid model is decomposed into simple volumes, and mid-surfaces of the simple volumes are abstracted. The mid-surfaces of the simple volumes are then composed into the mid-surfaces of the original solid model. The proposed method has been implemented and tested with practical examples. The results of case studies have been presented to attest to the usefulness of the proposed method. Some general issues on mid-surface abstraction are also discussed.
               
            

@&#INTRODUCTION@&#

These days, three-dimensional solid modeling is common in product design. The benefits of solid modeling in the design process have never been more apparent than in today’s highly competitive global market since it facilitates integrating design, analysis, and manufacturing for the management of more efficient product development. The solid model of a product contains a rich set of information sufficient for extracting useful data for geometric reasoning in many engineering analysis applications such as finite element analysis (FEA). These analysis applications help in reducing the need for expensive physical prototyping and hence reduce the product development time and cost  [1]. However, for engineering analysis, the solid model of a part designed in a 3D CAD system is often too complicated by many detailed features to get an accurate result in a timely manner. Accordingly, there has been a need to idealize or simplify the solid models for analysis while the reliability of the results is maintained.

There have been research efforts in idealizing solid models for engineering analysis  [2–16]. The research on idealization of solid models can be categorized into two major techniques  [2]. One technique centers on the solid model simplification by detailed feature removal  [3–7], while the other involves dimension reduction by transforming the solid models into surface/wire models  [8–18]. As compared to the medial surface of a solid model based on the medial axis transformation (MAT)  [15,16], which is defined as the set consisting of the centers of all maximal spheres that fits into the model, the mid-surface of a thin-walled solid model does not contain branches. For this reason, it better reflects the topology of a solid model to a greater extent than MAT and has been shown to be useful in various applications. The difference between the medial surface and the mid-surface of a model is shown in Fig. 1
                     .

A thin-walled part is the part whose thickness is small enough when compared to its width and length. Typical examples of thin-walled parts are sheet metal parts and shell-like injection-molded plastic parts as shown in Fig. 2
                     . Abstraction of mid-surfaces from solid models of thin-walled parts is an approach to dimension reduction. Since 2D meshes on surface models are easier to generate than 3D meshes on solid models and help reduce the computational time, many researchers have proposed various techniques for the abstraction of mid-surfaces from solid models of thin-walled parts  [8–13]. Fig. 3
                      shows the mid-surfaces of the thin-walled models shown in Fig. 2 and 2D meshes generated on them.

Rezayat  [8] proposed a method to automatically abstract mid-surfaces from solid models. This method first creates the face-adjacency graph that represents the relationship among connected faces and then identifies face-pairs whose distance is smaller than a specific thickness. These face-pairs are then used to create mid-surfaces by extending and stitching mid-surface patches derived from the face-pairs. This method is considered to be the first to suggest some fundamental criteria for face-pair identification and mid-surface generation, but it often fails to abstract mid-surfaces for complicated solid models due to some failures in face-pair identification. In order to address the limitation, Ramanathan et al.  [9] suggested a method to identify face-pairs using MAT, but its application is limited to planar objects. Lee et al.  [10] also proposed a method to address the problem of face-pair identification. They first search so called thickness faces and then create an edge-pair list from which a face-pair is identified. This face-pair is then used for identifying the next face-pair. This process is applied iteratively until all the face-pairs are identified. This method, however, still suffers from identifying face-pairs for the cases where the face-pairs are not sequentially connected and form branches. There were attempts to generate mid-surfaces by using negative offsetting operations  [11–13]. Sheen et al.  [11,12] introduced the feature-based solid deflation method for mid-surface abstraction. In this method, it is assumed that a solid model can be made by using air to inflate the shell that comprises the surface of a solid model while its thickness increases from zero. As a reverse process, they attempted to deflate a solid model by shrinking it to a degenerate solid model that looks like a sheet model. This deflation approach is theoretically plausible, but in actual implementation, they used approaches similar to earlier methods in generating mid-surfaces, and users are required to input information such as parting line selection to speed up the operation. Chong et al.  [14] suggested a method to abstract mid-surfaces using a solid decomposition, but instead of decomposing the entire solid model into sub-volumes, the method splits a solid model only at particular straight edges of planar faces satisfying special conditions. Meanwhile, commercial CAD companies such as Siemens and Dassault Systemes have released CAD systems providing automatic mid-surface generation functions. For example, Siemens NX has an independent menu called Mid-surface. We have tested various solid models with the system and experienced unsuccessful and incomplete results of mid-surfaces. An example of such a case is shown in Fig. 4
                     . The mid-surface abstraction techniques in commercial CAD systems are not open to the public, but they are believed to be quite similar to those of the methods mentioned above in this paper.

Various mid-surface abstraction methods have been developed. However, based on the survey on the existing methods and testing with the commercial CAD systems, it is seen that they are generally deficient in completeness. That is, valid mid-surfaces may not be abstracted, and mid-surfaces which are abstracted may not be useful in practice as solid models become increasingly complex. It appears that the main reasons for such deficiencies arise from the inaccurate identification of face-pairs and the lack of robustness in geometric operations for mid-surface generation using the face-pairs. In order to improve the completeness of mid-surface abstraction, a new divide-and-conquer based method for mid-surface abstraction from solid models of thin-walled parts is presented in this paper. The remainder of this paper is organized as follows. In Section  2, some technical issues of existing methods on mid-surface abstraction are presented. Section  3 describes the concept of the divide-and-conquer based method and the detailed techniques used to implement the concept. Section  4 presents examples and discussion. Finally, Section  5 presents the conclusions.

The two main techniques that are commonly used in mid-surface abstraction are identification of face-pairs and creation of mid-surfaces using the identified face-pairs. These two techniques are important in that they are closely related to completeness and robustness of a method and affect the quality of mid-surfaces. There are some general issues regarding these two technologies which are discussed in this section.

The initial step of mid-surface abstraction is to identify face-pairs from a solid model. A face-pair is a set of two faces that forms part of the thin walls of the solid model. This automatic pairing process is critical to the success of the subsequent operations for mid-surface algorithms. A property necessary for two arbitrary faces to be identified as a face-pair is that they must face each other in the material direction. In addition to this property, there are two criteria that are commonly used in the existing methods for judging whether two faces are a valid face-pair or not: the distance criterion and the overlap criterion.


                        
                           
                              •
                              
                                 Distance criterion
                              

Mid-surfaces are usually abstracted for thin-walled parts. Let 
                           d
                         be the minimum distance between the two faces of a face-pair. And let 
                           L
                         and 
                           H
                         represent the length and the height of a face of the face-pair, respectively. When one wants to abstract mid-surfaces for a thin-walled part whose thickness is less than a specified parameter 
                           
                              
                                 t
                              
                              
                                 
                                    min
                                 
                              
                           
                        , the two faces of a face-pair should satisfy the following conditions: 
                           
                              
                                 (1)
                                 
                                    d
                                    ≤
                                    
                                       
                                          t
                                       
                                       
                                          
                                             min
                                          
                                       
                                    
                                 
                              
                              
                                 (2)
                                 
                                    min
                                    
                                       (
                                       L
                                       ,
                                       H
                                       )
                                    
                                    /
                                    d
                                    >
                                    X
                                    ,
                                    
                                    1.2
                                    ≤
                                    X
                                    ≤
                                    3
                                    .
                                 
                              
                           
                        
                     

The condition (1) is obvious. For example, when 
                           
                              
                                 t
                              
                              
                                 
                                    min
                                 
                              
                           
                           =
                           2
                        , both the cases in Fig. 5
                        (a) and (b) are to be considered as the mid-surfaces of the solid model. However, the case in Fig. 5(a) is preferred since it is the mid-surface of the thinner section and represents a better abstraction of the model. The condition (2) is used to select such face-pairs from others  [8]. In the condition, 
                           min
                           
                              (
                              L
                              ,
                              H
                              )
                           
                           /
                           d
                         should be greater than 
                           X
                        . The value of 
                           X
                         is arbitrary to define thin-wall sections and thick-wall sections, but it should be greater than 1 for a face-pair to represent a thin-wall section. It is usually set to 1.2–3. For example, the value of 
                           min
                           
                              (
                              L
                              ,
                              H
                              )
                           
                           /
                           d
                         is 2 in the case of Fig. 5(a) and it is 0.5 in the case of Fig. 5(b). So the case in Fig. 5(a) is identified as a face-pair.

The distance criterion is useful for face-pair identification and has been widely adopted in earlier research and commercial CAD systems. However, there are cases where some valid face-pairs are not identified with this criterion. For example, the value of 
                           min
                           
                              (
                              L
                              ,
                              H
                              )
                           
                           /
                           d
                         for the face A and the face B in Fig. 6
                        (a) is 0.875 so they are not identified as a valid face-pair. This results in the incomplete mid-surfaces as shown in Fig. 6(b). The complete and valid mid-surface for the model should be the one shown in Fig. 6(c). This inconsistency of the distance criterion is an issue to be properly addressed.


                        
                           
                              •
                              
                                 Overlap criterion
                              


                        Let 
                        
                           
                              
                                 F
                              
                              
                                 a
                              
                           
                         
                        and 
                        
                           
                              
                                 F
                              
                              
                                 b
                              
                           
                         
                        represent two arbitrary faces of a solid model. For 
                        
                           
                              
                                 F
                              
                              
                                 a
                              
                           
                         
                        and 
                        
                           
                              
                                 F
                              
                              
                                 b
                              
                           
                         
                        to be the faces of a face-pair, there must be an intersection when 
                        
                           
                              
                                 F
                              
                              
                                 a
                              
                           
                         
                        is projected onto 
                        
                           
                              
                                 F
                              
                              
                                 b
                              
                           
                         
                        along a direction normal to the face, or vice versa.
                     

The overlap criterion is used to exclude invalid face-pairs such as the case shown in Fig. 7
                        . In this case, the face C and the face F can be identified as a face-pair with the distance criterion. However, this is not a desirable result of mid-surface abstraction. To avoid such cases, the overlap criterion has been commonly adopted to earlier methods. In actual implementation, ray-casting is generally used. If a ray cast from a face in a direction normal to the face hits another face of the same geometry type at the nearest distance, the two faces may be a valid face-pair. Otherwise, they are not a valid face-pair. In some cases, however, this essential overlap criterion is not helpful for identifying valid face-pairs. With the criterion, for example, only the two face-pairs (A–B) and (C–D) are identified for the solid model in Fig. 8
                        . The face-pair (E–F), which is actually a valid face-pair, is not identified as a valid one since there is no intersection when the face E is projected onto face F along a direction normal to the face. This is another issue to be addressed.

Creation of mid-surfaces using the identified face-pairs is a difficult process. In general, mid-surfaces are created by generating offset surfaces, trimming the offset surfaces to make mid-surface patches, extending the mid-surface patches, and finally stitching the patches. In many of the earlier methods, an offset surface is trimmed by projecting the edges of the face-pair onto the surface and discarding unnecessary portions. For example, the mid-surface patches S1–S4 in Fig. 9
                        (a) are created by trimming the offset surfaces by projecting the edges of the faces of the face-pairs (A–B), (C–E), (D–E), and (F–G), respectively. These mid-surface patches are then extended to be properly intersected with adjacent patches. Fig. 9(b) shows the extensions of the mid-surface patches S1–S4. The extended mid-surface patches are finally stitched completing the mid-surface of the model as shown in Fig. 9(c).

The extension of mid-surface patches is not a straightforward process and is the most complicated part in creating mid-surfaces using face-pairs. Various techniques such as face adjacency graphs  [10] and use of MAT  [9] have been adopted, yet they are not robust and often end up with invalid and incomplete mid-surfaces for complex solid models. Topological changes occur when faces of a solid model are transformed to mid-surface patches. These topological changes make it difficult to correctly extend the mid-surfaces to form accurate intersections.

In the previous section, some issues on the existing methods for mid-surface abstraction were discussed. These issues often cause some problems for complex solid models, resulting in mid-surfaces which are invalid or of little use. Each of the existing methods suggest a technique for improving the completeness and robustness of the algorithm for mid-surface abstraction, but they still have some limitations. A main reason for the limitations arises from the following two facts. First, there is no formal, concrete definition of mid-surface. Such a definition may be possible for a simple solid model, but it is unclear for complex solid models. There can be alternative ways of defining mid-surfaces for complex solid models. The benefit of each alternative can be measured differently according to personal preferences or the result of actual engineering analysis. Second, as a consequence of the first fact, most of the existing methods are based on heuristics. The distance and overlap criteria explained in the previous section, for example, are the heuristics employed to select face-pairs of particular cases. These criteria work well for simple solid models, but they often do not work for complex solid models. Incorporation of additional heuristics and the use of more intensive geometric reasoning may help with identifying particular cases of face-pairs to some extent, but continually coming up with case-specific methods seems problematic.

The divide-and-conquer approach is a paradigm that solves a problem by first breaking it down into sub-problems that are themselves smaller instances of the same type of problem, then solving these sub-problems, and finally combining their answers to produce the solution of the original problem. In solid modeling, adding simple volumes, which are often called primitives or design features, is a natural way to construct complex solid models. Feature-based CAD systems utilize this methodology so that users can create solid models more intuitively and also modify the models more easily afterwards. Conversely, research has been carried out that decomposes a complex solid model into simpler volumes that correspond to primitives or design features  [19–22]. For simple solid models, identification of face-pairs and creation of mid-surfaces using the face-pairs becomes more straightforward.

Therefore, we propose a divide-and-conquer-based method to automatically abstract mid-surfaces from solid models. This method first decomposes a solid model into sub-volumes called maximal volumes. Then the mid-surfaces are abstracted for each maximal volume. The mid-surfaces of the maximal volumes are finally used to compose the mid-surface of the original solid model. With this approach, identification of face-pairs becomes clearer and the difficult process of trimming and extending the mid-surface patches can be avoided. The overall procedure for the proposed method is presented in Fig. 10
                     . Each step of the method is explained in detail in the following sub-sections.

A difficulty of mid-surface abstraction from a solid model arises when the solid model is complex. The complexity of a solid model usually increases as the solid model has more concave edges. When a solid model can be decomposed into simpler volumes whose union is the solid model, it becomes legitimate to attempt to generate mid-surfaces using the simpler volumes. There are several existing methods to decompose a solid model into simpler volumes. Among them, the maximal volume decomposition [17–19] is adopted in this research. Formally, a volume 
                           V
                         is a maximal volume (MV) of a solid model 
                           S
                         if 
                           V
                         satisfies the following conditions:


                        
                           
                              (1)
                              
                                 
                                    V
                                    ⊆
                                    S
                                 ,

each of the halfspaces of 
                                    V
                                  is a halfspace of 
                                    S
                                 ,


                                 
                                    V
                                  has no concave edges,

for each maximal face of 
                                    V
                                 , there exists a face of 
                                    S
                                  such that the intersection of the faces is a two manifold with a boundary, and


                                 
                                    V
                                    ⊄
                                    A
                                 , where 
                                    A
                                  is a volume that satisfies the above conditions.

Maximal face in condition (4) is defined as the union of the faces of 
                           V
                         that share the same halfspace. The process of maximal volume decomposition is comprised of the generation of cells and the composition of the cells into maximal volumes. For example, the solid model in Fig. 11
                        (a) is decomposed into 8 cells by intersecting the halfspaces of the solid model as shown in Fig. 11(b). In the next step, the cells are composed into maximal volumes. In Fig. 11(c), cells 2, 3, 5 and 7 are composed into the volume v1, cells 1, 3 and 4 are composed into the volume v2, and cells 6, 7 and 8 are composed into the volume v3. Each of these three volumes is a maximal volume of the solid model since it satisfies the conditions. However, volumes v2–v5 in Fig. 11(d) are not maximal volumes of the solid model since a halfspace of the volumes is not a halfspace of the solid model.


                        Fig. 12
                         presents additional examples of maximal volume decomposition. For the model in Fig. 12(b), MV1 and MV2 may be sufficient for some applications in that the union of the two maximal volumes is the solid model. However, it should be noted that the definition of maximal volumes does not pose any condition such that the number of maximal volumes must be minimized. In this case, maximal volume decomposition does generate MV3 as well since it satisfies the conditions. It is admitted that a maximal volume necessary for an application may be redundant for other applications. For this reason, research has been done for selecting non-redundant maximal volumes called effective maximal volumes  [21]. In this paper, however, the mid-surface of a solid model is abstracted by using the maximal volumes of the solid model, not the effective maximal volumes. Details of the maximal volume decomposition are available in the Refs. [19–21]. As shown in the figure, the maximal volumes are simple so it is easier to abstract the mid-surfaces for them.

The existing techniques for identification of face-pairs are used in this research  [8,10]. Since the maximal volumes of a solid model are simple in shape, the identification of face-pairs for maximal volumes is more explicit. In addition, the extension of faces in maximal volume decomposition restores parts of the faces that vanished during the modeling operations. These restored faces on maximal volumes are beneficial for identifying face-pairs that are often impossible to detect for the original solid model. For example, (face A–face B) in the solid model in Fig. 6 are not identified as a face-pair due to the distance criterion, and (face E–face F) in the solid model in Fig. 8 are not identified as a face pair either due to the overlap criterion. However, as shown in Fig. 12(a) and (b), the maximal volumes maintain their extended faces and they can be identified as valid face-pairs with the criteria. Fig. 12(c) is another example of maximal volume decomposition. For the first maximal volume of the solid model in Fig. 12(c), the three face-pairs are identified as shown in Fig. 13
                        (a).

Once face-pairs have been identified for a maximal volume, the mid-surfaces are generated for the maximal volume. This is achieved by first creating the offset surface using the face-pair and then intersecting it with the maximal volume. In the next step, the mid-surfaces for all the face-pairs are united by Boolean operations. But as shown in Fig. 13(b), these uniting operations may end up with some unnecessary mid-surface patches for a maximal volume. For a mid-surface patch of a maximal volume to be recognized as a necessary one, it should not be intersected with a face of any face-pairs. For example, the mid-surface patch B in Fig. 13(d) is an unnecessary patch since it is intersected with a face of the face-pair (a–d). Similarly, the mid-surface patches C, E, and F are unnecessary patches. Such unnecessary mid-surface patches are recognized and discarded. The mid-surfaces of the maximal volumes in Fig. 12(c) are shown in Fig. 14
                        .

Once the mid-surfaces for each of the maximal volumes have been generated, they are composed of the mid-surface of the original solid model. First, the mid-surfaces of all the maximal volumes are united by Boolean operations. However, as shown in Fig. 15
                        , not all the mid-surface patches resulting from the union operations are valid for the original solid model. These kinds of invalid mid-surface patches should also be recognized and discarded. Recognition of invalid mid-surface patches is not clear since there is no difference between valid and invalid mid-surface patches in terms of topology. For example, the solid model in Fig. 16
                        (a) is decomposed into three maximal MV1–MV3 and the mid-surfaces of the maximal volumes are united as shown in Fig. 16(b). In this case, all the mid-surface patches except for P3b are topologically identical, but only the patch P1b is invalid since retaining it results in an improper mid-surface for the solid model.

For a mid-surface patch to be valid, there should be in the solid model a unique portion that corresponds to the mid-surface patch. In other words, if faces of the original model that correspond to a mid-surface patch exist, it is a valid mid-surface patch. Otherwise, it is an invalid mid-surface patch. For example, there is no face of the solid model that corresponds to the patch P1b, while the faces f1 and f2 of the solid model correspond to the patch P2b. The second column of Table 1
                         shows the faces of the solid model corresponding to the mid-surface patches shown in Fig. 16(d). Based on this observation, we have developed a method to recognize invalid mid-surface patches by considering the existence of a unique portion in the solid model for a mid-surface patch. During the mid-surface abstraction step for maximal volumes presented in Section  3.2, the ownership of each mid-surface patch associated with maximal volumes is logged and attached as an attribute to the patch. This attribute is retained even for splitting actions occurring during the Boolean union operations. For example, the ownership attributes for the mid-surfaces patches in Fig. 16(e) are shown in the third column of Table 1. If a mid-surface patch becomes null when subtracting all the maximal volumes except for the owner maximal volume from the mid-surface patch, it is recognized as an invalid mid-surface patch and removed. Otherwise, it is a valid mid-surface patch. With this method, the invalid mid-surface patch P1b in Fig. 16(d) is recognized and removed. The final mid-surface abstraction for the solid model in Fig. 12(c) is depicted in Fig. 17
                        . Fig. 18
                         shows the pseudo-code for the method to recognize invalid mid-surface patches.

@&#RESULTS AND DISCUSSION@&#

The method presented in this paper has been implemented as a system using C/C++ with the ACIS  [23] geometric modeling kernel running on a Windows PC. The input to the system is a solid model and no user interaction is required. Various solid models have been tested with the system and some of them are shown in Fig. 18. As shown in the figure, the proposed method automatically abstracts the mid-surfaces for the solid models successfully. It is noted that these are the solid models for which Siemens NX fails to abstract valid mid-surfaces. Table 2
                      shows the time elapsed for abstracting mid-surfaces for the models in Fig. 19
                     . The system has been implemented on a 3.1 GHz Intel Core i5 CPU machine with 4 GB RAM.

The maximal volume decomposition is a well-established method both theoretically and practically. It is also known that the maximal volume decomposition is computationally expensive when the number of cells increases, but as shown in Table 2 the mid-surfaces for the example parts have been abstracted in a reasonable time. Additionally, in terms of completeness, this method is more general, less dependent on rules and heuristics, and applicable to a broader range of real parts.

It is acknowledged that the mid-surface has desirable properties as an abstraction of a solid model and is commonly used in the area of engineering analysis, but it is also true that the lack of formal definition of the mid-surface makes it difficult to develop a more complete and more robust method. One of the difficulties in formally defining mid-surfaces is that the abstraction of mid-surfaces of a solid model is often not unique. There can be alternative abstractions of mid-surfaces for a solid model, and this hinders the provision of a clear definition of mid-surfaces that returns a consistent result for an arbitrary model. For example, for the solid model in Fig. 20
                     (a), there exist multiple possibilities of mid-surface abstraction as shown in Fig. 20(b). The answer to the question as to which is a better abstraction is fairly subjective, but the first one may be more plausible than the others. If the second one is judged as a better abstraction, then we need to consider extra geometry, i.e., faces of the thick wall section, which are not faces of face-pairs and to develop a different algorithm to achieve that. Consequently, it may be impossible to develop a method that fully automates the abstraction of mid-surfaces from solid models. It is believed that user interventions are somehow necessary for particular cases. Therefore, for a mid-surface abstraction method to be practically useful, it needs to be capable of abstracting the mid-surfaces from which alternative representations can be generated.

Currently the method is limited to the solid models consisting of analytical surfaces only. Maximal volume decomposition is based on the extension of faces to generate cells. However, since there is no unique way of extending a face of a free-form surface, maximal volume decomposition for a solid model with free-form surface has not been implemented yet. In addition, the existing technique for face-pair identification proposed by Rezayat  [8] has been adopted in this research and has been currently implemented for parallel face-pairs. It is necessary to enhance the face-pair identification by considering feature information in order to identify non-parallel or variable thickness face-pairs such as slanted faces created by sweeping with a draft angle or tapering. To identify such non-parallel face-pairs, feature information and modeling history may need to be considered.

As described earlier, the method has been developed to generate mid-surfaces from solid models of thin-walled parts. Therefore, it is acknowledged that application of the method to solid models of non-thin-walled or partially thin-walled parts can lead to improper mid-surfaces. Fig. 21
                      shows some examples of such cases. As shown in Fig. 21(c), the mid-surfaces are not proper abstractions for engineering analysis. The hybrid models consisting of solids and mid-surfaces shown in Fig. 21(d) are considered as better abstractions. Although the method currently cannot produce such hybrid models, it is believed that it can be extended to do so.

@&#CONCLUSION@&#

This paper has presented a divide-and-conquer-based method to mid-surface abstraction from solid models. A complex solid model is decomposed into simple volumes and the mid-surfaces for the solid model are abstracted by using the simple volumes. The method is more general in that no additional case-specific rules and heuristics are required for identifying face-pairs from a complex solid model. In addition, it is more robust in that it does not involve the complicated trimming and extending operations for mid-surface patches. Some technical issues have been discussed. The results of case studies have also been presented to attest to the effectiveness of the method. Overall, the performance and completeness of the proposed method demonstrates its potential for representing alternative mid-surface abstractions.

It is also acknowledged that the ability to identify face-pairs from the simple maximal volumes is still fundamental to the success of the method and a failure in identifying appropriate face-pairs can lead to an invalid abstraction. As a new method, it may not be perfectly general to accommodate every kind of real industrial model and there may exist some limitations that as of yet have not been discovered. However, this research is not final and we will continue to enhance the method as the research progresses.

@&#ACKNOWLEDGMENT@&#

This research was financially supported by Hansung University.

@&#REFERENCES@&#

