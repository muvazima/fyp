@&#MAIN-TITLE@&#Approximate decomposition methods for the analysis of multicommodity flow routing in generalized queuing networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The paper deals with network routing in generalized open queuing networks (OQN).


                        
                        
                           
                           Most studies in the literature assume Poissonian hypotheses to route flows in OQN.


                        
                        
                           
                           Poissonian assumptions are not suitable for analysis of flows in generalized OQN.


                        
                        
                           
                           We merge routing and approximate decomposition in a multicommodity flow algorithm.


                        
                        
                           
                           The proposed algorithm leads to much more accurate flow routing in generalized OQN.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Networks

Queuing

Generalized open queuing networks

Multicommodity flows

Approximate decomposition methods

@&#ABSTRACT@&#


               
               
                  In this study we deal with network routing decisions and approximate performance evaluation approaches for generalized open queuing networks (OQN), in which commodities enter the network, receive service at one or more arcs and then leave the network. Exact performance evaluation has been applied for the analysis of Jackson OQN, where the arrival and service processes of the commodities are assumed to be Poisson. However, the Poisson processes’ hypotheses are not a plausible or acceptable assumption for the analysis of generalized OQN, as their arrival and service processes can be much less variable than Poisson processes, resulting in overestimated system performance measures and inappropriate flow routing solutions. In this paper we merge network routing algorithms and network decomposition methods to solve multicommodity flow problems in generalized OQN. Our focus is on steady-state performance measures as average delays and waiting times in queue. The main contributions are twofold: (i) to highlight that solving the corresponding multicommodity flow problem by representing the generalized OQN as a Jackson OQN may be a poor approximation and may lead to inaccurate estimates of the system performance measures, and (ii) to present a multicommodity flow algorithm based on a routing step and on an approximate decomposition step, which leads to much more accurate solutions. Computational results are presented in order to show the effectiveness of the proposed approach.
               
            

@&#INTRODUCTION@&#

In this study we deal with routing multicommodity flows in open queuing networks (OQN) in which commodities enter the network, receive service at one or more arcs and leave the network. There are different studies in the literature representing manufacturing, distribution, communication and other systems as OQN, e.g., Buzacott and Shanthikumar (1993), Gershwin (1993), Nakano and Ohno (1999), Bitran and Morabito (1999), Kerbache and Smith (2000), Ouorou, Mahey, and Vial (2000), Warsing, Souza, and Greis (2001), Kerbache, Norbis, and Gonzalez (2004), Kerbache and Smith (2004), Azaron, Katagiri, Kato, and Sakawa (2006), Ouorou (2007), Wille, Mellia, Leonardi, and Marsan (2009), Smith (2010), Smith, Cruz, and van Woensel (2010), Koo, Koh, and Lee (2011), Liu, Yang, Wan, and Fowler (2011), Bedell and Smith (2012), Ishfaq and Sox (2011), Wu and McGinnis (2012, 2013) and the references therein.


                     Kerbache and Smith (2000) addressed the problem of optimal routing in generalized queueing networks arising in the context of material handling. The physical material handling system is broken down into a set of layout topologies, and the problem is multi-objective since the product throughput is maximized while minimizing the average sojourn time and holding costs. The authors proposed a methodology combining optimization and analytical queueing network models to select the set of routes that would minimize the routing costs as well as the average sojourn times for each product class. Related research in routing was developed for flexible manufacturing systems (Yao & Buzacott, 1985); for production and manufacturing settings (Daskalaki & Smith, 1989); and for emergency evacuation (Bakuli & Smith, 1996; Stepanov & Smith, 2009). Kerbache and Smith (2004) examined a hierarchy of linked supply chain modelling systems to support operational, tactical and strategic decision making. The authors developed analytical queueing networks coupled with nonlinear optimization methods to design supply chain topologies and evaluate their various performance measures.

The motivation from the modelling point of view for this study comes from data communication networks. In this context, an important problem in packet-switched computer networks consists in determining routes on which packets have to be transmitted in order to optimize a performance measure on quality of service when operating the network; see, e.g., Kleinrock (1964), Fratta, Gerla, and Kleinrock (1973), Gerla and Kleinrock (1977), Bertsekas and Gafni (1983), Bertsekas and Gallager (1987), Gavish and Neuman (1989), Chifflet, Mahey, and Reyner (1994), Mahey, Ouorou, LeBlanc, and Chifflet (1998), Ouorou et al. (2000), Ouorou (2007), de Souza, Mahey, and Gendron (2008), Wille et al. (2009).

The network is represented by a directed graph, and it is given a set of ordered origin–destination node pairs. An origin node “creates” a traffic demand (for example, compressed video images) to be sent through the network and “consumed” at the destination node. Thus, between each pair there is a traffic, measured in data units/time units, entering and exiting the network at the origin and destination, respectively. The traffic can be decomposed into packets which can take any number of routes to flow from its origin node to its destination node. A route is an elementary path on the graph representing the network. Denoting by i
                     1 the origin node, and by i
                     
                        b
                      the destination node, an elementary path from i
                     1 to i
                     
                        b
                      is a sequence i
                     1
                     −(i
                     1,
                     i
                     2)−
                     i
                     2
                     −(i
                     2,
                     i
                     3)−…−(i
                     
                        b−1,
                     i
                     
                        b
                     )−
                     i
                     
                        b
                      of b nodes and b
                     −1 arcs on the graph starting at i
                     1 and ending at i
                     
                        b
                      without any repetition of nodes or arcs. It may happens b
                     =2, and the path consists of two nodes and a single arc; otherwise, a node i
                     
                        a
                     , a
                     =2,…,
                     b
                     −1 is said to be an intermediate node. To be transmitted from i
                     1 to i
                     
                        b
                     , a packet may wait in queue at node i
                     1 to go through arc (i
                     1,
                     i
                     2), then may wait in queue at node i
                     2 to go through arc (i
                     2,
                     i
                     3), and so on throughout the route until reach node i
                     
                        b
                     .

We take into account modelling assumptions that have been considered in the literature on optimization of packet-switched networks cited above. It has been considered that between each pair of nodes there is only one arc in the network, and that it transmits one packet at a time. An arc corresponds to a machine in a more usual queuing context (a detailed correspondence between network flows and queuing networks terminologies is provided in Section 2). Thus, the model has a single server, i.e., an arc, at each station that treats one recipe at a time. Because every route on which packets go through are elementary paths, the network is no reentrant. The problem is modelled as an open queuing network since packet-switched networks operate on a point-to-point basis, i.e., a traffic entering the network is sent to an specific destination where it exits the network (the transmission is finished after reaching the destination node). For such reason, even though the queuing literature have a number of studies representing systems as closed queuing networks, in which for each external departure there is an external arrival so that the number of customers in the network remains constant, we keep the focus of the present study upon an open queuing model. We also remark that, to the best of our knowledge, multicommodity flow problems in packet-switched networks have been usually studied in the literature considering unlimited buffer at the nodes of the network.

Average delay has been extensively used as a major system performance measure in data communication networks. The literature on optimization of packet-switched networks has been concentrated so far on Jackson networks (Jackson, 1957, 1963), where the arrival and service processes are assumed to be Poisson. And exact performance evaluation has been applied, as each arc of the network can be analysed individually as a stochastically independent M/M/1 queuing system. Consequently, the resulting multicommodity flow problems arising from optimization studies on packet-switched networks have nonlinear convex costs separable on each arc, which allows the use of efficient methods (Ouorou et al., 2000).

In many systems, however, the Poisson processes’ hypotheses may not be a plausible or acceptable assumption. We believe that multicommodity flow problems subjected to less variable arrival and/or service processes than the Poisson process are worth studying. Certainly, flow problems in an environment where the variabilities of the interarrival and service times are higher than Poisson processes (i.e., with squared coefficients of variation higher than 1) merit attention, but our focus on this paper are on less variable processes than Poisson and, as far as we know, this is one of the first studies of this kind in the multicommodity flow routing literature. Manufacturing, distribution, communication and other systems have in general arrival and service processes less variable than the Poisson process and the representation of these systems as Jackson networks generally results in overestimated performance measures, e.g., Bitran and Tirupati (1988); Jiang and Giachetti (2008); Silva and Morabito (2009).

In the absence of exact methods for the analysis of generalized OQN where the interarrival and service times have general probability distributions, different authors have developed approximate methods for performance measures evaluation of these networks. Two relevant approaches for generalized OQN are based on the stochastic independence (Whitt, 1983a, 1983b, 1984) and heavy traffic (Harrison & Nguyen, 1990) assumptions. Both of them rely on the independence assumption either directly or indirectly as the heavy traffic approach relies on the functional central limit theorem. In particular, approximate decomposition methods have been largely used (Bitran & Morabito, 1996; Buzacott & Shanthikumar, 1992; Disney & Konig, 1985; Whitt, 1984), which is also based on the stochastic independence assumption. For instance, Bitran and Morabito (1996) reviewed developments of such methods combining them with mathematical programming techniques in optimization problems for the design and planning of discrete manufacturing systems (job shop systems in particular). The studied manufacturing systems are analysed as single or multiple product class generalized OQN with deterministic and probabilistic routing. In general the decisions are not in optimizing the flow routing, but rather: (i) in minimizing total capacity investments at the network workstations subject to attaining a targeted network performance measure (e.g., a targeted work-in-process level or product leadtime), and (ii) in optimizing system performance levels subject to budget constraints (e.g., for the resource costs and capacity investments at the workstations) (Bitran & Morabito, 1996, 1999). Other studies appear in Wu and McGinnis (2012, 2013) based on the concept of the intrinsic ratio, which gives reliable waiting time approximations for OQN.

In this paper we cope with network routing decisions and approximate performance evaluation approaches for generalized OQN. Our aim here is to merge routing algorithms and approximate decomposition methods to solve multicommodity flow problems in generalized OQN. Our focus is on steady-state performance measures as average delays and waiting times in queue. The main contributions of this study are twofold: (i) to highlight that solving a multicommodity flow problem by representing the network as a Jackson OQN, as it is common in literature, may be a poor approximation and may lead to inaccurate estimates of the system performance measures if the network is in fact a generalized OQN, and (ii) to propose a multicommodity flow algorithm based on a routing step and on a performance evaluation by approximate decomposition step, which leads to much more accurate performance measure estimates for generalized OQN. We are not aware of other studies in the literature exploring this line of research.

The paper is structured as follows. In Section 2 we briefly define the network flow routing problem, present an arc-path multicommodity flow model and discuss Jackson and generalized OQN. We also illustrate the correspondence between the terminologies of queuing networks and multicommodity network flows. In Section 3 we present a pseudo-code of the proposed approach based on a cycle cancelling algorithm for the convex multicommodity flow problem and on three different approximate decomposition methods for performance evaluation of generalized OQN. In Section 4 we analyse the numerical results of computational experiments evaluating the benefits of the proposed approach with respect to the traditional approach based on the assumption of a Jackson network and the use of the Kleinrock’s average delay function. Finally, in Section 5 we present our concluding remarks and discuss perspectives for future research.

In the multicommodity flow model, any kind of traffic between a given pair of nodes is treated as a separate commodity k, k
                     =1,…,
                     K, which is distinguished by an origin–destination pair (s
                     
                        k
                     ,
                     t
                     
                        k
                     ) and a demand requirement r
                     
                        k
                     
                     ⩾0. This model has two main assumptions: (i) the demand for a commodity k can be fractionated and each portion sent by a different route from its origin s
                     
                        k
                      to its destination t
                     
                        k
                     , and (ii) a unit of flow of each commodity k uses one unity of capacity of each arc on its route. The underlying network topology is represented by a digraph G
                     =(V,
                     A) with n nodes and m arcs. Each arc j
                     ∈
                     A has a capacity u
                     
                        j
                      that restricts the total flow, denoted by x
                     
                        j
                     , on j (Ahuja, Magnanti, & Orlin, 1993; Assad, 1978). Let us define P
                     
                        k
                      as the set of directed paths joining the corresponding origin and destination nodes (s
                     
                        k
                     ,
                     t
                     
                        k
                     ) of commodity k, and let x
                     
                        kp
                      be the amount of its flow routed in path p
                     ∈
                     P
                     
                        k
                     . A path can be identified by its arc-path incidence vector 
                        
                           
                              
                                 ξ
                              
                              
                                 kp
                              
                              
                                 j
                              
                           
                        
                      defined by
                        
                           
                              
                                 
                                    ξ
                                 
                                 
                                    kp
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                1
                                                ,
                                             
                                             
                                                if
                                                
                                                arc
                                                
                                                j
                                                
                                                is
                                                
                                                in
                                                
                                                path
                                                
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                                ,
                                             
                                          
                                          
                                             
                                                0
                                                ,
                                             
                                             
                                                otherwise
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     The arc-path multicommodity flow model is then formulated as follows:
                        
                           (1)
                           
                              
                                 min
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       m
                                    
                                 
                              
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              )
                           
                        
                     
                     
                        
                           (2)
                           
                              s.t.
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       K
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       p
                                       ∈
                                       
                                          
                                             P
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    ξ
                                 
                                 
                                    kp
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    kp
                                 
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              m
                           
                        
                     
                     
                        
                           (3)
                           
                              
                              
                              
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       p
                                       ∈
                                       
                                          
                                             P
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    kp
                                 
                              
                              =
                              
                                 
                                    r
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                              k
                              =
                              1
                              ,
                              …
                              ,
                              K
                           
                        
                     
                     
                        
                           (4)
                           
                              
                              
                              
                              
                              
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              ⩽
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                              
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              m
                           
                        
                     
                     
                        
                           (5)
                           
                              
                              
                              
                              
                              
                              
                                 
                                    x
                                 
                                 
                                    kp
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              ⩾
                              0
                              ,
                              
                              k
                              =
                              1
                              ,
                              …
                              ,
                              K
                              ;
                              
                              ∀
                              p
                              ∈
                              
                                 
                                    P
                                 
                                 
                                    k
                                 
                              
                              ;
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              m
                              .
                           
                        
                     
                  

In this model, the objective function (1) is the sum of individual arc-cost functions. Constraints (2) are the coupling constraints since K independent single commodity flow problems are obtained when (2) are relaxed. Constraints (3) guarantee that the total of the demand of each commodity k will be sent from its origin to its destination. Constraints (4) are the bundle constraints that limit the total flow on each arc to its capacity. Finally, constraints (5) refer to the domains of the variables.

Let us suppose that the capacity u
                     
                        j
                      of each arc j
                     =(w,
                     v)∈
                     A is given by the average number of physical units that can be sent from w to v per unit of time. We also assume that a commodity-k demand expresses the average number of units to be sent from s
                     
                        k
                      to t
                     
                        k
                      per unit of time. Depending on the traffic intensity, arrivals of commodity’s units at a node requiring the service of being transmitted through an arc to another node can give rise to congestion phenomena. Multicommodity flows in networks submitted to queuing effects have been addressed with the Kleinrock’s average delay function as arc-costs (Bertsekas & Gafni, 1983; Bertsekas & Gallager, 1987; Chifflet et al., 1994; de Souza et al., 2008; Fratta et al., 1973; Gavish & Neuman, 1989; Gerla & Kleinrock, 1977; Kleinrock, 1964; Mahey et al., 1998; Ouorou, 2007; Ouorou et al., 2000). The cost of an arc j is proportional to
                        
                           (6)
                           
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              )
                              =
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          j
                                       
                                    
                                    -
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                        
                     with the flow x
                     
                        j
                      on arc j being measured by the arrival rate per unit of time at node w. The derivation of this function assumes that all arrival and service processes in the network are Poisson (Kleinrock, 1964, 1975).

Let us consider now that commodities run through a generalized queuing network. That is, an environment where the interarrival times of commodity’s units to be sent from origin to destination pairs and the transmission times through arcs are not necessarily exponentially distributed. As arrival and service processes may not be Poisson, the Kleinrock arc-cost function given by (6) might not be an adequate and accurate performance measure.

To tackle the problem in generalized OQN, first we make the relation between the usual notations in the network flows literature and in the queuing networks literature. Fig. 1
                      presents an example of a feasible multicommodity routing using the terminology of network flows context. Consider a network with n
                     =4 nodes and m
                     =6 arcs (represented by solid lines), in which the following three commodities must be routed:
                        
                           
                              
                                 
                                    
                                    
                                       
                                          k
                                          =
                                          1
                                          →
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          =
                                          1
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          =
                                          4
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          k
                                          =
                                          2
                                          →
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                          =
                                          1
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          =
                                          3
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          k
                                          =
                                          3
                                          →
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                          =
                                          3
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                3
                                             
                                          
                                          =
                                          4
                                          )
                                       
                                    
                                 
                              
                           
                        
                     As mentioned in the previous section, multicommodity flow models usually consider one arc between each pair of nodes. An arc (i,
                     j) can be viewed as a machine that performs a service process to a traffic arriving at a node i to be transmitted to a node j, so the model has a single server at each station that treats one recipe at a time. The decision in multicommodity flow problems is precisely on which paths use to route flows. Fig. 1 shows an example where the paths employed to route the commodities are represented by dotted lines: for k
                     =1 two paths are employed, one goes through node 2 and other through node 3; for k
                     =2 two paths are also employed, one goes through node 2 and other directly through arc (1,3); for k
                     =3 only one path through node 2 is employed. The paths shown illustrate that every route on which packets go through are elementary paths, so the network is no reentrant.

On the other hand, Fig. 2
                      shows the same example given in Fig. 1 using the terminology of queuing networks. In this figure each one of the six stations corresponds to an arc in Fig. 1, and it is identified by (w,
                     v) where w and v are the leaving and entering nodes of the arc in Fig. 1, respectively. An arc joining stations (w,
                     v) and (v,
                     q) in Fig. 2 means that, in Fig. 1, a commodity k can go through arc (v,
                     q) after reaching node v through arc (w,
                     v). Note that a path p of a commodity k follows a sequence of stations in Fig. 2, which corresponds to the sequence of arcs composing p in Fig. 1. For instance, the sequence of arcs (1,2) and (2,4) in Fig. 1 (i.e., one of the paths of commodity k
                     =1) corresponds to the path that visits first station (1,2) and then station (2,4) in Fig. 2 (i.e., k
                     =1, p
                     =1).

A multicommodity routing algorithm for queuing networks relies on the performance evaluation of a given flow feasible to constraints (2)–(5). As discussed before, when all the arrival and service processes are Poisson, the performance in such a M/M/1 OQN can be obtained directly by the sum on the arcs of expression (6). On the other hand, for a generalized network, analytical expressions are not available or are very difficult to derive and compute. In such a GI/G/1 OQN, a multicommodity routing algorithm should have a procedure for the performance evaluation of a given flow feasible to constraints (2)–(5). Given a commodity k, each path p in P
                     
                        k
                      defines a sequence of stations to be visited in a route from commodity k’s origin to its destination. In this way, as the values of x
                     
                        kp
                     , p
                     ∈
                     P
                     
                        k
                     , k
                     =1,…,
                     K, are fixed, we can apply an approximate decomposition method to evaluate the performance of a multiple-class GI/G/1 OQN with deterministic routings. To do this, we treat each commodity as a different class, and each path as a subclass of the commodity. Table 1
                      summarizes the input data for a performance evaluation procedure, and the correspondence between the network flows and the queuing networks terminologies.

We propose an algorithmic approach in two main steps to deal with the multicommodity flow problem in generalized OQN: the use of an approximate decomposition method to evaluate the performance measures, and the use of a cycle cancelling algorithm to route the flows. Performance evaluation methods for the analysis of generalized OQN can be classified as: exact methods, approximate methods and simulation and related techniques (Bitran & Tirupati, 1988; Govil & Fu, 1999; Suri, Sanders, & Kamath, 1993). Different approximate methods were proposed in the literature to evaluate generalized OQN using decomposition methods, e.g., Kouvelis and Tirupati (1991); Buzacott and Shanthikumar (1993); Suri et al. (1993); Nakano and Ohno (1999); Shanthikumar and Xu (2000); Warsing et al. (2001); Souza, Wagner, and Whybark (2001); Souza, Ketzenberg, and Guide (2002); Souza and Ketzenberg (2002); Chao, Liu, and Zheng (2003); Ketzenberg, Souza, and Guide (2003); Kerbache and Smith (2004); Jeong, Cho, and Phillips (2008); Jiang and Giachetti (2008). In Section 3.1 we present approximate decomposition methods to estimate ca
                     
                        j
                     , the variability of the interarrival times on arc j, given a feasible flow (Bitran & Morabito, 1996; Disney & Konig, 1985; Whitt, 1983a, 1984). This variability is defined as the squared coefficient of variation of the interarrival times at arc j. In Section 3.2 we present the cycle cancelling algorithm proposed by Ouorou and Mahey (2000) to obtain a new feasible flow based on the previously computed variabilities. Using the estimate of ca
                     
                        j
                      and the feasible flow obtained, we compute the system performance measure as 
                        
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 1
                              
                              
                                 m
                              
                           
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                           (
                           
                              
                                 x
                              
                              
                                 j
                              
                           
                           ,
                           
                              
                                 ca
                              
                              
                                 j
                              
                           
                           )
                        
                     , where f
                     
                        j
                      is the arc-cost of arc j, now defined also as a function of ca
                     
                        j
                     .

The pseudo-code of the multicommodity flow algorithm for generalized OQN is as follows:
                        
                           
                              Step 0.
                           Find an initial flow x
                              0 feasible to constraints (2)–(5). Compute, with respect to x
                              0, the values of 
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                       
                                          0
                                       
                                    
                                 
                               by solving the system of equations associated with the chosen approximate decomposition method (Section 3.1) and then 
                                 
                                    
                                       
                                          f
                                       
                                       
                                          j
                                       
                                    
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                       
                                          0
                                       
                                    
                                    ,
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                       
                                          0
                                       
                                    
                                    )
                                 
                               for j
                              =1,…,
                              m. Set t
                              =1.

Obtain a feasible flow x
                              
                                 t
                               by applying the cycle cancelling algorithm (Section 3.2) considering x
                              
                                 t−1 as the initial flow and arc-cost functions 
                                 
                                    
                                       
                                          f
                                       
                                       
                                          j
                                       
                                    
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                    
                                    ,
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                       
                                          t
                                          -
                                          1
                                       
                                    
                                    )
                                 
                              .

Compute, with respect to x
                              
                                 t
                              , the values of 
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                 
                               by solving the system of equations associated with the chosen approximate decomposition method and then 
                                 
                                    
                                       
                                          f
                                       
                                       
                                          j
                                       
                                    
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    ,
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                               for j
                              =1,…,
                              m.

If 
                                 
                                    |
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    -
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                       
                                          t
                                          -
                                          1
                                       
                                    
                                    |
                                    ⩽
                                    ∊
                                 
                               for j
                              =1,…,
                              m, then stop. Otherwise, set t to t
                              +1 and return to Step 1.


                     Steps 1–3 correspond to the algorithm’s main loop. It is a primal method, as each solution in the process is generated along a feasible descent direction. Basically, in each iteration t, the procedure finds the optimal route x
                     
                        t
                      with respect to the mean waiting time in queue, considering the estimates of the variabilities of the interarrival times ca
                     
                        t−1, computed with the flow obtained in the previous iteration. Step 1 consists in applying the cycle cancelling algorithm to solve the convex multicommodity flow problem, in which the cost of each arc j is given by f
                     
                        j
                     (x
                     
                        j
                     ,
                     ca
                     
                        j
                     ), fixing each ca
                     
                        j
                      to 
                        
                           
                              
                                 ca
                              
                              
                                 j
                              
                              
                                 t
                                 -
                                 1
                              
                           
                        
                     , and subject to constraints (2)–(5). In Step 2, the procedure updates the estimates of the variation of the interarrival times for ca
                     
                        t
                     , by solving a system of equations in flow x
                     
                        t
                     , and computes the mean waiting time 
                        
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                           (
                           
                              
                                 x
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           ,
                           
                              
                                 ca
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                      for each arc j. The procedure iterates until the absolute value of the difference of the ca
                     
                        j
                     ’s between two successive iterations is within a tolerance ∊ for all j
                     ∈
                     A.

In this section we present three different approximate decomposition methods for generalized OQN based on Whitt (1983a); Whitt (1983b); Bitran and Tirupati (1988); Segal and Whitt (1989); Bitran and Morabito (1996), which are based on stochastic independence assumptions that the interarrival times are renewal. The completed decomposition procedure of these three methods is essentially described in three major steps: (i) analysis of interaction between stations of the network, (ii) evaluation of performance measures at each station, and (iii) evaluation of performance measures for the whole network. Step (i) determines the internal arrival flows for each station. Steps (ii) and (iii) compute the performance measures for each station separately and for the whole network, respectively. The presentation of each of the three approximate decomposition methods requires the development of systems of equations, which is briefly done in this section.

Except for Jackson networks, these methods may introduce relatively large approximate errors when the variabilities of the arrival and service processes are small. They are used in Steps 0 and 2 of the pseudo-code presented above in order to estimate 
                           
                              
                                 
                                    ca
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                           
                         of arc j at iteration t. These 
                           
                              
                                 
                                    ca
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                           
                         are estimated only for the arcs with strictly positive flow 
                           
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                           
                         on it at iteration t. This study extends the one of Morabito and de Souza (2010) where preliminary experiments were performed with one of these three approximate decomposition methods. The three methods use a procedure to aggregate all classes in a single one proposed initially by Whitt (1983a). This procedure enable us to compute a performance measure for each station j separately as a function of the aggregate expected arrival rate 
                           
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                           
                        . Such a measure would furnish the multicommodity flow model with a separable function of the total flow on the arcs, as required in (1), reflecting congestion effects in generalized OQN.


                        Step (i) mentioned above is fundamental to compute performance measures for each station separately and it involves three basic processes (Govil & Fu, 1999; Silva & Morabito, 2009; Whitt, 1983a): superposition of arrivals, departure, and splitting of departures. Fig. 3
                         illustrate these processes. In the following, for simplicity we omit the index of iteration t in the notations. Each station j is described by the aggregate expected arrival rate x
                        
                           j
                         and the aggregate interarrival time variability ca
                        
                           j
                        , besides parameters u
                        
                           j
                         and the variability of the service time of arc j, cs
                        
                           j
                         (i.e., the squared coefficient of variation of the service times of arc j). Under the assumption of steady state, the aggregate expected arrival rate x
                        
                           j
                         is given by Eq. (2). The expected utilization of station j is defined by 
                           
                              
                                 
                                    ρ
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                        .

An approximation to the aggregate interarrival time variability ca
                        
                           j
                         is computed by linear systems known as traffic variability equations described below, see, e.g., Bitran and Morabito (1996); Bitran and Morabito (1999) and the references therein for details. These approximations combine variations of two basic methods: the asymptotic method and the stationary interval method. These methods are also known as macro and micro, respectively, due to the macroscopic and microscopic view of the arrival process (Whitt, 1983a, 1983b). The asymptotic method, in a tentative of considering the dependence between successive interarrival times, takes a macroscopic view of the arrival process and tries to describe its behaviour in a time interval relatively long. On the other hand, the stationary interval method ignores any dependence in the arrival process and takes a microscopic view to describe the process behaviour in a time interval relatively short. It can be shown (Kingman, 1965; Whitt, 1983a, 1984) that the asymptotic method (macro) is asymptotically correct for a GI/G/1 system as the expected utilization of the station, ρ, tends to 100% of its capacity (i.e., under heavy traffic intensity, ρ
                        →1), while the stationary interval method (micro) is asymptotically correct as the number of arrival processes at the station tends to infinity, when the superposition of these processes tends to a Poisson process.

In the first approximate decomposition method (Approximation 1), the traffic variability equations form a linear system describing a relationship between the aggregate interarrival time variability ca
                           
                              j
                           , the interarrival time variability at station j from station i, ca
                           
                              ij
                           , and the interdeparture time variability from station j, cd
                           
                              j
                           .

The first of the traffic variability equations comes from the superposition of the arrival processes (see Fig. 3). By simplifying an approximation to ca
                           
                              j
                            proposed by Albin (1982); Whitt (1983b) obtained a relationship between ca
                           
                              j
                            and the interarrival time variability from the other stations superposed. Given two stations i and j, let 
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       kp
                                    
                                    
                                       ij
                                    
                                 
                              
                            be equal to 1 if stations i and j correspond to two subsequent arcs in path p of commodity k, and 0 otherwise. Consider that 
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       kp
                                    
                                    
                                       0
                                       j
                                    
                                 
                              
                            is equal to 1 if j is the first arc in path p of commodity k, and 0 otherwise. Then, the relationship obtained by Whitt (1983b) is the following
                              
                                 (7)
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             0
                                          
                                          
                                             m
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                ij
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          ca
                                       
                                       
                                          ij
                                       
                                    
                                    +
                                    1
                                    -
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           where
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          1
                                          +
                                          4
                                          
                                             
                                                (
                                                1
                                                -
                                                
                                                   
                                                      ρ
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                          (
                                          
                                             
                                                v
                                             
                                             
                                                j
                                             
                                          
                                          -
                                          1
                                          )
                                       
                                    
                                    
                                    and
                                    
                                    
                                       
                                          v
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                0
                                             
                                             
                                                m
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ∑
                                                               
                                                               
                                                                  k
                                                                  =
                                                                  1
                                                               
                                                               
                                                                  K
                                                               
                                                            
                                                            
                                                               
                                                                  ∑
                                                               
                                                               
                                                                  p
                                                                  ∈
                                                                  
                                                                     
                                                                        P
                                                                     
                                                                     
                                                                        k
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  ξ
                                                               
                                                               
                                                                  kp
                                                               
                                                               
                                                                  ij
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  kp
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

By assuming that station j is not saturated, i.e., ρ
                           
                              j
                           
                           <1, and the system is in steady state, the aggregate expected departure rate is equal to x
                           
                              j
                           . The interdeparture time variability cd
                           
                              j
                            of the departure process from station j depends upon the expected waiting time in queue at station j itself. By using an approximation for the expected waiting time in queue at station j given in (Kleinrock, 1975; Marshall, 1968); Whitt (1983a) derived an approximation for cd
                           
                              j
                            as a convex combination of ca
                           
                              j
                            and cs
                           
                              j
                           . Thus, the second of the traffic variability equations related to the departure process (see Fig. 3) is written as follows
                              
                                 (8)
                                 
                                    
                                       
                                          cd
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          ρ
                                       
                                       
                                          j
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          cs
                                       
                                       
                                          j
                                       
                                    
                                    +
                                    (
                                    1
                                    -
                                    
                                       
                                          ρ
                                       
                                       
                                          j
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           Note that in this approximation the interdeparture time variability cd
                           
                              j
                            tends to the service time variability cs
                           
                              j
                            as far as the expected utilization increases.

The traffic variability equations system is completed with the analysis of the splitting of the departure process (see Fig. 3). The equation below defines the relationship between the interdeparture time variability ca
                           
                              ji
                            from station j to station i with the aggregated interdeparture time variability cd
                           
                              j
                           , see, e.g., Kuehn (1979); Whitt (1983a),
                              
                                 (9)
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          ji
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                ji
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          cd
                                       
                                       
                                          j
                                       
                                    
                                    +
                                    1
                                    -
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                ji
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           The variability of the external interarrival times at arc j, ca
                           0j
                           , which is an input parameter of the linear system (7)–(9) in ca
                           
                              j
                           , can be computed by
                              
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          0
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             K
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             p
                                             ∈
                                             
                                                
                                                   P
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                0
                                                j
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                q
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                l
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      q
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ξ
                                             
                                             
                                                ql
                                             
                                             
                                                0
                                                j
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                ql
                                             
                                          
                                       
                                    
                                    
                                       
                                          ca
                                       
                                       
                                          kp
                                       
                                    
                                    +
                                    1
                                    -
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           where
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          1
                                          +
                                          4
                                          
                                             
                                                (
                                                1
                                                -
                                                
                                                   
                                                      ρ
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                          (
                                          
                                             
                                                v
                                             
                                             
                                                j
                                             
                                          
                                          -
                                          1
                                          )
                                       
                                    
                                    
                                    and
                                    
                                    
                                       
                                          v
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ξ
                                                               
                                                               
                                                                  kp
                                                               
                                                               
                                                                  0
                                                                  j
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  kp
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  ∑
                                                               
                                                               
                                                                  q
                                                                  =
                                                                  1
                                                               
                                                               
                                                                  K
                                                               
                                                            
                                                            
                                                               
                                                                  ∑
                                                               
                                                               
                                                                  l
                                                                  ∈
                                                                  
                                                                     
                                                                        P
                                                                     
                                                                     
                                                                        q
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  ξ
                                                               
                                                               
                                                                  ql
                                                               
                                                               
                                                                  0
                                                                  j
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  ql
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           where ca
                           
                              kp
                            is the variability of the external interarrival times of subclass kp. We note that ca
                           
                              kp
                            is not an input data, as it depends on the decisions of which paths to route the flows of commodity k in the OQN. In this study we explore two alternatives to estimate ca
                           
                              kp
                            as a function of the input data ca
                           
                              k
                            (i.e., the variability of the external interarrival times of class k at the network). These alternatives are
                              
                                 (10)
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          kp
                                       
                                    
                                    =
                                    
                                       
                                          ca
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                    ∀
                                    p
                                    ∈
                                    
                                       
                                          P
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                           
                           
                              
                                 (11)
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          kp
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                r
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                    
                                       
                                          ca
                                       
                                       
                                          k
                                       
                                    
                                    +
                                    1
                                    -
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                r
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                              
                           The second approximated decomposition method (Approximation 2) is based on Bitran and Tirupati (1988). The traffic variability equations form a linear system describing a relationship between the aggregate interarrival time variability ca
                           
                              j
                           , the interarrival time variability of subclass kp at station j, ca
                           
                              kpj
                           , and the interdeparture time variability from station j,cd
                           
                              j
                           .

The first of the traffic variability equations coming from the superposition of the arrival processes is defined as
                              
                                 (12)
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             K
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             p
                                             ∈
                                             
                                                
                                                   P
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                j
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          ca
                                       
                                       
                                          kpj
                                       
                                    
                                    +
                                    1
                                    -
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       ξ
                                    
                                    
                                       kp
                                    
                                    
                                       j
                                    
                                 
                              
                            is equal to 1 if arc j is on path p of commodity k, and 0, otherwise, and
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          1
                                          +
                                          4
                                          
                                             
                                                (
                                                1
                                                -
                                                
                                                   
                                                      ρ
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                          (
                                          
                                             
                                                v
                                             
                                             
                                                j
                                             
                                          
                                          -
                                          1
                                          )
                                       
                                    
                                    
                                    and
                                    
                                    
                                       
                                          v
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ξ
                                                               
                                                               
                                                                  kp
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  kp
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           The interdeparture time variability cd
                           
                              j
                            of the departure process from station j is also given by (8) of Approximation 1. The last traffic variability equation related to the splitting of the departure process is defined by
                              
                                 (13)
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          kpj
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                
                                                   
                                                      ϕ
                                                   
                                                   
                                                      kp
                                                   
                                                
                                                (
                                                j
                                                )
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                
                                                   
                                                      ϕ
                                                   
                                                   
                                                      kp
                                                   
                                                
                                                (
                                                j
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                          cd
                                       
                                       
                                          
                                             
                                                ϕ
                                             
                                             
                                                kp
                                             
                                          
                                          (
                                          j
                                          )
                                       
                                    
                                    +
                                    
                                       
                                          
                                             1
                                             -
                                             
                                                
                                                   
                                                      
                                                         ξ
                                                      
                                                      
                                                         kp
                                                      
                                                      
                                                         
                                                            
                                                               ϕ
                                                            
                                                            
                                                               kp
                                                            
                                                         
                                                         (
                                                         j
                                                         )
                                                      
                                                   
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         kp
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         
                                                            
                                                               ϕ
                                                            
                                                            
                                                               kp
                                                            
                                                         
                                                         (
                                                         j
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                
                                                   
                                                      ϕ
                                                   
                                                   
                                                      kp
                                                   
                                                
                                                (
                                                j
                                                )
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                
                                                   
                                                      ϕ
                                                   
                                                   
                                                      kp
                                                   
                                                
                                                (
                                                j
                                                )
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                1
                                                -
                                                
                                                   
                                                      
                                                         
                                                            ξ
                                                         
                                                         
                                                            kp
                                                         
                                                         
                                                            
                                                               
                                                                  ϕ
                                                               
                                                               
                                                                  kp
                                                               
                                                            
                                                            (
                                                            j
                                                            )
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            kp
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            
                                                               
                                                                  ϕ
                                                               
                                                               
                                                                  kp
                                                               
                                                            
                                                            (
                                                            j
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          ca
                                       
                                       
                                          kp
                                          
                                             
                                                ϕ
                                             
                                             
                                                kp
                                             
                                          
                                          (
                                          j
                                          )
                                       
                                    
                                 
                              
                           where ϕ
                           
                              kp
                           (j) is the predecessor of arc j on path p of commodity k. We note that if arc j is the first on path p of commodity k, then Eq. (13) is replaced by ca
                           
                              kpj
                           
                           =
                           ca
                           
                              kp
                           . As in Approximation 1, we also explore the same two alternatives (10) and (11) to estimate ca
                           
                              kp
                            as a function of the input data ca
                           
                              k
                           .

Finally, the third approximated decomposition method (Approximation 3) used in this study, based on Segal and Whitt (1989), involves the aggregate interarrival time variability ca
                           
                              j
                           , the interarrival time variability at station j from station i,ca
                           
                              ij
                           , and the interdeparture time variability from station j,cd
                           
                              j
                           .

The first and second traffic variability equations coming from the superposition of the arrival processes and the departure process are the same as the ones of Approximation 1 (i.e. (7) and (8)). The last traffic variability equation related to the splitting of the departure process is defined by
                              
                                 (14)
                                 
                                    
                                       
                                          ca
                                       
                                       
                                          ji
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                ji
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          cd
                                       
                                       
                                          j
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                1
                                                -
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            k
                                                            =
                                                            1
                                                         
                                                         
                                                            K
                                                         
                                                      
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            p
                                                            ∈
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ξ
                                                         
                                                         
                                                            kp
                                                         
                                                         
                                                            ji
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            kp
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          ce
                                       
                                       
                                          j
                                       
                                    
                                    +
                                    
                                       
                                          
                                             1
                                             -
                                             
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         k
                                                         =
                                                         1
                                                      
                                                      
                                                         K
                                                      
                                                   
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         p
                                                         ∈
                                                         
                                                            
                                                               P
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         ξ
                                                      
                                                      
                                                         kp
                                                      
                                                      
                                                         ji
                                                      
                                                   
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         kp
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                ji
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           where
                              
                                 
                                    
                                       
                                          ce
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                j
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                          
                                             
                                                ca
                                             
                                             
                                                kp
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                K
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                p
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ξ
                                             
                                             
                                                kp
                                             
                                             
                                                j
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kp
                                             
                                          
                                       
                                    
                                 
                              
                           As in Approximations 1 and 2, we also explore the same two alternatives (10) and (11) to estimate ca
                           
                              kp
                            as a function of the input data ca
                           
                              k
                           .


                           Table 2
                            summarizes the equations forming the traffic variability system associated with each approximation considered in this study.

The superposition of arrivals, departures and splitting of departures processes allow us to decompose the queuing network into a collection of individual stations, each one described by {x
                           
                              j
                           , ca
                           
                              j
                           , u
                           
                              j
                           , cs
                           
                              j
                           }. The aggregate flow x
                           
                              j
                            is given by (2), ca
                           
                              j
                            by the linear system associated with the chosen approximation, and u
                           
                              j
                            and cs
                           
                              j
                            are input data. Performance measures can therefore be evaluated independently for each station. This means that, given a flow feasible to constraints (2)–(5), we can have an approximation to the queuing delay for transmitting flow on arc j. The cost given by (1) of such a feasible solution would be the summation of the expected waiting time in the GI/G/1 queue associated to arc j, defined as follows (Whitt, 1983a) (This approximation originates from Kraemer & Lagenbach-Belz (1976) for a GI/G/1 queuing system and was then simplified by (Whitt, 1983a). Hence, it is not designed for OQN with non-renewal arrival process and only gives an approximation based on the stochastic independence assumption.):
                              
                                 (15)
                                 
                                    
                                       
                                          f
                                       
                                       
                                          j
                                       
                                    
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                ρ
                                             
                                             
                                                j
                                             
                                          
                                          (
                                          
                                             
                                                ca
                                             
                                             
                                                j
                                             
                                          
                                          +
                                          
                                             
                                                cs
                                             
                                             
                                                j
                                             
                                          
                                          )
                                          g
                                          (
                                          
                                             
                                                ρ
                                             
                                             
                                                j
                                             
                                          
                                          ,
                                          
                                             
                                                ca
                                             
                                             
                                                j
                                             
                                          
                                          ,
                                          
                                             
                                                cs
                                             
                                             
                                                j
                                             
                                          
                                          )
                                       
                                       
                                          2
                                          
                                             
                                                u
                                             
                                             
                                                j
                                             
                                          
                                          (
                                          1
                                          -
                                          
                                             
                                                ρ
                                             
                                             
                                                j
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           where
                              
                                 
                                    g
                                    (
                                    
                                       
                                          ρ
                                       
                                       
                                          j
                                       
                                    
                                    ,
                                    
                                       
                                          ca
                                       
                                       
                                          j
                                       
                                    
                                    ,
                                    
                                       
                                          cs
                                       
                                       
                                          j
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      exp
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     -
                                                                     2
                                                                     (
                                                                     1
                                                                     -
                                                                     
                                                                        
                                                                           ρ
                                                                        
                                                                        
                                                                           j
                                                                        
                                                                     
                                                                     )
                                                                     
                                                                        
                                                                           (
                                                                           1
                                                                           -
                                                                           
                                                                              
                                                                                 ca
                                                                              
                                                                              
                                                                                 j
                                                                              
                                                                           
                                                                           )
                                                                        
                                                                        
                                                                           2
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     3
                                                                     
                                                                        
                                                                           ρ
                                                                        
                                                                        
                                                                           j
                                                                        
                                                                     
                                                                     (
                                                                     
                                                                        
                                                                           ca
                                                                        
                                                                        
                                                                           j
                                                                        
                                                                     
                                                                     +
                                                                     
                                                                        
                                                                           cs
                                                                        
                                                                        
                                                                           j
                                                                        
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      ,
                                                   
                                                   
                                                      if
                                                      
                                                      
                                                         
                                                            ca
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      <
                                                      1
                                                   
                                                
                                                
                                                   
                                                      1
                                                      ,
                                                   
                                                   
                                                      otherwise
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           Note that if interarrival and service times are exponentially distributed (Poisson process), then ca
                           
                              j
                            and cs
                           
                              j
                            are both equal to 1, and (15) yields 
                              
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             ρ
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             j
                                          
                                       
                                       (
                                       1
                                       -
                                       
                                          
                                             ρ
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                 
                              
                           , i.e., to each arc j is associated an M/M/1 queue and the arc-cost function f
                           
                              j
                            is proportional to 
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             j
                                          
                                       
                                       -
                                       
                                          
                                             x
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                              
                           , as stated by (6).

It is worth remarking that the three approximate decomposition methods for generalized OQN described in this section can be straightforwardly extended to deal with multiple servers (instead of single server) at each station of the OQN, as pointed out in, e.g., Whitt (1983a); Whitt (1983b); Whitt (1984); Bitran and Tirupati (1988); Segal and Whitt (1989); Bitran and Morabito (1996).

The arc-cost function in Jackson networks has nice properties: it is a proper convex continuously differentiable function which is everywhere finite value, and it increases to infinity as the flow on the arc approaches its capacity. Based on these properties, Ouorou and Mahey (2000) derived a cycle cancelling algorithm for solving nonlinear convex multicommodity flow problems. Their method relies on the structure of the problem since it iteratively improves a feasible flow routing.

We apply the cycle cancelling algorithm proposed by Ouorou and Mahey (2000) to minimize the sum of the arc-cost functions (15) with the values of ca
                        
                           j
                         fixed by the approximate decomposition method for each arc j, subject to constraints (2)–(5). The cycle cancelling algorithm solves the resulting multicommodity flow problems since, for each arc j,f
                        
                           j
                         given by (15) with ca
                        
                           j
                         fixed is a proper convex differentiable function acting as a barrier that prevents the flow on j from approaching its capacity. The method makes descent steps that involve altering one commodity flow at a time around a negative-cost cycle.

A cycle is a sequence of nodes and arcs of G, i.e., i
                        1, j
                        1, i
                        2, j
                        2,…,
                        i
                        
                           p−1, j
                        
                           p−1, i
                        
                           p
                        , j
                        
                           p
                        , without any repetition, and such that j
                        
                           l
                         is either (i
                        
                           l
                        ,
                        i
                        
                           l+1) or (i
                        
                           l+1,
                        i
                        
                           l
                        ) for l
                        =1,…,
                        p
                        −1, and j
                        
                           p
                         is either (i
                        
                           p
                        ,
                        i
                        1) or (i
                        1,
                        i
                        
                           p
                        ). Given a cycle Θ of G and an arbitrary sense of circulation, we can partition the arcs of Θ in two subsets of arcs: the set Θ
                        + of forward arcs which are in the same sense of the circulation, and the set Θ
                        − of backward arcs which are in the sense contrary to the circulation. Considering a feasible flow on G, i.e., flow values of x
                        
                           j
                         and x
                        
                           kp
                         satisfying constraints (2)–(5), a cycle Θ is called kp-feasible if it presents a strictly positive residual – if we can augment the commodity flow x
                        
                           kp
                         on the forward arcs and reduce it on the backward arcs. Its cost is given by
                           
                              (16)
                              
                                 c
                                 (
                                 x
                                 ,
                                 Θ
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          
                                             
                                                Θ
                                             
                                             
                                                +
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                    
                                       ′
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          
                                             
                                                Θ
                                             
                                             
                                                -
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       f
                                    
                                    
                                       j
                                    
                                    
                                       ′
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 )
                              
                           
                        where f′
                           j
                         is the first derivative of f
                        
                           j
                        .

We can pass from one feasible flow on G to another by performing a cancelling operation on a kp-feasible cycle Θ, i.e., by pushing a positive amount α of flow around Θ. This means that we increase (resp. decrease) by α the commodity k’s flow, and hence the total flow, on the forward (resp. backward) arcs of Θ. Thus, roughly speaking, each iteration of the cycle cancelling algorithm consists of finding a kp-feasible negative-cost cycle Θ, and then performing a cancelling operation on it. The algorithm stops, with an optimal solution x
                        ∗, when there is no kp-feasible negative-cost cycle, i.e., c(x
                        ∗,
                        Θ)⩾0 for all kp-feasible cycle Θ.

In this section we report results of computational experiments performed to assess the accuracy of the proposed multicommodity flow algorithm for generalized OQN using the three approximate performance evaluation methods: Approximations 1, 2 and 3, c.f., Table 2. The algorithm was implemented in C-language, gcc compiler version 4.1.3, in an Intel Core 2 Duo 1.66gigahertz, 2gigabyte RAM, running Linux. The proximal decomposition algorithm proposed by Mahey et al. (1998) to solve convex multicommodity flow problems is used to obtain an optimal routing for the M/M/1 case, i.e., for ca
                     
                        k
                     
                     =1 and cs
                     
                        j
                     
                     =1. This solution is taken as initial routing for the approximate performance evaluation methods for generalized OQN, c.f., Section 3.


                     Tables 3–6
                     
                     
                     
                      in the sequel have all the same structure. The first and second columns show different values considered for arrival and service processes’ variabilities, ca
                     
                        k
                      and cs
                     
                        j
                     , respectively. We developed a discrete simulation model to simulate feasible routings. The probability distributions used in the simulation were: exponential, Erlang of order 2 and Erlang of order 4 to the variability parameters 1, 0.5 and 0.25, respectively. The model was developed using the GPSS/H simulation software to perform 30 independent replications, each one generating a total of 200,000 commodity arrivals. The first 100,000 arrivals of each replication were disregarded in a tentative to avoid the effects of transient states (warm up period). We use the pseudo-random generator of GPSS/H based on the Lehmer algorithm (Schriber, 1991). To ensure independence between the 30 replications, all interarrival and service times of the commodities were sorted from different positions of the 231
                     −1 sequence numbers (generated by the Lehmer algorithm). The average of the mean waiting times in these replications are used to evaluate the quality of the approximations obtained with the multicommodity flow algorithm for generalized OQN.

The literature to route multicommodity flows in queuing networks use as arc-costs the Kleinrock’s average delay function (6), c.f., Section 2. In this way, the models are implicitly considering a Jackson OQN (here named Jackson procedure). A matter of concern is if such a procedure remains suitable when the actual variability of external interarrival times of each commodity and/or of service times no longer satisfy the hypotheses of Jackson networks. A main purpose of our study is to emphasize that applying Jackson procedure for the analysis of generalized OQN, where Poissonian hypotheses do not hold, can imply in important inaccuracies. Associated with each table there is only one solution given by Jackson procedure, as it assumes ca
                     
                        k
                     
                     =1 and cs
                     
                        j
                     
                     =1 even if this is not the case. Thus, the third column Jg (%) shows deviations in percentage between the expected waiting time given by Jackson procedure and the average of mean waiting times by simulating the flow routing obtained by Jackson procedure but taking as input each different combination of values for ca
                     
                        k
                      and cs
                     
                        j
                     .

The Jackson procedure is exact to the case where ca
                     
                        k
                     
                     =1 and cs
                     
                        j
                     
                     =1, and this is taken as the initial routing for the approximate performance evaluation methods for generalized OQN in the remaining cases with ca
                     
                        k
                     
                     <1 and/or cs
                     
                        j
                     
                     <1. For instance, the cases with ca
                     
                        k
                     
                     =0.5 might be representing networks with all arrival processes described by Erlang probability distributions of order 2, while the cases with cs
                     
                        j
                     
                     =0.25, networks with all service processes as Erlang distributions of order 4. Then we report results using approximations 1, 2 and 3, denoted in the tables by Approx 1, Approx 2 and Approx 3, respectively. Subcolumns OQN
                     1,OQN
                     2 and OQN
                     3 of columns Approx 1, Approx 2, Approx 3, respectively, show the solution values obtained with the multicommodity flow algorithm for generalized OQN taking as input different values for ca
                     
                        k
                      an cs
                     
                        j
                     . Subcolumns Sim show the average of mean waiting times by simulating the flow routing given by the algorithm for generalized OQN using the correspondent approximation. Finally, subcolumns g (%) present deviation in percentage between the results reported in subcolumns OQN and Sim.

In a first set of experiments, we use as example a small network with n
                     =6 nodes and m
                     =20arcs. Fig. 4
                      illustrates this simple multicommodity flow example where every arc j has the same capacity u
                     
                        j
                     
                     =4, and K
                     =4 commodities are distinguished by the following origin–destination pairs:
                        
                           
                              
                                 
                                    
                                    
                                       
                                          k
                                          =
                                          1
                                          →
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          =
                                          1
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          =
                                          5
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          k
                                          =
                                          2
                                          →
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                          =
                                          1
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          =
                                          6
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          k
                                          =
                                          3
                                          →
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                          =
                                          3
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                3
                                             
                                          
                                          =
                                          6
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          k
                                          =
                                          4
                                          →
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          =
                                          5
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                4
                                             
                                          
                                          =
                                          6
                                          )
                                       
                                    
                                 
                              
                           
                        
                     We first consider that the demands of all commodities k are equal, given by r
                     
                        k
                     
                     =2 (the total demand is 
                        
                           
                              
                                 ∑
                              
                              
                                 k
                                 =
                                 1
                              
                              
                                 K
                              
                           
                           
                              
                                 r
                              
                              
                                 k
                              
                           
                           =
                           8
                        
                     ). The values of Table 3 correspond to the OQN approximations using the alternative defined in (11) to estimate ca
                     
                        kp
                     , whereas the values of Table 4 to the OQN approximations using the other alternative in (10). Note that column Jg (%) does not change from Table 3 and 4 since the Jackson procedure assumes ca
                     
                        kp
                      also equal to 1.

The mean waiting time given by the Jackson procedure is 2.645, and the deviation observed with this routing for ca
                     
                        k
                     
                     =1 and ca
                     
                        j
                     
                     =1 is approximately null, i.e., −0.38%. The deviations substantially increase as arrival and service variabilities diminish, that is, for OQN with low squared coefficient of variations in their arrival and service processes. Indeed, it has been observed by Whitt (1985) that OQN decomposition methods perform poorly when several consecutive stations have deterministic or nearly deterministic service time distributions (i.e., a pipelining effect). Nevertheless, in spite of being relatively large in these cases (e.g., see the last lines of the tables), the deviations of the multicommodity flow algorithm for generalized OQN relative to simulation are much lower than the Jackson procedure deviations. The approximations capture relatively well the queuing effects when arrival but not service processes are Poisson. Note in the second and third lines of each table that the Jackson procedure deviations are already quite high, being at least 12 times the ones obtained with the approximations. The queuing effects are much harder to capture when arrival process are not Poisson. In these cases, from the fourth to the sixth lines of each table, the estimates of ca
                     
                        kp
                      have a considerable impact on the approximations. Indeed, all the approximations are benefited with estimate (10) over (11). We can see in Table 4 that Approx 2 using (10) performs better, and that the Jackson procedure deviations are much worse, being at least 5 times the ones obtained with Approx 2. It should be noted in (11) that in cases where the proportion of demand r
                     
                        k
                      of commodity k that follows path p is small (i.e., x
                     
                        kp
                     /r
                     
                        k
                      tends to 0), then the variability ca
                     
                        kp
                      of the external interarrival times at this path tends to 1. This may incorrectly indicate that the external arrival process of subclass kp tends to Poisson in cases where the overall external arrival process of commodity k is less variable than Poisson (i.e., ca
                     
                        k
                     
                     <1). In these cases the use of estimate (10) outperforms (11). These observations are also valid for the next experiments discussed below.

As mentioned, the relative deviation in subcolumns g (%) of Tables 3 and 4 is computed based on the system waiting times, i.e., (OQN
                     −Sim)/Sim. This is equivalent to compare the station queue time at each network arc (analytical vs. simulation) and compute the summation of the relative error percentages. In the relative deviation computation an over-estimate of the queue time at a station may be compensated by an under-estimate of the queue time at another station. An alternative index would be to compare the station queue time at each network arc (analytical vs. simulation) but compute the summation of the absolute (instead of relative) error percentages. For instance, taking Approx 2 in Table 4, the deviation g
                     =2.99% for ca
                     
                        k
                     
                     =1 and cs
                     
                        j
                     
                     =0.5 would increase to 3.41% if the absolute deviations were considered in each station of the network (the maximum absolute deviation of all stations is less than 10% in this case). However, the remaining deviation values of Approx 2 in Table 4 (6.10, 16.33, 23.39 and 34.90) would not change, as for each individual station of these networks, the mean waiting time computed by Approx 2 is always larger than the corresponding mean waiting time obtained by simulation. In other words, Approx 2 always over-estimates the queue time for all stations of these networks and therefore, the relative and absolute deviations between OQN
                     2 and Sim coincide.


                     Tables 5 and 6 present results from an experiment with the same network of Fig. 4, where commodities have heterogeneous and higher demands, given by: r
                     1
                     =4, r
                     2
                     =2, r
                     3
                     =3, r
                     4
                     =2.5. The total demand is now 
                        
                           
                              
                                 ∑
                              
                              
                                 k
                                 =
                                 1
                              
                              
                                 K
                              
                           
                           
                              
                                 r
                              
                              
                                 k
                              
                           
                           =
                           11.5
                        
                     , that is, 43.7% higher. In this way, the expected utilization levels tend to be higher than the ones of the former experiments. For instance, while in the experiments of Tables 3 and 4 the highest utilization levels ρ
                     
                        max
                      are around 75%, now these levels are 94%. The mean waiting time given by the Jackson procedure when this more loaded network is considered is 10.455. The values of Table 5 correspond to the OQN approximations using alternative (11), whereas the values of Table 6 to the OQN approximations using alternative (10).

As observed in the former experiments, the approximations obtained with the generalized OQN and Jackson procedures generally overestimate the mean waiting times obtained by simulation, particularly for the cases with low variability arrival and service processes (last rows of the tables). However, the deviations of the algorithm solution values of Tables 5 and 6 are much lower than the deviations of Tables 3 and 4 in comparison with simulation. This indicates that this procedure becomes more accurate as the network is more loaded (i.e., with higher workloads and capacity utilizations), which is appropriate for practical application. The approximations capture relatively well the queuing effects when arrival but not service processes are Poisson, or when the arrival and service processes are less variable than Poisson but their variabilities are not too small, as in practical cases of multicommodity networks in communication and other systems. For approximations using alternative (10) (Table 6), Approx 2 and 3 are much better than Approx 1, specially for networks with less variable arrival and service processes, with deviations typically much lower than 5% of the simulation values. The Jackson procedure, on the contrary, still implies in important inaccuracies, leading to very high deviations (more than 100% in the last two rows of Tables 5 and 6).

It is worth noting that the summations of the absolute error percentages of the mean waiting times at each network station between OQN and Sim are not much greater than the summations of the relative error percentages shown in subcolumns g (%) of Tables 5 and 6. For instance, taking Approx 2 in Table 6, while the relative deviations are: −2.13, −1.07, 2.88, 3.87 and −1.39, the corresponding absolute deviations are: 2.67, 3.59, 3.84, 7.44 and 7.38. The individual deviations at each station are typically less than 10% of the simulation values, specially for networks with more variable arrival and service processes.

To push further the analysis on the impact of system utilization upon approximation, we conducted an additional experiment using the network of Fig. 4 with different bottleneck utilization levels ρ
                     
                        max
                      at 10%, 30%, 50%, 70%, 90%, 95%. Table 7
                      presents results with Approx 2 and the lower coefficients of variation. The first column shows the different values of ρ
                     
                        max
                     . The second column shows expected waiting times computed by Jackson procedure. Then, for each combination (ca
                     
                        k
                     ,cs
                     
                        j
                     ), it shows expected waiting times computed by Approx 2 using (10), expected waiting times given by simulation, and the relative deviation in percentage. It can be seen that queuing effects are much harder to capture when utilization is less than 70% (this result is in accordance with the observation in Wu & McGinnis (2013) that the performance of decomposition approaches deteriorates when utilization is less than 70%). However, the approximation performs reasonably well for 70% if the coefficient of variation of interarrival times is not too small, and much better for the larger utilization levels of 90% and 95%.

In a second set of experiments, we use a larger network derived from a real application on data communication networks introduced by Mahey et al. (1998) and also employed in other multicommodity flow studies in the literature (de Souza et al., 2008; Ouorou & Mahey, 2000). Fig. 5
                      shows this multicommodity communication network. It has n
                     =19 nodes, m
                     =68arcs (two arcs, one in each direction, for each pair of nodes directly connected) and K
                     =30 commodities defined by origin–destination pairs, generating around 90 subclasses when routing is done. This communication network is relatively large if compared to the manufacturing OQN typically analysed in the literature, with just a few number of product classes/subclasses (
                        
                           
                              
                                 ∑
                              
                              
                                 k
                                 =
                                 1
                              
                              
                                 K
                              
                           
                           |
                           
                              
                                 P
                              
                              
                                 k
                              
                           
                           |
                        
                      equal to 10 or 20) and just a few number of internal stations/workstations (m equal to 10 or 20), e.g., Bitran and Tirupati (1988); Bitran and Morabito (1999); Silva and Morabito (2009). Again, we consider scenarios of homogeneous and heterogeneous demands. We only use alternative (10) to estimate ca
                     
                        kp
                     , as it led to consistently better results than (11) in our previous experiments.


                     Tables 8 and 9
                     
                      show results obtained with homogeneous and heterogeneous demands, respectively, in the same structure of Tables 3–6. In the homogeneous scenario the demand is r
                     
                        k
                     
                     =1.4 for all commodity k, while in the heterogeneous scenario demands vary from 0.5 to 2.5. Every arc j has the same capacity u
                     
                        j
                     
                     =4 on both scenarios. By analysing the traffic distribution given by Approx 2 for the case with ca
                     
                        k
                     
                     =0.25 and cs
                     
                        j
                     
                     =0.25, we observe in the homogeneous scenario that the highest utilization level ρ
                     
                        max
                      is 89%, and 25 out of 64arcs carrying flow have utilization levels greater than 50%. In the heterogeneous scenario the highest utilization level ρ
                     
                        max
                      is 94%, and 37 out of 59arcs carrying flow have utilization levels greater than 50%. The mean waiting times given by the Jackson procedure are 21.537 and 38.996 for the homogeneous (Table 8) and heterogeneous (Table 9) scenarios, respectively. Although the queuing effects are harder to be captured in this larger network, the results follow the same tendency of the previous experiments: (i) the deviations to the simulation results reduce as the network is more loaded; (ii) Approx 2 and Approx 3 perform better than Approx 1, specially for cases with less variable arrival processes; and (iii) the Jackson procedure leads to very high deviations, being, for instance, at least 5 and 11 times greater than the ones obtained by Approx 2 in the homogeneous and heterogeneous scenarios, respectively (last three lines of Tables 8 and 9).

Regarding absolute deviations, the same comments drawn for the smaller networks apply here. It is observed in the majority of stations that Approx 2 over-estimates the expected waiting time upon simulation, and when this is not the case the expected waiting time given by Approx 2 is little lesser than the ones given by simulation. In terms of running times, the computational effort to run all three approximations is quite moderate. The computational time running each approximation on the larger network does not exceed 20seconds.

We now make some remarks on the impact of less variable arrival and services times on the flow distribution. To do this, we provide information on changes in the aggregate flows on arcs and in the routing of demands into paths occurred when passing from M/M/1 to a less variable case. We remind that the initial routing for all three approximations is an optimal solution for the M/M/1 case. For each scenario, we measure the variation in percentage of the aggregate flows on arcs in the solutions given by Approx 2 when variability of service times is fixed to cs
                     
                        j
                     
                     =0.25 with respect to the solution of the M/M/1 case, i.e., ca
                     
                        k
                     
                     =1 and cs
                     
                        j
                     
                     =1. The variation of the aggregate flows on arcs increases as the variability of arrival times decreases. For the scenario of homogeneous demands, Table 8, when ca
                     
                        k
                     
                     =1 and cs
                     
                        j
                     
                     =0.25, 4 arcs had a variation of aggregate flow greater than 20%, 5 between 10% and 20%, 29 between 1% and 10%, and in 26 arcs less than 1%. For the same scenario, when ca
                     
                        k
                     
                     =0.5 and cs
                     
                        j
                     
                     =0.25, 10 arcs had a variation of aggregate flow greater than 20%, 6 between 10% and 20%, 32 between 1% and 10%, and in 16 arcs less than 1%. And when ca
                     
                        k
                     
                     =0.25 and cs
                     
                        j
                     
                     =0.25, 15 arcs had a variation of aggregate flow greater than 20%, 6 between 10% and 20%, 32 between 1% and 10%, and in 11 arcs less than 1%. We note that some arcs had their aggregate flows very affected by less variable arrival times, with variation of more than 100% (or even 200%) with respect to the M/M/1 case.

For the scenario of heterogeneous demands, Table 9, when ca
                     
                        k
                     
                     =1 and cs
                     
                        j
                     
                     =0.25, 3 arcs had a variation of aggregate flow greater than 20%, 1 between 10% and 20%, 20 between 1% and 10%, and in 36 arcs less than 1%. When ca
                     
                        k
                     
                     =0.5 and cs
                     
                        j
                     
                     =0.25, 1 arc had a variation of aggregate flow greater than 20%, 5 between 10% and 20%, 26 between 1% and 10%, and in 27 arcs less than 1%. And when ca
                     
                        k
                     
                     =0.25 and cs
                     
                        j
                     
                     =0.25, 6 arcs had a variation of aggregate flow greater than 20%, 4 between 10% and 20%, 25 between 1% and 10%, and in 24 arcs less than 1%. We see in the heterogeneous scenario a less significant variation of aggregate flows, since in a more loaded network there is no much room for changing paths when routing commodities.

We analyse changes on routing commodities into paths when passing from M/M/1 to ca
                     
                        k
                     
                     =0.25 and cs
                     
                        j
                     
                     =0.25 using Approx 2 in the scenario of homogeneous demands, c.f., Table 8. The effects upon routing may be to increase the number of paths of a commodity by sending flow through a path not used previously, to reduce the number of paths of a commodity by removing flow of a path used previously, and to transfer an amount of flow from one path to another. For the sake of illustration, Fig. 6
                      presents in details the changes in the demand distribution of a commodity. In Part (a) it is shown the routing of a commodity k (s
                     
                        k
                     
                     =17, t
                     
                        k
                     
                     =11) in the solution of the M/M/1 case, whereas in Part (b) it is shown the routing of the same commodity k in the solution obtained by Approx 2 for the case ca
                     
                        k
                     
                     =0.25 and cs
                     
                        j
                     
                     =0.25.

The solution obtained by Approx 2 uses 4 different paths (indicated by dotted lines in the figure) to route the demand of commodity k: 2 paths are different from the ones used in the solution of the M/M/1, and 2 paths are the same but carrying different amounts of flow. In fact, the less variable arrival and service times had an effect upon the routing of flows in 22 out of 30 commodities. Approx 2 used on average 3 paths per commodity in routing flows for the ca
                     
                        k
                     
                     =0.25 and cs
                     
                        j
                     
                     =0.25 case. In 11 out of 30 commodities the paths used differ by at least 1 from those used in the M/M/1 case. Some paths were used in the routing of a commodity by the solutions of both M/M/1 and ca
                     
                        k
                     
                     =0.25 and cs
                     
                        j
                     
                     =0.25 cases. We measure the variation of flows on such paths in the solution given by the Approx 2 for ca
                     
                        k
                     
                     =0.25 and cs
                     
                        j
                     
                     =0.25 with respect to the solution for the M/M/1. In 8 commodities the variation was greater than 20%, in 5 between 10% and 20%, in 9 between 1% and 10%, and in 8 the amount of flow through paths did not change. Again, we note variations of more than 100% with respect to the M/M/1 case on the amount of flows through some paths.

In this study we dealt with routing multicommodity flows in generalized OQN. We showed that solving the multicommodity flow routing problem by representing the generalized OQN as a Jackson OQN may lead to poor approximations and inaccurate estimates of the network performance measures. In order to overtake this difficult, we presented a multicommodity flow algorithm, which combines well known routing algorithms and approximate performance evaluation methods for generalized OQN. The algorithm is based on a routing step and on an approximate decomposition step, which leads to much more accurate solutions. Different computational experiments evaluating the benefits of the algorithm compared to the traditional Jackson procedure using the Kleinrock’s average delay function were presented and analysed. The results of these experiments also indicated that the algorithm can produce accurate performance measures (when compared to simulation results) for the analysis of communication networks and other related systems in which the arrival but not service processes are Poisson, or when both the arrival and service processes are less variable than Poisson but their variabilities are not too small, specially for OQN cases with high utilization levels. To the best of our knowledge, we are not aware of other studies in the literature exploring this line of research.

An interesting perspective for future research would be to extend the proposed approach to deal with capacity expansion problems that combine the flow routing with combinatorial decisions of in which arcs to expand capacity. By modelling the network as a Jackson OQN, when it is in fact a generalized OQN, and analysing it by means of a Jackson procedure may lead to poor estimates of its performance measures and incorrect decisions of capacity expansion in its arcs. The combination of optimization procedures with approximate decomposition methods for generalized OQN could result in a powerful decision support tool for the analysis of network capacity expansion problems. Other interesting line of research would be to explore more recent OQN approaches based on the concept of intrinsic ratio (Wu & McGinnis, 2012, 2013), which gives reliable waiting time approximations even if the arrival and service processes have relatively small variabilities. It is also in our research agenda to extend the present approximate decomposition methods for the analysis of multicommodity flow routing in multiple server and capacitated OQN, as well as in generalized closed queuing networks.

@&#ACKNOWLEDGMENTS@&#

The authors wish to thank the two anonymous referees for helpful suggestions in improving this paper. This research was partially supported by Brazilian funding agencies CAPES, CNPq, FAPEMIG and FAPESP.

@&#REFERENCES@&#

