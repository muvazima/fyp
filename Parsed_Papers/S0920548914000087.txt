@&#MAIN-TITLE@&#The optimal generalized Byzantine Agreement in Cluster-based Wireless Sensor Networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The Byzantine Agreement problem in a CWSN is revisited.


                        
                        
                           
                           The proposed protocol achieves agreement with a minimal number of rounds.


                        
                        
                           
                           The proposed protocol can tolerate a maximal number of allowable faulty components.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Wireless Sensor Network

Cluster-based Wireless Sensor Network

Byzantine Agreement

Distributed system

Internet of Things

@&#ABSTRACT@&#


               
               
                  A Wireless Sensor Network (WSN) is a wireless network consisting of spatially distributed autonomous devices using sensor nodes in a wide range of applications in various domains. In the future, WSNs are expected to be integrated into the “Internet of Things” (IoT), where sensor nodes join the Internet dynamically, and use them to collaborate and accomplish their tasks. Because of the communications of WSN will produce a broadcast storm, the Cluster-based Wireless Sensor Network (CWSN) was proposed to ameliorate the broadcast storm. However, the capability of the fault-tolerance and reliability of CWSNs must be carefully investigated and analyzed. To cope with the influence of faulty components, reaching a common agreement in the presence of faults before performing certain tasks is essential. Byzantine Agreement (BA) problem is a fundamental problem in fault-tolerant distributed systems. To enhance fault-tolerance and reliability of CWSN, the BA problem in CWSN is revisited in this paper. In this paper, a new BA protocol is proposed that adapts to the CWSN and derives its limit of allowable faulty components, while maintaining the minimum number of message exchanges.
               
            

@&#INTRODUCTION@&#

One new concept associated with the “Future Internet” is that of the so-called “Internet of Things” (IoT). The “Internet of Things” describes a vision where objects become part of the Internet, where every object is uniquely identified, and accessible to the network, its position and status known, and where services and intelligence are added to this expanded Internet, fusing the digital and physical world, ultimately impacting our professional, personal and social environments [4]. The IoT is a technological revolution that represents the future of computing and communications; its development depends on dynamic technical innovation in a number of important fields, such as wireless sensors. The purpose of the IoT consists in the facilitation of information exchanges about, among other things or goods in global supply chain networks, i.e., the IT-infrastructure should provide information about “things” in a secure and reliable manner. Extending the initial application scope, the IoT might also serve as the backbone for ubiquitous computing, enabling smart environments to recognize and identify objects, and retrieve information from the Internet to facilitate their adaptive functionality [8].

Through the study of the IoT technology, the idea of combining IoT with Wireless Sensor Network (WSN) is proposed, which demonstrates the integration feasibility of the RFID and WSN technology [4]. In order to improve the efficiency of logistics enterprises, all aspects in the transport process should be monitored, which requires applying the IoT technology into the logistics management system [10]. WSN is a wireless network consisting of spatially distributed autonomous devices using sensor nodes to monitor physical or environmental conditions cooperatively [1]. However, the sensor node is limited by the energy resource, memory, computation, communication capability, etc. [5]. Therefore, the topology of a Cluster-based Wireless Sensor Network (CWSN) has been proposed to prolong the lifetime of WSNs by decreasing the energy consumption of nodes [7].

The reliability of the node is one of the most important requirements of a successful CWSN. In order to provide a reliable environment in CWSN, a mechanism to allow a set of nodes to agree on an agreement value is required. The Byzantine Agreement (BA) problem [6,9] is one of the most fundamental problems in which an agreement value is reached in a distributed system. Some examples of such applications are the commitment problem in a distributed database system, the clock synchronization problem, and the landing task controlled by a flight path finding system [12].

The traditional BA problem first defined by Lamport et al. [9] makes the following assumptions.
                        
                           (1)
                           There are n nodes in a synchronous distributed system where n is a constant and n
                              ≥4.

Each node can communicate with the others through a reliable fully connected network.

One or more of the nodes might fail, so the faulty nodes may transmit incorrect message(s) to other nodes.

After message exchange, all fault-free nodes should reach a common agreement, if and only if the number of faulty nodes fn
                               is less than one-third of the total number of nodes in the network (f
                              
                                 n
                              
                              ≤⌊(n
                              −1)/3⌋).

Only the faulty nodes are considered.

Based on these assumptions, the BA requirement can be satisfied when the following constraints are met:
                        
                           Agreement: All fault-free nodes agree on a common decision value.

Validity: If the source node is fault-free, then all fault-free nodes agree on the initial value sent by the source node.

Previous researches on the BA problem were solved in a well-defined network environment, such as fully connected network, broadcast network and so on [2,7,9]. In other words, all nodes reside in a wired network environment. However, the technology of networks continues to grow at a high speed and the applications in wireless mobile networks have reached an astonishing achievement level in the last year, so it is important to solve the BA problem in the wireless mobile networks. Thus, this research will focus on the wireless mobile networks and propose a protocol to make all fault-free nodes reach an agreement in the CWSN. In this study, the BA problem in CWSN is revised. The proposed protocol is referred to as the Optimal Generalized Byzantine Agreement protocol in CWSN (OGBA), which can lead to an agreement between each fault-free node in the topology of CWSN. However, the proposed protocol OGBA is the only protocol to make all fault-free nodes reach BA in the case of CWSN with both node and transmission medium (TM) fallibility.

The rest of this paper is organized as follows. Section 2 discusses the CWSN. Then, the proposed protocol OGBA is introduced and illustrated in detail in Section 3. In Section 4, an example of the execution of the proposed protocols is given. Section 5 demonstrates the fault-freeness and complexity of our new protocol. Section 6 concludes this paper.

@&#RELATED WORK@&#

The concept of the Internet of Things (IoT) was first introduced in 1999, and referred to the network connecting objects [13]. An IoT is foreseen to be a worldwide network of interconnected objects uniquely addressable, based on standard communication protocols [1]. Identified by a unique address, any object, including computers, sensors or RFID tags will be able to dynamically join the network, collaborate and cooperate efficiently to achieve different tasks. Including WSNs in such a scenario will open up new perspectives. Covering a wide application field, WSNs can play an important role by collecting surrounding context and environment information. However, deploying WSNs are configured to access the Internet raises novel challenges; these need to be tackled before taking advantage of the many benefits of such integration. The wide WSN application field can be divided into three main categories according to monitoring space, monitoring objects and monitoring interactions between objects and space [5,14]. The proposed classification can be extended by an additional category monitoring human beings.

However, when WSNs become a part of the Internet, the capability of the fault-tolerance and reliability of WSNs must be carefully investigated and analyzed. A cluster of sensor nodes in WSN is cooperating to achieve some objectives; each sensor node not only communicates with other sensor nodes by using broadcast in WSN, but also leads to a severe problem, such as broadcast storms. Therefore, the researchers proposed Cluster-based Wireless Sensor Network (CWSN) to ameliorate the broadcast storm [7]. In CWSN, each cluster is composed of many sensor nodes and one cluster head. The sink controls the state and communication data of all cluster heads. The cluster head controls the state and communication data of all sensor nodes. Fig. 1
                      is a topology of CWSN [4].

In the CWSN, messages are always received by receiving nodes within a fixed time period; otherwise, the message's sender is treated as a failure. If certain components in a distributed system fail, a protocol is required to ensure that the system still functions correctly. However, network components may not always work well.

In previous literature, most protocols of the BA problem perform well in wired networks [7,9,12,15]. Recent advances in technology have provided portable nodes with wireless interfaces that allow network communication among mobile users. The computing environment, which refers to mobile computing, no longer requires users to maintain a fixed and universally known position in the network, and enables almost unrestricted mobility. The topology of CWSN is a type of wireless network topology, and so previous protocols may not be well suited to it.

In a BA problem, many cases are based on the assumption of node failure in a fail-safe network [7,9]. Based on this assumption, a TM fault is treated as a node fault, whatever the correctness of an innocent node, so that an innocent node does not involve agreement [15]. Nevertheless, the definition of a BA problem requires all fault-free nodes to reach agreement.

A component is said to be fault-free if it follows protocol specifications during the execution of a protocol; otherwise, the component is said to be faulty. The symptoms of component failure can be classified into two categories: dormant faults and malicious faults [12]. Dormant faults of fallible components constitute a crash, omission, or stuck-at fault. A crash fault results when components do not work correctly. An omission fault takes place when a component fails to transmit or receive a message on time or at all. A stuck-at fault means that the component always receives the same value via the faulty transmission medium. However, the behavior of components that have malicious faults is unpredictable. Components with malicious faults may work in coordination with other faulty components to prevent functional components from reaching an agreement value. Herein, a solution to the BA problem in the nodes/TM fallible CWSN with malicious and dormant faults (called dual-failure mode) is presented.

In this paper, a new protocol, the Optimal Generalized Byzantine Agreement (OGBA), is proposed to solve the BA problem when resulting from faulty component(s) which may send incorrect messages to prevent the system from reaching agreement in the CWSN. Basically, the messages received from non-faulty components will be the same with each other node. Based on the same messages, every node can make the same agreement value easily. Thus, the protocol OGBA should help the correct node remove all the influences of the faulty components in the messages receiving from all other nodes. Essentially, the dormant faults of TMs/nodes are easily identified and removed. The influence of TMs with malicious fault can be removed at each round of message exchange by taking a majority of the messages received. At the final step, the influences caused by malicious nodes can be removed by using a special data structure and a vote function.

The notations and assumptions of the OGBA protocol for the CWSN are shown below:
                        
                           (1)
                           The underlying network is synchronous.

Each node in the network can be identified uniquely.

A node does not know the fault status of other components.

Let n be the number of nodes in the underlying network.

Let c be the number of clusters in the underlying network and c
                              ≥4.

Let Ci
                               be the cluster identifier where 1≤
                              i
                              ≤
                              c and c
                              ≥4.

Let ni
                               be the number of nodes in cluster Ci
                              , 0≤
                              i
                              ≤
                              c. If there are at least ⌈n
                              
                                 i
                              /2⌉ malicious faulty nodes in Ci
                              , then Ci
                               is the malicious faulty cluster. If there are at least ⌈n
                              
                                 i
                              /2⌉ dormant faulty nodes in Ci
                              , then Ci
                               is the dormant faulty cluster.

Let FCm
                               be the maximum number of malicious faulty clusters allowed.

Let FCd
                               be the maximum number of dormant faulty clusters allowed.

Let FTm
                               be the maximum number of malicious faulty TMs allowed.

Let FTd
                               be the maximum number of dormant faulty TMs allowed.

Let TFC
                               be the total number of allowable faulty clusters, TFC
                              
                              =
                              FCm
                              
                              +
                              FCd
                              .

Let con be the connectivity of the CWSN, where con
                              >2(FCm
                              
                              +
                              FTm
                              )+
                              FCd
                              
                              +
                              FTd
                              .

The purpose of the BA protocol is to make each fault-free node in the network reach common agreement. In order to reach a common agreement, each node should exchange messages with all other nodes. Then, each fault-free node collects enough messages to determine the decision value, i.e., the agreement value, each fault-free node's agreement value should be identical. The CWSN discussed is a synchronous network, so no delay of nodes or TMs need be considered in our discussion [9]. Therefore, the nodes executing the proposed protocol should receive messages from other nodes within a predictable period. If the message is not received on time, the message must have been influenced by faulty components.

The first step of the proposed protocol is to determine the number of rounds of messages exchanged so that the number of exchanges required can be minimized. After determining the required rounds of message exchange, a BA protocol must execute two phases of work: the message exchange phase and the decision-making phase. The task of the message exchange phase is to collect messages from other nodes through CWSN. Furthermore, the influence of a faulty TM is removed during the message exchange phase by applying a majority function, called the MAJ. Afterward, in the decision-making phase; each fault-free node uses the messages received during the message exchange phase to determine the common agreement value.

The abovementioned is the basic concept underlying the proposed protocol. In a generalized case, both nodes and TMs may become faulty simultaneously. For all fault-free nodes to reach a common agreement value, the faults caused by the nodes and the TMs must be removed. The protocol proposed by Yan et al. noted that the influence of the malicious faulty TM must be eliminated first, and then the influence of the malicious faulty nodes be removed [15]. However, our network contains not only malicious faults, but also dormant faults.

Therefore, the basic strategy of the proposed Optimal Agreement protocol in CWSN (OGBA) to solve the BA problem is to remove the influence of the dormant faulty TM and nodes first, and then remove the influence of the malicious faulty TM. Finally, we must remove the influence of malicious faulty nodes. In addition, the number of required rounds is only TFC
                     
                     +2 rounds of message exchange, where T
                     
                        FC
                     
                     =⌊(c
                     −1)/3⌋, c is the total number of clusters, and TFC
                     
                     +2 is the minimum number of rounds. In other words, if the faulty components are nodes and TMs, then OGBA can make all fault-free nodes in the CWSN reach common agreement, while requiring minimum rounds of message exchange, and can tolerate the maximum number of faulty components. However, since both nodes and TMs may malfunction in a generalized case, we provide some basic assumptions. The OGBA is explained in the following.

There are two phases in the OGBA: the message exchange phase and the decision-making phase. The influence of the dormant faulty nodes/TMs and the influence of malicious faulty TMs can be mitigated during the message exchange phase. The influence of malicious nodes can be mitigated during the decision-making phase. The progression of the degree of influence of the faulty TMs/nodes removed is shown in Fig. 2
                      and discussed as follows.

In general, the protocol can use the Manchester code [11] to send messages, the receiver can always identify messages produced by a dormant fault, such as crash, omission and stuck-at faults. When a crash fault occurs, the faulty component cannot send any signals to other nodes. Similarly, the omission fault occurs such that a component fails to transmit or receive a signal on time or at all. In the last kind of dormant fault, the stuck-at fault, the signal is always constant. Therefore, the Manchester code is easily to be used to detect the dormant fault. The proposed protocol OGBA will use the λ to replace the values sent from dormant faulty nodes/TMs, where the λ is a symbol to denote the dormant fault founded. Then, the influence of dormant fault can be easily removed by removing all λs during the period of reaching agreement.

After removing the influence of the dormant faulty components, each node still must collect sufficient messages from other nodes. Thus, these received messages can be used to mitigate the influence of malicious faulty TMs. In this phase, a data structure called an mg-tree is used during the message exchange. The mg-tree is a tree structure that is used to store the received messages [12]. A detail description of mg-tree is illustrated in Appendix 1. First, requiring only two rounds of message exchange, the OGBA protocol can be used to remove the influence of malicious TMs. In the first round, the source node multicasts its initial value vs
                         through TMs. When a fault-free node receives the message, it stores the received value, denoted as val(s), in the root of its mg-tree. After the first round, each node multicasts the root value of its mg-tree to each node. After two rounds, a correct value is obtained, which is free of malicious faulty TMs. However, the computed value may still be influenced by malicious faulty nodes. Therefore, OGBA requires TFC
                        
                        +2 rounds of message exchange, where TFC
                         denotes the maximum number of allowable faulty clusters and cannot exceed ⌊(c
                        −1)/3⌋, where c is the total number of clusters. However, in order to mitigate the influence of the faulty TMs, the message stored in the mg-tree and the function MAJ(α) must be applied during each round of message exchange, where α represents a vertex in an mg-tree; the data reduction function MAJ(α) is defined as follows:
                           
                              MAJ(α)=the majority value in the set of {val(αj)|1≤
                                 j
                                 ≤
                                 n}, if it exists.

Otherwise, the complement of val(α), denoted as ¬val(α) is chosen.

There are at most ⌊c/2⌋−1 faulty clusters. After the first round, the number ¬vs
                         is no greater than ⌊c/2⌋−1. If the majority value cannot be determined, the message sent during the last round is incorrect. Therefore, it will use the complement of val(α) as the majority value.

After finishing TFC
                        
                        +2 rounds of the message exchange phase, each node will execute the decision-making phase. In order to mitigate the influence of malicious faulty nodes and avoid the repetition of faulty nodes, no node name is repeated in any vertex and each fault-free node must reorganize the mg-tree into a corresponding ic-tree (this is performed by using the reorganization rules, a detailed description of which is presented in Appendix 2). This is performed by using the reorganization rules.
                           
                              •
                              The leaves in level TFC
                                 
                                 +2 of the mg-tree are deleted.

The vertices with repeated node's names are deleted.

Subsequently, all fault-free nodes must use function VOTE(α) to remove the faulty influence of malicious faulty nodes and to obtain a common value. It is noteworthy that the function VOTE only counts the non-value “λ” (excluding the last level of the ic-tree) for all vertices at the γ-th level of an ic-tree, where 1≤γ≤
                        TFC
                        
                        +2. Since VOTE(s) is a common value, each fault-free node can mitigate the influence of malicious faulty nodes and agree on the value, thus reaching agreement. In addition, a detailed definition of the OGBA is shown in Fig. 3
                        .

An example of executing our protocol, OGBA, is given. The topology of CWSN is shown in Fig. 4(a). There are 24 nodes falling into nine clusters. C
                     1 includes source nodes ns
                     , n
                     1 and n
                     2. C
                     2 includes n
                     3, n
                     4, n
                     5 and n
                     6. C
                     3 includes n
                     7 and n
                     8. C
                     4 includes n
                     9 and n
                     10. C
                     5 includes n
                     11 and n
                     12. C
                     6 includes n
                     13 and n
                     14. C
                     7 includes n
                     15 and n
                     16. n
                     17, n
                     18, n
                     19, n
                     20 and n
                     21 belong to C
                     8, n
                     22 and n
                     23 belong to C
                     9.

In the BA problem, the worst situation is if the source is no longer honest [12]. In this case, the source node ns
                      is in a malicious fault state, which means that ns
                      may arbitrarily send different values to different clusters. In order to solve the BA problem among fault-free nodes in this example, OGBA requires θ rounds during the message exchange phase. In OGBA, the number of rounds required is decided in the pre-execute phase. In this example, θ
                     =⌊(c–1)/3⌋+2=⌊(9–1)/3⌋+2=4, four rounds of message exchange are required.

In the first round of the message exchange phase, the source node ns
                      transmits messages to all other nodes. The message obtained from each fault-free node is listed in Fig. 4(b). In the γ-th (1<γ≤θ) round of message exchange, except for the source node, each node transmits the values at the (γ−1)-th level of its mg-tree to all the others and to itself. Subsequently, each receiving node applies MAJ to its received messages and stores the received messages and MAJ values at the corresponding vertices in level γ of its mg-tree. The mg-tree of fault-free node n
                     3 at the second, third, and final rounds of the message exchange phase is shown in Fig. 4(c), (d), and (e); with that, the message exchange phase is completed.

After the message exchange phase, the tree structure of each fault-free node has been converted from mg-tree to ic-tree by deleting the vertices with duplicated names (for example, s11 would be deleted) during the decision-making phase. A sample ic-tree is shown in Fig. 4(f). Finally, the function VOTE is used to determine the root the value s for each fault-free node's ic-tree {VOTE(s)=VOTE(s1), …, VOTE(s9)=1}, so that an agreement value 1 can be obtained, as shown in Fig. 4(g); and with that, the decision making phase is complete.

In this section, the correctness and complexity will be proved. The first subsection will prove the correctness of OGBA, and the complexity will be proved in the next subsection. The following lemmas and theorems are used to prove the correctness and complexity of OGBA. It can tolerate FCm
                      malicious faulty clusters, FTm
                      malicious faulty TMs, FCd
                      dormant faulty clusters and FTd
                      dormant faulty TMs simultaneously in a CWSN where con
                     >2(FCm
                     
                     +
                     FTm
                     )+
                     FCd
                     
                     +
                     FTd
                     . Furthermore, it only requires TFC
                     
                     +2 (TFC
                      is the total number of faulty clusters) rounds of message exchange to make all fault-free nodes reach a common agreement.

In order to prove the correctness of the proposed protocol, a vertex μ is called common if each fault-free node has the same value of μ 
                        [7]. That is, if vertex μ is common, then the value stored in vertex μ of each fault-free node's mg-tree or ic-tree is identical. When each fault-free node has a common initial value of the source node in the root of an ic-tree, and if the root s of an ic-tree in a fault-free node is common and the initial value received from the source node is stored in the root of the tree structure, then agreement is reached because the root is common. Thus, the constraints, (Agreement) and (Validity), can be rewritten as:
                           
                              
                                 Agreement′: root s is common, and


                                 Validity′: VOTE(s)=
                                 vs
                                  for each fault-free node, if the source node is fault-free.

To prove that a vertex is common, the term common frontier is defined as follows: When every root-to-leaf path of the tree (an mg-tree or an ic-tree) contains a common vertex, the collection of common vertices forms a common frontier [7]. In other words, every fault-free node has identical messages collected in the common frontier if a common frontier exists in a fault-free node's tree structure (mg-tree or ic-tree). Subsequently, using the same majority voting function to compute the root value of the tree structure, every fault-free node can compute the same root value because they have used the same input (the same collected messages in the common frontier). The same computing function causes the same output (the root value).

Since OGBA can solve the BA problem, the correctness of OGBA should be examined in the following two ways:
                           
                              (1).
                              Fault-free vertex: Vertex μi of a tree is a fault-free vertex if cluster Ci
                                  (the last cluster name in vertex μi's cluster name list) is fault-free. In other words, a fault-free vertex is a place to store the value received from a fault-free node.

True value: For a fault-free vertex μi in the tree of a fault-free node in the fault-free cluster Cj
                                 , val(μi) is the true value of vertex μi. In other words, the stored value is called the true value.

By definition, a fault-free vertex is one that contains a stored value that is received from the nodes in a fault-free cluster, and a fault-free cluster always transmits the same value to all nodes. Therefore, the fault-free vertices of such an mg-tree are in common. After reorganizing the mg-tree into its corresponding ic-tree by deleting the vertices with repeated cluster names, the values stored in the fault-free vertices of an ic-tree are the same. As a result, all the fault-free vertices of an ic-tree are also in common. Again, by the definition of a fault-free vertex, a common frontier does exist in the ic-tree inasmuch as Agreement′ and Validity′ are true regardless of whether the source node is fault-free or has failed if the BA problem has been solved.
                           Lemma 1
                           
                              Message(s) sent through dormant faulty nodes can be detected by a fault-free destination node.
                           

Message(s) from dormant faulty components can be detected if the protocol appropriately encodes a transmitted message via the Manchester code [11] before transmission.∎


                              The fault-free node can receive message from fault-free node, if con>2(FCm
                                 +FTm)+FCd
                                 +FTd.
                           

A fault-free node broadcasts a message to others and itself. In the worst case, a fault-free node can receive con
                              −(FCd
                              
                              +
                              FTd
                              ) messages transmitted in each round of the message exchange because dormant faulty components can be detected. If con
                              −(FCd
                              
                              +
                              FTd
                              )>2(FCm
                              
                              +
                              FTm
                              ), a fault-free node can determine messages from senders by taking the majority value from the values received in each message exchange round. ∎


                              A fault-free node can remove the faulty influences from dormant TMs and dormant faulty nodes, if con>2(FCm
                                 +FTm)+FCd
                                 +FTd.
                           

By Lemmas 1 and 2, the theorem is proved. ∎


                              All fault-free vertices of an ic-tree are in common.
                           

After reorganization, no repeatable vertices exist in an ic-tree. At the level θ−2, where θ=⌊(c
                              −1)/3⌋+2 or above, the fault-free vertex μ has at least 2θ−3 children in which at least θ−1 children are fault-free. The true value of these θ−1 fault-free vertices is in common, and the majority value of vertex μ is also in common. The fault-free vertex μ is common to the ic-tree, if the level of μ is less than θ−1. As a result, all fault-free vertices of the ic-tree are in common. ∎


                              A common frontier exists in the ic-tree.
                           

There are θ−1 vertices along each root-to-leaf path of an ic-tree in which the root is labeled by the source name and the others are labeled by a sequence of cluster names. Since at most θ−2 clusters can fail, there is at least one vertex that is fault-free along each root-to-leaf path of the ic-tree. Using Lemma 3, the fault-free vertex is in common, and the common frontier exists in each fault-free node's ic-tree. ∎


                              Let μ be a vertex, and μ is in common if there is a common frontier in the sub-tree rooted at μ.
                           

If the height of μ is 0, and the common frontier (μ itself) exists, then μ is in common. Otherwise, if the height of μ is σ, the children of μ are all consistent using the induction hypothesis with the height of the children at σ−1; the vertex μ is then in common, too. ∎


                              The root is in common if a common frontier exists in the ic-tree.
                           


                              The root of a fault-free node's ic-tree is in common.
                           

By Lemmas 3, 4, and 5, and Corollary 1, the theorem is proved. ∎


                              Protocol OGBA solves the BA problem in the topology of CWSN.
                           

To prove the theorem, it must be shown that OGBA meets the agreements (Agreement′) and (Validity′).

(Agreement′): Root s is common. By Theorem 2, (Agreement′) is satisfied.

(Validity′): VOTE(s)=
                                 v for all fault-free nodes, if the initial value of the source is vs
                                  say v
                                 =
                                 vs
                                 .

Since most of the nodes are fault-free, they transmit the message to all of the others. The value of fault-free vertices for all fault-free nodes' mg-tree is v. When the mg-tree is reorganized as an ic-tree, the fault-free vertices still exist. As a result, each fault-free vertex of the ic-tree is in common by Lemma 3, and its true value is v. Using Theorem 2, this root is in common. The computed value VOTE(s)=
                        v is stored in the root for all fault-free nodes. (Validity′) is satisfied. ∎

The complexity of OGBA is evaluated in terms of 1) the minimum number of rounds and 2) the maximum number of allowable faulty components. Theorems 4 and 5 below will show that the optimal solution is reached.
                           Theorem 4
                           
                              OGBA requires θ rounds to solve the generalized BA with dual failure mode in the topology of CWSN, if c
                              >⌊(c
                              −1)/3⌋+2(F
                              
                                 Cm
                              
                              +
                              F
                              
                                 Tm
                              )+
                              F
                              
                                 Cd
                              
                              +
                              F
                              
                                 Td
                               
                              and con>2(FCm
                                 +FTm)+FCd
                                 +FTd, where θ
                              =⌊(c
                              −1)/3⌋+2, and θ are the minimum number of rounds of exchanged messages.
                           

Because message passing is required only during the message exchange phase, the message exchange phase is time consuming. Yan et al. pointed out that TFC
                              
                              +1 (where
                              T
                              
                                 FC
                              
                              ≤⌊(c
                              −1)/3⌋) (where (T
                              
                                 FC
                              
                              ≤⌊(c
                              −1)/3⌋) rounds are the minimum number of rounds needed for sufficient messages to reach BA in a node fault only environment [15]. The network topology of Yan et al. is comprised of traditional network architecture (such as fully connected networks), and the unit utilized by Yan and Wang is a cluster [15].

In case of faulty nodes only, it has been proven that TFC
                        
                        +1 rounds of exchanged messages are required to demonstrate optimality [12]. Furthermore, Wang et al. pointed out that two rounds are the minimum number of rounds needed to solve the communication media fault [12]. Therefore, the required number of rounds for solving the generalized BA problem in the topology of CWSN should not be less than TFC
                        
                        +1. As a result, the number of required rounds of message exchange in the topology of CWSN is θ
                        =⌊(c
                        −1)/3⌋+2. Thus, OGBA requires a minimum of θ rounds of message exchange. ∎
                           Theorem 5
                           
                              The maximum number of allowable faulty components by OGBA is FCm malicious faulty clusters and FCd dormant faulty clusters, FTm malicious faulty transmission media and FTd dormant faulty transmission media; where c
                              >⌊(c
                              −1)/3⌋+2(F
                              
                                 Cm
                              
                              +
                              F
                              
                                 Tm
                              )+
                              F
                              
                                 Cd
                              
                              +
                              F
                              
                                 Td
                               
                              and con>2(FCm
                                 +FTm)+FCd
                                 +FTd.
                           

Yan et al. have pointed out that the constraints of the BA problem with respect to node faults are only c
                              >⌊(c
                              −1)/3⌋+2
                              F
                              
                                 Cm
                              
                              +
                              F
                              
                                 Cd
                               and con
                              >2 FCm
                              
                              +
                              FCd
                               
                              [15]. The unit used by Yan et al. is the group, and the topology of CWSN is composed of several clusters, so that a node in a topology of CWSN is similar to a group-oriented network. In this paper, the fault status of the topology of CWSN with faulty nodes and faulty transmission media are discussed. Hence, the constraints are rewritten as c
                              >⌊(c
                              −1)/3⌋+2(F
                              
                                 Cm
                              
                              +
                              F
                              
                                 Tm
                              )+
                              F
                              
                                 Cd
                              
                              +
                              F
                              
                                 Td
                               and con
                              >2(FCm
                              
                              +
                              FTm
                              )+
                              FCd
                              
                              +
                              FTd
                              . Thus, the total number of allowable faulty components of OGBA is FCm
                               malicious faulty clusters and FCd
                               dormant faulty clusters, FTm
                               malicious faulty transmission media, and FTd
                               dormant faulty transmission media. ∎

As the results of the above cases illustrate, the number of allowable faulty components is maximal in OGBA. The OGBA requires a minimum number of rounds and tolerates a maximum number of faulty components to ensure all fault-free nodes reach a common agreement; hence, the optimality of OGBA has been proven. In other words, if the number of faulty components in CWSN exceed the bound c
                        >⌊(c
                        −1)/3⌋+2(F
                        
                           Cm
                        
                        +
                        F
                        
                           Tm
                        )+
                        F
                        
                           Cd
                        
                        +
                        F
                        
                           Td
                         and con
                        >2(FCm
                        
                        +
                        FTm
                        )+
                        FCd
                        
                        +
                        FTd
                        , reaching agreement is impossible. At the same time, ⌊(c
                        −1)/3⌋+2 rounds of message exchange among the nodes of CWSN are required to ensure that the correct nodes have much enough messages to mitigate the influence caused by faulty components and to reach agreement with each others.

@&#CONCLUSIONS@&#

The changes in network topology developed in recent years have demonstrated a trend towards increasingly mobile features. The proposed protocol, OGBA, can solve the BA problem in dual failure mode on fallible nodes and transmission media in the topology of CWSN. The proposed protocol, OGBA, can tolerate the most fallible types of nodes taking the minimum number of required rounds to reach an agreement, and tolerating the maximum number of faulty components.

Moreover, reaching an agreement is insufficient for the highly reliable distributed system in the topology of CWSN. A closely related problem is called the Fault Diagnosis Agreement (FDA) problem [3]. The objective of solving the FDA problem is to make each fault-free node able to detect or locate the common set of faulty components in the distributed system. Therefore, solving the FDA problem for the highly reliable CWSN will be included in our future work.

@&#ACKNOWLEDGMENT@&#

This work was supported in part by the Taiwan National Science Council under Grants NSC101-2221-E-324-032 and NSC101-2221-E-324-034.


                     Fig. A2 shows the mg-tree for the network model in Fig. A1
                     . Each fault-free node maintains such an mg-tree during the execution of the protocol for reaching agreement. In the first round, the source node broadcasts its initial value to others and itself. Since we assume that the message sender is always identifiable, each node can know if the initial value of source is received. When a fault-free node receives the message sent from the source (node b), it stores the value, denoted as val(s), at the root of its mg-tree as shown in Fig. A2
                     . In the second round, each node broadcasts the root's value of its mg-tree to others and itself. If node b sends a message val(s) to node a, then node a stores the message, which is denoted as val(sa), in vertex sa of its mg-tree as depicted in Fig. A2. Similarly, if node b sends a message val(sa) to node a, then the message is named val(sab) and stored in vertex sab of node a's mg-tree in the third round as present in Fig. A2 and the rest may be deduced by analog.

In summary, the root of an mg-tree is always named s denoting that the stored message is sent from the source in the first round, and the vertex of an mg-tree is labeled by a list of node names that the node name list includes the nodes through which the stored message was transferred.

An ic-tree is created from a corresponding mg-tree by the following reorganization rules.
                        
                           1)
                           The influence due to a faulty TM in the leaves of an mg-tree has not been removed if the leaves at TFC
                              
                              +2 of the mg-tree are deleted, and the majority function is only applied to remove the influence of a faulty node.

In order to avoid a faulty node influencing the storage message repeatedly in an ic-tree, the vertices with repeated node name are deleted to make a simple majority function able to compute a common value. Fig. A3
                               shows an example of the ic-tree reorganized from the mg-tree indicated in Fig. A2. Note that the leaves and vertex sb (s
                              =
                              b in this example) of the mg-tree are deleted.

@&#REFERENCES@&#

