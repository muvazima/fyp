@&#MAIN-TITLE@&#How the Beast really moves: Cayley analysis of mechanism realization spaces using CayMos

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Bijective representation of connected components as curves in a minimal ambient dimension.


                        
                        
                           
                           Defining and finding the “distance” between two different connected components.


                        
                        
                           
                           Analysis and visualization of realization spaces for well-studied mechanisms.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Underconstrained geometric constraint systems

1-degree-of-freedom linkages

Mechanisms

Configuration space

Realization space

Motion space

@&#ABSTRACT@&#


               
               
                  For a common class of 2D mechanisms called 1-dof tree decomposable linkages, the following fundamental problems have remained open: (a) How to canonically represent (and visualize) the connected components in the Euclidean realization space. (b) How to efficiently find two realizations representing the shortest “distance” between two connected components. (c) How to classify and efficiently find all the connected components, and the path(s) of continuous motion between two realizations in the same connected component, with or without restricting the realization type (sometimes called orientation type).
                  For a subclass of 1-dof tree-decomposable linkages that includes many commonly studied 1-dof linkages, we solve these problems by representing a connected component of the Euclidean realization space as a curve in a carefully chosen Cayley (non-edge distance) parameter space; and proving that the representation is bijective. We also show that the above set of Cayley parameters is canonical for all generic linkages with the same underlying graph, and can be found efficiently. We add an implementation of these theoretical and algorithmic results into the new software CayMos, and give (to the best of our knowledge) the first complete analysis, visualization and new observations about the realization spaces of many commonly studied 1-dof linkages such as the amusing and well-known Strandbeest, Cardioid, Limacon and other linkages.
               
            

A key underlying barrier to understanding underconstrained geometric constraint systems is the classical problem of representing and efficiently finding the Euclidean realization spaces of 1-degree-of-freedom linkages, or mechanisms in 2D. A linkage 
                     
                        
                           (
                           G
                           ,
                           
                              
                                 l
                              
                              
                                 ̄
                              
                           
                           )
                        
                     , is a graph 
                        G
                        =
                        
                           (
                           V
                           ,
                           E
                           )
                        
                      with fixed length bars as edges, i.e.  
                        
                           
                              l
                           
                           
                              ̄
                           
                        
                        :
                        E
                        →
                        R
                     . A 2D Euclidean realization or configuration 
                     
                        G
                        
                           (
                           p
                           )
                        
                      of 
                        
                           (
                           G
                           ,
                           
                              
                                 l
                              
                              
                                 ̄
                              
                           
                           )
                        
                      is an assignment of points 
                        p
                        :
                        V
                        →
                        
                           
                              R
                           
                           
                              2
                           
                        
                      to the vertices of 
                        G
                      satisfying the bar lengths in 
                        
                           
                              l
                           
                           
                              ̄
                           
                        
                     , modulo Euclidean motions. If the linkage is flexible (i.e., the space of realizations of a linkage is infinite), but the addition of a single bar causes the linkage to become minimally rigid (i.e. only finitely many realizations), then the linkage is called a mechanism with 1-degree-of-freedom (1-dof). A well-known example is the 2D mechanism underlying the Strandbeest, shown in Fig. 1
                     .


                     Note: In the remainder of the paper, “linkage” refers to “2D linkage”.

Even for rigid linkages, the number of realizations can be exponential in the number of vertices  [1]. Previous attempts in  [2,3] classified realizations according to realization types. A realization type uniquely determines a realization of a rigid linkage, by specifying a local orientation (chirality) for a set of points in the realization.

For flexible linkages, a well-known early result  [4] shows that an arbitrary algebraic curve can be traced by the motion of a linkage joint. One outstanding example is the Peaucellier–Lipkin linkage, which transforms planar rotary motion into straight-line motion  [5]. Versions of the problem play an important role in Computer-Aided-Design (CAD), robotics and molecular geometry[6–8], but few results are known beyond individual or specific families of linkages  [9–13].

In this paper, we restrict ourselves to the study of 1-dof tree-decomposable linkages. The underlying graphs 
                        G
                      of such linkages are obtained by dropping an edge from minimally rigid and well-studied tree-decomposable graphs. A graph 
                        G
                      is 1-dof tree-decomposable if there exists a non-edge 
                        f
                     , called a base non-edge (there could be more than one), such that 
                        G
                      has the following graph theoretical construction from 
                        f
                      (see for example Fig. 1(a)): at Construction Step 
                     
                        k
                     , the graph constructed so far, 
                        
                           
                              G
                           
                           
                              k
                              −
                              1
                           
                        
                     , is extended by adding two new maximal tree-decomposable subgraphs, or clusters 
                     
                        
                           
                              C
                           
                           
                              k
                              1
                           
                        
                      and 
                        
                           
                              C
                           
                           
                              k
                              2
                           
                        
                      sharing a vertex 
                        
                           
                              v
                           
                           
                              k
                           
                        
                     . In addition, 
                        
                           
                              C
                           
                           
                              k
                              1
                           
                        
                      and 
                        
                           
                              C
                           
                           
                              k
                              2
                           
                        
                      each has exactly one shared vertex, 
                        
                           
                              u
                           
                           
                              k
                           
                        
                      and 
                        
                           
                              w
                           
                           
                              k
                           
                        
                      respectively, with 
                        
                           
                              G
                           
                           
                              k
                              −
                              1
                           
                        
                     . In the example Fig. 1(a), the dotted line 
                        
                           (
                           
                              
                                 v
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 3
                              
                           
                           )
                        
                      is the chosen base non-edge. In Construction Step 1, clusters 
                        
                           
                              C
                           
                           
                              1
                           
                        
                        =
                        
                           {
                           
                              
                                 v
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 6
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 8
                              
                           
                           }
                        
                      and 
                        
                           
                              C
                           
                           
                              2
                           
                        
                        =
                        
                           {
                           
                              
                                 v
                              
                              
                                 3
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 6
                              
                           
                           }
                        
                      are added. We denote this construction step by 
                        
                           
                              v
                           
                           
                              6
                           
                        
                        ⊲
                        
                           (
                           
                              
                                 v
                              
                              
                                 0
                              
                           
                           ∈
                           
                              
                                 C
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 3
                              
                           
                           ∈
                           
                              
                                 C
                              
                              
                                 2
                              
                           
                           )
                        
                     , or simply 
                        
                           
                              v
                           
                           
                              6
                           
                        
                        ⊲
                        
                           (
                           
                              
                                 v
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 3
                              
                           
                           )
                        
                     . Vertices 
                        
                           
                              v
                           
                           
                              0
                           
                        
                        ,
                        
                           
                              v
                           
                           
                              3
                           
                        
                      are called the base pair of vertices at Step  1.


                     Note: in this paper, we assume that the clusters are globally rigid, and we reduce clusters sharing only two vertices with the rest of the graph into edges.

A realization type for a 1-dof tree-decomposable linkage specifies a local orientation in 
                        
                           {
                           +
                           1
                           ,
                           −
                           1
                           }
                        
                      for the triple 
                        
                           (
                           
                              
                                 v
                              
                              
                                 k
                              
                           
                           ,
                           
                              
                                 u
                              
                              
                                 k
                              
                           
                           ,
                           
                              
                                 w
                              
                              
                                 k
                              
                           
                           )
                        
                     , for each construction step 
                        
                           
                              v
                           
                           
                              k
                           
                        
                        ⊲
                        
                           (
                           
                              
                                 u
                              
                              
                                 k
                              
                           
                           ,
                           
                              
                                 w
                              
                              
                                 k
                              
                           
                           )
                        
                     . For a given realization type, a 1-dof tree-decomposable linkage 
                        
                           (
                           G
                           ,
                           
                              
                                 l
                              
                              
                                 ̄
                              
                           
                           )
                        
                      has a simple ruler and compass realization 
                        G
                        
                           (
                           p
                           )
                        
                      which parallels the graph theoretic construction. For example, for the linkage in Fig. 1(a), the ruler and compass realization step corresponding to Construction Step 1 has two possible local orientations, one is shown in the figure, and the other has 
                        p
                        
                           (
                           
                              
                                 v
                              
                              
                                 6
                              
                           
                           )
                        
                      located on the other side of 
                        
                           (
                           p
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              )
                           
                           ,
                           p
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    3
                                 
                              
                              )
                           
                           )
                        
                     . When a realization type is not specified, determining the existence of a realization is however NP-hard  [6].

For 1-dof tree-decomposable linkages, if the bar lengths 
                        
                           
                              l
                           
                           
                              ̄
                           
                        
                      are in 
                        Q
                     , the coordinate values of a realization are solutions to a triangularized quadratic system with coefficients in 
                        Q
                      (i.e. the endpoints belong to an extension field over 
                        Q
                      obtained by nested square-roots). Such values are called quadratically–radically solvable (QRS) values.

There are numerous examples of algorithms and software dealing with 1-dof tree-decomposable linkages, such as Geometry Expressions, SAM, Phun, Sketchpad, Geogebra, D-cubed, the algorithm in  [14], etc. They have the following major functionalities: (i) designing 1-dof tree-decomposable linkages for tracing out specific curves, especially by building new mechanisms based on a library of existing ones; (ii) accepting user-specified parameters, ranges and realization types to generate continuous motion of the linkages.

However, the following issues still exist. 
                           
                              (a)
                              How to canonically represent and visualize the connected components. Currently, the realization space is typically represented as separate curves in 2D that are traced by each vertex of the linkage. In fact, a realization actually corresponds to a tuple of points, one on each of these curves, i.e., the realization space is bijectively represented by a curve in the full ambient dimension of 
                                    2
                                    
                                       |
                                       V
                                       |
                                    
                                    −
                                    3
                                  after factoring out rigid transformations, where 
                                    
                                       |
                                       V
                                       |
                                    
                                  is the number of vertices in the linkage.

How to generate all connected components and find the distance between connected components. Currently, for two realizations in different connected components, there is no method to find out how “close” they can get towards each other by continuous motion, using a meaningful definition of “distance” between connected components.

How to efficiently determine whether two arbitrary input realizations are in the same connected component. Currently, in order to generate continuous motion, the user must specify a range of a parameter containing the parameter value at the given realization. Then either a single connected component is generated for a subset of the specified range, or multiple segments of the realization space, under only the given realization type, are generated within the specified range. We discuss this issue in more detail at the end of Section  1.2.

In this paper, we settle these issues for a natural and commonly occurring subclass of 1-dof tree-decomposable linkages that have low Cayley complexity. The following subsection provides the required background.

The recent papers  [12,13] introduced the use of Cayley configuration space to describe the realization space of a 1-dof, 2D linkage 
                           
                              (
                              G
                              ,
                              
                                 
                                    l
                                 
                                 
                                    ̄
                                 
                              
                              )
                           
                        . A Cayley configuration space is obtained by taking an independent non-edge 
                        
                           f
                         with 
                           G
                           ∪
                           f
                         being minimally rigid, and asking for all possible lengths that 
                           f
                         can attain (i) over all the realizations of 
                           
                              (
                              G
                              ,
                              
                                 
                                    l
                                 
                                 
                                    ̄
                                 
                              
                              )
                           
                        ; (ii) over all realizations of 
                           
                              (
                              G
                              ,
                              
                                 
                                    l
                                 
                                 
                                    ̄
                                 
                              
                              )
                           
                         of a particular realization type. For (i) (resp. (ii)), each realizable length of 
                           f
                         is called a (resp. oriented) Cayley configuration, and the set of all such configurations is called the (resp. oriented) Cayley configuration space of the linkage 
                           
                              (
                              G
                              ,
                              
                                 
                                    l
                                 
                                 
                                    ̄
                                 
                              
                              )
                           
                         on 
                           f
                        , parametrized by the length of 
                           f
                        . The Cayley configuration space is a set of disjoint closed intervals on the real line.

An important complexity measure of the Cayley configuration space is its Cayley complexity, i.e. the algebraic descriptive complexity of the interval endpoints in the Cayley configuration space  [12]. Specifically, if the endpoints are QRS values, the corresponding linkage is said to have low Cayley complexity. We observe that many commonly studied mechanisms, including the Strandbeest, have low Cayley complexity.

For a 1-dof tree-decomposable linkage 
                           
                              (
                              G
                              ,
                              
                                 
                                    l
                                 
                                 
                                    ̄
                                 
                              
                              )
                           
                        , any base non-edge 
                           f
                         can be taken as the Cayley non-edge parameter to give a reasonable Cayley configuration space.

In  [12], algorithms are given for obtaining an (oriented) Cayley configuration space for generic 1-dof tree-decomposable linkages. Here a generic linkage means that no bar length is zero, all bars have distinct lengths and at most one pair of adjacent bars can be collinear in any realization. A realization of a generic linkage automatically satisfies the usual notion of genericity in the rigidity literature. The paper  [12] also shows that for generic 1-dof tree-decomposable linkages with low Cayley complexity, the number of continuous motion paths between two realizations is at most two, and can be directly obtained from the oriented Cayley configuration spaces with complexity linear in a natural, discrete measure of the length of the path. In  [13], a recognition algorithm is given for 1-dof tree-decomposable linkages with low Cayley complexity, with time complexity linear in the number of construction steps of the underlying graph.

While judiciously chosen Cayley parameters shed light on many aspects of 1-dof tree-decomposable linkages, one persistent problem has been that a non-oriented Cayley interval, being a union of multiple oriented Cayley intervals, could correspond to multiple connected components of the realization space, as in Fig. 5. The same example also shows that, although an oriented Cayley interval corresponds to a unique connected component, the mapping is not bijective, since that same connected component could contain more than one oriented interval. Fig. 2
                         summarizes the different cases when determining existence of a continuous motion path between two realizations. There are two cases (2 and 3) where there may or may not exist a continuous motion path (a and b). Previous approaches mentioned in Section  1.1, except for  [14], generate continuous motion within a specified Cayley interval, or multiple segments of continuous motion, each corresponding to a different oriented Cayley interval with the same realization type. Thus they cannot consistently distinguish Case 2a from Case 2b, or Case 3a from Case 3b. The algorithms in  [14,12] can distinguish between these four types. However, the algorithm in  [14] deals with general tree-decomposable linkages and could have exponential time complexity, as opposed to linear complexity of  [12] for linkages of low Cayley complexity (see Theorem 4).

In this paper, we address the following questions for 1-dof tree-decomposable linkages with low Cayley complexity: 
                        
                           (a)
                           How to canonically represent the connected components of the realization space as curves in an ambient space.


                              Theorem 3 gives such a bijective representation by characterizing a canonical set of non-edges, and proving that adding those non-edges results in global rigidity. Consequently, we obtain an ambient dimension in which each connected component bijectively corresponds to a canonical Cayley curve.

How to define the “distance” between two connected components of the realization space.


                              Theorem 5(ii) defines the Cayley distance between two different connected components based on the bijective correspondence given in Contribution (a); using this measure we give an algorithm to find the two nearest realizations between these two components.

Can we provide a complete case analysis and meaningful visualization of connected components and continuous motion paths of the realization space?


                              Theorem 5(i) finds all the connected components of the realization space of a given linkage, in time linear in the number of oriented intervals in the given Cayley configuration space, adapting an algorithm from  [12].

Using these results, in Section  3.3, we provide analysis and visualization for several well-studied mechanisms: Observation 1 shows the complete set of connected components for the Strandbeest, Observation 2 shows the nonstandard connected components for the Cardioid and Limacon, and Observation 3 shows examples of all the different cases in continuous motion generation.

Our manuscript  [15] presents the architecture and functionalities of CayMos, a software implementation for the algorithms developed in  [12,13], as well as efficient algorithmic solutions for the problems given in Section  1.1.

@&#RESULTS@&#

In this section, we prove our main theorem, Theorem 3: for a 1-dof tree-decomposable linkage with low Cayley complexity, there is a bijective correspondence between the Cartesian realization space and complete Cayley distance vectors. The latter is a distance vector on 
                           O
                           
                              (
                              
                                 |
                                 V
                                 |
                              
                              )
                           
                         base non-edges, defined before Lemma 2. This yields a canonical representation of the realization space. To define the complete Cayley distance vector, we need a theorem called the Four-cycle Theorem from  [13] which gives a property of construction steps for 1-dof tree-decomposable linkages with low Cayley complexity.
                           Theorem 1
                           
                              [13] Four-Cycle Theorem


                           
                              A  1-dof tree-decomposable linkage 
                              
                                 
                                    (
                                    G
                                    ,
                                    
                                       
                                          l
                                       
                                       
                                          ̄
                                       
                                    
                                    )
                                 
                              
                              , where 
                              
                                 G
                               
                              has three or more construction steps, has low Cayley complexity on a base non-edge 
                              
                                 f
                              
                              , if and only if every construction step 
                              
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 ⊲
                                 
                                    (
                                    
                                       
                                          u
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                       
                                          w
                                       
                                       
                                          k
                                       
                                    
                                    )
                                 
                               
                              from 
                              
                                 f
                               
                              with 
                              
                                 k
                                 ≥
                                 3
                               
                              has its base pair of vertices taken from an adjacent pair of clusters in a  four-cycle  of clusters.
                           

As an example, refer to Fig. 3
                        . The linkage in (a) satisfies the Four-cycle Theorem, thus has low Cayley complexity. The base four-cycle for Construction Step 3 and 4 is 
                           
                              
                                 v
                              
                              
                                 0
                              
                           
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                           
                              
                                 v
                              
                              
                                 0
                              
                              
                                 ′
                              
                           
                           
                              
                                 v
                              
                              
                                 2
                              
                           
                        . Construction Step 3 is based on the adjacent pair 
                           
                              (
                              
                                 {
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       1
                                    
                                 
                                 }
                              
                              ,
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                    
                                       ′
                                    
                                 
                                 )
                              
                              )
                           
                        , and Construction Step 4 is based on the adjacent pair 
                           
                              (
                              
                                 {
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                                 }
                              
                              ,
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                 
                                 )
                              
                              )
                           
                        , On the other hand, the linkage in (b) does not satisfy the Four-cycle Theorem, thus does not have low Cayley complexity, since Construction Step 3 is not based on an adjacent pair in any four-cycle.

Given a 1-dof tree-decomposable linkage 
                           
                              (
                              G
                              ,
                              
                                 
                                    l
                                 
                                 
                                    ̄
                                 
                              
                              )
                           
                         with low Cayley complexity on base non-edge 
                           f
                           =
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                        , we define a complete Cayley vector 
                        
                           F
                           =
                           
                              〈
                              
                                 
                                    f
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    f
                                 
                                 
                                    n
                                 
                              
                              〉
                           
                         as follows, where 
                           n
                         is the total number of construction steps of 
                           G
                        . (1) For the first two construction steps 
                           
                              
                                 v
                              
                              
                                 1
                              
                           
                           ⊲
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                         and 
                           
                              
                                 v
                              
                              
                                 2
                              
                           
                           ⊲
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                        , let 
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           =
                           f
                           ,
                           
                              
                                 f
                              
                              
                                 2
                              
                           
                           =
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        . (2) For each subsequent construction step 
                           
                              
                                 v
                              
                              
                                 k
                              
                           
                           ⊲
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    k
                                 
                              
                              )
                           
                        , let 
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                           
                              
                                 T
                              
                              
                                 3
                              
                           
                           
                              
                                 T
                              
                              
                                 4
                              
                           
                         be the corresponding base four-cycle, such that 
                           
                              
                                 u
                              
                              
                                 k
                              
                           
                           ∈
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 w
                              
                              
                                 k
                              
                           
                           ∈
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 k
                              
                           
                           =
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           ∩
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                        . Let 
                           
                              
                                 f
                              
                              
                                 k
                              
                           
                           =
                           
                              (
                              
                                 
                                    v
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    k
                                 
                              
                              )
                           
                        . (If there are several base four-cycles, we choose the one with the lowest construction step number.) The complete Cayley distance vector of a realization 
                           G
                           
                              (
                              p
                              )
                           
                         is the vector of distances for the non-edges in the complete Cayley vector.

As an example, the linkage in Fig. 3(a) has the complete Cayley vector 
                           
                              〈
                              f
                              ,
                              
                                 
                                    f
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    f
                                 
                                 
                                    4
                                 
                              
                              〉
                           
                        .


                        Note: It can be easily verified that each non-edge 
                           
                              
                                 f
                              
                              
                                 k
                              
                           
                         in the complete Cayley vector is indeed a base non-edge.
                           Lemma 2
                           
                              For a  1-dof tree-decomposable graph 
                              
                                 
                                    (
                                    G
                                    ,
                                    
                                       
                                          l
                                       
                                       
                                          ̄
                                       
                                    
                                    )
                                 
                               
                              with low Cayley complexity, adding the non-edges in the complete Cayley vector as edges makes 
                              
                                 G
                                globally rigid; i.e., any  2D linkage with 
                              
                                 G
                               
                              as the underlying graph has at most one realization.
                           


                        
                           Proof
                           First notice that if 
                                 
                                    
                                       f
                                    
                                    
                                       1
                                    
                                 
                               and 
                                 
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                               are added as edges, the four-cycle formed by the first two construction steps together with 
                                 
                                    
                                       f
                                    
                                    
                                       1
                                    
                                 
                               and 
                                 
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                               forms a tetrahedron. As an example, refer to Fig. 3(b). The four vertices 
                                 
                                    
                                       v
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                    
                                       ′
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                 
                               give a tetrahedron when 
                                 f
                               and 
                                 
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                               are added as edges.

For each following construction step 
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 ⊲
                                 
                                    (
                                    
                                       
                                          u
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                       
                                          w
                                       
                                       
                                          k
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                    (
                                    
                                       
                                          v
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                       
                                          u
                                       
                                       
                                          k
                                       
                                    
                                    )
                                 
                               and 
                                 
                                    (
                                    
                                       
                                          v
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                       
                                          w
                                       
                                       
                                          k
                                       
                                    
                                    )
                                 
                               can be regarded as edges since the clusters are assumed to be globally rigid. If 
                                 
                                    
                                       f
                                    
                                    
                                       k
                                    
                                 
                               is added as an edge, we can think of 
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                               as being connected to the already constructed part of 
                                 G
                               using three edges. This clearly gives a trilateralization construction, thus proves the lemma.□


                        
                           Theorem 3
                           Main Theorem


                           
                              For generic  1-dof tree-decomposable linkages with low Cayley complexity, there exists a bijective correspondence between the set of Cartesian realizations and the complete Cayley distance vectors.
                           


                        
                           Proof
                           Given a Cartesian realization, the complete Cayley distance vector is uniquely determined. Conversely, given a realizable complete Cayley distance vector, using Lemma 2, we obtain a unique Cartesian realization since the linkage is generic. Therefore we have a bijective correspondence between the set of Cartesian realizations and the set of complete Cayley distance vectors.□

Given a generic 1-dof tree-decomposable linkage with low Cayley complexity, the canonical Cayley curve is a curve in 
                           n
                        -dimension, formed by the set of complete Cayley distance vectors representing each realization in the realization space, where 
                           n
                         is the number of construction steps of the underlying graph. This suggests a meaningful way to visualize the connected components of a linkage, that is, showing the 3D projections of the Cayley curves on three non-edges (appropriately chosen) from the complete Cayley vector.

Our complete Cayley distance vector also enables us to define a canonical distance between any two Cartesian realizations. For a generic 1-dof tree-decomposable linkage with low Cayley complexity, the Cayley distance between any two Cartesian realizations is the Euclidean distance between their complete Cayley distance vectors. The Cayley distance between two connected components of the realization space is the minimum Cayley distance taken over all pairs of realizations, one from each component.

To find the connected components of a linkage, we use the following theorem from  [12]. 
                           Theorem 4
                           
                              [12] Continuous Motion Path Theorem


                           
                              For a generic  1-dof tree-decomposable linkage with low Cayley complexity on the base non-edge, given two realizations, there exist  at most two  paths of continuous motion between them. There is an algorithm finding each such path (provided one exists) given the oriented Cayley configuration spaces. The time complexity is linear in the number of interval endpoints of oriented Cayley configuration spaces that the path contains.
                           

For two realizations in different connected components of the linkage realization space, Theorem 4 does not apply. Nevertheless, we can find the two realizations representing the distance between the two components. 
                           Theorem 5
                           
                              For a generic  1-dof tree-decomposable linkage with low Cayley complexity,
                              
                                 
                                    (i)
                                    
                                       there is an algorithm that generates the entire set of complete connected components of the realization space, where generating each connected component takes a linear time in the number of interval endpoints of oriented Cayley configuration spaces that connected component contains;
                                    


                                       there is an algorithm that, given two realizations in different connected components of the realization space, finds two nearest realizations from each component using the Cayley distance measure.
                                    


                        
                           Proof
                           (i) By adapting the Continuous motion path theorem (Theorem 4) and iterating over all intervals in every oriented Cayley configuration space, we obtain an algorithm for generating the entire set of the connected components of a given linkage within the required time complexity.

(ii) We use the algorithm from (i) to generate the connected component for each realization, sample both components and return the pair of realizations with the smallest Cayley distance.□


                        
                           Observation 1
                           Theo Jansen’s Strandbeest is a well-known and amusing 3D wind-powered walking mechanism, built by assembling parallel copies of 2D 1-dof tree-decomposable linkages with low Cayley complexity, shown in Fig. 1(a). The only previously known connected component of the realization space of Strandbeest is the standard “walking” component shown in Fig. 1(a). Using Theorem 5(i) implementation in CayMos, we obtain all the connected components of the realization space, and observe an interesting property that these connected components arises from combinations of different realization types of the two legs. Each leg, as the subgraph induced by 
                                 
                                    {
                                    
                                       
                                          v
                                       
                                       
                                          3
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          7
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          11
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          5
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          12
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          13
                                       
                                    
                                    }
                                 
                               in Fig. 4
                              , is a 1-dof tree-decomposable linkage with low Cayley complexity by itself. Observe that the realization space of the combined linkage is not the cross product of the realization spaces of the legs, since the combined linkage has 1-dof just as each leg does. However, the set of realization types for the combined linkage turns out to be the cross product of the set of realization types for each leg separately (
                                 
                                    
                                       2
                                    
                                    
                                       3
                                    
                                 
                                 =
                                 8
                               
                              each, as shown in Fig. 4). Each of the 64 combined realization types for the two legs bijectively corresponds to a connected component in the realization space. Two of these components are visualized in Fig. 5.
                           


                        
                           Observation 2
                           The Cardioid linkage and the Limacon linkage given in Fig. 6
                               are also 1-dof tree-decomposable linkages with low Cayley complexity. Prior knowledge of the Cardiod linkages and the Limacon linkage is restricted to the standard connected component. Theorem 5(i) implementation in CayMos tells us that for the set of bar lengths given in Fig. 7
                              , the total number of connected components for both linkages is 4. The maximum number of connected components is 8. Fig. 7(a) shows a nonstandard connected component of the Cardioid linkage and (b) shows a nonstandard connected component of the Limacon linkage.


                        
                           Observation 3
                           As shown in Fig. 2, there are several different cases that arise when generating continuous motion between two realizations of a 1-dof tree-decomposable linkage with low Cayley complexity. Previous implementations require a user specified interval of the Cayley configuration space, and only generate continuous motion for a fixed connected component, or all realizations for a fixed realization type. Thus, they cannot distinguish Case 2a from Case 2b. or Case 3a from Case 3b. We use Theorems 4 and 5(ii) implementation on CayMos to distinguish these cases. In particular, for Case 2a (see Fig. 8
                              (a)) and Case 3a (see Fig. 9
                              (a)), we find the continuous motion paths in the connected component. For Case 2b (see Fig. 8(b)) and Case 3b (see Fig. 9(b)), we find the distance between connected components.

@&#CONCLUSION@&#

In this paper, we use CayMos to solve the problems (a)–(c) proposed in the abstract, for the natural and commonly occurring class of 1-dof tree-decomposable linkages with low Cayley complexity. Our future objective is to minimize the dimension of a complete Cayley vector. It has been shown in  [12] that the minimum dimension is 2 for 1-path graphs, and a minimal complete Cayley vector has been shown for general 1-dof graphs of low Cayley complexity, assuming globally rigid clusters.

Some other linkages, for example, the Nephroid linkage and the Conics linkage, are 1-dof tree-decomposable linkages, but do not have low Cayley complexity. The CayMos software efficiently determines that they do not have low Cayley complexity using an algorithm in  [13], but other tools presented in this paper do not directly apply since the main theorem fails, pointing to a clear future work direction.

@&#REFERENCES@&#

