@&#MAIN-TITLE@&#3D surgical planning in patients affected by lipodystrophy

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           Use of 3D surface scanning for surgical planning (no radiation required).


                        
                        
                           
                           Easy-to-use application for surgical planning of facial lipodystrophy.


                        
                        
                           
                           Providing of a facial natural surface to guide surgeons in their interventions.


                        
                        
                           
                           Computation of the volume to be injected during facial surgery interventions.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

AIDS

Lipodystrophy

Software tool

@&#ABSTRACT@&#


               
               
                  Lipodystrophy is a pathological condition characterized by the focal or general absence of adipose tissue. Surgeons reset the patient's surface contours using injectable materials to recreate a normal physical appearance. However, due to difficulties in preoperative planning and intraoperative assessment, about 15% of the surgical procedures involved are reinterventions to improve volume or symmetry. This increases the need for an available, efficient tool capable of providing the surgeon with a good estimation of the volumes to be injected before the intervention proper begins. This work describes a virtual reality-based application for the surgical planning of facial lipodystrophy correction (FLIC). The tool uses points selected interactively by the surgeon to compute a curve that delimits the surface area to be operated on. It then automatically computes an estimated natural reconstructed surface and the quantity of volume that needs to be implanted during the intervention. Experiments have been carried out in which the filling volumes estimated using FLIC and ZBrush software were compared with the real volumes injected by the surgeon. ICCs higher than 0.97 indicate that there were no significant differences between the respective measurements, thus validating the tool proposed in this paper.
               
            

@&#INTRODUCTION@&#

HIV or AIDS is a disease that has spread in recent years. Thanks to advances in medication control, it is now considered a chronic illness rather than a fatal disease. The introduction of antiretroviral therapies (ART) has significantly reduced mortality and infection rates in patients affected by the human immunodeficiency virus (HIV). Anti-retroviral drugs have reduced the viral load to undetectable levels, allowing patients to lead normal lives. However, one of the side effects of AIDS treatment is the marked lipodystrophy [1,2] it can cause in several parts of the body.

Lipodystrophy – the loss and/or accumulation of fat in specific areas of the body – is a major concern among HIV patients because of the discomfort and stigmatization produced by the physical changes it induces [1,2].

One of the biggest concerns for patients affected by facial lipoatrophy (FLA) is the effect and visibility the pathology has in their faces. Facial contours are very complex and vary greatly from one individual to another. It is therefore particularly difficult to monitor volume changes over long periods in the FLA population, economic and non-invasive techniques being required to measure facial changes. The imaging technique of three dimensional (3D) surface scanning offers opportunities for the objective analysis of human facial features and for monitoring FLA evolution [3], with the added advantage that no radiation is required to generate a 3D model of the patient.

Therapeutic measures to limit or correct side effects associated with FLA include:
                        
                           1
                           Replacement of the pharmaceuticals used in FLA treatment by others less related to these effects (if the patient's condition allows such a substitution) and,

Surgical techniques using polyacrylamide synthetic implants and autologous fat grafting (facial lipofilling) to correct facial lipoatrophy (FLA).

People with moderate or severe lipodystrophy in Andalusia (Spain) have been receiving reconstructive facial surgery since 2003 through the Andalusian Health System. However, this type of surgery is relatively new and reliable evidence is still lacking with regard to such important aspects as safety, tolerability and effectiveness in the medium and long term. One reason for this is the difficulty of quantizing the degree of improvement and persistence over time with existing diagnostic methods. There are two main problems in this type of surgery. On the one hand, surgeons do not have models of the patients’ faces as they were when healthy (free of lipodystrophy), and this makes it difficult to know how much volume is required in the facial area to give the face a natural appearance. On the other hand, to avoid having to perform follow-up operations later, surgeons would like to have an accurate idea of the liquid volume that needs to be injected prior to the intervention. For example, due to difficulties involved in preoperative planning and intraoperative assessment, at least in our series of approximately 275 consecutive procedures for correcting facial lipoatrophy with polyalkylamide synthetic facial implants, about 15% of the operations were reinterventions to improve either volume or symmetry.

This work presents a novel virtual reality-based software application for assisting surgeons during the planning of facial surgery. The tool gives the estimated facial volume that needs to be injected in the patient to correct the effects of FLA, thereby reducing the number of reinterventions stemming from problems with the initial treatment and/or patient dissatisfaction with the results. The current state of the art in surgical planning tools does not provide a tool that effectively helps surgeons during the planning of surgical interventions in patients with facial lipodystrophy. Admittedly, much work has been done in the field of surgical planning [4,5] and many studies addressing facial surgical planning in particular can be found in fields like maxillo-facial surgical planning [6] and Orthognathic Surgery [7]. In these works, 3D bone and soft-tissue models are usually obtained by applying marching cubes to the CT data available. Each coordinate on the bone surface has its own unique projection on the soft-tissue mesh. When a point on the bone surface is changed, the corresponding soft tissue coordinate is changed accordingly. This makes it possible to simulate soft tissue movement caused by bone movement. However, all these works rely on the use of CT imaging, which implies radiating the patient each time a new intervention is necessary. Moreover, the techniques described in these works are intended mainly for bone interventions and not just for soft tissue surgery. In our work, we use a cost-effective, economic, non-invasive 3D surface scanning and imaging technique, which makes it possible to monitor FLA evolution [3] over long periods of time, generating a 3D model of the patients without having to resort to any radiation. The surgical interventions are simulated directly on the patient's surface and not on bone structures.

Some other authors have focused on developing simulator tools using finite-element modeling to create real-time virtual environments for skin surgery. In [8], a deformable soft-tissue model for skin that responds in real time to user manipulation was implemented and used to perform tensile stress tests on human skin samples. In Sifakis et al. [9], a real-time virtual surgical environment was implemented to enable the surgeon to practice cutting and manipulating tissue. The main drawback of these simulators is that they do not operate on real patient models and focus almost exclusively on obtaining accurate models of skin tissue rather than providing a fast method to help surgeons plan interventions.

Many other works propose software applications which freely modify specific parts of the body (face, breasts, ears, neck, etc.) [10–13]. These works do not consider real skin models but are intended to provide an approximate idea of what the patient would look like after surgery. Most of the programs are essentially photograph editors, intended only as a means of communication between patient and surgeon. Obviously, the results they produce have to be approved by the specialist who is going to perform the surgery.

In the work presented here, the body region subject to intervention is not freely modified by the user. The user (the surgeon) merely selects a number of points around the area to be operated on, and a new surface is then computed in order to give the patient's face a natural appearance, ideally similar to what it looked like before the illness.

The tool was validated using 3D images obtained by scanning the facial surface of several patients affected by HIV- and ART-associated facial lipodystrophy. It has a very manageable interactive graphical interface. The tool is described in greater detail in the next section. The third section describes some of the material employed and presents some experimental results. Finally, the last section contains a discussion of the results obtained and some conclusions.

@&#METHODS@&#

The proposed FLIC software tool uses a surface scanner to create a model of the patient's facial surface. This imaging technique was chosen for its cost-effectiveness, and also because, unlike other alternatives, such as Computer Tomography, it involves no use of radiation.

To develop the tool we used VTK class libraries [14], which operate in the programming language C++. VTK (Visualization Toolkit) is an open source object-oriented programming code for displaying and processing images.

The set of VTK functions implemented was large and complex, but the tool was designed to be easy to use and easy to combine with any other object-oriented programming language, such as C++, Java or Tcl. VTK allows operations on images or models in two and three dimensions and it also allows 2D and 3D models to be generated with just few lines of code.

In addition to the abovementioned libraries, a graphical interface based on Qt [15] was designed, to facilitate interaction between the physician and the proposed tool.

The tool makes it possible to perform several tasks, facilitating the execution of simulations in different areas of the patient's face in just one intervention. The complexity of the programming code is completely hidden to the user, and so no programming knowledge is required to use the tool. Both VTK and Qt are free, open multi-platform software tools currently in widespread use and at advanced stages of development. This benefits the tool, since it means that it can be implemented and improved on different operating systems.

The algorithm consists of the following steps:
                        
                           1
                           Starting the application. When the application is first launched, it displays a graphical interface that includes two display windows for managing the surgical planning. The left hand window is intended to display the surface model of the patient's face, which is where the surgeon is going to interact. This model is loaded into the VTK programming environment. The right hand window will show the results of the simulated intervention. The application also includes other options, such as loading the facial model, saving results or selecting the area where the patient is going to be operated on. Fig. 1
                               shows the GUI (Graphical User Interface) during program execution. The surface model of the patient's face is a triangular mesh comprising approximately 250k triangles. This mesh gives the appearance of a three-dimensional surface. Texture information is not given as it is not needed to compute the desired facial surface or the volume to be injected in the planned interventions.

Delimitation of the surface to be reconstructed. The user, usually a physician, selects a number of points around the area where the surgery is going to be performed. The algorithm connects those points and creates a curve using spline interpolation. For those points that do not fall on the surface of the patient's face, their projection on the surface is computed. Thus, the curve is entirely composed of points on the patient's face. This computed curve, C
                              0, demarcates a surface on the patient's face. Fig. 2
                               shows how an area is selected. If some of the points selected by the user do not fall on the patient's surface and their projection on the surface cannot be computed, the program will ask the user to provide a new set of points. This may happen when the scanned image is not complete or it has holes in some regions (see the regions on the neck and hair of the patient shown in Fig. 1 for instance).

Likewise, if curve C
                              0 has a complex shape and self-intersects, the program will ask the user to select a new set of points on the surface of the patient's face. Note that this is not common because if the curve self-intersects, that would mean there are two (or more) surfaces to be corrected and not just one. However, this is not a problem as the program allows new regions to be added after the preceding region has been corrected (see Fig. 1). For instance, Fig. 4
                               shows an initial curve, complex in shape and self-intersecting. However, as the program uses the average normal of the points selected by the user to compute a surface, it makes sense that this curve has a final convex appearance. Besides, note that in Fig. 4, in spite of the curves giving the sensation of crossing, they do not actually cross (see bottom figure on the left). If a proper figure-of-eight set of points is selected the program will either request a new set of points or it will compute a surface following the steps described through the paper. Note that in this particular case the program is still able to compute a regular surface, giving the patient's face a natural appearance.

Simulation of the reconstructed surface. Once the curve has been obtained, the algorithm has to reconstruct the surface area enclosed within it, eliminating the irregularities caused by lipodystrophy to produce a smooth, even surface. The surface is virtually reconstructed as follows:
                                 
                                    (a)
                                    First, a central point c
                                       orig is computed as:


                                       
                                          
                                             (1)
                                             
                                                
                                                   c
                                                   orig
                                                
                                                =
                                                (
                                                
                                                   x
                                                   co
                                                
                                                ,
                                                
                                                   y
                                                   co
                                                
                                                ,
                                                
                                                   z
                                                   co
                                                
                                                )
                                                =
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   
                                                      (
                                                      
                                                         x
                                                         i
                                                      
                                                      ,
                                                      
                                                         y
                                                         i
                                                      
                                                      ,
                                                      
                                                         z
                                                         i
                                                      
                                                      )
                                                   
                                                   n
                                                
                                             
                                          
                                       where (x
                                       
                                          i
                                       ,y
                                       
                                          i
                                       ,z
                                       
                                          i
                                       ) represents a point in the curve selected by the user and n is the total number of points selected by the user.

If ni
                                        is surface normal at point i on curve C
                                       0, the average normal is defined as


                                       
                                          
                                             (2)
                                             
                                                
                                                   
                                                      
                                                         
                                                            n
                                                            c
                                                         
                                                      
                                                   
                                                
                                                =
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               n
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                   n
                                                
                                             
                                          
                                       
                                       nc
                                        is useful as it provides the direction in which the reconstructed surface is to be displaced.

A set of curves C
                                       
                                          k
                                       , k
                                       =1, ..., K
                                       max is then obtained. In our implementation K
                                       max was set to 35. The number of curves was experimentally determined and it was one providing good results according to the surgeons’ opinions. These curves are obtained from a transformation of C
                                       0, in which C
                                       0 is shrunk and its center is shifted in the normal direction nc
                                       . Thus, curve C
                                       
                                          k
                                        is obtained from C
                                       0 with the following operations:
                                          
                                             i
                                             First, C
                                                0 is scaled as follows:
                                                   
                                                      (3)
                                                      
                                                         
                                                            P
                                                            ik
                                                         
                                                         =
                                                         (
                                                         
                                                            x
                                                            in
                                                         
                                                         ,
                                                         
                                                            y
                                                            in
                                                         
                                                         ,
                                                         
                                                            z
                                                            in
                                                         
                                                         )
                                                         =
                                                         
                                                            
                                                               
                                                                  K
                                                                  max
                                                               
                                                               −
                                                               k
                                                            
                                                            
                                                               
                                                                  K
                                                                  max
                                                               
                                                            
                                                         
                                                         [
                                                         (
                                                         
                                                            x
                                                            i
                                                         
                                                         ,
                                                         
                                                            y
                                                            i
                                                         
                                                         ,
                                                         
                                                            z
                                                            i
                                                         
                                                         )
                                                         −
                                                         
                                                            c
                                                            orig
                                                         
                                                         ]
                                                         +
                                                         
                                                            c
                                                            orig
                                                         
                                                      
                                                   
                                                
                                             

(x
                                                
                                                   in
                                                , y
                                                
                                                   in
                                                , z
                                                
                                                   in
                                                ) are points in the new curve C
                                                
                                                   k
                                                . This scaling produces a new curve, inside and concentric to C
                                                0.

The new curve is then displaced along the normal to the original surface. To do so, a displacement vector is calculated as:


                                                
                                                   
                                                      (4)
                                                      
                                                         Δ
                                                         
                                                            
                                                               
                                                                  
                                                                     n
                                                                     new
                                                                  
                                                               
                                                            
                                                         
                                                         =
                                                         
                                                            
                                                               
                                                                  
                                                                     n
                                                                     c
                                                                  
                                                               
                                                            
                                                         
                                                         *
                                                         ln
                                                         (
                                                         k
                                                         +
                                                         1
                                                         )
                                                      
                                                   
                                                
                                             

This translation is applied to all the points in the curve at iteration k as:


                                                
                                                   
                                                      (5)
                                                      
                                                         (
                                                         
                                                            x
                                                            ik
                                                         
                                                         ,
                                                         
                                                            y
                                                            ik
                                                         
                                                         ,
                                                         
                                                            z
                                                            ik
                                                         
                                                         )
                                                         =
                                                         (
                                                         
                                                            x
                                                            in
                                                         
                                                         ,
                                                         
                                                            y
                                                            in
                                                         
                                                         ,
                                                         
                                                            z
                                                            in
                                                         
                                                         )
                                                         +
                                                         Δ
                                                         
                                                            
                                                               
                                                                  
                                                                     n
                                                                     new
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             

This displacement produces an elevation of C
                                                
                                                   k
                                                 along the previously computed normal and prevents the final surface to be computed from self-intersecting. The rationale behind the displacement is that the final surface enclosed by C
                                                0 should cover the original surface affected by lipodystrophy. On the other hand, the reconstructed surface should be higher in the center and nearer the old surface as we approach C
                                                0.

After the step described above, a series of concentric closed lines around the centroid is obtained. Some of these curves are shown in Fig. 3
                                       . They are then interpolated to form the reconstructed surface.

Next, the 3D Delaunay triangulation algorithm [16] is applied to the mesh for regularization purposes. This algorithm provides a fairly regular surface by modifying the entry points to create new triangles which satisfy the Delaunay condition. A network of triangles fulfills the Delaunay condition if all the spheres circumscribed in all the triangles are empty, i.e. the circumcircle of each triangle in the network should not enclose the vertex of any other triangle.

Gaussian smoothing is then applied to this new interpolated surface, which no longer displays the non-uniformities caused by the patient's loss of fatty material. This step gives the surface an even more natural, regular appearance. Fig. 5
                                        shows the interpolated surface applied over the patient's face.

The program computes the volume contained between the new interpolated surface and the original surface in the patient's facial model. The volume is computed using the divergence theorem algorithm (DTA), which is fully described in [17]. Basically, this algorithm computes the volume from the points list of a closed mesh. In our implementation, this mesh has two surfaces: the original surface of the patient's face and the new, regular computed surface. These two surfaces share the original contour delimited by the points selected by the surgeon in the first place. This volume provides information about how much implant will be needed. The result of the intervention is shown in the right hand window of the GUI.

The process of validating and evaluating our proposed tool consisted of three stages. 25 subjects were involved in all the experiments carried out. All of the patients in our study were male and Caucasian. Their average age was 48.3 years (range: 30–68 years). Informed consent was obtained from the patients and the in-house review board approved the study protocol. A scan of each patient's cervicofacial region was obtained using a 3D CSI white light scanner. All the scans were performed using the same machine (an Artec MH System scanner).

The FLIC software tool was first adjusted using the scans of the head and neck area of ten healthy subjects taken from a pilot study.

In the second stage, the objective of which was to validate our tool, five HIV patients with facial lipodystrophy (grades II and III [18]) scheduled to receive facial implants were analyzed. The head and neck area of these patients were scanned and the images obtained were processed with our experimental FLIC tool to determine the hypothetical volume (volume A) that needed to be injected to correct the facial defects. The images obtained by surface scanning were also processed by the same surgeon with ZBrush, a 3D modeling, sculpting and digital painting software used extensively in the film, video and illustration industries [19]. Using this software, which requires a high degree of expertise and is neither simple nor easy to use, the surgeon proceeded to correct the facial defects, yielding another volume (volume B). This volume B was compared with the volume obtained using the FLIC tool. Note that the commercially available tool Zbrush to compute this volume B has been used just for comparison purposes. Zbrush requires a high degree of knowledge in using it and it is intended mainly for artistic purposes. Besides, it requires a license that is not available for most of the surgeons.

To test the degree of agreement between both tools, an intraclass correlation coefficient (ICC) was computed using the SPSS v21.0 statistical tool. The ICC coefficient is the most appropriate statistical test when variables are quantitative, and it can be used to evaluate the consistency, or agreement, between different measurements provided by different observers or when using different measurement systems. Its value varies between 0 and 1. An ICC close to 1 indicates a strong correlation or match between the two measuring systems, meaning that they are potentially interchangeable and can be considered equivalent.

The ICC coefficients are shown in Tables 1–3
                     
                     
                      (corresponding to total facial volume, right hemifacial volume and left hemifacial volume, respectively). To provide additional information, the tables also include other statistical parameters such as Cronbach's alpha [20] and the F-test [21].

Cronbach's alpha measures internal consistency among the data. Values higher than 0.9 indicate a high degree of consistency.

The F-test [21] determines whether two population variances are equal by comparing the ratio of two variances. If the variances are equal, the variance ratio will be 1. All hypothesis testing was carried out under the assumption that the null hypothesis is true.

According to the results shown in the tables and considering the ICC coefficients, which are close to 1, we can conclude that the intraclass correlation index is very high and significative, meaning that both the FLIC and the ZBrush tools produce equivalent results.

In a third stage, after validation, a clinical study was carried out to evaluate our tool with 10 patients undergoing surgical intervention. The patients were clinically examined and classified according to the degrees of severity established by Fontdevila [18]. According to this classification, all patients had Grade 2 or Grade 3 FLA. The patients were asked to fill out a questionnaire indicating their “QUALITY OF LIFE INDEX” [22] at the time of inclusion in the study and 12 and 18 months after surgery. The 10-patients’ interventions were carried out by surgeons with a high degree of expertise in the field. These interventions were based on the surgeons’ clinical judgment and knowledge thus following their own criteria and without any extra guidance (and, thus, without Zbrush or other software). Five of them were treated with polyacrylamide (Bio-Alcamid) synthetic implants, and the other five were given autologous fat injections. The postoperative clinical follow-up was conducted 2, 6, 12 and 18 months after intervention. For all of the subjects, pre- and post-operative digital photographs of their facial area (right lateral, right oblique, frontal, left oblique, left-mento-occipital and fronto-chin views) were obtained. Preoperative and post-operative scans of the patients were also performed. The volumes injected during the facial interventions (volume C) and the kind of material implanted were recorded to compare them with the predicted volumes obtained using the FLIC tool. All the variables and different volumes collected in the course of the three stages were stored in a spreadsheet for analysis with the SPSS v21.0 statistical tool.

Three plastic surgeons performed virtual surgery using the FLIC tool with images from the pre-operative 3D scans, and producing three different volumes (volume 1, volume 2 and volume 3). The surgeons did not know the volumes estimated by their other colleagues, or the real volumes injected into the patient during surgery.


                     Fig. 6
                      shows how each surgeon corrected the patient's facial volumes. The volumes each surgeon estimated would have to be injected into the patient can be seen in Table 4
                     .

Once the volumes estimated using the FLIC tool (volumes 1, 2 and 3) and the real volumes injected (volume C, based on each surgeon's clinical judgment following physical examination) were available, the correlation (ICC coefficients) between those volumes was statistically determined. The ICC coefficient is shown in Table 5
                     . It can be seen that the ICC coefficient is higher than 0.97, meaning that the volumes are very correlated. It can therefore be concluded that the intraclass correlation index is very high and statistically significative. This once again reinforces the usefulness of the FLIC tool.


                     Fig. 7
                      show the results obtained using FLIC for four different patients.


                     Fig. 8
                      shows four different patients (left side of the face) before and after the simulated and real interventions. It should be noted that it is very difficult to make accurate post-intervention comparisons between patients (some weeks/months later) because the patients’ physical appearances change over time, mainly when they gain or lose weight. As can be seen in the different figures, the reconstructed surfaces look very natural in the areas subject to intervention.

The studies described here show how the proposed FLIC tool has been successfully tested by the surgeons and clinical staff involved in the interventions. Our tool predicts the volumes to be injected in the same way that an expert surgeon does and, in comparison with tools such as ZBrush, it provides similar results but with much better usability and lower time requirements.

The tool will be a useful aid in the surgical planning of future interventions.

Newly available drugs have considerably reduced the impact of their side effects on HIV patients to such an extent that HIV is now seen more as a chronic disease than as an inevitably fatal illness. However, one of the most obvious side effects of medication is facial lipodystrophy. So far, surgery is the most effective solution, but the difficulties of preoperative planning and intraoperative assessment give rise to a reintervention rate of about 15%, the aim of most reinterventions being to improve volume or symmetry. This makes it even more necessary to have a tool available which is capable of efficiently assisting surgeons in the planning of surgical interventions, thus achieving optimal results and avoiding the need for reinterventions. The surgical planning tool implemented and validated in our study was designed precisely to meet this need.

Our tool gives the patient's face a natural appearance. “Natural appearance” is difficult to define since its meaning ultimately depends on the individual clinician's and patient's perception of what is visually pleasing. Some aspects of attractiveness/naturalness are generally accepted as being universal, and these should be considered as a basis for aesthetic analysis. They include side-to-side symmetry and averageness (that is, a lack of distinctive qualities) [23,24].

In line with these criteria, and in order to obtain a more natural appearance in these areas (which are mainly observable in the midface region), the tool described in this work computes a set of curves with a softly varying surface normal (as described in Section 2) to produce side-to-side symmetry, evenness and smoothness in the regions to be operated on. The surfaces provided by the tool, with the corresponding resultant facial models, are used in consultation with the patients, who are asked whether, subjectively, they approve of the new shape. As the tool allows interactivity, the surgeon can modify the shape if a patient is not satisfied.

The tool includes a graphical interface which significantly increases its interactivity and usability, and is quick and easy to install on any computer. It predicts the volumes to be injected in the same way that an expert surgeon does and, in comparison with tools such as ZBrush, it produces similar results but with much better usability.

There are however certain limitations in the use of the FLIC tool. As it has been addressed throughout the paper, the presence of holes on the patient's surface when the scanned image is not complete can make it difficult to compute either the ideal surface on the patient or the volume to be injected. Note that if some of the points selected by the user do not fall on the patient's surface, their projections on the surface cannot be computed, and the program will need to ask the user to provide a new set of points. Also, if some of the points selected by the user surround a region with a hole inside, the program will still be able to compute a surface. However, in this case, the program will not be able to compute the volume enclosed between the new computed surface and the original surface over the patient face due to the presence of this hole.

We believe that the use of this preoperative FLIC planning tool in facial surgery for FLA patients will not only contribute to greater effectiveness and better clinical results in the surgical procedure, but also lower family, social and health related costs.

Since the data obtained using this experimental surgical tool displayed sufficient correlation both between different observers and with data taken from medical records, the FLIC tool has been included in a clinical trial that is currently being carried out to analyses how FLA affects patients under treatment with antiretroviral drugs.

We do not want to underestimate the potential benefits our virtual surgery tool can offer in the area of experimental surgical training for resident physicians, by making it possible to manipulate virtual human prototypes prior to real surgical interventions.

Although the tool was designed mainly with patients affected by lipodystrophy in mind, it can also be used in other aesthetic surgery interventions where a smooth, natural-looking skin surface is desired.

None declared.

@&#ACKNOWLEDGEMENTS@&#

The authors wish to thank the Plastic Surgery Unit at the Virgen del Rocio Hospital for providing the three-dimensional models of the patients used in this work. This work was supported in part by the FIPSE project “Realidad Virtual aplicada a la lipodistrofia facial a T.A.R. en pacientes con VIH” (“Virtual Reality Applied to Facial Lipodystrophy and A.R.T. in HIV Patients”) and by project P11-TIC-7727, Junta de Andalucia (Spain).

@&#REFERENCES@&#

