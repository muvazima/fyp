@&#MAIN-TITLE@&#Spatio-temporal weighting in local patches for direct estimation of camera motion in video stabilization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We estimate camera motion based on local patches’ spatio-temporal information.


                        
                        
                           
                           Spatio-temporal weight considers the age, edges, saliency, and distribution of patch.


                        
                        
                           
                           Weighted object function is minimized to find camera motion model.


                        
                        
                           
                           Direct estimation reduces computational load and eliminates accumulation errors.


                        
                        
                           
                           Estimated camera motion is used for video stabilization.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Video stabilization

Camera motion estimation

Spatio-temporal information

Object function minimization

@&#ABSTRACT@&#


               
               
                  This paper presents a robust video stabilization method by solving a novel formulation for the camera motion estimation. We introduce spatio-temporal weighting on local patches in optimization formulation, which enables one-step direct estimation without outlier elimination adopted in most existing methods. The spatio-temporal weighting represents the reliability of a local region in estimation of camera motion. The weighting emphasizes regions which have the similar motion to the camera motion, such as backgrounds, and reduces the influence of unimportant regions, such as moving objects. In this paper, we develop a formula to determine the spatio-temporal weights considering the age, edges, saliency, and distribution information of local patches. The proposed scheme reduces the computational load by eliminating the integration part of local motions and decreases accumulation of fitting errors in the existing two-step estimation methods. Through numerical experiments on several unstable videos, we verify that the proposed method gives better performance in camera motion estimation and stabilization of jittering video sequences.
               
            

@&#INTRODUCTION@&#

The number of cameras on mobile platforms is significantly increasing, and access to them is much easier these days. However, the videos captured by those cameras are easily exposed to the instability problem because of hand-trembling or the absence of tools to maintain the camera path, such as camera dollies and steadicam. Under these conditions, the quality of video declines and it is hard to watch or understand scenes. The problem of unstable video not only occurs in the mobile platform case. Even mounted cameras on a pole or building wall can be jittered by wind or resonance of mounting structures. Without the aid of costly hardware devices, such as gyros and corresponding control units, the video stabilization process is adopted as a tool to transform acquired shaking videos to smooth sequences and enhance their quality. The enhanced sequences will be able to improve significantly the performance in higher image analysis, e.g. object detection, recognition and visual surveillance [1].

Generally, the video stabilization algorithm is composed of three steps: (1) motion estimation (2) motion compensation, and (3) image composition [2]. The camera motion between two consecutive frames is estimated in the motion estimation step, and the result is passed to the other two steps. Motion estimation is the most important step in video stabilization because the remaining two steps significantly depend on the performance of this step. In the motion compensation part, the estimated motion is divided into the intentional motion and the shaky motion to find the actual unwanted motion. This compensation step is required when the camera itself is moving and shaking at the same time, but can be omitted in the case of the static jittering camera. In the image composition step, the input frames are synthesized to build stabilized sequences, using the estimated and compensated motion. In this paper, we focus on motion estimation which is the most crucial step for the final performance of the stabilization algorithm.

Various approaches have been developed for camera motion estimation in video stabilization. Among them, the feature tracking based approach is well known for its good performance. One of the features being widely used is the SIFT feature [3]. SIFT feature based methods [2,4–8] extract feature descriptors in images, match them to find corresponding pairs in the consecutive frames, and estimate camera motion from the motions of features. SIFT feature trajectories are combined with several techniques such as considering local neighborhood [2], decreasing accumulation errors [4], and adopting particle filter scheme [5,6]. These approaches suffer from non-repeatability of SIFT features, large computation to extract and match features every frame, and the existence of occlusion/foreground objects. In [9], Chang et al. proposed an optical flow based approach and Censi et al., in [10], tracked corner features by the Kalman filter. These methods are faster than SIFT based methods, but they also cannot handle scenes with foreground objects and feature tracking failure. Recently, Liu et al. [11] introduced a method to smooth the camera path by adding subspace constraints on feature trajectories. However, their method works only on video, not in online sequences, and requires long feature tracks over multiple frames. Grundmann et al.’s method in [12] does not show good performance for the scene with a small number of features.

Another category for the motion estimation is the block matching based approach [13–16]. Rather than using a single representative point, this approach selects several blocks in images and finds their local motions by comparing similarities of corresponding blocks between consecutive frames. The similarity can be measured by edge information [13], gray coded bit plane [14], intensity mean absolute difference [15], and memory filter [16]. These approaches are fast and simple, but do not guarantee robust performance if the extracted blocks are not discriminative enough or those blocks are on foreground objects. This is because a homogeneous region has no information, and foreground objects have their own motions which are not related to the camera motion. The domain transformation methods, such as polar coordinates [17], Hilbert Huang Transform [18], and phase domain [19,20], got more robust results in certain situations. However, the effect of the domain transformation is limited to specific situations, and approaches in this category still have problems arising from foreground objects and dynamic scenes.

Other types of the existing methods, such as integral projection methods [21,22] and the complex Markov random field (MRF) model [1], also have limitations. The projection methods cannot provide accurate results when the actual camera motion model is complex, and an MRF based approach requires too much computation, even though it shows robust performance. Liu et al., in their work [23], proposed an energy minimization concept which shows robust stabilization but it is computationally expensive for 3D camera motion estimation using the structure from motion method. Most existing approaches to estimate global camera motion from local motions require additional outlier elimination algorithms, such as RANSAC [24], which are generally heavy to compute.

In this paper, we aim to achieve light computational load as well as high accuracy in motion estimation even when containing foreground objects and dynamic scenes. For this purpose, we design a weighted optimization formulation with spatio-temporal information on local patches. Depending on the spatio-temporal information contained in the local patches, we assign weights to emphasize the effect of reliable patches and to reduce that of unimportant patches in the optimization formulation. To assign the weights, we develop a formula calculating the spatio-temporal weights considering the age, edges, saliency, and distribution information of the local patches. Because patches on homogeneous regions and foreground objects are less weighted by the formula, camera motion can be estimated more robustly even in scenes with foreground objects. This spatio-temporal weighting concept enables a direct estimation of global motion parameters without additional outlier elimination algorithms adopted by most existing schemes. To verify the performance of the proposed scheme, numerical experiments on several unstable videos are conducted in the sense of computational load and accuracy in camera motion estimation and video stabilization.

The camera motion between two consecutive frames can be estimated from background motions in those frames because background regions do not have their own motion and their views are changed only by camera motion. For this reason, the background motions can provide information about the camera motion, even though the amount of information may vary with different characteristics. Generally, camera motion induces 2D image motion, which can be described by a 3×3 motion parameter matrix. The matrix represents the relationship between two image frames, and the matrix has different forms according to its various degrees of freedom (DOF). While a lower DOF model cannot describe complex camera motion, a higher DOF model requires heavy computation time, and might cause overfitting errors, e.g. [14,17] use a 3 DOF model and [4–6,13,16] adopt a 4 DOF model. In the proposed method, a 6 DOF model is adopted to handle complex camera motions.

With the defined motion parameter matrix, we adopt a minimization scheme for camera motion estimation. From Lucas Kanade Tracking (LKT) in [25], the following object function is minimized.
                        
                           (1)
                           
                              
                                 
                                    
                                       min
                                    
                                    
                                       H
                                    
                                 
                              
                              
                              O
                              (
                              H
                              )
                              =
                              
                                 
                                    
                                       min
                                    
                                    
                                       H
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       m
                                    
                                 
                              
                              
                                 
                                    {
                                    
                                       
                                          I
                                       
                                       
                                          t
                                       
                                    
                                    (
                                    
                                       
                                          X
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    -
                                    
                                       
                                          I
                                       
                                       
                                          t
                                          +
                                          1
                                       
                                    
                                    (
                                    f
                                    (
                                    
                                       
                                          X
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    H
                                    )
                                    )
                                    }
                                 
                                 
                                    2
                                 
                              
                              ,
                           
                        
                     where m is the number of extracted points, X
                     
                        i
                      is the ith discriminative point (X
                     
                        i
                     
                     =(x
                     
                        i
                     ,
                     y
                     
                        i
                     )) on the tth frame, and f(X
                     
                        i
                     ,
                     H) is the warping function that transforms X
                     
                        i
                      with H which is the motion parameter matrix. I
                     
                        t
                     (X
                     
                        i
                     ) is the intensity value of X
                     
                        i
                      on the tth frame, and I
                     
                        t+1(f(X
                     
                        i
                     ,
                     H)) is the intensity value at the position of f(X
                     
                        i
                     ,
                     H) in the t
                     +1th frame (the position corresponds to the previous extracted point in the tth frame). Any minimization algorithm can be adopted, but, in our method, an iterative gradient descent method is used to solve the minimization problem. This formulation, however, does not consider different amount of information in each local point and weigh all points 
                        
                           
                              
                                 X
                              
                              
                                 i
                              
                              
                                 ′
                              
                           
                        
                     s equally. To handle this problem, adopting an outlier rejection algorithm, such as RANSAC [24], is quite a standard solution to remove unreliable points but it is computationally expensive. To avoid high computational outlier rejection algorithms, we aim to establish a novel optimization formulation with spatio-temporal weighting on each local point in this paper.

@&#OVERVIEW@&#

The overview of the proposed method is illustrated in Fig. 1
                        . Initially, on the first frame, local patches are generated randomly so that the center point of each patch lies on an edge (to be described in Section 3.2). After initialization, a new patch is generated only when an existing patch is discarded due to its low weight. The total number of patches is maintained by discard and re-generation. The weight of each patch is calculated by the proposed method from their spatio-temporal information (to be described in Section 3.4). Then, camera motion is estimated by the minimization of the proposed weighted object function (to be described in Section 3.3). For video stabilization purposes, this estimated camera motion is used in the subsequent motion compensation and image composition steps.

Rather than costly SIFT feature extraction as in [2,4–7], we fastly get discriminative patches which have edge information in them. In general, corner points are more discriminative than edges according to the eigenanalysis: corner points have two large eigenvalues whereas edge points have only one. Therefore, the use of points on edges might lead to an erroneous result in motion calculation. For this reason, the conventional approaches calculate local motions on every corner point and combine local motions to estimate global camera motion. However, edges have different merits: they exist over the entire image, and the number of them is large. Due to small number of corners and their sparse existence, using corners might lead to focusing on small regions, not the whole scene. From this perspective, we randomly generate discriminative patches on edges so that they spread over the entire image. The edges can be easily extracted by any well known algorithm. The extracted patches on edges are illustrated in Fig. 2
                        .

For each generated patch, an individual weight is assigned by the proposed formula using spatio-temporal information. Rather than extracting all representative patches every frame, we keep trustful patches with higher weight and maintain them through several frames while patches with a lower weight than a certain threshold are discarded, and regenerated from the edge map of the current frame. This helps our algorithm work robustly because reliable patches for camera motion estimation are used repeatedly in the estimation process. With this scheme, the patch with higher weight has more effect on the calculation of global motion. The calculation of weights is described detail in Section 3.4.

In addition, our method is distinctive from some existing methods using local patches in that the existing methods use two steps estimations; local motions and global motion, whereas our method uses one step global motion estimation directly. The comparison between conventional approaches and the proposed method is shown in Fig. 3
                        . In the existing methods, local motions of some patches (patch
                        1 and patch
                        2 in Fig. 3) can degrade the performance of conventional methods because their estimated local motions might be incorrect depending on their edge shapes and directions. Those incorrect local motion estimation results are merged with equal weighting to build false global motion estimation. On the other hand, our method estimates the global motion directly with different weighting to each patch, that is, the patch
                        3 in Fig. 3 has a larger weighting than the patch
                        1 and patch
                        2. Moreover, our method calculates the weights for the patches based on the spatial coherence concept of optical flow [25]. This concept is expected to give better estimation results than the use of one pixel information adopted in the existing methods.

In the proposed method, Eq. (1) is modified to emphasize more reliable patches and to lessen the influence of untrustworthy patches (outliers). Then, we face the following question: what is the definition of a reliable patch? From the main purpose of camera motion estimation and video stabilization, a reliable patch can be defined as a patch.
                           
                              1.
                              whose motion is similar to that of the camera,

which has discriminative information,

which shares similar characteristics with the background,

and those patches should be located over the entire image. The first condition is from the fact that the estimation target is camera motion, and the second one is chosen for the credibility of estimation. The third characteristic is defined because patches on foreground objects provide false information for camera motion. With this concept of the reliable patch and the spatial coherence concept within extracted patches rather than considering only one pixel point, the final object function to minimize is
                           
                              (2)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          H
                                       
                                    
                                 
                                 
                                 O
                                 (
                                 H
                                 )
                                 =
                                 
                                    
                                       
                                          min
                                       
                                       
                                          H
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          l
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       [
                                       
                                          
                                             w
                                          
                                          
                                             i
                                          
                                       
                                       {
                                       
                                          
                                             I
                                          
                                          
                                             t
                                          
                                       
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             ij
                                          
                                       
                                       )
                                       -
                                       
                                          
                                             I
                                          
                                          
                                             t
                                             +
                                             1
                                          
                                       
                                       (
                                       f
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             ij
                                          
                                       
                                       ,
                                       H
                                       )
                                       )
                                       }
                                       ]
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where l is the number of patches, n is the number of pixels in a patch, and w
                        
                           i
                         is the weight for the ith patch. X
                        
                           ij
                         is the jth pixel in the ith patch (X
                        
                           ij
                        
                        = (x
                        
                           ij
                        ,y
                        
                           ij
                        )), and H is the affine homography matrix (6 DOF) for camera motion,
                           
                              (3)
                              
                                 H
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         4
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         5
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         6
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   0
                                                
                                                
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        In vector form, Eq. (2) is
                           
                              (4)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          h
                                       
                                    
                                 
                                 
                                 O
                                 (
                                 h
                                 )
                                 =
                                 
                                    
                                       
                                          min
                                       
                                       
                                          h
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          l
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       [
                                       
                                          
                                             w
                                          
                                          
                                             i
                                          
                                       
                                       {
                                       
                                          
                                             I
                                          
                                          
                                             t
                                          
                                       
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             ij
                                          
                                       
                                       )
                                       -
                                       
                                          
                                             I
                                          
                                          
                                             t
                                             +
                                             1
                                          
                                       
                                       (
                                       g
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             ij
                                          
                                       
                                       ,
                                       h
                                       )
                                       )
                                       }
                                       ]
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where h
                        =(H
                        1,
                        H
                        2,
                        H
                        3,
                        H
                        4,
                        H
                        5,
                        H
                        6)
                           T
                        . A warping function, g(X
                        
                           ij
                        ,
                        h), transforms the X
                        
                           ij
                         with vector h as
                           
                              (5)
                              
                                 g
                                 (
                                 
                                    
                                       X
                                    
                                    
                                       ij
                                    
                                 
                                 ,
                                 h
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         4
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         5
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         6
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         4
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         5
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         H
                                                      
                                                      
                                                         6
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        In Eq. (4), pixels within the ith patch share the same weight, w
                        
                           i
                        , maintaining spatial coherence. By adding the spatial constraint in minimization, we can expect to get better estimation for camera motion. The weight w for each patch can work as an outlier rejection scheme. In Eq. (4), the patch with small weight (i.e., outlier) influences less to the minimization of the objective function than the patch with large weight, which corresponds to an outlier rejection scheme. Then, the warping parameter h is estimated more suitably for the patch with high weight. By minimizing this weighted optimization function with respect to camera motion parameter h, we expect to estimate camera motion robustly.

The minimization of the expression in Eq. (4) is solved with the Lucas Kanade algorithm as in [26]. Before the equation is optimized, it is assumed that the current estimate of h is known and then increments to the estimation (Δh) is iteratively solved. In this respect, we modify Eq. (4) and minimize
                           
                              (6)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          Δ
                                          h
                                       
                                    
                                 
                                 
                                 O
                                 (
                                 h
                                 +
                                 Δ
                                 h
                                 )
                                 =
                                 
                                    
                                       
                                          min
                                       
                                       
                                          Δ
                                          h
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          m
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       [
                                       
                                          
                                             w
                                          
                                          
                                             i
                                          
                                       
                                       {
                                       
                                          
                                             I
                                          
                                          
                                             t
                                          
                                       
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             ij
                                          
                                       
                                       )
                                       -
                                       
                                          
                                             I
                                          
                                          
                                             t
                                             +
                                             1
                                          
                                       
                                       (
                                       g
                                       (
                                       
                                          
                                             X
                                          
                                          
                                             ij
                                          
                                       
                                       ,
                                       h
                                       +
                                       Δ
                                       h
                                       )
                                       )
                                       }
                                       ]
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where w
                        
                           i
                        (X
                        
                           ij
                        ) is the weight of the ith patch in which the pixel X
                        
                           ij
                         is located, and update h with
                           
                              (7)
                              
                                 h
                                 ←
                                 h
                                 +
                                 Δ
                                 h
                                 .
                              
                           
                        By following the procedure of the Gauss–Newton method [26], we can obtain the closed form solution,
                           
                              (8)
                              
                                 Δ
                                 h
                                 =
                                 
                                    
                                       Q
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             ∇
                                             
                                                
                                                   I
                                                
                                                
                                                   t
                                                   +
                                                   1
                                                
                                             
                                             
                                                
                                                   ∂
                                                   g
                                                
                                                
                                                   ∂
                                                   h
                                                
                                             
                                          
                                       
                                    
                                    
                                       T
                                    
                                 
                                 w
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ij
                                    
                                 
                                 )
                                 [
                                 
                                    
                                       I
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 
                                    
                                       X
                                    
                                    
                                       ij
                                    
                                 
                                 )
                                 -
                                 
                                    
                                       I
                                    
                                    
                                       t
                                       +
                                       1
                                    
                                 
                                 (
                                 g
                                 (
                                 
                                    
                                       X
                                    
                                    
                                       ij
                                    
                                 
                                 ,
                                 h
                                 )
                                 )
                                 ]
                                 ,
                              
                           
                        
                        
                           
                              (9)
                              
                                 Q
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             ∇
                                             
                                                
                                                   I
                                                
                                                
                                                   t
                                                   +
                                                   1
                                                
                                             
                                             
                                                
                                                   ∂
                                                   g
                                                
                                                
                                                   ∂
                                                   h
                                                
                                             
                                          
                                       
                                    
                                    
                                       T
                                    
                                 
                                 w
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ij
                                    
                                 
                                 )
                                 
                                    
                                       
                                          ∇
                                          
                                             
                                                I
                                             
                                             
                                                t
                                                +
                                                1
                                             
                                          
                                          
                                             
                                                ∂
                                                g
                                             
                                             
                                                ∂
                                                h
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              Jacobian
                              ,
                              
                                 
                                    ∂
                                    g
                                 
                                 
                                    ∂
                                    h
                                 
                              
                           
                        , is
                           
                              (10)
                              
                                 
                                    
                                       ∂
                                       g
                                    
                                    
                                       ∂
                                       h
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                                
                                                   0
                                                
                                                
                                                   y
                                                
                                                
                                                   0
                                                
                                                
                                                   1
                                                
                                                
                                                   0
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   x
                                                
                                                
                                                   0
                                                
                                                
                                                   y
                                                
                                                
                                                   0
                                                
                                                
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        and 
                           
                              ∇
                              I
                              =
                              
                                 
                                    
                                       
                                          
                                             ∂
                                             
                                                
                                                   I
                                                
                                                
                                                   t
                                                
                                             
                                          
                                          
                                             ∂
                                             x
                                          
                                       
                                       ,
                                       
                                          
                                             ∂
                                             
                                                
                                                   I
                                                
                                                
                                                   t
                                                
                                             
                                          
                                          
                                             ∂
                                             y
                                          
                                       
                                    
                                 
                              
                           
                        . The calculation of Δh and update of h are iterated until the norm of Δh is less than a threshold, i.e. ∥Δh∥⩽ 
                        ∊. The weights within a patch are the same for all pixels. The solution of Eq. (8), Δh, is the weighted least square solution for the motion estimation problem.

In this section, how to decide and update the weight w
                        
                           i
                         for each patch is described. The weights of patches reflect the reliability of each of them, and they are calculated with spatio-temporal information in each patch. As patches are more reliable in the sense of the characteristics defined in the previous section, higher weights are assigned to them. The weight of the ith patch is composed of temporal weight and spatial weight as
                           
                              (11)
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 α
                                 
                                    
                                       w
                                    
                                    
                                       T
                                       ,
                                       i
                                    
                                 
                                 +
                                 (
                                 1
                                 -
                                 α
                                 )
                                 
                                    
                                       w
                                    
                                    
                                       S
                                       ,
                                       i
                                    
                                 
                                 ,
                              
                           
                        where w
                        
                           T,i
                         and w
                        
                           S,i
                         are temporal weight and spatial weight of the ith patch respectively, and α controls the importance of each of them.


                        
                           Temporal weight
                        : Temporal weight is based on age of patches. The age means the number of frames in which each patch has the similar motion to the estimated global motion at each frame and is recognized as valid one. The initial value of age of each patch is 1, and it keeps being updated by the estimated global camera motion. After we minimize Eq. (2), we can build the affine homography model H which describes global motion. If we assume the estimated motion between image I
                        1 and I
                        2 is H
                        12, and P
                        1,i
                         and P
                        2,i
                         are the matched ith patches from image I
                        1 and I
                        2 respectively, then we have the following relation,
                           
                              (12)
                              
                                 
                                    
                                       P
                                    
                                    
                                       2
                                       ,
                                       i
                                    
                                 
                                 ≃
                                 
                                    
                                       H
                                    
                                    
                                       12
                                    
                                 
                                 
                                    
                                       P
                                    
                                    
                                       1
                                       ,
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             
                                                
                                                   H
                                                
                                                
                                                   12
                                                
                                             
                                          
                                       
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       P
                                    
                                    
                                       2
                                       ,
                                       i
                                    
                                 
                                 ≃
                                 
                                    
                                       P
                                    
                                    
                                       1
                                       ,
                                       i
                                    
                                 
                                 .
                              
                           
                        If values of (H
                        12)−1
                        P
                        2,i
                         and P
                        1,i
                         in Eq. (12) are close in a normalized cross correlation (NCC) sense, the ith patch is more likely to be background and is more influential to the estimation of global motion H
                        12. The NCC value between two patches P
                        1(x,
                        y) and P
                        2(x,
                        y) is calculated by
                           
                              (13)
                              
                                 NCC
                                 (
                                 
                                    
                                       P
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       P
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       n
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          x
                                          ,
                                          y
                                       
                                    
                                 
                                 
                                    
                                       (
                                       
                                          
                                             P
                                          
                                          
                                             1
                                          
                                       
                                       (
                                       x
                                       ,
                                       y
                                       )
                                       -
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                          
                                          
                                             ¯
                                          
                                       
                                       )
                                       (
                                       
                                          
                                             P
                                          
                                          
                                             2
                                          
                                       
                                       (
                                       x
                                       ,
                                       y
                                       )
                                       -
                                       
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             ¯
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             σ
                                          
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   1
                                                
                                             
                                          
                                       
                                       
                                          
                                             σ
                                          
                                          
                                             
                                                
                                                   P
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where n is the number of pixels in a patch, and 
                           
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          1
                                       
                                    
                                 
                                 
                                    ¯
                                 
                              
                              ,
                              
                                 
                                    
                                       
                                          P
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    ¯
                                 
                              
                              ,
                              
                                 
                                    σ
                                 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    σ
                                 
                                 
                                    
                                       
                                          P
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                           
                         are the mean of P
                        1, mean of P
                        2, standard deviation of P
                        1 and standard deviation of P
                        2 respectively. The age of the top 70% of patches with higher NCC value is increased, and the rest of the patches maintain their ages. After calculation of the ages of patches, we define temporal weight of the ith patch, w
                        
                           T,i
                        , as
                           
                              (14)
                              
                                 
                                    
                                       w
                                    
                                    
                                       T
                                       ,
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       
                                          
                                             (
                                             
                                                
                                                   age
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             
                                                
                                                   age
                                                
                                                
                                                   max
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where age
                        
                           i
                         is the age of the ith patch, and age
                        
                           max
                         is a predefined constant to prevent excessively large ages and set the largest possible value of age. When age
                        
                           i
                         is updated, the value of age
                        
                           i
                         stops increasing when it reaches age
                        
                           max
                        , and it is reset to one only when the corresponding ith patch is discarded and re-generated. If the value of age
                        
                           max
                         is set too large, then the difference between temporal weights of long preserved and those of short lived patches will be large, which leads to overemphasizing long preserved patches. This might lead to stabilization failure when the background motion is falsely estimated because the effect of recovering by newly generated patches will be ignored by a too-high w
                        
                           T,i
                         of the existing patches. This might happen from a scene with large number of foregrounds. For the experiments shown in this paper, the value of age
                        
                           max
                         is empirically set to 30. With the proposed temporal weights, patches from background regions are more emphasized in the estimation of global motion, and the weights of the patches from foregrounds keep decreasing.


                        
                           Spatial weight
                        : The spatial weight is composed of three parts: edge, saliency, and distribution information. These weights are designed to follow the second and the third condition of reliable patches described in Section 3.3, and satisfy the condition of dispersedly distributed positions. The equation for the spatial weight is
                           
                              (15)
                              
                                 
                                    
                                       w
                                    
                                    
                                       S
                                       ,
                                       i
                                    
                                 
                                 =
                                 β
                                 
                                 
                                    
                                       w
                                    
                                    
                                       SE
                                       ,
                                       i
                                    
                                 
                                 +
                                 γ
                                 
                                 
                                    
                                       w
                                    
                                    
                                       SS
                                       ,
                                       i
                                    
                                 
                                 +
                                 (
                                 1
                                 -
                                 β
                                 -
                                 γ
                                 )
                                 
                                 
                                    
                                       w
                                    
                                    
                                       SD
                                       ,
                                       i
                                    
                                 
                                 .
                              
                           
                        
                     

For the first part of the spatial weight, w
                        
                           SE,i
                        , the amount of edges in the patch determines its reliability. Boundaries of objects are generally important areas to perceive these objects and video stabilization focused more on edges is suited to the human perspective. For this reason, the weights of patches with more edges are increased. The weight calculation formula has the form of
                           
                              (16)
                              
                                 
                                    
                                       W
                                    
                                    
                                       SE
                                       ,
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       
                                          
                                             (
                                             
                                                
                                                   edge
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             
                                                
                                                   edge
                                                
                                                
                                                   max
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where edge
                        
                           i
                         is the number of edges in the ith patch and edge
                        
                           max
                         is a predefined constant which works as the upper limit, similarly to the age
                        
                           max
                         in Eq. (14). The value of edge
                        
                           i
                         which is larger than edge
                        
                           max
                         is truncated to the value of edge
                        
                           max
                        .

For the second part of spatial weight, W
                        
                           SS,i
                        , we adopt a simple visual saliency concept. Visual saliency is the distinctive perceptual quality which can make people distinguish one object from its neighbors. Discriminant saliency [27,28] is a widely used method to classify two different classes; the stimuli of interest and the background. This value is measured from the concept that foreground objects have different characteristics to their surroundings while backgrounds share similar properties with their surroundings. From this perspective, foreground objects get more saliency than backgrounds and this is the basic concept of many related studies. By computing the saliency of each patch, we assign small weight when the saliency of the patch is high. Then a patch from foreground is expected to have a low weight and be eliminated as an outlier. If certain patch from background has high saliency, its influence on the global motion estimation is quite low and we calculate the global motion ignoring that patch even though it is from background. However, this case does not influence the performance because all patches from foreground and some patches from background with higher saliency become to have lower weights and there are still many other highly weighted patches from background. As described in Fig. 4
                        , we first build one distribution from pixels within a patch area, and another distribution from pixels within the surrounding block. Then, the Kullback–Leibler divergence (KLD) between two distributions is calculated and it reflects the saliency index of the patch. By defining the distribution of pixels within a patch as d
                        
                           w
                         and the distribution of pixels within the surrounding area as d
                        
                           s
                        , the KLD between two distributions d
                        
                           w
                         and d
                        
                           s
                         is calculated as
                           
                              (17)
                              
                                 
                                    
                                       D
                                    
                                    
                                       KL
                                    
                                 
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       w
                                    
                                 
                                 ‖
                                 
                                    
                                       d
                                    
                                    
                                       s
                                    
                                 
                                 )
                                 =
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          x
                                       
                                    
                                 
                                 
                                    
                                       d
                                    
                                    
                                       w
                                    
                                 
                                 (
                                 x
                                 )
                                 log
                                 
                                    
                                       d
                                    
                                    
                                       s
                                    
                                 
                                 (
                                 x
                                 )
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          x
                                       
                                    
                                 
                                 
                                    
                                       d
                                    
                                    
                                       s
                                    
                                 
                                 (
                                 x
                                 )
                                 log
                                 
                                    
                                       d
                                    
                                    
                                       w
                                    
                                 
                                 (
                                 x
                                 )
                                 .
                              
                           
                        In the second row of Fig. 4, the pdf of the patch on the foreground is different to that of its surrounding, which leads to a high KLD value. This is reflected as high saliency on the patch, and vice versa. Assigning smaller weight to the patch with higher saliency is useful to lessen the influences of foreground patches in global motion estimation. This saliency calculation is similar to Mahadevan’s work [29], but we only consider spatial information and the searching window size is limited to the size of the extracted patch for fast computation time. By defining the saliency sal
                        
                           i
                         be the Kullback–Leibler divergence value for the ith patch, the weight W
                        
                           SS,i
                         is calculated by
                           
                              (18)
                              
                                 
                                    
                                       W
                                    
                                    
                                       SS
                                       ,
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       
                                          
                                             sal
                                          
                                          
                                             i
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        The value of sal
                        
                           i
                         which is larger than sal
                        
                           max
                         is truncated to the value of sal
                        
                           max
                        . The ratio between the sizes of center and surrounding windows is set to 4 in the proposed method.

Lastly, to extract patches at dispersedly distributed locations, location distribution of patches is used to decide the importance of a patch. If too many patches are extracted in a local region, the importance of those patches is reduced to prevent biased motion estimation. W
                        
                           SD,i
                         in Eq. (15) is the weight representing the importance related to the dispersion of distribution of the patches. This weight is referred to as distribution weight in the following. The distribution weight is calculated with
                           
                              (19)
                              
                                 
                                    
                                       W
                                    
                                    
                                       SD
                                       ,
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       
                                          
                                             dist
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where dist
                        
                           i
                         is the number of patches which are located close to the ith patch. Because the patches are extracted randomly on edges, some patches might locate close to each other as we can see in the center of Fig. 5
                        . However, when estimating the global camera motion from extracted patches, it is more preferable that they are spread over the entire image; the existence of imbalanced points causes a biased estimation result for a high density area [30]. By adjusting the weights of patches with respect to their positions, we can get a similar effect to that when we extract patches over the entire image from the beginning. In Fig. 5, if the distribution of patches is not considered, the camera motion parameter is estimated focusing on lower right regions of the image. To avoid this problem, every patch in the lower right regions gets less weight as there exist many other patches near it.

In each level of weight calculations, we normalize the weights to make their sum as 1, i.e., the sum of temporal weights of all patches are 1, and the same applies for the spatial weights. With the temporal and spatial information described above in Eq. (4), we can build weights for each patch and get robust and direct estimation of global motion in one step with satisfactory performance as shown in the experiments.

As described in the previous sections, the camera motion is estimated by weighted minimization in Eq. (4), and this estimation is based on combined information with different weights of temporal coherence, edges, saliencies, and positions of each patch. Then, an important thing to consider is how to choose the weighting parameters of these criteria. We test several sequences with different settings of parameters to show the contributions of each factor to the stabilization performance and illustrate the results in Fig. 6
                        . The measure is the mean distance from ground truth which is described in Section 4.1.

In Eqs. (11) and (15), the parameters, α,β, and γ control which terms are emphasized in calculation of the weight for each patch. Because different values of the parameters bring different stabilization results, we need to decide the appropriate parameter values for good performance. To determine the values, we consider both importance and reliability of the information to be obtained from each patch and suggest a reasonable combination of the parameter values.

As mentioned above, to determine the value of α, we consider the reliability of temporal weight and spatial weight on stabilization performance. In Eqs. (13) and (14), the temporal weight of a local patch depicts the degree of similarity between the local motion of the patch and the estimated global (background) motion. As the local motion of the patch is similar to the global motion, the value of temporal weight becomes high and it increases the patch weight after being multiplied by α. Here, α represents the degree of reflection of the temporal weight to the total weight of a patch, and if the temporal weight is important and reliable, a large α can increase stabilization performance. Then, the reliability of the temporal weight depends on the accuracy of global motion estimation. If the estimated global motion is not precise enough, the temporal weight is not a reliable standard to measure the usefulness of the patch in estimation of global motion. Furthermore, the estimation error caused by incorrect temporal weights may be accumulated through frames: wrong choices of weights of patches estimate global motion incorrectly, and falsely estimated global motion assigns weights of patches erroneously, and so on. Because inaccurate global motion estimation is possible in videos with depth variation and foregrounds, the influence of the temporal weight (the value of α) should be reduced to prevent the error accumulation. On the other hand, the calculation of spatial weight does not use the past estimation result while the temporal weight does, which leads to no accumulation of estimation errors. Additionally, combining multiple clues of edge, saliency, and distribution for spatial information may increase the reliability of the spatial weight. From the above discussion, we conclude the reliability of the spatial weight term is higher than that of temporal weight, and so we recommend α has a value less than 0.5 (in the experiment, 0.3 has been chosen via light tuning based on trial and error). However, if correct estimation of global motion is guaranteed, increasing α can improve the performance over the current setting of α.

The parameters for spatial weight calculation in Eq. (15), β and γ are related to the importance of number of edges in the patch and saliency in the estimation of global motion. Both of them are important clues to distinguish between useful and useless patches, but they have different properties. While the number of edges reflects the amount of useful information, saliency provides helpful information to reduce the influence of foregrounds. The use of a local patch containing foreground definitely raises a significant error in camera motion (background motion) estimation, while the number of edges in a local patch does not much influence the estimation of global motion. Hence, in general, we can conclude the saliency is more important than the number of edges. However, both of them might have negative effects in some cases, i.e. when the textured foreground has large number of edges and lots of similar foregrounds are located closely. In these cases, the number of edges and saliency can provide wrong information in choosing good patches. In conclusion, γ is set to a larger value than β in the general case, but they are adjustable depending on conditions of the scene, especially the size, the texture and the pattern of foregrounds. The patch position distribution is not closely related to the information of motion sequences but is rather a general condition for unbiased camera motion estimation. Hence, we conclude that the distribution term is less important than the edges and saliency.

In Fig. 6, we can see changing performances with different settings of parameters. As explained before, Setting 3(use only saliency) shows the best performance among Setting 2(use only edges), 3, 4(use only distribution), and Setting 2 is better than Setting 4. This is because saliency is adopted to eliminate outlier patches from foregrounds, which is one of the most important issues in stabilization. Focusing on the number of edges (Setting 2) makes the features discriminative, which is meaningful in motion estimation, but it is less influential than saliency (Setting 3). In addition, emphasizing only one factor (Setting 1, 2, 3 and 4) brings worse performance than considering the proposed factors together (Setting 5). Based on the discussion on the importance and reliability of the weight terms (α
                           <0.5, 1−
                           β
                           −
                           γ
                           <
                           β
                           <
                           γ) and via slight tuning through trial and error, the weight parameters (α,
                           β,
                           γ) are empirically set as (0.3,0.3,0.5) (Setting 5), emphasizing the spatial weight by 0.7, the temporal weight by 0.3, the saliency by 0.5, the number of edges by 0.3, and the distribution by 0.2. In our paper, the parameter values were fixed for all experiments with different videos.

@&#EXPERIMENTAL RESULTS@&#

To evaluate robustness and computational effectiveness of the proposed method, we tested it on various video sequences. The test videos were under translation, rotation, walking cameraman, small number of features, and foreground objects existing scenarios, and our approach was compared to several conventional approaches (SIFT: SIFT feature matching based method in [4], PF: particle filter based method in [5], PTCBM: polar transform and circular block matching based method in [17], FF: full frame video stabilization method in [31], and L1: auto-directed L1 stabilization method in [12]). Those methods except full frame video stabilization and auto-directed video stabilization are self-implemented and we use the implementation in OpenCV for full frame video stabilization [31] and the implementation in YouTube for auto-direction video stabilization [12]. Especially, the method of Grundmann et al. [12] has been compared to show our method can handle the video with a small number of features. To emphasize the effectiveness of the novel formulation of the proposed method, we also solved the basis optimization problem (Eq. (1)) and compared it to our result. In this basis method, which is noted as OPT
                     
                        BASIS
                     , RANSAC is adopted to eliminate outliers in building the global motion model. For RANSAC parameters, the maximum iteration number is set to 200, and the minimum number of data required to fit the motion model is assigned as 4. This algorithm is implemented to show the strength of the proposed method in performance and computational load.

For numerical evaluation of the proposed approach, the interframe transformation fidelity (ITF) measure was adopted as in [32]. ITF is based on peak signal-to-noise ratio (PSNR), which is defined as
                           
                              (20)
                              
                                 MSE
                                 (
                                 t
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       N
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          x
                                          =
                                          1
                                          ,
                                          y
                                          =
                                          1
                                       
                                       
                                          w
                                          ,
                                          h
                                       
                                    
                                 
                                 
                                    
                                       (
                                       
                                          
                                             I
                                          
                                          
                                             t
                                          
                                       
                                       (
                                       x
                                       ,
                                       y
                                       )
                                       -
                                       
                                          
                                             I
                                          
                                          
                                             t
                                             +
                                             1
                                          
                                       
                                       (
                                       x
                                       ,
                                       y
                                       )
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                 for
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ∈
                                 
                                    
                                       S
                                    
                                    
                                       nb
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (21)
                              
                                 PSNR
                                 (
                                 t
                                 )
                                 =
                                 10
                                 
                                    
                                       log
                                    
                                    
                                       10
                                    
                                 
                                 
                                    
                                       
                                          
                                             I
                                          
                                          
                                             max
                                          
                                       
                                    
                                    
                                       MSE
                                       (
                                       t
                                       )
                                    
                                 
                                 ,
                              
                           
                        where MSE(t) is the mean-square error between two frames, I
                        
                           max
                         is the possible maximum of intensity value, I
                        
                           t
                         is the intensity of pixel in tth frame and w, h are image width and height respectively. The set S
                        
                           nb
                         is non-blank region by image transformation and N is the number of pixels in the set S
                        
                           nb
                        . If camera motion between consecutive frames is estimated well, then we can get small MSE because the transformed frame by estimated homography matrix will be similar to the previous frame. Finally, the ITF value is calculated as
                           
                              (22)
                              
                                 ITF
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       T
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          t
                                          =
                                          1
                                       
                                       
                                          T
                                          -
                                          1
                                       
                                    
                                 
                                 PSNR
                                 (
                                 t
                                 )
                                 ,
                              
                           
                        where T is the number of frames in stabilized sequences. As described in [32], highly stabilized sequences get higher ITF measure value. For exact comparison, foreground pixels are removed in computing MSE because they have their own motions, and those motions are not related to the camera motion to be smoothed by stabilization.

The second measure for motion estimation performance is the mean distance from the ground truth on several points. We took four distinct points, which can be successfully tracked by optical flow, to measure the stabilized performance, and their estimated trajectories after applying several stabilization algorithms were compared to their actual ground truth trajectories. The four points are chosen to be located far from each other in the image spatial domain so that the quadrangle enclosed by those points is large enough and this guarantees that the estimated model is not biased to a certain region in the image and that pixels inside the quadrangle are stabilized as well. The equation for this measure is
                           
                              (23)
                              
                                 Mean
                                 
                                 distance
                                 (
                                 t
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       4
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          4
                                       
                                    
                                 
                                 (
                                 dist
                                 (
                                 RSP
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       ,
                                       t
                                    
                                 
                                 )
                                 ,
                                 AP
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       ,
                                       t
                                    
                                 
                                 )
                                 )
                                 )
                                 ,
                              
                           
                        where RSP(x
                        
                           i,t
                        ) is the stabilized result position of x
                        
                           i,t
                         and AP(x
                        
                           i,t
                        ) is the actual position (ground truth) of x
                        
                           i,t
                        . dist stands for the Euclidean distance between two points. If this value is high, the video is not successfully stabilized, and vice versa. Two of our test videos were captured while the cameraman was moving and the rest of them were captured by a static scene camera. For moving camera cases, taking optical flow results and applying a low pass filter is done to obtain the ground truth, and, for stationary camera cases, the absolute position is taken as the ground truth because there should be no intentional movement of camera in the stationary case.

@&#RESULTS@&#

As described in the introduction, video stabilization is one of the fields in which robust motion estimation is required. To compensate instability of the video sequences and composite stable results, camera motion should be estimated first and the estimation should be robust because the subsequent procedures depend on the performance of motion estimation. In this section, experimental results of applying the proposed method to the video stabilization problem are shown below. The parameters for the experiments were as follows. The patch size was 9 by 9 and the number of patches was 20. A larger number of patches brings better stabilized results, but it is computationally expensive to calculate the weights of lots of patches, which is not desirable for processing real time video. Video 1 and Video 2 were produced by the authors of [23,11], and office was provided from [16]. UFO is a video downloaded from YouTube (http://www.youtube.com/watch?v=aXyPQi7LHyk) and this video is selected because there exist a small number of features and the scene is shaking by hand-trembling. The result frames are shown in Figs. 7–10
                        
                        
                        
                        . ITF values and mean distance graphs for various conventional approaches are shown in Table 1
                         and Fig. 11
                         respectively. Finally, the computation time comparison is in Table 2
                        .

The first test video is Video 1, which has been captured by hand held camera. There exist a red structure and a tower in the middle of frames, while the camera is shaking in several directions. As we can see in Fig. 7, the proposed method stabilizes the original sequence more robustly than other approaches, and the ITF value of the proposed approach is the highest among all compared researches in the Table 1. There is no foreground object in this scene, however, depth variation causes errors for video stabilization. This is a limitation of 2D video stabilization, and can be solved by applying 3D video stabilization approaches.

The second video was taken by surveillance camera mounted on the wall of a building. In this sequence, a group of people are walking upwards, a car is moving, and a camera is being jittered up and down. While the results of other approaches still show unstable sequences, the proposed method estimates the camera motion well and successfully builds a stabilized video sequence. The result for this test video, company, is shown in Fig. 8.

The third video, office, was captured while the cameraman was walking forward in his office. The person in the right side of the scene is moving and there is a large depth difference in this video sequence, which makes it hard to estimate camera motion and stabilize the video successfully. Also, blurring by the unstable and rapidly moving camera position limits robust estimation of the global motion. However, we can see that the proposed method works robustly even under these critical situations as shown in Figs. 9 and 11, and Table 1.

The fourth video was chosen to show that the proposed method can handle the scene which has a small number of features. This sequence captures the flying UFO taken by hand-held camera. Because the UFO is hovering on the sky, there are only a small number of features in the scene; most homogeneous areas do not have strong features. Compared to other state-of-the-art methods, the proposed method works well in the scene with a small number of features as shown in Fig. 10. While the positions of the UFO keep changed and it makes less stabilized video results in other algorithms, the result from the proposed method shows the stabilized sequence. The ITF values and mean distance graph for this test video with state-of-the-art algorithms are given in Table 1 and Fig. 11 respectively.

As we can see in Table 1, the ITF value of the proposed method is higher than other conventional algorithms except [12]. The performance of this work is similar to our work, but their algorithm does not work robust with videos which have small number of features as we can see in Fig. 10 and ITF values of UFO sequence in Table 1. The values of the second measure, mean distance, are shown in Fig. 11. When the value of this measure is increased too much and the output frame is beyond the acceptable range, a single value (Here, it is 125) is assigned and this can be shown as horizontal lines of the graphs. For example, in Fig. 11(a), SIFT [4], PF [5], and PTCBM [17] methods reach the acceptable range in distances, which means the stabilization process is failed and the output videos from them are out of shapes. In this figure, we can see that the performance of the proposed method exceeds those of other conventional algorithms. The mean distances from ground truth is smaller than others, and the proposed method shows stable results in all different videos while results from other stabilization algorithms are very dependent on test videos. Assigning different weights on patches with their spatio-temporal information and direct global camera motion estimation based on well defined weights by the proposed method can solve problems of conventional approaches, such as foreground existence and error accumulation.

The computation speeds (fps) of conventional approaches and the proposed method are compared in Table 2, and it shows the computational effectiveness of the proposed method. In the method OPT
                        
                           BASIS
                        , a simple minimization problem with Eq. (1) was fast, but outlier elimination, RANSAC, was too slow in computation. The experiments were done with a Core 2 Duo 2.13GHz CPU. In the paper of Liu et al. [23], they used the structure from motion method to estimate camera motion from video and used the Voodoo tracker (http://www.digilab.uni-hannover.de), which is one of the successfully built SFM algorithm, to estimate the camera motion. Then, they composited stabilized image sequences by their own algorithm from using the result of the Voodoo tracker. However, the Voodoo tracker by itself runs on 10–12fps, which is slower than our algorithm (22fps). Their whole algorithm (including SFM and image composition step) is definitely slower than 10–12fps and not suit for real time processing. Moreover, it requires the entire video to estimate the camera trajectory with SFM and to smooth the camera trajectory for video stabilization, which is not available in online application.

In this paper, we have proposed a robust and fast camera motion estimation method for video stabilization using a weighted optimization scheme with spatio-temporal information in local patches. By the proposed method, we could estimate global motion between consecutive frames, and use the estimated model for video stabilization. The well-defined spatio-temporal weight makes it possible for the proposed algorithm to concentrate on reliable regions and to lessen the effect of unimportant regions in computation of the camera motion model. Moreover, direct global motion computation speeds up the motion estimation process and decreases motion fitting error arising in the existing estimation methods calculating global motion from local motions. The effectiveness of the proposed algorithm has been illustrated through several experiments.

The proposed method, however, cannot handle videos under several scenarios; too many foregrounds or blurring video condition by fast movement of cameras. Videos with a small number of foregrounds can be handled by the proposed weighted optimization scheme, but a large number of foregrounds still makes it difficult to estimate camera motion reliably. Moreover, the weighting parameters among spatial and temporal constraints are empirically chosen even though their expected effects on performances are described in this paper. In future work, we hope to solve the problem of manually decided weight parameters and automate the procedures.

@&#ACKNOWLEDGEMENT@&#

The research was sponsored by Samsung Techwin Co., Ltd. and SNU Brain Korea 21 Information Technology program.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cviu.2013.09.005.


                     
                        
                           Supplementary video
                           
                        
                     
                  

@&#REFERENCES@&#

