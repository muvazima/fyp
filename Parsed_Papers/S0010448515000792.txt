@&#MAIN-TITLE@&#Bidirectional Evolutionary Structural Optimization (BESO) based design method for lattice structure to be fabricated by additive manufacturing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Both functional roles of solid volume and skin structure are considered.


                        
                        
                           
                           Lattice orientation is introduced that may be adjusted to improve performance.


                        
                        
                           
                           Increased speed of lattice frame generation.


                        
                        
                           
                           Structural stiffness is increased by the proposed optimization algorithm.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Additive manufacturing

Design method

Lattice structure

Optimization

Functional surface

Functional volume

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Additive Manufacturing is defined by ASTM as a “process of joining materials to make an object from 3D model data, usually layer upon layer, as opposed to subtractive manufacturing methodologies”  [1]. Compared to traditional manufacturing methods, AM technologies have two remarkable advantages. Firstly, as opposed to casting or forging, customized manufacturing tools such as molds or dies are no longer needed, which significantly shortens the time from design to production. Secondly, since materials are joined together layer by layer, structures with complex geometry or material distribution can be fabricated without dramatically increasing their manufacturing cost. For example, parts with hierarchical complexity or functionally graded material can be fabricated by carefully controlling the fabrication parameters layer by layer. This advantage largely expands the design space and provides opportunity for designers to further improve the performance of their designed parts. However, this advantage also puts forward much higher requirements on the design phase.

Most traditional design methods cannot take advantage of the unique capabilities of AM, because they are established on the manufacturability of traditional manufacturing methods. To solve this problem, a new design paradigm, known as DFAM, was introduced to “maximize product performance through the synthesis of shapes, sizes, hierarchical structures, and material compositions, subject to the capabilities of AM technologies”  [2]. This concept provides a general scope for designers who want to use AM to improve the performance of their products. Based on the modification and combination of traditional design methods, many innovative DFAM methods have been proposed to tackle the challenges and opportunities of AM. Among these, the design methods which focus on lattice structure or cellular structure at the meso level (i.e. feature size ranges from 0.1 mm to 10 mm) have received considerable attention. Due to the excellent properties of lattice structures, they can be designed for multiple purposes, such as weight reduction, energy absorption, heat transfer, thermal protection and insulation  [1,3,4,2,5].

Based on the degree of order, lattice structures on a meso-level can be divided into three main types. The first type is called a disordered cellular structure. Lattice units of different size and shape are randomly distributed within these structures. The second type is called a periodic lattice structure. These can be regarded as three-dimensional structures created by the regular repetition of an object with a certain topology and size in space. In some literatures  [6–8], this type of lattice is also referred to as a uniform lattice structure. Periodic lattice structures can be further divided into two types. If all the struts in the structure have the same thickness, it is referred to as a homogeneous periodic lattice structure. Otherwise, if the strut thickness varies, it is called a heterogeneous periodic lattice structure. The difference between these two types is shown in Fig. 1
                     . Besides disordered and periodic lattice structures, there is one other type of lattice structure, called pseudo-periodic, which is shown in Fig. 2
                     . Here, the size and shape of each lattice unit cell can be varied for special design purposes. The only constraint being that they all share the same general topology.

Compared to periodic and pseudo-periodic lattice structures, the properties of disordered lattice structures are hard to control. Thus, lattice design methods on a meso-level now focus on the former. In heterogeneous periodic and pseudo-periodic lattice structures, material distribution and lattice framework can be customized to satisfy given functional requirements. As such, these two types of lattice structures can also be referred to as customized lattice structures.

For cases involving homogeneous periodic lattice structures, the material selection method  [9] can be used to select the appropriate lattice cell topology and parameters. Besides that, some topology optimization methods  [10–16] have been successfully used to optimize lattice cell’s topology and parameters. Unlike the aforementioned homogeneous lattice design methods which only focus on the topology or parameters of a lattice cell, several concurrent optimization methods  [17–20] have been proposed to optimize cell’s topology as well as structures’ macro shape. As to heterogeneous periodic lattice structures, some structural optimization methods, such as size optimization  [21] and topology optimization method  [22,23] have been applied to optimize struts’ thickness distribution. For pseudo-periodic lattices, the concept of conformal lattice structures is proposed by Rosen’s research group  [24]. In this type of pseudo-periodic lattice structure, the shape and orientation of each lattice unit cell are designed to conform to the part’s macro geometry. To further improve lattice performance, a heuristic optimization method called the SMS method  [7] is used to optimize distribution of struts’ thickness in conformal lattice  [25]. Apart from conformal lattice structures, a force flux based design method has been proposed by Teufelhart and Reinhart  [26–28]. In this method, each lattice unit cell is built based on force flux in the design domain under a given load. This design method can guarantee that the lattice struts are under purely axial load. Another pseudo-periodic lattice design method based on 3D texture mapping was proposed by Chen  [29]. In this design method, a space warping technique is used to distribute materials based on stress distribution. Essentially, the unit cells are stretched from low stress areas to high stress areas.

Currently, the consensus among researchers is that a customized lattice structure will tend to have better structural properties than its counterpart. However, some issues still exist in current design methods. Firstly, some of pseudo-periodic lattice design methods cannot deal with parts that have complex macro-level geometry, since it becomes difficult to make all lattice unit cells in the design domain conform to the complex boundary or force flux. Secondly, for customized lattice structure, most current design methods neglect the functional roles of skin or solid material. Thirdly, as for periodic lattice structures, most design methods for customized lattice only focus on redistributing mass in the given design domain without considering lattice orientation which is another very important design variable of periodic lattice design.

In this paper, an innovative design method for periodic lattice structures on a meso-level is proposed. Unless otherwise stated, the lattice structures mentioned in the following paragraphs of this paper are all indicate periodic lattice structures. Compared to most existing methods for periodic lattice structures, the proposed method in this paper has four unique features. Firstly, both solid volume and skin structure are considered in the proposed design method. It broadens the application range of the proposed design method. Secondly, in the proposed method, the orientation of the periodic lattice structure is considered as a design variable. It may further enhance the mechanical performance of designed products. Thirdly, in the proposed lattice frame generation method, the trimming operations only have been done on those lattice frame of boundary kernels. Thus, the speed of lattice generation can be increased. Fourthly, the BESO based optimization method has been applied to obtain the optimal distribution of lattice struts’ thickness, which can further improve the structural stiffness compared to the unoptimized homogeneous lattice structure. In Section  2, four basic concepts in the proposed design method are firstly introduced. Based on these four basic concepts, the proposed design method of lattice structure is presented in Section  3. In Section  4, a case study is provided to validate this proposed design method. Finally this paper is wrapped up with the conclusion and future research directions.

In the proposed lattice structure design process, the FV and FS represent the geometrical elements designed for certain functional purposes. FS is defined as a surface that fulfills a certain functional requirement. In the proposed design method, skin with a certain thickness is designed to cover FSs for certain function. For example, Fig. 3
                         shows the surface of an airfoil which can provide lifting force for aircraft. For structural part, most FSs play roles as restriction of DOF or bearing load.

The FVs are defined as geometry volumes which are used to combine FSs and assist FSs in fulfilling their functional roles. For example, in Fig. 3, the volume enclosed by FS is the functional volume. In this case, the FV plays the role of supporting the FS and transmits lifting forces from the wing to a fuselage. In the proposed design method, the FV can be either filled with solid material or lattice structure at the meso-level. Thus, FVs can be further divided into two types: FV with solid material and FV with lattice structure.

In the proposed design method, a lattice unit cell is used to build a lattice frame based on the frame generation method described in Section  3.2. To achieve this purpose, a lattice unit cell is defined as a simplest repeating unit in a lattice structure in this paper. Some typical lattice unit cells are shown in Fig. 4
                        . To describe the relative node position and topology of lattice unit cell, a tri-dimensional bounding box of unit cell is used and the center of this bounding box is defined as the origin of local coordinate system of a lattice unit cell. The three axes of the local coordinate system are parallel to the three orthogonal edges of the bounding box. The relationship between the lattice unit cell’s bounding box, local coordinate system and global coordinate system is shown in Fig. 5
                        . In order to maintain continuity of repeated lattice cells, the defined pattern of lattice unit cells must be symmetric with respect to three local coordinate planes. Additionally, in the proposed design method, the lattice orientation is of particular importance. Based on its local coordinates, orientation 
                           
                              
                                 D
                              
                              
                                 O
                              
                           
                         of lattice unit cell is defined as: 
                           
                              (1)
                              
                                 
                                    
                                       D
                                    
                                    
                                       O
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          e
                                       
                                       
                                          x
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          e
                                       
                                       
                                          y
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          e
                                       
                                       
                                          z
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                              
                           
                         where 
                           
                              
                                 e
                              
                              
                                 x
                              
                              
                                 ′
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 y
                              
                              
                                 ′
                              
                           
                           ,
                           
                              
                                 e
                              
                              
                                 z
                              
                              
                                 ′
                              
                           
                         are the three base vectors of lattice cell’s local coordinate system. A graphic review of the lattice unit cell’s data model is shown in Fig. 6
                        .

The proposed lattice unit cell model enables designers to select the particular orientation of lattice, which may further improve the mechanical performance of a designed product. A simple case has been done and shown in Fig. 7
                        . In this case, strain energy of lattice structures with different orientation angle 
                           θ
                         has been calculated based on FEA. By comparing the strain energy of lattice structures with different orientation angles, it is clear that the orientation of lattice structure has a significant effect on the mechanical performance of the designed product.

In the proposed design method, lattice frame is simply the wireframe of the lattice structure. Fig. 8
                         shows the relationship between lattice structure and lattice frame. This frame is represented by line segments and points of connection, which we call nodes. Furthermore, through implementation of a wireframe solidifying method  [30], the lattice frame can be converted to lattice structure, based on a given strut thickness list and cross-sectional shape. That being said, the lattice frame plays an imperative role in the proposed design method. The data model of the lattice structure and its frame is shown in Fig. 9
                        .

From Fig. 9, it is clear that the data structure of a lattice structure mainly consists of two parts. They are lattice frame and struts’ thickness. For the lattice frame, it can be generated based on selected lattice unit cell by the generation method described in Section  3.2. As to struts’ thickness, the optimization method described in Section  3.3 can be applied to calculate the thickness for each strut.

The concept of a kernel point is introduced in this paper to improve efficiency of the lattice frame generation algorithm. Essentially, a kernel point represents the center point of a unit cell inside the FV. Its data structure is shown in Fig. 10
                        . Kernel points are used in the early stages of the lattice frame generation algorithm, to represent unit cells before any wireframes are generated.

The design flow of this proposed method for periodic lattice is shown in Fig. 11
                     . Generally, it consists of three design stages. The first design stage is called the initial design stage, where FSs and FVs are generated based on an analysis of functional requirements of the part. Moreover, the initial design parameters of the lattice structure are selected. In the second design stage, a lattice frame is built by implementing the proposed kernel based lattice frame generation method. In the last design stage, Modified BESO method is used to optimize thickness of the lattice struts, further improving performance of the part. These three design stages will be discussed in the following three subsections.

The initial design stage can be divided into three main design steps.

Firstly, FSs and FVs are determined based on an analysis of the part’s functional requirements. For example, a typical aircraft engine bracket is shown in Fig. 12
                        . Clearly, this engine bracket is meant to transfer loads between two connected parts. Based on a functional analysis, the part in Fig. 12 is represented by fifteen FSs and one FV. These FSs are shown in Fig. 13
                        . Among them, 
                           
                              
                                 
                                    FS
                                 
                              
                              
                                 1
                              
                           
                         to 
                           
                              
                                 
                                    FS
                                 
                              
                              
                                 3
                              
                           
                         are designed as contact surfaces, while the rest of them are designed for assembly of connecting bolt. The FV is the volume enclosed by the fifteen FSs, which is essentially the same as the original part shown in Fig. 12.

Secondly, the FVs generated in the first design step are further decomposed into several sub-FVs according to their specific functional roles. In this design step, some typical structural analysis methods can be used to determine the role of each sub-FVs. In this example, FEA has been used to analyze the stress distribution within the FV of the engine bracket. The load condition shown in Fig. 11 is applied as the boundary condition for the FEA. Specifically, to apply the force on the top bolt holes, RBE is used to represent the bolt. Thus, the load is applied at the center of the RBE element shown in Fig. 14
                        . For the displacement boundary condition, four RBEs are used to represent four connection bolts at the bottom of the bracket. The DOFs of these four RBEs have been constrained and shown in Fig. 14.

The FEA result is shown in Fig. 15
                        . Based on this result, it is clear that the stress in the lifting lug is much higher than that in the bracket base. Hence, the FV of this bracket is decomposed into two sub-FVs. The solid material will be used to fill the sub-FV with high stress distribution, while the lattice structure will be used to fill the FV with low stress. Additionally, in order to connect two sub-FVs, a new FS is added and shown in Fig. 15.

In the third design step, design parameters of the lattice structure, such as topology and cell size, are computed. In this design step, the lattice structure on a meso level can be regarded as a homogeneous material on a macro level. By doing so, traditional material selection method  [9] can be used to select an appropriate lattice topology for the given set of functional requirements.

Besides lattice topology, the size and orientation of lattice unit cells are also decided in this design step. Due to the symmetrical characteristics of lattice topologies, most lattice structures exhibit orthotropic mechanical properties. That is to say, the lattice structure is stronger in certain directions. Thus, higher mechanical performance can be achieved by aligning the strongest direction of the lattice unit cell along the principle stress direction of the maximum stress point. As for the unit cell size, it should be smaller than the minimum geometrical feature size of the FV. Besides this condition, manufacturability of existing additive manufacturing methods should also be considered as a limitation of size of the lattice unit cells.

In the second design stage of the proposed method, the internal lattice frame is generated for the chosen FVs. To reduce the computation load and time, a kernel based lattice generation algorithm is proposed in this paper. The general flow of the lattice frame generation for a given cylinder boundary is shown in Fig. 16
                        . The methodology of the presented algorithm can be explained by a set of logical rules, as follows.


                        Step  1. A standard lattice unit cell wireframe 
                           c
                         is generated with a specified topology, size and orientation, centered at the origin. This is a temporary template unit cell which will be used in steps 6 and 7. As mentioned, the orientation of the unit cell defines a local coordinate system. The origin of the unit cell’s local coordinate system coincides with the origin of the global coordinate system.


                        Step  2. The axis-aligned minimum bounding box of each FV is built. This bounding box is aligned with local coordinates of the standard unit cell. A grid of points is generated sequentially inside this bounding box along each axis of local coordinate, which is shown in Fig. 16(b). The distance between two adjacent grid points along each axis is equal to the size of a lattice unit cell along that direction. These grid points represent the center of each unit cell; they are referred to as the kernel points of the lattice.


                        Step  3. Rather than generating a lattice frame for the entire grid of kernel points, which would need significant trimming, the kernel points are categorized to the following sets: 
                           
                              a.
                              Internal points set 
                                    
                                       
                                          P
                                       
                                       
                                          i
                                       
                                    
                                 —Points located inside the FV.

External points set 
                                    
                                       
                                          P
                                       
                                       
                                          e
                                       
                                    
                                 —Points located outside the FV.

Boundary points set 
                                    
                                       
                                          P
                                       
                                       
                                          b
                                       
                                    
                                 —Points neighboring the boundary of the FV (partially inside and outside).

Totally Inside points set 
                                    
                                       
                                          P
                                       
                                       
                                          
                                             ti
                                          
                                       
                                    
                                 —Points in 
                                    
                                       
                                          P
                                       
                                       
                                          i
                                       
                                    
                                  which are not in 
                                    
                                       
                                          P
                                       
                                       
                                          b
                                       
                                    
                                 .


                        Step  4. Based on the distinctions made in step 3. The following rules were established to recognize boundary points 
                           
                              
                                 P
                              
                              
                                 b
                              
                           
                         and totally inside points 
                           
                              
                                 P
                              
                              
                                 
                                    ti
                                 
                              
                           
                        . 
                           
                              Rule 1:
                              Suppose points 
                                    
                                       
                                          k
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          k
                                       
                                       
                                          2
                                       
                                    
                                  are two adjacent kernel points in the kernel grid of FV, if 
                                    
                                       (
                                       
                                          
                                             k
                                          
                                          
                                             1
                                          
                                       
                                       ∈
                                       
                                          
                                             P
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    ⊕
                                    
                                       (
                                       
                                          
                                             k
                                          
                                          
                                             2
                                          
                                       
                                       ∈
                                       
                                          
                                             P
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 , then both 
                                    
                                       
                                          k
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          k
                                       
                                       
                                          2
                                       
                                    
                                  are boundary kernel points, denoted as 
                                    
                                       
                                          k
                                       
                                       
                                          b
                                       
                                    
                                    ∈
                                    
                                       
                                          P
                                       
                                       
                                          b
                                       
                                    
                                 . In this rule, the symbol “
                                    ⊕
                                 ” means “exclusive or”. The boundary kernel points are shown in Fig. 16(e).

Suppose point 
                                    
                                       
                                          k
                                       
                                       
                                          1
                                       
                                    
                                  is a kernel point of FV 
                                    f
                                 , if 
                                    
                                       
                                          k
                                       
                                       
                                          1
                                       
                                    
                                    ∈
                                    
                                       
                                          P
                                       
                                       
                                          i
                                       
                                    
                                    ⋀
                                    
                                       
                                          k
                                       
                                       
                                          1
                                       
                                    
                                    ∉
                                    
                                       
                                          P
                                       
                                       
                                          b
                                       
                                    
                                 , then 
                                    
                                       
                                          k
                                       
                                       
                                          1
                                       
                                    
                                  is a totally inside kernel point, which is denoted as 
                                    
                                       
                                          k
                                       
                                       
                                          
                                             ti
                                          
                                       
                                    
                                    ∈
                                    
                                       
                                          P
                                       
                                       
                                          
                                             ti
                                          
                                       
                                    
                                 . The totally inside kernel points are shown in Fig. 16(c).


                        Step  5. Instead of generating a fresh unit cell wireframe at each kernel point, the template unit cell from step 1 is copied and translated to its respective location; a matter of computational efficiency. The translation vector 
                           
                              
                                 v
                              
                              
                                 t
                                 p
                              
                           
                         of each kernel point 
                           k
                           ∈
                           
                              
                                 P
                              
                              
                                 
                                    ti
                                 
                              
                           
                           ⋃
                           
                              
                                 P
                              
                              
                                 b
                              
                           
                         is calculated based on: 
                           
                              (2)
                              
                                 
                                    
                                       v
                                    
                                    
                                       t
                                       p
                                    
                                 
                                 =
                                 
                                    
                                       v
                                    
                                    
                                       p
                                    
                                 
                                 −
                                 
                                    
                                       v
                                    
                                    
                                       c
                                    
                                 
                              
                           
                         where 
                           
                              
                                 v
                              
                              
                                 p
                              
                           
                         is the position vector of kernel point 
                           k
                         and 
                           
                              
                                 v
                              
                              
                                 c
                              
                           
                         is the position vector of a template unit cell 
                           c
                        , with respect to the global coordinate system. Since in step 1, we centered the template unit cell at the origin, 
                           
                              
                                 v
                              
                              
                                 t
                                 p
                              
                           
                         can be simplified to 
                           
                              
                                 v
                              
                              
                                 p
                              
                           
                        . Based on the translation vectors 
                           
                              
                                 v
                              
                              
                                 t
                                 p
                              
                           
                        , unit cell wireframes will be mapped to each of the kernel points 
                           k
                        .


                        Step  6. A unit cell wireframe is moved to every boundary kernel point 
                           
                              
                                 k
                              
                              
                                 b
                              
                           
                           ∈
                           
                              
                                 P
                              
                              
                                 b
                              
                           
                        . Next, parts of the wireframes that are outside the FV are removed, through the following trimming algorithm: 
                           
                              a.
                              Suppose 
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                  are the endpoints of a strut 
                                    l
                                 .

If 
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                  are both outside the FV, strut 
                                    l
                                  is removed.

If 
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                  are both inside the FV, strut 
                                    l
                                  is preserved.

If 
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                  are on opposite sides of the FV boundary, strut 
                                    l
                                  is trimmed. To do this, strut 
                                    l
                                  is intersected with the FV boundary, and split into two sub-struts 
                                    
                                       
                                          l
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          l
                                       
                                       
                                          2
                                       
                                    
                                 . The sub-strut that is outside the FV is removed.

The result of this step is shown in Fig. 16(f).


                        Step  7. A unit cell wireframe is generated at every Totally Inside kernel point 
                           
                              
                                 k
                              
                              
                                 
                                    ti
                                 
                              
                           
                           ∈
                           
                              
                                 P
                              
                              
                                 
                                    ti
                                 
                              
                           
                        . No trimming is required for these unit cells. This greatly reduces computation time. The result of this step is shown in Fig. 16(d).


                        Step  8. Finally, the unit cell wireframes generated in steps 6 and 7 are consolidated into a single network by removing duplicate nodes and lines, and merging the remaining elements. The result, known as the lattice frame, is shown in Fig. 16(g).

It should be noted that the proposed lattice generation method described in this section can only be used to deal with periodic lattice structures. Moreover, even though boundary connectivity is predefined by periodicity, the positions of lattice kernel points are not predefined. These kernel points should be determined based on the selected lattice orientation. Fig. 17
                         shows a comparison between kernel points for the same FV with different orientation angles. It is clear, for the same FV, different orientations will generate different distributions of kernel points inside the design domain even for periodic lattice structures.

The BESO method is a finite element based topology optimization method, where inefficient material is iteratively removed from a structure while efficient material is simultaneously added to the structure. Compared to ESO, that is limited to material removal, the BESO method is much more efficient. This method was first proposed by Querin et al.  [32,33] to enhance the optimization results and speed of the ESO algorithm. Later, a modified version of the BESO algorithm was presented by Huang and Xie  [34] to solve non-convergence and mesh-dependency problems associated with earlier BESO algorithms.

In this paper, a modified BESO algorithm is proposed to optimize thickness of lattice struts in meso level. Instead of directly removing or adding elements as in the conventional BESO method, the thickness of each strut is updated during the optimization iteration to redistribute material in the design space. This optimization is designed to emulate the remodeling process of bone which is known as Wolff’s law  [35]. The material will be removed in low stress areas and formed in the high stress areas. The volume of material removed is equal to material added, which keeps the total volume unchanged. The mathematical representation of the proposed optimization problem for lattice structure can be expressed as: 
                           
                              
                                 (3)
                                 
                                    To Find:
                                    
                                    
                                       
                                          t
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                    k
                                    =
                                    1
                                    ,
                                    2
                                    …
                                    ,
                                    n
                                 
                              
                              
                                 
                                    Minimize:
                                    
                                    
                                       PI
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             i
                                             =
                                             n
                                          
                                       
                                       
                                          
                                             σ
                                          
                                          
                                             
                                                
                                                   
                                                      VM
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                       
                                          
                                             V
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    /
                                    F
                                    L
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             S.T.:
                                          
                                          
                                             K
                                             u
                                             −
                                             P
                                             =
                                             0
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   i
                                                   =
                                                   n
                                                
                                             
                                             
                                                
                                                   V
                                                
                                                
                                                   i
                                                
                                             
                                             ≤
                                             
                                                
                                                   V
                                                
                                                
                                                   
                                                      const
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                
                                                   t
                                                
                                                
                                                   
                                                      min
                                                   
                                                
                                             
                                             ≤
                                             
                                                
                                                   t
                                                
                                                
                                                   k
                                                
                                             
                                             ≤
                                             
                                                
                                                   t
                                                
                                                
                                                   
                                                      max
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 t
                              
                              
                                 k
                              
                           
                         is the thickness of the 
                           k
                        th strut in lattice frame; 
                           n
                         is the number of struts in the lattice frame; PI is the performance indicator of the structure proposed by Querin  [32] and Steven  [36] to measure how well the overall structure is performing against an idealized fully stressed design. 
                           
                              
                                 σ
                              
                              
                                 
                                    
                                       
                                          VM
                                       
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         and 
                           
                              
                                 V
                              
                              
                                 i
                              
                           
                         are the maximum Von-Mises stress and volume of 
                           i
                        th strut; 
                           F
                         is a representational force and 
                           L
                         is a reference length. These two parameters are problem specific and constant throughout the optimization process. 
                           K
                         is the global stiffness matrix of lattice structure and 
                           u
                         is the node displacement vector; 
                           P
                         is the external load. 
                           
                              
                                 V
                              
                              
                                 
                                    const
                                 
                              
                           
                         is the given volume of the lattice structure; 
                           
                              
                                 t
                              
                              
                                 
                                    min
                                 
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 
                                    max
                                 
                              
                           
                         are the minimum thickness and maximum thickness of lattice struts, respectively. The general workflow of this algorithm is presented in Fig. 18
                        . The overall logic of this proposed algorithm is to relocate struts’ material or volume according to struts’ stress distribution calculated from FEA. In this optimization algorithm, the key is the volume relocation process. In this process, the volume of struts whose maximum Von-Mises stress is lower than the given volume is reduced by a certain percentage and the total removed volume is redistributed according to struts’ stress distribution. Based on this volume relocation process, the updated structure can gradually adapt to the given external load. The detailed description of main steps of proposed optimization algorithm is given as follows:

Step 1: Set up FEA model. In this model, the Timoshenko beam element is used to describe mechanical behavior of each lattice strut. The triangle shell element is used to model the skin on the lattice. Moreover, the FVs with solid material are meshed with 4 nodal tetrahedron elements.

Step 2: Generate thickness list of lattice struts.

Step 3: Apply all kinematic boundary constrains, loads, element properties, etc.

Step 4: Carry out a linear static finite element analysis of the structure.

Step 5: Calculate maximum Von Mises stress 
                           
                              
                                 σ
                              
                              
                                 
                                    
                                       
                                          VM
                                       
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         of each lattice strut in lattice frame.

Step 6: The thickness of lattice can be reduced if the strut satisfies following rule:


                        Rule  4: Suppose 
                           
                              
                                 σ
                              
                              
                                 
                                    
                                       
                                          VM
                                       
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         is the maximum Von Mises stress of lattice strut 
                           
                              
                                 s
                              
                              
                                 i
                              
                           
                           ,
                           
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         is the thickness of lattice strut 
                           
                              
                                 s
                              
                              
                                 i
                              
                           
                        , 
                           
                              
                                 σ
                              
                              
                                 
                                    VMMax
                                 
                              
                           
                         in the maximum Von Mises stress of all struts in lattice frame, if 
                           
                              (
                              
                                 
                                    σ
                                 
                                 
                                    
                                       
                                          
                                             VM
                                          
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              ≤
                              
                                 RR
                              
                              ×
                              
                                 
                                    σ
                                 
                                 
                                    
                                       VMMax
                                    
                                 
                              
                              )
                           
                           ⋀
                           
                              (
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              >
                              
                                 
                                    t
                                 
                                 
                                    
                                       Min
                                    
                                 
                              
                              )
                           
                        , then the material will be removed from the lattice 
                           
                              
                                 s
                              
                              
                                 i
                              
                           
                         which can be denoted as 
                           
                              
                                 s
                              
                              
                                 i
                              
                           
                           ∈
                           
                              
                                 S
                              
                              
                                 r
                              
                           
                        .

In Rule 3, RR is known as rejection ratio. 
                           0
                           ≤
                           
                              RR
                           
                           ≤
                           1
                        . RR initially equals 0.01.

Step 7: The reduced thickness 
                           
                              
                                 t
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         of each reduced lattice strut is calculated by 
                           
                              (4)
                              
                                 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    RT
                                 
                                 ×
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         where RT is known as thickness remove ratio. If 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                           −
                           
                              
                                 t
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                              
                           
                           <
                           
                              
                                 t
                              
                              
                                 
                                    min
                                 
                              
                           
                        , then the reduced thickness 
                           
                              
                                 t
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         is recalculated by 
                           
                              (5)
                              
                                 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                 
                                 −
                                 
                                    
                                       t
                                    
                                    
                                       
                                          min
                                       
                                    
                                 
                                 .
                              
                           
                         Based on calculated 
                           
                              
                                 t
                              
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        , the thickness of reduced strut is updated.

Step 8: The total removed volume 
                           
                              
                                 V
                              
                              
                                 
                                    rtotal
                                 
                              
                           
                         is calculated by 
                           
                              (6)
                              
                                 
                                    
                                       V
                                    
                                    
                                       
                                          rtotal
                                       
                                    
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       i
                                       =
                                       n
                                    
                                 
                                 
                                    (
                                    A
                                    
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    −
                                    A
                                    
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                       −
                                       
                                          
                                             t
                                          
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 
                                    
                                       l
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         where 
                           A
                         is the function of struts cross section area with respect to its thickness; 
                           
                              
                                 l
                              
                              
                                 i
                              
                           
                         is the length of strut 
                           
                              
                                 l
                              
                              
                                 i
                              
                           
                        .

Step 9: Redistribute removed volume to non-reduced struts whose thickness is lower than the maximum thickness. The added volume for strut 
                           
                              
                                 s
                              
                              
                                 i
                              
                           
                         can be calculated by: 
                           
                              (7)
                              
                                 
                                    
                                       V
                                    
                                    
                                       
                                          
                                             
                                                Add
                                             
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          σ
                                       
                                       
                                          
                                             
                                                
                                                   VM
                                                
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    /
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          i
                                          =
                                          k
                                       
                                    
                                    
                                       
                                          σ
                                       
                                       
                                          
                                             
                                                
                                                   VM
                                                
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ×
                                 
                                    
                                       V
                                    
                                    
                                       
                                          rtotal
                                       
                                    
                                 
                              
                           
                         where 
                           k
                         is the number of added volume struts. If 
                           
                              
                                 V
                              
                              
                                 
                                    
                                       
                                          Add
                                       
                                    
                                    
                                       i
                                    
                                 
                              
                           
                           +
                           
                              
                                 V
                              
                              
                                 i
                              
                           
                           >
                           A
                           
                              (
                              
                                 
                                    t
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                              )
                           
                           
                              
                                 l
                              
                              
                                 i
                              
                           
                        , the added volume will be recalculated by: 
                           
                              (8)
                              
                                 
                                    
                                       V
                                    
                                    
                                       
                                          
                                             
                                                Add
                                             
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    (
                                    A
                                    
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             
                                                max
                                             
                                          
                                       
                                       )
                                    
                                    −
                                    A
                                    
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 
                                    
                                       l
                                    
                                    
                                       i
                                    
                                 
                                 .
                              
                           
                         The residual volume 
                           
                              
                                 V
                              
                              
                                 
                                    
                                       
                                          rs
                                       
                                    
                                    
                                       i
                                    
                                 
                              
                           
                         in the adding process of this strut can be expressed as: 
                           
                              (9)
                              
                                 
                                    
                                       V
                                    
                                    
                                       
                                          
                                             
                                                rs
                                             
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          σ
                                       
                                       
                                          
                                             
                                                
                                                   VM
                                                
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    /
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          i
                                          =
                                          k
                                       
                                    
                                    
                                       
                                          σ
                                       
                                       
                                          
                                             
                                                
                                                   VM
                                                
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ×
                                 
                                    
                                       V
                                    
                                    
                                       
                                          rtotal
                                       
                                    
                                 
                                 −
                                 
                                    (
                                    A
                                    
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             
                                                max
                                             
                                          
                                       
                                       )
                                    
                                    −
                                    A
                                    
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 
                                    
                                       l
                                    
                                    
                                       i
                                    
                                 
                                 .
                              
                           
                         The same method will be used to redistribute residual volumes into the remaining struts until the total residual volume equals zero.

Step 10: Based on the calculated 
                           
                              
                                 V
                              
                              
                                 
                                    
                                       
                                          Add
                                       
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        , the updated thickness of added volume struts can be calculated by: 
                           
                              (10)
                              
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       A
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 
                                    (
                                    A
                                    
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    +
                                    
                                       
                                          V
                                       
                                       
                                          
                                             
                                                
                                                   Add
                                                
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    /
                                    
                                       
                                          l
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                              
                           
                         where 
                           
                              
                                 A
                              
                              
                                 −
                                 1
                              
                           
                         is the inverse function of 
                           A
                        .

Step 11: if 
                           
                              |
                              
                                 
                                    
                                       PI
                                    
                                 
                                 
                                    i
                                    −
                                    1
                                 
                              
                              −
                              
                                 
                                    
                                       PI
                                    
                                 
                                 
                                    i
                                 
                              
                              |
                           
                           <
                           
                              
                                 c
                              
                              
                                 s
                              
                           
                         or 
                           i
                           ≥
                           
                              
                                 i
                              
                              
                                 
                                    max
                                 
                              
                           
                        , algorithm stop, else update RR by: 
                           
                              (11)
                              
                                 
                                    RR
                                 
                                 =
                                 
                                    RR
                                 
                                 +
                                 r
                                 i
                              
                           
                         where ri is known as the rejection ratio incremental value.

Step 12: Repeat step 4–step 11, when condition in Step 11 is not met.

The optimized structure can be selected during the history of the optimization process.

In this section, a design optimization case for an aircraft engine bracket, shown in Fig. 12, is given to validate the proposed design method of lattice structure. This part is originally designed with Ti-6Al-4V, whose material properties are shown in Table 1
                     .

Based on the functional analysis discussed earlier, two FVs and sixteen FSs are determined after the initial design stage. For the lattice structure FV, a periodic lattice structure with cubic grid topology is used. The initial design parameters of the lattice structure are given in Table 2
                     .

Based on the design parameters shown in Table 2, a lattice frame is generated through our kernel based approach. The result is shown in Fig. 19
                     (a). Meanwhile, the ordinary lattice generation method which trims all struts in FV has also been used to generate a lattice frame. Based on the same computer configuration (CPU: Intel®  Core™ i7 4770 K, RAM: 24G), the computational time for these two lattice generation methods is recorded and shown in Table 4. In Table 4, Method 1 indicates the proposed lattice frame generation method which only trim the struts of boundary kernels, while the Method 2 indicates the lattice generation method which trim all lattice struts inside the FV. By comparing the computational time of these two lattice frame generation methods, it is clear that the computational time can be significantly shortened by only trimming the struts of boundary kernel in the proposed method.

Based on the generated lattice frame and the initial selected parameters of lattice structures, the homogeneous lattice structure with initial struts’ thickness is generated, which is shown in Fig. 19(b). To further improve the performance of the currently homogeneous lattice structure, the BESO-based algorithm is used to optimize struts’ thickness distribution. The boundary condition for this optimization case is shown in Fig. 14. The values of the parameters used in this optimization algorithm are shown in Table 3
                     
                     . In this table, the representative Force 
                        F
                      and representative length 
                        L
                      are determined based on the external force exerted on the structure, and length of the diagonal vector of the bounding box, respectively. After six iterations, the optimization converged (i.e. the change of PI is less than given value 
                        
                           
                              c
                           
                           
                              s
                           
                        
                     ). The optimization process is shown in Fig. 20
                     . The lattice struts’ thickness distribution is shown in Fig. 21
                     . Based on this result, the 3D model of optimized part is generated which is shown in Fig. 22
                     . Compared to the homogeneous lattice structure, both the maximum Von-Mises stress and maximum displacement of lattice structure were significantly decreased. A comparison of the weight of the lattice optimized part and the original design is given in Table 5
                     . Clearly, the design optimization significantly reduces the weight of the original part, while satisfying specified functional requirements.

Through AM technologies, parts designed with multi-level complexity can be fabricated, resulting in vast improvements of functional performance. At the meso level, weight reduction and porosity can be achieved by integrating lattice structures into the part’s topology. Based on a careful review of current design methods for lattice structure, three critical issues were summarized. To solve these problems, a novel design method is proposed in this paper. Firstly, the concept of FS and FV is given to consider the functional role of solid volume and skin. Secondly, to generate a lattice frame inside a given FV, a kernel based lattice frame generation algorithm is presented. In this algorithm, the rule to recognize boundary kernels is given. By only trimming the frames of boundary kernels, the computational efficiency of the algorithm has been improved. Thirdly, by considering the lattice orientation, a new design parameter is introduced that may be adjusted to improve performance. Fourthly, a BESO based optimization method is proposed to optimize thickness distribution of the lattice struts. Compared to other structural optimization methods, the BESO based optimization method is easy to implement with an existing FEA solver, since it does not request to calculate gradient. Furthermore, besides periodic lattice structures which are mainly focused in this paper, the BESO based optimization method can also be easily modified and applied to other pseudo-periodic lattice such as conformal lattice in the future. The proposed method was validated through a case study. Compared to the original design with totally solid material, the optimized lattice structure reduced weight by nearly 75%. The maximum displacement of the customized lattice structure was reduced by 70.4% and the maximum Von-Mises stress was reduced by 65.7%, relative to a homogeneous lattice of the same volume.

Future research will be focused on the following ideas. Firstly, an approach for optimizing the orientation of the lattice should be developed. The concepts involved were discussed briefly in this paper. Secondly, it is necessary to consider the connection points between different FVs with different type of lattice structure. Extra care should be taken for continuity between different lattice topologies. Thirdly, the optimization of solid volume and skin thickness should also be considered in the design method. Finally, the proposed optimization method can be further improved by removing some boundary struts with really low stress. The related removing algorithm should be proposed.

@&#ACKNOWLEDGMENTS@&#

This research work is supported by National Sciences and Engineering Research Council of Canada Discovery Grant RGPIN 436055-2013, China Scholarship Council (201306020032) and Rio Tinto-Richard Evans Fellowship in Engineering.

@&#REFERENCES@&#

