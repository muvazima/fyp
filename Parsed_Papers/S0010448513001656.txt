@&#MAIN-TITLE@&#Geometric computation and optimization on tolerance dimensioning

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           LPGUM model is extended to propose a new complete representation of tolerances.


                        
                        
                           
                           A new analysis method for the tolerance estimation via geometric computations.


                        
                        
                           
                           A new optimization method for improving a dimension scheme to reduce tolerances.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Tolerance analysis

Process planning

Geometric optimization

@&#ABSTRACT@&#


               
               
                  This paper presents an efficient geometric method of tolerance analysis for optimizing dimensioning and providing an optimal processing plan for a discrete part. Geometric primitives are used to represent part features, and dependencies in the dimensions between parts are represented by a topological graph. The ordering of these dependencies can have a significant effect on the tolerance zones in the part. To obtain tolerance zones from the dependencies, the conventional parametric method of tolerance analysis is decomposed into a set of geometric computations, which are combined and cascaded to obtain the tolerance zones in the geometric representations. Geometric optimization is applied to the topological graph in order to find a solution that provides not only an optimal dimensioning scheme but also an optimal plan for manufacturing the physical part. The applications of our method include tolerance analysis, dimension scheme optimization, and process planning.
               
            

@&#INTRODUCTION@&#

In parts manufacturing, the quality of finished parts is determined by both design and manufacturing tolerances, which determine the dimensional and geometric properties of the part  [1]. Engineers are required to select appropriate machining processes and equipment so that the requirements of the design tolerances are met. This process is usually called the process planning. The traditional way to design an appropriate process plan is a time consuming task that requires the engineer to iterate the process of designing, testing, and modifying the solution until all the design requirements are satisfied. Recently, computer aided process planning (CAPP) has drawn considerable attention as a way to simplify this process. Key techniques related to CAPP include tolerance modeling, tolerance analysis, and tolerance allocation. The tolerances determined in the design phase serve as the basis for the manufacturing tolerances, which are used to reflect individual manufacturing operations. The focus of this paper is on design tolerances.

A key part of tolerance modeling is representing the zone within which geometric characteristics of a model may vary. These tolerance zones are usually represented as simple geometric entities that are guaranteed to bound the features of the model  [2,3]. They can be thought of as a representation of the uncertainty in the geometric position. Geometric variations can also be modeled as higher dimensional geometric objects, such as polytopes or dual-cones, which represent the region as intervals of the coefficients of their algebraic parameterization  [4–6]. Tolerances of part features such as form, orientation, and size can be represented in this way, though further computation on such models can be very complicated.

Tolerance analysis covers the techniques that compute the variations of tolerances for the worst case estimation or statistical expectation. Broad reviews of the area are available  [7,8]. Though many techniques can be employed for tolerance analysis in the design phase, tolerance propagation is the core part of process planning. Tolerance propagation refers to the determination of one tolerance zone based on others. When manufacturing one feature of a part, engineers have to use other features as the geometric or dimensioning references. Thus, tolerances in the references must be propagated to the feature referring to it. Typically the propagation involves a series of computational geometry operations. However, because the tolerances are modeled in different spaces (world space and local part-centric space), the representation and the transformation of tolerances are not straightforward. For high-dimensional representations, the computation of tolerance propagation relies on computational techniques in high dimension that are notorious for the difficulty with implementation and robustness. Several lines of prior research have proposed methods addressing propagation.

Tolerance charting methods, which evaluate tolerance propagation based on engineers’ experience, are a traditional way of handling tolerances. Computer-aided tolerance charting methods  [9] have been developed to reduce the iteration of physical trial-and-error runs. Shortcomings of tolerance charting are that it cannot deal with complex spatial tolerance propagation issues or geometrical tolerances. To overcome this problem, methods for modeling tolerance propagation in higher dimensions have been presented [10–13]. One kind of method uses small displacements torsor (SDT)  [14] to model the process planning  [10]. Another kind of method, Technologically and Topologically Related Surfaces (TTRS), forms any part as a tree representing the succession of surface associations  [11]. Tolerance information can be tracked along the stacking chain in the graph. The stacking up of parts could be simulated by a Monte Carlo method to estimate tolerance propagation  [12,13]. This has the advantage of simplicity and flexibility, however the drawbacks of such methods are that it can be very time consuming and have poor computational accuracy at small to medium sample sizes. A third kind of method tries to find a feasible assembly plan on a graph structure by representing the related parts with the consideration of tolerances  [15]. This method bridges the gap between its generalized tolerance model and previous models so that it could be incorporated with the previous assembly planning methods. Though this method formulates a general framework for tolerance estimation, its contribution to the optimal planning is limited.

Regardless of the representation of the zones themselves, the most common and straightforward implementations represent the tolerance zones independently. Unfortunately, as tolerances are propagated the dependencies between zones is then lost, causing over-estimation of the zones. One way of exploiting dependencies between the tolerance zones is by analyzing sensitivity to parametric variations  [16,15]. Recently, a new method for describing dependencies of geometric uncertainties has been proposed [17,18], though to our knowledge it has not been implemented in any general way, including by the original authors, prior to our work presented here. This method, called LPGUM (Linear Parametric Geometric Uncertainty Model), uses a first-order approximation of the uncertainty zones of geometric primitives. The dependencies of uncertainties are derived from sensitivity matrices. Despite the promise of LPGUM and similar methods, they have to this point been shown to handle only very simple operations on very basic primitives, and thus have not been practical for modeling tolerance zones of real parts. Further, no tolerance propagation model has been designed, and thus tolerance zones cannot be cascaded. As a result, these methods were not (yet) suitable for tolerance analysis during the process planning phase.

In this paper, we present a new geometric model for tolerance modeling and propagation, geared towards the tolerance analysis in process planning. Our aim is to decompose a big chunk of analytic computations of conventional tolerance analysis into a series of geometry computations. We first decompose the part into basic geometric primitives, or features. Because those primitives are to be manufactured in a common part, we know they are related and that there are dependencies between them, which could be represented by a graph structure. We first decouple the primitives into several co-related primitive groups. In each group, the geometric position of a certain primitive (target primitive) is decided by the remaining primitives (reference primitives). This allows us to use the LPGUM model  [17] to model the tolerance zone for the target primitive, because all its variations have been obtained. Next, we formulate a method for cascading the decoupled primitive groups, so that the tolerances can be transferred between groups. Using those cascading techniques, we could obtain the tolerance zones for all primitives by traversing the embedded graph structure representing the dependencies. The tolerance zones thus obtained provide a worst case estimation on dimensions, represented as a geometric polytope. Finally, we provide a computational optimization method which can improve the quality of the existing process plan so that the tolerance of the parts could be minimized as much as possible. The optimization problem itself is an NP hard problem. We propose an efficient approximated dynamic programming solver which utilizes the optimal substructure.

To summarize the contributions of this paper:


                        
                           
                              –
                              we expand the LPGUM model to propose a complete representation of tolerances that is suitable for use in process planning and can exploit the dependencies within the dimensioning scheme.

building on our tolerance model, we describe the tolerance analysis based on geometric computations that provide a worst-case estimation and a straightforward geometric representation of the tolerance zone.

we describe a tolerance optimization approach that can improve an existing dimensioning scheme so that relative tolerances can be relaxed and thereby reduce manufacturing cost. The optimization result, which is a dependency graph of dimensions, indicates the processing order of features on the part.

although the tolerance optimization problem is NP hard, we propose an efficient approximated solver with much lower complexity.

In order to simplify the tolerance analysis model, a group of basic geometric primitives, points, lines, and planes, are selected, and these are used to represent all features on the part, both linear and nonlinear  [19]. This decomposition into basic primitives occurs before the tolerance analysis. Dimensions are used to build the dependencies among those primitives. Specifically, each dimension is associated with at least two primitives; one of them is the target primitive, 
                           
                              t
                           
                        , which is specified relative to the reference(s), denoted by a set 
                           
                              {
                              
                                 
                                    
                                       m
                                    
                                 
                                 
                                    i
                                 
                              
                              }
                           
                           ,
                           1
                           ≤
                           i
                           ≤
                           n
                        . This dependency between the references and the target could be represented by a map 
                           
                              {
                              
                                 
                                    
                                       m
                                    
                                 
                                 
                                    i
                                 
                              
                              }
                           
                           →
                           
                              t
                           
                        . The variation zone of 
                           
                              t
                           
                         is caused by tolerances in the dimension(s) and in the propagated variation of the reference(s). We introduce two notations of tolerance zones of the target. One is the relative tolerance zone, denoted by 
                           R
                           
                              (
                              
                                 t
                              
                              ,
                              
                                 {
                                 
                                    
                                       
                                          m
                                       
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              )
                           
                         or 
                           R
                           
                              (
                              
                                 t
                              
                              )
                           
                         for short, which shows the tolerance zone of 
                           
                              t
                           
                         by assuming positions of references are exact (i.e. the tolerance zone is based solely on the tolerance in the dimensioning). The other is the global (real) tolerance zone, denoted by 
                           Z
                           
                              (
                              
                                 t
                              
                              ,
                              
                                 {
                                 
                                    
                                       
                                          m
                                       
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              )
                           
                         or 
                           Z
                           
                              (
                              
                                 t
                              
                              )
                           
                        , which shows the tolerance zone for 
                           
                              t
                           
                         with consideration of all variations of dimensions, including that propagated from references.

This paper is organized as follows. Section  2 explains the computation of relative tolerance zones on primitives. Section  3 explains cascading of relative tolerance zones. Section  4 explains the optimization on an augmented dependency graph of dimensions. Section  5 shows the experimental results.

Note that, our work will be described and analyzed in only 2D. We can think of no fundamental reason why our methods would not extend to 3D (and some contributions are entirely dimension-independent), but we have not yet implemented all parts of our system in 3D, and thus will leave such extension to future work.

When computing relative tolerances, we assume the references 
                        
                           {
                           
                              
                                 
                                    m
                                 
                              
                              
                                 i
                              
                           
                           }
                        
                      have an exact position. Thus, the tolerance zone of the target 
                        
                           t
                        
                      is only caused by variations of dimensions connecting 
                        
                           t
                        
                      and 
                        
                           {
                           
                              
                                 
                                    m
                                 
                              
                              
                                 i
                              
                           
                           }
                        
                     . When 
                        i
                        =
                        1
                     , we name the dependency 
                        
                           {
                           
                              
                                 
                                    m
                                 
                              
                              
                                 1
                              
                           
                           }
                        
                        →
                        
                           t
                        
                      
                     single dependency, which indicates that the target 
                        
                           t
                        
                      is only affected by one primitive. If 
                        i
                        >
                        1
                     , we name the dependency 
                        
                           {
                           
                              
                                 
                                    m
                                 
                              
                              
                                 i
                              
                           
                           }
                        
                        →
                        
                           t
                        
                      
                     multiple dependency, which implies that the target 
                        
                           t
                        
                      is affected by two or more primitives. We present tolerance evaluation techniques for both cases.

We assume that a point and line segment are sufficient for representing all features. This is always true within some tolerance (which we in fact have), and given that we linearize our nonlinear constraints, this is even more appropriate. The relative tolerance zone 
                           R
                           
                              (
                              
                                 t
                              
                              ,
                              
                                 {
                                 
                                    
                                       
                                          m
                                       
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              )
                           
                         could be computed analytically via an explicit formulation on a certain parameterization or approximated by the linearization of variances  [17]. We adopt the second approach since it allows us to convert the analytical computation to the corresponding geometric computation. Though the linearization is a first-order approximation of the exact tolerance zone, this minor accuracy trade-off can be neglected because of the tiny values of tolerances. We compute the tolerance zones for combinations of the point, denoted by 
                           
                              p
                           
                        , and the segment, denoted by its two ends 
                           
                              a
                           
                           
                              b
                           
                        . We use 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ′
                              
                           
                         to denote another point and use 
                           
                              
                                 
                                    a
                                 
                              
                              
                                 ′
                              
                           
                           
                              
                                 
                                    b
                                 
                              
                              
                                 ′
                              
                           
                         to denote another segment.

The linearization model in  [17] is built on the variational zone of a point. For one fixed point 
                           
                              p
                           
                        , the tolerance zone is approximated by 
                           
                              (1)
                              
                                 Z
                                 
                                    (
                                    
                                       p
                                    
                                    )
                                 
                                 ≈
                                 Z
                                 
                                    (
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          ̄
                                       
                                    
                                    )
                                 
                                 +
                                 J
                                 
                                    
                                       δ
                                    
                                    
                                       i
                                    
                                 
                                 ,
                              
                           
                         where 
                           J
                         is the (Jacobian) sensitivity matrix of uncertainties and where 
                           
                              
                                 δ
                              
                              
                                 i
                              
                           
                           ,
                           1
                           ≤
                           i
                           ≤
                           n
                         define variations of 
                           n
                         tolerances. When considering 
                           R
                           
                              (
                              
                                 p
                              
                              ,
                              
                                 {
                                 
                                    
                                       
                                          p
                                       
                                    
                                    
                                       ′
                                    
                                 
                                 }
                              
                              )
                           
                        , 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ′
                              
                           
                         tries to lock all degrees of freedom (DOF) of 
                           
                              p
                           
                        . So we have 
                           n
                           =
                           2
                         for 2D and the zone is a quadrangle as shown in Fig. 1
                        a. Similarly, we can obtain tolerance zones for the remaining combinations. For 
                           R
                           
                              (
                              
                                 p
                              
                              ,
                              
                                 {
                                 
                                    a
                                 
                                 
                                    b
                                 
                                 }
                              
                              )
                           
                        , the tolerance zone would be a band along the segment as shown in Fig. 1b. For 
                           R
                           
                              (
                              
                                 a
                              
                              
                                 b
                              
                              ,
                              
                                 {
                                 
                                    p
                                 
                                 }
                              
                              )
                           
                        , the local tolerance frame still has two DOFs, so the tolerance zone, in Fig. 1c, is similar to that of 
                           R
                           
                              (
                              
                                 p
                              
                              ,
                              
                                 {
                                 
                                    
                                       
                                          p
                                       
                                    
                                    
                                       ′
                                    
                                 
                                 }
                              
                              )
                           
                        . For 
                           R
                           
                              (
                              
                                 a
                              
                              
                                 b
                              
                              ,
                              
                                 {
                                 
                                    
                                       
                                          a
                                       
                                    
                                    
                                       ′
                                    
                                 
                                 
                                    
                                       
                                          b
                                       
                                    
                                    
                                       ′
                                    
                                 
                                 }
                              
                              )
                           
                        , we can apply several kinds of geometric constraints, such as parallelism or perpendicularity. Fig. 1d shows the tolerance zone for parallelism.

When the references set 
                           
                              {
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                              }
                           
                         has more than one primitive, we have a multiple dependency. We examine three cases where the target is a point or a segment as shown in Fig. 2
                        .


                        Fig. 2a shows the point target case. Points 
                           
                              a
                           
                         and 
                           
                              b
                           
                         could be two point primitives or points on other primitives. DOFs of 
                           
                              c
                           
                         are locked by both 
                           
                              a
                           
                         and 
                           
                              b
                           
                        . We can obtain 
                           R
                           
                              (
                              
                                 c
                              
                              )
                           
                         by applying the linearization in (1) using the variations of dimensions between 
                           
                              a
                           
                           ,
                           
                              c
                           
                         and 
                           
                              b
                           
                           ,
                           
                              c
                           
                        . The number of vertices of 
                           R
                           
                              (
                              
                                 c
                              
                              )
                           
                         is decided by the corresponding sensitivity matrix. In Fig. 2b, points 
                           
                              a
                           
                         and 
                           
                              b
                           
                         are also two point primitives or points on other primitives. DOFs of 
                           
                              c
                           
                         are locked by 
                           
                              a
                           
                         and DOFs of 
                           
                              d
                           
                         are locked by 
                           
                              b
                           
                        . We can decompose this case into two independent groups of point dependencies: 
                           
                              {
                              
                                 a
                              
                              }
                           
                           →
                           
                              c
                           
                         and 
                           
                              {
                              
                                 b
                              
                              }
                           
                           →
                           
                              d
                           
                        . The tolerance zone for segment 
                           
                              c
                           
                           
                              d
                           
                         is the convex hull of 
                           R
                           
                              (
                              
                                 c
                              
                              )
                           
                         and 
                           R
                           
                              (
                              
                                 d
                              
                              )
                           
                        . In Fig. 2c, points 
                           
                              c
                           
                         and 
                           
                              d
                           
                         are both decided by 
                           
                              a
                           
                         and 
                           
                              b
                           
                         together. We decompose this relation into two interleaved dependencies 
                           
                              {
                              
                                 a
                              
                              
                                 b
                              
                              }
                           
                           →
                           
                              c
                           
                         and 
                           
                              {
                              
                                 a
                              
                              
                                 b
                              
                              }
                           
                           →
                           
                              d
                           
                         and treat 
                           
                              c
                           
                         and 
                           
                              d
                           
                         as point targets.

For single dependency, the relative tolerance operation is not commutative, i.e.,  
                           R
                           
                              (
                              
                                 t
                              
                              ,
                              
                                 {
                                 
                                    m
                                 
                                 }
                              
                              )
                           
                           ≠
                           R
                           
                              (
                              
                                 m
                              
                              ,
                              
                                 {
                                 
                                    t
                                 
                                 }
                              
                              )
                           
                        . Therefore, we define the inverse operation 
                           
                              
                                 R
                              
                              
                                 −
                                 1
                              
                           
                           
                              (
                              
                                 t
                              
                              ,
                              
                                 {
                                 
                                    m
                                 
                                 }
                              
                              )
                           
                           =
                           R
                           
                              (
                              
                                 m
                              
                              ,
                              
                                 {
                                 
                                    t
                                 
                                 }
                              
                              )
                           
                        . The computation rule is that we view 
                           
                              t
                           
                         as the reference and build the tolerance zone around 
                           
                              m
                           
                        . We could easily use the models in Fig. 1 to obtain the inverse dependency for each case of the single dependency. For example, 
                           
                              
                                 R
                              
                              
                                 −
                                 1
                              
                           
                           
                              (
                              
                                 p
                              
                              ,
                              
                                 {
                                 
                                    a
                                 
                                 
                                    b
                                 
                                 }
                              
                              )
                           
                           =
                           R
                           
                              (
                              
                                 a
                              
                              
                                 b
                              
                              ,
                              
                                 {
                                 
                                    p
                                 
                                 }
                              
                              )
                           
                        , which indicates that operations in Fig. 1b and c are inverses of each other. The inverse for Fig. 1a is in Fig. 3
                        a. We can obtain the inverse operation for the two-segment case similarly.

If a multiple dependency can be decomposed into a set of independent single dependencies, we define the inverse 
                           
                              
                                 R
                              
                              
                                 −
                                 1
                              
                           
                           
                              (
                              
                                 t
                              
                              ,
                              
                                 {
                                 
                                    
                                       
                                          m
                                       
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              )
                           
                           =
                           
                              
                                 ∪
                              
                              
                                 i
                              
                           
                           R
                           
                              (
                              
                                 
                                    
                                       m
                                    
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 {
                                 
                                    t
                                 
                                 }
                              
                              )
                           
                        . The case in Fig. 2b can be inverted by inverting 
                           R
                           
                              (
                              
                                 a
                              
                              ,
                              
                                 {
                                 
                                    c
                                 
                                 }
                              
                              )
                           
                         and 
                           R
                           
                              (
                              
                                 d
                              
                              ,
                              
                                 {
                                 
                                    b
                                 
                                 }
                              
                              )
                           
                         respectively and computing their union as in Fig. 3b. The case in Fig. 2a usually cannot be inverted: because 
                           
                              c
                           
                        ’s DOFs are locked by two different objects, we cannot invert the dependency, just as we cannot invert a multivariate function. The same applies to the case of Fig. 2c.

Notice that inverting dependencies changes the tolerance zones even though the dimensioning scheme itself is unchanged. This noncommutative nature of dependencies and tolerances provides the potential that we could improve an existing dimensioning scheme to a more optimal one by selectively inverting dependencies. Related techniques will be presented in Section  4 in detail.

While relative dependencies assumed that references had exact positions, in reality the references themselves may have their own tolerance zones. These variations in the references might need to transfer to any target they lock. Given an existing dimensioning scheme, we can define a directed acyclic graph (DAG) of dimension dependencies based on the single and multiple dependencies on the individual primitives. The graph nodes are primitives. Each edge of the graph starts from the references and points to the target. Note that there might be many possible dependency graphs for the same physical part. To begin, we use a dependency graph that captures the intention of tolerance design and that can be easily interpreted during manufacturing. Usually this will have been provided by the designer, e.g. during the design process, but if no design is provided, we can use some simple heuristics to order the dependencies into a graph. In Section  4, the dependency graph will be augmented so that it covers a larger portion of the space of dependency graphs and an optimal dependency graph will be chosen from that subspace.

We show an example for building a dependency graph in Fig. 4
                     . Fig. 4a is a simple rectangular part with three position constraints. One possible dependency graph is that in Fig. 4b. The graph includes single dependency, such as 
                        
                           {
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                           }
                        
                        →
                        
                           
                              
                                 s
                              
                           
                           
                              2
                           
                        
                      and 
                        
                           {
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                           }
                        
                        →
                        
                           
                              
                                 s
                              
                           
                           
                              3
                           
                        
                     , and multiple dependencies such as 
                        
                           {
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 
                                    s
                                 
                              
                              
                                 2
                              
                           
                           }
                        
                        →
                        
                           
                              
                                 p
                              
                           
                           
                              1
                           
                        
                      and 
                        
                           {
                           
                              
                                 
                                    s
                                 
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 
                                    s
                                 
                              
                              
                                 3
                              
                           
                           }
                        
                        →
                        
                           
                              
                                 s
                              
                           
                           
                              4
                           
                        
                     . This graph is acyclic since it has no back edge. There are tolerance chains such as 
                        
                           
                              
                                 s
                              
                           
                           
                              1
                           
                        
                        →
                        
                           
                              
                                 s
                              
                           
                           
                              3
                           
                        
                        →
                        
                           
                              
                                 s
                              
                           
                           
                              4
                           
                        
                     , which means the tolerance zone of 
                        
                           
                              
                                 s
                              
                           
                           
                              4
                           
                        
                      also partially depends on 
                        
                           
                              
                                 s
                              
                           
                           
                              1
                           
                        
                      through 
                        
                           
                              
                                 s
                              
                           
                           
                              3
                           
                        
                     .

We classify dependency chains into one of the two types. If the entire chain consists of single dependencies (e.g. the chain 
                        
                           a
                        
                        →
                        
                           b
                        
                        →
                        
                           c
                        
                      in Fig. 5
                     a), we call it single dependency cascading, while if there are multiple dependencies in the chain (e.g. the chain in 
                        
                           d
                        
                        →
                        
                           b
                        
                        →
                        
                           c
                        
                     
                     Fig. 5b) we call it hybrid dependency cascading.

In single dependency cascading, each primitive is decided by only one reference along the dimension chain.

The basic chain pattern is 
                           
                              
                                 
                                    m
                                 
                              
                              
                                 1
                              
                           
                           →
                           
                              
                                 
                                    m
                                 
                              
                              
                                 2
                              
                           
                           →
                           
                              
                                 
                                    m
                                 
                              
                              
                                 3
                              
                           
                        , where 
                           
                              
                                 
                                    m
                                 
                              
                              
                                 i
                              
                           
                         are primitives. The key problem is how to transfer the tolerance of 
                           
                              
                                 
                                    m
                                 
                              
                              
                                 1
                              
                           
                         to 
                           
                              
                                 
                                    m
                                 
                              
                              
                                 3
                              
                           
                         through 
                           
                              
                                 
                                    m
                                 
                              
                              
                                 2
                              
                           
                        .

Transferring tolerances through a point (see Fig. 6
                        ) is straightforward. For each level, 
                           R
                           
                              (
                              
                                 b
                              
                              )
                           
                         and 
                           R
                           
                              (
                              
                                 c
                              
                              )
                           
                         can be evaluated. Assume that the chain root 
                           
                              a
                           
                         is exact (i.e.  
                           Z
                           
                              (
                              
                                 a
                              
                              )
                           
                           =
                           
                              a
                           
                         and 
                           Z
                           
                              (
                              
                                 b
                              
                              )
                           
                           =
                           R
                           
                              (
                              
                                 b
                              
                              )
                           
                        ). Since the variations of dependencies 
                           
                              {
                              
                                 a
                              
                              }
                           
                           →
                           
                              b
                           
                         and 
                           
                              {
                              
                                 b
                              
                              }
                           
                           →
                           
                              c
                           
                         are independent, 
                           Z
                           
                              (
                              
                                 c
                              
                              )
                           
                         is the cascading of 
                           
                              {
                              
                                 a
                              
                              }
                           
                           →
                           
                              b
                           
                         and 
                           
                              {
                              
                                 b
                              
                              }
                           
                           →
                           
                              c
                           
                        , which is equal to the Minkowski sum of 
                           R
                           
                              (
                              
                                 b
                              
                              )
                           
                         and 
                           R
                           
                              (
                              
                                 c
                              
                              )
                           
                        .

Cascading through a segment is based on cascading through points:


                        
                           Definition 1
                           The tolerance zone of the segment is the convex hull of the tolerance zones of its two endpoints.

Assume that we have a point 
                           
                              c
                           
                         and segment 
                           
                              a
                           
                           
                              b
                           
                        . We map 
                           
                              c
                           
                         to 
                           
                              a
                           
                           
                              b
                           
                         to get a new point 
                           
                              d
                           
                         on the segment. We compute 
                           Z
                           
                              (
                              
                                 d
                              
                              )
                           
                        . Then 
                           Z
                           
                              (
                              
                                 c
                              
                              )
                           
                         is obtained by the Minkowski sum of 
                           Z
                           
                              (
                              
                                 d
                              
                              )
                           
                         and 
                           R
                           
                              (
                              
                                 c
                              
                              ,
                              
                                 {
                                 
                                    d
                                 
                                 }
                              
                              )
                           
                        . Following this idea, we can describe perpendicularity or angularity constraints, as shown in Fig. 7
                        a and b. Note that 
                           Z
                           
                              (
                              
                                 d
                              
                              )
                           
                         can be obtained by interpolating 
                           Z
                           
                              (
                              
                                 a
                              
                              )
                           
                         and 
                           Z
                           
                              (
                              
                                 b
                              
                              )
                           
                        . We use a linear interpolation: 
                           
                              (2)
                              
                                 Z
                                 
                                    (
                                    
                                       d
                                    
                                    )
                                 
                                 =
                                 
                                    Minkowski sum
                                 
                                 
                                    (
                                    Z
                                    
                                       (
                                       
                                          a
                                       
                                       )
                                    
                                    
                                       
                                          
                                             |
                                             
                                                bd
                                             
                                             |
                                          
                                       
                                       
                                          
                                             |
                                             
                                                ab
                                             
                                             |
                                          
                                       
                                    
                                    ,
                                    Z
                                    
                                       (
                                       
                                          b
                                       
                                       )
                                    
                                    
                                       
                                          
                                             |
                                             
                                                ad
                                             
                                             |
                                          
                                       
                                       
                                          
                                             |
                                             
                                                ab
                                             
                                             |
                                          
                                       
                                    
                                    )
                                 
                                 ,
                              
                           
                         where 
                           
                              |
                              ⋅
                              |
                           
                         indicates the segment length, and the scalar multiplication means scaling one tolerance zone along directions starting from the origin and pointing to their vertices.

We want to comment on the definition of the segment and related computations on tolerance zones. Notice that if we use two ends of the segment to define a line  [17], then the tolerance zone of the line will fully cover the tolerance zone of the segment. This means that our definition of the segment tolerance is compatible with that of the line it embeds. Furthermore, since tolerance zones of the two ends are both convex, it is not hard to deduce that the tolerance zone for any segment point is also convex and would also be covered by the zone of the segment if using linear interpolation. Therefore, the tolerance zones of the segment point and the segment are compatible, which provides the theoretical support for our cascading techniques. We can thus cascade the geometric primitives along a dimension chain having single dependencies.

Multiple dependencies are an important part of the dependency DAG. If a multiple dependency can be decoupled into several single dependencies, such as in Fig. 2b, we can apply single dependency cascading on each so that the tolerance can be transferred through those primitives. Otherwise, multiple dependency cascading has to be applied. We examine the case in Fig. 2a since it is the basic building block for this problem. We need some theoretical preparations for deriving this type of cascading.

As we know, for an equation 
                           f
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                           =
                           0
                         and one of its solutions 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ̄
                              
                           
                        , the sensitivity matrix associated with 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ̄
                              
                           
                         is the Jacobian of 
                           f
                         at 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ̄
                              
                           
                        . The bases of the tolerance zone of 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ̄
                              
                           
                         are the column vectors of the sensitivity matrix. We have the following conclusion about the variations of the tolerances: the variations of tolerances could be an explicit scale range or an implicit range decided by some functions. Regardless, the shape, defined by angles of adjacent edges of the tolerance zone, as well as the convexity, is kept. The Appendix provides a related proof.

This conclusion indicates that the tolerance zone of the point 
                           
                              p
                           
                         in (1) is centered at 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 ̄
                              
                           
                         and is spanned by the column vectors of the sensitivity matrix. The variations of 
                           
                              
                                 δ
                              
                              
                                 i
                              
                           
                         only affect the magnitude of the span along the bases. Having this shape consistency allows us to decompose the computation of the tolerance zone of the target in the multiple dependency into a few steps:


                        
                           
                              –
                              compute the target shape, i.e. compute the sensitivity matrix at point 
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          ̄
                                       
                                    
                                 .

compute the transferred tolerance zone in the target by finding the min/max ranges of the reference variations along the bases of the target shape determined earlier.

compute the zone formed by independent variations of the individual references.

zone 
                                    Z
                                    
                                       (
                                       
                                          p
                                       
                                       )
                                    
                                  is the Minkowski sum between the transferred tolerance zone and the zone spanned by independent variations.

We show an example in Fig. 8
                        . Point 
                           
                              c
                           
                         is decided by both 
                           
                              a
                           
                         and 
                           
                              b
                           
                         with the angular dimension constraints 
                           
                              
                                 θ
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 θ
                              
                              
                                 2
                              
                           
                         as in Fig. 8a. The column vectors of the sensitivity matrix indicate the bases are along the directions 
                           
                              
                                 θ
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 θ
                              
                              
                                 2
                              
                           
                        . In Fig. 8b, by estimating the ranges of variations, we know the transferred tolerance zone is the pink parallelogram spanned by two bases. Angles 
                           
                              
                                 θ
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 θ
                              
                              
                                 2
                              
                           
                         also have variations, which spans another (small) parallelogram. We know 
                           Z
                           
                              (
                              
                                 c
                              
                              )
                           
                         is the octagon formed from the Minkowski sum of two parallelograms.

The dependency graph described earlier connects all primitives and represents dependencies of dimensions. For each primitive, its global tolerance zone can be obtained by applying the techniques for computing the relative tolerance zones and those for tolerance zone cascading. However, the dependency graph is not unique with respect to one dimensioning scheme. In this section, we present a technique for finding the dependency graph having minimum tolerances. In order to define it formally, we formulate this problem as an optimization problem.

Given an existing dimensioning diagram, we could decompose it into geometric primitives. Each primitive 
                           
                              m
                           
                         is associated with a global tolerance zone 
                           Z
                           
                              (
                              
                                 m
                              
                              )
                           
                        , which is yielded by a corresponding dependency graph. We define the cost function 
                           E
                         for optimization in terms of the dependency graph 
                           G
                         as 
                           
                              (3)
                              
                                 E
                                 
                                    (
                                    G
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 ⋅
                                 
                                    ‖
                                    Z
                                    
                                       (
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    ‖
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 w
                              
                              
                                 i
                              
                           
                         is the weight associated with the primitive 
                           
                              
                                 
                                    m
                                 
                              
                              
                                 i
                              
                           
                         and where 
                           
                              ‖
                              ⋅
                              ‖
                           
                         means a scaling function (e.g. the zone area) that maps 
                           Z
                           
                              (
                              
                                 
                                    
                                       m
                                    
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         to a scale value. The 
                           
                              
                                 w
                              
                              
                                 i
                              
                           
                         will generally be specified by the engineer to indicate (by assigning larger values to the 
                           
                              
                                 w
                              
                              
                                 i
                              
                           
                        ) which primitives are a priority to minimize.

The optimization on tolerancing is usually motivated by cost requirements, functional requirements, assembly requirements, etc. Here we minimize the tolerance associated with one part. For each primitive on the part, we allow the designer to adjust its weight in optimization. The objective function in (3) has a two-fold meaning. One is that the tolerance is minimized so that the processing cost could be reduced without requiring more precision engineering machines or processes. The other is that designers could reflect the design intentions by adjusting the weights on primitives, so that the functional or assembly requirements could be met.

Though the dependency graph can represent the dependencies between primitives, two factors prevent us from finding an optimal solution on it directly. One is the tolerancing ambiguity. Take Fig. 4b as an example. The chain 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                           →
                           
                              
                                 
                                    s
                                 
                              
                              
                                 2
                              
                           
                           →
                           
                              
                                 
                                    s
                                 
                              
                              
                                 4
                              
                           
                         could be two levels of single dependency cascading or could be a part of a hybrid dependency cascade. The other is reasonableness of the optimized scheme. The solution space of the optimization is the space consisting of all dimensioning schemes. However, many of them are unreasonable in engineering because they are far from an acceptable scheme in practice, though they may seem to have lower cost. Our goal is to find a structure to present schemes that are practical for design and manufacturing without causing any dimensioning ambiguity. Therefore, we build an augmented graph from a given dependency graph, which represents the set of reasonable schemes “nearby” the original dependency graph among the whole solution set. We will also see that any ambiguity is resolved in this new representation. By applying the optimization on this subspace, we will have an optimized and reasonable engineering scheme. The augmentation steps are as follows:


                        
                           
                              –
                              create new nodes to represent multiple dependencies. Let us color the nodes of the original dependency gray and color the new type of nodes red. For a given multiple dependency 
                                    
                                       {
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             2
                                          
                                       
                                       }
                                    
                                    →
                                    
                                       t
                                    
                                 , we first create a red node 
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          12
                                       
                                    
                                 ; then we replace the original edges of the multiple dependency with three directed edges 
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          12
                                       
                                    
                                 , 
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          12
                                       
                                    
                                  and 
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          12
                                       
                                    
                                    
                                       t
                                    
                                 ;

decompose the multiple dependency, if possible, into several single dependencies. If a given multiple dependency 
                                    
                                       {
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             2
                                          
                                       
                                       }
                                    
                                    →
                                    
                                       t
                                    
                                  is decomposable we add two directed edges 
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          1
                                       
                                    
                                    
                                       t
                                    
                                  and 
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          2
                                       
                                    
                                    
                                       t
                                    
                                  into the graph;

add additional edges for inverse dependencies. For a single reference 
                                    
                                       {
                                       
                                          m
                                       
                                       }
                                    
                                    →
                                    
                                       t
                                    
                                 , we add the directed edge 
                                    
                                       t
                                    
                                    
                                       m
                                    
                                 ; for a multiple reference 
                                    
                                       {
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             
                                                m
                                             
                                          
                                          
                                             2
                                          
                                       
                                       }
                                    
                                    →
                                    
                                       t
                                    
                                 , if it is invertible we add two directed edges 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             m
                                          
                                       
                                       
                                          2
                                       
                                    
                                  into the graph;

repeat until we cannot add more node or edge into the graph.

Note that we do not add any duplicated directed edges into the graph. To illustrate the process, consider the part in Fig. 4a; we will create the augmented graph in Fig. 9
                        . First, we create red nodes 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 23
                              
                           
                        , 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 121
                              
                           
                        , 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 122
                              
                           
                         and 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 123
                              
                           
                         representing the multiple dependencies, remove the original edges for those dependencies, and add the associated directed edges for the red nodes accordingly. Second, the multiple dependencies of node 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 23
                              
                           
                         can be decomposed. Two edges 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 2
                              
                           
                           
                              
                                 
                                    s
                                 
                              
                              
                                 4
                              
                           
                         and 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 3
                              
                           
                           
                              
                                 
                                    s
                                 
                              
                              
                                 4
                              
                           
                         should be added (note that these edges existed previously but were removed in the prior step). Third, we invert the dependencies as much as possible. We add edges 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 2
                              
                           
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                        , 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 3
                              
                           
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                        , 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 4
                              
                           
                           
                              
                                 
                                    s
                                 
                              
                              
                                 3
                              
                           
                        , and 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 4
                              
                           
                           
                              
                                 
                                    s
                                 
                              
                              
                                 2
                              
                           
                         into the graph. We repeat all steps. The earlier process caused 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                         to have two edges pointing to it, and we thus create a red node 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 23
                              
                           
                         representing a new multiple dependency.

The goal of the optimization is to find a dependency graph of which the cost function in (3) could be minimized. The input is the augmented graph and the output is a dependency graph which can be translated to a new dimensioning scheme as well as a processing plan.

Since it is a DAG, the dependency graph must have some nodes as roots (no in-edges). For example, 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                         is the sole root for the DAG in Fig. 4b. The root(s) guarantee reachability, meaning that non-root nodes could be reached via the graph that starts from those roots. Our optimization process aims to (1) identify appropriate root nodes, and (2) for those root nodes, determine an order of evaluation of the dependencies. In this way, a dependency DAG is extracted from the augmented graph, and our goal is to find the dependency DAG that minimizes (3).

Assume that a root node(s) has been determined in the augmented graph. The root node is assumed to have an exact dimension, and thus the tolerance zone will only be a point. Given root nodes, a dependency chain can be created and tolerance zones propagated in the augmented graph: gray nodes will be determined by the evaluation methods for primitives. Red nodes can be evaluated (i.e. the gray node the red node points to can be evaluated) only once all gray nodes pointing to it have been evaluated.

To find the optimal dependency graph, we will do the following: 
                           
                              –
                              choose a set of root nodes. Note that a user may also specify the root nodes directly if the situation dictates it (e.g. a fixture point). All other nodes must be reachable from the root(s). We will typically consider using only one or two root nodes, since this is all that is typically allowed in practice. It also makes an exhaustive check feasible. Notice that a trivial “optimal” solution will be to make every node a root node. Our goal is to find an optimal dependency graph, and keeping a minimal set of roots is a part of that;

for the given root node(s), compute the minimized cost for the remaining nodes. This is the major part of the optimization. We attempt to exploit the optimal substructure for this problem. In (3), the cost for node 
                                    
                                       p
                                    
                                  is 
                                    
                                       ‖
                                       
                                          (
                                          Z
                                          
                                             (
                                             
                                                p
                                             
                                             )
                                          
                                          )
                                       
                                       ‖
                                    
                                 . Assume the reference nodes that points to 
                                    
                                       p
                                    
                                  are 
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    1
                                    ≤
                                    i
                                    ≤
                                    n
                                 . We have 
                                    
                                       (4)
                                       
                                          
                                             ‖
                                             
                                                (
                                                Z
                                                
                                                   (
                                                   
                                                      p
                                                   
                                                   )
                                                
                                                )
                                             
                                             ‖
                                          
                                          =
                                          min
                                          
                                             {
                                             
                                                ‖
                                                
                                                   Cascade
                                                
                                                
                                                   (
                                                   Z
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               p
                                                            
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                   ,
                                                   R
                                                   
                                                      (
                                                      
                                                         p
                                                      
                                                      )
                                                   
                                                   )
                                                
                                                ‖
                                             
                                             }
                                          
                                          .
                                       
                                    
                                  If 
                                    Z
                                    
                                       (
                                       
                                          
                                             
                                                p
                                             
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                  also yields the minimal cost for node 
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          i
                                       
                                    
                                 , then formula (4) defines the optimal substructure of the optimization. This means the subproblems are overlapping and therefore we can use dynamic programming to solve this problem efficiently. Whether optimal substructure holds depends on the selection of the scaling function, which will be discussed later;

evaluate the overall cost function; if this is a new minimum, determine the associated dependency graph and store it as the current best graph;

repeat the process by choosing a new root candidate until all candidates have been determined.

Selecting the scaling function is the key problem for our evaluation method. Ideally, this function will be compatible with the optimal substructure in formula (4) so that we can overlap subproblems during optimization. In practice, however, it is usually hard to find such a function which satisfies the requirement strictly. We therefore propose to use the area of the tolerance zone as the scaling function. This selection makes the original optimization becomes an NP hard problem because the optimal substructure is broken and enumerating the solution set is the only way to compute the optimal solution. However, we show that for most cases, this selection adapts well to the optimal substructure criteria.

First note that points form the basis for most of the computations, both as direct feature positions and as segment endpoints. From experimental observation we found that the cascaded tolerance of points tends to approach circularity. This is caused by (1) the convexity of relative tolerance zones and (2) the random distribution of the directions of bases spanning the tolerance zones. We mostly use Minkowski sum to cascade tolerance zones and thus the cascaded zones expand in every direction in a uniform way, and become more circular as the tolerances cascade. We can easily verify that if the tolerance zones are circular, then the optimal structure is always satisfied by using the area as our scaling function. We take the perpendicularity in Fig. 7a as an example. If 
                           Z
                           
                              (
                              
                                 a
                              
                              )
                           
                         and 
                           Z
                           
                              (
                              
                                 b
                              
                              )
                           
                         are both circles, then 
                           Z
                           
                              (
                              
                                 d
                              
                              )
                           
                         is also a circle. If we decrease the size of 
                           Z
                           
                              (
                              
                                 a
                              
                              )
                           
                         or 
                           Z
                           
                              (
                              
                                 b
                              
                              )
                           
                         then 
                           Z
                           
                              (
                              
                                 d
                              
                              )
                           
                         will also be decreased (as well as 
                           Z
                           
                              (
                              
                                 c
                              
                              )
                           
                        ). The inverse of this procedure also holds. As a result, the area tends to be a good scaling function; though not guaranteeing optimality, it is close to doing so, and thus allows us to apply dynamic programming and achieve good results.

We show that our dynamic programming paradigm has a polynomial complexity bounded by 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    4
                                 
                              
                              )
                           
                        , where 
                           n
                         is the number of nodes in the augmented graph. The complexity for choosing root candidates is 
                           
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                           
                        . For evaluating non-root nodes, we use the bottom up scheme. If one node can be evaluated, we compute its tolerance zone and mark it as evaluated. We try to evaluate all non-evaluated nodes. This could be achieved with complexity 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        . Therefore, the complexity of the whole algorithm is bounded by 
                           O
                           
                              (
                              
                                 
                                    
                                       n
                                    
                                    
                                       2
                                    
                                 
                              
                              ⋅
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              )
                           
                           =
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    4
                                 
                              
                              )
                           
                        .

@&#EXPERIMENTS@&#

We first show the tolerance cascading results which are used for estimating the tolerance zone. Then we show an integrated experiment for optimizing a discrete 3D part.

The first experiment demonstrates the result of point cascading as in Fig. 10
                        . Points 
                           
                              a
                           
                        , 
                           
                              b
                           
                         and 
                           
                              c
                           
                         are placed at (0, 0), (2, 2) and (3, 2.5) and 
                           
                              a
                           
                         is considered to be fixed. We assume a relative angular tolerance of 0.02 (about one degree) and a radius tolerance of 
                           0.05
                        . The blue region shows 
                           R
                           
                              (
                              
                                 b
                              
                              ,
                              
                                 {
                                 
                                    a
                                 
                                 }
                              
                              )
                           
                        . The green region shows 
                           R
                           
                              (
                              
                                 c
                              
                              ,
                              
                                 {
                                 
                                    b
                                 
                                 }
                              
                              )
                           
                        . The pink region shows 
                           Z
                           
                              (
                              
                                 c
                              
                              )
                           
                         which is the Minkowski sum of the blue and green regions.

The second experiment shows a result of an angularity formed from two segments as in Fig. 11
                        . We have two segments 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 1
                              
                           
                           
                              
                                 
                                    p
                                 
                              
                              
                                 2
                              
                           
                         and 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                        , with 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 1
                              
                           
                         located on 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                         and an angle specified between the two segments. Their ends are shown in with red dots. If we only consider the relative tolerance for 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 1
                              
                           
                           
                              
                                 
                                    p
                                 
                              
                              
                                 2
                              
                           
                        , then 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                         is the reference. The region of 
                           R
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         is the convex hull of 
                           R
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         and point 
                           R
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    1
                                 
                              
                              )
                           
                        . Now we add the tolerance zone to segment 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                        . Zone 
                           Z
                           
                              (
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         is induced by a reference point at 
                           
                              (
                              0
                              ,
                              −
                              1
                              )
                           
                         with the angle tolerance 0.05 and the radius tolerance 0.05. Zone 
                           Z
                           
                              (
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         is induced by a reference chain 
                           
                              (
                              1
                              ,
                              −
                              1
                              )
                           
                           →
                           
                              (
                              2
                              ,
                              −
                              1
                              )
                           
                           →
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                        , with the same angle and radius tolerances as 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                        . We can see that 
                           Z
                           
                              (
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         is a rectangle while 
                           Z
                           
                              (
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         is an octagon; both are shown in Green. We use the technique in Section  3 to obtain 
                           Z
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         from 
                           Z
                           
                              (
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and 
                           Z
                           
                              (
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        . Then 
                           Z
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         is the Minkowski sum of 
                           R
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         and 
                           Z
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and the tolerance zone for the segment is the convex hull of 
                           Z
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and 
                           Z
                           
                              (
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        , shown as the orange region.

Notice that the tolerance zones for points on a segment, such as 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 3
                              
                           
                        , are fully covered by the tolerance zone of the segment, which indicates that the definition of the tolerance zone for the segment and that for the point on it are compatible with each other.

The third experiment shows the cascading result of the hybrid cascading as in Fig. 12
                        . Point 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                         is at (0, 0) and point 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                         is at (1, 0). We use the distance constraint to decide point 
                           
                              p
                           
                        , where the distance to 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                         is 
                           
                              |
                              
                                 p
                              
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    1
                                 
                              
                              |
                           
                           =
                           0.7
                         and to 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                         is 
                           
                              |
                              
                                 p
                              
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    1
                                 
                              
                              |
                           
                           =
                           0.8
                        . When both 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                         have their own tolerance zones, shown in green, the zone of 
                           
                              p
                           
                         is decided only by 
                           
                              |
                              
                                 p
                              
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    1
                                 
                              
                              |
                           
                         and 
                           
                              |
                              
                                 p
                              
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    2
                                 
                              
                              |
                           
                        . The green region around 
                           
                              p
                           
                         shows the linearized 
                           Z
                           
                              (
                              
                                 p
                              
                              )
                           
                        . We also paint the exact tolerance zone for 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                         in pink and the same zone for 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                         in blue. We can see that our linearization of 
                           Z
                           
                              (
                              
                                 p
                              
                              )
                           
                         covers the intersection of both bands well. In addition, this experiment also shows that the linearization of the tolerance zone on points and segments can be used to construct the curved features such as the circle.

In this part, we show the results of experiments that use our optimization, thereby improving the tolerance for the part and aiding in process planning.

The first experiment shows two different dimensioning schemes to obtain the tolerance of a segment as in Fig. 13
                        . Point 
                           
                              p
                           
                         is placed at (1.0, 1.0). Point 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                         is at (3.0, 1.0) and point 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                         is at (1.0, 2.0), which are two ends of segment 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                        . We set an angular tolerance of 0.02 and dimensioning tolerance of 0.05, with only point 
                           
                              p
                           
                         being fixed. The blue region shows 
                           Z
                           
                              (
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    
                                       q
                                    
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         using the conventional tolerancing scheme that takes the 
                           x
                           −
                           y
                         axis as the references. In contrast, we use two angular references 
                           
                              
                                 
                                    p
                                 
                                 
                                    
                                       
                                          q
                                       
                                    
                                    
                                       1
                                    
                                 
                              
                              
                                 ⃗
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    
                                       
                                          q
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                              
                                 ⃗
                              
                           
                         to decide the segment tolerance zone. The two green regions show the tolerance zones of 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    q
                                 
                              
                              
                                 2
                              
                           
                         while the pink region is the new zone of the segment, which is smaller than the blue one.

Finally, we show an optimization experiment on a 3D part, a part of a gearbox frame. The 3D view, top and front views are shown in Fig. 14
                        . As stated earlier, we are limiting ourselves in this paper to 2D operations, so we will simplify only tolerances on the side view.

We applied two optimizations. In the first one we set a larger angular tolerance for features. The optimization result, after translation into dimensioning scheme is shown in the top of Fig. 15
                        . Segments 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 2
                              
                           
                         and 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 3
                              
                           
                         are picked as roots of the references. Circle features use 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 4
                              
                           
                         as their references. Notice that all dimensions are specified via dimensioning, which is to be expected since the angular tolerance is so high. In the second optimization, we instead set a smaller angular tolerance and weights to give preference to the circle features. The optimization results are shown at the bottom of Fig. 15. Circle centers 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 2
                              
                           
                         are picked as the reference roots. The remaining circle features are associated with 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 1
                              
                           
                         or 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 2
                              
                           
                         via angularity. Segments 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 2
                              
                           
                         and 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 3
                              
                           
                         also depend on 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 2
                              
                           
                        . For simplicity, we omit some trivial dimensions in the diagram. Notice that 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 6
                              
                           
                         depends on 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 5
                              
                           
                         and 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 6
                              
                           
                        , and 
                           
                              
                                 
                                    s
                                 
                              
                              
                                 7
                              
                           
                         depends on 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 4
                              
                           
                         and 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 5
                              
                           
                        . Both of them are not invertible so that their dependencies are kept the same during optimization.

The next goal of our work is to extend our method into 3D space. Here we present an idea on how to achieve this when the real part is represented by three or more different 2D perspective views, as shown in Fig. 14. In different views, though those primitives have different geometric forms, they are not decomposable, i.e., we can always find the geometric forms for each primitive in different views. For example, 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 3
                              
                           
                         is a line in the top view and it is a point in the front view. For different views, we can build different augmentation graphs. We use the same name to mark nodes in different views if they are representing the same primitive, which builds the correlations of features among different views. We associate a weight to the cost function associated with each view and sum them up to obtain a global cost function. This will allow us to compute the optimization on those augmented graphs concurrently so that we will obtain an approximated optimal solution for the 3D part.

@&#DISCUSSION AND CONCLUSION@&#

We have presented a geometric method for tolerance analysis for which the results are represented by geometric shapes. Compared with the conventional tolerance analysis, this method provides the geometric approximation of the tolerance zone as well as numeric boundaries, such as min/max range. Meanwhile, the dimension dependencies are translated to a general topology graph, which provides the structure for optimizing the dimensioning scheme. Though this geometric optimization is an NP hard problem, we propose an approximation method that allows us to build an efficient dynamic programming solver for the optimization. Our method also demonstrates that the LPGUM approach can serve as an effective method for tolerance modeling and analysis. To our knowledge, this is the first more general application, and first implementation, of the LPGUM model.

Because of its general definition, our method brings several advantages to the designer:


                     
                        
                           –
                           the user can adjust the tolerance preferences. The user can give some features high preferences, so that they will be given precedence during the optimization. The direct result is that the dimensions associated with those features are kept as accuracy as possible;

since the dimension scheme will be optimized, our method will generally allow relatively larger individual tolerances while still meeting the same overall tolerance requirements;

we can allow automatic tolerance reallocation when the tolerances of the same features are kept the same. A designer can set a threshold for the tolerances and check if the target tolerance can be meet for requirements. The optimization will reallocate the tolerance distributions by adjusting the dimension dependencies appropriately among primitives.

There are some limitations of our method which provides potential for future research. First, the tolerance zones are represented by polygons by using the first-order approximation of LPGUM. While LPGUM has a number of advantages we exploit, other methods may provide a more accurate representation of the tolerance zone for nonlinear primitives. Second, along the same lines, a wider range of geometric primitives (such as parametric curves) could be included. Our current approach requires most curves to be linearized. Third, simplification of the complicated models might be necessary before optimization. This will shorten the length of the dimension chains so the computing complexity can be reduced. Finally, our examples are demonstrated mainly in 2D space, for which the geometric computations and relations are relatively simple. In the near future, we will attempt to build a direct 3D optimization on parts by extending our current work.

@&#ACKNOWLEDGMENT@&#

The second author’s work was supported in part by NSF Grant IIS-0917286.


                     
                        Theorem 2
                        
                           The variations of tolerances could be an explicit scale range or an implicit range decided by some functions. Under both situations, the shape of the tolerance zone, decided by the angle of adjacent edges, and the convexity of the tolerance zone are the same.
                        

Without loss of generality, we prove that for function 
                        
                           (
                           f
                           
                              (
                              x
                              ,
                              y
                              )
                           
                           ,
                           g
                           
                              (
                              x
                              ,
                              y
                              )
                           
                           )
                        
                      and 
                        f
                        
                           (
                           x
                           
                              (
                              u
                              ,
                              v
                              )
                           
                           ,
                           y
                           )
                        
                        ,
                        g
                        
                           (
                           x
                           
                              (
                              u
                              ,
                              v
                              )
                           
                           ,
                           y
                           )
                        
                     , if 
                        
                           
                              x
                           
                           
                              0
                           
                        
                        =
                        
                           
                              x
                           
                           
                              0
                           
                        
                        
                           (
                           
                              
                                 u
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 v
                              
                              
                                 0
                              
                           
                           )
                        
                     , then the bases of two tolerance zones have the same directions.


                     
                        Proof
                        Follow the linearization model. The tolerance zone for the first function is represented by 
                              
                                 (5)
                                 
                                    
                                       (
                                       
                                          
                                             
                                                f
                                             
                                          
                                          
                                             
                                                g
                                             
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      g
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                       )
                                    
                                    +
                                    
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∂
                                                               f
                                                            
                                                            
                                                               ∂
                                                               x
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∂
                                                               f
                                                            
                                                            
                                                               ∂
                                                               y
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               ∂
                                                               g
                                                            
                                                            
                                                               ∂
                                                               x
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∂
                                                               g
                                                            
                                                            
                                                               ∂
                                                               y
                                                            
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             |
                                          
                                       
                                       
                                          
                                             
                                                x
                                                =
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                             
                                                y
                                                =
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      x
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      y
                                                   
                                                
                                             
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                            The two columns in the variational matrix show the directions of the two bases for expanding the tolerance zone. The tolerance zone for the second function is 
                              
                                 (6)
                                 
                                    
                                       (
                                       
                                          
                                             
                                                f
                                             
                                          
                                          
                                             
                                                g
                                             
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      g
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                       )
                                    
                                    +
                                    
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∂
                                                               f
                                                            
                                                            
                                                               ∂
                                                               u
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∂
                                                               f
                                                            
                                                            
                                                               ∂
                                                               v
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∂
                                                               f
                                                            
                                                            
                                                               ∂
                                                               y
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               ∂
                                                               g
                                                            
                                                            
                                                               ∂
                                                               u
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∂
                                                               g
                                                            
                                                            
                                                               ∂
                                                               v
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ∂
                                                               f
                                                            
                                                            
                                                               ∂
                                                               y
                                                            
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             |
                                          
                                       
                                       
                                          
                                             
                                                u
                                                =
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      v
                                                      =
                                                      
                                                         
                                                            v
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                   
                                                   
                                                      y
                                                      =
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      u
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      v
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      y
                                                   
                                                
                                             
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        

The variation for 
                              f
                            in (5) is 
                              
                                 
                                    
                                       
                                          
                                             ∂
                                             f
                                          
                                          
                                             ∂
                                             x
                                          
                                       
                                       d
                                       x
                                       +
                                       
                                          
                                             ∂
                                             f
                                          
                                          
                                             ∂
                                             y
                                          
                                       
                                       d
                                       y
                                       |
                                    
                                 
                                 
                                    
                                       
                                          x
                                          =
                                          
                                             
                                                x
                                             
                                             
                                                0
                                             
                                          
                                       
                                       
                                          y
                                          =
                                          
                                             
                                                y
                                             
                                             
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                           .

The variation for 
                              f
                            in (6) is 
                              
                                 
                                    
                                       
                                          
                                             ∂
                                             f
                                          
                                          
                                             ∂
                                             u
                                          
                                       
                                       d
                                       u
                                       +
                                       
                                          
                                             ∂
                                             f
                                          
                                          
                                             ∂
                                             v
                                          
                                       
                                       d
                                       v
                                       +
                                       
                                          
                                             ∂
                                             f
                                          
                                          
                                             ∂
                                             y
                                          
                                       
                                       d
                                       y
                                       |
                                    
                                 
                                 
                                    
                                       
                                          u
                                          =
                                          
                                             
                                                u
                                             
                                             
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                v
                                                =
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                             
                                                y
                                                =
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             ∂
                                             f
                                          
                                          
                                             ∂
                                             x
                                          
                                       
                                       
                                          (
                                          
                                             
                                                ∂
                                                d
                                                x
                                             
                                             
                                                ∂
                                                d
                                                u
                                             
                                          
                                          d
                                          u
                                          +
                                          
                                             
                                                ∂
                                                d
                                                x
                                             
                                             
                                                ∂
                                                d
                                                v
                                             
                                          
                                          d
                                          v
                                          ⋅
                                          )
                                       
                                       +
                                       
                                          
                                             ∂
                                             f
                                          
                                          
                                             ∂
                                             y
                                          
                                       
                                       d
                                       y
                                       |
                                    
                                 
                                 
                                    
                                       
                                          u
                                          =
                                          
                                             
                                                u
                                             
                                             
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                v
                                                =
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                             
                                                y
                                                =
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           . Since 
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                              
                              =
                              x
                              
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       0
                                    
                                 
                                 )
                              
                           , we can view 
                              
                                 
                                    ∂
                                    d
                                    x
                                 
                                 
                                    ∂
                                    d
                                    u
                                 
                              
                              d
                              u
                              +
                              
                                 
                                    ∂
                                    d
                                    x
                                 
                                 
                                    ∂
                                    d
                                    v
                                 
                              
                              d
                              v
                            as 
                              
                                 
                                    d
                                 
                                 
                                    x
                                 
                              
                           . This means that the magnitude of the bases can be changed by the composition, but not the direction, and thus the angle of adjacent edges and the convexity of the tolerance zone are the same.

For completeness, we provide an example to illustrate this proof. Let 
                        
                           (
                           f
                           ,
                           g
                           )
                        
                        =
                        
                           (
                           r
                           cos
                           
                              (
                              θ
                              )
                           
                           ,
                           r
                           sin
                           
                              (
                              θ
                              )
                           
                           )
                        
                     . The pink region in Fig. 16
                     -top shows the tolerance zone for 
                        
                           (
                           f
                           ,
                           g
                           )
                        
                     . Let 
                        r
                        =
                        r
                        
                           (
                           cos
                           
                              (
                              u
                              +
                              v
                              )
                           
                           +
                           sin
                           
                              (
                              v
                              )
                           
                           )
                        
                     , 
                        θ
                        =
                        
                           
                              e
                           
                           
                              z
                           
                        
                        +
                        sin
                        
                           (
                           w
                           )
                        
                     , which are both nonlinear functions. The pink region in Fig. 16-bottom shows the tolerance zone for the composite function. The black dots show the function values trying all combinations of 
                        
                           {
                           ±
                           
                              
                                 d
                              
                              
                                 u
                              
                           
                           ,
                           ±
                           
                              
                                 d
                              
                              
                                 v
                              
                           
                           ,
                           ±
                           
                              
                                 d
                              
                              
                                 z
                              
                           
                           ,
                           ±
                           
                              
                                 d
                              
                              
                                 w
                              
                           
                           }
                        
                     . Note that the black arrows are parallel in the two figures, which supports the theorem.

@&#REFERENCES@&#

