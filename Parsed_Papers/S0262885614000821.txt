@&#MAIN-TITLE@&#Password hardened fuzzy vault for fingerprint authentication system

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new fingerprint feature representation.


                        
                        
                           
                           The proposed fingerprint fuzzy vault scheme has three layers of security.


                        
                        
                           
                           The hardened fuzzy vault scheme produces different templates.


                        
                        
                           
                           The hardened fuzzy vault scheme can resolve the problem of cross matching attacks.


                        
                        
                           
                           The results show better user authentication performance with FRR=6.31% at FAR=0%.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Minutiae pairwise extraction

Fingerprint matching

Biocryptosystem

Fuzzy vault

Fingerprint authentication system

@&#ABSTRACT@&#


               
               
                  The present work attempts to build a bio-cryptographic system that combines transformed minutiae pairwise feature and user-generated password fuzzy vault. The fingerprint fuzzy vault is based on a new minutiae pairwise structure, which overcomes the fingerprint feature publication while the secret binary vault code is generated according to the fingerprint fuzzy vault result. The authentication process involves two stages: fuzzy vault matching and secret vault code validation. Our minutiae pairwise transformation produces different templates thus resolving the problem of cross matching attacks in fingerprint fuzzy vault. So, the original fingerprint template cannot be recreated because it is protected by the key generated from the user password. In addition, the proposed bio-cryptographic system ensures an acceptable security level for user authentication.
               
            

@&#INTRODUCTION@&#

The growth in security power has made the biometric cryptosystem methods feasible and a key fundamental security mechanism [1]. These methods use biometrical data to reinforce an existing key or participate in the cryptographic key generation. The main breakthrough came with the seminal paper of Davida et al. [2] which suggests off-line biometric authentication. Biometric template protection can be classified in four categories: systems locking the cryptographic key using a biometric template [3,4,5,7–9,11,12,13], systems using Error Correcting Codes [16–18], systems using biometric template as part of the key [19–21] and finally the systems based on the feature transformation [27,28,30–32,34]. In the present paper, we address a hybrid method for a biometric cryptosystem using the transformed biometric template as part of the key.

The main goal of the present work is to implement a fingerprint minutiae-based authentication system where the minutiae template remains secure during both storage and comparison. In order to achieve this task, we use a biocryptographic constructs which is based on a fingerprint fuzzy vault. This construction involves four steps: (i) a new fingerprint feature representation called minutiae pairwise, (ii) the user fingerprint feature extraction and transformation according to the generated decryption key from the user password, (iii) the fuzzy vault encoding of the transformed fingerprint feature and finally (iv) the corresponding secret binary vault code generation. The proposed password hardened fingerprint vault is a hybrid approach which involves the mixing of salting and fuzzy vault. Hardening provides diversity for fingerprint templates and introduces three layers of security namely “password”, “biometric” and “binary vault code”. Hence our work differs from other works in two ways. First, while the focus for the fuzzy vault scheme is on encrypting the cryptographic key using fingerprint information, in our method the key is generated. This may be done by considering the minutiae bits in the secret binary vault code. Second, the main reason in using a set of minutiae pairwise features with random chaff points is to overcome the minutiae publication. With this construction, it is very difficult for an attacker to compromise a password hardened fuzzy vault. The full implementation of the fuzzy vault scheme, which is based on a fingerprint minutiae pairwise and its binary vault code, ensures a high security level for user authentication by the fuzzy vault matching and its binary vault code validation with a False Reject Rate (FRR)=6.31 at 0% False Acceptance Rate (FAR).

The remaining of the paper is organized as follows. We first present related work on fingerprint cryptosystems and review relevant vault locking and unlocking algorithms. Section 3 provides a new fingerprint feature extraction and the corresponding matching algorithm. The proposed fuzzy vault and its binary code are presented in Section 4. Section 5 reports the experimental results on the public domain fingerprint databases FVC2002-DB1, DB2 and DB3. Section 6 discusses the vulnerability of the proposed hybrid fuzzy vault scheme. Finally, Section 7 concludes the paper.

Over the last two decades a plethora of methods have been explored to build fingerprint fuzzy vault schemes. Early methods to secure biometric features using a fuzzy vault are proposed by Juels and Wattenberg [4]. In their work, Jules et al. propose a fuzzy commitment scheme which does not have the property of order invariance and, as a result, leads to the failure of matching. In [5,8], a different approach was taken by Juels and Sudan who worked on “fuzzy vault construct” to overcome this failure. The proposed fuzzy vault scheme is a cryptographic framework that binds a biometric template and a secret key to build a secure sketch of that template. The fuzzy vault is an error tolerant cryptographic construct based on the set difference metric that was introduced by Juels and Sudan in [5,8]. The basic idea in this approach is that a user U encrypts or locks a secret k using a set of elements S as a key. During enrollment, the set S along with k is used to generate a “Vault”, a structure that holds the secret in an encrypted form. Thereafter, the constructed vault is publicly stored and the key S can be destroyed. Note that the user locks the vault using an unordered fingerprint minutiae set (fuzzy templates).

In the past ten years, several attempts have been made to build secure fingerprint based authentication systems using the constructs described above. These constructions can be classified in two kinds of fingerprint vault. The first construction uses the original fingerprint minutiae information by adding chaff points into the vault. Following the preceding direction, Clancy et al. [6] propose a fingerprint vault to secure the smartcard system. Their construction uses only the location information of the minutiae. The authors create the maximum number of chaff points to construct the vault using polynomial encoding of the secret key and error correction combined with the chaff points. This approach uses more flexible error correcting codes and requires fewer assumptions about the biometric distribution. However, this approach has limitations in that it assumes the fingerprints are pre-aligned.

Later, based on the ideas presented in [5], Uludag et al. [12,13] used minutiae location data only and encoded a Cyclic Redundancy Check (CRC) into the secret polynomial in order to allow for the verification of correctness. To decrease the fuzziness criterion, Uludag and Jain [13] refined this construction by an automatic fingerprint alignment algorithm which uses the locations of the highest curvature of the friction ridge as helper data stored in addition to the fingerprint vault. In their experiment, the FRR was about 15.5% at FAR=0%. Additionally, this method eliminates the need for Reed–Solomon polynomial decoding.

Citing infeasibility of the polynomial reconstruction via cyclic redundancy check correction in the vault scheme proposed by Uludag et al. [12], the authors in [14] used successive Lagrange interpolation steps to substitute for the single decoding step. Following this idea, the fuzzy vault concept using helper data was improved. The authors introduced a modified fuzzy vault scheme that employs both minutiae and orientation-field based helper data. This modified method uses two stages. In the first stage, spurious or unreliable minutiae are filtered by quality indices computed from local properties of the fingerprint image. In the second stage, the fingerprint alignment and minutiae matching method are based on the high curvature point technique. For this task, the authors used the Iterative Closest Point (ICP) algorithm, comparing the final scores with those of the original approach. A better performance was obtained with this improvement thus supporting the fuzzy vault concept usability to lock a key and share it between users. The authors claim that this approach does not reveal any information about the minutiae distribution of the fingerprint. However, a limitation of the approach is the high time complexity during fuzzy vault decoding process.

Recently, Li et al. [23,24] presented a general framework for an alignment-free version of the fuzzy fingerprint vault based on the features deduced from the relative topological structures around the core of the fingerprint and the minutiae. In this method, the authors use ridge information to align template and query fingerprints and exclude the possibility of cross-matching between different vaults constructed with the same finger. Experiments were conducted where both FAR and FRR values were reported and compared to those from [14]. For instance, the authors obtained FRR=4.58% at FAR=0% on the FVC2002 DB2 database using the security strength with 48bits.

In the second construction, the minutiae points from the fingerprint templates are transformed using the password and thereafter chaff points are added into the vault. In order to prevent cross-matching, Nandakumar et al. [15] propose to secure the fingerprint fuzzy vault using minutiae transformation based on the user password. New minutiae points are obtained by classifying minutiae into four classes (quadrants) of the fingerprint image according to 4units of 16bits computed from the user password. The performance of the hardened fuzzy vault is FRR=10% to achieve 0% FAR. But in their approach, the user password can be easily obtained using the original and the transformed fingerprint templates for the same person. Other constructions [25,33] use the transformed space of minutiae points to build the fingerprint fuzzy vault scheme. This transformation protects the original template because it is never used directly. The vault construction proposed in [25] transforms fingerprint minutiae and performs minutiae matching in the transformed form. Hence, the biometric cryptosystem transforms original minutiae features using the parameters provided by the user and then stores the distortion form in the server database. During verification, the system transforms a sample of the user fingerprint using the parameters provided by the user and performs matching with the templates in the transformed form. This approach has shown impressive accuracy and speed. However, as mentioned by the authors, this method is based on a trade-off between security and accuracy. In addition, the limitations of the fuzzy vault framework mentioned in [15] persist if the same fingerprint is reused for constructing different vaults (with different polynomials and random chaff points) [26,29,35]. In other words, fuzzy vault implementations such as those discussed in [15] are broken. To overcome this limitation, some improvements are proposed in [15] to increase the security of the fuzzy vault. This includes using more fingerprints for creating the vault and non-random chaff points using a hexagonal grid. Another construction [33] is based on an implementation of the fuzzy fingerprint vault without additional helper data. Instead, a minutiae matcher algorithm optimizes the number of minutiae correspondences. The results reported by the authors are similar to those in [15] at the cost of a larger template size. In addition, it was claimed that the method was best suited for fingerprint authentication.

We conclude from this section, that the previous approaches use a prealignment step based on some additional data to accurately align the template and query fingerprint images. Moreover, these constructions require the storage of fingerprint reference data (published minutiae features) which increases the intrusion in extracted minutiae features and creates high privacy violation risks.

In order to solve the problem of minutiae feature publication of Nandakumar's approach [15] in our matching algorithm, the fingerprint features are represented by a set of minutiae pairwise. The main idea of our approach is to connect each minutia throughout the links, which are governed by two kinds of distance and orientation. We thus define a new representation for fingerprint features using these links.

Our minutiae-based fingerprint verification system has two phases: enrollment and verification. In the off-line enrollment phase, an enrolling fingerprint image is processed for each user and the features called minutiae pairwise are extracted. In this step, some of the minutiae are detected with the classical features: position and orientation. Based on these features, we construct a minutiae pairwise feature to avoid the alignment operation between the template and query fingerprint images in the verification phase.

Most minutiae extraction algorithms attach the minutia mi
                         to 3 features: (xi
                        , yi
                        ) coordinates and orientation θ
                        
                           i
                        . Let T
                        ={m
                        
                           i
                        , i
                        =1, ⋯, n} be the minutiae list detected from the fingerprint image and assume that the ridges, which are represented as lists of points, are extracted by tracing. Using the minutia mi
                         as the origin and the direction of the minutia as the positive direction for the x-axis of the polar coordinate system, we define the minutiae pairwise 
                           
                              
                                 B
                                 ij
                              
                           
                         structure between minutia mi
                         and nearby minutia mj
                         as follows:
                           
                              (1)
                              
                                 
                                    
                                       B
                                       ij
                                    
                                    =
                                    
                                       
                                          I
                                          
                                             m
                                             i
                                          
                                       
                                       
                                          I
                                          
                                             m
                                             j
                                          
                                       
                                       
                                          
                                             
                                                d
                                                ¯
                                             
                                             ij
                                          
                                       
                                       
                                          
                                             
                                                d
                                                ¯
                                             
                                             ij
                                          
                                       
                                       
                                          ϕ
                                          ij
                                       
                                    
                                 
                              
                           
                        where 
                           
                              I
                              
                                 m
                                 i
                              
                           
                         and 
                           
                              I
                              
                                 m
                                 j
                              
                           
                         are the minutiae indexes, 
                           
                              
                                 
                                    d
                                    ¯
                                 
                                 ij
                              
                           
                         and 
                           
                              
                                 
                                    d
                                    ¯
                                 
                                 ij
                              
                           
                         are the on-ridge and the inter-ridge distances respectively, and ϕ
                        
                           ij
                         is the difference between two directions θ
                        
                           i
                         and θ
                        
                           j
                        . As a result, these features are invariant under a geometric transformation (rotation or translation). Fig. 1
                         illustrates the proposed minutiae pairwise feature. Note that this work does not take into account the minutia type due to the possible instability in the minutiae extraction process.

For our structure, we introduce two new features: the on-ridge and the inter-ridge distances (see Fig. 1). Before computing these distances, we first transform the fingerprint image into plate – model – fingerprint as illustrated in Fig. 2
                        . The basic idea of this transformation, which is inspired from the ridge line following algorithm on gray scale image proposed in [10], is to translate all pixels in the plate-model axis according to the thinned fingerprint image.

To use more ridge pattern topology for matching, the ridge curvature is considered in our fingerprint feature extraction. The ridge curvature is represented by the on-ridge distance 
                           
                              
                                 
                                    d
                                    ¯
                                 
                                 ij
                              
                           
                        . This feature is computed as the distance from the projection of minutia mi
                         on the ridge of minutia mj
                         to the minutia mj
                        . As shown in Fig. 3
                        , this distance may be different even though the ridge length values are similar. This distance is signed according to the minutiae pair orientations θ
                        
                           i
                         and θ
                        
                           j
                        . Using the gradient-based method introduced by Mei et al. [37] and our ridge orientation convention introduced in [36], this distance may take positive or negative values according to the following constraints:
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         d
                                                         ¯
                                                      
                                                      ij
                                                   
                                                
                                                ≥
                                                0
                                             
                                             
                                                if
                                                
                                                
                                                   θ
                                                   i
                                                
                                                ,
                                                
                                                   θ
                                                   j
                                                
                                                ∈
                                                
                                                   
                                                      −
                                                      
                                                         π
                                                         2
                                                      
                                                      ;
                                                      
                                                         π
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         d
                                                         ¯
                                                      
                                                      ij
                                                   
                                                
                                                <
                                                0
                                             
                                             
                                                otherwise
                                             
                                          
                                       
                                    
                                    
                                    .
                                 
                              
                           
                        
                     

On the other hand, the inter-ridge distance 
                           
                              
                                 
                                    d
                                    ¯
                                 
                                 ij
                              
                           
                         is measured as the distance between minutia mi
                         and its projection on the ridge containing minutia mj
                        . This distance is signed according to whether the rotation is clockwise or counterclockwise (Fig. 4
                        ). Note that our representation is different from the one proposed in [31], where for the same minutiae pairwise, two pair-polar coordinate vectors Mij
                         and Mji
                         are obtained according to the minutia which serves as the reference (center of the polar coordinate system). In our representation, the minutiae pairwise feature is unchanged because it is calculated with respect to the minimal inter-ridge distance (
                           
                              min
                              
                                 
                                    
                                       
                                          d
                                          ¯
                                       
                                       ij
                                    
                                 
                                 
                                    d
                                    ji
                                 
                              
                           
                        ) as illustrated in Fig. 5
                        . In addition, our inter-ridge distance is signed.

The previous representation describes each minutia point in terms of its relationship to other neighboring minutiae where the two signed distances so defined allow for the classification of the minutiae pairwise into four classes. Hence, the proposed classification reduces the time complexity of the fingerprint matching step by comparing only minutiae pairwise from the same class. Moreover, this classification reduces the decoding complexity by eliminating most of the chaff pairwise points from the unlocking set. In contrast, there is no such this notion of minutiae feature classification in similar works. Finally, the minutiae pairwise are represented by the minutiae pairwise map (Not an oriented graph).

Our minutiae pairwise pattern matching consists of two steps that are minutiae pairwise pairing and matching score computation. Suppose that T and Q are the template and the query fingerprints, respectively. Their minutiae pairwise sets are:
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                B
                                                T
                                             
                                             =
                                             
                                                
                                                   
                                                      B
                                                      ij
                                                      T
                                                   
                                                   |
                                                   
                                                   1
                                                   ≤
                                                   i
                                                   ≤
                                                   p
                                                   ,
                                                   
                                                   1
                                                   ≤
                                                   j
                                                   ≤
                                                   p
                                                   ,
                                                   
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                B
                                                Q
                                             
                                             =
                                             
                                                
                                                   
                                                      B
                                                      kl
                                                      Q
                                                   
                                                   |
                                                   
                                                   1
                                                   ≤
                                                   k
                                                   ≤
                                                   q
                                                   ,
                                                   
                                                   1
                                                   ≤
                                                   l
                                                   ≤
                                                   q
                                                   ,
                                                   
                                                   k
                                                   ≠
                                                   l
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

A corresponding list, CList, is used to store each set of matched minutiae pairwise. For each minutiae pairwise 
                           
                              
                                 B
                                 ij
                                 T
                              
                              ∈
                              
                                 B
                                 T
                              
                           
                        , the algorithm repeatedly selects a candidate minutiae pairwise 
                           
                              
                                 B
                                 kl
                                 Q
                              
                              ∈
                              
                                 B
                                 Q
                              
                           
                        , which it matches with 
                           
                              
                                 B
                                 ij
                                 T
                              
                           
                        , until no more minutiae pairwise from 
                           
                              
                                 B
                                 T
                              
                           
                         can be matched. Our matching algorithm will tolerate a certain amount of distortion to accommodate for the often low-quality fingerprint images. This is achieved through a set of tolerance parameters that are used to identify matches within a certain similarity threshold. There are two types of tolerance values required in our approach. The first type includes local spatial difference (
                           
                              T
                              
                                 d
                                 ¯
                              
                           
                         and 
                           
                              T
                              
                                 d
                                 ¯
                              
                           
                        ) and angle (T
                        
                           ϕ
                        ) tolerances. The second type corresponds to the global distance tolerance (
                           
                              
                                 T
                                 B
                              
                           
                        ). The proposed algorithm decides that two minutiae pairwise match if the following criterion is met:
                           
                              (2)
                              
                                 
                                    ΔB
                                    =
                                    
                                       
                                          α
                                          
                                             Δ
                                             
                                                d
                                                ¯
                                             
                                          
                                          +
                                          β
                                          
                                             Δ
                                             
                                                d
                                                ¯
                                             
                                          
                                          +
                                          γ
                                          
                                             Δ
                                             ϕ
                                          
                                       
                                    
                                    ≤
                                    
                                       T
                                       B
                                    
                                 
                              
                           
                        where 
                           
                              Δ
                              
                                 d
                                 ¯
                              
                           
                        , 
                           
                              Δ
                              
                                 d
                                 ¯
                              
                           
                         and Δ
                           ϕ
                         are, respectively, the absolute value of the difference between the on-ridge distances, the inter-ridge distance and the orientation difference tolerances. They are defined as follows:
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   Δ
                                                   
                                                      d
                                                      ¯
                                                   
                                                
                                                =
                                                |
                                                
                                                   
                                                      
                                                         d
                                                         ¯
                                                      
                                                      ij
                                                   
                                                
                                                −
                                                
                                                   
                                                      
                                                         d
                                                         ¯
                                                      
                                                      kl
                                                   
                                                
                                                |
                                             
                                             
                                                ≤
                                                
                                                   T
                                                   
                                                      d
                                                      ¯
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   Δ
                                                   
                                                      d
                                                      ¯
                                                   
                                                
                                                =
                                                |
                                                
                                                   
                                                      
                                                         d
                                                         ¯
                                                      
                                                      ij
                                                   
                                                
                                                −
                                                
                                                   
                                                      
                                                         d
                                                         ¯
                                                      
                                                      kl
                                                   
                                                
                                                |
                                             
                                             
                                                ≤
                                                
                                                   T
                                                   
                                                      d
                                                      ¯
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   Δ
                                                   ϕ
                                                
                                                =
                                                |
                                                
                                                   ϕ
                                                   ij
                                                
                                                −
                                                
                                                   ϕ
                                                   kl
                                                
                                                |
                                             
                                             
                                                ≤
                                                
                                                   T
                                                   ϕ
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The parameters α, β and γ are set as α
                        =1, β
                        =0.5 and γ
                        =0.2, thus favoring the choice of minutiae pairwise with larger on-ridge similarities. This may be explained by the fact that inter-ridge distance and orientation are less affected by non-linear deformation in a local region due to the feature extraction error and distortion. This is illustrated by the blue thick lines in Fig. 6
                        . As may be seen, even though the inter-ridge similarity is the same on both fingerprints. The same cannot be said of the on-ridge distance. Therefore, the small difference between the minutiae pairwise in the on-ridge feature correspondence naturally does not serve as a measure of the reliability of the correspondence.

A CList consists of minutiae pairwise and their matched minutiae pairwise. The CList is an example of a model of interaction between two identical types of fingerprint features. As a result, it can be studied with the theory of bipartite graphs. So, a CList is an ordered triple 
                           
                              G
                              =
                              
                                 
                                    
                                       B
                                       T
                                    
                                    ,
                                    
                                    
                                       B
                                       Q
                                    
                                    ,
                                    
                                    E
                                 
                              
                           
                         such that 
                           
                              E
                              ⊆
                              
                                 
                                    
                                       
                                          B
                                          ij
                                          T
                                       
                                       
                                          B
                                          kl
                                          Q
                                       
                                    
                                    |
                                    
                                    
                                       B
                                       ij
                                       T
                                    
                                    ∈
                                    
                                       B
                                       T
                                    
                                    ,
                                    
                                       B
                                       kl
                                       Q
                                    
                                    ∈
                                    
                                       B
                                       Q
                                    
                                 
                              
                           
                        . The vertices of G are elements of 
                           
                              
                                 B
                                 T
                              
                              ∪
                              
                                 B
                                 Q
                              
                           
                        . The edges of G are elements of E.
                           Definition 1
                           (Unsaturated edge) Let 
                              
                                 
                                    M
                                    =
                                    
                                       
                                          
                                             
                                                B
                                                ij
                                                T
                                             
                                             
                                                B
                                                kl
                                                Q
                                             
                                          
                                          |
                                          
                                             B
                                             ij
                                             T
                                          
                                          ∈
                                          
                                             B
                                             T
                                          
                                          ,
                                          
                                             B
                                             kl
                                             Q
                                          
                                          ∈
                                          
                                             B
                                             Q
                                          
                                       
                                    
                                 
                               
                              be a matching of a bipartite graph G and let 
                              
                                 
                                    
                                       
                                          B
                                          
                                             
                                                i
                                                1
                                             
                                             
                                                j
                                                1
                                             
                                          
                                          T
                                       
                                       
                                          B
                                          
                                             
                                                k
                                                1
                                             
                                             
                                                l
                                                1
                                             
                                          
                                          Q
                                       
                                    
                                    ∈
                                    E
                                 
                              . Then 
                              
                                 
                                    
                                       
                                          B
                                          
                                             
                                                i
                                                1
                                             
                                             
                                                j
                                                1
                                             
                                          
                                          T
                                       
                                       
                                          B
                                          
                                             
                                                k
                                                1
                                             
                                             
                                                l
                                                1
                                             
                                          
                                          Q
                                       
                                    
                                 
                               
                              is called unsaturated edge by a matching M if one of the following conditions is satisfied:
                                 
                                    (4)
                                    
                                       
                                          
                                             m
                                             
                                                i
                                                1
                                             
                                          
                                          =
                                          
                                             m
                                             i
                                          
                                          
                                          and
                                          
                                          
                                             m
                                             
                                                k
                                                1
                                             
                                          
                                          ≠
                                          
                                             m
                                             k
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (5)
                                    
                                       
                                          
                                             m
                                             
                                                i
                                                1
                                             
                                          
                                          =
                                          
                                             m
                                             i
                                          
                                          
                                          and
                                          
                                          
                                             m
                                             
                                                j
                                                1
                                             
                                          
                                          ≠
                                          
                                             m
                                             j
                                          
                                          
                                          and
                                          
                                          
                                             m
                                             
                                                l
                                                1
                                             
                                          
                                          =
                                          
                                             m
                                             l
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (6)
                                    
                                       
                                          
                                             m
                                             
                                                j
                                                1
                                             
                                          
                                          =
                                          
                                             m
                                             j
                                          
                                          
                                          and
                                          
                                          
                                             m
                                             
                                                l
                                                1
                                             
                                          
                                          ≠
                                          
                                             m
                                             l
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (7)
                                    
                                       
                                          
                                             m
                                             
                                                j
                                                1
                                             
                                          
                                          =
                                          
                                             m
                                             j
                                          
                                          
                                          and
                                          
                                          
                                             m
                                             
                                                i
                                                1
                                             
                                          
                                          ≠
                                          
                                             m
                                             i
                                          
                                          
                                          and
                                          
                                          
                                             m
                                             
                                                k
                                                1
                                             
                                          
                                          =
                                          
                                             m
                                             k
                                          
                                          .
                                       
                                    
                                 
                              
                           

(Unmatched minutiae pairwise) Let 
                              
                                 
                                    
                                       
                                          B
                                          
                                             
                                                i
                                                1
                                             
                                             
                                                j
                                                1
                                             
                                          
                                          T
                                       
                                       
                                          B
                                          
                                             
                                                k
                                                1
                                             
                                             
                                                l
                                                1
                                             
                                          
                                          Q
                                       
                                    
                                    ∈
                                    E
                                 
                               
                              be an unsaturated edge by a matching M. Then the minutiae pairwise 
                              
                                 
                                    
                                       B
                                       
                                          
                                             i
                                             1
                                          
                                          
                                             j
                                             1
                                          
                                       
                                       T
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       B
                                       
                                          
                                             k
                                             1
                                          
                                          
                                             l
                                             1
                                          
                                       
                                       T
                                    
                                 
                               
                              are called unmatched minutiae pairwise and matched otherwise.

Using the bipartite graph representation, our fingerprint matching algorithm allows to find a maximal oriented graph (a subgraph of the minutiae pairwise map), which is obtained by the maximal connected components C
                        
                           max
                        
                        
                           T
                        
                        ⊆
                        G
                        
                           T
                         of the template fingerprint, where
                           
                              (8)
                              
                                 
                                    
                                       C
                                       max
                                       T
                                    
                                    =
                                    
                                       
                                          
                                             C
                                             k
                                             T
                                          
                                          ⊆
                                          
                                             G
                                             T
                                          
                                          |
                                          
                                          ∀
                                          
                                             C
                                             i
                                             T
                                          
                                          ⊆
                                          
                                             G
                                             T
                                          
                                          ,
                                          
                                          i
                                          ≠
                                          j
                                          ,
                                          
                                          |
                                          
                                             C
                                             i
                                             T
                                          
                                          |
                                          ≤
                                          |
                                          
                                             C
                                             j
                                             T
                                          
                                          |
                                       
                                    
                                 
                              
                           
                        and its corresponding maximal connected components C
                        
                           max
                        
                        
                           Q
                        
                        ⊆
                        G
                        
                           Q
                         from the query fingerprint, where
                           
                              (9)
                              
                                 
                                    
                                       C
                                       max
                                       Q
                                    
                                    =
                                    
                                       
                                          
                                             C
                                             k
                                             Q
                                          
                                          ⊆
                                          
                                             G
                                             Q
                                          
                                          |
                                          
                                          ∀
                                          
                                             C
                                             l
                                             Q
                                          
                                          ⊆
                                          
                                             G
                                             Q
                                          
                                          ,
                                          
                                          l
                                          ≠
                                          k
                                          ,
                                          
                                          |
                                          
                                             C
                                             l
                                             Q
                                          
                                          |
                                          ≤
                                          |
                                          
                                             C
                                             k
                                             Q
                                          
                                          |
                                       
                                    
                                 
                              
                           
                        such that
                           
                              (10)
                              
                                 
                                    
                                       
                                          C
                                          max
                                          Q
                                       
                                    
                                    =
                                    
                                       
                                          C
                                          max
                                          T
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The connected component computation uses a breadth-first search (BFS) algorithm to detect the matched minutiae pairwise incrementally. The computation finds a maximal set of minutiae pairwise disjoint augmenting paths. This set is computed by depth-first search after eliminating each iteration unmatched minutiae pairwise according to Definition 2. As shown in Fig. 7
                        , starting from M
                        ={{〈m
                        1, m
                        3〉, 〈m
                        1′, m
                        4′〉}} (iteration 1), the elimination process suppresses all unsaturated edges (Red edges). For example, the correspondence {〈m
                        2, m
                        3〉, 〈m
                        1′, m
                        2′〉} (thick red edge) satisfies conditions 6 and 7 because the minutia m3
                         corresponds to the minutia m
                        4′ in the initial matching M and cannot correspond to the minutia m
                        2′ at the same time. Additionally, the minutia m2
                         cannot correspond to the minutia m
                        1′ because this last minutia corresponds to the minutia m1
                         in the matching M.

Once an augmenting path that involves one of the minutiae pairwise in E is found, the depth first search is continued from the next starting minutiae pairwise. Every path found this way is used to enlarge the fingerprint matching. A fingerprint matching is of maximum cardinality if and only if, there is no augmenting path with respect to the connected component computation. In Fig. 7 a possible maximal matching example of a simple fingerprint bipartite graph is presented. It should be noted that a maximum matching of a given bipartite graph is not unique.

The cardinality of the maximal connected components (|C
                        
                           max
                        
                        
                           Q
                        |) is used to compute our matching score for the minutiae pairwise features. This score uses a conventional way to calculate the matching score introduced in [22] and which is based on the following formula:
                           
                              (11)
                              
                                 
                                    Sc
                                    =
                                    
                                       
                                          
                                             
                                                C
                                                max
                                                Q
                                             
                                          
                                          2
                                       
                                       
                                          
                                             N
                                             T
                                          
                                          ×
                                          
                                             N
                                             Q
                                          
                                       
                                    
                                 
                              
                           
                        where NT
                         and NQ
                         represent the numbers of minutiae in the template and the query minutiae sets, respectively.

The design of our fingerprint fuzzy vault is explained in this section. As any biometric authentication system, the proposed fuzzy fingerprint scheme encompasses both enrollment and authentication stages (vault locking and vault unlocking) as shown in Fig. 8
                     .

To overcome the limitations of classical fuzzy vault scheme, generated code from the user password is used as an additional fingerprint feature transformation in the user authentication stage. Here, we present the details of the proposed fingerprint fuzzy vault coding scheme. This scheme is based on minutiae pairwise features and is hardened using the generated code from the user password. Therefore, we propose a fuzzy vault implementation based on fingerprint minutiae pairwise features and we describe the secret vault code generated from the fuzzy scheme.

The fuzzy vault encoding process is shown in the diagram of Fig. 8(a). It consists of the following seven steps.
                           
                              1.
                              Assume that the generated code UE
                                  from the user password Up
                                  is of length 256bits. Divide this generated code into fi
                                  units of 8bits each.

The minutiae pairwise features are subjected to simple permutations. A minutia pairwise point in the original template maps to a minutia pairwise in the transformation template according to the password-based approach. The new points are obtained by transforming the template minutiae pairwise 
                                    
                                       
                                          B
                                          T
                                       
                                    
                                  according to the first unit f
                                 0. This transformation uses 4 classes by grouping each 2bits of the unit f
                                 0 as illustrated in Fig. 9(a). Using these 4 classes, we permute the 4 quadrants of the template minutiae pairwise such that the on-ridge and the inter-ridge pairs change sign: 
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   d
                                                   ¯
                                                
                                                ij
                                             
                                          
                                          ,
                                          −
                                          
                                             
                                                
                                                   d
                                                   ¯
                                                
                                                ij
                                             
                                          
                                       
                                    
                                 , 
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   d
                                                   ¯
                                                
                                                ij
                                             
                                          
                                          ,
                                          +
                                          
                                             
                                                
                                                   d
                                                   ¯
                                                
                                                ij
                                             
                                          
                                       
                                    
                                 , 
                                    
                                       
                                          +
                                          
                                             
                                                
                                                   d
                                                   ¯
                                                
                                                ij
                                             
                                          
                                          ,
                                          −
                                          
                                             d
                                             ij
                                          
                                       
                                    
                                 , and 
                                    
                                       
                                          +
                                          
                                             
                                                
                                                   d
                                                   ¯
                                                
                                                ij
                                             
                                          
                                          ,
                                          +
                                          
                                             
                                                
                                                   d
                                                   ¯
                                                
                                                ij
                                             
                                          
                                       
                                    
                                 . Using f
                                 0
                                 =4312, the sample minutiae pairwise points (polar representation) from each quadrant are shown in Fig. 9(b) before and after transformation. This transformation yields a uniform nature of fingerprint feature distribution. As a result, the transformation plays the role of producing different fingerprint templates for different applications. This can resolve the problem of cross matching attacks in fuzzy vault and during the authentication process (vault matching) since the server uses the transformed minutiae pairwise and never sees the original template features. This transformation constitutes the second layer of our fingerprint template security.

Generate 1024 random minutiae pairwise chaff points, which constitute a minutia pairwise set along with the real minutiae pairwise. In order to ensure genuine minutiae pairwise and feature-undistinguishable generated points within the vault, we use the same on-ridge and inter-ridge values with different signs. Fig. 10
                                  illustrates an example of minutiae pairwise chaff point generation. The minutiae pairwise are based on 256 minutiae indexes (
                                    
                                       I
                                       
                                          m
                                          i
                                       
                                    
                                 ).

Hiding the genuine minutiae pairwise securing the user fingerprint template. This is achieved by replacing randomly some minutiae pairwise chaff points with all the genuine minutiae pairwise. This replacement constitutes the fingerprint vault VE
                                 . In addition, the index of the genuine minutiae 
                                    
                                       I
                                       
                                          m
                                          i
                                       
                                    
                                  in the 256 minutiae chaff points allows for the generation of the binary vault code CE
                                  of the fingerprint fuzzy vault. This, in turns, enables the construction of the different minutiae pairwise fuzzy vault of the same person and it avoids a brute force attack if an attacker succeeds in overlapping two different versions of the fuzzy vault of the same person. On the other hand, the proposed generation of minutiae pairwise chaff points is not random and so the fuzzy vault is not prone to the cross-matching of templates across various databases. In the proposed approach, we use all genuine minutiae to generate a secret binary code in contrast to the approach in [31] that uses only some minutiae pairwise according to a specified threshold. If a fingerprint image enrollment process fails to generate at least some of the minutiae pairwise, their approach fails to identify the user because the extracted minutiae pairwise are ineligible.

Generate the binary fixed-length vault code CE
                                  of size 2048bits (8×256) as shown in Fig. 11
                                 . Hence each index of the genuine minutiae pairwise is encoded in the vault code with random unit fi
                                  for i
                                 =1…31. However, the other minutiae pairwise are encoded with different random units.

After the binary length-fixed vault code CE
                                  is obtained, the code is encrypted with the encryption key UE
                                  generated from the user's password.

Finally, the user identity, the vault and its encrypted code ([U
                                 
                                    I
                                 , V
                                 
                                    E
                                 , CE]) are stored in the database server. This will decrease the likelihood that an attacker can spoof our construction by simply trying to authenticate by replacing minutiae pairwise chaff points. The binary vault code checking overcomes the limitations of minutiae chaff point substitution by an attacker. This prevents both the original user and the attacker to be successfully authenticated using the same identity (same protected fingerprint template). Thus, an attacker can deliberately increase the false accept rate of the system.

The overall flowchart of the vault unlocking process, which is illustrated in Fig. 8(b), has six steps which we detail below.
                           
                              1.
                              During the authentication process, the fingerprint query and the user password are first obtained. Using this input, we extract and transform the minutiae pairwise query based on the generated code from the password provided by the user. We then obtain the transformed minutiae pairwise 
                                    
                                       
                                          B
                                          f
                                          Q
                                       
                                    
                                  and the decryption key UD
                                 .

The minutiae pairwise matcher is applied in order to find all correspondences (all maximal connected components) between the transformed query minutiae pairwise 
                                    
                                       
                                          B
                                          f
                                          Q
                                       
                                    
                                  and the vault VE
                                 .

From each maximally connected component computes the corresponding vault code using the |f
                                 
                                    i
                                 | units generated from the decryption key UD
                                  according to the whole matched minutiae index. As a result, some vault codes 
                                    
                                       C
                                       
                                          D
                                          i
                                       
                                    
                                  are obtained.

Decrypting the binary vault code CE
                                  using the decryption key UD
                                 . The procedure avoids an access attempt to the vault code by an attacker without knowledge of the user password and a modification of the vault code.

Match the vault code 
                                    
                                       C
                                       
                                          D
                                          i
                                       
                                    
                                  with the decrypted vault code CE
                                 . The matching between the vault codes is based on the Hamming distance between their fi
                                  units. If we obtain a match of 9 fi
                                  units, the fingerprint vault is unlocked. If not, the next vault code 
                                    
                                       C
                                       
                                          D
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                    
                                  is considered and so on.

Finally, if the fingerprint vault is unlocked then the user is authenticated by the system.

@&#EXPERIMENTAL RESULTS@&#

In this section, the proposed fuzzy vault for fingerprint authentication is evaluated. First we test the proposed fingerprint matching then we report the fingerprint vault evaluation results.

The evaluation process is started by testing the proposed matching algorithm using the public domain fingerprint database FVC2002-DB1 [38]. Subsequently, minutiae points are extracted from fingerprint images using the approach proposed by Hong et al. [39].

To highlight the impact of the on-ridge and inter-ridge distances of the minutiae pairwise extraction on the fingerprint matching accuracy, we vary both distances one at a time and compute the corresponding false accept rate (FAR) and false reject rate (FRR). The obtained results are reported in Fig. 12(a and b) while the corresponding equal error rate (EER) is plotted in Fig. 12(c) with the best configuration for the two distances. As may be seen from the figure, the minutiae pairwise extraction using an on-ridge 
                        
                           d
                           ¯
                        
                      value of 120 and an inter-ridge 
                        
                           d
                           ¯
                        
                      value of 55 produces the most effective results. Due to fingerprint deformation, the number of inter-minutiae ridge count between two minutiae should not exceed two ridges (
                        
                           
                              
                                 
                                    d
                                    ¯
                                 
                                 ij
                              
                           
                           ≤
                           55
                        
                      pixels). We find that the choices α
                     =1, β
                     =0.5, γ
                     =0.2 and 
                        
                           
                              T
                              B
                           
                           ≤
                           10
                        
                      give the best performance (EER=3.82%), a result similar to the one obtained in [31] (EER=3%) using a number of pair-matched points larger than or equal to 5. Note that this number is insufficient to decide if two fingerprint images match because 4 minutiae are needed to construct 12 different minutiae pairwise from 12 pair-polar coordinates. However, in our approach, the template and query fingerprints match if the number of minutiae points is greater than or equal to 9.

Note that EER values of approximately 16%, 4.25% and 3.5% were reported in [14,32,25] respectively. On the other hand, the matching algorithm based on the proposed fingerprint vault scheme yields an EER value of 4.09%. This value is even lower than those reported in [25,31] (EER=9% and 6%). Hence in our proposed fuzzy vault scheme, the genuine points are well separated from minutiae pairwise chaff points. Also, the filtering of minutiae pairwise chaff points from our vault is more robust since the minutiae chaff points from the vault in [25,31] will also probably match with some genuine points. Note that this difference in EER (4.09−3.82=0.27%) is eliminated in the binary vault code match step. Fig. 13
                      illustrates an example of the proposed minutiae pairwise matching algorithm behavior with the fingerprint vault. As may be seen, the matching algorithm finds the corresponding minutiae pairwise even in the presence of minutiae pairwise chaff points in the vault. Generally, our fingerprint authentication system achieves an FRR approximately equal to 0% FAR from 3 matched minutiae pairwise between two fingerprint images (maximal 6 minutiae). Another advantage of the proposed fingerprint vault implementation is that a considerable number of minutiae pairwise chaff points is filtered out around 75% per unlocking operation for the fuzzy vault.

The FRR comparison at 0% FAR between our fuzzy vault implementation and some published works on the same database is reported in Table 1
                     . It can be seen that the FRR of the proposed algorithm over this fingerprint database is 6.31%, whereas for the same database, the FRR reported in [14] is 7% using locations of high curvature points as the public reference information for the pre-aligned template. However, the implementation proposed in [40] achieves a FRR of approximately 27.5% at a FAR of 0%, when the matching threshold is set to 9 minutiae. In Table 2
                     , we also compare the proposed approach with other existing similar fuzzy vault schemes in terms of EER over public databases. Note that the EER values are based on all 2800 genuine matches for each database. The EER in [31] of the transformed fingerprint templates of FVC2002 DB1 DB2 and DB3 are 9%, 6% and 27%, respectively, while the EER in [34] are 3.5%, 5% and 7.5% respectively. The proposed approach performs best over the database FVC2002 DB2, for which the best EER is 2.71%. For all approaches, the recognition performance on DB1 is a little poorer than on DB2, but it is much worse than the recognition performance (EER=31%) on the data set DB3. This occurs because our on-ridge distance calculation fails due to the image quality of this database where several ridges are even incomplete and discontinuous. Moreover, the minutia number is fewer than for the DB1 and DB2 databases.

Finally, we discuss the computational aspect of our fingerprint authentication system. All experiments are conducted on a computer equipped with an Intel Core2Duo 2GHz CPU running Matlab 7.3 (R2006b License Number 329986). As shown in Table 3
                     , the average vault locking and unlocking times on DB1, indicate that our system does not take too long to authenticate a user by the server (about 2s), whereas for the same database, the time in Nandakumar et al. [14] takes approximately 8s.

This section examines the proposed fuzzy vault scheme vulnerabilities, which may be assessed in terms of the computational effort necessary to break the biometric cryptosystem.

First, we assume that the attacker only guesses the original fingerprint minutiae information from the stored vault in the server. In system, the user is identified by using all combinations of 9 minutiae pairwise points in the vault according to the proposed matching algorithm (find the maximal component). In addition, the number of genuine and chaff minutiae pairwise points in the vault are generally 200 and 824 (200 genuine points replace 200 from 1024 chaff points) respectively. So, the strength of the brute force attack on this system can be computed as the total number of possible combinations 
                        
                           
                              
                                 
                                    
                                       824
                                    
                                 
                                 
                                    
                                       9
                                    
                                 
                              
                           
                           =
                           4.61
                           ×
                           
                              10
                              20
                           
                        
                      and among these combinations, 
                        
                           
                              
                                 
                                    
                                       200
                                    
                                 
                                 
                                    
                                       9
                                    
                                 
                              
                           
                           =
                           1.17
                           ×
                           
                              10
                              15
                           
                        
                      combinations will successfully decode only the position of the genuine minutiae pairwise points in the binary vault code. Without the decryption key E generated from the user's password, the attacker is unlikely to unlock our fingerprint binary vault code CE
                     .

Second, a direct attack on the binary vault code CE
                      aims decrypting the code and finding a binary feature code 
                        
                           C
                           
                              D
                              i
                           
                        
                      subject to a Hamming distance between f
                     
                        i
                     
                     
                        D
                      and f
                     
                        i
                     
                     
                        E
                      units that should be equal to 9 fi
                      units. In this case, two attacks are probable. Suppose an attacker knows the size of fi
                      size (8bits), which constitutes the binary vault codes. The strength of the brute force attack in this scenario is 
                        
                           
                              
                                 
                                    
                                       256
                                    
                                 
                                 
                                    
                                       9
                                    
                                 
                              
                           
                           =
                           1.12
                           ×
                           
                              10
                              16
                           
                        
                      combinations and among these combinations, 
                        
                           
                              
                                 
                                    
                                       30
                                    
                                 
                                 
                                    
                                       9
                                    
                                 
                              
                           
                           =
                           3.00
                           ×
                           
                              10
                              8
                           
                        
                      can decode the binary vault code CE
                     . In this scenario, the security of the fuzzy vault is approximately 26bits. However, if the size of the fi
                      units is unknown, the strength of the brute force attack is 
                        
                           
                              
                                 
                                    
                                       256
                                       ×
                                       8
                                    
                                 
                                 
                                    
                                       9
                                       ×
                                       8
                                    
                                 
                              
                           
                           =
                           
                              
                                 
                                    
                                       2048
                                    
                                 
                                 
                                    
                                       72
                                    
                                 
                              
                           
                        
                      where 
                        
                           
                              
                                 
                                    
                                       30
                                       ×
                                       8
                                    
                                 
                                 
                                    
                                       9
                                       ×
                                       8
                                    
                                 
                              
                           
                           =
                           
                              
                                 
                                    
                                       240
                                    
                                 
                                 
                                    
                                       72
                                    
                                 
                              
                           
                        
                      combinations will successfully decode the binary vault code CE
                     . So, the system security strength is measured by the minimum value 2238, i.e., 238 security bits. While the security of the fingerprint cryptosystems proposed in [14,24] are 43 and 53bits respectively. Thus, the proposed fingerprint fuzzy vault achieves a better security performance just using the minutiae pairwise and the binary vault code.

Now suppose an attacker gains access to both the password of a genuine user and the key generator algorithm. The attacker can only decrypt the binary vault code. However, to be successfully authenticated, the attacker must identify the genuine minutia points from this binary vault code, but attempt is computationally hard as mentioned in the previous paragraph.

To summarize, our fingerprint authentication method displays an acceptable security level for the most brute force attacks.

@&#CONCLUSION@&#

In the present work, we propose a fuzzy vault for fingerprint authentication system which is based on a combination of a new cryptographic construct entitled fuzzy vault minutiae pairwise and their vault codes. We first investigate a new minutiae structure represented by minutiae pairwise features. Then, a minutiae pairwise structure-based matching algorithm is proposed. This representation overcomes the minutiae pre-alignment stage in the fingerprint matching algorithm.

Subsequently, we propose a fuzzy fingerprint vault implementation incorporating a secret binary vault code scheme. As a result, this incorporation hardens a fingerprint-based fuzzy vault based on the user's password and provides enhanced security. The proposed fuzzy vault scheme generation allows the construction of the different minutiae pairwise fuzzy vault for the same person and it avoids a brute attack if an attacker succeeds in overlapping two different versions of the fuzzy vault of the same person with statistical analysis. In addition, the proposed fuzzy vault is not prone to cross-matching of templates across various databases and it enhances the user's privacy. Experimental results on the public domain fingerprint databases show better user authentication performance using the ideas of hardened fuzzy vault by introducing an additional layer of security via a key generation from the user password. This result is promising in providing a useful mechanism for user identity privacy.

For further research, we will implement the proposed fingerprint fuzzy vault on smart cards.

@&#REFERENCES@&#

