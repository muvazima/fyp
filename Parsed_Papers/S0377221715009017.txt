@&#MAIN-TITLE@&#The selective vehicle routing problem in a collaborative environment

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We considered a SVRP in a co-operative environment with 3 partners.


                        
                        
                           
                           The routing is extended with information on partner behaviour and cost allocation.


                        
                        
                           
                           A new, CND-weighted allocation method is introduced and compared to the Shapley value.


                        
                        
                           
                           An incentive to behave flexibly should be provided by the cost allocation method.


                        
                        
                           
                           We propose a transformation towards an individually rational allocation.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Horizontal collaboration

Selective vehicle routing problem

Collaborative vehicle routing

Cost allocation

@&#ABSTRACT@&#


               
               
                  We consider a selective vehicle routing problem, in which customers belonging to different partners in a logistic coalition are served in a single logistic operation with multiple vehicles. Each partner determines a cost of non-delivery (CND) for each of its customers, and a central algorithm creates an operational plan, including the decision on which customers to serve and in which trip. The total transportation cost of the coalition is then divided back to the partners through a cost allocation mechanism.
                  This paper investigates the effect on the cost allocation of a partner’s strategy on non-delivery penalties (high/low) and the properties of its customer locations (distance to the depot, degree of clustering). The effect of the cost allocation method used by the coalition is also investigated. We compare the well-known Shapley value cost allocation method to our novel problem-specific method: the CND-weighted cost allocation method.
                  We prove that an adequate cost allocation method can provide an incentive for each partner to behave in a way that benefits the coalition. Further, we develop a transformation that is able to transform any cost allocation into an individually rational one without losing this incentive.
               
            

In recent years horizontal collaboration has become increasingly popular in the road transportation industry. The basic idea underlying this innovative business model is that distribution companies can significantly increase the efficiency of their operations by joining forces and becoming partners in a horizontal logistic coalition. Especially by solving a collaborative vehicle routing problem, i.e., a vehicle routing problem in which customers that would normally be served by different transportation companies are assigned to shared vehicle routes, less kilometres can be driven with trucks that have a higher average fill rate (Capgemini, 2008; Commission, 2011).

On the other hand, the added complexity of this novel way of working does not come without its challenges. One of the most important issues that needs to be tackled is that of cost allocation (also called gain sharing, depending on the perspective). A coalition incurs a single global coalition cost, which must be paid by the individual partners. The coalition must therefore install a method to allocate the total coalition cost to the partners. If a partner perceives its allocated share of the coalition cost to be too large, it might leave the coalition. Notwithstanding its importance, the cost allocation problem has been widely ignored in the literature on collaborative vehicle routing.

Specific contributions in the field of collaborative vehicle routing are still few and far between. The main body of research on this topic is focused on the demonstration of the gains by means of simulation (Blanc, Cruijssen, Fleuren, & De Koster, 2006; Cruijssen & Salomon, 2004; Ergun, Kuyzu, & Savelsbergh, 2007; Hageback & Segerstedt, 2004; Palander & Väätäinen, 2005), or by reporting on actual case studies (Bahrami, 2002; Cruijssen, Cools, & Dullaert, 2007; Defryn et al., 2014; Frisk, Göthe-Lundgren, Jörnsten, & Rönnqvist, 2010; Wiegmans, 2005). Studies on collaborative vehicle routing topics always aggregate the customers of the different partners into one single non-collaborative vehicle routing problem. In this way, however, company-specific strategies and objectives are ignored and the collaborating partners are implicitly merged into one entity. In this paper, we argue that solving a collaborative vehicle routing problem requires a more problem-specific approach, that explicitly takes into account the interaction between the vehicle routing problem and the cost allocation method. In Vanovermeire and Sörensen (2014a), an approach is developed that explicitly integrates the cost allocation method into the operational planning method, resulting in an optimization problem that looks for the least-cost solution under the constraints that each partner should be adequately rewarded for the changed delivery dates of its customers. Such an approach, however, considerably complicates the optimization problem and is therefore not a viable approach in all situations.

The Shapley value (Shapley, 1953), the Nucleolus (Leng & Parlar, 2005; Schmeidler, 1969), the Equal Profit Method (Frisk et al., 2010) and the volume-based allocation are some of the most well-known allocation methods. Some use a game theoretical approach (e.g., the Shapley value and the Nucleolus), others are based on simpler rules of thumb (e.g., the volume-based allocation and the Equal Profit Method).

As every allocation mechanism is based on a number of partner-specific characteristics (e.g., shipped volume, stand-alone cost, flexibility), choosing an allocation method results in an implicit selection of the desired partner behaviour. As an example, the volume-based allocation method allocates the profit of the coalition based on each partner’s shipped volume and therefore implicitly stimulates partners to ship larger volumes. Stated differently, by agreeing on a certain cost allocation method, the partners implicitly or explicitly formulate a number of performance indicators they deem important for the coalition. Partners that behave well according to these predefined characteristics will be favoured by the cost allocation mechanism. This mechanism should therefore be used as an incentive for the partners to behave in favour of the coalition (Defryn et al., 2014). Dudek and Stadtler (2005) state that, by giving the right incentives, a solution can be obtained, that is optimal for the total coalition instead of a solution that is locally optimal for only one or a subset of partners.

There is widespread agreement in the literature that no single cost allocation method works best in all situations. In order to be able to include problem-specific elements into the allocation procedure, many authors therefore acknowledge the need for a case-specific approach (Biermasz, 2012; Defryn et al., 2014; Tijs & Driessen, 1986; Vanovermeire, Vercruysse, & Sörensen, 2014). The current literature, however, neglects the impact of the behaviour of an individual partner on the performance of the coalition. To guide this behaviour in a desirable direction, the coalition should give the right incentives to the partners, which, as mentioned, can be achieved by the appropriate cost allocation mechanism.

In this paper, we emphasize the interaction between these different elements — strategic partner behaviour, operational planning, and cost allocation — when operating in a collaborative environment. We focus on a relatively simple (yet realistic) collaborative variant of a well-known vehicle routing problem, the selective vehicle routing problem. This problem is formally described in Section 2. In Section 3 it is shown how this problem can be used in a collaborative environment. Here we focus on the issue of incorporating individual partner behaviour and a cost allocation method. By means of simulation, the properties and characteristics of the selective vehicle routing problem in a collaborative environment are analysed in Section 4. We highlight the notion of bounded individual rationality in Section 5. Finally, Section 6 summarises the main results and gives pointers for future research. All symbols used in this paper are summarised in Appendix A.

In the problem discussed in this paper, both the number of vehicles and the maximum distance each vehicle can travel, are limited. As a result, only a subset of customers can generally be served. The underlying operational problem is therefore a selective vehicle routing problem (SVRP). In the vehicle routing literature, problems in which not all customers need to be visited, but a “reward” is gained for each customer visit are usually called orienteering problems, see e.g., Archetti, Hertz, and Speranza (2007); Bouly, Dang, and Moukrim (2010).

A formal description of the SVRP tackled in this paper is the following. We consider a set of c customers ci
                         (
                           
                              i
                              =
                              {
                              1
                              ,
                              ⋯
                              ,
                              c
                              }
                           
                        ), with given coordinates in an euclidean distribution area, and a fixed fleet of v vehicles vk
                         (
                           
                              k
                              =
                              {
                              1
                              ,
                              ⋯
                              ,
                              v
                              }
                           
                        ). The cost to travel between customers i and j is represented by the distance dij
                        . Each vehicle can travel a predefined maximum distance D. Furthermore, a depot is given. Each vehicle starts and ends its distribution tour at this depot.

In the SVRP both the number of vehicles and the maximum distance travelled by each vehicle are limiting resources that may prevent all customers from being visited. A compensation for non-delivery (CND) is therefore determined for each customer. CND
                           i
                         is the cost that is to be paid when customer i is not served, and may represent, e.g., a penalty paid to this customer in the form of a discount. We will elaborate on this concept in Section 3.1.

The aim of the SVRP is to determine a feasible subset of customers to be served, as well as the sequence in which these customers are visited by each vehicle in such a way that the total distribution cost is minimised. This cost includes both the total travel cost and the total CND value of all unvisited customers. The SVRP therefore implicitly assumes — without loss of generality — that travel distances and costs of non-delivery are expressed in the same units.

Formally we can define the SVRP as a mixed-integer programming problem. A complete list of symbols appears in Appendix A.

We use the subtour elimination constraints as defined by Vansteenwegen, Souffriau, and Oudheusden (2011). In this representation the position of customer i in the path of vehicle k is given by Uik
                        . Other decision variables are the following:

                           
                              
                                 
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         
                                                            if
                                                            a
                                                            visit
                                                            to
                                                            customer
                                                            i
                                                            is
                                                            followed
                                                            by
                                                            a
                                                            visit
                                                            to
                                                         
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         
                                                            
                                                            customer
                                                            j
                                                            in
                                                            the
                                                            tour
                                                            of
                                                            vehicle
                                                            k
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             y
                                             i
                                          
                                       
                                       
                                          
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         
                                                            if
                                                            customer
                                                            i
                                                            is
                                                            served
                                                            in
                                                            the
                                                            solution
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (1)
                              
                                 
                                    min
                                    
                                       [
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          c
                                       
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          c
                                       
                                       
                                          ∑
                                          
                                             k
                                             =
                                             1
                                          
                                          v
                                       
                                       
                                          d
                                          
                                             i
                                             j
                                          
                                       
                                       
                                          x
                                          
                                             i
                                             j
                                             k
                                          
                                       
                                       +
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          c
                                       
                                       
                                          (
                                          1
                                          −
                                          
                                             y
                                             i
                                          
                                          )
                                       
                                       
                                          CND
                                          i
                                       
                                       ]
                                    
                                 
                              
                           
                        Subject to

                           
                              (2)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       c
                                    
                                    
                                       x
                                       
                                          i
                                          m
                                          k
                                       
                                    
                                    =
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       c
                                    
                                    
                                       x
                                       
                                          m
                                          j
                                          k
                                       
                                    
                                    
                                    ∀
                                    m
                                    =
                                    1
                                    ⋯
                                    c
                                    ,
                                    ∀
                                    k
                                    =
                                    1
                                    ⋯
                                    v
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       v
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       c
                                    
                                    
                                       x
                                       
                                          i
                                          j
                                          k
                                       
                                    
                                    =
                                    
                                       y
                                       j
                                    
                                    
                                    ∀
                                    j
                                    =
                                    1
                                    ⋯
                                    c
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       c
                                    
                                    
                                       x
                                       
                                          0
                                          i
                                          k
                                       
                                    
                                    =
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       c
                                    
                                    
                                       x
                                       
                                          j
                                          0
                                          k
                                       
                                    
                                    =
                                    1
                                    
                                    ∀
                                    k
                                    =
                                    1
                                    ⋯
                                    v
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          0
                                       
                                       c
                                    
                                    
                                       ∑
                                       
                                          j
                                          =
                                          0
                                       
                                       c
                                    
                                    
                                       d
                                       
                                          i
                                          j
                                       
                                    
                                    
                                       x
                                       
                                          i
                                          j
                                          k
                                       
                                    
                                    ≤
                                    D
                                    
                                    ∀
                                    k
                                    =
                                    1
                                    ⋯
                                    v
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       U
                                       
                                          i
                                          k
                                       
                                    
                                    −
                                    
                                       U
                                       
                                          j
                                          k
                                       
                                    
                                    +
                                    1
                                    ≤
                                    
                                       (
                                       c
                                       −
                                       1
                                       )
                                    
                                    
                                       (
                                       1
                                       −
                                       
                                          x
                                          
                                             i
                                             j
                                             k
                                          
                                       
                                       )
                                    
                                    
                                    ∀
                                    i
                                    ,
                                    j
                                    =
                                    1
                                    ⋯
                                    c
                                    ,
                                    ∀
                                    k
                                    =
                                    1
                                    ⋯
                                    v
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    1
                                    ≤
                                    
                                       U
                                       
                                          i
                                          k
                                       
                                    
                                    ≤
                                    c
                                    
                                    ∀
                                    i
                                    =
                                    1
                                    ⋯
                                    c
                                    ,
                                    ∀
                                    k
                                    =
                                    1
                                    ⋯
                                    v
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                          k
                                       
                                    
                                    ,
                                    
                                       y
                                       i
                                    
                                    ∈
                                    
                                       {
                                       0
                                       ,
                                       1
                                       }
                                    
                                 
                              
                           
                        
                     

Constraints (2) ensure the connectivity of the path of a single vehicle, while Constraints (3) guarantee that every customer is visited at most once in the solution. Constraints (4) ensure that all vehicles start and end their trip at the depot (vertex 0). The maximal allowed vehicle distance is ensured by constraints (5). Constraints (6) and (7) take care of the subtour elimination.

Several algorithms have been proposed in the literature to tackle selective vehicle routing problems or team orienteering problems. The most important contributions are summarised in Table 1
                        . Because none of these algorithms is publicly available, we develop in this paper a straightforward randomized, multi-start variable neighbourhood search algorithm. Although we are confident that the solutions found by our algorithm are of high quality, the aim of this paper is explicitly not to develop a state-of-the-art algorithm that can compete with the best ones in the literature. The algorithm is visualised in Fig. 1
                        . In Table 2
                         the algorithm’s parameter settings, which were determined in a limited pilot study, are presented.

First a randomized nearest-neighbour heuristic is used to construct an initial solution — where nearest is defined as a minimal (distance/CND)-ratio. In this way the solution is constructed by visiting customers that are close to the current position of the vehicle or cause high compensation for non-delivery costs if not visited. Due to this definition, the heuristic automatically ranks customers with zero CND after all other customers. Obviously, it is not economically meaningful to set a negative CND. Similar to a GRASP algorithm, the constructive algorithm randomly selects one of the nBest customers at each iteration. This allows it to generate different solutions, which is necessary because of the multi-start nature of the algorithm.

In a second phase the obtained heuristic solution is improved by means of local search, using the different neighbourhoods listed in Table 3
                        . These neighbourhoods are firmly established in the vehicle routing literature, and are explored sequentially in the order mentioned here. A first-improvement strategy is used, and every improvement encountered is accepted. If none of the neighbourhoods contains a better solution, the current solution is saved as a local optimum.

The algorithm is initiated multiple times (FullRestart times). The larger the value of this parameter, the larger the possibility to improve the current solution but this comes at the expense of larger calculation times. The solution reported is the best solution found during all iterations of the main loop.

In this section the SVRP is introduced in a collaborative environment in which several companies form a coalition with the aim of serving the customers of all partners in one single logistic operation. By combining their customer bases and sharing their trucks, the individual vehicle routing problems of the partners disappear and a vehicle routing problem arises at the level of the coalition. Increased opportunities for optimisation appear because customers of different companies can be visited by the same truck, which might result in a lower total logistics cost.

In the rest of this paper, we consider a grand coalition N, in which |N| partners 
                        
                           p
                           =
                           {
                           1
                           ,
                           ⋯
                           ,
                           |
                           N
                           |
                           }
                        
                      join forces. The set of v vehicles is shared and for every customer 
                        
                           c
                           
                              i
                           
                           p
                        
                      in the grand coalition the partner is indicated by an extra index p. A graphical representation of the selective vehicle routing problem in a collaborative environment can be found in Fig. 2
                     .

A property of the SVRP is that the decision whether to serve a certain customer in the operational plan is not only based on its position in the distribution area but also on its urgency for delivery. This urgency is represented by the compensation for non-delivery cost (CND), a value that can be determined by each partner individually for each of its customers. The CND of customer i (CND
                           i
                        ) can be interpreted as a fee that is to be paid if customer i is not served in the solution. It is awarded in order to compensate the consequences of the postponement of the corresponding order.

In a more concrete example, it can be assumed that partners give a cost reduction to their customers if they are not served on the agreed delivery date. The exact discount can be defined by the partner individually and can be interpreted as the CND. Customers that are promised a larger discount, and therefore have a larger compensation for non-delivery cost, are more likely to be part of the optimal solution. The CND values can therefore be used by a partner to prioritize the delivery of certain customers at the expense of the other partners.

Since every partner in the coalition is free to set the CND for each of its customers, and since the CND values have a direct impact on the total cost of the operational solution, the way in which each partner determines its CND values will have a direct impact on the total coalition cost.

On the one hand, each partner will have an incentive to set the CND values for its customers to very high values, to ensure that as many of its customers as possible are included in the solution. However, if all partners set very high CND values, the total coalition cost is likely to increase significantly as some — now more expensive — customers will remain unserved. An incentive for partners to keep their CND values low, should therefore be installed. This incentive can be provided by the cost allocation mechanism: partners that consistently set high CND values for their customers should be penalized by being assigned a relatively large share of the total coalition cost.

The ‘collaborative’ selective vehicle routing problem distinguishes itself from the (non-collaborative) SVRP in that the former requires a second issue to be tackled besides solving the routing problem: the allocation of the global coalition cost. The mechanism used to determine each partner’s share in this coalition cost is called the cost allocation method.

When operating in a collaborative environment, the cost allocation method is therefore interwoven with the vehicle routing solution process. We propose a general approach that, besides solving the traditional (non-collaborative) vehicle routing problem, also takes into account the CND strategy of the individual partners by incorporating a cost allocation mechanism. This approach is visualised in Fig. 3
                        . This framework will now be used to analyse the selective vehicle routing problem in a collaborative environment.

At the start of the collaboration, each individual partner determines its strategic position, i.e., the CND values for its customers (partner’s strategy). Based on the provided compensations, the selective vehicle routing problem is solved at the level of the coalition (operational planning) and a total distribution cost is obtained. This cost is to be allocated to the individual partners (cost allocation). The allocation is done by a predefined cost allocation method, and preferably both the obtained operational plan (routes) and the partners’ individual strategy should be taken into account. It can be expected that to a certain extent, the different companies in the coalition remain competitors and each partner will therefore evaluate the collaboration in terms of personal gains. The cost allocation mechanism should therefore be chosen in such a way that partners are rewarded if their decisions with respect to the CND values of their customers benefit the coalition.

As the partners’ individual CND strategy, and therefore also the operational solution, highly depends on the resulting cost allocation, a feedback loop is included. It is expected that partners that are assigned a large share of the coalition cost as a result of exorbitant CND values will adjust their behaviour to avoid incurring such large costs in the future. As this relation is represented with a dotted line, we will not focus on this dynamic character of the problem in this paper.

The agreement on this long-term joint planning of the distribution activities is aimed at raising the number of served customers using the coalition’s limited resources, while reducing costs. The creation of a strategic coalition, however, does not imply that a partner will give up personal objectives nor the lever to guide the global solution into a direction that is desirable from its individual point of view. The degree to which organisations allow a shift in decision-making towards the benefit of the coalition will determine the boundaries of the potential benefits of the coalition (Langley, 2000). In the literature this is referred to as the flexibility of a partner (Vanovermeire & Sörensen, 2014b). If the flexibility of one of the partners is limited with respect to the operational routing, the opportunities concerning synergy and total efficiency are likely to reduce. In the selective vehicle routing problem, flexible partners are those that set relatively low CND values.

As explained in Section 3.2, the performance of the coalition depends to a large extent on the partners behaviour and flexibility. To ensure that partners behave and adopt a CND strategy in favour of the coalition, the right incentives should be given by the cost allocation mechanism. We therefore argue that a decision made at the operational (routing) level should affect the cost allocation result and vice versa. This dependency is generally omitted in the existing literature. Furthermore, by ignoring the cost allocation mechanism, it will be impossible for a partner to determine its personal benefits when forming or joining a coalition.

There is widespread agreement on the fact that no single cost allocation mechanism produces a fair cost allocation in all situations. No method can therefore be considered as a global best practice, applicable in every scenario. In Defryn et al. (2014), we argue that a cost (or profit) allocation method should be selected by the coalition, based on the incentives that it gives to the individual partners. These should be in line with the coalition’s vision on success. In this way, the allocation will force its partners to behave in a way that is perceived desirable for the coalition. The volume-based profit allocation for example, will allocate larger profits to the partners that transport the largest volumes. It is not questioned whether this approach is fair, but the clear incentive towards the partners to increase their volumes is undeniable as transporting larger volumes will result in a larger share of the coalition gain.

Although a coalition is free in formulating its preferred incentives, it can be recommended that these incentives should motivate the partners to adopt a flexible attitude with respect to the routing problem. By behaving in a flexible way, partners give a large degree of freedom to the coalition, resulting in a more efficient global routing solution.

In the collaborative selective vehicle routing problem discussed in this paper, the leverage given to the partners is the CND strategy. If all CND values are set equally for all customers, no differentiation exists among the different customers. No detours are to be made in order to include more expensive customers in the solution, and the number of customers served in the solution is maximised — customers are only selected based on their locations — while minimising the total distribution cost. By imposing relatively high CND values to certain customers, the probability of taking these customers into the final routing solution will increase. In this way, a partner is given control on the optimal choice of the routing solution. However, this might be at the expense of global efficiency — less customers can be served with the same resources — and might raise the total coalition cost.

If the CND value of a customer is lower than its minimal marginal transportation cost (distance), it is never profitable to take this customer into the final solution. The minimal marginal transportation cost is defined as the minimal detour that is to be made to include this customer in any existing tour.

In this paper we investigate the behaviour of two different cost allocation mechanisms for the selective vehicle routing problem in a collaborative environment. First we take a look at the well-known Shapley value, commonly seen as a possible best practice by the industry. Next, these results will be compared with an alternative allocation rule, developed specifically for the SVRP, taking into account both the CND and customer locations.

Based on the Shapley value (Shapley, 1953) this allocation mechanism takes into account the partners’ contribution to all possible (sub)coalitions and is therefore entirely based on a partner’s co-operative productivity. This method is gaining popularity as it was put forward by the European CO3-project, a peer group of more than fifty important industrial companies, as a best practice in horizontal collaboration in logistics (Biermasz, 2012).

The cost allocated to partner p can be calculated by using Eq. (9). The last factor of this equation represents the marginal cost of adding partner p to a possible subcoalition S. This is done by comparing the total distribution cost C(.) of the subcoalition with and without partner p. To calculate the Shapley allocation for partner p, these marginal costs should therefore be known for every possible subcoalition. Finally, the cost allocated to partner p equals then the weighted average of all these marginal differences.

                              
                                 (9)
                                 
                                    
                                       
                                          x
                                          p
                                       
                                       =
                                       
                                          ∑
                                          
                                             S
                                             ⊆
                                             N
                                             ∖
                                             {
                                             p
                                             }
                                          
                                       
                                       
                                          
                                             
                                                |
                                                S
                                                |
                                                !
                                             
                                             
                                                (
                                                |
                                                N
                                                |
                                                −
                                                |
                                                S
                                                |
                                                −
                                                1
                                                )
                                             
                                             !
                                          
                                          
                                             |
                                             N
                                             |
                                             !
                                          
                                       
                                       
                                          (
                                          C
                                          (
                                          S
                                          ∪
                                          {
                                          p
                                          }
                                          )
                                          −
                                          C
                                          (
                                          S
                                          )
                                          )
                                       
                                    
                                 
                              
                           
                        

The Shapley value satisfies certain axioms that are generally regarded to be important properties a cost allocation mechanism should posses. These include symmetry, null player property, efficiency and additivity (Nagarajan & Soifj, 2008). Furthermore, the Shapley value cost allocation provides a result that is individually rational for a superadditive game (Moulin, 1988). A definition of these properties can be found in Table 4
                           .

As the Shapley value is based on the partners’ marginal contribution in every possible subcoalition, it is able to properly capture the financial impact of a single partner on the coalition. Its drawback, however, is the need of information. The calculation of the Shapley value requires at least an estimation of the total cost of every possible subcoalition. This might turn out very challenging or even impossible in practice as no information is available on the decision making and partner behaviour in the unformed coalitions cannot be observed directly. It can only be simulated. In this paper, the simulation is done by the metaheuristic approach described above as the operational planning is calculated for every possible subcoalition in order to determine the total cost of these subcoalitions.

Furthermore, in a two-partner coalition, the Shapley value possesses the property of dividing the total coalition gain equally among the collaborating partners, without taking into account the partners’ stand-alone efficiency and flexible behaviour towards the coalition. In a two-partner coalition, it therefore loses any lever to stimulate flexibility. A solution for this problem, however, was proposed by Vanovermeire and Sörensen (2014b).

Notwithstanding the popularity of the Shapley value, its generality might prevent it from providing the desirable incentives to its partners. Even if the Shapley value does support the right incentives, this relation might not be that straightforward for the supply chain manager. Therefore, based on the idea of separable and non-separable costs (Tijs & Driessen, 1986), a cost allocation method is constructed in this paper that is explicitly based on the partners’ CND policy and their customer locations. The CND-weighted cost allocation is constructed as follows.

The separable part of the total coalition cost, i.e., linked to one specific customer (
                              
                                 c
                                 i
                                 p
                              
                           ) in the tour, consists of the marginal cost mi
                            of adding this customer to the solution. For every customer that is served in the final routing solution, the separable cost can be calculated as the difference in total distance if this customer is taken into account or left out of the final tour, without re-optimising the solution.

                              
                                 (10)
                                 
                                    
                                       
                                          m
                                          i
                                       
                                       =
                                       
                                          d
                                          
                                             i
                                             −
                                             1
                                             ,
                                             i
                                          
                                       
                                       +
                                       
                                          d
                                          
                                             i
                                             ,
                                             i
                                             +
                                             1
                                          
                                       
                                       −
                                       
                                          d
                                          
                                             i
                                             −
                                             1
                                             ,
                                             i
                                             +
                                             1
                                          
                                       
                                    
                                 
                              
                           
                        

The remaining part of the coalition cost is called the non-separable cost and can be divided in various ways (Cruijssen, 2012). In order to align the allocation with the incentives towards flexibility, the non-separable cost will be allocated based on weights, defined by the total CND of the customers of each partner in the final routing solution. The cost allocated to partner p can therefore be written as follows, where C(N) is the total coalition cost, Mp
                            equals the sum of the marginal costs of the customers belonging to partner p and CND
                              p, sol represents the sum of all compensations for non-delivery of all customers of partner p that are served in the solution.

                              
                                 (11)
                                 
                                    
                                       
                                          x
                                          p
                                       
                                       =
                                       
                                          M
                                          p
                                       
                                       +
                                       
                                          
                                             CND
                                             
                                                p
                                                ,
                                                sol
                                             
                                          
                                          
                                             
                                                ∑
                                                p
                                             
                                             
                                                CND
                                                
                                                   p
                                                   ,
                                                   sol
                                                
                                             
                                          
                                       
                                       
                                          (
                                          C
                                          
                                             (
                                             N
                                             )
                                          
                                          −
                                          
                                             ∑
                                             p
                                          
                                          
                                             M
                                             p
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        

As the CND-weighted cost allocation is completely based on the specific SVRP parameters, the behaviour of the different partners in the coalition can be linked directly to the allocation results. Furthermore, we can state that for the calculation of the CND-weighted cost allocation only the result of the grand coalition is taken into account. Contrary to the Shapley value, the CND-weighted method is not affected by stand-alone efficiency or costs and the performance of subcoalitions. We will show in our simulation results that this will result in a situation where partners with equal flexibility towards the routing solution will pay the same cost for the same service.

In this section we study the behaviour of the selective vehicle routing problem in different collaborative scenarios, focusing on the impact of a partner’s characteristics and strategy on both the operational solution and the cost allocated to this partner. First, the impact of different CND strategies is investigated. Secondly, we study the effect of different customer location patterns, measuring the influence of the average distance to the depot and the amount of clustering on the final solution.

The simulation is based on a set of generated instances that are available from the authors upon request. All instances are generated on a square grid of width 100, with a central depot located at coordinate (50,50). Without loss of generality, we assume a three-partner coalition where every partner has 15 customers and brings one single truck into the coalition. Therefore, the number of available vehicles equals the coalition size for every subcoalition. The maximum distance these trucks can travel is limited to 142. All distances are Euclidean.

A fixed CND of 20 is assumed for all customers of partners 2 and 3. For partner 1 different scenarios are considered where the CND for all customers ranges from 4 to 100. The instances are solved using the metaheuristic approach, described in Section 2.2, and costs are allocated by both the Shapley value cost allocation and the CND-weighted cost allocation.

The results were obtained by running the algorithm and the cost allocation method on a set of 30 different test instances. All reported values are averaged over this set.

As discussed in Section 3.1 the compensation for non-delivery (CND) value is used by the partners in the coalition as a way to assign priority to their customers. Therefore, the CND has a direct impact on the optimal routing solution, i.e., the solution with the minimal total distribution cost for the coalition. If all partners assign similar CND values to their customers, the number of customers served in the final solution will be maximized as no detours to serve more expensive customers are involved. On the other hand, a non-flexible attitude (high CND values) of one of the partners will generally result in a routing solution that is less efficient. In this section, we investigate the sensitivity of the vehicle routing solution to the CND values by means of simulation. For the purpose of these experiments, all customer locations were chosen according to a uniform random distribution.


                        Fig. 4
                         is a visual representation of the number of customers served in the final solution. As no differences in CND strategy exist between partners 2 and 3, both partners are treated equally by the routing algorithm, and they both have approximately the same number of customers in the final solution. If partner 1 also imposes a CND of 20, customers of all three partners appear with equal frequency in the solution and the total number of customers served is maximised.

When the CND value of partner 1 increases for all its customers, not serving them becomes more expensive for the coalition so the algorithm will generate a solution in which more of this partner’s customers are visited, at the expense of the other partners’ customers, that are now served less frequently. Additionally, the inflexible strategy of partner 1 will result in an increased total coalition cost (see Fig. 5
                        ). The coalition as a whole is now functioning in a less efficient way, and partner 1 should be discouraged from setting high CND values by the cost allocation mechanism.

When the CND values of partner 1 are much lower than those of the other partners, a drop in the total number of customers served in the final solution can be witnessed. The decreased CND values of partner 1 render it less expensive to leave this partner’s customers unserved. The total coalition cost decreases because a low CND is to be paid for the non-served customers of partner 1.

The resulting cost allocations are shown in Fig. 5. When no differences exist between the partners (all have CND of 20), both allocation mechanisms divide the costs equally. Also, when partner 1 behaves in a less flexible way than the other partners, this results in a larger total coalition cost (represented by the black line), and both the Shapley value and the CND-weighted cost allocation consequently assign a larger share of the cost to this partner. Where the allocated cost increases linearly by applying the Shapley method, the CND-weighted cost allocation tends to follow more the underlying number of customers that are served for every partner. We can conclude that the Shapley value punishes the inflexible behaviour directly, whereas the CND-weighted approach punishes the inflexible behaviour through its effects on the grand coalition and the number of customers served for every partner.

The algorithm for the routing problem preferably serves customers that (1) have large CND values, and (2) increase the total distance of the solution as little as possible. For this reason, customers that are located close to the depot will tend to be served with a larger probability than customers located far away. In this section we study the impact of the location of a partner’s customer within the distribution area and the interdependency with the CND strategy.

In our simulation, a square area of size 50 around the depot is defined. The customers of partners 2 and 3, all having a CND equal to 20, lie inside this smaller area and, therefore, closer to the depot. The customers of partner 1, again with a variable CND, are all located outside this smaller area, and are therefore located further away from the depot.

It can be expected that customers located closer to the depot are more likely to be served in the final routing solution. Due to a reduction in travel distance between these customers and the depot, one vehicle will be able to serve more customers without violating the maximum vehicle distance. If all customers, including those of partner 1, have a CND of 20, customers of partners 2 and 3 will have a larger probability of being served, which can also be seen in Fig. 6
                        .

The vehicles are preferably used to serve the customers that are located close to the depot. In order to include the customers of partner 1, which are located further away, a detour is to be made. For very low CND values, including these customers is not profitable as the cost of not serving them is lower than the detour to be made. In order to make the longer trips towards partner 1’s customers more attractive for the coalition, this partner needs to impose larger CND values. However, this behaviour will render the solution both more expensive and less efficient. For this reason, we expect the inflexibility of partner 1 to be punished by the cost allocation mechanism.

The results of both the Shapley value and CND-weighted cost allocation are visualised in Fig. 7
                        . We can see that in both methods the inflexible behaviour of partner 1 is punished by an increase in allocated cost. A very high cost, up to almost 100 percent of the total coalition cost, is allocated to partner 1 by applying the Shapley value method. This can be explained as follows. As the customers of partner 1 are located far away, the stand-alone cost of this partner will be significant larger. Furthermore, adding partner 1 to any subcoalition will reduce the efficiency and raise total cost significantly. For a further increase in CND a negative allocated cost will be obtained for partners 2 and 3, stating that they will receive money for joining the coalition while partner 1 pays more than the total coalition cost. Notwithstanding this (potentially undesirable) behaviour, the Shapley value cost allocation does remain individually rational, i.e., each partner is allocated a lower cost than its stand-alone cost.

As the CND-weighted cost allocation method is only based on the cost that the partners induce in the final routing solution, the cost allocated to partner 1 tends to be small for the scenarios where less customers of this partner are served in the routing solution. This is the case for scenarios where partner 1 is behaving in a flexible way (low CND). Even if partner 1 behaves in a very inflexible way, still many customers of partner 2 and 3 remain served because of their attractive position close to the depot. This is captured more directly by the CND-weighted method. Here again we conclude that the CND-weighted cost allocation remains closely bound to the underlying operational solution.

Contrary to the Shapley value cost allocation, the CND-weighted method does not guarantee individual rationality. As the outcome of this method is only based on the final routing solution, it does not take into account the stand-alone costs. The cost allocated to a partner is largely defined based on the number of customers served in the routing solution of the coalition, weighted according to the corresponding CND. In this case, the customers of partners 2 and 3 are located close to the depot. Notwithstanding the maximum vehicle distance that is imposed, these partners can already serve a majority of their customers in the stand-alone scenario. As a result, only very little (and sometimes zero) customers (with their CND) remain unserved, and the stand-alone costs of partners 2 and 3 are very low. Due to this, the costs allocated to partners 2 and 3 can easily exceed their stand-alone costs and the property of individual rationality is not guaranteed. We look into this in more detail in Section 5.

In the third simulation scenario, we look at the effect of geographical clustering of customers. If the customers belonging to each partner are located in close proximity to one another and no (or limited) geographical overlap exists between the customer clusters of the different partners, no significant collaboration synergy can be expected. If a coalition should be formed between such incompatible partners, we expect its coalition cost to be not much less than the sum of the stand-alone costs.

A set of test instances was generated in which all customers belonging to one partner are located in the same part of the distribution area. In this way customers of partner 1 are located in the North–West, those of partner 2 in the North–East and finally those belonging to partner 3 in the South. Customers of partner 3 are generated to be on average closer to the depot than the ones of the other companies.

Based on the characteristics of the test instances, the distance between the depot and the customer clusters, and between the different clusters is high, compared to the distance between the customers within one cluster. As a consequence it will be very expensive to combine customers of different clusters into one vehicle. As the customers of partner 3 are located on average closer to the depot, this single vehicle can be used to serve more customers compared to the other partners, as seen in Fig. 8
                        .

As the customers of partner 1 will become more and more expensive for increasing values of this partner’s CND, the detour of visiting two different clusters with one vehicle might become more attractive in order to avoid the larger compensation costs that should be paid if the customers remain unvisited. However, this action renders the solution less efficient (less customers can be visited), and we expect this inflexible behaviour to be punished again by the chosen cost allocation mechanism. As customers of partner 2 are located further away compared to those of partner 3, the cluster of partner 2 has a lower probability to be visited by a vehicle. This can be seen in Fig. 8.

The resulting cost allocation is shown in Fig. 9
                        . At first sight it can be seen again that partner 1 was charged a larger relative part of the total coalition cost for increasing values of its CND. This scenario, however, reveals another difference in approach for both cost allocation mechanisms studied in this paper.

When comparing the relative cost allocated to partners 2 and 3, the Shapley value cost allocation charges a larger cost to partner 2 (Fig. 9a), while this partner is favoured in the CND-weighted cost allocation mechanism (Fig. 9b). This can be explained as follows. As customers of partner 3 are located on average closer to the depot, these customers can be served with higher efficiency. Therefore the stand-alone cost of partner 3 will be lower compared to that of partner 2. Moreover, this high efficiency will be present in every subcoalition. As the Shapley value takes this into account, a lower cost is allocated to partner 3 although a larger number of customers of this partner are served in the final solution. In the CND-weighted cost allocation however, costs are allocated based on the impact of every partner on the final routing solution. Because no differentiation exists in the CND of customers of partners 2 and 3 both partners are treated equally. As more customers of partner 3 are taken into the final routing solution, this partner should pay a larger share of the total cost.

By applying a weighted cost allocation method like the CND-weighted allocation method proposed in this paper, a cost is assigned to a partner ranging from zero — where the partner does not pay anything — up to the total coalition cost. This may in some cases result in an allocation that is not individually rational, i.e., in which one or more partners are assigned a larger cost than their stand-alone cost. Such allocations will generally result in infeasible solutions, as the affected partners will not accept to be charged a larger cost than their stand-alone cost, and will consequently leave the coalition.

Let A be the set of all possible cost allocations. We further define AIR
                         ⊆ A as the subset of all individually rational cost allocations. The existence and size of the subset of individually rational allocations depend on the partners’ stand-alone cost. In other words, the region of individual rationality of a cost allocation is bounded by the stand-alone costs (Table 5).
                     

For a two-partner coalition the concept of individual rationality is visualised in Fig. 10
                        
                        . The range of possible allocations is represented by segment αδ. However, only solutions between β and γ, calculated based on the partners’ stand-alone costs, possess the property of individual rationality. In order to ensure that the collaboration remains beneficial for all partners, only solutions within the set of individually rational allocations should be considered.

Depending on the stand-alone cost of partner 1, the incentive for partner 2 to behave in a more flexible way is bounded. The fact that partner 1 is not willing to pay a cost that is larger than its own stand-alone cost, and that the total coalition cost needs to be paid by the two partners, determines the minimum cost that partner 2 needs to pay. The maximum flexibility of this partner is therefore limited. Consider to following example. As partner 2 behaves more flexible, the cost allocation result will tend to shift towards γ. However, from the moment this corner point is reached, an additional increase in flexibility will no longer result in a cost reduction for partner 2 as this would lead to a violation of the individual rationality constraint.

Clearly, these arguments are symmetrical and we can therefore state that the incentive towards flexibility is bounded by the stand-alone costs of the coalition partners. This result also acknowledges the importance of partner choice when setting up a new collaboration.

By using a weighted allocation mechanism, the total coalition cost might be allocated in a way that is not individually rational. In this section, we therefore develop an algorithm that transforms an allocation that is not individually rational into one that is, while remaining as close as possible to the original allocation. For a cost allocation 
                           
                              a
                              ∉
                              
                                 A
                                 
                                    I
                                    R
                                 
                              
                              ,
                           
                         a transformation is proposed towards a new cost allocation 
                           a
                        
                        
                           R
                         ∈ AIR
                         in such a way that the distance between 
                           a
                         and 
                           a
                        
                        
                           R
                         is minimised. We therefore define the distance between two allocations, 
                           a
                         and 
                           a
                        
                        
                           R
                        , as the sum over all partners of the squared differences. As these sum should be minimised, allocation 
                           a
                        
                        
                           R
                         can be found as follows:

                           
                              (12)
                              
                                 
                                    
                                       
                                          a
                                       
                                       R
                                    
                                    =
                                    arg
                                    
                                       min
                                       
                                          
                                             
                                                a
                                             
                                             R
                                          
                                          ∈
                                          A
                                       
                                    
                                    
                                       (
                                       
                                          ∑
                                          
                                             p
                                             =
                                             1
                                          
                                          N
                                       
                                       
                                          
                                             (
                                             
                                                a
                                                p
                                             
                                             −
                                             
                                                a
                                                p
                                                R
                                             
                                             )
                                          
                                          2
                                       
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             Subject
                                             
                                             to
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                
                                                   a
                                                
                                                R
                                             
                                             ∈
                                             
                                                A
                                                
                                                   I
                                                   R
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In order to transform any cost allocation into an individually rational one, we propose the following algorithm. The algorithm makes use of the cost excess ep
                        , defined as the difference between the currently allocated cost and the stand-alone cost of partner p.

                           
                              (14)
                              
                                 
                                    
                                       e
                                       p
                                    
                                    =
                                    
                                       a
                                       p
                                    
                                    −
                                    
                                       s
                                       p
                                    
                                 
                              
                           
                        
                     

If this excess is positive, the allocated cost exceeds the stand-alone cost and the solution is not individual rational for partner p. As a result, partner p will not be willing to participate in the coalition.

The proposed algorithm is based on an iterative search where the largest positive excess is reduced until the allocated cost equals the stand-alone cost of the corresponding partner and, as a consequence, individual rationality is reached for that partner. The excess cost that is to be paid, is divided equally among the remaining partners. As no extra cost can be allocated to partner p, this partner is removed from the list. This procedure is repeated until the complete solution has reached individual rationality. In this way, a partner will never be charged a cost that is larger than its own stand-alone cost while preserving the initial incentives of the chosen allocation mechanism as much as possible.

The procedure assumes that the total coalition cost is lower than the sum of stand-alone costs of all partners involved. In other words, we assume the property of superadditivity. If this condition is not met, it will be impossible to obtain an individual rational solution. Even with all partners paying a cost equal to their stand-alone cost, a part of the total coalition cost will remain unpaid.

Although the obtained allocation is now individually rational, it does not guarantee the property of stability for the coalition. A coalition is considered stable if none of the partners can improve their situation by forming a sub-coalition. In order to test this, all possible sub-coalitions and their corresponding costs have to be known. However, in real life situations, these costs are generally not known and may be hard to simulate.

Furthermore, although the procedure outlined here finds the individually rational cost allocation closest to the original allocation, the distance between both allocations may be significant. Due to the feedback loop this might lead to a change in strategic positioning that is no longer beneficial for the group as the conversion towards individual rationality can flatten the importance of the initial incentives. As a result, the fact that the coalition divides its costs in a way that is individually rational may not be sufficient to ensure that all partners are comfortable in the created collaborative environment. This has to be evaluated again by every single company in a case-by-case approach.

The proposed transformation is illustrated by a simple example (see also Table 6
                        ). Assume a 4-partner coalition with given stand-alone costs sp
                         and a resulting cost allocation ap
                        . As the sum of all stand-alone costs (1400) is larger than the sum of the total coalition cost (∑
                           p
                        
                        ap
                         = 1300) an individual rational allocation can be found for this coalition. In a first iteration the cost excess ep
                         is calculated for every partner as the difference between ap
                         and sp
                        . The largest excess can be found by partner C, and appears to be positive, indicating that the current allocation is not yet individual rational. The cost allocated to partner C is set equal to its stand-alone cost, and the excess of 90 is divided equally among the other partners. As a maximal cost is now allocated to partner C, it is no longer taken into account. Again the cost excess is calculated for every partner, showing still a problem concerning individual rationality for partner A (40). The cost allocated to this partner is therefore set equal to its stand-alone cost, and the excess is again divided among all other partners that are still in the list. By calculating the cost excess one last time, it can be seen that they are all negative and an individual rational cost allocation is obtained.

In this paper we took a closer look at how a selective vehicle routing problem can be used in a collaborative environment. Besides the vehicle routing problem itself, the collaborative environments force the coalition to consider the problem of strategic positioning, as well as the allocation of the coalition cost.

In order to solve the selective vehicle routing problem, a randomized, multi-start variable neighbourhood metaheuristic was developed. Concerning the cost allocation, we discussed two different approaches: the Shapley value cost allocation, a widespread game-theoretical approach, and a new CND-weighted cost allocation mechanism that could be linked directly to the problem definition of the SVRP.

The solutions of the routing and cost allocation problems are both dependent on a third aspect, the strategic behaviour of the partners with respect to the collaboration. This behaviour was captured by the compensation for non-delivery (CND), the cost that is to be paid if a customer is not selected for delivery in the routing solution. We demonstrated that the strategic behaviour of the partners has a large influence on the efficiency of the routing solution. By choosing a cost allocation mechanism, the coalition implicitly formulates incentives that it perceives important. These incentives should stimulate the partners to behave in a flexible way towards the coalition in order to assure maximal efficiency of the logistical planning. Partners that tend to pull the solution away from its optimal working point, by behaving in an inflexible way, should also accept the consequences in terms of a larger allocated cost. This strong relationship between partners’ behaviour, routing solution and cost allocation is often omitted in the literature, resulting in an incomplete view of the collaborative vehicle routing problem. By means of simulation, these dependencies were shown and tested on different sets of instances.

In a first simulation, the effect of the partners’ CND strategy on the final routing solution and cost allocation was investigated. A partner that imposes relatively larger compensations for non-delivery increases the probability that its customers are taken into the final routing solution. However, this non-flexible attitude will raise total coalition cost while serving less customers and should therefore be punished in the cost allocation. The Shapley value and CND-weighted cost allocation behave similarly in this collaborative environment. The CND-weighted method tends to follow more the number of customers visited for every partner.

If the customers of one partner are more favourably located than those of the others, this pattern will also be found in the solution. The other partners can compensate by setting higher CND values, in which case an inferior routing solution will be chosen where a detour is made in order to visit the more expensive customers. In this simulation the severity of the Shapley value with respect to the non-flexible partners becomes visible to the extent that relative cost allocations above 100 percent and below 0 percent are possible. As this might not be the preferred scenario, the Shapley value still assures an individually rational solution, which is not guaranteed when using the CND-weighted allocation method.

The same conclusion can be drawn from the third simulation, where customers of different partners were clustered in different geographical regions. As this reduces the ability to combine customers of different partners into one trip, the trucks will choose a direction towards the area(s) where more expensive customers are located. Only when relatively high CND values are charged in one area does the solution change to visit this region. This is however at the expense of a larger total coalition cost. Here, the fundamental differences between the two cost allocation methods become clearly visible. While the Shapley value is based on the partners productivity in every possible subcoalition, the CND-weighted cost allocation is only based on the final solution of the coalition. It is up to the collaborating partners to evaluate which approach they perceive as fair.

As mentioned, the CND weighted cost allocation method does not always result in an allocation that is individually rational. We have therefore proposed a transformation of an allocation to one that is individually rational.

In this paper, we focused on the selective vehicle routing problem and introduced a basic framework (solution approach) that can be used to analyse the vehicle routing problem in a collaborative environment. The study is currently limited to the static approach, in which the problem is solved only once. Although we identified the feedback loop, it is not taken explicitly into account. A dynamic (multi-period) approach, where partners might adopt their strategy and behaviour in every period, can be valuable future research.

Furthermore, we plan to study other variants of the vehicle routing problem in a collaborative environment. A different vehicle routing problem will require an alternative definition of partner behaviour and therefore also of the idea of flexibility. We will also examine the behaviour of what we define as multi-objective collaborative vehicle routing problems. Here, the partners have different and possibly conflicting objectives with respect to an optimal routing solution (e.g., total distance, time window violation,...) which should be combined into a single (co-operative) optimization problem.

@&#ACKNOWLEDGEMENTS@&#

This research is supported by the Research Foundation - Flanders (FWO - Ph.D. fellowship) and the Interuniversity Attraction Poles (IAP) Programme initiated by the Belgian Science Policy Office (COMEX project).


                     
                        
                           
                              
                              
                              
                                 
                                    
                                       
                                          N
                                       
                                    
                                    Grand coalition
                                 
                                 
                                    
                                       
                                          
                                             |
                                             N
                                             |
                                          
                                       
                                    
                                    Number of partners in the grand coalition
                                 
                                 
                                    
                                       
                                          S
                                       
                                    
                                    A subcoalition (
                                          
                                             S
                                             ∈
                                             N
                                          
                                       )
                                 
                                 
                                    
                                       
                                          
                                             |
                                             S
                                             |
                                          
                                       
                                    
                                    Number of partners in subcoalition 
                                          S
                                       
                                    
                                 
                                 
                                    
                                       
                                          v
                                       
                                    
                                    Number of vehicles
                                 
                                 
                                    D
                                    Fixed maximum vehicle distance
                                 
                                 
                                    
                                       
                                          c
                                       
                                    
                                    Number of customers
                                 
                                 
                                    
                                       
                                          
                                             c
                                             i
                                             p
                                          
                                       
                                    
                                    Customer 
                                          
                                             i
                                             ,
                                          
                                        belonging to partner 
                                          p
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             d
                                             
                                                i
                                                j
                                             
                                          
                                       
                                    
                                    Travel cost between customers 
                                          i
                                        and 
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             u
                                             
                                                i
                                                k
                                             
                                          
                                       
                                    
                                    Position of vertex 
                                          i
                                        in the route of vehicle 
                                          k
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             CND
                                             i
                                          
                                       
                                    
                                    Compensation for non-delivery of customer 
                                          i
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                p
                                             
                                             
                                                CND
                                                
                                                   p
                                                   ,
                                                   sol
                                                
                                             
                                          
                                       
                                    
                                    Total CND of the customers of partner 
                                          p
                                        in the solution
                                 
                                 
                                    
                                       
                                          
                                             m
                                             i
                                          
                                       
                                    
                                    Marginal cost of adding customer 
                                          i
                                        in the current solution
                                 
                                 
                                    
                                       
                                          
                                             M
                                             p
                                          
                                       
                                    
                                    Sum of the marginal costs for every customer of partner 
                                          p
                                        in the current solution
                                 
                                 
                                    
                                       
                                          
                                             C
                                             (
                                             N
                                             )
                                          
                                       
                                    
                                    Total distribution cost for the grand coalition
                                 
                                 
                                    
                                       
                                          
                                             C
                                             (
                                             S
                                             )
                                          
                                       
                                    
                                    Total distribution cost for subcoalition 
                                          S
                                       
                                    
                                 
                                 
                                    
                                       
                                          A
                                       
                                    
                                    Set of all possible cost allocations
                                 
                                 
                                    
                                       
                                          a
                                       
                                    
                                    A possible cost allocation (
                                          
                                             a
                                             ∈
                                             A
                                          
                                       )
                                 
                                 
                                    
                                       
                                          
                                             a
                                             p
                                          
                                       
                                    
                                    Cost allocated to partner 
                                          p
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             A
                                             
                                                I
                                                R
                                             
                                          
                                       
                                    
                                    Set of all individual rational cost allocations
                                 
                                 
                                    
                                       
                                          
                                             s
                                             p
                                          
                                       
                                    
                                    Stand-alone cost of partner 
                                          p
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             e
                                             p
                                          
                                       
                                    
                                    Cost excess of cost allocation for partner 
                                          p
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             p
                                             ,
                                             q
                                          
                                       
                                    
                                    Partner indices
                                 
                                 
                                    
                                       
                                          k
                                       
                                    
                                    Vehicle index
                                 
                                 
                                    
                                       
                                          
                                             i
                                             ,
                                             j
                                          
                                       
                                    
                                    Customer indices
                                 
                              
                           
                        
                     
                  

@&#REFERENCES@&#

