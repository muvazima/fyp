@&#MAIN-TITLE@&#Quick segmentation for complex curved surface with local geometric feature based on IGES and Open CASCADE

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A segmentation system for efficient machining of complex curved surface is proposed.


                        
                        
                           
                           Feature size of a surface patch is defined by its boundary information.


                        
                        
                           
                           Surface patches with different feature sizes will be processed by different parameters.


                        
                        
                           
                           Experiment shows efficiency is increased by 28.18%.


                        
                        
                           
                           Estimations of other models predict efficiency can be increased by 20.14% and 12.33%.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Complex curved surface

Local geometric feature

Quick segmentation system

Feature size

IGES

Open CASCADE

@&#ABSTRACT@&#


               
               
                  Complex curved surface parts with local geometric feature are usually critical parts in high-end equipments. However, the processing for this kind of parts is usually difficult or inefficient due to the adoption of difficult-to-machine material and special structure. Current approaches cannot satisfy the rapid development of high-end equipments. Due to the existence of the local geometric feature for the parts, processing such parts with constant machining parameters is less applicative, restricting the improvement of machining efficiency. By separating the local geometric feature and generating tool path for the local geometric feature and the remaining processing area separately, the more efficient machining with variable machining parameters will be obtained for the complex curved surface with local geometric feature. In this way, the quick segmentation for the complex curved surface with local geometric feature is of great importance to the NC machining with variable machining parameters for this kind of parts, and a quick segmentation system is developed based on Initial Graphics Exchange Specification (IGES) and Open CASCADE (OCC) platform in this study. The complex curved surface model in IGES format is firstly imported into the system and then trimmed into independent surface patches. After computing the feature size of each surface patch, the segmentation for the complex curved surface is achieved by sorting and classifying the surface patches according to their feature sizes. Taking the whole impeller with small splitter blades for an example, the experimental result shows that the segmentation of small splitter blades from the whole impeller is successful and a serialized processing program could be generated, and then the whole impeller could be machined precisely and efficiently with NC equipment. In the machining experiment, it is proved that the machining with various machining parameters can improve the efficiency by 28.18% in the comparison experiment, 20.14% and 12.33% in the estimation. The research provides an important foundation for the high quality and more efficient machining of the complex curved surface with local geometric feature.
               
            

@&#INTRODUCTION@&#

Parts with complex curved surface have been widely applied in aerospace, power energy, automobile and other industries. With the continuous improvement in the performance of high-end equipments, the shape of key parts is becoming more and more complex and the accuracy requirement is higher. However, the machining efficiency is much lower to meet the higher accuracy requirement. Some complex curved surface parts with local geometric feature, such as the impeller with small splitter blades, and aero-engine blade with convex, are difficult or inefficient to process on account of the adoption of difficult-to-machine material and special structure. In this situation, traditional processing methods cannot efficiently meet the rapid development of the high-end equipments. With the development of 5-axis NC machining in complex curved surface [1,2], the high efficiency NC machining technology for such parts becomes a popular and difficult issue in the industrial field.

Limited by the processing space, the tool interference [3,4] is more likely to appear in the NC machining of complex curved surface parts with local geometric feature, represented by the impeller with small splitter blades. To avoid the machining interference for the parts with complex curved surface, current researches focus on the tool-path planning and the machining deformation control. Hsueh et al. [5] proposed a tool axis vector control method to eliminate the interference. By establishing an interference detection plane, the scopes of front lean angle and roll angle for the tool axis was calculated and the interference-free range of the tool axis was also acquired. Fleisig and Spence [6] established a constant feed and reduced angular acceleration interpolation algorithm for multi-axis controlling. Lauwers et al. [7] proposed a multi-axis tool path generation algorithm in which the tool axis vector was optimized to avoid the machining collision and the material removal rate along the tool track was maximized. In addition, the finite element technology is commonly used in the analysis of NC machining deformation for the thin-walled parts, and the machining distortion is controlled by modifying the processing parameters and the tool path [8,9].

As for the whole impeller with small splitter blades, the small splitter blades are seen as the local geometric features according to their geometric sizes and spatial sudden changes. The process planning in the NC machining should be under the premise that the processing should satisfy the requirements of the local geometric features. However, the processing area of the local geometric feature may be quite smaller than that of the whole part. So, except for the local geometric feature, the process planning determined is quite conservative for the other processing areas of the whole parts, which severely restricts the improvement of processing efficiency for the whole parts. To improve the processing efficiency of the whole impeller, the small splitter blades should be separated from the whole impeller and the process planning for the small splitter blades and the remaining processing area of the whole impeller should be carried out separately with different machining parameters. Then, a serialized processing program could be generated based on the continuous characteristics of the machining region. As a consequence, the whole impeller could be machined precisely and efficiently with the NC equipment. In this way, the quick segmentation is of great importance to realize the high efficiency machining of complex curved surface with local geometric feature.

The 3D model segmentation for the complex curved surface is to partition a closed polyhedral grid into a limited number of connected sub-meshes based on the geometric or the topological features. Different segmentation results of a complex curved surface model can be obtained by adopting different segmentation principles [10–12]. At present, the quick segmentation technology for 3D model is mainly used in the fields of biomedical stereoscopic image recognition [13] and reverse engineering [14,15], however, rarely used to improve the precision of the NC machining. The commonly used surface segmentation algorithms, such as watershed algorithm [16,17], k-means method [18] and neural network algorithm [19,20], can theoretically achieve the segmentation of the curved surface parts with local geometric feature. But these algorithms are driven by points and complicated computation. The segmentation results cannot be used in the NC machining directly as the conventional CAD/CAM systems are neither good at dealing with point cloud model nor able to generate point cloud model for segmentation. It is unwise to convert an existing CAD model into a large amount of points, segment features based on points, and at last convert the result into post-processing identifiable files, which wastes both precision and efficiency.

To achieve the quick segmentation of the complex curved surface with local geometric feature, a quick segmentation system is proposed by using Initial Graphics Exchange Specification (IGES) as data interface and integrating with the superiority of Open CASCADE (OCC). After segmentation, the local geometric feature is selected and exported based on the proposed segmentation system, and a machining experiment is carried out at last. The research lays the foundation for the high quality and efficient machining of the complex curved surface with local geometric feature.

The quick segmentation for the complex curved surface according to the geometric feature is the key to realize the sub-regional machining of the complex curved surface with sudden change of local geometric feature. A quick segmentation system based on IGES and OCC is developed for the efficient processing of complex curved surface in this section. Using IGES as data interface, the conversion accuracy loss from CAD model to IGES file during the segmentation is negligible [21]. Also integrating with the superiority of OCC, the system is not only flexible but also controllable. The core idea for the quick segmentation system is to express the sub-regional geometric features of the surface model with their feature sizes, which obviously reflect their geometric information. The segmentation is direct and efficient without low-efficient conversion between existed model and point cloud. The segmentation procedure for the CAD model of the complex curved surface with sudden change of local geometric feature is presented in Fig. 1
                     , and the concrete steps are described as follows:
                        
                           Step 1: Preprocessing. This step includes CAD modeling and IGES file generation based on the built CAD model.

Step 2: Segmentation with OCC. In this crucial part, the quick segmentation system is fully functioned. The target IGES file is first imported into the quick segmentation system through the data interface. And then, it is trimmed into independent and disordered surface patches according to the root codes of IGES file. In order to extract a series of same geometric features for processing, feature size is introduced to identify each surface patch. As the boundary information stored in some surface patches might not be sufficient for feature size computation, the boundary information of these surface patches need to be repaired. After repairing and computing, the surface patches are sorted and classified by their feature sizes and the segmentation is at last accomplished. Afterwards, the local geometric features and the remaining processing area are selected separately and exported in IGES format independently.

Step 3: Processing. Corresponding processing programs are generated in CAM environment for the local geometric features and the remaining processing area separately, and then a serialized processing program is generated based on the continuous characteristics of machining regions. So the complex curved surface with sudden change of the local geometric feature could be machined precisely and efficiently with NC equipment.

With the IGES interface for data exchanging among CAD and CAM systems, the development of the quick segmentation system contributes to the formation of a closed-loop manufacturing mode consisting of curved surface parts design, machining areas segmentation and NC machining.

The object-oriented graphics developing platform OCC is an open source CAD/CAM/CAE software platform developed by the Matra Datavision. OCC is well accepted for its functional diversity, stable performance and open source. Compared with some SDKs, OCC can be more efficient in developing independent softwares without any commercial restrictions. And most of the functions can be freely edited by the user. Many mature CAD/CAM systems use OCC as its modeling kernel. The class library of the OCC consists of six modules, just: foundation classes, modeling data classes, modeling algorithm classes, visualization classes, data exchange classes and Open CASCADE application framework. In addition, OCC is able to achieve some advanced operations, such as the display of variable targets, and boolean operation, and support a variety of general data exchange interfaces. The functions used in this study mainly come from the foundation, data exchange and visualization classes.

IGES appears to solve the problem of data transmission between different CAD/CAM systems and it defines a set of commonly used geometric and non-geometric data formats and corresponding file structure to represent the product definition data, which can be exchanged by a variety of physical media. IGES has a broader application in CAD/CAM systems than any other standards and a relatively simple data structure compared with the more superior STEP standard. With the programming instrument of VC6.0, OCC can easily achieve the interaction with IGES files. An impeller model in IGES format is read and displayed in the OCC environment, as shown in Fig. 2
                        . The implementation code is as follows:
                           
                              
                                 
                                 
                                    
                                       Pseudo-code:
                                    
                                 
                                 
                                    
                                       
                                          
                                             IGESControl_Reader Reader;
                                          
                                          
                                          
                                          
                                          
                                          
                                             // Class instance variable defined in OCC
                                          
                                       
                                    
                                    
                                       
                                          
                                             Standard_CString aFileName = (Standard_CString) (LPCTSTR) (“impeller.igs”);
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                             // The path of the IGES file “impeller.igs”
                                          
                                       
                                    
                                    
                                       
                                          
                                             Reader.ReadFile(aFileName);
                                           
                                          
                                          
                                          
                                          
                                          
                                             // The file “impeller.igs” is loaded
                                          
                                       
                                    
                                    
                                       
                                          
                                             Reader.TransferRoots();
                                          
                                          
                                          
                                          
                                          
                                          
                                             // All translatable root codes of the model are translated
                                          
                                       
                                    
                                    
                                       
                                          
                                             TopoDS_Shape aShape = Reader.OneShape();
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                             // All of the translated results are stored in a topological variable
                                          
                                       
                                    
                                    
                                       
                                          
                                             myAISContext->Display(new AIS_Shape(aShape));
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             // The topological variable is translated into a displayable type and displayed
                                          
                                       
                                    
                                 
                              
                           
                        
                     

After importing the IGES model into OCC, the local geometric feature of the complex curved surface model cannot be classified until it is separated into independent surface patch. As IGES file is composed in a certain format [22], the root codes of an IGES file describe every detail character of the complex curved surface model. The first code at the beginning of each line in IGES file is seen as index and can be interpreted according to the certain specification. The separation for the surface patches can be easily achieved according to the root codes of the IGES file.

During the separation, the codes related to the trimmed surface are focused: 144 (Trimmed surface), 128 (NURBS surface), 142 (Parametric curve on the surface), 102 (Composition curve), 126 (NURBS curve). While separating, the two adjacent rows starting with 144 are first sought out. And then, the lines starting with 128 and 142 are focused between every two double 144 lines. After that, other curves 102 and 126 are sought out in the focused codes. Step by step, the composition information of the whole complex curved surface model is clarified. At the same time, the geometric parameters of each code are obtained from the corresponding parameter segment. Parameters of all trimmed surfaces are acquired. Thereby, the IGES model trimming can also be realized. Procedure for the information acquisition of the trimmed surfaces is described in Fig. 3
                        .

While trimming for the surface, the boundary composition curves (102 and 126) can be used as the trimmed curves. If the direction of the inner boundary is consistent with that of the outer boundary, the area surrounded by the inner loop is trimmed. And on the contrary, the area surrounded by the inner boundary is added. Combined with the TopExp_Explorer class provided by OCC, the information of trimmed surface can be quickly identified and all the surface patches will be peeled off from the IGES model accurately. Taking the whole impeller for example, The CAD model of the complex curved surface is finally separated into a set of discrete surface patches, as shown in Fig. 4
                        .

After trimming for the surface, the acquired surface patches are disordered and the same geometric features are spatial scattered. In this situation, scattered surface patches without identities are hard to distinguish, which is unfavorable for post-processing. In order to distinguish one from each other, the feature size of surface patch is introduced. Due to the lack of the boundary information in some surface patches for feature size computation, boundary points are increased to enrich the usable information.

In this study, the feature size of a certain surface patch is seen as the only identity for the surface patch and is described in a special cuboid. Since each surface patch has its own geometric shape, it is easy to find more than one cuboids that can totally contain the surface patch. The smallest cuboid that can just contain the entire surface patch is defined as the characteristic cuboid, presented in Fig. 5
                           . The diagonal of the characteristic cuboid is defined as the first feature size of the surface patch. Under the first feature size, the length, width and height of the characteristic cuboid are defined as the subset feature sizes.

The characteristic cuboid is constructed based on the boundary information of the surface patch. However, a boundary curve cannot be directly used, because curves are usually described in parameters not direct geometric information. As is known that a curve can be identified by its node points, these node points can be seen as a simplified boundary. The geometric information of these points can be effectively used in the constructing of characteristic cuboid. Based on the simplified boundary, the maximum and minimum coordinate values are obtained when all node points are compared. And then, one point consist of the maximum coordinate values and one point consist of the minimum coordinate values are constructed. Between these two points, the characteristic cuboid along the coordinate axis is built, as shown in Fig. 5. The detection of boundary points can be simplified by the TopExp_Explorer class provided by OCC, which helps to detect the topological information of the surface patch. During the detection, the topological information is translated into parameter information and the coordinate values of boundary points are acquired and compared. Accordingly, the characteristic cuboid is obtained.

Since feature size is the only identity of a surface patch, the accuracy of the extraction for the feature size is crucial to the segmentation result. Due to the data compression technique of IGES format, the stored controlling items of some surface patches (such as cylindrical surface and annular surface) are too simple for feature size extraction. For example, only four coplanar points are stored for each blade surface of the whole impeller, as shown in Fig. 6
                           . As a consequence, the constructed characteristic cuboid brings huge error in feature size extraction which may mislead the segmentation. In this case, more points are needed to construct a more reliable characteristic cuboid and acquire a more accurate feature size. By using the detected vertexes and the parameters of boundary curve, more points can be inserted on the boundary.

Before the interpolation, a NURBS curve is first constructed to approximate the boundary curve. The minimum distance di
                            from the original node point Pi
                            (i
                           =0, 1, 2, …, n) to the NURBS curve is expressed as,
                              
                                 (1)
                                 
                                    
                                       
                                          d
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          Δ
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          Δ
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          Δ
                                          
                                             
                                                z
                                             
                                             
                                                i
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 Δ
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 Δ
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                              
                            and 
                              
                                 Δ
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                              
                            are three directional distances from Pi
                            to the closest point Pc
                            on the approximating curve.

As is shown in Fig. 7
                           , Pc
                            is a point on the approximating NURBS curve. When the tangential direction of Pc
                            is normal to the direction of 
                              
                                 
                                    
                                       
                                          
                                             P
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             P
                                          
                                          
                                             c
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                              
                           , the closest point to Pi
                            is found.

And the approximation error is described as,
                              
                                 (2)
                                 
                                    err
                                    =
                                    
                                       max
                                    
                                    {
                                    
                                       
                                          d
                                       
                                       
                                          i
                                       
                                    
                                    }
                                    ,
                                    
                                    (
                                    i
                                    =
                                    0
                                    ,
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    n
                                    )
                                 
                              
                           
                        

To guarantee the accuracy of the inserted points, the approximation error of the boundary curve should be controlled under a certain limitation. The approximation error in this study is the conversion error from CAD model to IGES file, as the boundary curves detected from the IGES file are approximating curves.

A general boundary curve can be described in form of Eq. (3) and a segment length of the boundary curve can be calculated by Eq. (4).
                              
                                 (3)
                                 
                                    C
                                    (
                                    u
                                    )
                                    =
                                    (
                                    x
                                    (
                                    u
                                    )
                                    ,
                                    y
                                    (
                                    u
                                    )
                                    ,
                                    z
                                    (
                                    u
                                    )
                                    )
                                    ,
                                    
                                    u
                                    ∈
                                    [
                                    a
                                    ,
                                    b
                                    ]
                                 
                              
                           
                           
                              
                                 (4)
                                 
                                    s
                                    (
                                    U
                                    )
                                    =
                                    
                                       ∫
                                       
                                          a
                                       
                                       
                                          b
                                       
                                    
                                    
                                       
                                          
                                             
                                                d
                                             
                                             
                                                2
                                             
                                          
                                          x
                                          +
                                          
                                             
                                                d
                                             
                                             
                                                2
                                             
                                          
                                          y
                                          +
                                          
                                             
                                                d
                                             
                                             
                                                2
                                             
                                          
                                          z
                                       
                                    
                                    =
                                    
                                       ∫
                                       
                                          
                                             
                                                u
                                             
                                             
                                                0
                                             
                                          
                                       
                                       
                                          U
                                       
                                    
                                    ‖
                                    
                                       
                                          C
                                       
                                       
                                          ′
                                       
                                    
                                    (
                                    u
                                    )
                                    ‖
                                    ·
                                    du
                                 
                              
                           
                           
                              
                                 (5)
                                 
                                    F
                                    (
                                    u
                                    )
                                    =
                                    s
                                    (
                                    u
                                    )
                                    -
                                    
                                       ∫
                                       
                                          
                                             
                                                u
                                             
                                             
                                                0
                                             
                                          
                                       
                                       
                                          u
                                       
                                    
                                    ‖
                                    
                                       
                                          C
                                       
                                       
                                          ′
                                       
                                    
                                    (
                                    u
                                    )
                                    ‖
                                    ·
                                    du
                                 
                              
                           
                           
                              
                                 (6)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               F
                                                               (
                                                               u
                                                               )
                                                               =
                                                               s
                                                               (
                                                               U
                                                               )
                                                               -
                                                               
                                                                  ∫
                                                                  
                                                                     
                                                                        
                                                                           u
                                                                        
                                                                        
                                                                           0
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     u
                                                                  
                                                               
                                                               ‖
                                                               
                                                                  
                                                                     C
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               (
                                                               u
                                                               )
                                                               ‖
                                                               ·
                                                               du
                                                               =
                                                               0
                                                            
                                                         
                                                         
                                                            
                                                               s
                                                               (
                                                               U
                                                               )
                                                               =
                                                               L
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             ⇒
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     F
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                               =
                                                               -
                                                               ‖
                                                               
                                                                  
                                                                     C
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                               ‖
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               =
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     0
                                                                  
                                                               
                                                               +
                                                               (
                                                               L
                                                               /
                                                               S
                                                               )
                                                               ·
                                                               abs
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     ∞
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     0
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             ⇒
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                               -
                                                               F
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                               =
                                                               
                                                                  
                                                                     F
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                               ·
                                                               (
                                                               u
                                                               -
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               y
                                                               =
                                                               0
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             ⇒
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               =
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               -
                                                               F
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                               /
                                                               
                                                                  
                                                                     F
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     F
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               )
                                                               =
                                                               -
                                                               ‖
                                                               
                                                                  
                                                                     C
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     u
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               )
                                                               ‖
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      →
                                                   
                                                   
                                                      …
                                                      …
                                                   
                                                   
                                                      Newton
                                                      –
                                                      Raphson
                                                      
                                                      Method
                                                   
                                                
                                             
                                             U
                                             =
                                             
                                                
                                                   u
                                                
                                                
                                                   n
                                                
                                             
                                             -
                                             F
                                             (
                                             
                                                
                                                   u
                                                
                                                
                                                   n
                                                
                                             
                                             )
                                             /
                                             
                                                
                                                   F
                                                
                                                
                                                   ′
                                                
                                             
                                             (
                                             
                                                
                                                   u
                                                
                                                
                                                   n
                                                
                                             
                                             )
                                             ⇒
                                             F
                                             (
                                             U
                                             )
                                             =
                                             0
                                          
                                       
                                    
                                 
                              
                           where S is the total length of the boundary, u
                           0 and u
                           ∞ are the parameters of the boundary endpoints, ui
                            is the starting point of the iteration, un
                            is the nth iteration parameter.

When the length L is given, the parameter U of the inserted point can be computed by using Newton–Raphson method as is described in Eq. (6), and the process can be simply expressed as Eq. (7).
                              
                                 (7)
                                 
                                    U
                                    =
                                    
                                       
                                          s
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    (
                                    L
                                    )
                                 
                              
                           
                        

And then, the coordinate value of this point can be subsequently obtained according to the parameter U.

The number of the node points added has a huge effect on computation duration. As is shown in Fig. 8
                           , in general terms the more points added the more accurate characteristic cuboid is, but obviously the less efficient the operation is. Assuming that the value of 500 points is the exact feature size, when 7 points added, the accuracy error is 1.37% and the computation time is 812ms. In this situation, a compromise is made between the efficiency and the accuracy of the characteristic cuboid. In addition, the remaining accuracy error of the extraction can be eliminated by a tolerance value in the classification process of the surface patches, which will be described in the following section.

Given the specified length, equal division points are inserted on the boundary of the surface patch and the characteristic cuboid constructed based on the repaired boundary is computed.

The pseudo-code for the information repairing of boundary curve is summarized as follows.
                              
                                 
                                    
                                    
                                       
                                          Pseudo-code:
                                       
                                    
                                    
                                       
                                          
                                             
                                                Dim start As Double
                                             
                                             
                                             
                                             
                                             
                                             
                                                // Parameter of the start point on the boundary curve
                                             
                                          
                                       
                                       
                                          
                                             
                                                Dim end As Double
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                                // Parameter of the end point on the boundary curve
                                             
                                          
                                       
                                       
                                          
                                             
                                                Dim Length As Double
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                                // Length of the boundary curve
                                             
                                          
                                       
                                       
                                          
                                             
                                                Dim P As Point
                                             
                                             
                                             
                                             
                                             
                                             
                                                // The equal division point of the boundary curve
                                             
                                          
                                       
                                       
                                          
                                             
                                                Dim L As Const
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                             
                                                // L is the datum length which is the estimated first feature size of the impeller
                                             
                                          
                                       
                                       
                                          
                                             
                                                Dim f As Const
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                                // The number of the divided curves max(f) = 8
                                             
                                          
                                       
                                       
                                          
                                             
                                                Dim n As Integer
                                             
                                          
                                       
                                       
                                          
                                             
                                                Dim l As double
                                             
                                          
                                       
                                       
                                          
                                             
                                                Dim sys As GProp_GProps
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                                // An OCC class, which can help compute the curve’s length
                                             
                                          
                                       
                                       
                                          
                                             
                                                BRepGProp::LinearProperties(aBoudary,sys)
                                              
                                             
                                             
                                             
                                             
                                                // Associate the boundary properties with sys
                                             
                                          
                                       
                                       
                                          
                                             
                                                BRep_Tool::Curve(edge,start,end)
                                             
                                             
                                             
                                             
                                             
                                                Acquire parameters of the edge’s terminal vertexes
                                             
                                          
                                       
                                       
                                          
                                             
                                                Length = System.Mass()
                                             
                                             
                                             
                                             
                                             
                                                // Acquire the length of the boundary curve
                                             
                                          
                                       
                                       
                                          
                                             
                                                If (Length/L)>0.7 then f=8
                                              
                                             
                                                // The number of the divided curves is related to the datum length
                                             
                                          
                                       
                                       
                                          
                                             
                                                Else
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                                If (Length/L)>0.5 then f=6
                                             
                                          
                                       
                                       
                                          
                                             
                                                Else
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                                If (Length/L)>0.3 then f=4
                                             
                                          
                                       
                                       
                                          
                                             
                                                Else
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                                if (Length/L)>0.1 then f=2
                                             
                                          
                                       
                                       
                                          
                                             
                                                Else
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                                continue
                                             
                                          
                                       
                                       
                                          
                                             
                                                EndIf
                                             
                                          
                                       
                                       
                                          
                                             
                                                For n = 1 to f-1
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                                l =Length∗n/f;
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                                CPnts_AbscissaPoint Para(edge, l, start);
                                             
                                          
                                       
                                       
                                          
                                             
                                                // An OCC class, which helps compute the parameter of point which is l length from the “start”
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                                If Para.IsDone() // If the computation is successful, return true
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                BOPTools_Tools::PointOnEdge(edge,Para.Parameter(),P);
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                                // Point P is inserted on the boundary curve
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                EndIf
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                                (Pmax, Pmin) = MaxMinCoordinateValue(P, Pmax, Pmin)
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                                // Acquire the points with the maximum and minimum coordinate values
                                             
                                          
                                       
                                       
                                          
                                             
                                                EndFor
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

In this part, the segmentation of the complex curved surface is accomplished when all the surface patches are divided into some groups according to the feature size. Assuming that the total number of the surface patches is Z, all the surface patches can be sorted according to their first feature sizes by using Bubble Sort algorithm. Part of the whole impeller is shown in Fig. 9
                        a, and the sorted geometric features are presented in Fig. 9b. Actually, not the surface patches but the pointers pointing to the surface patches are involved in the sorting. After sorting, the feature size obtained from the first pointer is the maximum, and the last is the minimum.

On the basis of the sorting, the surface patches with the same feature size are closed to each other and should be classified into one group with the same tag. Considering that the first feature sizes of same patches may not be completely equal, which is mentioned before, a similarity tolerance is acceptable. So the feature sizes are considered the same within the tolerance. The default tolerance selected in this paper is 0.05. ID(m) expresses the tag value of the mth surface patch. The procedure of classification is described in Fig. 10
                        .

After classification, the segmentation is accomplished. If the segmentation result does not satisfy the requirement, the tolerance may be appropriately adjusted. If even the tolerance cannot match, the subset feature sizes can be used to subdivide under the primary segmentation.

The quick segmentation can be achieved for complex curved surface with local geometric feature based on the developed quick segmentation system. The obtained segmentation result taking the whole impeller for an example is shown in Fig. 11
                     , and surface patches with the same tag are displayed in the same color.

As is discussed in the paper, the small splitter blades are seen as the local geometric features which will restrict the machining efficiency of the whole impeller. Based on the segmentation, the small splitter blades are extracted in the quick segmentation system, presented in Fig. 12
                     a. And the remaining machining area is separately extracted, presented Fig. 12b.

The quick segmentation system developed in this study can also be applied with good adaptation in the segmentation of the other models. The segmentation results are shown in Fig. 13
                     .

As for a very curved surface patch, there may be more than one local features on the surface. The identification of these features can also be realized by adding trimming curves at specified positions during the CAD modeling. These trimming curves can be regarded as boundary curves. Taking the blade of the turbine present in Fig. 13a for instance, it is segmented into three parts with the added trimming curves. Also, the identification of this kind can be added to the system in the further study. After selection and exportation, corresponding processing programs are generated and optimized for both the local features and the remaining area, and then a combined serialized processing program is generated based on the continuous characteristics of machining regions, as the blade in Fig. 13a. In this way, the overall quality and efficiency of machining for the whole impeller could be improved.

To prove the improved machining efficiency based on the segmentation of complex curved surface with local geometric feature, a processing experiment is carried out in this section.

The 6061 aluminum is chosen as the processing material. In order to compare conveniently, the structure of the processing model in the experiment includes two identical test pieces (just test piece A and test piece B) with centrosymmetricly distribution, and the test piece is similar as aero-engine blade with convex, as shown in Fig. 14
                     . The total dimension of the processing model is 30mm×60mm×20mm. The surface roughness is required under Ra
                        1
                        Ra is the roughness symbol of American standard. Its value is the arithmetic average of the absolute values of the roughness profile ordinates.
                     
                     
                        1
                      1.6. In order to achieve this goal, the target scallop height is set at 0.004mm.

For each test piece of the processing model, the areas to be processed can be divided as a big curved surface and a convex. The convex on the big curved surface is seen as the local geometric feature. The diameter of the machining tool for the convex should be smaller than 6mm considering its smallest fillet radius. For this reason, if the whole test piece is processed using the tool selected for the convex, the processing for the big curved surface is quite conservative and the machining efficiency is directly restricted.

To realize the high-efficiency processing, the quick segmentation system developed in this study is adopted. The processing model is first converted into IGES format and then imported into the quick segmentation system. Then, the processing model is separated into isolated surface patches according to the information of trimmed surface contained in IGES. Afterwards, the feature size of each surface patch is computed after the boundary information is enriched. Finally, the surface patches with similar feature sizes are classified into one group and the segmentation result is presented in Fig. 15
                     .

As is discussed, the convex restricts the improvement of processing efficiency. Therefore, one of the convex is selected and exported alone for the comparing, as shown in Fig. 16
                     a. The remaining machining area is present in Fig. 16b. The machining area of test piece A (shown in Fig. 16a) is machined with variable machining parameters, and the machining area of test piece B (shown in Fig. 16b) is machined with the constant machining parameters.

For the comparison experiment, the machining parameters of the convexes are the same considering the limitation of machining tool. However, the diameter of the machining tool selected is 8mm for the remaining machining area of test piece A, which will improve the machining efficiency without exceeding the roughness limitation, while for test piece B, the diameter of the machining tool is still 6mm for the constant machining parameters. The machining parameters selected for both test pieces are presented in Table 1
                     .

The processing time of the convex is not concerned in this study as both test pieces are the same, and the processing time of the remaining machining areas are concerned, where different machining tools are applied. The processing time of test piece A is 2h 16min 02s, and the processing time of test piece B is 2h 54min 22s. Detected by the form talysurf, the roughness of test piece A is Ra 1.36, and the roughness of test piece B is Ra 1.08. It can be obvious found that the efficiency of the remaining machining area is increased by 28.18% by adopting variable machining parameters. Although there is an accuracy loss, the processing quality still meets the machining requirement.

As for the impeller (Fig. 11) and the blades of the turbine (Fig. 13), the efficiency improved can be estimated when using the same parameters as the experiment. For the impeller, the small splitter blades (Fig. 12a) as the local feature might be processed by the smaller tool and the rest should be processed by the bigger tool. For a blade of the turbine, both ends might be processed with the smaller tool and the rest should be with the bigger tool. According to the machining areas (shown in Fig. 17
                     ), the processing time can be roughly estimated and the increased efficiency can subsequently acquired.

The increased efficiency of the impeller is
                        
                           
                              
                                 
                                    (
                                    3391.81
                                    +
                                    5432.81
                                    +
                                    2746.51
                                    )
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    (
                                    1440.73
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    10462
                                    
                                    s
                                    )
                                 
                                 
                                    (
                                    3391.81
                                    +
                                    5432.81
                                    )
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    (
                                    1440.73
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    8162
                                    
                                    s
                                    )
                                    +
                                    2746.51
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    (
                                    1440.73
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    10462
                                    
                                    s
                                    )
                                 
                              
                              -
                              1
                              =
                              20.14
                              %
                              .
                           
                        
                     The increased efficiency of the blade is
                        
                           
                              
                                 
                                    (
                                    735.836
                                    +
                                    737.478
                                    )
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    (
                                    1440.73
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    10462
                                    
                                    s
                                    )
                                 
                                 
                                    735.836
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    (
                                    1440.73
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    8162
                                    
                                    s
                                    )
                                    +
                                    737.478
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    (
                                    1440.73
                                    
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                    /
                                    10462
                                    
                                    s
                                    )
                                 
                              
                              -
                              1
                              =
                              12.33
                              %
                              .
                           
                        
                     
                  

From the experiment and the estimation, the conclusion that the quick segmentation system helps to improve the machining efficiency is drawn.

@&#DISCUSSION@&#

There may some concerns to be discussed in this section.

As is well known that curvature is the most important intrinsic geometric characteristic of curved surface, it reflects the continuity, smoothness and bending degree of the surface. It also determines the machining parameters. But it is not preferred in the segmentation for the following reasons. Firstly, on a geometric model, there may be sudden changes in geometric shapes, but curvatures are always continuous. So, the trimming curves on specified curvatures are hard to identify, because it lacks principles in determining exact curvature values. Next, the number of boundary curves is limited, but curvatures are infinite. It is easy to traverse all boundaries, but impossible to traverse all curvatures. Also, the information extraction of a boundary is much faster than curvatures of a surface patch. Therefore, the selection of boundary curve is more practical and efficient, which also leads meaningful segmentations.

When IGES model is trimmed, some small, useless and disturbing surface patches are generated. It is important to remove them before post-processing. As the feature sizes of these patches are even quite smaller than that of others, a limited feature size can be set to eliminate these small patches during the sorting process.

There may also be concerns in the definition of characteristic cuboid in this study. As the cuboid is always align with coordinate system, discrepancies may occur between the characteristic cuboid and real bounding box. But actual segmentation results (Figs. 11, 13 and 15) show that the definition with reasonable tolerance value is qualified for the quick segmentation. Though the real bounding box of a surface patch can be most accurate characteristic cuboid, the computation amount will largely increase and is less efficient. Not only from the angle of accuracy but also from the efficiency, additional points are inserted on the boundary instead of the surface during the boundary information repairing. Because, when surface interpolation is taken, the amount of the parameters to be determined is as twice as that of curve interpolation. And the amount of the inserted points on surface is much more than that on curve. The surface interpolation mechanism is quite similar with the mesh generation, which needs huge effort and produces only a little effect to current segmentation system. In addition, segmentation can be revised manually, when some pathological cases appear. Permissions are given to edit specified surface patch manually in the system. And also, more accurate and efficient methods in feature size acquisition may occur in the further study.

Besides, local geometric feature can be recognized either automatically or manually. The ratio of the feature size of the local geometric feature can be beforehand estimated and adjusted according to segmentation result. Or, man can select the IDs of the targets from the segmentation result or just select the surface patches needed.

@&#CONCLUSIONS@&#

The quick segmentation system is of great importance to the high efficiency processing of parts with local geometric features. Using IGES as data interface, the quick segmentation system based on OCC and VC6.0 is developed, which is successfully applied in the segmentation of the whole impeller and other IGES models. Firstly, the target model is imported into the quick segmentation system through the IGES data interface. Subsequently, the model is separated into independent small surface patches according to the trimmed surface information of the IGES file. Then, the boundary information of some surface patches is repaired as the stored information is too simple to construct the reliable characteristic cuboid. After computing the feature size, the surface patches are sorted and classified according to their feature sizes. And finally, the segmentation is achieved. Local geometric features are extracted and the independent process planning is carried out for both the local geometric features and the remaining machining area. Afterwards, a combined serialized processing program based on the continuous characteristics for the machining region is generated and the machining efficiency is proved to be largely increased. Comparison experiment shows that the machining efficiency is increased by 28.18%, 20.14% and 12.33% in the estimation. This research achievement lays the foundation for high quality and efficiency processing of the complex curved surface with local geometric feature. Meanwhile, on the basis of data interface between the segmentation system and other CAD/CAM systems, a closed-loop manufacturing mode of curved surface parts design, processing area segmentation and NC processing could be further formed.

@&#ACKNOWLEDGMENTS@&#

The project is supported by the National Natural Science Foundation of China (No. 51205041), Science Fund for Creative Research Groups (No. 51321004), Program for New Century Excellent Talents in University (NCET-13-0081), Basic Research Foundation of Key Laboratory of Liaoning Educational Committee (No. LZ2014003), Open Research Fund of Key Laboratory of High Performance Complex Manufacturing (No. Kfkt2013-06) and the Fundamental Research Funds for the Central Universities (No. DUT14QY25, DUT14RC(4)16). The authors wish to thank the anonymous reviewers for their comments which led to improvements of this paper.

@&#REFERENCES@&#

