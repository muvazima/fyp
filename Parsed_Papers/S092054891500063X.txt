@&#MAIN-TITLE@&#An efficient and privacy-preserving location sharing mechanism

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We make a further research on privacy-preserving location sharing on mobile online social networks.


                        
                        
                           
                           BMobishare is proposed, a security improved mechanism which employs dummy query and the Bloom Filter to protect privacy.


                        
                        
                           
                           A performance evaluation that attests to the practicality of our solution.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Mobile online social networks

Location sharing service

Privacy-preserving

The Bloom Filter

@&#ABSTRACT@&#


               
               
                  The rise of Internet of Things has been improving the so-called mobile Online Social Networks (mOSNs) in sense of more ubiquitous inter-communication and information sharing. Meanwhile, location sharing service is known as the key cornerstone of mOSNs. Unfortunately, location sharing has also caused similarly serious concerns on the potential privacy leakage. We propose BMobishare, a security enhanced privacy-preserving location sharing mechanism. It employs the Bloom Filter to mask sensitive data exchanges, such that exchange of both sides cannot obtain unauthorized privacy information. Analyses and evaluations show that BMobishare's enhanced location sharing procedure achieves significantly better performance when compared to existing approaches.
               
            

@&#INTRODUCTION@&#

The Internet of Things (IoT) integrates a large number of technologies and envisions a variety of things or objects, such as Radio Frequency IDentification (RFID) tags, sensors, mobile phones around us. Through unique addressing schemes, they are able to interact with each others and cooperate with their neighbors to reach common goals [1]. In combination with IoT, a new mode of the social networks services known as the mobile Online Social Networks or mOSNs, have gradually emerged, in which IoT is to enable more convenient user interactions for either maintaining or establishing social relationships. For example, RFID technique can be used for automatic updating of people's social activities in applications such as Twitter [2].

Compared with the traditional social network, mOSNs are not restricted by time or location, as mobile devices are capable of accessing the Internet over WiFi or cellular networks in real time. Since mOSNs can break the boundaries of time and space, no matter when and where they are, people can communicate with their friends in social networks [3].

The mOSNs service consists of two parts, which support the location based services and the social network services. The location based services offer users the points of interest close to their locations such as restaurants, gas stations, shopping markets and social events. By now, instead of inputting locations done by users' themselves, smart phones and tablets can determine their own locations through GPS or cellular positioning technology. The mOSNs not only allow the user to share his location information by means of ‘check-in’ (which refers to an event when their time and location are recorded [4]), but also allow the user to use location sharing services to find their friends nearby [5]. With billions of people as members, mOSNs have pervaded all aspects of our daily life, gone beyond general social and information sharing platform, and become a kind of indispensable tool for our communication in work and life.

Location sharing is a fundamental component of mOSNs. However, with great convenience, it also inevitably raises significant privacy concerns [6]. This is because in mOSNs, location information is associated with user's social network identity information, which will make the protection of user's privacy information more and more complex and difficult. For example, it is likely that the user's location may give away the sensitive private information, such as the personal data, living habits and health conditions [7], especially at the time when they are in the control of the adversaries. Since the current mOSNs are under centralized control, the users' location privacy data will be compromised if the location information collected by mOSNs are inadvertently leaked or under the control of malicious attackers [8]. Therefore, how to enjoy convenient service without leaking their sensitive private information has become a more and more popular problem concerned by researchers. Previous researches have shown that the users tend to be hesitant to share their locations if privacy is not guaranteed sufficiently [9]. To address this issue, some researches have been conducted about hiding the relations between user identity and location, including location anonymity, identity anonymity and so on.

Anonymity has proved to be an effective technique for privacy protection. Its essence is to let mobile devices (or the trusted third party) process their queries in a way that conceals user's real identity and location, before sending the processed queries to service provider. There are at least two kinds of anonymous methods:
                        
                           •
                           
                              K-anonymity, which is to obfuscate users' real location/identity by establishing cloaking regions covering the records of k anonymous users, which makes the attacker fail to tell which is true. It was Sweeney who proposed K-anonymity technology in 2002 [10], and Gruteser et al. [11] who firstly used it to locate privacy protection. In 2014, Lu et al. proposed a privacy-preserving framework, called PLAM [12], which employs an aggregation protocol with K-anonymity and L-diversity properties.

Anonymous by encryption, which is considered to be the most effective means of privacy protection. For example, the encryption method based on Hilbert curves has been proposed by Khoshgozaran [13], who used Hilbert curves to transform original location to an encoded location. In addition, Rahman et al. [14] also proposed privacy context obfuscation which is used obscure information based on the parameters which the users themselves set, such as user identity, the time of day and so on.

In social network services, privacy protection must be flexible to sharing location. In 2007, SmokeScreen [15] put forward a mechanism with shares presence among trusted friends and untrusted strangers by opaque identities. The previous work [16] has resolved the problem of how to flexibly handle location sharing in a privacy-preserving way. Because of the strictness of the method, they can't be used directly. Recently, Wei et al. proposed the Mobishare mechanism [17] which provides flexible privacy-preserving location sharing among both trusted social relations and untrusted strangers in mOSNs. Their mechanism is in fact an extension of SmokeScreen and they used dummy technique (e.g. real fake identity) to prevent the location based services provider and the social network services provider from obtaining users' complete identities and locations information. Liu et al. made an improvement on the basis of Mobishare. They used the broadcast encryption to preserve users' location privacy and allowed the users to add or remove friends [18].

However, these mechanisms are not perfect enough. It is noted that in the aspect of location sharing among trusted social relations, the user's real fake identity will suffer a potential risk of leakage, especially when we consider many queries without location updates. The location based services provider is easy to identify which record is true. More seriously, through multiple attacks, the location based services provider is able to obtain all the friends' relations of users and their locations in real time. Li et al. used the Paillier Cryptosystem to solve this problem [19]. They proposed a security improved mechanism named Mobishare+, which employs private set intersection protocol to prevent the social network server and the location server from learning individual information. Although security has been improved, this scheme needs to perform a lot of complex encryption and decryption operations which incurs appreciably computation overhead. There are still other methods based on encryption and decryption operation and have also been applied to the privacy protection in cloud environment [20–22].

Motivated by the above issues, a further research was made on privacy-preserving location sharing on mOSNs and a new protection mechanism based on Mobishare, which is named BMobishare, was proposed. Actually, BMobishare is generally identical with Mobishare in system architecture. But compared with the previous mechanism, BMobishare uses dummy query information and allows us to protect user's real fake identity. Moreover, the Bloom Filter [23] between the location based service provider and the social network service provider is also employed, which hides sensitive private information and ensure that nothing individual will be leaked to each other. Finally, analysis and evaluations were provided to attest that BMobishare can make the information processing more secure and effective.

As shown in Fig. 1
                        , the scenario of location sharing consists of four entities in mobile online network. A summary of the notations used in this scenario is given in Table 1
                        .
                           
                              1.
                              User is able to access the Internet with wireless techniques such as 3G/4G by using his mobile devices. As a result, user can share his own location and query nearby his friends' locations.

SNS can be a server of any existing mOSNs that want to provide the location sharing service. It manages user's identity-related information, e.g. user's personal profiles and friend-list, etc.

LBS is able to store user's anonymized location update information and provides location based services according to users' request with nearby persons' locations in real time.

CT is an entity, which helps user communicate with SNS and LBS. The wireless enhanced rules of the Federal Communications Commission (FCC) require that a cellular tower can locate the subscribed mobile phones with an accuracy of 300m.

We assume that LBS, SNS and CT are connected through high-speed secure links. SNS can't identify the communicating CT by observing the IP addresses in the connections.

Based on the proposed system architecture, there are four main workflows described as following:
                           
                              1.
                              User firstly needs to register his profile for the location based service at the SNS and local CT. We assume that each user has a unique identifier at the SNS. Each CT has a unique identifier too. During registration, user must define his access control policy for his shared location, which will be stored at SNS.

Occasionally, or when arriving at a new place, user updates his location information at LBS through SNS.

User queries LBS and SNS through local CT when he wants to know his nearby friends' current location information. Through a series of processing, user will receive the locations of friends whose specified access control policy is satisfied by the querying user.

User queries LBS and SNS through local CT, when he wants to know nearby strangers' current location information. Through a series of processing, user will receive the locations of some strangers whose specified access control policy is satisfied by the querying user.

We formalize location sharing system in mobile online social network as follows:

Let us suppose that Φ={ID
                        1,
                        ID
                        2,…,
                        ID
                        
                           n
                        } to be the identity set of all the registered users involved in the location sharing service. SNS stores all social relation networks Ψ=(V,
                        E) on Φ, where V
                        ⊆Φ is an identity point set and E
                        ⊆
                        V
                        ×
                        V is a set of relationship as edges in Ψ. Without privacy concerns, we consider that a location database in the form of {(ID,(x,
                        y),
                        df
                        
                           ID
                        ,
                        ds
                        
                           ID
                        )}
                           ID
                           ∈Φ is stored by LBS, where (x, y) is the user's current location coordinates, dfID
                         is the threshold distance within which user agrees to share location with his friends, and dsID
                         is the threshold distance within which user is willing to share location with strangers.

The main challenge is to query the current location information of friends or strangers in certain ranges.
                           
                              •
                              To query friends' location within a certain range qf, an authorized user A will submit a query in the form of (ID
                                 
                                    A
                                 ,
                                 qf) to obtain all user A's nearby friends' locations {(ID
                                 
                                    i
                                 ,(x
                                 
                                    i
                                 ,
                                 y
                                 
                                    i
                                 ))} satisfying the conditions (ID
                                 
                                    A
                                 ,
                                 ID
                                 
                                    i
                                 )∈Ψ.
                                 E and dist((x
                                 
                                    A
                                 ,
                                 y
                                 
                                    A
                                 ),(x
                                 
                                    i
                                 ,
                                 y
                                 
                                    i
                                 ))⩽
                                 min(qf,
                                 df
                                 
                                    i
                                 ), where (x
                                 
                                    A
                                 ,
                                 y
                                 
                                    A
                                 ) is user A's current location, dist(.,.) returns the distance between the its inputs and min(.,.) is a minimum value function.

To query strangers' location within a certain range qs, an authorized user A will submit a query in the form of (ID
                                 
                                    A
                                 ,
                                 qs) to obtain all close strangers' locations {(ID
                                 
                                    i
                                 ,(x
                                 
                                    i
                                 ,
                                 y
                                 
                                    i
                                 ))} with dist((x
                                 
                                    A
                                 ,
                                 y
                                 
                                    A
                                 ),(x
                                 
                                    i
                                 ,
                                 y
                                 
                                    i
                                 ))⩽
                                 min(qs,
                                 ds
                                 
                                    i
                                 ).

Within the four entities involved, CT is assumed as a trusted entity. In other words, it is not necessary to investigate how to improve location privacy within the cellular networks. For each mobile phone the cellular tower generally knows the owner's name and location in real time, therefore, there is no attempt to conceal the devices' locations from the cellular networks. What we are concerned about are the security risks from LBS and SNS, and mobile users.

We assume that LBS and SNS are both ‘honest but curious’. In other words, both LBS and SNS are supposed to follow agreement mechanism, but they try to find out more private information as possible. We further suppose that LBS or SNS may be compromised and controlled by an adversary who seeks to link users' identities with their locations. However, the adversary can't control both LBS and SNS. That is to say, LBS and SNS cannot collude with each other. Actually, it is almost impossible that the two servers can be controlled by the same adversary at the same time. So this assumption is reasonable.

Besides, some users may be dishonest, who try to unauthorized access to the server and want to obtain location information of target users. LBS or SNS may collude with these dishonest users. For example, as an employee of the location server company or the social network server company, he may register for the location sharing service to collude with the server for other users' location information.

We review the original Mobishare which utilizes the dummy technique to achieve the expected goal. In order to prevent the LBS from learning the user identity information, CT picks k fake IDs to construct dummy location updates. One of the k fake IDs (real fake identity) is used to replace the user's identity in the real location update, the other k
                        −1 fake IDs are used in fake location updates. This approach seems to be effective and LBS has little possibility to choose real corresponding relation. Nevertheless, in friends' location query, SNS replaces the user's identity to the real fake identity and sends it to LBS. LBS only needs to record it and LBS can easily tell each of them which is an underlying real location record in its local database after a period of time.

What is more serious is that SNS sends friend-list to LBS for each query of friends. Although SNS translates all identity in friend-list to real fake identity, it, as said above, is a potential risk of leakage, especially when many queries without location updates are considered. LBS can easily distinguish the user's social network through multiple attacks. LBS can also use de-anonymization technique [24] to obtain any friend's real identity and location information.

BMobishare mechanism uses one irreversible hash function and two cryptography schemes which include both public key encryption and symmetric key encryption, both of which comprise an algorithm to encrypt plaintext and an algorithm to decrypt ciphertext. Public key encryption is a technique that uses a pair of asymmetric keys for encryption and decryption, such as RSA. Symmetric key encryption uses a single secret key to encrypt and decrypt data, such as AES.

In addition, it also contains the Bloom Filter which is used to hide sensitive private information of LBS and SNS, and ensure that anything individual information will not be leaked to each other.

The principle of symmetric key encryption is to use a single secret key to encrypt and decrypt data, such as AES. A symmetric key encryption algorithm is composed by three sections that work as follows:
                              
                                 •
                                 KeyGen (): generate and output a randomly selected key key.

Encrypt (key, m): input a key key and a plaintext m, output a encrypted ciphertext c.

Decrypt (key, c): input a key key and a ciphertext c, output either a plaintext m or a decryption error message.

Public key encryption is a technique that uses a pair of asymmetric keys for encryption and decryption, such as RSA. A public key encryption algorithm consists of four main functions:
                              
                                 •
                                 Setup (sp): input a security parameter sp, generate and output a master key mkey.

KeyGen (mkey, ID): input a user identifier ID and a master key mkey, generate and output a user's public key PubKey and private key PriKey.

Encrypt (PubKey, m): input a user's public key PubKey and a plaintext m, output a encrypted ciphertext c.

Decrypt (PriKey, c): input a user's private key PriKey and a ciphertext c, output either a plaintext m or a decryption error message.

Before providing the BMobishare in detail, we first introduce how the Bloom Filter (BF) is established.

In 1970, Howard Bloom proposed the Bloom Filter which is a data structure used to efficiently represent and test sets [23]. It is often used to check whether an element is present in a given test set. Let us assume a set X
                           ={x
                           1,…,
                           x
                           
                              n
                           } of n elements, and an array of m bits are first set to 0.

Let us use the notation BF (j) to denote the position j in the Bloom Filter. The Bloom Filter uses q independent cryptographic hash functions h
                           1,…,hq
                            with range 1⩽
                           h
                           ⩽
                           m, salted with nonce random [25] so that it cannot be tracked over time. For each element x
                           ∈
                           X, BF(h
                           
                              i
                           (x)) is set to 1 for 1⩽
                           i
                           ⩽
                           q. Note that a position may be set to 1 for many times, then only the first time counts. As shown in Fig. 2(a), insert two elements x
                           1 and x
                           2 to the BF test set. Using three independent cryptographic hash functions (q
                           =3) and there are two hash function to select the same position.

To check whether an element y is a member of X, we can simply test if BF(h
                           
                              i
                           (y)) equals 1 for all 1⩽
                           i
                           ⩽
                           q. If all the corresponding bits are 1, this element is accepted. If any one of these bits is 0, this element is rejected. As shown in Fig. 2(b), y
                           1 is not the elements of the BF test set, and y
                           2 either belongs to the BF test set, or is just a false positive. Because the Bloom Filter uses hash functions detection, whose time complexity is O(1), the Bloom Filter insert and query time is constant. What is more, the Bloom Filter has a sound security because it queries an element without saving the element itself.

In this section, our BMobishare will be described, which can effectively protect the users' location privacy and social network privacy. A summary of the notations used in this section is given in Table 2
                        .

Initially, each user needs to register for the service at SNS before using the location sharing service. During registration, user A needs to send his public key PubKeyA
                            to SNS. At the same time, user A also needs to define his access control policy, which consists of user A's friend-list and threshold distances dfA
                            and dsA
                            to restrict location sharing. dfA
                            is the threshold distance within which user A agrees to share his location information with his friends. If the distances between user A and some of his friends are larger than dfA
                           , they can't obtain user A's current location. dsA
                            is the threshold distance within which user A is willing to share his location information with strangers. Similarly, if the distances between user A and some strangers are larger than dsA
                           , they can't obtain user A's current location. Finally, user A keeps a record of his unique social network identifier IDA
                           , while SNS stores an entry as <IDA
                           , PubKeyA
                           , dfA
                           , dsA
                           > in its local subscriber database.

After user A's mobile device connected to a celluar tower CT, user A sends an authentication request as (ID
                           
                              A
                           ,
                           ts,
                           Sig.
                           PriKey
                           
                              A
                           (ID
                           
                              A
                           ,
                           ts)) to CT which forwards this message to SNS, where ts is a timestamp used to prevent tampering attack or replay attack and Sig.
                           PriKey
                           
                              A
                           (.) is a signature with user A's private key. Upon receiving the message, SNS finds the corresponding entry <IDA
                           , PubKeyA
                           , dfA
                           , dsA
                           > in local subscriber database for user A's registration information and uses PubKeyA
                            to verify user A's signature. If successful, it sends a reply as (IDA
                           , dfA
                           , dsA
                           ) to CT and CT stores an entry as <IDA
                           , dfA
                           , dsA
                           > in its own table. Then CT returns an ‘OK’ message to user A to indicate authentication success.

Assuming user A arrives at a new place or periodically gets his current location through techniques such as GPS or cellular geolocation. When user A uploads his location update, CT will perform anonymization so that the user A's identity cannot inferred from the anonymized location update. This is achieved by employing a dummy technique at LBS to hide the real identity.
                              
                                 Step 1: To update his location, user A sends 
                                       
                                          
                                             I
                                             
                                                D
                                                A
                                             
                                             ,
                                             
                                                x
                                                y
                                             
                                             ,
                                             E
                                             
                                                N
                                                
                                                   S
                                                   K
                                                   e
                                                   
                                                      y
                                                      A
                                                   
                                                
                                             
                                             
                                                x
                                                y
                                             
                                          
                                       
                                     to CT for update his location information, where (x,
                                    y) is user A's current location, and 
                                       E
                                       
                                          N
                                          
                                             S
                                             K
                                             e
                                             
                                                y
                                                A
                                             
                                          
                                       
                                       
                                          x
                                          y
                                       
                                     is the location encrypted with user A's shared symmetric key with all his social network friends.

Step 2: Upon receiving the update from user A, CT randomly generates k fake IDs which are collectively called FID. One of them uses irreversible hash function change hash(ID
                                    
                                       A
                                    ) and replaces user A's ID in the real location update, which is called user A's real fake ID and indicated as FIDA
                                    . Then, CT finds the corresponding entry from its own table and updates as <
                                    ID
                                    
                                       A
                                    ,
                                    FID
                                    
                                       A
                                    ,
                                    df
                                    
                                       A
                                    ,
                                    ds
                                    
                                       A
                                    
                                    >.

Step 3: CT sends (IDA
                                    , FIDA
                                    ) to SNS. SNS finds the corresponding entry from its own database and updates it as <
                                    ID
                                    
                                       A
                                    ,
                                    FID
                                    
                                       A
                                    ,
                                    PubKey
                                    
                                       A
                                    ,
                                    df
                                    
                                       A
                                    ,
                                    ds
                                    
                                       A
                                    
                                    >.

Step 4: CT reads the appropriate message (IDA
                                    , dfA
                                    , dsA
                                    ) for FIDA
                                     in its own table, and sends 
                                       
                                          
                                             F
                                             I
                                             
                                                D
                                                A
                                             
                                             ,
                                             
                                                x
                                                y
                                             
                                             ,
                                             E
                                             
                                                N
                                                
                                                   S
                                                   K
                                                   e
                                                   
                                                      y
                                                      A
                                                   
                                                
                                             
                                             
                                                x
                                                y
                                             
                                             ,
                                             d
                                             
                                                f
                                                A
                                             
                                             ,
                                             d
                                             
                                                s
                                                A
                                             
                                          
                                       
                                     to LBS. Meanwhile, the other k
                                    −1 fake IDs are used to construct dummy location updates. For each FIDi
                                    , CT picks a set of random (xi
                                    ,yi
                                    ), string stri
                                    , and dfi
                                    , and dsi
                                     and CT sends {(FID
                                    
                                       i
                                    ,(x
                                    
                                       i
                                    ,
                                    y
                                    
                                       i
                                    ),
                                    str
                                    
                                       i
                                    ,
                                    df
                                    
                                       i
                                    ,
                                    ds
                                    
                                       i
                                    )}
                                       i
                                       =1
                                    
                                       k
                                       −1 to LBS. The following are the communication processes:
                                       
                                          1.
                                          
                                             A
                                             →
                                             CT: 
                                                
                                                   
                                                      I
                                                      
                                                         D
                                                         A
                                                      
                                                      ,
                                                      
                                                         x
                                                         y
                                                      
                                                      ,
                                                      E
                                                      
                                                         N
                                                         
                                                            S
                                                            K
                                                            e
                                                            
                                                               y
                                                               A
                                                            
                                                         
                                                      
                                                      
                                                         x
                                                         y
                                                      
                                                   
                                                
                                             
                                          


                                             CT
                                             →
                                             SNS: (IDA
                                             , FIDA
                                             )


                                             SNS
                                             →
                                             LBS: {(FID
                                             
                                                i
                                             ,(x
                                             
                                                i
                                             ,
                                             y
                                             
                                                i
                                             ),
                                             str
                                             
                                                i
                                             ,
                                             df
                                             
                                                i
                                             ,
                                             ds
                                             
                                                i
                                             )}
                                                i
                                                =1
                                             
                                                k
                                                −1 and 
                                                
                                                   
                                                      F
                                                      I
                                                      
                                                         D
                                                         A
                                                      
                                                      ,
                                                      
                                                         x
                                                         y
                                                      
                                                      ,
                                                      E
                                                      
                                                         N
                                                         
                                                            S
                                                            K
                                                            e
                                                            
                                                               y
                                                               A
                                                            
                                                         
                                                      
                                                      
                                                         x
                                                         y
                                                      
                                                      ,
                                                      d
                                                      
                                                         f
                                                         A
                                                      
                                                      ,
                                                      d
                                                      
                                                         s
                                                         A
                                                      
                                                   
                                                
                                                .
                                             
                                          

Unlike the Mobishare, the Bloom Filter is utilized to build security mechanism between LBS and SNS to protect privacy for each other. There are six steps for querying friends' locations, and the involved messages are shown in Fig. 3
                           :
                              
                                 Step 1: Firstly, user A submits a friends' locations query (ID
                                    
                                       A
                                    ,
                                    qf) to CT.

Step 2: CT reads the appropriate entry <
                                    ID
                                    
                                       A
                                    ,
                                    FID
                                    
                                       A
                                    ,
                                    df
                                    
                                       A
                                    ,
                                    ds
                                    
                                       A
                                    
                                    > for IDA
                                     in its own table. CT appends its identifier and sequence number which are encrypted by PubKeyLBS
                                     and forwards query as (FID
                                    
                                       A
                                    ,
                                    tag) to SNS, where 
                                       tag
                                       =
                                       E
                                       
                                          N
                                          
                                             PubKe
                                             
                                                y
                                                
                                                   L
                                                   B
                                                   S
                                                
                                             
                                          
                                       
                                       
                                          
                                             I
                                             
                                                D
                                                
                                                   C
                                                   T
                                                
                                             
                                             ,
                                             s
                                             e
                                             q
                                          
                                       
                                     and seq is a sequence number.

¡¡Meanwhile, CT also generates k dummy queries consist of (FID
                                    
                                       A
                                    ,
                                    qf) and {(FID
                                    
                                       i
                                    ,
                                    qf
                                    
                                       i
                                    )}
                                       i
                                       =1
                                    
                                       k
                                       −1, where qfi
                                     is random value. Note that without loss of generality, we assume that the real fake query (FID
                                    
                                       A
                                    ,
                                    qf) is at t-th place, i.e., (FID
                                    
                                       t
                                    ,
                                    qf
                                    
                                       t
                                    )=(FID
                                    
                                       A
                                    ,
                                    qf). Then, after the k dummy queries are attached on tag, they are sent to LBS.

Step 3: Upon receiving the query request, SNS generates a fake friend-list consisting of the real fake IDs of all user A's friends. SNS sets up a Bloom Filter, the size of the Bloom Filter is a predefined integer larger than the degree of the social network graph. Then SNS inserts every element of fake friend-list into the Bloom Filter BFf
                                     and sends (BF
                                    
                                       f
                                    ,
                                    tag) to LBS.

Step 4: On the reception of two queries, LBS decrypts 
                                       E
                                       
                                          N
                                          
                                             PubKe
                                             
                                                y
                                                
                                                   L
                                                   B
                                                   S
                                                
                                             
                                          
                                       
                                     (IDCT
                                    , seq) respectively. Then LBS checks their validity and examines IDCT
                                     and the sequence number seq. If valid, LBS continues to use {(FID
                                    
                                       i
                                    ,
                                    qf
                                    
                                       i
                                    )}
                                       i
                                       =1
                                    
                                       k
                                     and find the corresponding each entry 
                                       
                                          
                                             F
                                             I
                                             
                                                D
                                                ′
                                             
                                             ,
                                             
                                                
                                                   x
                                                   ′
                                                
                                                
                                                   y
                                                   ′
                                                
                                             
                                             ,
                                             E
                                             
                                                N
                                                
                                                   S
                                                   K
                                                   e
                                                   
                                                      y
                                                      A
                                                   
                                                
                                             
                                             
                                                
                                                   x
                                                   ′
                                                
                                                
                                                   y
                                                   ′
                                                
                                             
                                             ,
                                             d
                                             
                                                f
                                                ′
                                             
                                             ,
                                             d
                                             
                                                s
                                                ′
                                             
                                          
                                       
                                     stored in the location database, check whether dist ((x
                                    
                                       i
                                    ,
                                    y
                                    
                                       i
                                    ),(x′,
                                    y′))≤
                                    min(qf
                                    
                                       i
                                    ,
                                    df′), where dist(.) is distance function and min(.) return the minimum value in its inputs. If so, every retained element is tested whether it belongs to BFf
                                    . Finally, LBS replies 
                                       
                                          
                                             
                                                
                                                   F
                                                   I
                                                   
                                                      D
                                                      i
                                                   
                                                   ,
                                                   E
                                                   
                                                      N
                                                      
                                                         S
                                                         K
                                                         e
                                                         
                                                            y
                                                            A
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         x
                                                         i
                                                      
                                                      
                                                         y
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             k
                                          
                                          
                                             s
                                             e
                                             q
                                          
                                       
                                     to SNS.

Step 5: Upon receiving the reply, SNS deletes some of the data items which are not in user A's friend-list. Suppose there retains k′ records at that time. Then SNS appends a mapping entry for each of user A's nearby friends to the message, and forwards them to CT.

Step 6: CT checks whether the seq lies in reply corresponds to the sequence number it previously sent. If so, CT replaces FIDi
                                     to IDi
                                     through its own table and return to user A. At last, user A can decrypt and get the plaintext locations of the nearby friends by SKeyA
                                    . The following are communication processes:
                                       
                                          1.
                                          
                                             A
                                             →
                                             CT: (ID
                                             
                                                A
                                             ,
                                             qf)


                                             CT
                                             →
                                             SNS: (FID
                                             
                                                A
                                             ,
                                             tag)


                                             CT
                                             →
                                             LBS: ({(FID
                                             
                                                i
                                             ,
                                             qf
                                             
                                                i
                                             )}
                                                i
                                                =1
                                             
                                                k
                                             ,
                                             tag)


                                             SNS
                                             →
                                             LBS: (BF
                                             
                                                f
                                             ,
                                             tag)


                                             LBS
                                             →
                                             SNS: 
                                                
                                                   
                                                      
                                                         
                                                            F
                                                            I
                                                            
                                                               D
                                                               i
                                                            
                                                            ,
                                                            E
                                                            
                                                               N
                                                               
                                                                  S
                                                                  K
                                                                  e
                                                                  
                                                                     y
                                                                     A
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                                  i
                                                               
                                                               
                                                                  y
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      k
                                                   
                                                   
                                                      s
                                                      e
                                                      q
                                                   
                                                
                                             
                                          


                                             SNS
                                             →
                                             CT: 
                                                
                                                   
                                                      
                                                         
                                                            F
                                                            I
                                                            
                                                               D
                                                               f
                                                            
                                                            ,
                                                            E
                                                            
                                                               N
                                                               
                                                                  S
                                                                  K
                                                                  e
                                                                  
                                                                     y
                                                                     A
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                                  i
                                                               
                                                               
                                                                  y
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   
                                                      s
                                                      e
                                                      q
                                                   
                                                
                                             
                                          


                                             CT
                                             →
                                             A: 
                                                
                                                   
                                                      
                                                         
                                                            I
                                                            
                                                               D
                                                               f
                                                            
                                                            ,
                                                            E
                                                            
                                                               N
                                                               
                                                                  S
                                                                  K
                                                                  e
                                                                  
                                                                     y
                                                                     A
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                                  i
                                                               
                                                               
                                                                  y
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                
                                                .
                                             
                                          

Querying strangers' locations is basically similar to querying friends' locations, but it does not require SNS to find out friends and use the Bloom Filter. There are five steps for querying strangers' locations as shown in Fig. 4
                           :
                              
                                 Step 1: User A submits a strangers' locations query as (ID
                                    
                                       A
                                    ,
                                    qs,
                                    SKey
                                    
                                       LBS
                                    ) to CT and SKey
                                    
                                       LBS
                                     is a one-time temporary symmetric key.

Step 2: CT reads the appropriate entry <
                                    ID
                                    
                                       A
                                    ,
                                    FID
                                    
                                       A
                                    ,
                                    df
                                    
                                       A
                                    ,
                                    ds
                                    
                                       A
                                    
                                    > for IDA
                                     in its own table. CT generates k dummy queries which consist of (FID
                                    
                                       A
                                    ,
                                    qs) and {(FID
                                    
                                       i
                                    ,
                                    qs
                                    
                                       i
                                    )}
                                       i
                                       =1
                                    
                                       k
                                       −1, where qsi
                                     is random value. Note that without loss of generality, the real fake query (FID
                                    
                                       A
                                    ,
                                    qs) is at t-th place, i.e., (FID
                                    
                                       t
                                    ,
                                    qs
                                    
                                       t
                                    )=(FID
                                    
                                       A
                                    ,
                                    qs). Meanwhile, CT appends its identifier and sequence number which are encrypted by PubKey
                                    
                                       LBS
                                     and generates validation information tag, where tag = 
                                       E
                                       
                                          N
                                          
                                             PubKe
                                             
                                                y
                                                
                                                   L
                                                   B
                                                   S
                                                
                                             
                                          
                                       
                                       
                                          
                                             I
                                             
                                                D
                                                
                                                   C
                                                   T
                                                
                                             
                                             ,
                                             s
                                             e
                                             q
                                             ,
                                             S
                                             K
                                             e
                                             
                                                y
                                                
                                                   L
                                                   B
                                                   S
                                                
                                             
                                          
                                       
                                     and seq is a sequence number. Then, after the k dummy queries are attached on tag, they are sent to LBS.

Step 3: Upon receiving the query, LBS decrypts 
                                       E
                                       
                                          N
                                          
                                             PubKe
                                             
                                                y
                                                
                                                   L
                                                   B
                                                   S
                                                
                                             
                                          
                                       
                                     (ID
                                    
                                       CT
                                    , seq, SKey
                                    
                                       LBS
                                    ). Then LBS checks their validity and examines ID
                                    
                                       CT
                                    . If valid, LBS obtains SKey
                                    
                                       LBS
                                    , uses {(FID
                                    
                                       i
                                    ,
                                    qs
                                    
                                       i
                                    )}
                                       i
                                       =1
                                    
                                       k
                                     to find the corresponding each entry 
                                       
                                          
                                             F
                                             I
                                             
                                                D
                                                ′
                                             
                                             ,
                                             
                                                
                                                   x
                                                   ′
                                                
                                                
                                                   y
                                                   ′
                                                
                                             
                                             ,
                                             E
                                             
                                                N
                                                
                                                   S
                                                   K
                                                   e
                                                   
                                                      y
                                                      A
                                                   
                                                
                                             
                                             
                                                
                                                   x
                                                   ′
                                                
                                                
                                                   y
                                                   ′
                                                
                                             
                                             ,
                                             d
                                             
                                                f
                                                ′
                                             
                                             ,
                                             d
                                             
                                                s
                                                ′
                                             
                                          
                                       
                                     which is stored in the location database, and then checks whether dist ((x
                                    
                                       i
                                    ,
                                    y
                                    
                                       i
                                    ),(x′,
                                    y′))≤
                                    min(qs
                                    
                                       i
                                    ,
                                    ds′), where dist(.) is distance function and min(.) return the minimum value in its inputs. If so, every retained element is inserted into the satisfied strangers' set. Then, LBS uses SKey
                                    
                                       LBS
                                     to encrypt location information. Finally, LBS replies 
                                       
                                          
                                             
                                                
                                                   F
                                                   I
                                                   
                                                      D
                                                      i
                                                   
                                                   ,
                                                   E
                                                   
                                                      N
                                                      
                                                         S
                                                         K
                                                         e
                                                         
                                                            y
                                                            
                                                               L
                                                               B
                                                               S
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         x
                                                         i
                                                      
                                                      
                                                         y
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             k
                                          
                                          
                                             s
                                             e
                                             q
                                          
                                       
                                     to SNS.

Step 4: Upon receiving the reply, SNS replaces each FIDi
                                     by its corresponding identity IDi
                                     and remove the duplicated records. Then, SNS replies the processed 
                                       
                                          
                                             
                                                
                                                   I
                                                   
                                                      D
                                                      i
                                                   
                                                   ,
                                                   E
                                                   
                                                      N
                                                      
                                                         S
                                                         K
                                                         e
                                                         
                                                            y
                                                            
                                                               L
                                                               B
                                                               S
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         x
                                                         i
                                                      
                                                      
                                                         y
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                k
                                                ′
                                             
                                          
                                          
                                             s
                                             e
                                             q
                                          
                                       
                                     to CT.

Step 5: CT checks whether the seq lies in reply corresponds to the sequence number it previously sent. If so, CT returns 
                                       
                                          
                                             
                                                
                                                   I
                                                   
                                                      D
                                                      i
                                                   
                                                   ,
                                                   E
                                                   
                                                      N
                                                      
                                                         S
                                                         K
                                                         e
                                                         
                                                            y
                                                            
                                                               L
                                                               B
                                                               S
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         x
                                                         i
                                                      
                                                      
                                                         y
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                k
                                                ′
                                             
                                          
                                       
                                     to user A. At last, user A can decrypt and get the plaintext locations of the nearby strangers by SKey
                                    
                                       LBS
                                    . The following are the communication processes:
                                       
                                          1.
                                          
                                             A
                                             →
                                             CT: (ID
                                             
                                                A
                                             ,
                                             qs)


                                             CT
                                             →
                                             LBS: ({(FID
                                             
                                                i
                                             ,
                                             qs
                                             
                                                i
                                             )}
                                                i
                                                =1
                                             
                                                k
                                             ,
                                             tag)


                                             LBS
                                             →
                                             SNS: 
                                                
                                                   
                                                      
                                                         
                                                            F
                                                            I
                                                            
                                                               D
                                                               i
                                                            
                                                            ,
                                                            E
                                                            
                                                               N
                                                               
                                                                  S
                                                                  K
                                                                  e
                                                                  
                                                                     y
                                                                     
                                                                        L
                                                                        B
                                                                        S
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                                  i
                                                               
                                                               
                                                                  y
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      k
                                                   
                                                   
                                                      s
                                                      e
                                                      q
                                                   
                                                
                                             
                                          


                                             SNS
                                             →
                                             CT: 
                                                
                                                   
                                                      
                                                         
                                                            I
                                                            
                                                               D
                                                               i
                                                            
                                                            ,
                                                            E
                                                            
                                                               N
                                                               
                                                                  S
                                                                  K
                                                                  e
                                                                  
                                                                     y
                                                                     
                                                                        L
                                                                        B
                                                                        S
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                                  i
                                                               
                                                               
                                                                  y
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   
                                                      s
                                                      e
                                                      q
                                                   
                                                
                                             
                                          


                                             CT
                                             →
                                             A: 
                                                
                                                   
                                                      
                                                         
                                                            I
                                                            
                                                               D
                                                               i
                                                            
                                                            ,
                                                            E
                                                            
                                                               N
                                                               
                                                                  S
                                                                  K
                                                                  e
                                                                  
                                                                     y
                                                                     
                                                                        L
                                                                        B
                                                                        S
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  x
                                                                  i
                                                               
                                                               
                                                                  y
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                
                                                .
                                             
                                          

¡¡BMobishare assumes that LBS and SNS are both ‘honest but curious’ and try to know more private information, but they cannot collude with each other. In other words, they will not be controlled by adversary at the same time. However, they may collude with any dishonest users and try to get unauthorized access location information of the target user. Through the analysis of the following two main threats, we can prove that BMobishare is secure.

The location privacy is threatened by LBS or SNS who wants to get unauthorized access to target user's location. On the one hand, SNS will transmit location update requests and query results, which are all protected by symmetric/asymmetric encryption schemes, i.e. AES and PKE. In these cases, BMobishare will not leak location information to SNS and the security of location privacy relies on the adopted cryptography schemes, i.e. AES and PKE. On the other hand, though all the users' location information is stored in LBS local database, k-anonymity technique is used to ensure that LBS has little possibility to find out which is the target user's real location. Additionally, each transmission message will include a sequence number and an irreversible hash function (such as SHA1), which is effectively resilient to the replay attack and the tampering attack. So we can prove that the location privacy is protected and BMobishare is secure.

The social relations privacy is threatened by LBS who try to find out the user's complete social relations. In the BMobishare, the social relations privacy is protected from LBS through security property of the Bloom Filter in friends' locations query. SNS does not send the friend-list to LBS directly. Instead, it builds a Bloom Filter BFf
                         and inserts each element of the friend-list into BFf
                         which is sent to LBS later. Then, LBS can discover the potential friend-list shared with SNS by testing every element which satisfies some condition for membership in BFf
                        . Since the input sets are impractical to enumerate, the users cannot maliciously exploit the friend-list to violate social relations privacy. In other words, the Bloom Filter can query about whether the elements belong to the friend-list, but it cannot preserve the elements themselves. So this mechanism structure has sound security. Furthermore, the Bloom Filter has a simple structure and is allowed to be quickly established. Because insert data and test data both use hash function test, BMobishare incurs lower communication and computation overhead than the previous systems based on encryption [19].

In conclusion, the social relations are hidden, so LBS cannot obtain them. Additionally, each message will include a sequence number, it is effectively resilient to the replay attack and the tampering attack. Thus, we can prove that the social relations privacy is being protected here and BMobishare is secure.

It is noted that the Bloom Filter certainly has the rate of false positives [26]. Some elements might seem present although it is never inserted. But this method won't miss any inserted elements. In other words, the Bloom Filter may be false positives and can't be missed. In general, the more number of elements inserted, the greater the rate of false positives will be. Let us suppose that n is the number of elements inserted and mapped to an array of m bits. The Bloom Filter uses q independent cryptographic hash functions. The probability p of false positive [23] can be approximated as:
                           
                              
                                 p
                                 =
                                 
                                    
                                       
                                          1
                                          −
                                          
                                             
                                                
                                                   1
                                                   −
                                                   
                                                      1
                                                      m
                                                   
                                                
                                             
                                             
                                                n
                                                ⋅
                                                q
                                             
                                          
                                       
                                    
                                    q
                                 
                                 .
                              
                           
                        
                     

Thus, the optimal value of q that minimizes p is:
                           
                              
                                 q
                                 =
                                 
                                    m
                                    n
                                 
                                 ln
                                 2
                                 .
                              
                           
                        
                     

Using the optimal value of q, the optimal size of the Bloom Filter [25], for a desired false positive probability p can be estimated as:
                           
                              
                                 m
                                 =
                                 
                                    
                                       n
                                       
                                          
                                             −
                                             
                                                
                                                   log
                                                   2
                                                
                                             
                                             p
                                          
                                          
                                             ln
                                             2
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Because n is the number of user's friends, it generally does not exceed the size of one thousand. Observing that p can be artificially controlled and can be set very small. If value of p is too small, it will takes a lot of overhead since the lower value of p, is the higher m required to insert one element into the Bloom Filter. If we choose p
                        =10−2, m will not exceed the size of 105 through calculation. This scale is perfectly acceptable. Nonetheless, when LBS sends query result to SNS, we still need means to verify that the output of the mechanism does consist of the social relations and rule out the false positives in SNS.

@&#PERFORMANCE EVALUATION@&#

@&#IMPLEMENTATION@&#

This section presents an empirical evaluation of the performance of mobile device and tries to evaluate the efficiency of adopted BMobishare. This mechanism works in the level of application, which only requires to realize through the form of the interface. So it is easy to integrate BMobishare into the original program. We performed all simulation experiments in Java on Samsung G3502U smartphone running Android OS 4.2.

In our experiments, BMobishare employs mobile device to compute location. In android platform, there are some effective techniques to obtain location easily in mobile device based on GPS and cellular geolocation, like API of Google map. It is assumed that each user has the same number of friends and the number varied in the range {100, 500}. In order to obtain good security, we set k, the anonymity level, to be 10.

In BMobishare, two cryptography schemes are implemented: AES and PKE respectively. We use 128-bits AES for symmetric key and the encryption mode is CBC. We choose the identity based encryption scheme (IBE) [27] as the implementation of PKE. We apply android API to build AES scheme and use the open-source library named jpbc to achieve IBE scheme. Meanwhile, The Bloom Filter operation is implemented using code available from https://github.com/MagnusS/Java-BloomFilter.

@&#EVALUATION@&#

In our evaluation, IBE scheme is built on pairing computation and pairing computation can be done in mobile smartphone. Li et al. showed that the average time of pairing computation is 0.5s [28] in mobile device.

It is reasonable to believe that the pairing computation time will be reduced. Because IBE scheme is designed for the exchange of the secret keys to be used in symmetric algorithm, it will execute only once in the encryption and decryption. As a result, IBE scheme will satisfy the application requirements.

By calling the class javax:crypto:Cipher, Android API provides the implementation of AES. As shown in Table 3
                        , the execution time of AES can been seen. Obviously, AES scheme shows a good efficiency in mobile devices.


                        Fig. 5(a) shows the experimental evaluation of the computing performance of Friends′ location query when Mobishare vs. BMobishare is used. According to the figure, the time cost for Mobishare increases by several seconds, however, it only increases by less than a second with BMobishare. Similarly, the connection performance of BMobishare is better than the connection performance of Mobishare in Fig. 5(b).

@&#CONCLUSION@&#

In this paper, we made a more comprehensive research on privacy-preserving location sharing on mOSNs, and proposed BMobishare, a security enhanced privacy-preserving location sharing mechanism. Mobishare is the first valuable mechanism to address location sharing problems on mOSNs. However, this mechanism is not perfect and may contain a potential risk of leakage. What the worse is the location sharing between the trusted social relations, unauthorized location based service provider may obtain user's complete social relations through multiple attacks. In order to remedy this defect, we employed the Bloom Filter to mask sensitive data exchanges occurred in the communications of location sharing procedures, such that any untrusted participants cannot obtain unauthorized privacy information. Analysis and evaluations showed that compared with Mobishare, BMobishare is more secure and more efficient.

@&#ACKNOWLEDGMENT@&#

This work is supported by the National Natural Science Foundation of China (Nos. 61272423 and 61300241), the Natural Science Foundation of Tianjin, China (No. 13JCQNJC00300), and the Specialized Research Fund for the Doctoral Program of Higher Education of China (Nos. 20100031110030 and 20120031120036).

@&#REFERENCES@&#

