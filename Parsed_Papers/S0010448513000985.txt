@&#MAIN-TITLE@&#An efficient human model customization method based on orthogonal-view monocular photos

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We report a new precise human model customization method using customer’s photos.


                        
                        
                           
                           We propose a comprehensive human body geometrical shape representation.


                        
                        
                           
                           We learn a novel relationship model between human body’s 2D size and 3D shape.


                        
                        
                           
                           We develop a new deformation algorithm that minimizes distortion in human modeling.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Human body modeling

Model customization

Image-based model reconstruction

Data-driven modeling

Geometric mesh deformation

@&#ABSTRACT@&#


               
               
                  Human body modeling is a central task in computer graphics. In this paper, we propose an intelligent model customization method, in which customer’s detailed geometric characteristics can be reconstructed using limited size features extracted from the customer’s orthogonal-view photos. To realize model customization, we first propose a comprehensive shape representation to describe the geometrical shape characteristics of a human body. The shape representation has a layered structure and corresponds to important feature curves that define clothing size. Next, we identify and model a novel relationship model between 2D size features and 3D shape features for each cross-section using real subject scanned data. We predict a customer’s cross-sectional 3D shape based on size features extracted from the customer’s photos, and then we reconstruct the customer’s shape representation using predicted cross-sections. We develop a new deformation algorithm that deforms a template model into a customized shape using the reconstructed 3D shape representation. A total of 30 subjects, male and female, with varied body shapes have been recruited to verify the model customization method. The customized models show high degree of resemblance of the subjects, with accurate body sizes; the accuracy of the models is comparable to scan. It shows that the method is a feasible and efficient solution for human model customization that fulfills the specific needs of the clothing industry.
               
            

@&#INTRODUCTION@&#

Three-dimensional human body modeling is an active research topic in different disciplines. Accurate representation of humans is necessary for human factors/ergonomics research. In computer graphics, it is often necessary to accurately capture and represent a human subject in various motions for entertainment (game and movie animation) applications.

In the clothing discipline, 3D human body modeling is also an integral part of computer-aided clothing design. Following the pioneering work of Prof. Magnenat-Thalmann of MIRA Lab  [1], clothing simulation and pattern computer-aided designs (CAD) have received much attention from the computer graphics and clothing technology communities  [2–7]. The research follows either a 2D-to-3D or a 3D-to-2D approach  [8]. In the 2D-to-3D approach, digital 2D garment patterns are first prepared. Later, the digital 2D patterns are virtually stitched around a 3D human model and simulated for fit evaluation in 3D space  [9]. Another approach is 3D-to-2D pattern flattening. 3D garments are first created on the basis of a dummy (i.e. a digital human model) in a virtual environment, and the garment surfaces are then flattened to obtain the 2D patterns  [4,10]. In both 2D-to-3D and 3D-to-2D clothing CAD applications, it is essential to have an accurate human body model, onto which the garments are dressed or on top of which they are designed (see Fig. 1
                     ).

In traditional clothing design, standard mannequins are used, which are developed based on some standard size charts, thus the produced garments would fit customers with the ideal ‘average’ figure. Nevertheless, not all people have an ideal figure and indeed most people do not. With the help of advanced digital technology, customized clothing design is becoming more feasible than before. For customized clothing design, it is necessary to have a model that represents the individual customer’s body shape and dimensions. Moreover, customized human models are also required for fit evaluation in online shopping of clothes.

Customized human models can be obtained from scan. Whole-body scanning was introduced to the clothing industry in the late 1980s; scanner systems can be light-based, laser-based, or microwave-based  [11]. Since the last decade, anthropometric sizing surveys have been carried out around the world using body scanners  [12,11]. Brands and retailers have made use of body scanning technology in mass customization and online virtual fitting applications. However, scan-based modeling has a number of drawbacks. First, body scanners are often costly and bulky, and only large retailers and brands can afford to have scanners installed at their stores. Second, customers must go to a specific spot to have their bodies scanned, thus body scanners are not accessible to most people. Third, for most scanners, people must be scanned with specific clothing or with underwear only; privacy concerns and inconvenience may hinder customers’ willingness to be scanned. Fourth, the quality of the output data is also a doubt because the scanned models always have incomplete surface information. Fifth, the measurements extracted from different scanners vary  [13]. It is because the extraction of body measurements from scanned models depends on the precise location of body landmarks. However, there is no international standard available so far for landmark identification and measurement extraction from 3D scans  [11]. These limitations per se restrict the application of scan-based technology for human model customization and virtual fitting.

A variety of methods without relying on scan are available in the literature of computer graphics for creating 3D virtual humans; these techniques can be classified into creative methods and reconstructive methods. Artist-designed modeling and anatomical modeling are typical creative methods. Artist-designed modeling, also known as character modeling, starts from modeling the surface geometry of the character by subdivision surfaces, NURBS or constructive solid geometry  [14]. Next, the model is fitted with a skeleton to allow easy editing of poses and movements. Anatomical modeling is developed based on physics-based human anatomy simulation technology. By modeling the detailed musculoskeletal structure of the body with major bones, muscles, and other interior structures, the models simulate how the deformation of the underlying structures (bones, muscles, and tendons) induces deformation of the skin. Artist-designed modeling is primarily used for movies and games animation; anatomical models are mainly applied in biomechanics, human factors/ergonomics, and biomedical engineering studies. Artist-designed models are good for the astonishing animation effects whereas accuracy may have to tradeoff for speed. Anatomical models are capable of realistically simulating the dynamics and object interactions, yet such physical models are difficult to construct and computationally expensive to use  [15–17].

From the 2000s, much work has been devoted to building the 3D geometry of humans automatically by reconstruction or deformation. Among which, example-based techniques that learn shape models directly from examples of scanned data drew a lot of research attention  [18–20]; a detailed review of example-based reconstructive methods will be given in Section  2.2. In general, the example-learnt parametric models provide realistic deformation in terms of global shape appearance, thus they are suitable for computer graphic applications that focus on animation speed and realism. However, these models may not provide accurate local sizes. In the clothing industry, size accuracy is the most important criterion in model customization; customized models must truthfully represent the individual customer’s body shape and provide accurate size information.

In this paper, we propose a new method to cater for the needs of the clothing industry on efficient 3D human model customization. The main contributions of this paper are as follows: 
                        
                           •
                           A new method of digital human modeling is developed, and the accuracy of the customized models is comparable to scan.

A comprehensive shape representation is proposed to describe human body’s geometrical characteristics. The shape representation corresponds to key features in clothing size definition; it has a layered structure involving multiple local cross-sectional features. The local cross-sectional features include 2D size features and 3D shape features.

A novel relationship model is identified and modeled between 2D size features and 3D shape features using scanned real subject data.

A new deformation algorithm ct-FFD is proposed in this paper. Different from global deformation adopted by most of the existing algorithms, ct-FFD algorithm localizes deformation to specific segments. It minimizes distortion and closely resembles the geometrical shape of the control mesh.

The rest of the paper is organized as follows. We first review the related work, including image-based and exampled-based human body modeling and geometric mesh deformation algorithms in Section  2. We discuss the 5-step model customization method in details in Section  3. The experimental results are demonstrated and discussed in Section  4. Finally, we conclude the paper and discuss some future work in Section  5.

@&#RELATED WORK@&#

This paper investigates new method to reconstruct realistic and accurate body models from orthogonal-view images. In this section, we review the related research, including image-based 3D human body reconstruction, example-based body model reconstruction and geometric deformation of large mesh structure.

A few early attempts on silhouette-based reconstruction were reported in the 90s  [21–23], which reconstruct an object model based on a large number of images of the same object taken from different perspectives. These studies often require that the images of the object must be taken against a uniform blue background. After the pioneer work, researchers tried to reduce the number of images required. Hilton et al.  [24] extracted contours from front-, back- and two side-view images of a customer to drive the deformation of a generic template model. They first mapped the customer’s feature points along the contour with that on the template contour on multiple-view images. They combined the mapping information to estimate the surface displacement of the 3D template model. Based on Hilton’s work, Wang et al.  [25] proposed a segmentation algorithm and a deformation method to reconstruct virtual model from front- and side-view photographs. The reconstruction process is more efficient, and the resulting models demonstrate better continuity and local deformation properties. However, approximation errors are not avoidable because the contours used for deformation only come from front- and side-view images, missing shape information of other view angles. They used axial deformation, one of the free form deformation techniques, to reconstruct the 3D shape. Axial deformation preserves the original shape as much as possible, yet in turn introduces approximation errors. It indeed pinpoints a limitation of previous image-based reconstruction studies—a model is missing to uncover the relationship between a body’s 3D shape and 2D sizes.

Image-based methods aim to automatically reconstruct 3D geometry of humans based on existing target shapes (as exhibited on images)  [24,26,18,25]. In recent years, example-based shape modeling techniques were introduced to develop parametric deformable model from available scanned examples  [20,27,19,28]. Most example-based studies follow a three-step process to derive a parametric deformable model. The first step is a registration process, which maps a common parameterization to all scanned examples. This step is crucial so that the information from the examples can be aggregated by a learning process. Most studies use a template mesh model with known topology to register examples of different topologies in different configurations. The registration process establishes a point-to-point correspondence between the template and every example. Some researchers use humanoid models (artist-generated models)  [18,20] and others use scanned models as templates  [19]. A humanoid template tends to generate models with cartoon-look appearance, and a scanned mesh template tends to produce results with a more realistic appearance. The registration is often done with sparse 3D markers. Given a set of markers between two meshes, the task of non-rigid registration is well understood and a variety of algorithms exist  [29–31]. A drawback for model registration using markers is that a non-trivial amount of human effort is required for marker placement. For example, Allen et al.  [18], who registered scans of humans with different physiques, used more than 70 markers for each pair of scans. Researchers thus suggested feature-based models  [32,27] to reduce the amount of manual operation in the registration process. Wang  [27] proposed a feature extraction method that can automatically register 85% of the examples, but the remaining 15% still needs manual definition.

After the registration step, principal component analysis (PCA) is used to analyze the shape variation and critical features. The main advantage of PCA is data compression, since vectors of low variance can be discarded and thus the full dataset does not need to be retained for approximating the original examples. PCA is appropriate for analyzing the space of variation with a Gaussian distribution, and is thus suitable for modeling shape variation between individuals, because body shape variation is consistent and not too strong. However, PCA does not provide a direct way to explore the range of bodies with intuitive controls, such as height, weight, and gender. Therefore, the last step of the three-step process is to model a synthesizer that associates the principal components (PCs) with a few controls. With such a synthesizer, a template model can be deformed to a specific shape by specifying the control parameters for shape and pose. Different techniques are used to derive such synthesizers, for instance linear regression  [33], linear mapping between several controls and PCA weights  [18], or linear subspace analysis using PCA  [19].

The most famous parametric model is SCAPE  [19], which learnt pose and shape parameters from scanned examples. Balan et al.  [34] extend SCAPE model to estimate shape from a set of synchronized multi-camera images data. Sigal et al.  [35] presented an approach to customize a model from a single monocular image. They predicted the SCAPE 3D shape and pose parameters using silhouette information extracted from 2D image with a learnt expert model. It provides a possible solution to uncover people’s body model from a monocular image. Guan et al.  [36] introduced an innovative approach to improve the accuracy of body model reconstruction method from a single monocular image by segmenting image foreground for boundary extraction and optimizing the synthesized model using shading cue.

Most example-based studies use PCA and linear models to synthesize body shape and pose-induced deformations. Such linear models substantially simplify the deformation computation to a more manageable scale, even for high-resolution mesh templates. Statistically learnt parametric models generate realistic results because the deformation is interpolated from a range of examples. Example-based methods have solved two crucial problems in computer graphic applications, namely speed (by linear approximation) and realism (by averaging from a range of examples). Therefore, example-based methods have been successfully applied to estimate shape and pose from images  [36] and track people in video and images  [37,38].

However, example-based approach has drawbacks too. First, a statistically learnt deformable model would always create an average looking individual with given control features. Average figures look realistic as they are interpolated from a range of examples, but they do not capture individual characteristics well. For example, people with the same height may not have the same torso-leg proportions, and people with the same bust girth measurement may not have the same geometric cross-sectional shape. Second, the shape of the resulting parametric model depends on the diversity of the examples from which the model is learnt. If a small number of examples are used, the representativeness of the parametric model is low (a total of 250 examples were used in  [18], and 45 example scans were used for learning shape variation in  [19]). Third, to customize a body model, a large number of controls must be specified. However, linear mapping from PCA to a large number of controls would introduce erroneous solutions  [20]. The resulting synthesizers would create models with strange shapes.

To sum up, example-learnt parametric models provide realistic deformation in terms of global shape appearance; they are suitable for computer graphic applications which focus on animation speed and realism. However, the deformation may not provide accurate local sizes. It is remained an unanswered research question whether the ‘average figures’ derived from PCA-based deformation are suitable for model customization. In the clothing industry, size accuracy is the most important criterion in model customization. Customized models must truthfully represent the individual customer’s body shape and provide accurate size information.

Surface modeling is a traditional research topic in the field of computer graphics  [39,40]. Researchers address surface patches, as free-form surfaces, which are supposed to be shaped with flexibility akin to clay in a sculptor’s hands. Geometric deformation has been widely studied. Barr  [41] proposed a mesh deformation method that is effective to handle general shape deformation, such as bending, twisting, stretching and pulling. Free-form Deformation (FFD)  [42,43] was developed to deform a model by mapping Bezier  [42] or B-spline  [43] parametric control volume, which is defined by points of a 3D lattice. This method assumes the initial shape of the control polygon to be a regular parallelepiped or a uniformly arranged shape. Later, Coquillart  [44] proposed extended FFD (EFFD) to allow designers to combine the initial lattices. MacCracken and Joy  [45] further extended this work for a variety of lattice forms. To handle large-scale polygonal mesh deformation, Kobayashi and Ootsubo  [46] suggested a triangle free-form deformation (t-FFD), an extension of FFD. It made use of a control mesh, consisting of a set of triangles with arbitrary topology and geometry, to govern the deformation. In this paper, a new deformation algorithm is proposed based on t-FFD to realize accurate deformation of human body, which will be described in later Section  3.6.

We propose a new method to customize 3D human model based on a customer’s orthogonal-view monocular images. The resulting human model must be accurate and with realistic details, fulfilling the specific requirements of the clothing industry. Fig. 2
                         depicts the overall methodology, in which some novel solutions are suggested to realize high-resolution model customization. First of all, a comprehensive shape representation is proposed to enable detailed characterization of the global and local shape features of human subjects. Secondly, a novel relationship model is developed to predict local 3D shapes from 2D features. Thirdly, a simple solution is suggested to extract body features from images with noisy background or incomplete body silhouettes. Fourthly, a customized shape is predicted and reconstructed based on the feature information extracted from two-view images. Lastly, a new and efficient algorithm is proposed to deform a high-resolution template model to customers’ body figures in 3D. Each step of the method is explained in details in the following subsections. A video is provided as supplement of this paper to demonstrate the methodology.

We aim at proposing intelligent solution for human model customization, based on customer’s two orthogonal-view images. In the clothing industry, the resulting model from a customization process should have realistic appearance, truthfully resembling the global and local characteristics of the customer’s original body shape, and with precise sizes.

In order to accurately capture the global and local body features, a new shape representation of human body physique is necessary to define. Considering the specific requirements of the clothing industry, we use a layered structure to describe the body shape of individual person. Each layer represents a cross-sectional shape of the subject’s body, which corresponds to a feature girth. Girth measurements are important features in the clothing industry  [8]. For example, the bust, waist, hip and abdomen girths are often used in combination to characterize a body shape as hourglass, triangle, inverted triangle or rectangle. Therefore, the relative size and position of these cross-sectional body feature curves in fact describe the overall shape of the body; they are regarded as the global features of the body model. The parallel cross-sections characterize local features of the body in terms of size and shape, making it straightforward to give bust, waist and hip sizes; the cross-sectional shape provide information on where the body fats are developed.

The layered structure shape representation is chosen for three recognized advantages. First, the overall (global) shape feature consists of a series of local shape features, and it flexibly represents detailed local shape features of the body; Second, it decouples the overall shape (global features) with regional characteristics (local features). Different combinations of the local features can characterize people in diverse global shapes. Some people have very different global features but some local features are similar. Third, as the layered structure corresponds to anthropometric size definition, the local cross-sectional size features can be easily identified and extracted from 2D images, thus facilitate image-based shape deformation.

We define the layered shape representation on a coordinate system, where the depth, the width and the height of the body are the principal axes of 
                           X
                           ,
                           Y
                         and 
                           Z
                         (see Fig. 3
                        ). Ten feature girths that are significant to garment sizing are incorporated in the shape representation, including neck, shoulder, bust, waist, high-hip, hip, crotch, knee, calf and ankle levels. These features can be automatically recognized from point cloud data, with the method of Huang  [8]. To better capture the regional shape of a human body, seven cross-sections are defined in addition to the ten recognized feature curves to constitute a 17-layer shape representation.Table 1
                         lists 17 body feature curves.

With the layered structure, each cross-section characterizes certain regional shape of the body, and two types of cross-sectional features are defined: local 2D size feature and local 3D shape feature. Local 2D size features define the size characteristics of each cross-section, which are represented by vector 
                           
                              L
                           
                           =
                           
                              [
                              W
                              ,
                              D
                              ]
                           
                        , defining the width 
                           
                              (
                              W
                              )
                           
                         and the depth 
                           
                              (
                              D
                              )
                           
                         of the cross-section. Cross-sectional girths are closed curves, which are complex to parameterize; we approximate them as polygons in the shape representation. Local 3D shape features thus describe the shape of each cross-section, which is independent of the size characteristics. 3D shape feature is parameterized by vector 
                           
                              C
                           
                           =
                           
                              [
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    s
                                 
                                 
                                    m
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ]
                           
                        , including the slope values 
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         of the connecting line segments of the cross-sectional polygon and two ratios (
                           
                              
                                 r
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 r
                              
                              
                                 2
                              
                           
                        ).

A polygon with 12 line segments is used to approximate the geometric shape of each torso cross-section, as shown in Fig. 4
                        (a); a polygon with 8 line segments is used for limb cross-sections of leg and arm, as show in Fig. 4(b).

The local 3D shape features 
                           
                              C
                           
                           =
                           
                              [
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    s
                                 
                                 
                                    m
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ]
                           
                         characterize the geometrical shape of the cross-sectional polygon. 
                           
                              
                              
                           
                           
                              
                                 s
                              
                              
                                 j
                              
                           
                         defines the slope of the connecting line segment 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 j
                                 −
                                 1
                              
                           
                           
                              
                                 
                                    p
                                 
                              
                              
                                 j
                              
                           
                        , 
                           j
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           m
                        , where 
                           m
                           =
                           6
                         for torso cross-sections and 
                           m
                           =
                           7
                         for limb cross-sections. It is noted that only right half of the body cross-section is constructed, assuming human body is symmetric. Ratio values 
                           
                              
                                 r
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 r
                              
                              
                                 2
                              
                           
                         of C define the origin (O) of the cross-sectional polygon. They are used to locate the start point 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 0
                              
                           
                         on the coordinate system.
                           
                              (1)
                              
                                 
                                    
                                       r
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    |
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          0
                                       
                                    
                                    −
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          c
                                       
                                    
                                    |
                                 
                                 /
                                 D
                              
                           
                         where 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 0
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 c
                              
                           
                         are the two intersection points of cross-sectional curve with the 
                           x
                        -axis, 
                           c
                           =
                           6
                         for torso cross-sections and 
                           c
                           =
                           4
                         for limb cross-sections. 
                           
                              (2)
                              
                                 
                                    
                                       r
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    |
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          0
                                       
                                    
                                    −
                                    
                                       O
                                    
                                    |
                                 
                                 /
                                 
                                    |
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          0
                                       
                                    
                                    −
                                    
                                       
                                          
                                             p
                                          
                                       
                                       
                                          c
                                       
                                    
                                    |
                                 
                                 .
                              
                           
                         With known local cross-sections, a mesh structure is then obtained by connecting the 17 body cross-sections, which comprehensively describes the 3D shape of a human model. Fig. 5
                         shows an example of body shape representation.

From a customer’s two-view photos, only 2D size features L of the customer can be obtained. To predict 3D body shape of the customer, a relationship model between 2D body size features L and 3D shape features C is necessary to establish. In order to learn the relationship models for different body cross-sections, a database  [47] with over 10,000 real subject scans aged 18–35 years old, including 3,450 male subjects and 6,630 female subjects, is used in this study. The scans were obtained by [TC]
                           
                              
                              
                                 2
                              
                           
                         scanner, in which subjects were scanned in a standard posture.

For each scanned model, 17 cross-sections (Table 1) are extracted. According to cross-sectional feature definition discussed in Section  3.2, both cross-sectional features are extracted for cross-section 
                           i
                           
                           
                              (
                              i
                              =
                              1
                              ,
                              …
                              ,
                              17
                              )
                           
                        : 2D size features 
                           
                              
                                 
                                    L
                                 
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           =
                           
                              [
                              
                                 
                                    W
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    D
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ]
                           
                         and 3D shape features 
                           
                              
                                 
                                    C
                                 
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           =
                           
                              [
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    s
                                 
                                 
                                    m
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ]
                           
                        . For each cross-section, a RBF neural network is built to represent the relationship between 2D size features L and 3D shape feature C. To formulate the relationship model, we first examine scatterplot and correlations between extracted 2D size features and 3D shape features. Some elements of the 3D shape features C demonstrate linear relationship with the size features, but some elements do not. Different cross-sections exhibit varied correlation results. It thus favors modeling the relationship by neural networks. Neural networks, being a member of artificial intelligent computational techniques, adopt a black box concept, without the assumption on linear relationship, to represent complex relationships  [48]. Some studies  [18,20] point out that linear relationship model would likely generate erroneous solutions in human modeling. RBF networks would be a good choice to model the relationship between 2D size features and 3D shape features because RBF networks use Gaussian transfer functions for the hidden layer neurons and work similar to K-means  [48]. RBF neural network is one of the most efficient network models  [49,30].

To formulate a RBF neural network relationship model, the inputs and outputs should be defined. In the preliminary correlation analysis, 2D size features, represented in terms of width-to-depth (named as WDR) ratio, show stronger correlations with 3D shape feature elements, than if 2D features are represented in terms of absolute sizes (width and depth). Sizing studies and clothing patternmaking literature  [50] often regard WDR as an important shape control, because cross-sections with similar WDR ratios would exhibit similar shapes  [51]; an example is shown in Fig. 6
                        . Therefore, we use WDR as input and cross-sectional 3D shape features C as outputs to construct a RBF network relationship model for each cross-section. A total of 17 single-input–multiple-output RBF networks are learnt from scanned data for the 17 cross-sections. A single-input–multiple-output RBF network is generalized from a number of single-input–single-output networks, as shown in Fig. 7
                        , in which output 
                           x
                         can be written as 
                           
                              (3)
                              
                                 x
                                 =
                                 f
                                 
                                    (
                                    
                                       u
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       L
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       G
                                    
                                    
                                       i
                                    
                                 
                                 
                                    (
                                    
                                       ‖
                                       
                                          u
                                       
                                       −
                                       
                                          
                                             
                                                c
                                             
                                          
                                          
                                             i
                                          
                                       
                                       ‖
                                    
                                    )
                                 
                              
                           
                         where 
                           
                              u
                           
                         is the input of the network, 
                           x
                           =
                           f
                           
                              (
                              
                                 u
                              
                              )
                           
                         is the output of the network. By setting the center 
                           
                              
                                 
                                    c
                                 
                              
                              
                                 i
                              
                           
                        , the variance 
                           
                              
                                 σ
                              
                              
                                 i
                              
                           
                         and the weight 
                           
                              
                                 w
                              
                              
                                 i
                              
                           
                         appropriately, the residual can be minimized.

We aim at reconstructing a precise body model from a customer’s two-view monocular images, in which the customer wearing tight-fit clothing stands in a standard posture. A method is needed to extract features from images to reconstruct a custom shape representation. For potential use of the resulting human models in online virtual fitting application, the method must be robust, without restrictive assumptions on the lighting source or image background. In other words, the method should be able to extract features from images with noisy background, as shown in Fig. 8
                        (a), and the method should be applicable to various cases where customer’s boundary silhouette is slightly occluded by clothing or limbs, as shown in Fig. 8(b)–(e). In spite of all these requirements, identifying the exact locations of the 17 cross-sections on a customer’s two-view images is itself a challenging task.

We use an interactive method for feature extraction. We develop a simple computer program that allows users to input images and interactively define feature points on images with mouse clicks. Two types of feature points are defined on images: reference pixels and boundary pixels. Firstly, we define four reference pixels 
                           R
                           P
                           =
                           
                              {
                              
                                 
                                    
                                       O
                                    
                                 
                                 
                                    l
                                 
                                 
                                    S
                                 
                              
                              ,
                              
                                 
                                    
                                       O
                                    
                                 
                                 
                                    u
                                 
                                 
                                    S
                                 
                              
                              ,
                              
                                 
                                    
                                       O
                                    
                                 
                                 
                                    l
                                 
                                 
                                    F
                                 
                              
                              ,
                              
                                 
                                    
                                       O
                                    
                                 
                                 
                                    u
                                 
                                 
                                    F
                                 
                              
                              }
                           
                         on the two-view images, where 
                           
                              
                                 
                                    O
                                 
                              
                              
                                 l
                              
                              
                                 S
                              
                           
                         and 
                           
                              
                                 
                                    O
                                 
                              
                              
                                 u
                              
                              
                                 S
                              
                           
                         refer to the floor level and head-top pixels on the side-view images on 
                           x
                           –
                           z
                         plane; 
                           
                              
                                 
                                    O
                                 
                              
                              
                                 l
                              
                              
                                 F
                              
                           
                         and 
                           
                              
                                 
                                    O
                                 
                              
                              
                                 u
                              
                              
                                 F
                              
                           
                         refer to the floor level and head-top pixels on the front-view image on 
                           y
                           –
                           z
                         plane, as shown in Fig. 9
                        . In addition, we also define 17 sets of cross-sectional boundary pixels, each includes 4 pixel points 
                           
                              {
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    1
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    2
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    3
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    4
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              }
                           
                        , indicating the 
                           i
                        -th cross-sectional boundary pixels on the back (
                           
                              
                                 
                                    p
                                 
                              
                              
                                 1
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                        ) and front (
                           
                              
                                 
                                    p
                                 
                              
                              
                                 
                                    
                                    
                                       2
                                    
                                 
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                        ) side-view silhouettes and on the left (
                           
                              
                                 
                                    p
                                 
                              
                              
                                 3
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                        ) and right (
                           
                              
                                 
                                    p
                                 
                              
                              
                                 4
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                        ) front-view silhouettes, as shown in Fig. 9.

The features (boundary pixels) must be converted from pixel coordinates to size measurements in order to define the position (global feature vector G) and the size (local feature vector L) of the cross-sections. The global feature vector, 
                           
                              
                                 
                                    G
                                 
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           =
                           
                              [
                              
                                 
                                    g
                                 
                                 
                                    V
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    g
                                 
                                 
                                    B
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    g
                                 
                                 
                                    S
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ]
                           
                        , defines the vertical position 
                           
                              
                                 g
                              
                              
                                 V
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                        , back horizontal position 
                           
                              
                                 g
                              
                              
                                 B
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         and side horizontal position 
                           
                              
                                 g
                              
                              
                                 S
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         of the 
                           i
                        -th cross-section: 
                           
                              
                                 (4)
                                 
                                    
                                       
                                          g
                                       
                                       
                                          V
                                       
                                       
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             [
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                      1
                                                   
                                                   
                                                      
                                                         (
                                                         i
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                             −
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                      
                                                   
                                                   
                                                      l
                                                   
                                                   
                                                      S
                                                   
                                                
                                                )
                                             
                                             ]
                                          
                                          +
                                          
                                             [
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      
                                                         (
                                                         i
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                             −
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                      
                                                   
                                                   
                                                      l
                                                   
                                                   
                                                      S
                                                   
                                                
                                                )
                                             
                                             ]
                                          
                                       
                                       
                                          2
                                          ⋅
                                          
                                             [
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                      
                                                   
                                                   
                                                      u
                                                   
                                                   
                                                      S
                                                   
                                                
                                                )
                                             
                                             −
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                      
                                                   
                                                   
                                                      l
                                                   
                                                   
                                                      S
                                                   
                                                
                                                )
                                             
                                             ]
                                          
                                       
                                    
                                    ⋅
                                    H
                                 
                              
                              
                                 (5)
                                 
                                    
                                       
                                          g
                                       
                                       
                                          B
                                       
                                       
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    =
                                    
                                       
                                          X
                                          
                                             (
                                             
                                                
                                                   
                                                      p
                                                   
                                                
                                                
                                                   1
                                                
                                                
                                                   
                                                      (
                                                      i
                                                      )
                                                   
                                                
                                             
                                             )
                                          
                                          −
                                          X
                                          
                                             (
                                             
                                                
                                                   
                                                      O
                                                   
                                                
                                                
                                                   u
                                                
                                                
                                                   S
                                                
                                             
                                             )
                                          
                                       
                                       
                                          
                                             Z
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      O
                                                   
                                                
                                                
                                                   u
                                                
                                                
                                                   S
                                                
                                             
                                             )
                                          
                                          −
                                          
                                             Z
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      O
                                                   
                                                
                                                
                                                   l
                                                
                                                
                                                   S
                                                
                                             
                                             )
                                          
                                       
                                    
                                    ⋅
                                    H
                                 
                              
                              
                                 (6)
                                 
                                    
                                       
                                          g
                                       
                                       
                                          S
                                       
                                       
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             Y
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      p
                                                   
                                                
                                                
                                                   3
                                                
                                                
                                                   
                                                      (
                                                      i
                                                      )
                                                   
                                                
                                             
                                             )
                                          
                                          −
                                          
                                             Y
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      O
                                                   
                                                
                                                
                                                   u
                                                
                                                
                                                   F
                                                
                                             
                                             )
                                          
                                       
                                       
                                          
                                             Z
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      O
                                                   
                                                
                                                
                                                   u
                                                
                                                
                                                   F
                                                
                                             
                                             )
                                          
                                          −
                                          
                                             Z
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      O
                                                   
                                                
                                                
                                                   l
                                                
                                                
                                                   F
                                                
                                             
                                             )
                                          
                                       
                                    
                                    ⋅
                                    H
                                 
                              
                           
                         where 
                           
                              X
                           
                           
                              (
                              
                                 p
                              
                              )
                           
                        , 
                           
                              Y
                           
                           
                              (
                              
                                 p
                              
                              )
                           
                         and 
                           
                              Z
                           
                           
                              (
                              
                                 p
                              
                              )
                           
                         give the x, y, and z coordinate values of pixel p on the defined plane; 
                           H
                         is the height measurement of the subject.

For each cross-section’s local size feature 
                           
                              
                                 
                                    L
                                 
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           =
                           
                              [
                              
                                 
                                    W
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    D
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ]
                           
                        , it defines width and depth of the cross-section, which can be calculated by: 
                           
                              
                                 (7)
                                 
                                    
                                       
                                          W
                                       
                                       
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             |
                                             
                                                Y
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                      3
                                                   
                                                   
                                                      
                                                         (
                                                         i
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                             −
                                             
                                                Y
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                      4
                                                   
                                                   
                                                      
                                                         (
                                                         i
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                             |
                                          
                                       
                                       
                                          
                                             |
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                      
                                                   
                                                   
                                                      u
                                                   
                                                   
                                                      F
                                                   
                                                
                                                )
                                             
                                             −
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                      
                                                   
                                                   
                                                      l
                                                   
                                                   
                                                      F
                                                   
                                                
                                                )
                                             
                                             |
                                          
                                       
                                    
                                    ⋅
                                    H
                                 
                              
                              
                                 (8)
                                 
                                    
                                       
                                          D
                                       
                                       
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             |
                                             X
                                             
                                                (
                                                
                                                   
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      
                                                         (
                                                         i
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                             −
                                             X
                                             
                                                (
                                                
                                                   
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                      1
                                                   
                                                   
                                                      
                                                         (
                                                         i
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                             |
                                          
                                       
                                       
                                          
                                             |
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                      
                                                   
                                                   
                                                      u
                                                   
                                                   
                                                      S
                                                   
                                                
                                                )
                                             
                                             −
                                             
                                                Z
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         O
                                                      
                                                   
                                                   
                                                      l
                                                   
                                                   
                                                      S
                                                   
                                                
                                                )
                                             
                                             |
                                          
                                       
                                    
                                    ⋅
                                    H
                                    .
                                 
                              
                           
                        
                     

As discussed in Section  3.3, for each cross-section of the body shape representation, a RBF neural network is trained using extracted features from scanned examples to explain the relationship between cross-sectional Width-to-Depth Ratio (WDR) and 3D shape features C. With a known RBF network model for cross-section 
                           i
                        , the cross-sectional shape features 
                           
                              
                                 
                                    C
                                 
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           =
                           
                              [
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    s
                                 
                                 
                                    m
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    1
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ]
                           
                         can be predicted from 
                           
                              
                                 W
                                 D
                                 R
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           =
                           
                              
                                 W
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           /
                           
                              
                                 D
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                        , which are extracted from the customer’s images and calculated using Eqs. (7) and (8). With the predicted cross-sectional 3D shape features C, the cross-section is reconstructed. Assume that 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 0
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         be the first point of the 
                           i
                        -th cross-sectional polygon, 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 0
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         has coordinate 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    0
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              )
                           
                           =
                           
                              (
                              
                                 
                                    
                                       
                                          
                                             D
                                          
                                          
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                       
                                       
                                          
                                             r
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             r
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                    
                                    
                                       0
                                    
                                 
                              
                              )
                           
                        , then the coordinates of the 
                           j
                        -th point 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 j
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         can be calculated by
                           
                              (9)
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                       
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                y
                                             
                                             
                                                j
                                                −
                                                1
                                             
                                             
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                          
                                          −
                                          
                                             
                                                s
                                             
                                             
                                                j
                                             
                                             
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                          
                                          ⋅
                                          
                                             
                                                x
                                             
                                             
                                                j
                                                −
                                                1
                                             
                                             
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                          
                                       
                                       
                                          tan
                                          
                                             (
                                             
                                                
                                                   j
                                                
                                                
                                                   m
                                                
                                             
                                             π
                                             )
                                          
                                          −
                                          
                                             
                                                s
                                             
                                             
                                                j
                                             
                                             
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                    and
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          y
                                       
                                       
                                          j
                                       
                                       
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    =
                                    tan
                                    
                                       (
                                       
                                          
                                             j
                                          
                                          
                                             m
                                          
                                       
                                       π
                                       )
                                    
                                    ⋅
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                       
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    ,
                                    
                                    j
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                    .
                                 
                              
                           
                         Point 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 j
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         is the intersection point between lines 
                           
                              
                                 
                                    L
                                 
                              
                              
                                 j
                              
                           
                         and 
                           
                              
                                 
                                    L
                                 
                              
                              
                                 j
                              
                              
                                 ′
                              
                           
                         of the cross-sectional polygon, as shown in Fig. 10
                        . Line 
                           
                              
                                 
                                    L
                                 
                              
                              
                                 j
                              
                           
                         with slope 
                           
                              
                                 s
                              
                              
                                 j
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         passes through point 
                           
                              
                                 
                                    p
                                 
                              
                              
                                 j
                                 −
                                 1
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                        ; line 
                           
                              
                                 
                                    L
                                 
                              
                              
                                 j
                              
                              
                                 ′
                              
                           
                         passes through the origin point O at a slope 
                           tan
                           
                              (
                              
                                 
                                    j
                                 
                                 
                                    m
                                 
                              
                              π
                              )
                           
                        .

As such, the feature points 
                           
                              
                                 
                                    Q
                                 
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           =
                           
                              [
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    0
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    
                                       p
                                    
                                 
                                 
                                    m
                                 
                                 
                                    
                                       (
                                       i
                                       )
                                    
                                 
                              
                              ]
                           
                         of all 17 cross-sections can be predicted, resulting in a feature matrix 
                           
                              A
                           
                           =
                           
                              [
                              
                                 
                                    
                                       Q
                                    
                                 
                                 
                                    
                                       (
                                       1
                                       )
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    
                                       Q
                                    
                                 
                                 
                                    
                                       (
                                       17
                                       )
                                    
                                 
                              
                              ]
                           
                        . A mesh structure, denoted as framework F, can be obtained by translating the corresponding cross-sections of A according to image extracted global features 
                           
                              G
                           
                           =
                           
                              [
                              
                                 
                                    
                                       G
                                    
                                 
                                 
                                    
                                       (
                                       1
                                       )
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    
                                       G
                                    
                                 
                                 
                                    
                                       (
                                       17
                                       )
                                    
                                 
                              
                              ]
                           
                         in three-dimensional space. The resulting framework 
                           
                              F
                           
                         is the reconstructed shape representation of the customer. The reconstructed shape representation has the same structure as illustrated in Fig. 5.

We realize model customization by deforming a template model based on shape features extracted from the customer’s photos. Because the customized models must have realistic appearance, high-resolution scanned models are used as templates. Scanned models with average builds are first processed by hole filling and smoothing and used as templates. Fig. 11
                         shows the male and female template models used in this paper.

We develop a new deformation algorithm composite triangle FFD, denoted as ct-FFD algorithm, in this paper. The deformation of model from template T to a customized model M is driven by the change of control mesh from B to F, as outlined in Fig. 12
                        . The reconstructed customer shape representation in Section  3.5 is used as deformed control mesh F, which has the same topology as the template’s control mesh B.

For any vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         of T, it can be parameterized on triangle 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                           =
                           Δ
                           
                              
                                 p
                              
                              
                                 j
                                 0
                              
                           
                           
                              
                                 p
                              
                              
                                 j
                                 1
                              
                           
                           
                              
                                 p
                              
                              
                                 j
                                 2
                              
                           
                           
                              (
                              
                                 
                                    b
                                 
                                 
                                    j
                                 
                              
                              ∈
                              
                                 B
                              
                              )
                           
                         using local coordinates 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                    j
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    i
                                    j
                                 
                              
                              )
                           
                        . Local coordinates 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                    j
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                    j
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    i
                                    j
                                 
                              
                              )
                           
                         represent the relative position of 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         on triangle 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                        , which can be obtained by solving following linear equation:
                           
                              (10)
                              
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       p
                                    
                                    
                                       j
                                       0
                                    
                                 
                                 +
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 ⋅
                                 
                                    
                                       
                                          U
                                       
                                    
                                    
                                       j
                                    
                                 
                                 +
                                 
                                    
                                       v
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 ⋅
                                 
                                    
                                       
                                          V
                                       
                                    
                                    
                                       j
                                    
                                 
                                 +
                                 
                                    
                                       w
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 ⋅
                                 
                                    
                                       
                                          W
                                       
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 .
                              
                           
                         With the same topology between template model shape representation B and customer’s reconstructed shape representation F, the corresponding triangle 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                           =
                           Δ
                           
                              
                                 p
                              
                              
                                 j
                                 0
                              
                           
                           
                              
                                 p
                              
                              
                                 j
                                 1
                              
                           
                           
                              
                                 p
                              
                              
                                 j
                                 2
                              
                           
                         of B is changed to 
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                           =
                           Δ
                           
                              
                                 q
                              
                              
                                 j
                                 0
                              
                           
                           
                              
                                 q
                              
                              
                                 j
                                 1
                              
                           
                           
                              
                                 q
                              
                              
                                 j
                                 2
                              
                           
                        , 
                           
                              
                                 f
                              
                              
                                 j
                              
                           
                           ∈
                        
                        F. Thus, vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         is deformed to a new position 
                           
                              
                                 t
                              
                              
                                 i
                                 j
                              
                              
                                 ′
                              
                           
                        , which is calculated by solving 
                           
                              (11)
                              
                                 
                                    
                                       t
                                    
                                    
                                       i
                                       j
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       q
                                    
                                    
                                       j
                                       0
                                    
                                 
                                 +
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 ⋅
                                 
                                    
                                       
                                          U
                                       
                                    
                                    
                                       j
                                    
                                    
                                       ′
                                    
                                 
                                 +
                                 
                                    
                                       v
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 ⋅
                                 
                                    
                                       
                                          V
                                       
                                    
                                    
                                       j
                                    
                                    
                                       ′
                                    
                                 
                                 +
                                 
                                    
                                       w
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 ⋅
                                 
                                    
                                       
                                          W
                                       
                                    
                                    
                                       i
                                       j
                                    
                                    
                                       ′
                                    
                                 
                                 .
                              
                           
                         The final position of 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         is defined as 
                           
                              (12)
                              
                                 
                                    
                                       m
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   b
                                                
                                                
                                                   j
                                                
                                             
                                             ∈
                                             
                                                B
                                             
                                          
                                       
                                       
                                          
                                             k
                                          
                                          
                                             i
                                             j
                                          
                                       
                                       ⋅
                                       
                                          
                                             t
                                          
                                          
                                             i
                                             j
                                          
                                          
                                             ′
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   b
                                                
                                                
                                                   j
                                                
                                             
                                             ∈
                                             
                                                B
                                             
                                          
                                       
                                       
                                          
                                             k
                                          
                                          
                                             i
                                             j
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 k
                              
                              
                                 i
                                 j
                              
                           
                         is the weight of face 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         on 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                        . The ct-FFD algorithm we proposed is based on t-FFD algorithm  [46], the main difference between the two algorithms is how weight 
                           
                              
                                 k
                              
                              
                                 i
                                 j
                              
                           
                         in Eq. (12) is calculated. In t-FFD algorithm  [46], 
                           
                              
                                 k
                              
                              
                                 i
                                 j
                              
                           
                         is defined as: 
                           
                              (13)
                              
                                 
                                    
                                       k
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             1
                                             −
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   β
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             if  
                                             0
                                             ≤
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                             ≤
                                             β
                                             ,
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             else.
                                          
                                       
                                    
                                 
                              
                           
                         In Eq. (13), 
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                           =
                           
                              |
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              −
                              
                                 
                                    G
                                 
                                 
                                    j
                                 
                              
                              |
                           
                         is the distance between vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         and the barycenter 
                           
                              
                                 G
                              
                              
                                 j
                              
                           
                         of face 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                        ; 
                           
                              
                                 r
                              
                              
                                 j
                              
                           
                         is the radius of circumscribed circle for triangle face 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         that 
                           
                              
                                 r
                              
                              
                                 j
                              
                           
                           =
                           
                              
                                 
                                    |
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          0
                                       
                                    
                                    −
                                    
                                       
                                          G
                                       
                                       
                                          j
                                       
                                    
                                    |
                                 
                                 +
                                 
                                    |
                                    
                                       
                                          p
                                          
                                             
                                             
                                                j
                                             
                                          
                                       
                                       
                                          1
                                       
                                    
                                    −
                                    
                                       
                                          G
                                       
                                       
                                          j
                                       
                                    
                                    |
                                 
                                 +
                                 
                                    |
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          2
                                       
                                    
                                    −
                                    
                                       
                                          G
                                       
                                       
                                          j
                                       
                                    
                                    |
                                 
                              
                              
                                 3
                              
                           
                        ; and 
                           β
                         is a control parameter for the effective range of 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                        .

t-FFD algorithm calculates the global deformation of 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                        , which is affected by all faces 
                           
                              (
                              
                                 
                                    b
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         of B. As pointed out by Kobayashi and Ootsubo  [46], Eq. (13) may cause shape distortion if the control mesh B has uneven triangles because the deformation of T is in indirect mode that T is deformed by changing the control mesh 
                           ∇
                           
                              (
                              
                                 B
                              
                              →
                              
                                 F
                              
                              )
                           
                        .

In this paper, deformation algorithm composite triangle FFD (ct-FFD) is developed that improves on t-FFD in three aspects. First, both the template model and the control mesh model are segmented into parts. The deformation in a specific part of the template model is mainly affected by the corresponding part of the control mesh. It implies that the global deformation is converted into local deformation. For our application on human model customization, changing global deformation to local ones avoids the deformation of certain body parts being distorted by other body parts. For example, the arm deformation is distorted by the torso deformation when arms are placed close to the body.

The segmentation of template model and control mesh model is straightforward because of the identified body feature cross-sections. Cross sections at 
                           
                              
                                 
                                    L
                                 
                              
                              
                                 5
                              
                           
                         and 
                           
                              
                                 
                                    L
                                 
                              
                              
                                 14
                              
                           
                         can separate the arms, legs with the torso. Therefore, the vertices of the human template model T are grouped into five body parts: left-arm 
                           
                              
                                 
                                    T
                                 
                              
                              
                                 
                                    (LA)
                                 
                              
                           
                        , left-leg 
                           
                              
                                 
                                    T
                                 
                              
                              
                                 
                                    (LL)
                                 
                              
                           
                        , torso 
                           
                              
                                 
                                    T
                                 
                              
                              
                                 
                                    (T)
                                 
                              
                           
                        , right-leg 
                           
                              
                                 
                                    T
                                 
                              
                              
                                 
                                    (RL)
                                 
                              
                           
                         and right-arm 
                           
                              
                                 
                                    T
                                 
                              
                              
                                 
                                    (RA)
                                 
                              
                           
                        . Similarly, the faces of the control mesh model B are grouped into five corresponding sections: left-arm 
                           
                              
                                 
                                    B
                                 
                              
                              
                                 
                                    (LA)
                                 
                              
                           
                        , left-leg 
                           
                              
                                 
                                    B
                                 
                              
                              
                                 
                                    (LL)
                                 
                              
                           
                        , torso 
                           
                              
                                 
                                    B
                                 
                              
                              
                                 
                                    (T)
                                 
                              
                           
                        , right-leg 
                           
                              
                                 
                                    B
                                 
                              
                              
                                 
                                    (RL)
                                 
                              
                           
                         and right-arm 
                           
                              
                                 
                                    B
                                 
                              
                              
                                 
                                    (RA)
                                 
                              
                           
                        . Fig. 13
                         shows segmented template model and control mesh, in which different body parts are labeled in different colors. In addition, faces of B that are adjacent to a specific body part 
                           
                              
                                 
                                    B
                                 
                              
                              
                                 
                                    (
                                    m
                                    )
                                 
                              
                           
                         are defined as a neighboring face set J: left-arm 
                           
                              
                                 
                                    J
                                 
                              
                              
                                 
                                    (LA)
                                 
                              
                           
                        , left-leg 
                           
                              
                                 
                                    J
                                 
                              
                              
                                 
                                    (LL)
                                 
                              
                           
                        , torso 
                           
                              
                                 
                                    J
                                 
                              
                              
                                 
                                    (T)
                                 
                              
                           
                        , right-leg 
                           
                              
                                 
                                    J
                                 
                              
                              
                                 
                                    (RL)
                                 
                              
                           
                         and right-arm 
                           
                              
                                 
                                    J
                                 
                              
                              
                                 
                                    (RA)
                                 
                              
                           
                        . For example, the blue faces of torso are the neighboring faces for vertices of right-leg 
                           
                              
                                 
                                    J
                                 
                              
                              
                                 
                                    (RL)
                                 
                              
                           
                        ; orange faces of torso are the neighboring faces for vertices of right-arm 
                           
                              
                                 
                                    J
                                 
                              
                              
                                 
                                    (RA)
                                 
                              
                           
                        .

Traditional t-FFD algorithm  [46] defines that the effective range of a control mesh face is in proportion to the radius of circumscribed circle of the triangle face with a parameter 
                           β
                         in Eq. (13). In human model customization, customer’s shape representation is used as control mesh; the shape representation is reconstructed from customer’s two-view photos based on recognized features (Table 1). Therefore, the control meshes have varied shape and sizes. For example, the triangle faces in limbs are much larger than the faces in torso part. If control mesh has uneven triangles, t-FFD algorithm, calculating weight by Eq. (13), would cause shape distortion  [46]. The second aspect that we propose to improve t-FFD is to decouple weight calculation from the size of the triangle faces. We calculate the weight as follows:
                           
                              (14)
                              
                                 
                                    
                                       K
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   e
                                                   
                                                      
                                                      
                                                         −
                                                         α
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     
                                                                        d
                                                                     
                                                                     
                                                                        i
                                                                        j
                                                                     
                                                                  
                                                               
                                                               
                                                                  β
                                                                  
                                                                     
                                                                        r
                                                                     
                                                                     
                                                                        ̄
                                                                     
                                                                  
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             if  
                                             0
                                             ≤
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   β
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         ̄
                                                      
                                                   
                                                
                                             
                                             ≤
                                             1
                                               where  
                                             
                                                
                                                   t
                                                
                                                
                                                   i
                                                
                                             
                                             ∈
                                             
                                                
                                                   
                                                      T
                                                   
                                                
                                                
                                                   
                                                      (
                                                      m
                                                      )
                                                   
                                                
                                             
                                               and  
                                             
                                                
                                                   b
                                                
                                                
                                                   j
                                                
                                             
                                             ∈
                                             
                                                
                                                   
                                                      B
                                                   
                                                
                                                
                                                   
                                                      (
                                                      m
                                                      )
                                                   
                                                
                                             
                                             ;
                                          
                                          
                                             (a)
                                          
                                       
                                       
                                          
                                             1
                                             −
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   β
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         ̄
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             elseif  
                                             0
                                             ≤
                                             
                                                
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                
                                                   β
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         ̄
                                                      
                                                   
                                                
                                             
                                             ≤
                                             1
                                               where  
                                             
                                                
                                                   t
                                                
                                                
                                                   i
                                                
                                             
                                             ∈
                                             
                                                
                                                   
                                                      T
                                                   
                                                
                                                
                                                   
                                                      (
                                                      m
                                                      )
                                                   
                                                
                                             
                                               and  
                                             
                                                
                                                   b
                                                
                                                
                                                   j
                                                
                                             
                                             ∈
                                             
                                                
                                                   
                                                      J
                                                   
                                                
                                                
                                                   
                                                      (
                                                      m
                                                      )
                                                   
                                                
                                             
                                             ;
                                          
                                          
                                             (b)
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             else .
                                          
                                          
                                             (c)
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              
                                 r
                              
                              
                                 ̄
                              
                           
                         is the average radius of circumscribed circles of all triangle faces 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         of torso part 
                           
                              
                                 
                                    B
                                 
                              
                              
                                 
                                    (T)
                                 
                              
                           
                        . It defines a constant effective range for all faces and prevents distortion caused by varied sized faces.

Thirdly, we propose a combined Gaussian and linear weight calculation, as opposite to the linear weight calculation in t-FFD  [46]. As shown in (14), the weight calculation depends on the spatial relationship between 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                        . If 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         is an adjacent face to the segmented body part where vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         is belonged to, a linear function (14)(b) is used to calculate the weight. The linear weight is similar to the t-FFD algorithm (Eq. (13)), but an average size 
                           
                              
                                 r
                              
                              
                                 ̄
                              
                           
                         is used instead. On the other hand, if face 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         belongs to the same body part as the vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                        , the weight is calculated by Gaussian function (14)(a), where parameter 
                           α
                         is set based on 
                           β
                           
                              
                                 r
                              
                              
                                 ̄
                              
                           
                         to give weight value as shown in Fig. 14
                        (a). Comparing Gaussian weight (Fig. 14(a)) and linear weight (Fig. 14(b)), Gaussian weight function tries to give higher weights on faces that are in close neighborhood to vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         than those are more further away, while linear weight function averages out the effects on nearby faces. Gaussian weight function better preserves the local characteristics captured in the shape representation. Comparisons between ct-FDD and t-FFD deformation algorithms, between linear weights and combined Gaussian and linear weights will be given in later Section  4.

@&#RESULTS AND DISCUSSIONS@&#

An experimental verification was carried out to evaluate our model customization method. To evaluate the effectiveness of the method, a total of 30 subjects, 15 males and 15 females, were randomly recruited to participate in the experiment. The recruitment was performed in the Hong Kong Polytechnic University among undergraduate and postgraduate students. The recruited 30 subjects were found with diverse body builds that can be classified as underweight, normal, overweight and obesity according to their BMI values, as shown in Table 2
                        . All subjects have their front-view and side-view photos taken for model customization. All subjects also had their body scanned by 
                           
                              
                                 
                                    [TC]
                                 
                              
                              
                                 2
                              
                           
                         NX16 scanning system for comparison purpose.

@&#EXPERIMENTAL RESULTS@&#

In the experiment, most subjects took photos in front of a blue curtain in order to clearly show the body boundary silhouette on the images. To demonstrate the method is capable of handling images with noisy background, some subjects’ photos were taken in a normal office building. The method described in Section  3 was used to customize body models with subjects’ two-view images and body height values 
                              
                                 (
                                 H
                                 )
                              
                           . Figs. 15 and 16
                           
                            show some model customization results (b and e). The results are shown against scanned models (c and f), and subject’s front-view (a) and side-view (d) photos. It is shown that our method can customize male and female 3D body models. The resulting models have realistic appearance, very similar body shape as the subjects in the photos. Besides, our method can accurately model the standing posture of the subjects, which is important for clothing pattern design and ergonomic analysis. Fig. 17
                            shows a result obtained from images with noisy background.

In the clothing industry, it is very important that a model customization process outputs models with accurate sizes. We compare the key body measurements of the customized models and the scanned models. The values of six girth measurements, including bust 
                              
                                 (
                                 
                                    
                                       
                                          L
                                       
                                    
                                    
                                       6
                                    
                                 
                                 )
                              
                           , waist 
                              
                                 (
                                 
                                    
                                       
                                          L
                                       
                                    
                                    
                                       9
                                    
                                 
                                 )
                              
                           , hip 
                              
                                 (
                                 
                                    
                                       
                                          L
                                       
                                    
                                    
                                       12
                                    
                                 
                                 )
                              
                           , Shoulder 
                              
                                 (
                                 
                                    
                                       
                                          L
                                       
                                    
                                    
                                       4
                                    
                                 
                                 )
                              
                           , maximum thigh at crotch level 
                              
                                 (
                                 
                                    
                                       
                                          L
                                       
                                    
                                    
                                       14
                                    
                                 
                                 )
                              
                            and calf 
                              
                                 (
                                 
                                    
                                       
                                          L
                                       
                                    
                                    
                                       16
                                    
                                 
                                 )
                              
                           , are compared in Table 3
                           .


                           Table 4
                            shows the ranges of discrepancy between the extracted girth measurement of the customized models and that of the scanned models. The mean discrepancy, standard deviation and the mean area variations are also shown in the table. It can be found that all mean discrepancies are lower than 1.5 cm, which is within the size tolerance of the clothing industry. With reference to the detailed size comparison in Table 3, it is found that female subjects have larger size discrepancies than male subjects, and the generated models often have smaller sizes than those of the scanned models. It is very likely because female subjects were scanned wearing camisole and shorts, while male subjects took the scan with only underpants or briefs. It also explains why relatively larger measurement discrepancies are found in waist area, because the waist is covered with clothing; the scanned models are garment surfaces, instead of body surfaces. The size discrepancy in shoulder area is probably because the scanned data are always noisy in the shoulder area; some subjects have squared or sloppy shoulders, thus the definition of the shoulder level on the images as well as on 3D models is difficult and causes errors. The size discrepancy found in limbs is partly due to different postures of the customized models and the scanned models. Our method customizes models to replicate the postures of the subjects in the images, while the subjects took different standing postures in body scanning. On the other hand, we use coarse polygons for limbs in our shape representation, as shown in Fig. 5; it affects the accuracy of the models. The accuracy can be improved if more cross-sections are defined in the limbs. With reference to the cross-sectional area variations, it is found that the average absolute area differences between the customized models and the scanned models are 2.08% for bust, 2.31% for waist and 1.51% for hip, respectively. The cross-sectional area comparison also confirms that the errors are likely due to the clothing worn during scan. The relative large area variations in leg and shoulder areas (Table 6) are mainly because of the incomplete scanned surfaces in these areas and different standing postures. In general, the result is promising and it shows that our method can generate human models with accurate size measurements.

In order to evaluate the effectiveness of the proposed method in modeling 3D shape from 2D features, the geometric shape of key cross-sections were extracted from the customized models. These curves were compared to cross-sectional curves extracted from scanned models. Fig. 18
                            shows sample cross-sectional curve shape comparison for both male and female subjects, at the three key cross-sections of bust, waist and hip. It shows that our method outperforms the method of  [25] because the deformed models’ cross-sectional curves of our method resemble the corresponding scanned models very well in most cases, the shape differences (gap between the two curves) between the two curves are very small. Fig. 19
                            compares the overall geometric shape of the customized models and the scanned models by superimposing the two models in 3D. It is found that the generated 3D models show similar and realistic shape and appearance of the subjects. The main differences between customized models and scanned models are in limbs, because subjects’ standing postures are different in photo-taking and body scanning. A subset of the 30 subjects’ 3D models, including the scanned and customized models, has been made available for comparison and research purpose at  [52].

As discussed in Section  3.6, the new ct-FFD deformation algorithm improves the t-FFD algorithm in three aspects. We compare the deformation results in this section. First of all, the t-FFD algorithm calculates global deformation, which leads to some shape distortions. In Fig. 20
                        , because the arm is too close to the body, the hip area and legs of the t-FFD deformed model are slimmer than expected. Besides, the arm shape is distorted and the arm posture cannot reach to the desired position. All these problems are solved in ct-FFD result because of the use of segmented local deformation, as shown in the highlighted areas of Fig. 20.

Both Figs. 20 and 21
                         show that t-FFD algorithm tries to preserve the shape of the template model as much as possible, while ct-FFD algorithm more closely deforms a shape according to the control mesh. Therefore, ct-FFD algorithm better captures the local characteristics in human model customization than t-FFD algorithm does.

The ct-FFD deformation algorithm is developed based on t-FFD algorithm  [46]; the major differences between the two algorithms include segmentation and a combined Gaussian and linear weight calculation (Eq. (14)). Section  4.2 compares the global deformation of t-FFD and segmented local deformations of ct-FFD. In this section, the benefit of using combined Gaussian and linear weight calculation is discussed. Linear weight calculation is used in t-FFD algorithm, as shown in Eq. (13). Linear weight averages out the effects of nearby faces, in the form of local coordinates, thus it tries to preserve the geometric shape of the template as much as possible. Fig. 22
                         compares the deformation results from linear weight calculation and those from combined Gaussian and linear weight calculation. The linear weight calculation is similar to Eq. (13) of t-FFD algorithm, except that not global deformation but segmented local deformation is calculated. In other words, Eq. (14)(b) is used in both cases, when face 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         and vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         are belonged to the same body part or face 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         is an adjacency face of the body part where vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         belongs to. In ct-FFD algorithm, a combined Gaussian and linear weight calculation is assumed that Gaussian weight (Eq. (14)(a)) is used if vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         and face 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         are in the same body segments while linear weight (Eq. (14)(b)) is used if face 
                           
                              
                                 b
                              
                              
                                 j
                              
                           
                         is the adjacency face of the body part where vertex 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                         belongs to. As shown in Fig. 22, the combined weight calculation of ct-FFD algorithm can provide more realistic deformation results. The deformed models exhibit high degree of resemblance as the subjects in the photos. In comparison, linear weight results would preserve the shape of template model more.

This section examines the computational speed of the proposed method for model customization. In our method, feature relationship model learning for all cross-sections is done offline using body scan data. After which, three steps are carried out to customize a model, including (1) feature extraction from images, (2) reconstruction of customer’s body shape representation and (3) deformation. The first step of feature extraction is done interactively. The second step takes less than 1.5 s to reconstruct a customer’s shape as a mesh structure with 232 vertices and 440 faces. In the final step, the speed of deformation depends on the template model used. In this paper, we use high resolution template models obtained from scan (Fig. 11) to generate the results. The computational cost can be lowered if templates of lower resolution are used, as compared in Table 5
                        . It shows that the algorithm takes less than 8 s for steps (2) and (3) to customize a model with high resolution template. The computational time is drastically reduced if a LD template is used, and the deformation takes less than 1.3 s. The size of a LD template in Table 5 is similar to that of SCAPE model  [19], and the deformation performance is comparable to other algorithms  [20].

In the current method, users interactively define features points of the 17 cross-sections on the images. Although interaction can handle images with noisy background, clicking features points on images is tedious. The accuracy of the final results depends on the user’s skill and the accuracy of the extracted features. In this section, we carry out a sensitivity analysis to examine the impact of imprecise parameter input and feature definition.

In image feature extraction step, customers are needed to provide body height and to click feature points on orthogonal-view images. Table 6 shows that 3 cm input errors in body height would cause about 1.5 cm differences in various cross-sections; the size measurement is not very sensitive to input errors in height. Secondly, if the body silhouette boundary is occluded in the image, user needs to estimate the position of the feature points, which affect the accuracy of the results. As shown in Fig. 23
                        , parts (d) and (f) are the reconstructed shape representation and deformation result based on feature points defined along the edge of the clothing (blue points on Fig. 23(a)); While parts (b) and (c) are the corresponding results for feature points defined along the estimated body contour (red points on Fig. 23(a)). The feature definition errors, namely the converted distance between the blue and red points on Fig. 23(a), and the cross-sectional size differences are listed in Table 7
                        . It shows that although the reconstructed shape representations are different in two different ways of feature definition (Fig. 23(b) and (d)), the size measurements are indeed not too sensitive to such feature definition errors (Table 7). Feature extraction from image is tedious in our current method. We will explore new methods  [53] to simplify and automate feature extraction from images in future work.

@&#CONCLUSIONS@&#

We have proposed a high resolution model customization method in this paper, in which customer’s detailed geometric characteristics can be reconstructed using limited size features extracted from the customer’s orthogonal-view photos. To realize model customization, we have first developed a shape representation that comprehensively describes the geometrical shape of a human body. The shape representation has a layered structure involving multiple local cross-sectional features. These local features correspond to certain features defining clothing sizes; we have defined 2D size features and 3D shape features to represent each layer of local feature. We have identified a novel relationship model between 2D size features and 3D shape features; these relationship models for individual cross-sections have been learnt from a large scale database of real subject scanned models. With known relationship models, we have predicted and reconstructed a customer’s 3D shape using size information extracted from the customer’s photos. Then, we have realized model customization by deforming a template model to the shape of the customer, based on reconstructed 3D shape representation. Experimental results have proved that (1) customized models have high-resolution detailed appearance; (2) the accuracy of customized models has achieved the level of scan; (3) the model customization process is efficient and meets the requirement for real-time application. To conclude, the method contributes the clothing industry in customizing accurate human body models efficiently.

We will explore to improve the existing method in the following areas. First, we will study automatic feature extraction from images; it makes the whole model customization process to be completely automatic. Second, we will improve and fine tune the relationship models between 2D size features and 3D shape features, so that special body shape characteristics such as sloppy or squared shoulders, plump back can be better modeled. Third, we will investigate model customization for customer who is dressed in loose-fit clothing or the body silhouette is occluded in the images.

@&#ACKNOWLEDGMENT@&#

The authors would like to thank all anonymous reviewers for constructive comments. The work described in this paper was partially supported by a grant from the Research Grants Council of the Hong Kong Special Administrative Region, China (Project No. PolyU 5269/09E).

Supplementary material related to this article can be found online at http://dx.doi.org/10.1016/j.cad.2013.06.001.

The following is the Supplementary material related to this article. 
                        
                           Video S1
                           
                              Video demonstrating the human model customization process based on orthogonal-view photos.
                           
                           
                        
                     
                  

@&#REFERENCES@&#

