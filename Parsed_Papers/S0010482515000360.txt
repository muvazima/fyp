@&#MAIN-TITLE@&#Low-complexity detection of atrial fibrillation in continuous long-term monitoring

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           This study describes an atrial fibrillation detector for implementation in a battery-powered device.


                        
                        
                           
                           The detector is suitable for detection of brief atrial fibrillation episodes.


                        
                        
                           
                           The detector performs better on the MIT–BIH Atrial Fibrillation database than do existing detectors.


                        
                        
                           
                           The detector can be implemented with just a few arithmetical operations.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Atrial fibrillation

RR-based detection

Low-complexity detection

Continuous ambulatory monitoring

Brief episodes

@&#ABSTRACT@&#


               
               
                  This study describes an atrial fibrillation (AF) detector whose structure is well-adapted both for detection of subclinical AF episodes and for implementation in a battery-powered device for use in continuous long-term monitoring applications. A key aspect for achieving these two properties is the use of an 8-beat sliding window, which thus is much shorter than the 128-beat window used in most existing AF detectors. The building blocks of the proposed detector include ectopic beat filtering, bigeminal suppression, characterization of RR interval irregularity, and signal fusion. With one design parameter, the performance can be tuned to put more emphasis on avoiding false alarms due to non-AF arrhythmias or more emphasis on detecting brief AF episodes. Despite its very simple structure, the results show that the detector performs better on the MIT–BIH Atrial Fibrillation database than do existing detectors, with high sensitivity and specificity (97.1% and 98.3%, respectively). The detector can be implemented with just a few arithmetical operations and does not require a large memory buffer thanks to the short window.
               
            

@&#INTRODUCTION@&#

In recent years, atrial fibrillation (AF) monitoring has been performed in connection with cryptogenic ischemic stroke [1], interventional ablation procedures [2], and pharmacological treatment [3], providing information for evaluating the efficacy of different treatment strategies. Ultimately, continuous long-term monitoring, lasting from several weeks to months, should be performed so that all episodes of paroxysmal AF are detected, including the very brief ones, and, therefore, it is essential that detection techniques are developed subject to the constraint that the implementation can be made extremely energy efficient.

It has been shown that the success rate of catheter ablation is highly overestimated when determined from 24-h Holter recordings [2]. This issue can be addressed by considerably extending the monitoring period so that the likelihood of detecting AF episodes increases. However, existing techniques for continuous long-term monitoring reduce the patient׳s quality of life and often lead to premature termination of the data acquisition [4]. While patient comfort can be improved by shrinking the size of the monitoring device, using a smaller battery, large battery capacity is nonetheless needed in this type of monitoring since battery replacement or recharging should be avoided.

Many different approaches to AF detection have been proposed in recent years: the majority of the detectors take the RR interval series as the starting point [5–8], whereas a few detectors also involve information on P wave and f wave morphology [9–11]. However, the latter type of detector is associated with dramatically higher computational demands than are the RR-based detectors, making them unsuitable for implementation in a low power device. Somewhat surprisingly, it has been demonstrated that increased complexity through inclusion of morphologic analysis does not necessarily translate to performance better than that achieved by an RR-based AF detector [9,10].

Crucial issues to be solved in RR-based AF detection are (1) improved detection rate of brief (“occult”) episodes of paroxysmal AF (
                        <
                        30
                        
                        s
                     ) and (2) reduction of the false alarm rate due to ectopic beats and other irregular types of rhythm. While almost all AF detectors require at least a 30-s episode for correct detection, recent studies have suggested that episodes as short as 5s are of interest to detect since they are associated with increased risk of stroke [12,1,13]. Therefore, reliable detection of brief episodes is essential so that an accurate evaluation of AF burden can be produced when studying thromboembolic risk.

In this paper, we propose a novel RR-based AF detector with a low complexity structure that can be implemented with few arithmetical operations. The detector involves blocks for preprocessing, bigeminal suppression, characterization of RR irregularity, signal fusion, and threshold detection; both off- and online versions of the detector are presented (Section 2). Using annotated ECG databases as well as simulated signals, both described in Section 3, detector performance is investigated in Section 4 as a function of different design parameters as well as a function of AF episode length. The resulting performance is compared to that achieved by other AF detectors in the literature.

@&#METHODS@&#

The proposed detector is based on the observation that AF episodes have increased RR irregularity and usually are associated with increased heart rate. A block diagram of the detector is shown in Fig. 1
                     , where each of the processing blocks is described in the following.

The occurrence of sporadic ectopic beats can be problematic when short time RR series are analyzed and, therefore, it is desirable to introduce techniques which can handle such situations. Preliminary tests showed that the simple 3-point median filter is useful for reducing the influence of ectopic beats in the RR series. This filter is defined by
                           
                              (1)
                              
                                 
                                    
                                       r
                                    
                                    
                                       m
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 median
                                 {
                                 r
                                 (
                                 n
                                 −
                                 1
                                 )
                                 ,
                                 r
                                 (
                                 n
                                 )
                                 ,
                                 r
                                 (
                                 n
                                 +
                                 1
                                 )
                                 }
                                 ,
                              
                           
                        where r(n) denotes the length of the nth RR interval (whose unit is in seconds). Median filtering is also useful for rejecting outlier RR intervals due to, e.g., missed QRS complexes. Higher-order median filters were found to be less useful since they smooth AF episodes to such a degree that episodes with low RR irregularity remain undetected.

Since heart rate usually increases during AF episodes, an estimate of the mean RR interval has to be determined, and employed as a feature in the AF detector, cf. [7,14]. Here, the traditional ensemble averager is replaced by the exponential averager to better track the “trend” in the RR interval series. The exponential averager is defined by [15]
                        
                           
                              (2)
                              
                                 
                                    
                                       r
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       r
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 n
                                 −
                                 1
                                 )
                                 +
                                 α
                                 (
                                 r
                                 (
                                 n
                                 )
                                 −
                                 
                                    
                                       r
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 n
                                 −
                                 1
                                 )
                                 )
                                 ,
                              
                           
                        where α (
                           0
                           <
                           α
                           <
                           1
                        ) determines the degree of smoothing, i.e., the lowpass cut-off frequency. Since the exponential averager in (2) has nonlinear phase, forward–backward filtering is performed to achieve linear (null) phase.

In a sliding detection window of length N, located at time n, the number of all pairwise RR interval combinations differing more than γ seconds is determined, and normalized with its maximum value 
                           N
                           (
                           N
                           −
                           1
                           )
                           /
                           2
                        , i.e.,
                           
                              (3)
                              
                                 M
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       2
                                    
                                    
                                       N
                                       (
                                       N
                                       −
                                       1
                                       )
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       0
                                    
                                    
                                       N
                                       −
                                       1
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       j
                                       +
                                       1
                                    
                                    
                                       N
                                    
                                 
                                 H
                                 (
                                 |
                                 r
                                 (
                                 n
                                 −
                                 j
                                 )
                                 −
                                 r
                                 (
                                 n
                                 −
                                 k
                                 )
                                 |
                                 −
                                 γ
                                 )
                                 ,
                              
                           
                        where 
                           H
                           (
                           ·
                           )
                         is the Heaviside step function and 
                           0
                           ≤
                           M
                           (
                           n
                           )
                           ≤
                           1
                        . It is noted that M(n) is partially based on the same principle as is sample entropy estimation [7].

The primary feature of RR irregularity is provided by the ratio between a smoothed version of M(n) and the RR interval trend r
                        
                           t
                        (n) in (2), 
                           
                              (4)
                              
                                 
                                    
                                       I
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             t
                                          
                                       
                                       (
                                       n
                                       )
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             t
                                          
                                       
                                       (
                                       n
                                       )
                                    
                                 
                                 ,
                              
                           
                        where M
                        
                           t
                        (n) is obtained by exponential averaging of M(n). The division by r
                        
                           t
                        (n) is motivated by the wish to emphasize RR irregularity at higher heart rates. It should be noted that I
                        
                           t
                        (n) is close to 0 for regular rhythms since the difference between pairs of RR intervals is usually smaller than a properly chosen γ, whereas I
                        
                           t
                        (n) approaches 1 during AF, see the examples in Fig. 2
                        .

It is well-known that bigeminy can be incorrectly interpreted as AF when the detection is RR-based [14]. In order to address this issue, we introduce another measure of RR irregularity, complementary to I
                        
                           t
                        (n) and with the property of being essentially indifferent to the presence of bigeminy. The measure is defined by
                           
                              (5)
                              
                                 B
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      0
                                                   
                                                   
                                                      N
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      m
                                                   
                                                
                                                (
                                                n
                                                −
                                                j
                                                )
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      =
                                                      0
                                                   
                                                   
                                                      N
                                                      −
                                                      1
                                                   
                                                
                                                r
                                                (
                                                n
                                                −
                                                j
                                                )
                                             
                                          
                                          −
                                          1
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where N is an even-valued integer. Similar to r
                        
                           t
                        (n) and M
                        
                           t
                        (n), B
                        
                           t
                        (n) results from exponential averaging of B(n). For bigeminy as well as for regular rhythms, the ratio in (5) is approximately 1 since r
                        
                           m
                        (n) and r(n) are similar, and thus B
                        
                           t
                        (n) is approximately 0, see Fig. 2(b). On the other hand, for AF the variation in r
                        
                           m
                        (n) is lower than that in r(n) because of the median filtering, and thus B
                        
                           t
                        (n) will increase so that it indicates irregularity. The squaring operation in (5) improves the differentiation of AF from other rhythms.

Simple signal fusion is employed to produce the decision function 
                           O
                           (
                           n
                           )
                           :
                           O
                           (
                           n
                           )
                         is identical to B
                        
                           t
                        (n), unless B
                        
                           t
                        (n) exceeds a fixed threshold δ when, instead, it becomes identical to I
                        
                           t
                        (n), i.e.,
                           
                              (6)
                              
                                 O
                                 (
                                 n
                                 )
                                 =
                                 {
                                 
                                    
                                       
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   t
                                                
                                             
                                             (
                                             n
                                             )
                                             ,
                                          
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   t
                                                
                                             
                                             (
                                             n
                                             )
                                             ≥
                                             δ
                                          
                                       
                                       
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   t
                                                
                                             
                                             (
                                             n
                                             )
                                             ,
                                          
                                          
                                             
                                                
                                                   B
                                                
                                                
                                                   t
                                                
                                             
                                             (
                                             n
                                             )
                                             <
                                             δ
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Fig. 2 illustrates 
                           O
                           (
                           n
                           )
                         as well as 
                           
                              
                                 r
                              
                              
                                 m
                              
                           
                           (
                           n
                           )
                           ,
                           
                              
                                 r
                              
                              
                                 t
                              
                           
                           (
                           n
                           )
                           ,
                           
                              
                                 I
                              
                              
                                 t
                              
                           
                           (
                           n
                           )
                        , and B
                        
                           t
                        (n) for an AF episode surrounded by ectopic beats and sinus rhythm with an episode of bigeminy. It is obvious from Fig. 2(a) that median filtering removes the RR intervals related to ectopic beats so that the AF episode can be correctly detected and false alarms avoided. Another feature of the detector is illustrated in Fig. 2(b) where 
                           O
                           (
                           n
                           )
                         is shown to be unaffected by the occurrence of bigeminy and, consequently, not misclassified as AF. Although I
                        
                           t
                        (n) increases during bigeminy, 
                           O
                           (
                           n
                           )
                         remains small since B
                        
                           t
                        (n) remains below δ, cf. (6). Similarly, B
                        
                           t
                        (n) is close to 0 during sinus rhythm, and therefore 
                           O
                           (
                           n
                           )
                         is also close to 0. Atrial fibrillation is detected whenever 
                           O
                           (
                           n
                           )
                         exceeds the fixed threshold η.

The detector requires just 8 multiplications, 2 divisions and 45 addition/subtraction operations for processing a single RR interval. Of the 8 multiplications, 6 are required for implementation of the exponential averager due to multiplication with α. If needed, the α-related multiplications can be approximated by additions and a shift, see Discussion.

Since forward–backward filtering requires that the time-reversed signal is processed, this type of filtering is best suited for offline processing. On the other hand, for online processing, forward–backward filtering with the exponential averager in (2) is replaced by forward filtering and a second-order exponential averager, defined by
                           
                              (7)
                              
                                 
                                    
                                       r
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       α
                                    
                                    
                                       2
                                    
                                 
                                 r
                                 (
                                 n
                                 )
                                 +
                                 2
                                 (
                                 1
                                 −
                                 α
                                 )
                                 
                                    
                                       r
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 n
                                 −
                                 1
                                 )
                                 −
                                 
                                    
                                       (
                                       1
                                       −
                                       α
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       r
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 n
                                 −
                                 2
                                 )
                                 .
                              
                           
                        
                     

To a minor extent, detector performance depends on the phase response of the selected exponential averager. Depending on the choice of α, the exponential averager in (7) produces a group delay that has to be taken into account. Accordingly, α is set to the same value for the respective exponential averagers associated with r
                        
                           t
                        (n), I
                        
                           t
                        (n), and B
                        
                           t
                        (n) to ensure identical group delay.

In the following, the AF detector is referred to as either offline or online, depending on whether filtering is performed according to (2) or (7). These two versions have the same computational complexity.

The algorithm was developed on the Long Term Atrial Fibrillation (LTAF) database [16,17], composed of 84 ECG recordings from patients with paroxysmal or persistent AF, most recordings with a 24-h duration. The entire database consists of nearly 9 million beats of which 59% occur during AF.

The MIT–BIH Atrial Fibrillation database [18,17] and the MIT–BIH Normal Sinus Rhythm (NSR) database [17] were used for performance evaluation. The MIT–BIH AF database includes 25 AF recordings of approximately 10-h duration, and contains in total more than 1 million beats, of which 43% occur during AF. Two subsets of the AF database were also analyzed in order to facilitate the comparison with published results, namely, by excluding records 00735 and 03665 since these only contain RR interval information [19,9], and by excluding records 04936 and 05091 since these contain incorrect annotations [5,20]. The resulting two subsets are labeled AFDB1 and AFDB2, respectively.

The MIT–BIH NSR database contains 18 ECG recordings of approximately 24-h duration, with a total of almost 2 million beats. Since no significant arrhythmias are present, it is well-suited for evaluation of detector specificity. To facilitate the comparison, the performance of the proposed detector has been evaluated on the commonly used combinations of the MIT–BIH AF and the MIT–BIH NSR databases.

The emerging interest in the detection of brief episodes of paroxysmal AF [1,12] motivated us to investigate performance as a function of episode duration. Due to the lack of annotated databases with brief episodes, the recently proposed paroxysmal AF simulator in [11] has been applied. RR intervals during sinus rhythm are generated by the model in [21], whereas an atrioventricular node model is used to generate RR intervals during AF [22]. When combining these two models, different RR interval series can be generated with variable episode duration, mean heart rate, and heart rate variability as illustrated in Fig. 3
                        .

Detector performance was tested using different RR series with alternating episodes of SR and AF. The entire database with simulated signals consists of four datasets, each dataset defined by the mean and standard deviation of the heart rate during sinus rhythm, namely, 60±1, 60±5, 100±1, and 100±5bpm. Each dataset is, in turn, divided into nine subsets with fixed AF episode lengths, ranging from 20 to 180 beats in steps of 20 beats. Thus, the database is composed of 36 subsets, each consisting of 5000 RR intervals for which 100 realizations were computed.

The performance was investigated in terms of the area under the curve (A) of the receiver operating characteristic (ROC), sensitivity (Se) and specificity (Sp). Sensitivity is defined by the number of correctly detected AF beats divided by the total number of AF beats, whereas specificity is defined by the number of correctly detected non-AF beats divided by the total number of non-AF beats. All other types of rhythm, including atrial flutter, were labeled as non-AF.

@&#RESULTS@&#


                        Fig. 4
                         displays A as a function of the exponential averaging parameter α for the LTAF database. For all investigated values of 
                           γ
                           ,
                           N
                        , and δ, the results show that A improves as α decreases. These results suggest that a small α should be chosen, however, since the LTAF contains mostly long AF episodes, such a choice means that α is not optimized for detection of shorter episodes, and thus the risk of missing brief episodes of paroxysmal AF increases. Therefore, it is important to complement the results in Fig. 4 with others that pinpoint detection performance as a function of episode length.

Using simulated signals, Fig. 5
                         demonstrates that the detection of brief episodes improves as α increases. For example, for α=0.1, an area under the curve of A=0.92 is obtained for 20-beat episodes, whereas, for α=0.02, the same value of A is obtained for 60-beat episodes. Hence, it can be concluded from the results in Figs. 4 and 5 that the choice of α should be a trade-off between avoiding false alarms due to non-AF arrhythmias (calling for a small α) and detecting brief AF episodes (calling for a large α).

Based on the results in Figs. 4 and 5, the following parameter values were chosen as a trade-off between the above-mentioned performance aspects: γ=0.03s, N=8, 
                           δ
                           =
                           2
                           ×
                           
                              
                                 10
                              
                              
                                 −
                                 4
                              
                           
                        , and α=0.02. Unless otherwise stated, these values are used in the following.


                        Fig. 6
                         displays the distribution of the detector output 
                           O
                           (
                           n
                           )
                         for AF and non-AF beats in the LTAF database. Based on the properties of these two distributions, the detection threshold η was chosen as that particular value where sensitivity and specificity are identical, i.e., η=0.725.

The briefest possible AF episode that can be detected was determined by means of simulated RR intervals with one, single AF episode. Starting with an episode length of five beats, the length was, in this particular test, incremented by one beat at a time until the episode was detected. The episode length is presented in Table 1
                         for different values of α—a parameter which is particularly influential on detection performance—together with the corresponding detection delay. For α=0.02, the shortest episode detected contained 60 beats, whereas for α=0.05, episodes as short as 15 beats could be detected

Detection performance was studied for various combinations of the MIT–BIH AF and MIT–BIH NSR databases, see Table 2
                        . Using the offline detector with α=0.02, the sensitivity/specificity was found to be 97.1/98.3% on the MIT–BIH AF database, whereas the online version performed marginally worse with 96.9/98.2%. When omitting the two records with incorrect annotations, i.e., when analyzing AFDB2, the sensitivity increased from 97.1% to 98.0% for the offline version. When evaluating performance on the MIT–BIH NSR database, a specificity of 98.6% was achieved for both the off- and online detectors (sensitivity was not evaluated since no AF episodes were present).

Tuning the detector for finding briefer episodes, e.g., by using α=0.05, Table 2 shows that such tuning comes at the expense of slightly reduced performance since the sensitivity/specificity drops from 97.1/98.3% to 96.7/97.9% on AFDB for the offline detector.

The slight difference in performance between the off- and online versions is due to the different filters used for trend estimation, defined by (2) and (7). The influence of a nonlinear phase on the RR interval trend r
                        
                           t
                        (n) is illustrated in Fig. 7
                        . Although the phase distortion is negligible when α is large, i.e., 0.1, a slight exponential reaction during rhythm transitions can be noted for α=0.02 or smaller, leading to slower reaction when heart rate changes occur and higher phase disturbances.

@&#DISCUSSION@&#

A recent study has shown that AF is often overlooked after interventional therapies when the standard strategy for treatment evaluation is used, i.e., at least two 24-h Holter recordings [23]. This finding suggests that continuous AF monitoring performed during much longer time spans should be recommended so that the success rate is not overestimated. However, current technology does not allow continuous monitoring since most AF detectors require a substantial amount of computations which render efficient implementations difficult, especially for detectors which involve morphologic ECG features. A first step towards efficient implementation was recently taken in [24] where the RR-based detector in [5] was implemented in application specific integrated circuit (ASIC). The results suggest that the energy required for long-term operation, i.e., for several years, is well within the battery capacity of an existing implantable device.

The present detector is compared to the best-performing detectors in the literature with respect to sensitivity and specificity, using the MIT–BIH AF database, see Table 3
                     . Like in most other studies, performance is presented with one decimal. It is evident that the detector by Zhou et al. [8] performs almost as good as the present detector, although the difference in performance increases slightly when the results are reported with two decimals: sensitivity/specificity is 97.12/98.28% and 96.89/98.25%, respectively.

When evaluating detector performance, it is important, for the reasons mentioned earlier, to also consider the ability to detect brief AF episodes. Of the detectors in Table 3 which employ a window length of 128 beats, i.e., [26,5,6,25], it was only Lian et al. [25] who also reported on performance for shorter windows. Comparing their results obtained for a length of 32 (i.e., the shortest window studied) with the results of the present detector obtained for α=0.05, the sensitivity is 94.4% vs. 96.7% and the specificity 92.6% vs. 97.9%, and thus the present detector offers a considerable improvement in performance.

Atrial fibrillatory episodes should have a duration of at least 30s to be considered clinically significant [27], implying that detectors with a 128-beat window tend to miss brief clinical episodes. With the growing interest in detection of occult AF episodes [28,1,12,13,29], with durations from 5 to 30s, there are even stronger reasons to develop AF detectors which can operate with window lengths much shorter than 128. Such a goal may not be easily achieved, however, when the detection process involves the estimation of probabilities, e.g., used for computing the sample entropy, since a shorter window implies increased statistical uncertainty.

Thanks to the flexibility introduced by α, the present detector can be tuned to detect brief episodes, although, just as with any detector, improved detection of brief episodes comes at the expense of lower specificity. Since the detector was developed on the LTAF database, mostly containing very long AF episodes, it is not surprising that better performance was obtained for a small α (
                        ≤
                        0.01
                     ), cf. Fig. 4. However, since the detection delay becomes unacceptably large for such small values, α=0.02 was used as a suitable trade-off. For the online detector, a smaller α leads to increased phase distortion and, therefore, it may be motivated to consider more sophisticated approaches to trend estimation [30,31].

A specificity of 98.6% was achieved on the MIT–BIH Normal Sinus Rhythm database, see Table 2, indicating that the detector produces few false alarms in the presence of respiratory sinus arrhythmia. This result is slightly better than those reported in [6,8] where the specificity was found to be 98.2% and 98.3%, respectively.

When more complex arrhythmias are encountered, reduced performance is expected. This reduction can be estimated by analyzing the MIT–BIH Arrhythmia database [18,17] which contains a variety of more complex arrhythmias. The resulting sensitivity/specificity was found to be 97.8/86.4%, indicating that most AF episodes could be reliably detected, while certain arrhythmias are misdetected as AF. Zhou et al. [8], being one of the very few authors who have reported on the performance of this database, achieved sensitivity/specificity of 97.3/90.8%, where specificity is notably better than that of the present detector. This difference in performance may be explained by the much longer detection window used by Zhou et al. which produces better specificity when long AF episodes are encountered (as is the case in this database).

The examples in Fig. 8
                      shed additional light on the pros and cons of AF detection when performed in the presence of various arrhythmias, none of them being AF. In the first three examples, the detector demonstrates excellent performance when encountering frequent ectopic beats (Fig. 8(a)), episodes of 2nd degree atrioventricular block (Fig. 8(b)), and sinus bradycardia (Fig. 8(c)). On the other hand, the performance degrades when atrial flutter (Fig. 8(d)) or ventricular flutter (Fig. 8(e)) is encountered since both these types of flutter are difficult to distinguish from AF when confining the analysis to RR intervals. Fig. 8(f) displays an episode of a complex supraventricular arrhythmia which causes the detector to produce a false alarm.

It is likely that these false alarms in Fig. 8(d)–(f) can be avoided by the introduction of a two-stage detection scheme. With its high sensitivity, the present detector can be employed in a first stage to find possible AF episodes. In a second stage, a more advanced AF detector is employed which involves morphologic information, like the detector described in [11], to determine in further detail whether the detected episodes are correct or not. Since morphologic analysis is computationally much more costly, the second-stage detector should preferably be implemented in a server or a smartphone.

While implementational aspects of the detector are outside the scope of this study, e.g., whether ASIC or a field programmable gate array (FPGA) should be used, a few observations on detector complexity can nonetheless be made. The present detector requires a window of only 8 RR intervals which, as already pointed out, is highly desirable from the viewpoint of detecting brief episodes. Moreover, such a short window implies very modest memory requirements which is desirable from the viewpoint of energy consumption. With its extremely simple structure, the detector requires just a few arithmetical operations and no table lookups and, consequently, the implementation can be made very battery-conserving. It is noted that further complexity reduction can be achieved by replacing the multiplications in (2), (3), and (7) by additions and shifts which are less costly, reducing the number of multiplications from 8 to 2. For example, the choice α=0.02 can be closely approximated with 
                        5
                        /
                        256
                        ≈
                        0.01953
                      which is implemented by 5 additions and an 8-bit shift.

Zhou et al. [8] reported on the computation time needed to analyze different public databases, but did not provide any information on the required number of arithmetic operations per RR interval. Since that detector makes use of high-order filters, in addition to the buffer required for the 128-beat window, much more memory is required than for the present detector.

The low complexity of the present detector is partly achieved by avoiding rather involved steps for handling of ectopic beats such as those in [5,10]. Instead, simple filtering and flagging techniques, i.e., (1) and (5), are employed for the purpose of reducing the number of false alarms due to bigeminy—an approach which seems to perform well according to the results in Table 3.

A limitation of the present study is that the proposed detector was not evaluated on real ECG data with occult paroxysmal AF since no such database has yet been annotated. Instead, an approach involving test signals has been pursued which still can provide valuable insight on detection performance.

@&#CONCLUSIONS@&#

The present study shows that the proposed AF detector, despite its extreme simplicity, offers better performance than do the detectors described in the literature. An important feature of the detector is its use of a short window, only 8 beats, facilitating the detection of brief, subclinical AF episodes. The detector is particularly well-suited for implementation in a battery-powered device, e.g., an external or implantable event recorder, thanks to the very few arithmetical operations required for each RR interval.

None declared.

@&#ACKNOWLEDGMENT@&#

This work was partially supported by CARRE (No. 611140) project, funded by the European Commission Framework Programme 7.

@&#REFERENCES@&#

