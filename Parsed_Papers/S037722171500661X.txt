@&#MAIN-TITLE@&#A bi-objective home care scheduling problem: Analyzing the trade-off between costs and client inconvenience

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           First bi/multi-objective model for the home care routing and scheduling problem.


                        
                        
                           
                           Insight in and analysis of the trade-off between costs and client inconvenience.


                        
                        
                           
                           A metaheuristic algorithm based on Multi-Directional Local Search.


                        
                        
                           
                           Numerical experiments on new benchmark instances based on real-life data.


                        
                        
                           
                           The trade-off is substantial, indicating the need for well-considered decisions.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Routing

Metaheuristics

Home care scheduling

Multi-objective

@&#ABSTRACT@&#


               
               
                  Organizations providing home care services are inclined to optimize their activities in order to meet the constantly increasing demand for home care. In this context, home care providers are confronted with multiple, often conflicting, objectives such as minimizing their operating costs while maximizing the service level offered to their clients by taking into account their preferences. This paper is the first to shed some light on the trade-off relationship between these two objectives by modeling the home care routing and scheduling problem as a bi-objective problem. The proposed model accounts for qualifications, working regulations and overtime costs of the nurses, travel costs depending on the mode of transportation, hard time windows, and client preferences on visit times and nurses. A distinguishing characteristic of the problem is that the scheduling problem for a single route is a bi-objective problem in itself, thereby complicating the problem considerably. A metaheuristic algorithm, embedding a large neighborhood search heuristic in a multi-directional local search framework, is proposed to solve the problem. Computational experiments on a set of benchmark instances based on real-life data are presented. A comparison with exact solutions on small instances shows that the algorithm performs well. An analysis of the results reveals that service providers face a considerable trade-off between costs and client convenience. However, starting from a minimum cost solution, the average service level offered to the clients may already be improved drastically with limited additional costs.
               
            

@&#INTRODUCTION@&#

In the European Union, the population share of persons older than 60 was 17 percent in 1980 and increased to 22 percent in 2004/5 (it is expected to reach 32 percent in 2030). Life expectancy of men (women) has risen from 68 (76) years to 74 (80) years during the same time period (European Commission, 2007). Increased life expectancy goes hand in hand with increased demand for care. In addition, many elderly people prefer to grow old in the privacy of their homes rather than in a nursing home. On the other hand, willingness for informal care by relatives is decreasing. This is partly due to the fact that women and men are both working (Tarricone & Tsouros, 2008). Therefore, organizations providing home care services are inclined to optimize their activities in order to meet the constantly increasing demand for home care (Koeleman, Bhulai, & van Meersbergen, 2012). This situation gave rise to a number of publications dealing with the daily routing and scheduling of home care workers in the last couple of years (an overview is given in Table 1
                     ). Most of them are application inspired and therefore deal with different variants of the problem.

However, several common characteristics can be identified. First of all, most works consider the total distance traveled or the routing costs of the nurses in the objective function (see e.g. Akjiratikarl, Yenradee, & Drake, 2007; Begur, Miller, & Weaver, 1997; Eveborn, Flisberg, & Rönnqvist, 2006; Eveborn, Rönnqvist, Einarsdóttir, Eklund, Líden, & Almroth, 2009; Hiermann, Prandtstetter, Rendl, Puchinger, & Raidl, 2015; Mankowska, Meisel, & Bierwirth, 2014; Rasmussen, Justesen, Dohn, & Larsen, 2012; Trautsamwieser, Gronalt, & Hirsch, 2011), often in addition to a number of other terms. Besides overtime costs, which can easily be combined with routing costs, these other terms usually account for nurse or client inconvenience. The former aspect involves, e.g. the penalization of assignments to clients that the respective care worker does not like. The latter aspect concerns, e.g. penalties for deviations from preferred visit times or from the set of preferred nurses. Trautsamwieser et al. (2011) consider seven different terms in the objective function and Hiermann et al. (2015) consider as many as 13 (see Table 1, column “# OF terms”).

A second common characteristic is the consideration of preferences of nurses or clients, e.g. in the objective function as mentioned above. Column “Nurse-Client” in Table 1 indicates whether a paper considers preferences of nurses for clients, preferences of clients for nurses or service consistency, i.e. if an attempt is made to keep the number of different nurses per client low.

Third, a majority of the available studies consider hard time windows on the start of service (see Table 1, column “TW”). In Austria, for example, home care organizations split the day into about five time slots of up to four hours per slot, which usually gives rise to such time windows.

Another common characteristic is the consideration of skills and/or skill levels (Table 1, column “skills”). In most applications, some of the home care workers are registered nurses while others are only qualified for housekeeping or personal hygiene tasks. Finally, in addition to skills, usually also working time regulations are taken into account (see Table 1, column “Work time”).

Besides the daily routing and scheduling problem, authors have also addressed the long term problem. Nickel, Schröder, and Steeg (2012) look at weekly schedules and link them to the operational planning problem. Weekly home care scheduling problems are also addressed in, e.g., Borsani, Matta, Beschi, and Sommaruga (2006), Gamst and Jensen (2012), Cappanera and Scutellà (2013), Maya Duque, Castro, Sörensen, and Goos (2015) and Trautsamwieser and Hirsch (2014), while Nowak, Hewitt, and Nataraj (2013) investigate planning horizons of two to three months, anticipating future requests.

Successful implementations of home health care scheduling tools are described, e.g., in Eveborn et al. (2006, 2009) or Begur et al. (1997). An overview of home care routing and scheduling and related problems can be found in Castillo-Salazar, Landa-Silva, and Qu (2015). More information on home care worker scheduling is provided in the survey by Gutiérrez, Gutiérrez, and Vidal (2013) and on personnel scheduling in general by Van den Bergh, Beliën, De Bruecker, Demeulemeester, and De Boeck (2013) and De Bruecker, Van den Bergh, Beliën, and Demeulemeester (2015).

In this paper the focus is on the daily home care routing and scheduling problem. In almost all related studies client inconvenience is either penalized in the objective function or considered in terms of constraints. The first approach assumes that the decision maker is able to provide appropriate weights for each term in the objective function. In the second approach strict bounds on client inconvenience levels have to be respected.

In our opinion, assigning weights to different terms in the objective function a priori can be a difficult task and allowing no deviations from pre-defined client inconvenience levels may be impractical. Thus, the aim of the current paper is to shed some light on the trade-off relationship between cost and client inconvenience in the context of home care routing and scheduling. For this purpose we model the home care routing and scheduling problem as a bi-objective problem. To the best of our knowledge, this is the first time.

The paper is organized as follows. In Section 2, we introduce the bi-objective home care routing and scheduling problem and we devise a mixed integer problem formulation that is strengthened by means of several families of valid inequalities. Embedded into the well-known 
                        ϵ
                     -constraint scheme, we solve small instances to optimality. In Section 3, we propose several approaches to solve the scheduling subproblem which is itself a bi-objective problem. We then design a metaheuristic solution framework that is based on multi-directional local search (Tricoire, 2012) to solve instances of realistic size (see Section 4). Finally, we analyze the trade-off between cost and patient inconvenience on a set of new instances in Section 5. These instances are derived from available data from different home health care organizations in Austria and are available online (http://alpha.uhasselt.be/kris.braekers). Conclusions and directions for future research are given at the end of the paper.

The Bi-objective Home Care Routing and Scheduling Problem (BIHCRSP) may be defined as follows. Given a set of nurses and a set of jobs to be performed at patient locations on a single day, the goal is to find a route and schedule for each nurse, indicating the jobs to perform, in which order and at what time.

Nurses have a start and end location (typically their home location), a time window in which they are available to work, and a regular and maximum working time. It is assumed that nurses are paid for their regular working time regardless of the amount of work they do. Working overtime is allowed at a certain cost, although the total working time cannot exceed the maximum. Each nurse uses a certain mode of transportation (e.g. car, public, …), while other nurses may use another mode. Besides, nurses have a certain level of qualification indicating their ability to perform a certain type of job, thereby making some nurse-job combinations infeasible. Lunch breaks for nurses are not considered explicitly, as nurses generally take breaks at their own convenience whenever possible. The time at which a job may be started is restricted by a hard time window. When nurses arrive before the start of the hard time window, they have to wait.

Two objectives are considered: minimizing total costs and minimizing client inconvenience. The former consists of the sum of travel costs and overtime costs of the nurses, while the latter depends on patient preferences regarding nurses and visit times.

Patients may specify preferences regarding the nurses that perform the jobs. For each job, a nurse is indicated as preferred, moderately preferred or not preferred, resulting in a penalty of respectively 0, 1 or 2 when such a nurse is assigned to the job. In addition, for each job, the corresponding patient may indicate a preferred time for the start of service. These preferences are modeled by constructing two additional soft time windows for each job, a tight one and a loose one. When service starts within the tight soft time window, no penalty is incurred. When service starts outside of the tight soft time window but within the loose one, a penalty of one is incurred. When service starts outside of the loose time window a penalty of two is incurred. Unless stated otherwise, numerical experiments in this paper consider soft time windows with a width of one and two hours, symmetrically around the preferred visit time. However, these values can easily be adapted to reflect other situations as indicated in Section 5.4.

Waiting is only allowed when arriving before the start of a hard time window. Hence, it is not allowed to postpone the start of service of a job to improve the level of patient convenience. The reason is that in reality nurses tend not to wait in such a situation. Modeling time preferences and soft time windows discretely instead of continuously makes the scheduling subproblem of the BIHCRSP slightly easier, by reducing the number of (non-dominated) schedules for a certain route/solution (see Section 3). Furthermore, this way time preferences are expressed similarly as nurse preferences (a penalty of 0, 1 or 2 per job), which makes it more meaningful to aggregate them in a single objective indicating the inconvenience for the patients. Of course, penalty levels can easily be adapted to put more emphasis on one of the objective components. Alternatively, patient convenience regarding time and nurse preference may be considered as two separate objectives. However, in our opinion these are two aspects of the same objective (patient convenience), and hence the decision maker would probably aggregate them anyway. Finally, besides modeling patient preferences, the convenience objective may also be used to incorporate service consistency in this single day problem for jobs which reoccur over a longer planning horizon.

We model the BIHCRSP on a directed graph 
                           
                              G
                              =
                              (
                              V
                              ,
                              A
                              )
                           
                         where V is the set of vertices and A the set of arcs. We consider a set of home care workers 
                           
                              N
                              =
                              {
                              1
                              ,
                              …
                              ,
                              N
                              }
                           
                         and a set of jobs 
                           
                              J
                              =
                              {
                              1
                              ,
                              …
                              ,
                              I
                              }
                           
                        . Each job is represented by a separate vertex in our graph, irrespective of whether two or more jobs are associated with the same physical location or client. We denote by 0 the starting location of a nurse and by 
                           
                              I
                              +
                              1
                           
                         the ending depot/location. These may be the same or different physical locations. Thus, 
                           
                              V
                              =
                              J
                              ∪
                              {
                              0
                              ,
                              I
                              +
                              1
                              }
                           
                        . Parameter qin
                         is used to indicate whether a nurse 
                           
                              n
                              ∈
                              N
                           
                         is sufficiently qualified to perform job 
                           
                              i
                              ∈
                              J
                           
                         (
                           
                              
                                 q
                                 
                                    i
                                    n
                                 
                              
                              =
                              1
                           
                        ) or not (
                           
                              
                                 q
                                 
                                    i
                                    n
                                 
                              
                              =
                              0
                           
                        ). Note that 
                           
                              
                                 q
                                 
                                    0
                                    n
                                 
                              
                              =
                              
                                 q
                                 
                                    I
                                    +
                                    1
                                    ,
                                    n
                                 
                              
                              =
                              1
                           
                        . Using this information the arc set is defined as follows: 
                           
                              A
                              =
                              {
                              
                                 (
                                 i
                                 ,
                                 j
                                 ,
                                 n
                                 )
                              
                              |
                              i
                              ∈
                              V
                              ∖
                              
                                 {
                                 I
                                 +
                                 1
                                 }
                              
                              ,
                              j
                              ∈
                              V
                              ∖
                              
                                 {
                                 0
                                 }
                              
                              ,
                              n
                              ∈
                              N
                              ,
                              i
                              ≠
                              j
                              ,
                              
                                 q
                                 
                                    i
                                    n
                                 
                              
                              =
                              1
                              ,
                              
                                 q
                                 
                                    j
                                    n
                                 
                              
                              =
                              1
                              }
                           
                        .

For each nurse 
                           
                              n
                              ∈
                              N
                           
                         a maximum regular working time duration rn
                         is known, in addition to a maximum allowed daily working time mn
                        , with rn
                         ≤ mn
                        , and a hard availability time window [an, bn
                        ]. Working times exceeding rn
                         incur a cost of dn
                         per time unit. Finally, let 
                           
                              c
                              
                                 i
                                 j
                              
                              n
                           
                         and 
                           
                              t
                              
                                 i
                                 j
                              
                              n
                           
                         denote the travel cost and travel time for nurse n between vertices i and j respectively. These travel costs and travel times are nurse-specific since nurses may use different modes of transportation and their depots may be at different physical locations.

Each job 
                           
                              i
                              ∈
                              J
                           
                         has a service duration si
                        , a hard time window [ei, li
                        ] and a preferred starting time pti
                        , where ei
                         ≤ pti
                         ≤ li
                        . As a result, the arc set A may be reduced by eliminating arcs between jobs 
                           
                              i
                              ,
                              j
                              ∈
                              J
                           
                         which are infeasible with respect to hard time windows, i.e. arcs (i, j, n) for which 
                           
                              max
                              
                                 (
                                 
                                    e
                                    i
                                 
                                 ,
                                 
                                    a
                                    n
                                 
                                 +
                                 
                                    t
                                    
                                       0
                                       i
                                    
                                    n
                                 
                                 )
                              
                              +
                              
                                 s
                                 i
                              
                              +
                              
                                 t
                                 
                                    i
                                    j
                                 
                                 n
                              
                              >
                              min
                              
                                 (
                                 
                                    l
                                    j
                                 
                                 ,
                                 
                                    b
                                    n
                                 
                                 −
                                 
                                    t
                                    
                                       j
                                       ,
                                       J
                                       +
                                       1
                                    
                                    n
                                 
                                 −
                                 
                                    s
                                    j
                                 
                                 )
                              
                           
                        .

In addition, clients specify preferences for nurses for each job, with pnin
                         indicating the penalty incurred (0, 1 or 2) when assigning nurse n to job i.

In order to formulate the BIHCRSP, we use the following binary decision variables:

                           
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            nurse
                                                            
                                                            n
                                                            
                                                            travels
                                                            
                                                            from
                                                            
                                                            i
                                                            
                                                            to
                                                            
                                                            j
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            otherwise
                                                            ,
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                p
                                                i
                                                1
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            a
                                                            
                                                            deviation
                                                            
                                                            of
                                                            
                                                            more
                                                            
                                                            than
                                                            
                                                            30
                                                            
                                                            minutes
                                                            
                                                            from
                                                            
                                                            p
                                                            
                                                               t
                                                               i
                                                            
                                                            
                                                            exists
                                                         
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         
                                                            
                                                               at
                                                               
                                                               job
                                                            
                                                            
                                                            i
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            otherwise
                                                            ,
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                p
                                                i
                                                2
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            a
                                                            
                                                            deviation
                                                            
                                                            of
                                                            
                                                            more
                                                            
                                                            than
                                                            
                                                            60
                                                            
                                                            minutes
                                                            
                                                            from
                                                            
                                                            p
                                                            
                                                               t
                                                               i
                                                            
                                                            
                                                            exists
                                                         
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         
                                                            
                                                               at
                                                               
                                                               job
                                                            
                                                            
                                                            i
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            otherwise
                                                            ,
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                z
                                                i
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            waiting
                                                            
                                                            until
                                                            
                                                            beginning
                                                            
                                                            of
                                                            
                                                            time
                                                            
                                                            window
                                                            
                                                            
                                                               e
                                                               i
                                                            
                                                            
                                                            at
                                                            
                                                            i
                                                         
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         
                                                            
                                                               is
                                                               
                                                               necessary
                                                            
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            otherwise
                                                            
                                                            (no
                                                            
                                                            waiting
                                                            
                                                            is
                                                            
                                                            necessary
                                                            
                                                            to
                                                            
                                                            start
                                                            
                                                            job
                                                            
                                                            i
                                                            )
                                                            ,
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where the last set of variables is used to prohibit waiting inside of hard time windows. We also use the following continuous variables:

                           
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                0
                                                n
                                             
                                             =
                                             
                                             time
                                             
                                             at
                                             
                                             which
                                             
                                             nurse
                                             
                                             n
                                             
                                             leaves
                                             
                                             from
                                             
                                             0
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             =
                                             
                                             time
                                             
                                             at
                                             
                                             which
                                             
                                             nurse
                                             
                                             n
                                             
                                             arrives
                                             
                                             at
                                             
                                             I
                                             +
                                             1
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                i
                                             
                                             =
                                             
                                             time
                                             
                                             at
                                             
                                             which
                                             
                                             service
                                             
                                             starts
                                             
                                             at
                                             
                                             i
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                p
                                                i
                                             
                                             =
                                             
                                             inconvenience
                                             
                                             score
                                             
                                             for
                                             
                                             job
                                             
                                             i
                                             ∈
                                             J
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             with
                                             
                                             respect
                                             
                                             to
                                             
                                             time
                                             
                                             windows,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                o
                                                n
                                             
                                             =
                                             
                                             overtime
                                             
                                             performed
                                             
                                             by
                                             
                                             nurse
                                             
                                             n
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                f
                                                1
                                             
                                             =
                                             min
                                             
                                                ∑
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                c
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             +
                                             
                                                ∑
                                                
                                                   n
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                d
                                                n
                                             
                                             
                                                o
                                                n
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             
                                                f
                                                2
                                             
                                             =
                                             min
                                             
                                                ∑
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             p
                                             
                                                n
                                                
                                                   i
                                                   n
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   J
                                                
                                             
                                             
                                                p
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                        subject to:

                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   j
                                                   |
                                                   (
                                                   0
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                x
                                                
                                                   0
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             1
                                             
                                             ∀
                                             n
                                             ∈
                                             N
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   |
                                                   (
                                                   i
                                                   ,
                                                   I
                                                   +
                                                   1
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   ,
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             ≤
                                             1
                                             
                                             ∀
                                             n
                                             ∈
                                             N
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   n
                                                   ,
                                                   j
                                                   |
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             =
                                             1
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   j
                                                   |
                                                   (
                                                   j
                                                   ,
                                                   i
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                x
                                                
                                                   j
                                                   i
                                                
                                                n
                                             
                                             =
                                             
                                                ∑
                                                
                                                   j
                                                   |
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                             ,
                                             n
                                             ∈
                                             N
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                0
                                                n
                                             
                                             +
                                             
                                                t
                                                
                                                   0
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                T
                                                j
                                             
                                             +
                                             
                                                M
                                                
                                                   0
                                                   j
                                                
                                                n
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   x
                                                   
                                                      0
                                                      j
                                                   
                                                   n
                                                
                                                )
                                             
                                             
                                             ∀
                                             
                                                (
                                                0
                                                ,
                                                j
                                                ,
                                                n
                                                )
                                             
                                             ∈
                                             A
                                             ,
                                             j
                                             ≠
                                             I
                                             +
                                             1
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                M
                                                
                                                   0
                                                   j
                                                
                                                n
                                             
                                             =
                                             
                                                b
                                                n
                                             
                                             +
                                             
                                                t
                                                
                                                   0
                                                   j
                                                
                                                n
                                             
                                             −
                                             
                                                e
                                                j
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                ∑
                                                
                                                   n
                                                   |
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                T
                                                j
                                             
                                             +
                                             
                                                M
                                                
                                                   i
                                                   j
                                                
                                                1
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   ∑
                                                   
                                                      n
                                                      |
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      n
                                                      )
                                                      ∈
                                                      A
                                                   
                                                
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                   n
                                                
                                                )
                                             
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ∈
                                             J
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                M
                                                
                                                   i
                                                   j
                                                
                                                1
                                             
                                             =
                                             
                                                l
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             −
                                             
                                                e
                                                j
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   ,
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             ≤
                                             
                                                T
                                                
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             +
                                             
                                                M
                                                
                                                   i
                                                   ,
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   x
                                                   
                                                      i
                                                      ,
                                                      I
                                                      +
                                                      1
                                                   
                                                   n
                                                
                                                )
                                             
                                             
                                             ∀
                                             
                                                (
                                                i
                                                ,
                                                I
                                                +
                                                1
                                                ,
                                                n
                                                )
                                             
                                             ∈
                                             A
                                             ,
                                             i
                                             ≠
                                             0
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                M
                                                
                                                   i
                                                   ,
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             =
                                             
                                                l
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   ,
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             −
                                             
                                                a
                                                n
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             
                                                e
                                                i
                                             
                                             ≤
                                             
                                                T
                                                i
                                             
                                             ≤
                                             
                                                l
                                                i
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                j
                                             
                                             ≤
                                             
                                                T
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                ∑
                                                
                                                   n
                                                   |
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                   ∈
                                                   A
                                                
                                             
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             +
                                             
                                                M
                                                
                                                   i
                                                   j
                                                
                                                2
                                             
                                             
                                                (
                                                
                                                1
                                                −
                                                
                                                   ∑
                                                   
                                                      n
                                                      |
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      ,
                                                      n
                                                      )
                                                      ∈
                                                      A
                                                   
                                                
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                   n
                                                
                                                +
                                                
                                                   z
                                                   j
                                                
                                                
                                                )
                                             
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ∈
                                             J
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                M
                                                
                                                   i
                                                   j
                                                
                                                2
                                             
                                             =
                                             
                                                l
                                                j
                                             
                                             −
                                             
                                                e
                                                i
                                             
                                             −
                                             
                                                s
                                                i
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       
                                          
                                             
                                                T
                                                j
                                             
                                             ≤
                                             
                                                e
                                                j
                                             
                                             +
                                             
                                                M
                                                j
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   z
                                                   j
                                                
                                                )
                                             
                                             
                                             ∀
                                             j
                                             ∈
                                             J
                                             ,
                                             
                                             
                                                M
                                                j
                                             
                                             =
                                             
                                                l
                                                j
                                             
                                             −
                                             
                                                e
                                                j
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                j
                                             
                                             ≤
                                             
                                                T
                                                0
                                                n
                                             
                                             +
                                             
                                                t
                                                
                                                   0
                                                   j
                                                
                                                n
                                             
                                             +
                                             
                                                M
                                                j
                                                n
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   x
                                                   
                                                      0
                                                      j
                                                   
                                                   n
                                                
                                                )
                                             
                                             
                                             ∀
                                             
                                                (
                                                0
                                                ,
                                                j
                                                ,
                                                n
                                                )
                                             
                                             ∈
                                             A
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                M
                                                j
                                                n
                                             
                                             =
                                             
                                                l
                                                j
                                             
                                             −
                                             
                                                a
                                                n
                                             
                                             −
                                             
                                                t
                                                
                                                   0
                                                   j
                                                
                                                n
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                T
                                                
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             ≤
                                             
                                                T
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   ,
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             +
                                             
                                                M
                                                i
                                                n
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   x
                                                   
                                                      i
                                                      ,
                                                      I
                                                      +
                                                      1
                                                   
                                                   n
                                                
                                                )
                                             
                                             
                                             ∀
                                             
                                                (
                                                i
                                                ,
                                                I
                                                +
                                                1
                                                ,
                                                n
                                                )
                                             
                                             ∈
                                             A
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                M
                                                i
                                                n
                                             
                                             =
                                             
                                                b
                                                n
                                             
                                             −
                                             
                                                e
                                                i
                                             
                                             −
                                             
                                                s
                                                i
                                             
                                             −
                                             
                                                t
                                                
                                                   i
                                                   ,
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       
                                          
                                             
                                                a
                                                n
                                             
                                             ≤
                                             
                                                T
                                                0
                                                n
                                             
                                             ≤
                                             
                                                b
                                                n
                                             
                                             
                                             ∀
                                             n
                                             ∈
                                             N
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       
                                          
                                             
                                                a
                                                n
                                             
                                             ≤
                                             
                                                T
                                                
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             ≤
                                             
                                                b
                                                n
                                             
                                             
                                             ∀
                                             n
                                             ∈
                                             N
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       
                                          
                                             
                                                T
                                                
                                                   I
                                                   +
                                                   1
                                                
                                                n
                                             
                                             −
                                             
                                                T
                                                0
                                                n
                                             
                                             ≤
                                             
                                                m
                                                n
                                             
                                             
                                             ∀
                                             n
                                             ∈
                                             N
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       
                                          
                                             
                                                o
                                                n
                                             
                                             ≥
                                             max
                                             
                                                (
                                                0
                                                ,
                                                
                                                   T
                                                   
                                                      I
                                                      +
                                                      1
                                                   
                                                   n
                                                
                                                −
                                                
                                                   T
                                                   0
                                                   n
                                                
                                                −
                                                
                                                   r
                                                   n
                                                
                                                )
                                             
                                             
                                             ∀
                                             n
                                             ∈
                                             N
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    
                                       
                                          
                                             
                                                T
                                                i
                                             
                                             −
                                             p
                                             
                                                t
                                                i
                                             
                                             ≤
                                             30
                                             +
                                             
                                                p
                                                i
                                                1
                                             
                                             
                                                M
                                                i
                                                1
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                             ,
                                             
                                             
                                                M
                                                i
                                                1
                                             
                                             =
                                             
                                                l
                                                i
                                             
                                             −
                                             p
                                             
                                                t
                                                i
                                             
                                             −
                                             30
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       
                                          
                                             
                                                T
                                                i
                                             
                                             −
                                             p
                                             
                                                t
                                                i
                                             
                                             ≥
                                             −
                                             30
                                             −
                                             
                                                p
                                                i
                                                1
                                             
                                             
                                                M
                                                i
                                                2
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                             ,
                                             
                                             
                                                M
                                                i
                                                2
                                             
                                             =
                                             p
                                             
                                                t
                                                i
                                             
                                             −
                                             
                                                e
                                                i
                                             
                                             −
                                             30
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       
                                          
                                             
                                                T
                                                i
                                             
                                             −
                                             p
                                             
                                                t
                                                i
                                             
                                             ≤
                                             60
                                             +
                                             
                                                p
                                                i
                                                2
                                             
                                             
                                                M
                                                i
                                                3
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                             ,
                                             
                                             
                                                M
                                                i
                                                3
                                             
                                             =
                                             
                                                l
                                                i
                                             
                                             −
                                             p
                                             
                                                t
                                                i
                                             
                                             −
                                             60
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       
                                          
                                             
                                                T
                                                i
                                             
                                             −
                                             p
                                             
                                                t
                                                i
                                             
                                             ≥
                                             −
                                             60
                                             −
                                             
                                                p
                                                i
                                                2
                                             
                                             
                                                M
                                                i
                                                4
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                             ,
                                             
                                             
                                                M
                                                i
                                                4
                                             
                                             =
                                             p
                                             
                                                t
                                                i
                                             
                                             −
                                             
                                                e
                                                i
                                             
                                             −
                                             60
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    
                                       
                                          
                                             
                                                p
                                                i
                                             
                                             =
                                             
                                                p
                                                i
                                                1
                                             
                                             +
                                             
                                                p
                                                i
                                                2
                                             
                                             
                                             ∀
                                             ∈
                                             J
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             
                                                (
                                                i
                                                ,
                                                j
                                                ,
                                                n
                                                )
                                             
                                             ∈
                                             A
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    
                                       
                                          
                                             
                                                z
                                                i
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                    
                                       
                                          
                                             
                                                p
                                                i
                                                1
                                             
                                             ,
                                             
                                                p
                                                i
                                                2
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             .
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Objective function (1) minimizes the total cost which is composed of routing and overtime costs. Objective function (2) minimizes client inconvenience which is measured by the deviation from the preferred visit time and how disliked the assigned nurses are. Constraints (3) and (4) make sure that each nurse leaves the depot and returns to the depot at most once. Equalities (5) ensure that each job is carried out by a nurse and (6) that each job location is entered and left. Constraints (7)–(10) make sure that the time variables are correctly set and that each job is started within its time window. Waiting times within the time window are prohibited by constraints (11)–(14). Nurses are only allowed to work within a given time window, which is taken care of by constraints (15) and (16). Constraints (17) make sure that the maximum working time is not exceeded and constraints (18) compute the overtime. Client inconvenience in terms of the deviation from the preferred starting time is computed by means of constraints (19)–(23). Finally, constraints (24)–(26) define the domains of the variables.

To improve the performance of the model described in the previous section, several enhancements are introduced.

Binary assignment variables 
                           
                              
                                 y
                                 
                                    i
                                    n
                                 
                              
                              =
                              
                                 ∑
                                 
                                    j
                                    ∈
                                    V
                                 
                              
                              
                                 x
                                 
                                    i
                                    j
                                 
                                 n
                              
                           
                         may be introduced to indicate whether nurse n is assigned to job i or not. Since each job should be assigned to exactly a single nurse, constraints (27) may then be appended to the model (Y). Additionally, branching priority may be given to these assignment variables (YBP
                        )

                           
                              (27)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   n
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                y
                                                
                                                   i
                                                   n
                                                
                                             
                                             =
                                             1
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Furthermore, six families of valid inequalities are considered to further strengthen the model (IN1-IN6). Inequalities (28) indicate the relation between variables 
                           
                              p
                              i
                              1
                           
                         and 
                           
                              p
                              i
                              2
                           
                         (IN1) while inequalities (29) and (30) exclude subtours of length two and three respectively (IN2-IN3)

                           
                              (28)
                              
                                 
                                    
                                       
                                          
                                             
                                                p
                                                i
                                                2
                                             
                                             ≤
                                             
                                                p
                                                i
                                                1
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             J
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (29)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   n
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                (
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                   n
                                                
                                                +
                                                
                                                   x
                                                   
                                                      j
                                                      i
                                                   
                                                   n
                                                
                                                )
                                             
                                             ≤
                                             1
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ∈
                                             V
                                             ,
                                             n
                                             ∈
                                             N
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (30)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   n
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                (
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                   n
                                                
                                                +
                                                
                                                   x
                                                   
                                                      j
                                                      i
                                                   
                                                   n
                                                
                                                +
                                                
                                                   x
                                                   
                                                      i
                                                      k
                                                   
                                                   n
                                                
                                                +
                                                
                                                   x
                                                   
                                                      k
                                                      i
                                                   
                                                   n
                                                
                                                +
                                                
                                                   x
                                                   
                                                      j
                                                      k
                                                   
                                                   n
                                                
                                                +
                                                
                                                   x
                                                   
                                                      k
                                                      j
                                                   
                                                   n
                                                
                                                )
                                             
                                             ≤
                                             2
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ,
                                             k
                                             ∈
                                             V
                                             ,
                                             n
                                             ∈
                                             N
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Partial routes 
                           
                              <
                              i
                              −
                              j
                              −
                              k
                              >
                           
                         between three vertices 
                           
                              i
                              ,
                              j
                              ,
                              k
                              ∈
                              J
                           
                         which are infeasible for a nurse n due to time windows may be excluded as well (IN4). Combined with the fact that subtours are not allowed, this yields inequality (31). When all partial routes between vertices 
                           
                              i
                              ,
                              j
                              ,
                              k
                              ∈
                              J
                           
                         are infeasible for nurse n, the inequality may be strengthened as shown in (32). When one of these inequalities is valid for several nurses, it may be strengthened by including the respective arcs of each nurse on the left-hand side of (31) or (32) respectively

                           
                              (31)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             +
                                             
                                                x
                                                
                                                   j
                                                   i
                                                
                                                n
                                             
                                             +
                                             
                                                x
                                                
                                                   j
                                                   k
                                                
                                                n
                                             
                                             
                                                ≤
                                                1
                                                
                                                ∀
                                                i
                                                ,
                                                j
                                                ,
                                                k
                                                ∈
                                                J
                                                ,
                                                n
                                                ∈
                                                N
                                                |
                                             
                                             
                                                e
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             +
                                             
                                                s
                                                j
                                             
                                             +
                                             
                                                t
                                                
                                                   j
                                                   k
                                                
                                                n
                                             
                                             >
                                             
                                                l
                                                k
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (32)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             +
                                             
                                                x
                                                
                                                   j
                                                   i
                                                
                                                n
                                             
                                             +
                                             
                                                x
                                                
                                                   j
                                                   k
                                                
                                                n
                                             
                                             +
                                             
                                                x
                                                
                                                   k
                                                   j
                                                
                                                n
                                             
                                             +
                                             
                                                x
                                                
                                                   i
                                                   k
                                                
                                                n
                                             
                                             +
                                             
                                                x
                                                
                                                   k
                                                   i
                                                
                                                n
                                             
                                             ≤
                                             1
                                             
                                             ∀
                                             i
                                             ,
                                             j
                                             ,
                                             k
                                             ∈
                                             J
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             n
                                             ∈
                                             N
                                             |
                                             
                                             all
                                             
                                             partial
                                             
                                             routes
                                             
                                             infeasible
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The relation between routing variables 
                           
                              x
                              
                                 i
                                 j
                              
                              n
                           
                         and variables pi
                         and pj
                         indicating the inconvenience related to the timing of service is expressed in inequalities (33)–(36) (IN5). Again these may be strengthened when valid for multiple nurses

                           
                              (33)
                              
                                 
                                    
                                       
                                          
                                             2
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                p
                                                i
                                             
                                             +
                                             
                                                p
                                                j
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                                p
                                             
                                             
                                                t
                                                i
                                             
                                             −
                                             30
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             >
                                             p
                                             
                                                t
                                                j
                                             
                                             +
                                             60
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (34)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                p
                                                i
                                             
                                             +
                                             
                                                p
                                                j
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                                p
                                             
                                             
                                                t
                                                i
                                             
                                             −
                                             30
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             >
                                             p
                                             
                                                t
                                                j
                                             
                                             +
                                             30
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (35)
                              
                                 
                                    
                                       
                                          
                                             2
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                          
                                       
                                       
                                          ≤
                                       
                                       
                                          
                                             
                                                p
                                                i
                                             
                                             +
                                             
                                                p
                                                j
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                                p
                                             
                                             
                                                t
                                                i
                                             
                                             +
                                             30
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          ≤
                                       
                                       
                                          
                                             p
                                             
                                                t
                                                j
                                             
                                             −
                                             60
                                             ∧
                                             
                                                e
                                                j
                                             
                                             <
                                             p
                                             
                                                t
                                                j
                                             
                                             −
                                             60
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (36)
                              
                                 
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             n
                                          
                                       
                                       
                                          ≤
                                       
                                       
                                          
                                             
                                                p
                                                i
                                             
                                             +
                                             
                                                p
                                                j
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                                p
                                             
                                             
                                                t
                                                i
                                             
                                             +
                                             30
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          ≤
                                       
                                       
                                          
                                             p
                                             
                                                t
                                                j
                                             
                                             −
                                             30
                                             ∧
                                             
                                                e
                                                j
                                             
                                             <
                                             p
                                             
                                                t
                                                j
                                             
                                             −
                                             30
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Finally, variables 
                           
                              x
                              
                                 i
                                 j
                              
                              n
                           
                         and pi
                         (or pj
                        ) may be combined with the time windows to yield inequalities (37)–(42) (IN6)

                           
                              (37)
                              
                                 
                                    
                                       
                                          
                                             2
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                p
                                                i
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                                p
                                             
                                             
                                                t
                                                i
                                             
                                             −
                                             60
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             >
                                             
                                                l
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (38)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                p
                                                i
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                                p
                                             
                                             
                                                t
                                                i
                                             
                                             −
                                             30
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             >
                                             
                                                l
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (39)
                              
                                 
                                    
                                       
                                          
                                             2
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                p
                                                j
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                             
                                             
                                                e
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             >
                                             p
                                             
                                                t
                                                j
                                             
                                             +
                                             60
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (40)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                p
                                                j
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                             
                                             
                                                e
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             >
                                             p
                                             
                                                t
                                                j
                                             
                                             +
                                             30
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (41)
                              
                                 
                                    
                                       
                                          
                                             2
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                p
                                                j
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                             
                                             
                                                e
                                                j
                                             
                                             <
                                             
                                                l
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             <
                                             p
                                             
                                                t
                                                j
                                             
                                             −
                                             60
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (42)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             ≤
                                             
                                                p
                                                j
                                             
                                             
                                                
                                                ∀
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   ,
                                                   n
                                                   )
                                                
                                                ∈
                                                A
                                                |
                                             
                                             
                                                e
                                                j
                                             
                                             <
                                             
                                                l
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                n
                                             
                                             <
                                             p
                                             
                                                t
                                                j
                                             
                                             −
                                             30
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Computational experiments in Section 5.2 indicate the effect of using the enhancements described above. Note that the valid inequalities are added before the model is solved whenever a violation is possible (taking into account the reduced arc set). We did not consider adding the inequalities in a branch-and-cut fashion as it is not our intention to provide a state-of-the-art exact method to solve the problem at hand. The mathematical model is used to acquire some initial insights into the problem and as a tool to assess the quality of the heuristic method proposed in Section 4 on small problem instances.

We note here that, while the model does not require any assumptions on the input data, we assume that all time related parameters are integer and we exploit this property in the scheduling algorithm described next.

This section focuses on the scheduling subproblem of the BIHCRSP. Let an unscheduled solution denote a set of unscheduled routes (or job sequences), one for each nurse, indicating the patients to be visited by this nurse and their visiting order. The scheduling problem then consists of deciding on a time schedule for each of these routes such that all constraints are satisfied.

Due to the bi-objective nature of our problem and the numerous side constraints, the scheduling problem is non-trivial. A distinctive characteristic of our scheduling problem is the fact that the scheduling of a single route is already a bi-objective problem in itself as explained below. Hence, a single unscheduled route may represent multiple non-dominated scheduled routes, and an unscheduled solution may represent many mutually non-dominated solutions to the BIHCRSP. Therefore the scheduling problem may be decomposed into two problems which can be solved sequentially: generating all non-dominated schedules for each individual route (Section 3.1) and generating all non-dominated solutions from the set of schedules for each route (Section 3.2).

The scheduling of a single route (or sequence of jobs) involves deciding on the visit time of each job. Since waiting is only allowed before hard time windows, this can be reduced to determining the start time of the route (the time the nurse leaves their starting location). For a given start time, all other timing variables of the route can easily be calculated. As mentioned above, a distinctive characteristic of this problem is the fact that it is bi-objective in itself. The route schedule may influence both the amount of overtime (and hence total costs) and how well time preferences are satisfied (and hence the level of inconvenience). While postponing the start of the route as much as possible will guarantee the minimization of overtime costs, the effect on the level of inconvenience might be positive or negative. In fact, the relationship between the start time of a route and the level of inconvenience will often be nonlinear (e.g. with increasing start time of the route, the inconvenience level may first increase and then decrease). As a result, solving the scheduling problem involves finding the set of non-dominated schedules and their corresponding start time of the route. This is in contrast with other scheduling problems as subproblems of routing problems in the literature, which are generally either constraint-satisfaction problems (e.g. finding a schedule which satisfies hard time windows) or single objective problems (e.g. minimizing soft time window violations or minimizing route duration).

Using the notation of Vidal, Crainic, Gendreau, and Prins (2015), the scheduling problem may be described as in (43)
                        
                           
                              (43)
                              
                                 
                                    
                                       
                                          
                                             {
                                             D
                                             U
                                             R
                                             ∪
                                             
                                                ∑
                                                i
                                             
                                             
                                                c
                                                i
                                             
                                             
                                                (
                                                
                                                   t
                                                   i
                                                
                                                )
                                             
                                             |
                                             T
                                             W
                                             ,
                                             D
                                             U
                                             R
                                             ,
                                             P
                                             
                                                (
                                                t
                                                )
                                             
                                             }
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        The objectives consist of a route duration feature to minimize overtime costs (DUR) and a sum of non-convex time-dependent cost functions to minimize the level of inconvenience (∑
                           i
                        
                        ci
                        (ti
                        )). Since the latter functions are piecewise linear, they can be optimized efficiently (despite being non-convex) using dynamic programming (Vidal et al., 2015). Constraints include hard time windows (TW) and a duration constraint to satisfy maximum working times (DUR), while the no-waiting constraints may be considered as time-dependent processing times (P(t)).

As the scheduling problem is likely to be solved a considerable number of times in a heuristic solution approach, the problem should be solved efficiently. Several approaches have been considered by the authors. Preliminary tests indicated that using CPLEX to solve the scheduling problem is too time consuming. This may be explained by the fact that a mathematical formulation of the scheduling problem still contains binary decision variables due to the combination of the hard time window and the no-waiting constraints.

Since only integer values are considered for all time-related parameters such as travel times, time windows, preferred visit times, etc. (see Section 5.1), a simple enumeration method has been tested. This method consists of performing a forward loop through the route for each feasible start time of the route to determine the corresponding overtime costs and inconvenience level. At the end, dominated schedules can easily be removed. An improved version of the enumeration method is considered as well. In that case, the search starts with the latest feasible start time of the route. During each forward loop through the route, the minimal time by which the start time of the route should be decreased in order to improve (i.e. reduce) the inconvenience level at one of the jobs is maintained. In the next iteration, the start time of the route is decreased by this value since all feasible start times in between may be discarded (the inconvenience level will not improve and decreasing the start time of the route may never have a positive effect on overtime costs).

Finally, a dynamic programming method is proposed. The idea behind this method is partially based on existing methods for non-convex piecewise linear cost functions (for an overview we refer to Vidal et al. (2015) and Hashimoto, Yagiura, Imahori, and Ibaraki (2013)). However, these methods only deal with a single objective (minimizing the total cost function) and therefore cannot be applied directly in our bi-objective setting. Given a route which is feasible with respect to time windows, our method consists of a single forward loop through the route, while maintaining for each node a list of time intervals in which the penalty with respect to time preferences stays the same. More specifically, for each node a number of “transition points” are calculated, corresponding to a service start time just before the total penalty for the partial route up to this node changes, i.e. starting service 1 minute later at this node will result in a change in the total penalty up to this node.

The pseudo code for this method is presented in Algorithm 1
                        . The following notation is used. A route 
                           
                              <
                              
                                 v
                                 0
                              
                              ,
                              
                                 v
                                 1
                              
                              ,
                              
                                 v
                                 2
                              
                              ,
                              …
                              ,
                              
                                 v
                                 k
                              
                              ,
                              
                                 v
                                 
                                    k
                                    +
                                    1
                                 
                              
                              >
                           
                         is considered with k jobs and v
                        0 and 
                           
                              v
                              
                                 k
                                 +
                                 1
                              
                           
                         denoting the depot location of the nurse n that is assigned to this route (node indices i, j). Let Ei
                         and Li
                         represent the earliest and latest time that service at node vi
                         may start to guarantee time window feasibility for the complete route (see also Section 4.3.2). A set of transition points for node vi
                         is represented by 
                           
                              
                                 T
                                 i
                              
                              =
                              
                                 {
                                 
                                    T
                                    1
                                    i
                                 
                                 ,
                                 
                                    T
                                    2
                                    i
                                 
                                 ,
                                 …
                                 ,
                                 
                                    T
                                    
                                       
                                          |
                                       
                                       
                                          T
                                          i
                                       
                                       
                                          |
                                       
                                    
                                    i
                                 
                                 }
                              
                           
                        . For each transition point 
                           
                              
                                 T
                                 f
                                 i
                              
                              ∈
                              
                                 T
                                 i
                              
                              ,
                           
                         a tuple of three values 
                           
                              (
                              
                                 t
                                 f
                                 i
                              
                              ,
                              
                                 p
                                 f
                                 i
                              
                              ,
                              
                                 w
                                 f
                                 i
                              
                              )
                           
                         is stored, indicating respectively the start of service at node vi
                        , the total penalty up to node vi
                         when starting service at time 
                           
                              t
                              f
                              i
                           
                         and the latest possible start time at the depot that corresponds to the previous two values. Similarly, let 
                           
                              T
                              j
                           
                         and 
                           
                              T
                              temp
                           
                         denote respectively the set of transition points for node vj
                         (index h) and a temporary set of transition points (index g). A transition point 
                           
                              
                                 T
                                 h
                                 j
                              
                              ∈
                              
                                 T
                                 j
                              
                           
                         is defined by tuple 
                           
                              (
                              
                                 t
                                 h
                                 j
                              
                              ,
                              
                                 p
                                 h
                                 j
                              
                              ,
                              
                                 w
                                 h
                                 j
                              
                              )
                              ,
                           
                         while a transition point 
                           
                              
                                 T
                                 g
                                 temp
                              
                              ∈
                              
                                 T
                                 temp
                              
                           
                         is defined by tuple 
                           
                              (
                              
                                 t
                                 g
                                 temp
                              
                              ,
                              
                                 p
                                 g
                                 temp
                              
                              ,
                              
                                 w
                                 g
                                 temp
                              
                              )
                           
                        . Furthermore, let 
                           
                              
                                 T
                                 0
                              
                              =
                              
                                 {
                                 
                                    (
                                    
                                       b
                                       n
                                    
                                    ,
                                    0
                                    ,
                                    
                                       b
                                       n
                                    
                                    )
                                 
                                 }
                              
                           
                         and ρj
                        (t) a function to calculate the penalty regarding time preferences when service starts at time t at node vj
                        .

In the first part of Algorithm 1 (lines 1–21), for each job vj
                         (
                           
                              j
                              =
                              1
                              ,
                              …
                              ,
                              k
                           
                        ) the set of transition points 
                           
                              T
                              j
                           
                         is calculated, starting from the set of transition points 
                           
                              T
                              i
                           
                         of the previous node vi
                         in the route and a set of temporary transition points 
                           
                              T
                              temp
                           
                        . First, the latter set 
                           
                              T
                              temp
                           
                         for job vj
                         is generated as follows (line 5). Starting from an empty set, a transition point 
                           
                              T
                              g
                              temp
                           
                         is added for each point in time right before the penalty with respect to time preferences would change (
                           
                              p
                              
                                 t
                                 
                                    v
                                    j
                                 
                              
                              −
                              61
                              ,
                           
                        
                        
                           
                              p
                              
                                 t
                                 
                                    v
                                    j
                                 
                              
                              −
                              31
                              ,
                           
                        
                        
                           
                              p
                              
                                 t
                                 
                                    v
                                    j
                                 
                              
                              +
                              30
                              ,
                           
                        
                        
                           
                              p
                              
                                 t
                                 
                                    v
                                    j
                                 
                              
                              +
                              60
                           
                        ), provided that it satisfies the condition 
                           
                              
                                 E
                                 j
                              
                              ≤
                              
                                 t
                                 g
                                 temp
                              
                              <
                              
                                 L
                                 j
                              
                           
                        . A transition point for start of service at time Lj
                         is added as well, since the penalty value increases to infinity after this time. Finally, an additional transition point is added for time of service equal to 
                           
                              e
                              
                                 v
                                 j
                              
                           
                         when (1) no such transition point already exists (
                           
                              ∄
                              
                                 T
                                 g
                                 temp
                              
                              ∈
                              
                                 T
                                 temp
                              
                              
                                 |
                              
                              
                                 t
                                 g
                                 temp
                              
                              =
                              
                                 e
                                 
                                    v
                                    j
                                 
                              
                           
                        ), (2) job vj
                         may be started as early as the start of its time window (
                           
                              
                                 E
                                 j
                              
                              =
                              
                                 e
                                 
                                    v
                                    j
                                 
                              
                           
                        ), and (3) waiting time will exist at job vj
                         when starting service at the preceding node vi
                         at the time of its first transition point (
                           
                              
                                 t
                                 1
                                 i
                              
                              +
                              
                                 s
                                 
                                    v
                                    i
                                 
                              
                              +
                              
                                 t
                                 
                                    
                                       v
                                       i
                                    
                                    
                                       v
                                       j
                                    
                                 
                                 n
                              
                              <
                              
                                 e
                                 
                                    v
                                    j
                                 
                              
                           
                        ). Although in this case the penalty level does not change, the transition point is required to account for the fact that when nurse n arrives at node vj
                         before time 
                           
                              
                                 e
                                 
                                    v
                                    j
                                 
                              
                              ,
                           
                         the nurse should wait and hence route duration is affected. The transition points 
                           
                              
                                 T
                                 g
                                 temp
                              
                              ∈
                              
                                 T
                                 temp
                              
                           
                         are sorted from small to large according to 
                           
                              t
                              g
                              temp
                           
                         and for each transition point the penalty level is 
                           
                              
                                 p
                                 g
                                 temp
                              
                              =
                              
                                 ρ
                                 j
                              
                              
                                 (
                                 
                                    t
                                    g
                                    temp
                                 
                                 )
                              
                              ,
                           
                         while the value of 
                           
                              w
                              g
                              temp
                           
                         is irrelevant. Second, iteratively the smallest transition point among 
                           
                              T
                              i
                           
                         (increased with the time required to reach vj
                        ) and 
                           
                              T
                              temp
                           
                         is selected and a new transition point for vj
                         is created (lines 7–21). In case the transition point in 
                           
                              T
                              temp
                           
                         is selected (lines 16–18), note that the start time of the route in the newly created transition point 
                           
                              T
                              h
                              j
                           
                         is equal to the start time of the route for the transition point in 
                           
                              T
                              i
                           
                         minus the difference between the start of service at job vj
                         for both transition points, i.e. 
                           
                              
                                 w
                                 h
                                 j
                              
                              =
                              
                                 w
                                 f
                                 i
                              
                              −
                              
                                 (
                                 
                                    t
                                    f
                                    i
                                 
                                 +
                                 
                                    s
                                    
                                       v
                                       i
                                    
                                 
                                 +
                                 
                                    t
                                    
                                       
                                          v
                                          i
                                       
                                       
                                          v
                                          j
                                       
                                    
                                    n
                                 
                                 −
                                 
                                    t
                                    g
                                    temp
                                 
                                 )
                              
                           
                        .

When the transition points for the final job in the route 
                           
                              T
                              k
                           
                         have been found, the transition points for the end depot 
                           
                              T
                              
                                 k
                                 +
                                 1
                              
                           
                         are calculated by copying 
                           
                              T
                              k
                           
                         and increasing the start of service of each of these transition points with the service time at vk
                         and the time to travel to the end depot 
                           
                              v
                              
                                 k
                                 +
                                 1
                              
                           
                         (lines 22–26). Finally, the set of non-dominated schedules 
                           
                              S
                              =
                              {
                              
                                 S
                                 1
                              
                              
                                 (
                                 
                                    o
                                    1
                                 
                                 ,
                                 
                                    p
                                    1
                                 
                                 )
                              
                              ,
                              …
                              ,
                              
                                 S
                                 
                                    |
                                    S
                                    |
                                 
                              
                              
                                 (
                                 
                                    o
                                    
                                       |
                                       S
                                       |
                                    
                                 
                                 ,
                                 
                                    p
                                    
                                       |
                                       S
                                       |
                                    
                                 
                                 )
                              
                              }
                           
                         (index s) is found, where each schedule Ss
                         is represented by an amount of overtime os
                         and a penalty level regarding time preferences ps
                         (lines 27–50). This is done by considering each of the transition points of 
                           
                              v
                              
                                 k
                                 +
                                 1
                              
                           
                         in reverse order, i.e. starting with the final one in 
                           
                              T
                              
                                 k
                                 +
                                 1
                              
                           
                         (the one with the largest arrival time at the end depot and hence also the latest corresponding start time of the route), and calculating the corresponding overtime costs. Note that when considering the transition points in this order, overtime costs cannot decrease since overtime is minimal when starting the route as late as possible. Hence, only transition points which reduce the penalty level should be considered. Furthermore, the search can be stopped whenever a transition point violates the maximum working time constraint.


                        Table 2
                         compares computation times of the different scheduling methods. Each method was used to schedule all routes of all non-dominated solutions that were found in five runs of the base algorithm described in Section 4 on all 90 benchmark instances. This corresponds to 14,153 solutions consisting of 722,913 routes in total. Total computation times over all routes are reported. Solving the single route scheduling problem by CPLEX is clearly too time consuming. The other approaches are considerably faster, scheduling all routes in less than half a second. While the proposed improvements of the enumeration method reduce its computation time, the dynamic programming approach clearly performs best. Therefore, this method has been used in all other experiments described in this paper.

Given a set of non-dominated schedules for each route of an unscheduled solution, a scheduled solution is obtained by selecting a single schedule for each route. To obtain only the non-dominating solutions, a simple dynamic programming-based method is applied. In a first step, the routes are sorted according to their number of non-dominated schedules, from small to large. Second, all combinations of the schedules of routes one and two are made and the dominated ones are discarded. Next, the non-dominated combinations are combined with the schedules from route three and so on, until all routes have been considered.

Due to the bi-objective nature of the BIHCRSP, a single optimal solution to the problem will often not exist. Instead, the goal is to find the set of Pareto optimal or efficient solutions. It is assumed that the reader is familiar with the basic concepts of multi-objective optimization such as Pareto optimality and dominance. For a detailed description of these concepts and their underlying principles, the reader is referred to Ehrgott and Gandibleux (2002, 2004) and Ehrgott (2005).

Since exactly solving instances of realistic size in a reasonable amount of computation time does not seem feasible, a metaheuristic algorithm is proposed to find a set of mutually non-dominated solutions which approximates the set of efficient solutions. The algorithm is based on the multi-directional local search framework (Tricoire, 2012) and uses large neighborhood search (LNS) as a subheuristic.

Multi-directional local search (MDLS) is a recently proposed meta-heuristic framework for multi-objective optimization problems (Tricoire, 2012). It is based on the idea that in order to find new efficient solutions that are neighbors of a solution x, it is sufficient to start a search from x in the direction of one objective at a time only. In general, the method works as follows. An archive of non-dominated solutions is maintained and in each iteration of the algorithm a solution is selected from this archive. For each objective a single-objective local search is performed on the selected solution. The resulting new solutions, as many as there are objectives, are then used to update the archive. Advantages of the method are its simplicity, flexibility and the fact that for each objective any existing single-objective local search method may be applied.

Large neighborhood search (LNS) is a metaheuristic which was first introduced by Shaw (1998). It uses the concept of ruin and recreate to define an implicit, large neighborhood of a current solution as the set of solutions that may be attained by destroying a large part of the solution and subsequently rebuilding the resulting partial solution. A successful general-purpose LNS algorithm for a variety of vehicle routing problems was proposed by Pisinger and Ropke (2007). The algorithm iteratively removes a number of customers from the current solution and reinserts them to obtain a new solution. Several simple removal and insertion operators, selected randomly in each iteration, are applied. An adaptive version of LNS is proposed by Ropke and Pisinger (2006) in which the selection of the operators is biased using their success in previous iterations. In recent years, many routing problems have been successfully solved using LNS-based methods. For details and an overview of recent developments on LNS, the reader is referred to Pisinger and Ropke (2010).


                     Tricoire (2012) shows that, using LNS as a subheuristic, the MDLS framework produces results which are competitive to those of the best known solution method for three general multi-objective optimization problems (multi-dimensional multi-objective knapsack problem, bi-objective set packing problem, bi-objective orienteering problem). Therefore, a similar approach is proposed for the BIHCRSP. The general structures of the MDLS algorithm and LNS subheuristic are discussed in Sections 4.1 and 4.2, while the LNS operators and their implementation are discussed in Section 4.3.

The general structure of the MDLS algorithm is presented in Algorithm 2
                        . The initial set of solutions, which serves as an input for the MDLS algorithm, is found by applying each insertion operator (see Section 4.3.2) individually on the problem. In each iteration of the algorithm, a solution x is randomly selected from F. Next, for each objective an LNS iteration is performed, resulting in a set of new solutions G. These new solutions are used to update set F. This is repeated until the stopping criterion is met, which can either be a predefined number of iterations, a maximum computation time or any other criterion defined by the decision maker. The structure of our MDLS algorithm is very similar to the structure described by Tricoire (2012), although in our case a single-objective local search procedure may result in more than one new solution as is discussed in Section 4.2. A set of non-dominated scheduled solutions F is maintained throughout the search, i.e. for each solution in F the timing variables are fixed to specific values. These values are required to know the actual objective values of the solution, but as a result several solutions in the set may have the same routing (but a different timing). Set F is stored as an ordered list which reduces the number of dominance checks to be performed when updating the set compared to an unordered list (see Tricoire, 2012). Besides, in order to diversify the search, solutions which have the same objective values but a different routing are all kept.

For hard instances, it may take a number of iterations to find a feasible solution. This is handled by using a request bank, which is a common concept in LNS methods. Whenever not all jobs can be inserted in the routes of the nurses, the remaining jobs are put into the request bank. New solutions are first evaluated on the number of jobs in the request bank and second on both objective values. This means that as soon as a feasible solution to the problem has been found, infeasible solutions are no longer allowed during the search and these may be discarded immediately.

Two major issues arise in the implementation of any local search move for the problem under study (no matter whether using small or large neighborhoods). First, the objective values of a new solution can only be measured when the scheduling subproblem is solved. As discussed in Section 3, this problem is non-trivial and although an efficient algorithm has been proposed, it seems unpractical to solve the scheduling problem from scratch after each local search move as this would result in excessive computation times. Second, even when developing an efficient reoptimization algorithm by maintaining non-dominated schedules for partial routes to avoid having to solve the scheduling problem from scratch, the evaluation of local search moves (or of insertion positions of a job in LNS) and selecting the best one is not straightforward, since a single new routing solution may result in multiple non-dominated scheduled solutions.

For each objective (costs and inconvenience), a single LNS iteration in the direction of this objective is performed on the selected solution x (Algorithm 3
                        ). First, the number of jobs to be removed in this iteration (q), and the removal and insertion operators to be applied (a and b) are determined randomly. Next, using removal operator a, q jobs are removed from x and added to the request bank, resulting in a partial solution x′. The jobs which have been removed (and those potentially already in the request bank) are then reinserted using the selected insertion operator b. To overcome the issues stated above, it is decided not to perform these LNS iterations on scheduled solutions, but only on the routing aspect of a solution. This means that jobs are inserted without solving the scheduling problem and hence without knowing the non-dominated set of actual objective values that result from this insertion. Instead, insertion positions are evaluated based on approximative objective values which are discussed in Section 4.3.2. Only after all jobs have been inserted (or no feasible insertion positions for the remaining jobs exist), the scheduling problem is solved to obtain the set of non-dominated solutions from the newly obtained routing solution using the method proposed in Section 3. Of course, this final step may be skipped and the new routing solution x′ may be discarded immediately when the number of jobs in the request bank rb(x′) is larger than that of the solutions currently in set F.

Note that performing multiple LNS iterations on a single solution is not considered as preliminary results indicated that the second objective is likely to diverge too far after a few iterations, making it unlikely to find new non-dominated solutions.

Several standard removal and insertion operators from the LNS literature (Pisinger & Ropke, 2007; Ropke & Pisinger, 2006; Shaw, 1998) are adapted to the specific problem context of the BIHCRSP. They are discussed in Sections 4.3.1 and 4.3.2 respectively.

For each objective, six removal operators are considered. Three of them are the same for both objectives (random, route, related) while the other three represent objective-specific implementations of the worst removal concept.

The random removal operator randomly removes q jobs from the current solution, while the route removal operator removes complete routes which are randomly selected until q jobs have been removed. The related removal operator removes jobs which are related to each other and hence are expected to be easy to interchange. The relatedness rij
                            of two jobs 
                              
                                 i
                                 ,
                                 j
                                 ∈
                                 J
                              
                            is expressed in terms of their location, preferred timing, qualification requirements or a random weighted combination of these (44), each of these options having an equal probability of being chosen (i.e. (α, β, γ) is (1, 0, 0), (0, 1, 0), (0, 0, 1) or any random combination with 
                              
                                 α
                                 +
                                 β
                                 +
                                 γ
                                 =
                                 1
                              
                            and all three non-negative). Relatedness in terms of location is based on the average travel time over all nurses between the two jobs, while relatedness in terms of qualification requirements is based on the number of nurses which are only qualified to perform one of the jobs. A lower value of rij
                            indicates that jobs i and j are more related. Note that 
                              
                                 t
                                 
                                    i
                                    j
                                 
                                 
                                    
                                       
                                       ′
                                    
                                    n
                                 
                              
                            and 
                              
                                 p
                                 
                                    t
                                    i
                                    ′
                                 
                              
                            represent normalized values such that they only take values from [0, 1]. The implementation of the operator is the same as in Shaw (1998). Initially a job is removed randomly. Next, iteratively an already removed job is selected randomly and its most related job (of those still in the solution) is removed

                              
                                 (44)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   r
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                =
                                                α
                                                
                                                   ∑
                                                   
                                                      n
                                                      ∈
                                                      N
                                                   
                                                
                                                
                                                   t
                                                   
                                                      i
                                                      j
                                                   
                                                   
                                                      
                                                         
                                                         ′
                                                      
                                                      n
                                                   
                                                
                                                
                                                   /
                                                   N
                                                   +
                                                   β
                                                   |
                                                   p
                                                
                                                
                                                   t
                                                   i
                                                   ′
                                                
                                                −
                                                p
                                                
                                                   t
                                                   j
                                                   ′
                                                
                                                
                                                   |
                                                   +
                                                   γ
                                                
                                                
                                                   ∑
                                                   
                                                      n
                                                      ∈
                                                      N
                                                   
                                                
                                                
                                                   |
                                                   
                                                      q
                                                      
                                                         i
                                                         n
                                                      
                                                   
                                                   −
                                                   
                                                      q
                                                      
                                                         j
                                                         n
                                                      
                                                   
                                                   |
                                                
                                                /
                                                N
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

For the objective of minimizing costs, a worst travel cost, a worst minimal overtime cost and a worst combined cost removal operator are applied. The first two operators remove jobs which result in respectively the largest travel cost savings and the largest minimal overtime cost savings when being removed from the solution. The minimal overtime cost of a route is defined as the overtime cost when starting the route as late as possible and hence resulting in the smallest possible amount of overtime. The minimal overtime cost is used instead of the actual overtime cost as the latter would require resolving the scheduling problem when removing a job while the former may be calculated in constant time (Vidal et al., 2015). The third operator removes jobs which result in the largest cost savings when the travel costs and minimal overtime costs are combined.

Note that in our problem context some (or all) nurses may use public transportation and hence their traveling will not result in travel costs (see Section 5.1). Therefore, the term “travel costs” is interpreted slightly different for the worst removal operators. When all nurses use public transportation, the effect on travel time is used instead. When only some nurses use public transportation, the cost of traveling by car is used for all nurses.

For the objective of minimizing inconvenience, similarly a worst nurse inconvenience, worst time inconvenience and worst total inconvenience removal operator are applied. The effect of removing a job on total time inconvenience of a route is not modeled as the difference in time inconvenience between the route with and without the job, as this would again involve solving the scheduling problem to find the second value. Instead, the effect on time inconvenience of removing job i is only based on the penalty value for time inconvenience (pi
                           ) of this job in the current solution.

As in Shaw (1998) and Ropke and Pisinger (2006), a parameter P ≥ 1 is used in all worst removal operators to introduce some randomness in the selection of jobs, thereby avoiding the same jobs to be removed over and over again. In each iteration of a removal operator, the list of L jobs which may be removed is ordered from worst to best, and the xth job in the list is selected to be removed with 
                              
                                 x
                                 =
                                 
                                    ⌊
                                    
                                       
                                          y
                                          P
                                       
                                       L
                                    
                                    ⌋
                                 
                              
                            and y a random number in [0, 1]. A lower value of P corresponds to more randomness. Besides, we add a very small random noise value to the savings of removing a job to randomize the order in which jobs with the same savings are selected (as in our problem context often several jobs may result in the same savings, especially with respect to the inconvenience objective).

Four insertion operators are applied. The structure of these operators is the same for both objectives, although the considered objective function differs.

The well-known basic greedy, regret-2 and regret-3 operators are applied. The former iteratively inserts the job with the cheapest insertion position among all jobs to be inserted, while the regret-k operators take into account the difference in insertion cost between the least-cost route and the next 
                              
                                 k
                                 −
                                 1
                              
                            least-cost routes. For a detailed discussion of these operators, the reader is referred to Ropke and Pisinger (2006) and Pisinger and Ropke (2007). Furthermore, an other greedy operator, denoted random greedy, is applied. This operator iteratively selects a job to be inserted randomly and inserts it at its cheapest insertion position.

Note that the feasibility of an insertion position can be evaluated in constant time. Parameter qin
                            indicates whether nurse n is qualified to carry out job i while time window and route duration constraints may be evaluated in constant time by maintaining for each job 
                              
                                 i
                                 ∈
                                 J
                              
                            the earliest time service may start (Ei
                           ) and the latest time service should start (Li
                           ) in order for the rest of the route to be feasible (Campbell & Savelsberg, 2004; Kindervater & Savelsbergh, 1997).

Since we do not want to solve the scheduling problem for each feasible insertion position of each job to be inserted, the actual objective values cannot be used to evaluate insertion positions. Instead approximative objective functions are applied. For this matter we decided to use several hierarchical objectives for two reasons. First, this allows to discriminate between insertion positions with the same primary insertion cost (as is often the case due to the absence of travel costs when using public transportation and the limited penalty levels for the inconvenience objectives). Second, this allows to take the cost objective into account as a tie-breaker when minimizing inconvenience (and vice versa).

For the objective of minimizing costs, three hierarchically structured objectives are considered. The first objective is to minimize the sum of travel costs and minimal overtime costs, approximating the actual objective. The second and third objective are to minimize route duration and total travel time respectively. The idea is that it is beneficial to construct compact routes with small travel and waiting times, even when no travel costs are incurred and insertion positions do not generate overtime costs, as this would allow other jobs to be inserted later at lower costs. Preliminary results have indicated that using the approximate objective value for inconvenience as a fourth objective or a third objective (instead of travel time) has only limited impact. Hence, this is not considered.

For the objective of minimizing inconvenience, two hierarchical objectives are used to evaluate an insertion position of a job, an approximation of the total inconvenience incurred by this job and the sum of the additional travel costs and minimal overtime costs. Total inconvenience inconi
                            when inserting job i between jobs 
                              
                                 i
                                 −
                                 1
                              
                            and 
                              
                                 i
                                 +
                                 1
                              
                            in the route of nurse n is approximated as in (45). A penalty value in the interval [0, 4] is obtained. The first term is the inconvenience with respect to the nurse. The second term approximates the inconvenience with respect to the visit time and consists of the average of two measures. The first measure (η) indicates whether for job i a feasible visit time t ∈ [Ei, Li
                           ] exists within either the tight soft time window (0), the loose soft time window (1), or none of both (2). The second part indicates whether the preferred visit times of nodes 
                              
                                 i
                                 −
                                 1
                                 ,
                              
                            
                           i and 
                              
                                 i
                                 +
                                 1
                              
                            are in increasing order or not

                              
                                 (45)
                                 
                                    
                                       
                                          
                                             
                                                i
                                                n
                                                c
                                                o
                                                
                                                   n
                                                   i
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                p
                                                
                                                   n
                                                   
                                                      i
                                                      n
                                                   
                                                
                                                +
                                                
                                                   (
                                                   η
                                                   +
                                                   θ
                                                   )
                                                
                                                /
                                                2
                                                
                                             
                                          
                                       
                                       
                                          
                                             with
                                          
                                          
                                          
                                             
                                          
                                       
                                       
                                          
                                             η
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   {
                                                   
                                                      
                                                         
                                                            0
                                                         
                                                         
                                                            
                                                               if
                                                               
                                                               
                                                                  E
                                                                  i
                                                               
                                                               ≤
                                                               p
                                                               
                                                                  t
                                                                  i
                                                               
                                                               +
                                                               30
                                                               
                                                               and
                                                               
                                                               
                                                                  L
                                                                  i
                                                               
                                                               ≥
                                                               p
                                                               
                                                                  t
                                                                  i
                                                               
                                                               −
                                                               30
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            
                                                               if
                                                               
                                                               
                                                                  E
                                                                  i
                                                               
                                                               ≤
                                                               p
                                                               
                                                                  t
                                                                  i
                                                               
                                                               +
                                                               60
                                                               
                                                               and
                                                               
                                                               
                                                                  L
                                                                  i
                                                               
                                                               ≥
                                                               p
                                                               
                                                                  t
                                                                  i
                                                               
                                                               −
                                                               60
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            2
                                                         
                                                         
                                                            else
                                                         
                                                      
                                                   
                                                
                                                
                                                and
                                                
                                             
                                          
                                       
                                       
                                          
                                             θ
                                          
                                          
                                             =
                                          
                                          
                                             
                                                {
                                                
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            p
                                                            
                                                               t
                                                               
                                                                  i
                                                                  −
                                                                  1
                                                               
                                                            
                                                            ≤
                                                            p
                                                            
                                                               t
                                                               i
                                                            
                                                            
                                                            and
                                                            
                                                            p
                                                            
                                                               t
                                                               i
                                                            
                                                            ≤
                                                            p
                                                            
                                                               t
                                                               
                                                                  i
                                                                  +
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         2
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            p
                                                            
                                                               t
                                                               
                                                                  i
                                                                  −
                                                                  1
                                                               
                                                            
                                                            >
                                                            p
                                                            
                                                               t
                                                               i
                                                            
                                                            
                                                            and
                                                            
                                                            p
                                                            
                                                               t
                                                               i
                                                            
                                                            >
                                                            p
                                                            
                                                               t
                                                               
                                                                  i
                                                                  +
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         else
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

To diversify the search, a noise term may be added to the objective functions of the insertion heuristics (Pisinger & Ropke, 2007; Ropke & Pisinger, 2006). At each LNS iteration, we select randomly whether to apply noise or not. To account for the fact that hierarchical objectives are used, noise is only added to the sum of travel costs and minimal overtime costs, and to total route duration when the original objective value differs from zero (to avoid losing the effect of the second or third objective). Furthermore, adding noise to inconi
                            is modeled by defining small probabilities for adding (subtracting) 0.5 or 1 to (from) inconi
                           .

All algorithms are implemented in C++. MDLS is run on an Intel Xeon Processor E5-2670 at 2.50 gigahertz, using a single thread. To solve the model, ILOG Cplex 12.5 is used. All experiments with the model are performed on the Vienna Scientific Cluster (VSC-1) using Intel X5550 CPUs at 2.66 gigahertz and a run time limit of two days. In the next sections, we first present the characteristics of our benchmark instances and then the results of our numerical experiments.

Since no benchmark data are available for our problem, problem instances have been generated randomly. However, the parameter values that have been applied are based on both real-life data of two Viennese companies and real-life-based benchmark data for a related problem (Hiermann et al., 2015). A general discussion of these instances is provided here, while numerical details are available in Appendix A. The instances are available online (http://alpha.uhasselt.be/kris.braekers).

A set of 90 instances has been generated, consisting of a first set of 30 small test instances (10–25 jobs) and a second set of instances of realistic size (50–300 jobs). For each instance, the set of nurses consists of a number of full-time nurses with a regular and maximum working time of 8 and 10 hours respectively, and a number of part-time nurses with a regular and maximum working time of 4 and 6 hours respectively (either in the morning or the evening). The number of nurses is set such that on average the number of jobs is five times the number of full-time nurse equivalents.

Six types of jobs are considered, corresponding to six qualification levels of the nurses. These nurse qualification levels are assumed to be non-hierarchical since high-qualified nurses generally do not perform jobs requiring a low qualification level. Probabilities for a job to require a certain level of qualification, and for a nurse to possess a certain level of qualification, are based on real-life data. Nurse overtime wages depend on their level of qualification and are based on data of the Public Employment Service Austria (AMS). Besides, some variation in the wages of the nurses of a single qualification category is introduced to account for differences in their length of service.
                     

Corresponding to current practices of Austrian home care organizations, a working day, which ranges from 6 a.m. to 8 p.m., is split in five time slots of 2–4 hours. Each job is assigned to one of these time slots, which then represents a hard time window for the start time of the job. Both the distribution of jobs over the time slots and the service duration of a job are based on real-life data. The preferred visit time of a job is randomly selected within the hard time window. To introduce the fact that some jobs have to be performed at a specific time (e.g. certain medical treatments), both the start and end of the hard time window of 5 percent of the jobs are set at the preferred visit time. Finally, regarding nurse preferences, it is assumed that for a certain job each qualified nurse has an equal probability of being preferred, moderately preferred or not preferred.

Four types of instances may be distinguished based on the travel cost and travel time matrices used. The first three types are based on the travel time matrices for car and public transportation provided by Hiermann et al. (2015) and are generated using OpenStreetMap. In types one and two, all nurses are assumed to use car transportation or public transportation respectively, while in the third type some nurses use car transportation while others use public transportation. Since no corresponding travel distance matrices are available, distances in kilometers are assumed to be equal to travel times in minutes. Besides, time is discretized on a 5-minute level. In the fourth type of instances, a distance matrix and a travel time matrix for car transportation between actual job locations of a Viennese service provider are used. In this case, distance and travel time are not perfectly correlated and time is discretized on a 1-minute level. All nurses are assumed to use car transportation, as this is the only information available. Travel costs by car are set at 42 eurocents per kilometer, while it is assumed that no operational costs are incurred when using public transportation (assuming that nurses have a yearly ticket). The number of instances of the third type (mixed mode) is twice that of the other instances, as we believe these instances to be the most realistic and hardest to solve.

Finally, since in practice a patient may have several service requests per day, up to four jobs may be required at the same physical location.

To assess the quality of the proposed metaheuristic, Pareto-optimal solutions for small problem instances are generated by embedding the model described in Section 2.1 into the well-known 
                           ϵ
                        -constraint scheme (Laumanns, Thiele, & Zitzler, 2006).


                        Table 3 gives an overview of the computation times in minutes required to solve the small problem instances. Nineteen instances of up to 20 jobs could be solved using the base model within the runtime limit. Most of the enhancements introduced in Section 2.3 reduce average computation times on these instances when applied individually. We also consider applying all enhancements simultaneously (“All”) and a version where we only apply the enhancements which reduce overall computation times when applied individually (“Sel”). In both cases, computation times are reduced by more than 60 percent on average compared to the base model and some instances up to 25 jobs can be solved as well. Note that omitting the “bad” enhancements does not give an improvement compared to keeping them all. However, computation times also indicate that solving the problem to optimality for instances of realistic size would be troublesome and hence the use of a heuristic method is justified.

Several quality indicators have been proposed in the literature to evaluate approximations of the Pareto frontier generated by heuristic solution procedures (Knowles, Thiele, & Zitzler, 2006; Zitzler, Thiele, Laumanns, Fonseca, & Grunert da Fonseca, 2003). In this paper, two well-known quality indicators (hypervolume and multiplicative unary epsilon) are used to compare our heuristic results with optimal Pareto fronts and to evaluate different algorithmic designs and parameter settings. For both indicators, the reference set R is equal to the optimal Pareto front if known. Otherwise R is approximated by taking the union of all solutions obtained by any of the experiments during algorithm design and testing, and removing dominated solutions. These reference sets are provided online.

The hypervolume indicator (IH
                        (A)), introduced by Zitzler and Thiele (1999), measures the portion of the objective space that is weakly dominated by an approximation set A. Normalized objective values are used and hence the reference point is (1,1). To allow a meaningful aggregation over all instances, hypervolume results of an approximation set A are presented as the fraction of the hypervolume value of the reference set R that is covered by set A (
                           
                              
                                 I
                                 H
                                 
                                    f
                                    r
                                 
                              
                              
                                 (
                                 A
                                 )
                              
                              =
                              
                                 I
                                 H
                              
                              
                                 (
                                 A
                                 )
                              
                              /
                              
                                 I
                                 H
                              
                              
                                 (
                                 R
                                 )
                              
                           
                        ). High values are preferable. The multiplicative unary epsilon value (
                           
                              
                                 I
                                 ϵ
                              
                              
                                 (
                                 A
                                 )
                              
                           
                        ) (Zitzler et al., 2003) gives the minimum number 
                           ϵ
                         by which each point in the reference set R should be multiplied such that the resulting approximation set is weakly dominated by approximation set A. Low values are preferable. Since one of the objective values for some solutions may be zero, objective values are normalized between 1 and 2 instead of between 0 and 1.

The base version of our algorithm (v0) as presented in Section 4 uses the following initial parameter settings. The number of jobs selected to be removed q is distributed uniformly between max (2, 0.1 · I) and min (50, 0.6 · I). Both absolute and relative bounds are applied to allow a very large removal rate for small instances while ensuring acceptable computation times for large instances. For the removal operators, the randomness parameter P is set to 5. Maximum noise levels for travel costs (travel time and route duration) is 10 percent of the average travel cost (travel time) in the network. Maximum noise levels for overtime costs are 25 percent of the average of the maximum overtime cost over all nurses. Finally, the probabilities for adding (subtracting) 0.5 and 1 to (from) inconi
                         are 0.1 and 0.05 respectively. The algorithm is run for 2 million iterations (large time limit), while results after 200,000 iterations are reported as well (small time limit). Although the former results are generally considerably better than the latter, the latter results represent already good solutions obtained in relatively small computation times (60 seconds on average, compared to 592 seconds for 2 million iterations). Average results over five runs on all instances are reported in the first line of Table 4
                        
                        . Columns two and three indicate the average indicator values. The number of non-dominated solutions with unique objective values and the total number of non-dominated solutions (some having the same objective values but different routing solutions) are presented in columns four and five respectively.

Various configurations of our algorithm have been tested to find good parameter settings and to identify non-contributing components of the algorithm. These configurations make use of different parameters for generating q, different values for P, different maximum noise levels, no noise at all, only a subset of the removal and insertion heuristics or an adaptive version of LNS. To allow a fair comparison of the different configurations, for each instance the algorithm is run for the average amount of computation time required by the base version. In this paper, only those configurations that improve at least three out of four quality indicators (
                           
                              
                                 I
                                 H
                                 
                                    f
                                    r
                                 
                              
                              
                                 (
                                 A
                                 )
                              
                           
                         and 
                           
                              
                                 I
                                 ϵ
                              
                              
                                 (
                                 A
                                 )
                              
                              ,
                           
                         for both time limits) are reported in Table 4. These configurations include:

                           
                              •
                              changing the lower bound on the interval for q to max (2, 0.05 · I) (v1),

changing the upper bound on the interval for q to max (40, 0.60 · I) (v2),

changing the value of P to 4 (v3),

not applying the related removal operator when minimizing costs (v4),

not applying the basic greedy insertion operator for both objectives (v5),

a combination of configurations v1 to v5 (v6).

The final configuration clearly provides the best results. Detailed results for this configuration are provided in Appendix B. Note that the algorithm provides the complete optimal Pareto front for 20 out of the 23 instances for which this front is known (
                           
                              
                                 I
                                 H
                                 
                                    f
                                    r
                                 
                              
                              
                                 (
                                 A
                                 )
                              
                              =
                              
                                 I
                                 ϵ
                              
                              
                                 (
                                 A
                                 )
                              
                              =
                              1
                           
                        ). For the other instances only small differences with the optimal front exist, except for instance 27. The rather bad indicator values for this instance may be caused by reducing the number of operators and the smaller (bounds on the) removal rate q, changes which appear to be highly beneficial for solution quality on larger instances. Furthermore, the fact that the number of solutions in the optimal front is rather low for this instance (9), makes that not finding one of these solutions may have a comparably large effect on the indicator values.


                        Table 4 already indicates that a set of solutions may contain several solutions with the same objective values but different routes. Vice versa, due to the bi-objective nature of the scheduling problem, a set of routes may result in multiple non-dominated solutions. In fact, the set of non-dominated solutions with unique routes on average only represents 82 percent of the total number of non-dominated solutions found by the algorithm.
                        
                     

The trade-off between both objectives is analyzed using five runs of the best settings of the metaheuristic algorithm (v6). For this purpose, several subsets of the 90 instances are considered. A distinction is made between small instances (I ≤ 25), medium-sized instances (50 ≤ I ≤ 150) and large instances (I ≥ 200). Besides, a distinction is made based on the considered mode(s) of transportation and travel cost/time data (car, public, mix, car (own data)). A difficulty with analyzing the trade-off is the fact that for some solutions one of the objective values may be zero, thereby making it impossible to express for example the increase in costs when reducing client inconvenience as a percentage of the minimum cost.

Information on the two extreme solutions in an approximation set, the one with minimum cost and the one with minimum inconvenience, is presented in Table 5. For each set of instances, average values over five runs on all instances are reported. The first two columns indicate the average cost per job in euros and the average level of inconvenience for a job in the solution. Values per job instead of total values are used to allow a fairer comparison between (sets of) instances. However, comparison between sets of instances should still be made with care as the underlying network information differs from instance to instance. Since inconvenience is clearly attributable to a specific job and the inconvenience level may only take integer values from zero to four, some additional information on the distribution of total inconvenience over the jobs is presented as well. The third column indicates the standard deviation from the average, while the other columns indicate the fraction of jobs having a specific inconvenience level, averaged over all runs and instances.

Results indicate that on average a considerable difference between the minimum cost and minimum inconvenience solution exists in terms of both objectives. Hence, the decision of service providers on which service level to offer to their clients has a large effect on operating costs and this decision should be made carefully. While the mode of transportation does not seem to have a large effect on the extreme solutions, the cost and inconvenience per job seem to decrease considerably when the number of jobs increases, indicating economies of scale for larger service providers. Looking at the distribution of inconvenience over the jobs for the minimum inconvenience solution, it is clear that most jobs have a small level of inconvenience (0 or 1). Although the objective is to minimize total inconvenience, without imposing constraints on the inconvenience of a specific job, only very few jobs seem to suffer from a very high level of inconvenience (3 or 4). Even for the minimum cost solution, on average jobs still have a relatively low level of inconvenience (1.49), with most jobs having levels of 0, 1 or 2.
                        
                     

More information on the trade-off may be found in Fig. 1 which indicates the average shape of the trade-off curve between the two extreme solutions over all runs and instances. The figure is constructed as follows. For each run on each instance, the range of total costs is defined as the difference between total costs in the minimum inconvenience solution and the minimum cost solution. This range indicates the additional costs a service provider might incur in order to improve the offered service level to his clients. Similarly the range of inconvenience is defined as the reduction in inconvenience that may be achieved by incurring these additional costs. Next, starting from the minimum cost, for every increase in costs equal to a multiple of 5 percent of the total cost range, the corresponding inconvenience level is found. This is done by calculating the total cost level, looking for the two solutions in the front which encompass this cost level and linearly interpolating to find the inconvenience level which corresponds to the cost level. The difference between this inconvenience level and the minimum inconvenience level is then expressed as a fraction of the range of inconvenience. Fig. 1 shows the average fractions over all runs and instances. It indicates which fraction of the total possible reduction in inconvenience is achieved on average when increasing costs with a certain fraction of its range. Since fractions of the ranges of both objectives are used, the actual slope of the trade-off curve will depend on the actual absolute ranges. For example, a large cost range and a small inconvenience range will result in a rather steep curve. Besides, note that for individual instances the trade-off curve might not be convex, i.e. some efficient solutions may be non-supported and cannot be found using a simple weighted objective approach. For service providers mainly focusing on minimizing costs, the curve in Fig. 1 indicates that with a relatively small effort in terms of costs, inconvenience for the clients may already be reduced considerably. An increase in costs of respectively 5 or 10 percent of its range will already result in a reduction of inconvenience of 27 or 39 percent of its range. As can be expected, the more one moves towards the minimum inconvenience solution, the more costly it becomes to reduce inconvenience even further.
                        
                        
                     

Finally, the effect of the width of the soft time windows around the preferred visit time is analyzed. Service providers may set the width of these time windows in accordance with their view on client expectations. The less clients are prepared to allow a deviation from their preferred visit time, the narrower these time windows should be set. For all experiments discussed above, the soft time windows had a width of 1 and 2 hours, centered around the preferred visit time. The effect of widening (to 1 hour 30 minutes and 3 hours) and narrowing (to 30 minutes and 1 hour) these time windows is shown in Fig. 2. It depicts the non-dominated solutions found by the algorithm for each of these settings for one of the largest instances (instance 90). Clearly, when the soft time windows are narrower it becomes more costly to offer a similar service level and hence the trade-off curve shifts to the upper right corner.

Demand for home care services in western countries is increasing due to demographic changes in terms of a continuously aging population. Home care providers are faced with the need for tools to support and optimize their operational routing and scheduling to cope with this increasing demand. This optimization problem consists of assigning jobs to nurses and constructing efficient routes and schedules for the nurses. It has been studied extensively in the past years, often inspired by real-life applications.

Service providers are confronted with multiple, often conflicting, objectives in this process. On the one hand the objective is to minimize their operating costs while on the other hand they want to offer a high service level to their clients by taking into account their preferences. Current planning models either use weighted objective functions or hard constraints to incorporate the latter aspect, thereby masking or ignoring the trade-off between both objectives. Since the trade-off between cost and client convenience is an important consideration for service providers, this paper is the first to shed some light on this trade-off relationship by modeling the home care routing and scheduling problem as a bi-objective problem.

A definition of the problem is presented, together with a mixed integer problem formulation and some valid inequalities to strengthen this formulation. The problem takes into account qualifications, working regulations and overtime costs of the nurses, travel costs depending on the mode of transportation, hard time windows, and client preferences on visit times and nurses. A distinguishing characteristic of the problem is that the scheduling problem for a single route is a bi-objective problem in itself, thereby complicating the problem considerably.

Small problem instances are solved by applying the 
                        ϵ
                     -constraint solution framework. In order to solve problem instances of realistic size, a metaheuristic algorithm is proposed. This algorithm embeds a large neighborhood search heuristic in the multi-directional local search framework. A set of benchmark instances is generated using real-life data, and computational experiments of different parameter settings of the metaheuristic algorithm are presented. A comparison with exact solutions on small instances shows that the algorithm adequately solves the problem under study. An analysis of the results reveals that service providers face a considerable trade-off between costs and client convenience. However, starting from a minimum cost solution, the average service level offered to clients may already be improved drastically with a relatively small fraction of additional costs, e.g. on average an increase in costs of respectively 5 or 10 percent of its range already results in a reduction of inconvenience of 27 or 39 percent of its range.

As this paper is the first to study the home care scheduling problem from a bi- or multi-objective perspective, many opportunities for future research exist. More sophisticated exact solution approaches (e.g. Branch-and-Cut(-and-Price)) may be developed to assess the quality of heuristic procedures for larger instances. Furthermore, the problem and the MDLS-based metaheuristic can easily be extended with additional objectives. Nurse convenience may for example be included to address the preferences of nurses regarding working times and the clients to visit. Finally, the problem may be extended with additional real-life aspects such as temporal dependencies between jobs, dynamic aspects of visits and travel times, and a longer planning horizon.

@&#ACKNOWLEDGMENTS@&#

This work is supported by the Research Foundation Flanders (FWO), by the Interuniversity Attraction Poles Programme initiated by the Belgian Science Policy Office (research project COMEX, Combinatorial Optimization: Metaheuristics & Exact Methods), and by the Austrian Science Fund (FWF): T514-N13, P23589-N13.

In this appendix detailed information on the parameters used to generate the problem instances is provided. Table A.1 gives an overview of the instances, indicating for each instance the number of jobs, the number of patient locations, the number of full-time (FT) and part-time (PT) nurses, and the transportation modes considered. In Table A.2 the probability for a job to require a certain level of qualification and for a nurse to possess a certain level of qualification are shown, together with a compatibility matrix. Nurse wages are distributed uniformly between the bounds provided in the last two lines of the table. Information on the time-related parameters is provided in Table A.3. The second column shows the probability for a job to be assigned to a time slot. For each time slot, the service duration of a job is generated according to a normal distribution with a time slot-specific average and standard deviation, although a hard minimum and maximum are applied to avoid unrealistic values. Finally, Table A.4 indicates the probability for a patient to request several jobs on a single day, thereby reducing the number of physical locations in the network.

See Table B.1 for detailed results.

@&#REFERENCES@&#

