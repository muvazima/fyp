@&#MAIN-TITLE@&#Sparse deconvolution of higher order tensor for fiber orientation distribution estimation

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           We model a regularization of HOT with an l
                              1 penalization not on coefficient vector but directly on the FOD.


                        
                        
                           
                           A weighted regularization scheme is developed to iteratively solve the problem.


                        
                        
                           
                           Our method allows HOTs to obtain increasingly clean and sharp FOD with very higher order tensors.


                        
                        
                           
                           The method appears to be less spurious peaks and more coherence across neighboring FODs.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Diffusion magnetic resonance imaging

Fiber orientation distribution

Higher order tensor

Spherical deconvolution

Sparse approximation

@&#ABSTRACT@&#


               
               
                  Purpose
                  Higher order tensor (HOT) imaging approaches based on the spherical deconvolution framework have attracted much interest for their effectiveness in estimating fiber orientation distribution (FOD). However, sparse regularization techniques are still needed to obtain stable FOD in solving the deconvolution problem, particularly in very high orders. Our goal is to adequately characterize the actual sparsity lying in the FOD domain to develop accurate estimation approach for fiber orientation in HOT framework.
               
               
                  Materials and methods
                  We propose a sparse HOT regularization model by enforcing the sparse constraint directly on the representation of FOD instead of imposing it on coefficients of basis function. Then, we incorporate both the stabilizing effect of the l
                     2 penalty and the sparsity encouraging effect of the l
                     1 penalty in the sparse model to adequately characterize the actual sparsity lying in the FOD domain. Furthermore, a weighted regularization scheme is developed to iteratively solve the deconvolution problem. The deconvolution technique is compared against existing methods using l
                     2 or l
                     1 regularizer and tested on synthetic data and real human brain.
               
               
                  Results
                  Experiments were conducted on synthetic data and real human brain data. The synthetic experimental results indicate that crossing fibers are more easily detected and the angular resolution limit is improved by our method by approximately 20°–30° compared to existing HOT method. The detection accuracy is considerably improved compared with that of spherical deconvolution approaches using the l
                     2 regularizer and the reweighted l
                     1 scheme.
               
               
                  Conclusions
                  Results of testing the deconvolution technique demonstrate that it allows HOTs to obtain increasingly clean and sharp FOD, which in turn significantly increases the angular resolution of current HOT methods. With sparsity on FOD domain, this method efficiently improves the ability of HOT in resolving crossing fibers.
               
            

@&#INTRODUCTION@&#

Diffusion weighted magnetic resonance imaging (DW-MRI) is a non-invasive imaging technique capable of revealing microstructural information of human brain. Diffusion tensor imaging (DTI) is commonly used to approximate the diffusivity function from a given set of acquired DW-MRI images [1]. However, voxels are often contaminated with significant partial volume effects at current spatial resolutions, and the diffusion tensor model fails to accurately represent the nerve bundle geometry in voxels containing multiple fiber populations.

The need of developing accurate estimation approaches for fiber orientation to resolve neural architecture in regions with complex fiber patterns necessitates the inventing or using novel methods of high angular resolution diffusion imaging (HARDI). One group of methods, collectively known as q-space techniques, identifies multiple fiber components by calculating the probability distribution function (PDF) of the diffusion process based on the Fourier transform relationship between the PDF of the diffusion displacement and the diffusion weighted signal attenuation in q-space. These methods include Q-ball imaging [2], diffusion spectrum imaging [3,4], and diffusion orientation transform [5]. Model-based methods rely on a more complex model to characterize the diffusion-weighted signal attenuation; such methods include the multi-tensor model [6], directional functions [7], spherical harmonics deconvolution [8–12], and high order tensor (HOT) [13–17]. Among these techniques, HOTs, which generalizes the 2nd order tensors, were introduced [13] to represent the non-Gaussian diffusion process owing to its simple polynomial form and its ability to model multi-lobed spherical functions. However, choosing a low-order basis implies an increased smoothing and therefore a loss of sharp directional information, whereas a high-order basis entails many more coefficients to represent the orientation distribution function (ODF). These coefficients, particularly those for the 8th, 10th or higher orders, are difficult to identify in diffusion estimation processing. Thus, the estimation of these coefficients suffers heavily from noise.

A common approach to robustly obtain the fiber orientation distribution (FOD) is to guarantee the non-negative property of HOT functions. Barmpoutis et al. [18] presented a novel technique that represents a 4th-order tensor using a homogeneous polynomial of degree 4 in three variables. The theories guaranteed the symmetric positive definite property. In succeeding works, they extended their method to represent a tensor of any order using homogeneous polynomial parameterizations that covers the full space of positive definite tensors of any order [16,19]; they summarized their work as a complete mathematical study [14]. Qi et al. [20,21] proposed a positive semi-definite diffusion tensor model that is a convex optimization problem with a convex quadratic objective function constrained by the non-negative requirement on the smallest Z-eigenvalue of the diffusivity function. Their research improved the stabilities, but their results are still prone to poor angular resolution.

Jiao et al. [15] recently expressed the spherical deconvolution of HOT-ODF as a linear programming problem and then extracted the fiber orientation using the rank-k tensor decomposition method. Weldeselassie et al. [16] used a spherical deconvolution framework in estimating the positive-definite Cartesian tensor ODF, which can be achieved by minimizing an objective function subject to nonnegative constraints. Such minimization is in turn achieved by solving a linear programming problem using the nonnegative least squares algorithm. These spherical deconvolution approaches represent a huge advance in obtaining increasingly sharp fiber orientation. However, the former method is known to suffer heavily from intrinsic instabilities in solving the non-negative linear programming problem. The latter method approximates the HOTs using the sum of squares of lower order tensors. The accuracy of the approximation also depends on how well the set of vectors is sampled in the space of a unit sphere.

Recent research on HOT is generally based on the assumption that FOD is a non-negative function. Incorporating prior knowledge on FOD via sparse representation provides an effective approach to reconstruct sparse fiber signals. Landman et al. [22] and Pu et al. [23] imposed the l
                     1-norm penalty on the coefficients of spherical harmonics basis. Daducci et al. [12] introduced l
                     0-norm penalty and then performed approximations through a reweighing l
                     1-norm scheme. These approaches assume that the sparsity of the coefficients implies the FOD sparsity. Hence, they usually directly enforce the FOD sparsity on the domain of coefficients. The FOD values are usually computed from a set of basis functions or polynomials with the coefficients. The sparsity of the coefficients means that only a few basis functions or polynomials are included to form the FOD, whereas the sparsity of the FOD suggests that only a small number of the FOD values are non-zero.

In this work, we first define a new sparse HOT imaging model, in which the sparse constraint is directly imposed on the FOD domain using the l
                     0-norm penalty. The l
                     0-norm sparsity of FOD is then approximated by combining the sparsity encouraging effect of l
                     1-norm and the stabilizing effect of l
                     2-norm. In addition, a weighted regularization scheme is proposed to iteratively solve the minimization problem. We evaluate the effectiveness of our proposal for improving FOD reconstructions by comparing it with existing state-of-the-art HOT-ODF and spherical harmonics methods. We report results on both synthetic and real data. This paper is organized as follows: Section 2 develops the sparse HOT imaging model that performs convolution between the HOT-ODF and DW-MRI signals and proposes the iterative deconvolution algorithm. Section 3 presents the evaluation of the performance of the algorithm on synthetic data and real-world DW-MRI data. Section 4 concludes the paper.

The image contrast in diffusion weighted imaging is related to the diffusion of water molecules, whose measurements can be rendered sensitive to water diffusion along distinct spatial direction g in the sphere, such that the diffusion signal attenuation S(g)/S
                        0 is measured with diffusion weighted b-values b for each direction. We express the diffusion signal attenuation profile as the convolution of a signal fiber response function using HOT-ODF


                        
                           
                              (1)
                              
                                 S
                                 (
                                 g
                                 )
                                 /
                                 
                                    
                                       S
                                       0
                                    
                                 
                                 =
                                 R
                                 (
                                 v
                                 ,
                                 g
                                 )
                                 ⊗
                                 D
                                 (
                                 v
                                 )
                                 =
                                 
                                    ∫
                                    
                                       
                                          S
                                          2
                                       
                                    
                                    
                                 
                                 
                                    R
                                    (
                                    v
                                    ,
                                    g
                                    )
                                    D
                                    (
                                    v
                                    )
                                 
                                 dv
                              
                           
                        where g
                        =(g
                        1, g
                        2, g
                        3)
                           T
                         is the magnetic field gradient direction, and 
                           v
                         is the unit vector on sphere S
                        2. S(g) represents the DW-MRI signal acquired with b-value b in direction g
                        ∈
                        S
                        2, while S
                        0 is the signal acquired without diffusion weighting. 
                           R
                           (
                           v
                           ,
                           g
                           )
                         is an axially symmetric response function representing diffusion signal attenuation measured from a single coherently oriented fiber population[24], written as
                           
                              (2)
                              
                                 R
                                 (
                                 v
                                 ,
                                 g
                                 )
                                 =
                                 
                                    
                                       exp
                                       
                                          −
                                          μ
                                          b
                                          
                                             
                                                
                                                   (
                                                   
                                                      
                                                         g
                                                         T
                                                      
                                                   
                                                   v
                                                   )
                                                
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           μ
                           =
                           (
                           
                              λ
                              max
                           
                           −
                           
                              λ
                              ¯
                           
                           )
                         denotes anisotropy interaction to signal attenuation which can be estimated from the signal attenuation in areas of a single z-aligned rotationally symmetric fiber population with the eigenvalues 
                           [
                           
                              λ
                              max
                           
                           ,
                           
                              λ
                              ¯
                           
                           ,
                           
                              λ
                              ¯
                           
                           ]
                        . The HOT-ODF function 
                           D
                           (
                           v
                           )
                         is approximated using a Cartesian tensor [16]. For the lth order tensor, it reads


                        
                           
                              (3)
                              
                                 D
                                 (
                                 v
                                 )
                                 =
                                 
                                    ∑
                                    
                                       r
                                       =
                                       0
                                    
                                    l
                                 
                                 
                                    
                                       ∑
                                       
                                          s
                                          =
                                          0
                                       
                                       
                                          l
                                          −
                                          r
                                       
                                    
                                    
                                       
                                          d
                                          rs
                                       
                                    
                                 
                                 
                                    v
                                    1
                                    r
                                 
                                 
                                    v
                                    2
                                    s
                                 
                                 
                                    v
                                    3
                                    
                                       l
                                       −
                                       r
                                       −
                                       s
                                    
                                 
                              
                           
                        where 
                           v
                           =
                           
                              
                                 
                                    (
                                    
                                       
                                          v
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                          3
                                       
                                    
                                    )
                                 
                                 T
                              
                           
                         is the 3-dimensional unit vector, and d
                        
                           rs
                         are the tensor coefficients. For convenience, Eq. (3) can also be expressed as


                        
                           
                              (4)
                              
                                 D
                                 (
                                 v
                                 ,
                                 x
                                 )
                                 =
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    m
                                 
                                 
                                    
                                       
                                          x
                                          j
                                       
                                    
                                    
                                       
                                          f
                                          j
                                       
                                    
                                    (
                                    v
                                    )
                                 
                              
                           
                        where x
                        
                           j
                         are the coefficients related to the tensor coefficients d
                        
                           rs
                        , and 
                           
                              
                                 f
                                 j
                              
                           
                           (
                           v
                           )
                           =
                           
                              v
                              1
                              r
                           
                           
                              v
                              2
                              s
                           
                           
                              v
                              3
                              
                                 l
                                 −
                                 r
                                 −
                                 s
                              
                           
                         are the jth tensor monomials with 
                           j
                           =
                           r
                           (
                           l
                           −
                           
                              
                                 r
                                 −
                                 3
                              
                              2
                           
                           )
                           +
                           s
                           +
                           1
                        . The number of terms in the summation in Eq. (4) is bounded by the number of unique monomials, that is, m
                        ≤(l
                        +1)(l
                        +2)/2.

Given a data set of DW-MRI signal attenuations S(g
                        
                           i
                        )/S
                        0 associated with magnetic gradient orientations g
                        
                           i
                         and diffusion weighted b-values b, the coefficients of an lth order tensor can be estimated by minimizing the following energy function with respect to the unknown polynomial coefficients


                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             E
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                n
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               S
                                                               (
                                                               
                                                                  g
                                                                  i
                                                               
                                                               )
                                                            
                                                            /
                                                            
                                                               
                                                                  S
                                                                  0
                                                               
                                                            
                                                            −
                                                            
                                                               ∫
                                                               
                                                                  
                                                                     S
                                                                     2
                                                                  
                                                               
                                                               
                                                            
                                                            
                                                               R
                                                               (
                                                               v
                                                               ,
                                                               
                                                                  g
                                                                  i
                                                               
                                                               )
                                                               D
                                                               (
                                                               v
                                                               ,
                                                               x
                                                               )
                                                            
                                                            dv
                                                         
                                                      
                                                   
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                n
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               S
                                                               (
                                                               
                                                                  g
                                                                  i
                                                               
                                                               )
                                                            
                                                            /
                                                            
                                                               
                                                                  S
                                                                  0
                                                               
                                                            
                                                            −
                                                            
                                                               ∑
                                                               
                                                                  j
                                                                  =
                                                                  1
                                                               
                                                               m
                                                            
                                                            
                                                               
                                                                  
                                                                     x
                                                                     j
                                                                  
                                                               
                                                               
                                                                  ∫
                                                                  
                                                                     
                                                                        S
                                                                        2
                                                                     
                                                                  
                                                                  
                                                               
                                                               
                                                                  
                                                                     
                                                                        e
                                                                        
                                                                           −
                                                                           μ
                                                                           b
                                                                           
                                                                              
                                                                                 
                                                                                    (
                                                                                    
                                                                                       
                                                                                          g
                                                                                          i
                                                                                          T
                                                                                       
                                                                                    
                                                                                    v
                                                                                    )
                                                                                 
                                                                                 2
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        f
                                                                        j
                                                                     
                                                                  
                                                                  (
                                                                  v
                                                                  )
                                                               
                                                               dv
                                                            
                                                         
                                                      
                                                   
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        Estimating the HOT coefficients in (5) constitutes a discrete inverse problem of the form
                           
                              (6)
                              
                                 y
                                 =
                                 Ax
                                 +
                                 ξ
                              
                           
                        where A is an n
                        ×
                        m matrix with 
                           
                              
                                 A
                                 ij
                              
                           
                           =
                           
                              ∫
                              
                                 
                                    s
                                    2
                                 
                              
                           
                           
                              
                                 
                                    e
                                    
                                       −
                                       μ
                                       b
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      
                                                         g
                                                         i
                                                      
                                                   
                                                   T
                                                
                                                v
                                                )
                                             
                                             2
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    f
                                    j
                                 
                              
                              (
                              v
                              )
                           
                           dv
                        , x is an m-dimensional vector that contains the unknown coefficients x
                        
                           j
                        , y is an n-dimensional vector with y
                        
                           i
                        
                        =
                        S(g
                        
                           i
                        )/S
                        0, and ξ represents the noise and measurement errors, represented as Rician noise in this work. The scale of the problem is related to the tensor order l and the magnetic field gradient direction number n. HOT helps improve the angular resolution of crossing fibers. However, it becomes a large-scale inverse problem as the tensor order and gradient direction number increase. The diffusion signal y is also contaminated by noise and measurement errors in practice. Hence, the system of linear (6) is typically very ill conditioned, and directly applying the least squares method [25] results in a solution dominated by noise that bears little resemblance to the true distribution of the fiber orientation. As a result, the angular resolution cannot be further increased when the tensor order is greater than four. Regularization is necessary to stabilize the problem and to define a unique solution.

A common regularization approach is the penalized least squares. The Tikhonov regularization scheme with spherical harmonic functions, which is the non-negativity constrained spherical deconvolution (super-CSD) proposed by [8], involves minimizing the weighted sum of two terms


                        
                           
                              (7)
                              
                                 
                                    min
                                    x
                                 
                                    
                                 
                                    
                                       
                                          
                                             Ax
                                             −
                                             y
                                          
                                       
                                    
                                    2
                                    2
                                 
                                 +
                                 
                                    
                                       φ
                                       2
                                    
                                 
                                 
                                    
                                       
                                          Lx
                                       
                                    
                                    2
                                    2
                                 
                              
                           
                        where φ is the regularization parameter, and L is the constraint matrix that contains prior information on the smoothness of the exact solution. However, Tikhonov regularization results in a reduced overall mean square error through a bias-variance tradeoff. A problem of the Tikhonov regularization approach is that every element of x in the estimated solution is generally non-zero and non-negative, while the true solution involves only a subset of non-zero elements. Consequently, the solution of (7) is generally non-sparse.

Sparse approximation methods are widely applied in the context of linear inverse problems of the form (6) 
                        [26,27]. The goal is to find a solution that accounts for the observed data using only a small subset of the elements of x. The true distribution of the fiber orientation can be considered sparse with the assumption that only a small number of the elements of x are non-zero. They produce a maximally sparse representation of an observed signal y by minimizing the l
                        0 problem
                           
                              (8)
                              
                                 
                                    min
                                    x
                                 
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                       0
                                    
                                 
                                 
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    
                                       
                                          
                                             
                                                Ax
                                                −
                                                y
                                             
                                          
                                       
                                       2
                                    
                                    ≤
                                    ξ
                                 
                              
                           
                        where 
                           
                              
                                 
                                    .
                                 
                              
                              0
                           
                         is the number of non-zero elements. Considering that only several fiber populations exist inside a voxel, they then assume the existence of less than k fiber bundles inside a voxel. The elements of (8) can be combined in seeking the minimal error possible at a given level of sparsity k
                        
                           
                              
                                 
                                    min
                                    x
                                 
                                 
                                    
                                       
                                          
                                             
                                                Ax
                                                −
                                                y
                                             
                                          
                                       
                                       2
                                    
                                 
                                 
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                       0
                                    
                                    ≤
                                    k
                                 
                              
                           
                        The essence of minimizing the l
                        0 problem is an NP-hard problem.
                           1
                        
                        
                           1
                           NP-hard (Non-deterministic Polynomial-time hard), in computational complexity theory, is a class of problems that are, informally, at least as hard as the hardest problems in NP.
                         It is usually relaxed as an l
                        1 problem. Daducci et al. [12] uses 
                           
                              
                                 
                                    
                                       ω
                                       x
                                    
                                 
                              
                              1
                           
                         to approximate 
                           
                              
                                 
                                    x
                                 
                              
                              0
                           
                        , which leads to the l
                        1 problem
                           
                              
                                 
                                    min
                                    x
                                 
                                 
                                    
                                       
                                          
                                             
                                                Ax
                                                −
                                                y
                                             
                                          
                                       
                                       2
                                    
                                 
                                 
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    
                                       
                                          
                                             
                                                ω
                                                x
                                             
                                          
                                       
                                       1
                                    
                                    ≤
                                    k
                                 
                              
                           
                        where 
                           
                              
                                 
                                    
                                       ω
                                       x
                                    
                                 
                              
                              1
                           
                         defines a group of convex constraints by weighing the prior information. The sparse elements of x tend to zero with the iterative updating of ω. Here, the updating strategy of weight ω
                        (t+1)
                        =(1/x
                        
                           i
                        
                        
                           t
                        ). It can also be rewritten using parameter λ
                        ≥0 to balance the twin objectives of minimizing both error and sparsity
                           
                              (9)
                              
                                 
                                    min
                                    x
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Ax
                                                      −
                                                      y
                                                   
                                                
                                             
                                             2
                                             2
                                          
                                          +
                                          λ
                                          
                                             
                                                
                                                   
                                                      
                                                         ω
                                                         x
                                                      
                                                   
                                                
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        In problems (8) and (9), the sparsity constraint of FOD is imposed on the coefficient x. Our goal in this work is to adequately characterize the actual sparsity lying in the FOD domain.

Our FOD sparsity is based on the assumption that only a small number of the FOD values are non-zero. Therefore, unlike (8), the new sparse representation of FOD is provided by minimizing the l
                        0 problem
                           
                              (10)
                              
                                 
                                    min
                                    x
                                 
                                 
                                    
                                       
                                          
                                             
                                                D
                                                (
                                                v
                                                ,
                                                x
                                                )
                                             
                                          
                                       
                                       0
                                    
                                 
                                 
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    
                                       
                                          
                                             
                                                Ax
                                                −
                                                y
                                             
                                          
                                       
                                       2
                                    
                                    ≤
                                    ξ
                                 
                              
                           
                        where 
                           D
                           (
                           v
                           ,
                           x
                           )
                           =
                           xF
                         with x
                        =[x
                        1, x
                        2, …, x
                        
                           m
                        ]
                           T
                         and 
                           F
                           =
                           [
                           
                              f
                              1
                           
                           (
                           v
                           )
                           ,
                           
                              f
                              2
                           
                           (
                           v
                           )
                           ,
                           …
                           ,
                           
                              f
                              m
                           
                           (
                           v
                           )
                           ]
                         is the FOD values computed from the HOT-ODF in Eq. (4). It can also be relaxed as an l
                        1 problem as in (10)
                        
                           
                              (11)
                              
                                 
                                    min
                                    x
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Ax
                                                      −
                                                      y
                                                   
                                                
                                             
                                             2
                                             2
                                          
                                          +
                                          λ
                                          
                                             
                                                
                                                   
                                                      
                                                         ω
                                                         D
                                                         (
                                                         v
                                                         ,
                                                         x
                                                         )
                                                      
                                                   
                                                
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The sparse elements of 
                           D
                           (
                           v
                           ,
                           x
                           )
                         tend to zero with the iterative updating of ω. The updating strategy of weight ω is defined here as
                           
                              (12)
                              
                                 
                                    
                                       ω
                                       i
                                       
                                          (
                                          t
                                          +
                                          1
                                          )
                                       
                                    
                                 
                                 =
                                 
                                    
                                       ▽
                                       (
                                       
                                          D
                                          i
                                       
                                       
                                          
                                             (
                                             v
                                             ,
                                             x
                                             )
                                          
                                          
                                             (
                                             t
                                             )
                                          
                                       
                                       ,
                                       β
                                       )
                                    
                                    
                                       
                                          
                                             
                                                
                                                   D
                                                   i
                                                
                                                
                                                   
                                                      (
                                                      v
                                                      ,
                                                      x
                                                      )
                                                   
                                                   
                                                      (
                                                      t
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                       +
                                       δ
                                    
                                 
                              
                           
                        where 
                           ∇
                           (
                           
                              
                                 D
                                 i
                              
                           
                           ,
                           β
                           )
                           =
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                0
                                                   
                                                
                                                |
                                                
                                                   
                                                      D
                                                      i
                                                   
                                                
                                                |
                                                ≤
                                                β
                                             
                                          
                                       
                                       
                                          
                                             
                                                1
                                                
                                                   
                                                |
                                                
                                                   
                                                      D
                                                      i
                                                   
                                                
                                                |
                                                >
                                                β
                                             
                                          
                                       
                                    
                                 
                              
                           
                        , β is a given vector with positive elements with the same size of D
                        
                           i
                        ; δ is a positive constant to prevent the denominator of the weight is zero in iteration, therefore it is set to a very small number (δ
                        =10−3 in this work). The functions of (9) and (11) are typical lasso-type optimization problems, which have been proven to be convex, albeit not strictly so; thus the solutions are not unique. One possible means of coping with the previous problems is to consider the elastic net model
                           
                              (13)
                              
                                 
                                    min
                                    x
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Ax
                                                      −
                                                      y
                                                   
                                                
                                             
                                             2
                                             2
                                          
                                          +
                                          λ
                                          (
                                          α
                                          
                                             
                                                
                                                   
                                                      
                                                         ω
                                                         D
                                                         (
                                                         v
                                                         ,
                                                         x
                                                         )
                                                      
                                                   
                                                
                                                1
                                             
                                          
                                          +
                                          (
                                          1
                                          −
                                          α
                                          )
                                          
                                             
                                                
                                                   
                                                      ψ
                                                      D
                                                      (
                                                      v
                                                      ,
                                                      x
                                                      )
                                                   
                                                
                                             
                                             2
                                             2
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        where parameter λ balances the sparsity constraint term and the noise term. We assume that λ is a Gauss distribution of normalized D, 
                           λ
                           =
                           
                              
                                 c
                                 1
                              
                           
                           
                              
                                 e
                                 
                                    −
                                    
                                       D
                                       ˆ
                                    
                                 
                              
                           
                              
                        , where 
                           
                              D
                              ˆ
                           
                           =
                           
                              
                                 x
                                 −
                                 min
                                 
                                    
                                       D
                                    
                                 
                              
                              
                                 max
                                 (
                                 D
                                 )
                                 −
                                 min
                                 (
                                 D
                                 )
                              
                           
                         is the minimum normalized D. Note that max(D)−min(D) is usually constant in the unit space, so we simply set λ
                        =
                        e
                        −[D−min(D)]. Parameter α
                        ∈[0, 1] controls the amount of sparsity and smoothness (α
                        =0 gives the group-lasso fit for smoothness, α
                        =1 gives the lasso fit to encourage sparsity). In this work, we expect strong overall sparsity and also would like to encourage grouping and use α
                        =0.5 with reasonable success. Parameter ψ is the constraint vector with elements
                           
                              (14)
                              
                                 
                                    ψ
                                    i
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      0
                                                      
                                                         
                                                      |
                                                      
                                                         
                                                            D
                                                            i
                                                         
                                                      
                                                      |
                                                      >
                                                      τ
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      1
                                                      
                                                         
                                                      |
                                                      
                                                         
                                                            D
                                                            i
                                                         
                                                      
                                                      |
                                                      ≤
                                                      τ
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where τ is a user-specified threshold controlling the amplitude below which the corresponding fiber orientation density is assumed to zero. A simple iterative algorithm can be obtained using convex analysis tools. The main steps of our algorithm are shown as Algorithm 1. In the algorithm, parameter ɛ should be chosen as a small number such that the algorithm converges to a local minimum of Eq. (13). Here we set as ɛ
                        =10−3.


                        
                           Algorithm 1
                           Sparse deconvolution with HOT.


                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                Input:
                                          
                                          
                                             
                                             Diffusion MRI attenuation signal y
                                                ∈
                                                R
                                                
                                                   n
                                                .
                                          
                                          
                                             
                                                Output:
                                          
                                          
                                             
                                             
                                                x
                                                ∈
                                                R
                                                
                                                   m
                                                
                                             
                                          
                                          
                                             1:
                                             Set order l tensor coefficients:
                                          
                                          
                                             
                                             
                                                
                                                λ, A
                                                ∈
                                                R
                                                
                                                   n×m
                                                
                                             
                                          
                                          
                                             2:
                                             Solve the problem:
                                          
                                          
                                             
                                             
                                                
                                                
                                                   
                                                      
                                                         x
                                                         
                                                            (
                                                            0
                                                            )
                                                         
                                                      
                                                   
                                                   ←
                                                   arg
                                                   min
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        Ax
                                                                        −
                                                                        y
                                                                     
                                                                  
                                                               
                                                               2
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             3:
                                             Compute the weights ω, ψ with (12) and (14), t
                                                ←1
                                          
                                          
                                             4:
                                             
                                                Repeat: Solve the problem:
                                          
                                          
                                             
                                             
                                                
                                                
                                                   
                                                      
                                                         x
                                                         
                                                            (
                                                            t
                                                            )
                                                         
                                                      
                                                   
                                                   ←
                                                   arg
                                                   min
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        A
                                                                        x
                                                                        −
                                                                        y
                                                                     
                                                                  
                                                               
                                                               2
                                                               2
                                                            
                                                            +
                                                            λ
                                                            (
                                                            α
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           ω
                                                                           
                                                                              D
                                                                              (
                                                                              v
                                                                              ,
                                                                              x
                                                                              )
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  1
                                                               
                                                            
                                                            +
                                                            (
                                                            1
                                                            −
                                                            α
                                                            )
                                                            
                                                               
                                                                  
                                                                     
                                                                        ψ
                                                                        
                                                                           D
                                                                           (
                                                                           v
                                                                           ,
                                                                           x
                                                                           )
                                                                        
                                                                     
                                                                  
                                                               
                                                               2
                                                               2
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                Update the weights ω, ψ with (12) and (14), t
                                                ←
                                                t
                                                +1
                                          
                                          
                                             
                                             
                                                
                                                Until: Stopping criterion 
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        x
                                                                        
                                                                           (
                                                                           t
                                                                           )
                                                                        
                                                                     
                                                                  
                                                                  −
                                                                  
                                                                     
                                                                        x
                                                                        
                                                                           (
                                                                           t
                                                                           −
                                                                           1
                                                                           )
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         2
                                                      
                                                   
                                                   <
                                                   ɛ
                                                 is satisfied
                                          
                                          
                                             5:
                                             
                                                x
                                                ←
                                                x
                                                (t), end;
                                          
                                          
                                             6:
                                             
                                                return 
                                                x.
                                          
                                       
                                    
                                 
                              
                           

@&#EXPERIMENTS@&#

In this section, we compare the representational ability of our sparsity-constrained higher order deconvolution method (SCD-HOT) with the positive constrained HOT deconvolution method (CT-FOD) [16], the l
                        2-norm constrained spherical deconvolution (super-CSD) using spherical harmonics [8], and the l
                        1-norm reweighted spherical deconvolution of [12] on simulated data. The synthetic DW-MRI signals were generated according to the multi-tensor model
                           
                              (15)
                              
                                 
                                    
                                       S
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       S
                                       0
                                    
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    k
                                 
                                 
                                    
                                       
                                          κ
                                          j
                                       
                                    
                                    
                                       
                                          e
                                          
                                             −
                                             
                                                bg
                                                i
                                                T
                                             
                                             
                                                
                                                   d
                                                   j
                                                
                                             
                                             
                                                
                                                   g
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                                 +
                                 ζ
                              
                           
                        where k is the number of fibers, ζ is the added noise, κ
                        
                           j
                         is the convex parameters with 
                           
                              ∑
                              
                                 j
                                 =
                                 1
                              
                              k
                           
                           
                              
                                 κ
                                 j
                              
                           
                           =
                           1
                        , g
                        
                           i
                         is the ith gradient direction, and d
                        
                           j
                         is the diffusion tensor of the jth fiber. The signal is typically generated by Rician noise with a standard deviation of 1/σ, thereby producing a signal-to-noise ratio (SNR) of σ.

In the first experiment, we test the angular resolution ability of our method using different tensor orders at different SNR levels. The reconstruction results of two crossing fibers with a separation angle 50° for tensor orders from 4 to 22 at SNR of 10, 30, and 50 are provided in Figs. 1
                         (b
                        =1000s/mm2) and 2
                         (b
                        =3000s/mm2). The opaque surface describes the mean FOD over 100 noise realizations, and the transparent surface depicts the mean double standard deviations. Both results show that our method can stably reconstruct fiber orientations at different SNR levels, the two fiber populations can be clearly resolved as the tensor order l increases, and the FODs estimated with higher order l have relatively sharper features. By comparing the results in Figs. 1 and 2, we can find that the reconstruction results are insensitive to b-value.

In the second experiment, we try to identify the FOD reconstruction effects of the proposed method (SCD-HOT) with different separation angles by comparing with CT-FOD, super-CSD and reweighted l
                        1. Fig. 3
                         shows the comparison results of tensor order l
                        =16 and those of tensor order l
                        =18 under the following parameters b
                        =3000s/mm2, SNR=40, the sample density N
                        =321. In Fig. 3, the SCD-HOT profile is generally sharper than that of the CT-FOD, super-CSD and reweighted l
                        1 at the same order. We see an improvement of approximately 10° in the angular resolution relative to that in super-CSD. The double standard deviations of the four methods suggest that the super-CSD and reweighted l
                        1 methods are unstable at a very high order.

We perform more experiments on angular resolution limitation by changing the estimation order, b-value, and SNR to further confirm the improvement in angular resolution. The synthetic data is simulated as two crossing fibers, whose crossing angle is varied to determine the critical angle at which only single maximum instead of two, is detected. We use a thresholds mechanism to compute the principal directions (FOD maxima) on a tessellation of 1281 points on the sphere. Fig. 4
                         shows that the angular resolution of our method is better by approximately 20°–30° than that of CT-FOD, by approximately 10°–15° than that of super-CSD, by approximately 5°–10° than that of reweighted l
                        1 across all simulations. As expected, the angular resolution limitation is improved by approximately 5°; the increase occurs per two orders. The super-CSD and reweighted l
                        1 methods are sensitive to noise when order l
                        ≥14, but the SCD-HOT method still works effectively at an order more than 18.

We also compare the mean angular errors in the degrees for the estimated FOD. These errors, which are the average errors of 100 times in the estimation of principal diffusion direction computed by 
                           θ
                           =
                           (
                           180
                           /
                           π
                           )
                           arccos
                           (
                           γ
                           ,
                           
                              γ
                              ˆ
                           
                           )
                        , where 
                           
                              γ
                              ˆ
                           
                         is the given fiber direction, and γ is the estimated fiber direction. We plot the mean and standard deviation of the estimated angular error for fibers simulated with a separation angle from 30° to 90°, l
                        =12, 14, and 16, and SNR=40. The results are given in Fig. 5
                         (the left column is with b
                        =1000s/mm2 and right column is with 3000s/mm2). In case of a higher b-value 3000s/mm2, the SCD-HOT shows the advantage of relatively smaller mean angular errors and standard deviations in small separation angle, which is particularly obvious at order l
                        ≥16. In the case of lower b-value 1000s/mm2, the mean angular error of CT-FOD increases considerably compared with that of b-value 3000s/mm2. At order l
                        =12, the low b-value has little influence on the mean angular error of super-CSD, but the standard deviation increases slightly. At higher order l
                        =14 and 16, the mean angular error and standard deviation apparently increase. The results of SCD-HOT are still robust in all the experiments and are better than those of the CT-FOD and super-CSD.

For pre-processing of the diffusion data, we used MRIcron and SPM8 toolbox. Firstly, the DICOM images sets (.dcm) are split into NIfTI (.nii), gradient sequence (.bvecs) and sensitive coefficient (.bvals) dataset using MRIcron software, where NIfTI containing the scanned sequence corresponding to the gradient sequence. Then, every image frame along the scanning sequence are aligned to the first image frame using the realignment module in SPM8 for calibrating the shifting caused by head movement during the scanning. Finally, we read the head scanning data in NIfTI and the 4D dataset containing the measured signal S and the baseline signal S
                           0 using MATLAB NIfTI toolbox.

The first real dataset was acquired from a health human brain on a 3-T MRI system (GE Medical Systems, Milwaukee, WI, USA) and a double echo planar imaging sequence with a 32-channel head coil was used. The double-shot echo planar imaging (EPI) sequence was used with TR=17,000ms, TE=78ms and 2×2×2mm3 voxel size. The field of view (FOV) was 144×155mm2 with a 85×85 acquisition matrix and the number of excitations (NEX) was 1. In the axial direction, 59 slices were imaged with 2mm thickness and no gap. Diffusion sensitizing gradients with b
                           =900s/mm2 were applied along 51 non-collinear directions. Eight images without diffusion-weighting (b
                           =0s/mm2) baseline scans were acquired, of which one was acquired with reverse phase-encoding for the purpose of the EPI distortion correction.

The second real dataset was acquired from a health human brain using a 3-T MRI system (SIEMENS Magnetom TrioTim syngo MR B17). The double-shot EPI sequence was used with TR=4600ms, TE=175ms and 2.5×2.5×2.5mm3 voxel size. The FOV was 256×256mm2 with a 81×106 acquisition matrix. In the axial direction, 76 slices were imaged with 2mm thickness and no gap. Diffusion sensitizing gradients with b
                           =2000s/mm2 were applied along 150 non-collinear directions. A image without diffusion-weighting baseline scans was acquired.

We first estimate the FOD in a region of corpus callosum (CC) in coronal slice of the human brain dataset, as shown in Fig. 6
                           . In this region of interest (ROI), the CC forms the roof of the lateral ventricles and fans out in a massive collateral radiation. The corticospinal tract (CST) lies lateral to the ventricle and is vertically directed. The superior longitudinal fasciculus (SLF) crosses the base of the precentral gyrus in an anterior−posterior direction. The lateral projections of the CC cross the CST and SLF. The fibers of the SLF partly intersect with the fibers of the CST and CC. Some voxels in the area contain the crossing of these three fiber bundles. Fig. 6 shows the estimated FOD using SCD-HOT with order changing from 8 to 18. The fiber orientations estimated in the region of the corpus callosum are consistent with the known anatomy; the corona radiata, superior longitudinal fasciculus, and commissural fibers can all be clearly identified. As expected, the FODs estimated using higher order l show relatively sharper features, and the reconstructed fiber directions are identical for all the orders.


                           Figs. 7 and 8
                           
                            show the reconstruction of the two dataset respectively using our method, CT-FOD, super-CSD and reweighted l
                           1 with tensor orders l = 12, 14, and 16. The results show that our method tends to be more coherence across neighboring FODs and generates less spurious peaks compared with CT-FOD, super-CSD and reweighted l
                           1. At low b-values, only very few crossings are resolved as individual maxima in CT-FOD. The FODs obtained from super-CSD, particularly from SCD-HOT, show an increase in angular resolution with more clearly defined peaks. However, the results of the reweighted l
                           1 are not so good as expected because it causes more noise-induced spurious peaks than those of SCD-HOT. Simultaneously, the fiber orientations with different orders obtained from SCD-HOT are more consistent than those of super-CSD and reweighted l
                           1 (when l
                           ≥16, the results of super-CSD are unstable.)

@&#DISCUSSION AND CONCLUSION@&#

In this work, we proposed a sparse HOT imaging model, expressing the attenuated signal as the convolution of a HOT-ODF and a response function, with both the l
                     1 and l
                     2 penalties applied to the deconvolution equation. The contribution of our approach is that it directly enforces the sparse constraints on the HOT-ODF function values represented as the l
                     0 norm. The sparsity of the FOD is then approximated by combining the l
                     1 and l
                     2 norms that stabilizes the deconvolution problem and promote sparsity in the solution. We also compared the performances of the proposed method with several state-of-the-art algorithms on synthetic data and human brain dataset. In the experiments, we demonstrated that the sparse deconvolution approaches achieved the desired effect of enhancing the underlying fiber population, which facilitates detecting crossing fiber configurations with increasingly small separation angles. The synthetic experimental results indicate that SCD-HOT considerably outperforms CT-FOD, crossing fibers are more easily detected and the angular resolution limit is improved by SCD-HOT by approximately 20°–30°. The angular resolution limit is improved by SCD-HOT by approximately 5°–10°, and the detection accuracy is considerably improved compared with that of super-CSD and reweighted l
                     1. In particular, the angular deviation of the reweighted l
                     1 is significantly improved by SCD-HOT, which confirms the advantage of enforcing the sparsity constraint on the FOD domain. A similar conclusion can be drawn from the results for the real dataset study, where our method surpassed CT-FOD and super-CSD because of the sparsity feature of the solution.

In conclusion, the sparse HOT deconvolution approach can effectively represent the FOD in polynomial form. With sparsity on FOD domain, this method efficiently improves the ability of HOT in resolving crossing fibers. Nevertheless, there are still some open areas of research in the sparse HOT deconvolution proposed here. Firstly, the sparse model focuses on regularization technique aiming at exploiting sparsity more optimally than existing sparse approximation approaches, omitting the consideration of distribution of attenuated signals such as multi-shell data. Secondly, our method introduces many parameters to the sparse model and most of them are experimentally determined. Thirdly, this method is potential to considerably reduce the gradient directions, which indicates a clinically feasible acquisition time, and thus it is significant to apply this method in more clinical studies in the future study. Finally, the sparse technique independently reconstructs signals by introducing the sparse priori knowledge in each voxel and ignores the structure information of the connection in fiber bundles.

@&#ACKNOWLEDGEMENTS@&#

Work supported by grant 61379020 from the National Natural Science Foundation of China, LY13F030007 from the Zhejiang Provincial Natural Science Foundation of China and grants R01MH092862, R01MH074794 from the National Institutes of Health of USA.

@&#REFERENCES@&#

