@&#MAIN-TITLE@&#Home care service planning. The case of Landelijke Thuiszorg

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We studied a home care planning problem faced by Landelijke Thuiszorg, a non-profit organisation that provides home care services in several provinces of Belgium.


                        
                        
                           
                           A set partitioning formulation of the bi-objective problem is proposed.


                        
                        
                           
                           We propose a two-phase approach that allows to analyse the trade-off between the prioritised objectives.


                        
                        
                           
                           Our solution strategy is flexible in the sense that it can be easily adapted to tackle additional and complicating constraints.


                        
                        
                           
                           The solution strategy is simple and easy to understand which facilitates the communication and the acceptance of our algorithm within the organisation.


                        
                        
                           
                           Our two-phase algorithm will be the core optimisation component of a decision support system.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Home care

Staff planning

Routing

Bi-objective optimisation

Local search

@&#ABSTRACT@&#


               
               
                  Landelijke Thuiszorg is a “social profit” organisation that provides home care services in several Belgian regions. In this paper, the core optimisation component of a decision support system to support the planning of the organisations’ home care service is described. Underlying this decision support system is an optimisation problem that aims to maximise the service level and to minimise the distance travelled by the caregivers of the organisation. This problem is formulated as a bi-objective mathematical program, based on a set partitioning problem formulation. A flexible two-stage solution strategy is designed to efficiently tackle the problem. Computational tests, as well as extensive pilot runs performed by the organisation’s personnel, show that this approach achieves excellent performance, both in terms of the service level and total travelled distance. Moreover, computational times are small, allowing for the weekly planning to be largely automated. The organisation is currently in the process of implementing our solution approach in collaboration with an external software company.
               
            

@&#INTRODUCTION@&#

Belgian long-term care policy aims to help, support and nurse dependent (mostly elderly) persons in their own homes as long as possible. To this end, the federal public health insurance system finances a set of public and private organisations to provide home care assistance, including cleaning, grocery shopping, personal grooming, and other (non-medical) activities. In 2006, the subsidised home care sector in Belgium produced about 25 million care hours, provided by the equivalent of 17,000 full time employees (Willemé, 2010).

Landelijke Thuiszorg is a “social profit” organisation that provides home care services for the Belgian provinces of Antwerpen, Limburg, Vlaams-Brabant and part of Oost-Vlaanderen. In 2010, the organisation provided over one million hours of home care to its 5107 patients. In the scientific literature, it has been argued that the development and use of rigorous methodologies to support long-term care are becoming ever more important as the population ages (Zhang, Puterman, Nelson, and Atkins, 2012). Following this trend, Landelijke Thuiszorg has launched a strategic programme to increase its use of new technologies. For this reason, the Operations Research Group of the University of Antwerp (ANT/OR) was invited to participate in a joint project aimed at developing a decision support system to support regional service planning. This paper presents the core optimisation component of the developed system, which is currently undergoing extensive field tests within the organisation, and will soon be rolled out throughout the organisation in collaboration with an external software development company.

The remainder of this paper is structured as follows. In Section 2, the planning problem at Landelijke Thuiszorg is explained. Section 3 reviews the literature on home care and other related planning problems. The planning problem is formally defined in Section 4, and the solution strategy that we developed for this problem is presented in Section 5. Section 6 describes the development of a decision support system (DSS) based on our solution strategy. The testing stage of our algorithm and the DSS is described in Section 7. Finally, Section 8 contains some conclusions and pointers for future research.

For organisational purposes, the area covered by the Landelijke Thuiszorg is divided into forty-four independent regions. Each region has its own region manager, who is responsible for planning the activities of a set of caregivers. Both patients and caregivers are assigned to a region. Therefore, the solution strategy proposed in this paper can be applied independently to each region.

The process starts when a patient applies for home care services and a pre-admission assessment is carried out in order to determine the patient’s needs and the services to be provided. Based on this evaluation, the frequency (number of visits per week), the intensity or duration of the service (number of hours per visit), as well as the periodicity (weekly or fortnightly schedule) of the visits are determined, and the most suitable caregivers to serve the patient are identified. A patient can be visited between one and five times a week, and each visit can last between 1 and 4 hours (although blocks of 4 hours are by far the most common). The region manager determines the suitability of the patient–caregiver assignment by taking into account a very diverse, and often subjective, set of factors that includes the training and skills of the caregiver (e.g., the ability to work with blind or deaf people, cancer patients, immobilised people, etc.), the patient’s medical status and disabilities (e.g., blindness, deafness, mobility, ...), the proficiency of the caregiver in speaking different languages (not all patients and caregivers are fluent in Dutch, the language of Flanders), the patients’ and caregivers’ characters, pet allergies, as well as personal preferences of both the caregiver and the patient. In addition, the patient is allowed to express her/his preferences regarding the times at which she/he would like to be visited.

The organisation takes into account two different objectives when planning its home care service: to meet the preferences of both patients and caregivers to the largest possible extent, and to minimise the accumulated travelled distance by all caregivers. The second objective is due to the fact that a financial compensation is paid to each caregiver for the travelled distance required to visit the patients that have been assigned to her
                        1
                     
                     
                        1
                        A large majority of both caregivers and region managers at Landelijke Thuiszorg are women and, therefore, we refer to them using female pronouns (“she”, “her”)
                     . However, a higher importance is granted to the first objective and, hence, the assignment of patients to caregivers and the schedule with which each patient is visited are of crucial importance to the quality indicators used within the organisation. Nevertheless, the organisation’s management desires a plan that not only optimises the satisfaction of its clients and caregivers, but also minimises the total costs for travel expenses. Although other objectives might be considered when planning home care services (see Section 3, Table 1
                     ), this work focuses on the two objectives above because these align with the practical interests of the organisation.

Several constraints have to be considered when building a service plan at Landelijke Thuiszorg. First, the visits of a patient that requires more than one visit a week must be evenly distributed over the different days of the week, i.e., they should preferably not to take place on consecutive days. Second, when a patient is visited three or more times a week, these visits should be assigned to at least two different caregivers in order to mitigate the effect of possible absenteeism. Third, for each patient, the time and day of the visits within a week should be the same for all weeks in the planning horizon in order to facilitate the patient’s time planning and to not interfere with other activities that he/she is involved in. Additionally, there are some restrictions derived from the type of labour contract between the organisation and the caregivers, such as the maximum number of hours per week that each caregiver is allowed to work and the distribution of those hours over the different days of the week. The maximum number of working hours per week can vary from week to week depending on additional activities such as training, meetings, and administrative duties. Caregiver overtime and non-regular shifts are not taken into account when generating the service plan because there are usually enough regular working hours to cover all required visits. Non-regular shifts are generally only used when re-scheduling the service plan after unpredictable disruptions (e.g., caregiver absence). The rescheduling of the service plan, however, is done manually and is therefore beyond the scope of this research.

Determining a home care service plan involves three simultaneous decisions: (1) the scheduling of the visits to each patient in a time slot (i.e., a day and a time period, morning or afternoon, in the planning horizon), (2) the assignment of a caregiver to each of the visits, and, (3) the order in which the caregivers visit each of their assigned patients in a time slot considering that due to the fact that the length of each time slot is 4 hours, maximum four visits, of 1 hour each, can be scheduled in a time slot. We have labelled the bi-objective optimisation problem defined by the objectives, constraints and decisions that have been described above the home care planning problem (HCPP).

At the beginning of each planning period, a home care service plan is created by the region manager in which a service scheme is chosen for each patient, and a schedule is generated for each caregiver. A service scheme consists of a visit pattern and a caregiver assignment. The pattern indicates the time slots (day and hour) in which the patient must be served, and the caregiver assignment specifies the caregiver(s) that provide(s) that service. Based on the selected schemes for the patients, a schedule is generated for each caregiver that indicates the time slots in which she is due to work, as well as the specific patients that she has to serve.

Currently, each region manager autonomously creates the service schemes for the patients and defines schedules for the caregivers in her region. However, this process is very time-consuming (and therefore expensive), and requires considerable expertise from the region manager. The main goal of the collaboration between Landelijke Thuiszorg and the ANT/OR group is to automate this process by designing a DSS for the regional planning. The solution strategies for the HCPP constitute the core of the system.

@&#LITERATURE REVIEW@&#

Home care planning problems can be categorised as either tactical or operational depending on the time horizon of the decision making process. Chahed, Marcon, Sahin, Feillet, and Dallery (2009) distinguish two types of planning horizons: long/medium term (tactical problems) and short/very short term (operational problems). Gutiérrez and Vidal (2013) discuss home care logistics management problems and classify them as operational decisions involving both transportation and staff logistics functions. The HCPP at Landelijke Thuiszorg is situated at the operational level, and we therefore focus on this decision level in this section.

The literature review concentrates on reviewing the three main aspects characterising recent work on home care planning problems, namely (1) objectives or performance measurement, (2) decisions and constraints, and (3) solution methodology.


                     Table 1 presents a first classification of the objectives. Each category involves a broad class of possible objective functions or performance measures. Thus, for example, papers which optimise travel costs and/or scheduling cost would fall in the category of “Costs”. In Table 2
                     , we summarise the objectives treated in the reviewed papers. Column 1, presents the corresponding reference to the papers, while Columns 2–9, correspond to each of the objectives enumerated in Table 1. When a paper tackles one of the objectives, a symbol (
                        ✓
                     ) is shown in the corresponding cell. It can be seen that time, costs, and preferences are, by far, the most common objectives treated in the literature.


                     Table 3
                      presents the most common decisions and constraints taken into account when planning home care services, while Table 4
                      summarises which of these decisions and constraints are handled in the reviewed papers. Authors have mainly focused on ensuring high service level through constraints such as time windows, skill matching and patient/staff preferences. However, some service characteristics that are common in real life problems (e.g., time relations among services and periodicity) have not received a similar level of attention.


                     Table 5
                      presents the solution methodologies that were used by the authors in the reviewed papers. These methodologies are classified into three general categories: exact approaches (Column 2), heuristics and metaheuristics (Column 3), and hybrid approaches (Column 4), i.e., a combination of exact and heuristic methods. Most real-life implementations can be found in the category of (meta)heuristics.

The problem presented in this paper, and the way in which it is addressed, is different from similar problems in the literature in at least three important ways. First, the multi-objective nature of the HCPP is tackled differently. Although several authors have considered multi-objective problems, they generally use a weighted objective function to integrate all objectives into one score. In the HCPP, however, the decision maker has explicitly ranked the objectives according to their importance. For this reason, a two-stage approach is adopted in which the most important objective, the service level, is maximised first without taking into account the second objective, the total travelled distance. A second difference is that the planning horizon in the HCPP is expressed in weeks, unlike in most of the papers in the literature which focus on the daily planning. This longer planning horizon allows us to deal with scheduling requirements that span multiple days, such as the requirement that visits should be spread evenly over the days of the week. Third, skill requirements and hard time windows are not explicitly defined. Instead, preferences are used in order to model both the match between the patient’s needs and the caregiver’s characteristics and the time windows during which patients and caregivers prefer to be served and work, respectively.

The home care planning problem (HCPP) defined in this paper, has two objectives: (1) the service level which is the extent to which patient and caregiver preferences have been taken into account, and (2) the total distance travelled by all caregivers.

Based on the work of Eveborn, Flisberg, and Rönnqvist (2006),Eveborn et al. (2009), a set partitioning formulation is proposed for the service level objective. Our proposed model, however, is not based on the caregivers’ routes but on the patients’ service schemes. The formulation allows various constraints to be dealt with in a sub-problem in which the columns for the set partitioning problem are generated (Section 5.2.1).

Let 
                        P
                      be the set of patients and 
                        C
                      the set of caregivers. Depending on the patients’ specific needs and the caregivers’ skills, we define a patient–caregiver preference factor, kij
                     , that indicates how well the assignment of patient 
                        
                           i
                           ∈
                           P
                        
                      to caregiver 
                        
                           j
                           ∈
                           C
                        
                      matches the preferences of both patient and caregiver. For each caregiver j, we define 
                        
                           
                              P
                              j
                           
                           ⊆
                           P
                        
                      to be the subset of patients that caregiver j is allowed and/or willing to serve (Table A.1).

Let 
                        T
                      be the set of time slots. The subset 
                        
                           
                              T
                              w
                           
                           ⊂
                           T
                        
                      contains the time slots associated with week w. A time slot preference rit
                      is defined for each combination of time slot 
                        
                           t
                           ∈
                           T
                        
                      and patient 
                        
                           i
                           ∈
                           P
                        
                     . Parameter rit
                      indicates the preference that patient i has for being served during time slot t. Likewise, parameter sjt
                      reflects the preference of caregiver 
                        
                           j
                           ∈
                           C
                        
                      for working during time slot t.

For each patient i, three parameters are defined: the periodicity qi
                      which indicates whether the patient is visited weekly (qi
                      = 1) or fortnightly (qi
                      = 2) and is used when generating the set of schemes for patient i, the number vi
                      of visits per week, and the number hi
                      of hours per visit. Each caregiver j has a maximum number cjw
                      of working hours during week w.

Note that the second objective considers the travel distance instead of the travel time and that there is not a parameter associated to the travel distance between each pair of patients. This is due to the fact that the travel distance is used to estimate the operational cost while the travel time is considered to be related to the distance and to be part of the service time.

The set of feasible schemes for each patient 
                        
                           i
                           ∈
                           P
                        
                      is denoted by 
                        
                           S
                           i
                        
                     . Note that the number of schemes in 
                        
                           S
                           i
                        
                      can grow exponentially due to the amount of feasible combinations of time slots and caregivers. Each of these schemes represents a column in the set partitioning formulation and deals with most of the additional constraints. In order to be feasible, a scheme has to have the following properties:

                        
                           1.
                           The visits are evenly distributed over the week, so that clients who need more than one visit are not visited on consecutive days (unless vi
                               ≥ 4 in which case visits in consecutive days are allowed).

The patient is visited during the same time slots every week (except if the patient is only visited fortnightly).

For patients requiring one or two visits per week, the same caregiver is assigned to all visits in the entire planning horizon.

For patients requiring more than two visits per week, at least two caregivers are assigned to his/her visits.

Binary parameter 
                        
                           a
                           
                              i
                              k
                           
                           
                              j
                              t
                           
                        
                      indicates whether caregiver j is assigned to time slot t in scheme k of patient i. Each feasible scheme has a benefit that depends on the patient–caregiver preference factor kij
                      and the time slot preferences rit
                      and sjt
                     . The total benefit of scheme k of patient i is computed as follows:

                        
                           (1)
                           
                              
                                 
                                    b
                                    
                                       i
                                       k
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       C
                                    
                                 
                                 
                                    ∑
                                    
                                       t
                                       ∈
                                       T
                                    
                                 
                                 
                                    a
                                    
                                       i
                                       k
                                    
                                    
                                       j
                                       t
                                    
                                 
                                 
                                    k
                                    
                                       i
                                       j
                                    
                                 
                                 
                                    h
                                    i
                                 
                                 +
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       C
                                    
                                 
                                 
                                    ∑
                                    
                                       t
                                       ∈
                                       T
                                    
                                 
                                 
                                    a
                                    
                                       i
                                       k
                                    
                                    
                                       j
                                       t
                                    
                                 
                                 
                                    (
                                    
                                       r
                                       
                                          i
                                          t
                                       
                                    
                                    +
                                    
                                       s
                                       
                                          j
                                          t
                                       
                                    
                                    )
                                 
                                 
                                    h
                                    i
                                 
                                 .
                              
                           
                        
                     
                  

The first term in this equation indicates how well the scheme satisfies the patient–caregiver preferences and is referred to as the suitability of the scheme. The second term indicates how well the scheme satisfies the time slot preferences and is referred to as its time preference.

By using the binary decision variable xik
                     , which takes the value 1 if patient i is served using scheme 
                        
                           k
                           ∈
                           
                              S
                              i
                           
                           ,
                        
                      and value 0 otherwise, the HCPP considering only the service level objective can be formulated as follows:

                        
                           (2)
                           
                              
                                 
                                    
                                       
                                          max
                                          
                                       
                                    
                                    
                                       
                                          
                                             f
                                             1
                                          
                                          =
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                P
                                             
                                          
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                
                                                   S
                                                   i
                                                
                                             
                                          
                                          
                                             b
                                             
                                                i
                                                k
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                k
                                             
                                          
                                          
                                          
                                             (
                                             Service
                                             
                                             level
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    
                                       s.t.
                                    
                                    
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                
                                                   S
                                                   i
                                                
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                k
                                             
                                          
                                          =
                                          1
                                       
                                    
                                    
                                       
                                          ∀
                                          i
                                          ∈
                                          P
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                
                                                   P
                                                   j
                                                
                                             
                                          
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                
                                                   S
                                                   i
                                                
                                             
                                          
                                          
                                             a
                                             
                                                i
                                                k
                                             
                                             
                                                j
                                                t
                                             
                                          
                                          
                                             h
                                             i
                                          
                                          
                                             x
                                             
                                                i
                                                k
                                             
                                          
                                          ≤
                                          4
                                       
                                    
                                    
                                       
                                          ∀
                                          j
                                          ∈
                                          C
                                          ,
                                          ∀
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                
                                                   P
                                                   j
                                                
                                             
                                          
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                
                                                   S
                                                   i
                                                
                                             
                                          
                                          
                                             ∑
                                             
                                                t
                                                ∈
                                                
                                                   T
                                                   w
                                                
                                             
                                          
                                          
                                             a
                                             
                                                i
                                                k
                                             
                                             
                                                j
                                                t
                                             
                                          
                                          
                                             h
                                             i
                                          
                                          
                                             x
                                             
                                                i
                                                k
                                             
                                          
                                          ≤
                                          
                                             c
                                             
                                                j
                                                w
                                             
                                          
                                       
                                    
                                    
                                       
                                          ∀
                                          j
                                          ∈
                                          C
                                          ,
                                          ∀
                                          w
                                          =
                                          1
                                          …
                                          W
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                k
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                       
                                    
                                    
                                       
                                          ∀
                                          i
                                          ∈
                                          P
                                          ,
                                          ∀
                                          k
                                          ∈
                                          
                                             S
                                             i
                                          
                                       
                                    
                                 
                              
                           
                        
                     The objective function (2) maximises the total service level. This function can be easily computed since it is the sum of the benefits of all patient schemes selected. Hence, the total service level can be decomposed into two main components: the total suitability that indicates how well the solution satisfies the patient–caregiver preferences, and the total time preference that indicates how well the solution satisfies the time slot preferences. Constraints (3) ensure that each patient is served and that only one scheme is chosen for each patient. Constraints (4) guarantee that, for each caregiver, the work load assigned in each time slot does not exceed the number of available working hours of the slot (i.e., the sum of the service duration for all patients assigned to the time slot is not greater than 4 hours). Constraints (5) ensure that, for each caregiver, the number of working hours per week is not exceeded, where W represents the length of the planning horizon expressed in weeks. Finally, constraints (6) are the binary constraints for variables xik
                     .

A solution of the model in (2)–(6), i.e., a set of selected schemes, determines the assignment of patient visits to caregivers. The next step is to calculate the minimum total distance travelled by all caregivers. This value is equal to the sum of the distances that each caregiver has to travel from one patient to the next according to the sequence of visits scheduled. The second objective minimises this value:

                        
                           (7)
                           
                              
                                 min
                                 
                                 
                                    f
                                    2
                                 
                                 =
                                 total
                                 
                                 distance
                                 
                                 travelled
                                 
                                 by
                                 
                                 all
                                 
                                 caregivers
                                 .
                              
                           
                        
                     
                  

If more than one patient has to be served by a caregiver in a specific time slot, the algorithm needs to determine the optimal order in which those patients have to be visited.

The two objectives of the HCPP render it a bi-objective optimisation problem. The traditional way of solving such a problem would employ a multi-objective algorithm that generates a set of non-dominated solutions, and leave it to the region manager to select the solution that best suits her needs. For Landelijke Thuiszorg, however, this was not seen as a viable solution strategy, for several reasons. First, the organisation considers the service level to be more important than the total distance travelled. Despite this, the organisation does not consider this lexicographic ordering of objectives to be absolute: a “reasonable” drop in service level should be allowed if this means a considerable decrease of the total distance travelled. Second, Landelijke Thuiszorg wanted the relative importance of the two objectives to be the same throughout the organisation. It feared that allowing individual region managers to select a solution from the Pareto set (which would potentially contain very diverse solutions in the objective function space), would result in very different criteria being used. Third, management at Landelijke Thuiszorg preferred a system that essentially produced a single solution, without the need for an extra decision step by the region manager. This paper focuses on describing the design and implementation of a solution strategy for the HCPP that takes into account all desirable features while ensuring that all constraints are satisfied. This solution strategy is outlined in Section 5.

Our solution strategy designed to tackle the HCPP has two attractive features. First, it is flexible enough to allow additional constraints to be taken into account easily. Second, it is easy to use and understand, in order to facilitate adoption by the organisation. The approach also complies with the objective hierarchy established by the organisation, namely, minimising the total travelled distance only when the service level has been optimised. Therefore, a two-stage solution strategy is proposed: (1) a first stage in which the service level is optimised, (2) a second stage in which the total travelled distance is improved, while allowing a certain fixed decrease of the service level. Because a caregiver does not perform more than a few visits per day, the optimisation of the total travelled distance can be done efficiently using a local search strategy.

The first stage sets a target or goal for the service level. That target is relaxed in the second stage, in which the algorithm minimises the total distance while keeping the service level within a user-defined percentage of the target. The algorithm optimises the service level and the total travelled distance separately in Stages I and II, respectively. Both stages of the algorithm involve multi-start procedures. Stage I is executed κ times, and the solution that provides the best performance in terms of service level is recorded. In Stage II, a local search algorithm is executed λ times, always starting from the best solution obtained in the first stage. The numbers κ and λ are user-specified parameters. In the following sections, the different stages of our solution strategy are described in detail.

The algorithm starts by enumerating the set of all possible visit patterns 
                           
                              D
                              i
                           
                         for each patient i. A visit pattern describes the time slots in which a given patient is visited. The set of all valid visit patterns is generated taking into account the patient’s time slot preferences, as well as the requirements defined in Section 4. Set 
                           
                              D
                              i
                           
                         can be generated in small time as the number of combinations is very restricted (e.g., for a patient requiring two visits per week the number of possible patterns is 24).

The purpose of the first stage of our solution strategy is to find a solution with an excellent service level value. To this end, a procedure to generate feasible service schemes as well as an exact algorithm to select a single service scheme for each patient are implemented. These two procedures are repeated κ times and the best solution is recorded. Sections 5.2.1 and 5.2.2 describe in detail the steps performed by these procedures at each iteration of Stage I.

Due to the fact that there can be a huge number of possible schemes in 
                              
                                 S
                                 i
                              
                            for a given patient i, a subset 
                              
                                 
                                    S
                                    ^
                                 
                                 i
                              
                            containing at most α different feasible schemes is generated.

For a given patient i, each of the schemes contained in 
                              
                                 
                                    S
                                    ^
                                 
                                 i
                              
                            is generated based on a visit pattern from the set of valid patterns 
                              
                                 
                                    D
                                    i
                                 
                                 ,
                              
                            by assigning a caregiver to each visit in the pattern. The assignment of a caregiver to a visit of a patient i in a pattern is done by randomly picking one of the β most suitable caregivers, i.e., the caregivers with the highest patient–caregiver preference factor kij
                           . This assignment takes into account pre-established policies by the organisation: (1) for patients requiring one or two visits per week, only one caregiver is assigned to all the visits, (2) for patients requiring more than two visits per week, at least two caregivers are needed to complete the required number of visits.

With probability γ, the resulting assignment of caregivers to time slots in the pattern is repeated for all weeks in the planning horizon, while, with probability 1 − γ, a different assignment is generated for each week.

The procedure iterates over the list of patterns in 
                              
                                 D
                                 i
                              
                            such that, at each iteration, a pattern is selected and a caregiver is assigned to each of the visits. The complete list of patterns in 
                              
                                 D
                                 i
                              
                            is traversed as many times as needed such that α attempts to generate feasible schemes are performed. Therefore, at most α different feasible schemes are generated for each patient.

Once a set of feasible schemes 
                              
                                 
                                    S
                                    ^
                                 
                                 i
                              
                            has been generated for each patient, an assignment of schemes to patients is obtained using the set partitioning model in (2)–(6) and restricting the set of feasible service schemes 
                              
                                 S
                                 i
                              
                            in the model to the subset 
                              
                                 
                                    S
                                    ^
                                 
                                 i
                              
                           . The model is solved using Java and ILOG CPLEX using Concert Technology (IBM ILOG CPLEX Optimisation Studio Academic Research Edition V12.2). For each patient, the model identifies a scheme such that the service level is optimal with respect to the given sets of service schemes 
                              
                                 
                                    S
                                    ^
                                 
                                 i
                              
                            that were generated.

After a service plan that optimises the service level has been generated, the algorithm turns to optimising this solution with respect to the total travelled distance while ensuring that the decrease in service level does not exceed a maximum acceptable percentage δ. To this end, a randomised local search algorithm (RLS) is used that always starts from the best solution found in Stage I and tries to find a solution with a shorter travelled distance.

At each iteration of Stage II, given a current solution x, the algorithm generates a schedule for each caregiver and each day. This schedule is unambiguously defined by the scheme selected for each patient. Neighbourhood 
                           
                              N
                              (
                              x
                              )
                           
                         of a solution x is defined as all solutions that can be obtained from x by swapping the patients associated with two different visits that occur during the same week, while ensuring that all constraints remain satisfied. By swapping two visits, a new service scheme is generated for the patients associated with them. We restrict the possible swaps to those in which, for each of the two patients involved, the new service scheme belongs to the subset of schemes 
                           
                              
                                 S
                                 ^
                              
                              i
                           
                         generated in Stage I. Moreover, a swap is acceptable if the service level decrease, due to the swap, does not exceed the maximum percentage δ.

Once the list of all feasible swaps has been generated, it is sorted in decreasing order of the ratio of the reduction in distance to the reduction in service level. The swap to be executed is chosen randomly among the best η candidates in terms of this ratio. This procedure is iterated until a local optimum is reached, i.e., until no profitable swap can be found any more.

To develop the DSS for service planning at Landelijke Thuiszorg, we have followed a methodology consisting of three stages: Design, Validation and Implementation. In this section, each of these stages is described, emphasising the role of the optimisation component.

This stage started with the exploratory meetings in which a general description of the objectives, scope, and functionalities of the DSS were defined. Based on the resulting common understanding of the project, the need for an optimisation solver for the scheduling and routing of the caregivers was identified as one of the key missing system components. To develop the optimisation component, we iterated over three different steps: (1) general design of the system, which describes the main components to be developed, their interactions, and the role the optimisation component plays in the operation of the complete system, (2) problem description, which clearly defines the optimisation problem to be tackled, the decisions, objectives, and constraints to be taken into account, as well as the information requirements, and (3) design of the solution strategy, in which we propose an approach to solve the optimisation problem that suits the needs and expectations of the organisation.

In this stage, the solution strategy proposed for the optimisation problem, which constitutes the core component of the DSS, was validated. The algorithm was implemented in Java, and ILOG CPLEX Concert Technology was used as the optimiser for the IP formulation. The functions of other components of the system such as data and information gathering, geocoding and visualisation were handled independently. Section 7 presents the results of this validation stage.

The validation stage consisted of three different steps which differed in the data used and the responsible of the evaluation process. First, the algorithm was tested independently by the ANT/OR group using instances generated from the historic data provided by the organisation. Second, a set of instances for a specific region (Leuven) were developed in collaboration with the district manager. These instances were used to compare the results of our approach with the actual implemented plan. Finally, the algorithm was tested jointly by the ANT/OR group and the personnel responsible for planning the service at Landelijke Thuiszorg. This third step ran during 2 months (May–June 2012) in which the weekly service plan for a small region was generated using the current manual system and the proposed algorithm. By comparing the solutions, some exceptions and additional aspects to be included in the algorithm were identified (e.g., allow a patient to be visited during two consecutive time slots when, for example, she/he had to take medical examinations). This step served as a first measure of the acceptability of the solution approach within the organisation and, at the same time, it allowed us to validate how the proposed approach could cope with unpredictable requirements, such as patients that need assistance for more than four hours due to medical tests or hospital stays.

@&#IMPLEMENTATION@&#

Once the effectiveness and usability of the optimisation component had been validated, the project entered the implementation stage. This stage aims at generating a final DDS for Landelijke Thuiszorg. Although the implementation process is the responsibility of the ICT department of the organisation, we assisted them during the early stages of this process, in which a basic prototype was developed. The implementation process iterated over three different stages. First, the requirements in terms of user interface, database connectivity and reporting were identified. Second, a prototype DSS was developed. Third, the prototype was evaluated both by the designers and the final users by using it to generate the service plan for several regions. The first prototype only implemented a limited number of functionalities of the final DSS and used the optimisation component developed in the validation stage as a black-box optimiser. A final DSS with an increased complexity and including additional functionalities will be developed by an external software company based on the first prototypes and tests performed in the course of this project.

As pointed out in Section 6, the algorithm developed in this paper has undergone a validation stage consisting of several testing steps. This section presents an overview of the results of the tests. The computational experiments were performed on an Intel Core i7 870 2.93 GHz processor with 4 GiB RAM running the operating system Debian GNU/Linux 6.0.

The instances used in the computational experiments were generated based on data provided by Landelijke Thuiszorg. More specifically, the service plan implemented in October 2011 in six regions was used as the starting point for the creation of realistic instances. Table 6
                         summarises the main characteristics of each of these regions.

The service plan provided by the organisation contains information regarding the caregivers’ working hours and patient requirements (i.e., frequency, intensity and periodicity). However, the patient–caregiver and time slot preferences can be only partially determined from the service plan because the service plan only specifies the time slots in which each patient was actually served, and not the time slots in which each patient could have been served. Also, the service plan only specifies the caregiver that actually provided service to a certain patient during a certain time slot and not the caregivers that could have provided this service. In other words, information on the preferred time slots and the preferred caregivers for each patient cannot be obtained from an implemented service plan. Therefore, in order to generate an instance for the HCPP, we generated the missing information randomly. More specifically, the time slot preference factor rit
                         was randomly generated to take values − 1, 0 or 1 with probability 0.2, 0.55 and 0.25, respectively. Likewise, patient–caregiver preference kij
                         was randomly generated by assigning it a value of 0 with probability 0.7 or an integer random value between 1 and 5 with probability 0.3.

The service plan of October 2011 also specifies the geographical coordinates of both caregivers and patients. We designed a Google Maps script that uses these coordinates in order to compute an approximation of the real driving distance between each pair of locations. A total of 30 random instances were generated, five for each of the six regions in Table 6.

First, we determined the settings for the different parameters of the algorithm that optimises the service level: the maximum number of schemes generated for each patient (α), the number of most suitable caregivers considered when generating those schemes (β), and the probability that the same assignment of caregivers to time slots is repeated for all weeks in the planning horizon (γ). We used a subset of five instances of the HCPP to run a full factorial experiment with three levels per parameter (one instance for each region but Herentals because of its atypical small number of patients and caregivers). For each parameter, three levels were considered in the experiment. Thus, the values used for α were 500, 1000 and 2000; the values used for β were 3, 5 and 7; and the values used for γ were 0.5, 0.75 and 1.

The experiment shows that the three parameters have a significant impact both on the service level and on the computational time. When small values for β and values of γ close to 1 are used, the algorithm performs well in terms of the service level as well as the computational time. Using large values of α leads to solutions with a high service level at the expense of larger computational times.

For the experiments to test the performance of this stage of our solution approach, using the full set of 30 instances, α was set to 2000, β was set to 3 and γ was set to 1 (meaning that the assignment of caregivers to the patients’ visits is the same for all the weeks). To evaluate the performance of the first stage of the proposed algorithm, we compare its solutions with an ideal solution that provides the maximum possible service level. In that ideal solution, which might be not feasible, each patient is served by the most suitable caregiver and each visit is performed during a preferred time slot.

In Table 7
                           , we compare the solutions provided by our algorithm with the corresponding ideal solution. The table’s columns show the number of iterations of the algorithm (κ), the total suitability (i.e., how well the scheme satisfies the patient–caregiver preferences) and total time preference (i.e., how well the schemes satisfies the time slot preferences), and the computational time. The service level measures are computed as the percentage of their ideal value reached by the solution of Stage I of the algorithm. The rows present, for each region and three different values of the number of iterations κ, the average result for five different instances.

For every region but Herentals, the average total service level is higher than 94 percent of its ideal value. The high average total suitability values show that our algorithm usually satisfies the patient–caregiver preferences by assigning one of the most suitable caregivers to each patient. The average total time preference values indicate that about 69 percent of the service is performed in the preferred time slots. Note, however, that the average values of the total suitability are significantly higher than the average values of total time preference. This is mainly due to the difference in the scales used to measure the two components of the service level which grants a higher importance to the total suitability than to the total time preference. Regarding the computational time, our results show that, for all instances, the average time to generate a solution that optimises the service level is less than 17 seconds. That time increases if several iterations of the algorithm are performed and the best found solution is kept.

As with the service level optimisation, a subset of five instances was used to run a designed experiment in order to tune the parameters of our RLS algorithm to minimise the total travel time. The RLS algorithm has one parameter, the length η of the candidate list for the swaps. Another parameter that has to be specified is the maximum percentage of service level decrease δ. This parameter is unrelated to the technical working of the algorithm, but determines the trade-off between service level and travel time. In our designed experiment, three levels were considered for each parameter. For parameter η we used values 1, 3 and 7. For parameter δ, we used levels 1 percent, 5 percent and 10 percent. Additionally, some of the parameters of Stage 1 of the algorithm might also affect the performance of the RLS algorithm in the second stage. Therefore, we included two additional parameters in the experiment: the maximum number of schemes α generated for each patient and the number of most suitable caregivers β considered when generating those schemes. For these factors, we used the levels previously used in Section 7.1.1.

We first investigated whether the different parameters have a significant impact on the performance of the algorithm to minimise the total travelled distance. To this end we measured the percentage by which the total travelled distance is reduced by the RLS for each test instance. The results of the experiment indicate that parameter η does not have a statistically significant impact on the total travelled distance. So, our RLS algorithm seems to be robust to different values of η. Therefore, this parameter achieves its goal of introducing randomness in the algorithm without drastically affecting its performance. On the other hand, parameter δ does have a statistically significant impact on the total travelled distance. As could be expected, the percentage travel distance reduction increases with δ and with the number of iterations, λ of the RLS. Additionally, parameters α and β also have a significant effect on the percentage travel time reduction. This effect is due to the fact that the RLS only considers the patient schemes generated in the first stage of our approach. Therefore, a more diverse set of patient schemes increases the likelihood of finding a feasible alternative selection that decreases the travelled distance. Regarding the computational time of our RLS, the designed experiment shows that all parameters but η have a significant effect.

Based on the results of the designed experiment, we selected parameter settings that guarantee a good performance of the two different stages of our solution approach for the HCPP, both in terms of solution quality and computational time. Consequently, we set α = 2, 000, β = 5, γ = 1, κ = 3, and η = 3 to test our RLS algorithm for the complete set of 30 test instances. Table 8
                            shows, for each region, the average percentage reduction in total travelled distance for different combinations of the number of iterations λ of the RLS and the maximum allowable decrease in the service level δ. Note that, although the maximum allowable decrease in service level quality, δ, was included in the experimental study, its value should be set by the decision maker depending on the desired trade-off between the two objectives.

For one specific region (Leuven), we collaborated with the district manager in order to obtain a realistic estimation of the patient–caregiver preferences and of the time slot preferences. To this end, the district manager was asked to provide a score for each patient–caregiver preference, and the time slot preferences were set according to the October 2011 service plan. As a result, we generated one instance that matches the real planning problem to the largest possible extent. The results for this instance are analysed separately because we are able to compare them to the actual solution.

In October 2011, Landelijke Thuiszorg served 109 patients in the region of Leuven, which required a total of 1668 working hours distributed across 562 visits performed by a staff of 21 caregivers. Fig. 1
                         shows the geographical distribution of patients (indicated by a blue symbol) and caregivers (indicated by a red symbol).

The algorithm was run with different combinations of the number of times the RLS is executed (λ) and the maximum allowable decrease in the service level δ. For each of these combinations, we performed three iterations (κ = 3) of Stage I of the algorithm. A summary of the results is shown in Table 9
                        . The row labelled Initial corresponds to the solution generated in Stage I of the algorithm, while the rows labelled Dist. improved present each of the solutions obtained when applying the RLS in Stage II of the algorithm.

The results demonstrate the excellent performance of our algorithm. First, it generates an initial solution that reaches 95.5 percent of the ideal service level. In this solution, almost all patients are served by a caregiver they prefer and about 70 percent of the visits occur in time slots preferred by the patients. This is remarkable considering the fact that, for each patient, the preferred time slots are defined by the times at which patients were actually served. Second, the RLS algorithm reduces the total travelled distance while keeping the service level decrease acceptable. In particular, the total travelled distance is reduced by about 3.5 percent when a service level decrease up to 1 percent is permitted. The improvement goes up to 6.8 percent when a 5 percent service level decrease is allowed. This is also the maximum reduction in travel time that the RLS is able to reach, when there is no limit on the decrease in service level. This is partially due to the fact that, implicitly, the patient–caregiver preferences contain information regarding the geographical proximity of patients and caregivers. Therefore, when optimising the service level, the total travelled distance objective is to some extent taken into account as well. In other words, the solution generated in the first stage of our approach not only maximises the service level, but it also produces an acceptable solution in terms of the total travelled distance objective. However, an explicit minimisation of the travelled distance is still necessary and cannot be replaced by a manipulation of caregiver–patient preferences.

Several constraints that are imposed by our solution approach are not satisfied in the service plan that was executed by Landelijke Thuiszorg in October 2011. For instance, some patients were served in different time slots and/or by different caregivers every week. For this reason, the total travelled distance of both solutions are not strictly comparable. However, it should be pointed out that, although the total travelled distance of the solution generated in the Stage I of our approach is slightly larger than the actual travelled distance, the Stage II usually generates solutions with a travelled distance that is comparable to that of the actual plan, despite the additional constraints we impose.

The results in Sections 7.1 and 7.2 already show the excellent performance of our algorithm in optimising the service level and the total travelled distance. The third testing stage focuses on the acceptability of the solution generated by our approach and its flexibility to respond to additional unpredictable requirements. In this stage, we worked together with a district manager to compare the solution that she generates manually to the solution provided by our algorithm. To this end, during a period of 2 months (May–June 2012), the weekly service plan of a small region, involving 3 caregivers and around 18 patients, was generated both manually and using our algorithm.

The first conclusion of this testing stage is that, although, our approach considers the most important constraints when generating the service plan, there are some exceptions or client-specific constraints that occur occasionally and may be in conflict with the standard rules, e.g., clients that need to be assisted during several consecutive time slots or on two consecutive days due to medical reasons. The user interface of the DSS should allow the decision maker to handle these exceptions by indicating the algorithm how to process them. Moreover, due to the fact that our approach relies on the set of feasible service schemes generated for each patient, the user interface should allow the decision maker to specify feasible schemes for those particular cases in which the hard coded constraints and procedures fail.

In this testing stage, some of those exceptions and client-specific constraints were temporarily included in the algorithm on a case-by-case basis, specifically in the procedure outlined in Section 5.2.1. By doing so, we demonstrated that our approach is flexible enough to act as the optimisation engine of a DSS to plan the home care service at Landelijke Thuiszorg. Additionally, it allowed us to obtain solutions that can be implemented and therefore can be compared to the solutions obtained manually. The results showed that the solutions generated by our approach can usually be implemented without a single modification, or otherwise, serve as an excellent starting point for creating a good service plan. Therefore, a DSS based on our algorithm will certainly improve the capabilities of the organisation to efficiently plan the delivery of home care services in the different regions.

@&#CONCLUSIONS@&#

In this paper, we studied a home care planning problem faced by Landelijke Thuiszorg, a non-profit organisation that provides home care services in several provinces of Belgium. The problem involves two different objectives, namely service level maximisation and total travelled distance minimisation. The optimisation of these objectives is performed in a hierarchical order in which the service level optimisation is prioritised. Therefore, the approach used in this paper differs from other approaches in the literature in which an aggregated function of the objectives is considered. A mathematical formulation based on the set partitioning problem has been proposed and a two-stage solution strategy has been designed to tackle the HCPP. The first stage of the solution strategy aims to optimise the service level, while the second stage minimises the total travelled distance ensuring that the first objective function value does not decrease by more than a maximum tolerable value. The new formulation and the solution strategy are the main contributions of this paper.

The results of our computational experiments show that our approach has an excellent performance when it comes to optimising both the service level and the total travelled distance. Moreover, our solution strategy is shown to be flexible in the sense that it can be easily adapted to tackle additional and complicating constraints, as they can be taken into account when generating feasible schemes for each patient. In addition, the solution strategy is simple and easy to understand as it consists of two clearly defined stages, each of them involving a basic optimisation procedure. This facilitated the communication and the acceptance of our algorithm within the organisation. Moreover, our two-stage solution strategy allows the decision maker to establish a trade-off between the two objectives by modifying the maximum allowable decrease in service level when optimising the total travelled distance. Our two-stage algorithm will be the core optimisation component of a decision support system that is currently being developed in collaboration with an external software developer.


                     
                  

@&#REFERENCES@&#

