@&#MAIN-TITLE@&#Efficient communication architecture for the C2C agent

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Proposes robust communication architecture of the C2C intelligent agent


                        
                        
                           
                           The C2CIA architecture can assure communication between agents.


                        
                        
                           
                           C2CIA employs both pull- and push-based methods to assist buyers and sellers.


                        
                        
                           
                           C2CIA can help balance network loads and transmission efficiency.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Intelligent agent

E-commerce

Consumer-to-consumer

Peer-to-peer communication

@&#ABSTRACT@&#


               
               
                  In C2C communication, all necessary information must be collected promptly when a buyer and a seller communicate. That is, an intelligent C2C agent is needed to provide information to buyers and sellers. Along with the evolution of computing technology, C2C agents can exploit the efficient delivery capabilities of peer-to-peer (P2P) technology. However, P2P also increases traffic between agents, but communication faults are a fatal problem for C2C business. This study proposes a robust communication architecture based on current P2P content-delivery standards and its efficiency and robustness have been verified from an experiment.
               
            

@&#INTRODUCTION@&#

E-commerce involves the trade of products or services over networking systems. Electronic trade has grown exponentially as communication technology has spread [7]. Especially in the consumer-to-consumer (C2C) market, buyers and sellers communicate increasingly frequently as networking technology improves [7]. The C2C market refers to business transactions between consumers conducted through a networking platform [19]. For example, online auctions are a typical C2C business, and allow users to employ C2C platforms to act as either sellers or buyers. However, such platforms are not free. Generally, the networking services provided for C2C users are based on charging a flat fee or commission to sellers or buyers.

C2C platforms allow users to extend their reach in terms of communicating with buyers or sellers. Such are convenient but users are concerned with the associated charges [32]. C2C platform providers charge users fees that increase with increasing communication frequency. That is, for users, it is important to discuss how to use C2C platform that involves cost-benefits. Additionally, the evolution of computing technology is increasing the frequency of communications via C2C [26]. Buyers can analyze goods of interest from the perspectives of price, discount and appendages numerous times before completing a transaction. That is, buyers like to analyze all collected information, including text, picture, movie, and animation files, before making a decision. Notably, sellers also want to analyze information regarding goods offered for sale to improve sales. However, frequent communications are time consuming and costly. Therefore, time and money can be saved if users collect all required information before communication. An automatic mechanism thus is required to help users understand required information.

The intelligent agent can be adopted to release user efforts to analyze information. Intelligent agents enable users to obtain useful information in a timely manner [3,6,16]. However, while intelligent agents can analyze information, considering efficient methods of data collection is important. Restated, speed and convenience are important for agent communication [5,6]. Currently, the high efficiency of the peer-to-peer (P2P) application makes it a good means of collecting information [8]. P2P allows all data related to goods to be duplicated among peers automatically. That is, when a peer requires data on a good, that information can be retrieved from nearby peers rather than searching the whole network. However, such a P2P environment causes heavy network traffic, because of continuous data duplication. It may stop applications and consume resources heavily issued by C2C platform providers owing to network congestion [6,17]. Therefore the agent application based on P2P standards is insufficient, and the P2P protocol must be modified to balance efficiency and robustness.

This study proposes a robust communication architecture of the C2C intelligent agent named C2CIA. The C2CIA architecture can assure efficient and robust communication between agents. C2CIA allows C2C users to extend their reach in terms of communicating with buyers or sellers. The remainder of this paper is organized as follows. Section 2 reviews the literature on the architecture of the intelligent agent. Section 3 then describes the conceptual architecture of C2CIA. Next, Section 4 illustrates the correctness of C2CIA communication. Subsequently, Section 4 presents the performance evaluation of C2CIA communication. Finally, Section 5 presents the conclusions.

@&#RELATED WORKS@&#

The Internet has fundamentally changed the environment of business, because it offers sellers and buyers a powerful communication channel and makes it possible for the two parties to come together in the e-marketplaces. In this era of e-commerce, an increasing number of consumers not only purchase but also resell merchandise via C2C Web sites [4]. C2C e-commerce is becoming more widespread as more people come to recognize its convenience and its ability to offer a quick response to requests and as more products or services become available. C2C e-commerce is a business practice associated with e-buying and e-selling information, products, and services on the Internet. The C2C market means the business transaction between consumers through networking platforms [19]. For example, the online auction is a typical C2C business. Each user can play the role of seller or buyer through C2C platform.

The recent research related to C2C is various. For example, Lu et al. (2010) propose and empirically test a model of trust in virtual communities (VCs) based on the trust formation mechanism [23]. The results have shown that familiarity, perceived similarity, structural assurance, and trust propensity are important antecedents to trust in members in VCs. Li et al. (2008) focus on the general market structure of Taobao in terms of three factors: market distribution, market growth, and market concentration [21]. Based on these factors, the differences between Taobao and eBay have been revealed. One research establishes a dynamic game-theoretic model that interprets the mechanism of reputation feedback systems in online C2C auction markets. Based on the model, a numerical study is conducted to reveal the effects of feedback systems on auction markets [31]. C2C e-commerce has proven to be a distinct area of research, requiring new models of operation [15].

C2C platform is convenient but how to use C2C platform with cost-benefit is important to discuss. Each buyer must communicate sellers with prices, discounts, and appendages. Currently, C2C e-commerce offers functions focusing on catalogue browsing, term screening and searching. Consumers have to spend much time searching and scanning to find products which achieve their demands. It can be seen that although users can get a lot of information, it will take much time to filter useful information [12,16]. If users can collect all needed information before communication, the time should be reduced. That is, an automatic mechanism to help users understand needed information is necessary. Therefore, the intelligent agent could be adopted to release user's efforts on communications. Through intelligent agents, user can obtain information on time efficiently [3,5,6].

Sycara et al. (2003) precisely defined intelligent software agents as programs acting on behalf of their human users to perform laborious information-gathering tasks [29]. The opportunities for using agents in e-commerce applications are enormous. Agent characteristics, like autonomy, abilities to perceive, reason and act in specialized domains, as well as their capability to cooperate with other agents, make them ideal for ecommerce applications [6,25]. Gregg and Walczak (2006) present a multi-agent Auction Advisor system designed to collect data related to online auctions and use the data to help improve the decision making of auction participants [9]. Biswas (2008) extends and formalizes an agent-oriented modeling approach to the conceptualization process [2]. It defines agent models and proposes a high-level methodology for agent oriented analysis. Ito et al. (2002) propose a new cooperation mechanism among seller agents based on exchanging their goods in agent-mediated electronic market system, G-Commerce 
                        [14]. In G-Commerce, seller agents and buyer agents negotiate with each other. In the model, seller agents cooperatively negotiate in order to sell goods in stock. Buyer agents cooperatively form coalitions in order to buy goods based on discount prices. Seller agents' negotiations are completed by using an exchanging mechanism for selling goods. One research is to design a lab prototype of a sales agent with persuasion and negotiation capabilities and to evaluate its effectiveness as a virtual clerk in an e-store. The experimental results reveal that an e-store embedded within such a sales agent can improve a seller's surplus and increase a buyer's product valuation, willingness-to-pay, and satisfaction with the e-store [13]. Nguyen and Jennings (2005) proposed a model for the buyer agent consisting of three main components: a coordinator, several negotiation threads and a commitment manager [24]. The objective of each agent is to complete an acceptable deal based on the user-specified constraints such as initial asking (or bidding) price, a reservation price, a date by which to complete the transaction, and restrictions on which parties to negotiate with and how to change the price over time [18]. However, using intelligent agents can analyze information, but how to collect data with efficiency must be considered.

The peer-to-peer (P2P) application seems good for communicating agents because of the efficiency [8]. The P2P applications adopted pull-based methods to deliver contents mainly. The pull-based method means that a receiver sends requests to the sender for retrieving an item, and then the required items are retrieved by the receiver actively [20]. The bandwidth of the sender is controlled by receivers. Additionally, the correctness of the transferred packets under the pull-based mechanism is still needed to check. The approach to check the correctness of a retrieved file is checked by verifying the file size. Once the file size is incorrect, the receiver retrieves the file again [27]. After checking the correctness of the file, the procedure of file delivery has been finished. Adopting a pull-based mechanism could make thousands of receivers retrieve contents from a sender. However, such pull-based application has a defect: exhausting the connections of a sender when too many retrievers take back contents simultaneously [20].

The modern P2P approaches have the same defect as pull-based methods although it can speed up the transmission of a large file among peers because the file is divided into chunks and each chunk is transmitted independently. A file is retrieved successfully after all chunks of the file are collected and merged correctly [1]. Existing solution for relieving network congestion caused by a modern P2P method is restraining connections of the sender. Fortunately, the push-based method should avoid abovementioned problem [10].

A push-based method represents a sender actively deliver files to receivers [11]. To adopt active method to transmit files, a sender could control its connections. However, through the theory of push-based mechanism, the sender controls no sent files. Therefore, the push-based method must be fault-tolerant that ensures a packet is transmitted [30]. To ensure fault tolerance, two solutions are typically employed, namely: adding information to the sending files to verify the accuracy, and utilizing the signal to let senders and receivers decide the nextaction [20]. For example, whenever a sender sends a file to a receiver, the receiver could verify the correctness of the received part through comparing the real file size with the file size recorded in the information. A receiver could send a message to the sender to retransmit the file again whenever file size is incorrect.

Apparently, using push-based method or pull-based methods merely is inadequately. Through the pull-based method, the file delivery is fast, but the networking load is heavy. Using the push-based method, the networking load is light, but the file delivery is slow. Therefore, for C2C communication, it is necessary to build up architecture to adopt both pull- and push applications to deliver files.

This section designs a novel P2P based C2C intelligent agent (C2CIA) communication architecture to enhance the existing C2C e-commerce process. The proposed application is then used to improve the ability of agents to communicate. Agent communication enables diverse information to be gathered, managed, distributed and utilized by buyers/sellers to make merchandising decisions. However, understanding the contribution of this proposed communication method requires first detailing the functions of C2CIA.

Previous investigations have discussed the general agent architecture for e-commerce. Some researchers claimed that two key processes are needed to make the agent work effectively and simulate real world buying: identifying a set of transaction criteria, and identifying agents with whom to transact [28]. Restated, it is important to define transactions and roles when using agent technology. Nguyen and Jennings (2005) proposed a model based on the above rules [24]. Specifically, they defined a buyer agent as performing three roles: coordination, commitment management, and negotiation [24]. Notably, the coordination role also involves communicating with agents regarding the criteria of specific trades. In a B2C market, the model of Lau (2007) assigned the criteria of agent negotiation as being to complete an acceptable deal based on user-specified constraints such as initial bidding price [18], reservation price, date of transaction completion, and restrictions on price negotiation. The commitment manager makes decisions after the collection of all necessary data. The negotiation threads controlled by the coordinator link various agents, and the commitment manager uses these threads to collect data from other agents.

This study presents a C2CIA architecture in which agents can play both buyer and seller roles. Agents performing buyer/seller roles can search for product information, and negotiate and access negotiation records based on transaction criteria obtained from their knowledgebase or those of other agents. Seller agents can negotiate with buyers. That is, every C2CIA has the same criteria for C2C trades. The C2CIA features the following criteria for C2C trades:
                           
                              •
                              Intelligence: A C2CIA automatically customizes itself to suit user preferences, based on previous experiences and imprecise information obtained via interaction with users. The agent also automatically exchanges transaction information with other agents.

Automation: A C2CIA must take the initiative and exercise significant control over its own actions through service agreements.

Cooperation: A C2CIA does not simply respond to commands, but makes suggestions to modify requests or questions users to seek clarification. A C2CIA also cooperates with other agents to query the needed modules.

An agent possessing the above characteristics has the following architecture. An agent has a negotiator responsible for managing its activities and interacting with peers, a searcher for finding relevant information, and a manager for creating strategies for C2C businesses that users can adopt via an agent interface. Strategy creation requires the agent to communicate strategies and resources related to the problems of product storage in a database and multimedia data with other collaborating agents. Using C2CIA, agents must send/receive multimedia packet sets related to the transactions, including communication text, audio, and video packets, to other agents. In the case of a C2C business, a buyer agent must interface with users, search for desired products, negotiate with other buyer/seller agents, and devise business strategy (Fig. 1
                        ).

The above descriptions illustrate the C2CIA architecture, but do not describe the communication method. Trading in the C2C market requires each user to have as much information as possible for use in negotiations. The user thus must collect all kinds of business data, including: websites related to goods, price comparison among resources, and even promotional movies or video comments issued by the producer or seller. Restated, the network transmits all types of data. Because data is communicated between agents in the form of variously sized multimedia packet sets, the networking load is heavy. Therefore, agents adopt the efficient pull-based P2P content delivery method to communicate.

To illustrate the mechanism, we define the exchange information between databases. The exchange information is sent between each other, which is composed of packet name, sender name, retrieved chunks, receiver name, transmission method, packets size, and transmission status.

The packet name is utilized for identifying the delivering multimedia packet sets. The sender name and the receiver name represent the role of agents. Because, the delivering multimedia packet set must be divided into chunks for speeding up the packet transmission, the management of chunks is therefore needed [17]. The retrieved chunks indicate the owned chunks of the shared packets. The transmission method is utilized for recognizing the content delivery method between a sender agent and a receiver agent. The transmission status will be updated after chunks are sent/received by the sender/receiver agent.

The packet size is used for verifying the accuracy of each received part [22]. Based on the P2P protocol [1], the above information owned by an agent must be shared and updated with its neighboring agents no matter the agent's role is a buyer or seller. Additionally, to transfer multimedia packet sets with efficiency through the C2CIA mechanism, the efficient pull-based P2P protocol is the default method to transfer packets.

The C2CIA mechanism is launched whenever a set of packets needs to be transmitted. For example, agent A is a content owner, and K means the packets need to be transmitted. Agent A shares transmission status after agent A divides file K into chunks. The transmission method is “pull-based method.” After agent B receives the above information from agent A, agent B retrieves chunks of K from agent A, and passes the transmission status to agent A after chunks are received.

The procedure of the pull-based approach is launched. Agent B retrieves chunks from agent A. Whenever chunks have transferred successfully by agent B, the transmission status is changed. These modifications are then passed on to neighboring agents including agent A. In the case where agent A is unavailable to share packet set of K, agent B will retrieve chunks of packets set of K from other agents who own the parts. The pull-based procedure of C2CIA is shown in the following steps (Fig. 2
                        ). The transmitting packets have been divided into chunks at first [10].
                           
                              1.
                              Receiver agent begins to download chunks from sender agent after the sharing information of transmitting packets received from sender agent.

If the receiver agent can establish connections to the sender, the chunks are retrieving by the receiver agent.

The packet size of all retrieved chunks will be checked. If the packet size is different from the packet size data storing on the database, the retrieved parts will be eliminated and Step 2 will be executed again.

After the packet size has been verified with correctness, the procedure is finished.

Additionally, the transmission method is changing along with the network congestion. Based on the design of C2CIA, the “pull-based method” is adopted when C2CIA launched. If the network is congested, the transmission method will turn to be the “push-based method”. If the network is free from congestion, the transmission method will turn back to “pull-based method”.

Using a pull-based P2P approach to deliver content on C2C architecture can reduce the load on the sender and increase file sharing efficiency. However, once the network congestion caused by a pull-based method interferes with communication between agents, the pull-based method becomes useless for resolving congestion. The push-based method is used whenever bandwidth consumption is heavy. That is, a pull-based method allows file receivers to occupy too many connections. Utilizing a push-based method, the sender themselves can control bandwidth usage because the control of file transmission is changed from receivers to the sender. Therefore, network congestion could be controlled.

This study presents an example illustrating the execution of the “push-based method”. The transmission method is changed from the “pull-based method” to the “push-based method,” whenever agent C needs to connect to agent A for retrieving chunks of file K, but the network for C2C communication is excessively congested. In this situation, agent A changes the transmission method to the “push-based method”, and then duplicates this modification to all agents.

The pull-based transmission of the chunks of K between agent A and agent C is therefore seized. Agent C then waits for chunks sent by agent A, and agent A actively sends the needed chunks. Agent A changes the transmission status and distributes it to all agents. Agent A then sends chunks to agent C. Of course, if all chunks are collected by the receiver agent and the received chunks are the same size as the file stored on the database, the communication is complete. Additionally, in the C2CIA mechanism, if agent A malfunctions while delivering chunks, the other agents with chunks of file K actively send the request chunks to agent C. The push-based procedure of C2CIA is shown as follows (Fig. 3
                        ).
                           
                              1.
                              Because the sender agent has no control over chunk delivery after actively sending the chunks, the connection must be ready to send chunks before transmission begins. That is, sender and receiver agents must communicate to ensure that the transmission channels are ready before the sender agent delivers chunks.

All received chunks could be confirmed after checking the packet size of the received chunks. If the packet size differs from the packet size data stored on the database, the received chunks are eliminated and Step 2 is repeated.

The procedure is completed after correctly verifying the packet size.

If the receiver agent receives no packets for a certain period, the “pull-based” transmission method is adopted.

If the receiver agent is off duty, the “pull-based” transmission method is adopted once the agent starts work.

To investigate a novel application, the correctness of design must be evaluated to make sure the correctness on C2C communication [17]. In this section, agents communicate each other could be assured based on the following theorems.
                           Theorem 1
                           
                              An agent can retrieve a completed file through pull-based method.

The information about shared file status owned by an agent must be shared and updated using C2CIA mechanism. The newest information will then be updated between an agent and its neighboring agents. The files which are transferred incompletely by an agent can be transferred again through verifying the update information. Additionally, the accuracy of each chunk retrieved by an agent can be verified through comparing the size of the retrieved chunks and the file size recorded on the database. Hence, an agent can re-retrieve any file which is transferred incompletely through the pull-based method.


                              An agent can send a file successfully using push-based method.

The push-based method will be launched after a sender sends the updated information to a receiver to change the transmission method from the “pull-based method” to the “push-based method.” A receiver therefore waits for the sender to send the file. After the sender sends the file to the receiver, the receiver checks the accuracy of the received file by comparing its size with the file size recorded on the database. In the case where a sender malfunction occurs, other agents will send the needed chunks to the receivers that are waiting for.

In the case where a receiver malfunction occurs before the file is successfully received, the correct file will be transferred by the pull-based mechanism after the receiver is recovered, because the pull-based method is used when the C2CIA mechanism is launched along with the system recovery. The pull-based method is the default content delivery method. Hence, an agent can send a file successfully through the push-based method.

However, this novel C2C communication application must be validated to help researchers understand C2CIA. Actually, the best way to validate a software application is to implement it. To find the validation of C2CIA, this work builds up a software agent application following the proposed C2CIA protocol. Based on the design of C2CIA, the updated networking speed must be recorded on time. In this experiment, the speed is detected whenever a set of chunks is received/retrieved successfully. For example, once the networking speed is reduced from 3MB (megabits)/s to 1MB/s, the transmission method will be changed. However, the transmission method is changeable along with the network congestion, but the congestion is a random situation that must be controlled. That is, in this study the experiment will be designed based on a controllable situation. Using the experimental C2CIA application, the pull-based method and push-based method are controlled to form a set of ratio of transmission method (ρ). That is, ρ={the period of using pull-based method: the period of using push-based method}.

Through different ρs we can verify C2CIA when ρ={9:1, 8:2,7:3, 6:4, 5:5, 4:6, 3:7, 2:8, 1:9}. Additionally, the sender delivers chunks to receivers through the push-based method are following round-robin fashion.

Therefore, to compare the results between pull-based method, push-based method, and C2CIA, this work builds up a lab for the verification. The following environment is therefore devised. The pull-based method uses the most popular P2P standard: BitTorrent (BitComets®) [10]. The push-based method is to build up an experimental application by this study which transmission method is following the round robin fashion. The CPU of the computers adopted in C2CIA for the experiment is Intel® Pentium IV with 3.00GHz clock and the random access memory (RAM) is 504MB (megabytes). The operation system that hosts C2CIA application is Microsoft® Windows XP. To find the congestion, the transmission variables must be controlled: networking bandwidth must be fixed, and file size must be large enough [10]. In this work, the bandwidth is set to 3MBps (megabits per second) and the large file with the size of 500MB (megabytes) is created.

After 20 times of experiments, this work found the following validation results. The transmission time is users' major concerns for finding the best trade strategies faster than others on the C2C market. Obviously, pure pull-based method (BitComets®) is with the best performance in file sharing, even the number of agents is large. Additionally, using C2CIA, the validation result is between using pure pull-based method and pure push-based method (Fig. 4
                     ).

However, the transmission time is not the only one result for validation. The traffic load (average transferring packets per second) must be compared to help manager decide to adopt which application based on networking traffic load (Fig. 5
                     ). In average, 42.23MBps are flooding on the network, if we communicate files between 50 agents through pure pull-based method. Using C2CIA, the average transferred packets are between using pure push-based method and pure push-based method.

Based on abovementioned results, we could find that the performance using C2CIA is between pure pull-based method and push-based method. Such results could be provided to C2C market operators to adopt the standard. Although customers have the power to recommend the adoption of the pull-based method, the manager of the C2C platform provider has the power to make decision on transmission method. For example, under 50 agents, if the network congested, and the networking bandwidth is shrink to 30% (2.1megabits) of the original bandwidth (3megabits). To release the network burden, the manager could adopt ρ=7:3, that the transmission time will be increasing from 596s to 1480s, but the traffic load on the C2C platform caused by file communication is reducing from 42.5megabits per second to17.04megabits per second. Therefore, user expectation on time and manager consideration on networking load could be balanced.

C2CIA can be further adopted as a standard for the communication of intelligent agents. Through C2CIA, the efficiency of information collection of agents can be controlled by C2C-platform managers. The network resources could be released based on real networking situation and the successful communication between agents can be guaranteed. C2CIA can enhance the existing C2C e-commerce process and improve the ability of agents to communicate.

@&#CONCLUSION@&#

Networking resources are limited, and so congestion delays or prevents the delivery of important data. Therefore, networking resources must be optimized, especially for C2C communications. The modern pull-based P2P method is an efficient tool for communication among agents, but suffers from network congestion. Consequently, the P2P method is impractical in the electronics business. This study proposes agent communication architecture for the C2C market, called C2CIA, that employs both pull- and push-based methods to assist buyers and sellers in receiving and delivering demanded content. Additionally, this study assessed the performance of the method via experiments. The experimental results indicate that C2CIA can help balance network loads and transmission efficiency, provided that the manager can control the transmission method. The pull-based method can be adopted for low network traffic. Once network congestion sets in, managers can use the push-based method to deliver the required files. Therefore, the C2CIA application is a practical method of delivering files and can be used in the C2C network.

@&#ACKNOWLEDGMENTS@&#

This work was partially supported by funding from the National Science Council of the Republic of China (NSC 96-2416-H-018-005-MY3).

@&#REFERENCES@&#

