@&#MAIN-TITLE@&#Semi-online patient scheduling in pathology laboratories

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A semi-online patient scheduling problem in the pathology laboratory is studied.


                        
                        
                           
                           The problem is formulated as a semi-online hybrid shop scheduling problem.


                        
                        
                           
                           A genetic algorithm is developed for solving the problem.


                        
                        
                           
                           Several experiments are conducted to evaluate the effectiveness of the approach.


                        
                        
                           
                           The approach reduces waiting time of patients and improves operations efficiency.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Health care operations management

Patients scheduling

Pathology laboratory

Genetic algorithm

Response surface methodology

@&#ABSTRACT@&#


               
               
                  Objective
                  Nowadays, effective scheduling of patients in clinics, laboratories, and emergency rooms is becoming increasingly important. Hospitals are required to maximize the level of patient satisfaction, while they are faced with lack of space and facilities. An effective scheduling of patients in existing conditions is vital for improving healthcare delivery. The shorter waiting time of patients improves healthcare service quality and efficiency. Focusing on real settings, this paper addresses a semi-online patient scheduling problem in a pathology laboratory located in Tehran, Iran, as a case study.
               
               
                  Methods and material
                  Due to partial precedence constraints of laboratory tests, the problem is formulated as a semi-online hybrid shop scheduling problem and a mixed integer linear programming model is proposed. A genetic algorithm (GA) is developed for solving the problem and response surface methodology is used for setting GA parameters. A lower bound is also calculated for the problem, and several experiments are conducted to estimate the validity of the proposed algorithm.
               
               
                  Results
                  Based on the empirical data collected from the pathology laboratory, comparison between the current condition of the laboratory and the results obtained by the proposed approach is performed through simulation experiments. The results indicate that the proposed approach can significantly reduce waiting time of the patients and improve operations efficiency.
               
               
                  Conclusion
                  The proposed approach has been successfully applied to scheduling patients in a pathology laboratory considering the real-world settings including precedence constraints of tests, constraint on the number of sites or operators for taking tests (i.e. multi-machine problem), and semi-online nature of the problem.
               
            

@&#INTRODUCTION@&#

Laboratory tests are medical services that include testing samples of blood, urine, saliva, and various tissues or substances in the patient's body. A laboratory test may be taken for one or more of the following reasons: (1) to verify a suspected diagnosis e.g. measuring plasma glucose level to confirm diabetes mellitus, (2) to exclude a diagnosis e.g. a negative urine culture may rule out bladder and kidney bacterial infection, or (3) to check the effectiveness of the treatment or drugs. Planning and scheduling patients requesting for tests is a cumbersome task because it necessitates concerted cooperation of different parts in the laboratory to minimize patients waiting time and maximize laboratory resources utilization [1]. It is noteworthy that in this article “planning” is referred to as a decision-making process which determines the activities and resources needed to perform those activities in order to design a desired system and effective ways of meeting the performance objectives. “Scheduling” is the process of assigning activities to the resources, deciding on the sequence of activities, and determining the exact start and finish time of each activity.

Each laboratory may have several types of tests such as hematology, immunology, chemistry and microbiology and the patient who arrives to the laboratory may take test of blood, urine, saliva, sperm or stool. Unlike the offline problems, in this situation the arrival times of patients are not known in advance. Nevertheless, when a patient arrives, the types of tests that the patient must take and the processing times are known. The sequence of some of these tests is restricted (e.g., the urine test must precede the stool test) and some tests can be performed without the predefined precedence constraints. Additionally, when a patient arrives, the patients already in the system cannot be rearranged. Thus, the problem can be formulated as a semi-online hybrid shop scheduling problem (SHSSP). Hybrid shop is an open shop problem with partial precedence constraints. The difficulty in solving hybrid shops is due to the fact that pre-specified precedence constraints must be regarded in the schedule [2]. Fig. 1
                      illustrates the SHSSP using the example of two patients. Patient 1 is male and requires four samples of tests, where test D cannot be taken before test B, while tests A and F can be taken at any order. Meanwhile, patient 2 is female and requires three samples of tests, where test E cannot be taken before test C, while test A can be taken at any order.

Motivated by real needs, this study is application-oriented and aims to develop an effective approach for increasing service quality by reducing the patient waiting time and improving the operations efficiency. A mixed integer linear programming (MILP) model is developed to formulate the problem. A genetic algorithm is then proposed to solve the formulated semi-online hybrid shop scheduling problem and a structured procedure based on response surface methodology (RSM) is used for setting the GA parameters. To estimate the validity of the algorithm, a lower bound is also calculated and the results obtained by the proposed algorithm on randomly generated problems are compared to the lower bound. Finally, the proposed approach is applied to a simulated laboratory for some days to illustrate its effectiveness and robustness.

The remainder of the paper is organized as follows. Section 2 provides a review of the literature related to patient scheduling. The mathematical formulation of the problem is proposed in Section 3. The proposed GA and its operators are described in Section 4. For verification, a lower bound is calculated in Section 5. In Section 6, a laboratory is simulated and the efficiency of the proposed approach is investigated and finally, Section 7 draws some conclusions from this study.

@&#LITERATURE REVIEW@&#

Providing health services to patients in hospitals and laboratories is becoming gradually more vital from the managerial point of view. While reducing costs and improving financial assets are the main goals of hospital managers, maximizing patients’ satisfaction level is also a crucial issue [3]. In order to achieve these goals, hospital resources and infrastructure must be managed efficiently and cost effectively. Spyropoulos [4] as well as Chien et al. [5] classified hospital infrastructures into four following groups: (1) the personnel, including physicians of various specialties, nurses, specific technicians, and other support personnel, (2) the intensive care units, including the complex infrastructure required to support the monitoring and therapy of intensive care patients, (3) the surgical operation units, with dedicated equipment, tools, and procedures for different operations, and (4) the laboratories, such as X-ray, ultrasound, magnetic tomography, biochemistry and radiology. Several studies have been devoted to planning and scheduling the resources and operations in different parts of hospital. Research in the field of scheduling in hospital can be classified into two main groups: patient scheduling and resource scheduling such as nurses, surgeries or operating rooms scheduling.

Reducing waiting time and increasing patient satisfaction are the main objectives of the patient scheduling. Since different parts of a hospital encompass different settings and conditions, the patient scheduling problems differ from one part to another. For example, scheduling patients in an emergency room is very different from the other parts partially because of various processes needed by the patients and different priorities of the patients. Marinagi et al. [1] proposed an integrated patient-wise planning and scheduling system for hospital laboratories examination tests which supports the dynamic and continual nature of the problem. Pérez et al. [6] developed a stochastic online scheduling algorithm for the patient scheduling in nuclear medicine departments considering the time constraints and the stochastic nature of the system. Brunner et al. [7] developed a mixed integer programming model to solve a physicians’ shift scheduling problem taking into account legal and institutional constraints with the objective of minimizing the total hours that have to be paid out as overtime.

Vermeulen et al. [8] addressed the patient scheduling problem by focusing on an efficient and adaptive allocation approach for allocating expensive resources to patient groups. Ceschia and Schaerf [9] proposed a new formulation of the patient admission scheduling problem, including several real-world features, such as the presence of emergency patients, uncertainty in the length of stay, and the possibility of delayed admissions. Demeester et al. [10] developed a patient scheduling algorithm which supports the operational decisions in a hospital and involves efficiently assigning patients to beds in the appropriate department, while keeping the number of patients in the different departments balanced. They utilized a hybridized tabu search algorithm to tackle the admission scheduling problem. Chern et al. [11] presented a health examination scheduling algorithm to minimize the examinee/doctor waiting time and respect time and resource constraints, while also taking other limitations, such as the sequence and continuity of the examination procedures, into consideration.

Petrovic et al. [12] presented a multi-objective optimization model for scheduling of radiotherapy treatments for the categorized cancer patients, which considers various real life constraints, such as machine availability, patient's category, waiting time targets. They utilized multi-objective genetic algorithms including: (1) a standard genetic algorithm that considers all patient categories equally, (2) a knowledge based (KB) genetic algorithm which has an embedded knowledge on the scheduling of emergency patient category, and (3) a weighted genetic algorithm which operates with different weights given to the patient categories. Aickelin and Dowsland [13] proposed a GA approach to a manpower-scheduling problem in health care environment. The utilized GA uses an indirect coding based on permutations of the nurses, and a heuristic decoder that builds schedules from these permutations.

Finally, some studies focus on the patient scheduling at emergency departments. Scheduling patients in emergency department differs from other departments in that the patients have different priorities. Yeh and Lin [14] proposed a simulation model to cover the complete flow for the patient through the emergency department. A genetic algorithm was applied to find a near-optimal nurse schedule based on minimizing the patients’ queue time. Vermeulen et al. [15] solved the online problem of scheduling patients with urgencies and preferences on hospital resources with the limited capacity. In their problem, for most patients a diagnostic test must be performed before the next visit to the physician. Kırış et al. [16] developed a knowledge-based reactive scheduling system for emergency departments, considering patients priorities, arrival times, flow time, and doctors work load, with the objective of determining the patients who have higher priorities initially, and then minimizing their waiting times. They investigated the efficiency of the proposed algorithm in terms of the patients waiting times and doctors work load.

Most studies in the health care operations scheduling focus on static problems, and typically do not consider online decision making on real settings. Notably, to the best of our knowledge, it is the first time that an applicable approach is proposed for the laboratories examination tests considering precedence constraints of tests, constraints on the number of sites or operators for taking tests (i.e. multi-machine problem), and semi-online nature of the problem. In this paper, focusing on the real settings, an effective approach is proposed for increasing service quality in the pathology laboratory by reducing the patients waiting time and improving the operations efficiency.

In the laboratories, any patient arriving to the system may have different types of tests. According to the scheduling terminology, each patient is considered as a job, each resource (i.e. operators or sites) as a machine and each test as a stage. It is supposed that when a patient arrives to the system, the types of tests required by the patient are known. Some of these tests have precedence constraints, while others are open. The problem is how to schedule each arriving patient and reschedule other patients, such that the total waiting time of the arrived patient and the patients already in the system is minimized. For example, suppose that there are two patients already in the system (patient 1 and patient 2) when patient 3 arrives. In the current schedule, patient 1 takes test B and then test A and patient 2 takes tests A, D and C consecutively. The processing times of tests A, B, C, and D are 5, 5, 5, and 10, respectively. Additionally, patient 3 needs tests B and D. Based on the current schedule, the best schedule for patient 3 is to take test B at time 5 and test D at time 15 which yields to the total completion time of 55. However, if patient 2 is rescheduled to take test C before test D, patient 3 can take test D at time 0 and test B at time 10, which results in the total completion time of 45. This example is illustrated in Fig. 2
                        .

It should be noted that when a new patient arrives, the predefined sequence of patients who are already in the system will not change. However, the tests sequence of new patient could increase the waiting time of the patients who are already in the system. For example, consider first patient with two tests: test A (3min) and test B (6min). Because there is no patient before this patient in the system and all the machines are free, the proposed algorithm will schedule the tests randomly, for example first A and then B. Now, suppose patient two arrives after one minute with the same tests and same procedure times. If we assign patient two to do test B first, the waiting time of the first patient will increase from zero to 4min and the waiting time of patient two will be zero with this scheduling.

There is a restricted number of operators or machines in each stage. At most one test for a patient is done at a stage and the patient goes to the first available machine in the stage. If a patient goes to a busy stage, he/she stays in the queue and does not hang off. Also, the machines have sequence independent setup times, thus, they are included in the processing times. Moreover, it is supposed that each kind of the test takes the same amount of time to be executed on each patient. In other words, all the machines in a stage are identical and have the same processing time independent of the patient.

Mixed integer linear programming (MILP) models can be used to solve the small-sized SHSSP within a reasonable computational time and provide a better understanding of the combinatorial optimization problem. The semi-online patient scheduling problem is formulated as an MILP model.


                           
                              Indices


                              
                                 j
                              
                              
                                 patients index (j
                                    =1,…,n)

stages index (s
                                    
                                    =
                                    1,…,l)

index for machines in stage s (i
                                    
                                       s
                                    
                                    =1,…,m
                                    
                                       s
                                    )

number of patients

number of stages

number of machines in stage s
                                 

arrival time of patient n (the just arrived patient)

set of pairs of tests for patient j representing predefined sequence (j
                                    =1,…,n
                                    −1)

processing time at stage s
                                 

set of stages that patient j must visit

an arbitrary large number

Completion time of patient j on stage s
                                 

Completion time of patient j
                                 

1 if patient j is assigned to machine i at stage s and 0 otherwise

1 if patient j precedes patient k in stage s and 0 otherwise (j
                                    =1,…,n)

1 if patient J visits stage s
                                    1 prior to stage s
                                    2 
                                    
                                       
                                          
                                             
                                                
                                                   s
                                                   1
                                                
                                                
                                                   s
                                                   2
                                                
                                                ∈
                                                
                                                   S
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 

An arbitrary large constant (M→∞).


                           
                              
                                 (1)
                                 
                                    
                                       Minimize
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          n
                                       
                                       
                                          
                                             C
                                             j
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (2)
                                 
                                    
                                       
                                          C
                                          
                                             n
                                             s
                                          
                                       
                                       −
                                       
                                          P
                                          s
                                       
                                       ≥
                                       
                                          R
                                          n
                                       
                                        
                                        
                                       ∀
                                       s
                                       ∈
                                       
                                          S
                                          n
                                       
                                    
                                 
                              
                           
                           
                              
                                 (3)
                                 
                                    
                                       
                                          C
                                          
                                             j
                                             
                                                s
                                                1
                                             
                                          
                                       
                                       ≤
                                       
                                          C
                                          
                                             j
                                             
                                                s
                                                2
                                             
                                          
                                       
                                       −
                                       
                                          P
                                          
                                             
                                                s
                                                2
                                             
                                          
                                       
                                        
                                        
                                       ∀
                                       
                                          s
                                          1
                                       
                                       ,
                                       
                                          s
                                          2
                                       
                                       ∈
                                       
                                          S
                                          j
                                       
                                       ,
                                       
                                          
                                             
                                                s
                                                1
                                             
                                             →
                                             
                                                s
                                                2
                                             
                                          
                                       
                                       ∈
                                       
                                          Q
                                          j
                                       
                                       ,
                                       j
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       n
                                    
                                 
                              
                           
                           
                              
                                 (4)
                                 
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             
                                                m
                                                s
                                             
                                          
                                       
                                       
                                          
                                             X
                                             
                                                j
                                                i
                                                s
                                             
                                          
                                       
                                       =
                                       1
                                        
                                        
                                       ∀
                                       s
                                       ∈
                                       
                                          S
                                          j
                                       
                                    
                                 
                              
                           
                           
                              
                                 (5)
                                 
                                    
                                       
                                          C
                                          j
                                       
                                       ≥
                                       
                                          C
                                          
                                             j
                                             s
                                          
                                       
                                        
                                        
                                       ∀
                                       s
                                       ∈
                                       
                                          S
                                          j
                                       
                                       ,
                                       j
                                       =
                                       1,2,...
                                       ,
                                       n
                                    
                                 
                              
                           
                           
                              
                                 (6)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         M
                                                         
                                                            
                                                               
                                                                  Y
                                                                  
                                                                     j
                                                                     
                                                                        s
                                                                        1
                                                                     
                                                                     
                                                                        s
                                                                        2
                                                                     
                                                                  
                                                               
                                                               −
                                                               1
                                                            
                                                         
                                                         +
                                                         
                                                            C
                                                            
                                                               j
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                         ≤
                                                         
                                                            C
                                                            
                                                               j
                                                               
                                                                  s
                                                                  2
                                                               
                                                            
                                                         
                                                         −
                                                         
                                                            P
                                                            
                                                               
                                                                  s
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         −
                                                         M
                                                         
                                                            Y
                                                            
                                                               j
                                                               
                                                                  s
                                                                  1
                                                               
                                                               
                                                                  s
                                                                  2
                                                               
                                                            
                                                         
                                                         +
                                                         
                                                            C
                                                            
                                                               j
                                                               
                                                                  s
                                                                  2
                                                               
                                                            
                                                         
                                                         ≤
                                                         
                                                            C
                                                            
                                                               j
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                         −
                                                         
                                                            P
                                                            
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                              
                                              
                                             ∀
                                             
                                                s
                                                1
                                             
                                             ,
                                             
                                                s
                                                2
                                             
                                             ∈
                                             
                                                S
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (7)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         M
                                                         
                                                            
                                                               
                                                                  X
                                                                  
                                                                     k
                                                                     i
                                                                     
                                                                        s
                                                                        1
                                                                     
                                                                  
                                                               
                                                               +
                                                               
                                                                  X
                                                                  
                                                                     j
                                                                     i
                                                                     
                                                                        s
                                                                        1
                                                                     
                                                                  
                                                               
                                                               −
                                                               2
                                                            
                                                         
                                                         +
                                                         M
                                                         
                                                            
                                                               
                                                                  Z
                                                                  
                                                                     k
                                                                     j
                                                                     
                                                                        s
                                                                        1
                                                                     
                                                                  
                                                               
                                                               −
                                                               1
                                                            
                                                         
                                                         +
                                                         
                                                            C
                                                            
                                                               k
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                         ≤
                                                         
                                                            C
                                                            
                                                               j
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                         −
                                                         
                                                            P
                                                            
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         M
                                                         
                                                            
                                                               
                                                                  X
                                                                  
                                                                     k
                                                                     i
                                                                     
                                                                        s
                                                                        1
                                                                     
                                                                  
                                                               
                                                               +
                                                               
                                                                  X
                                                                  
                                                                     j
                                                                     i
                                                                     
                                                                        s
                                                                        1
                                                                     
                                                                  
                                                               
                                                               −
                                                               2
                                                            
                                                         
                                                         −
                                                         M
                                                         
                                                            Z
                                                            
                                                               k
                                                               j
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                         +
                                                         
                                                            C
                                                            
                                                               j
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                         ≤
                                                         
                                                            C
                                                            
                                                               k
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                         −
                                                         
                                                            P
                                                            
                                                               
                                                                  s
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                        
                                        
                                       ∀
                                       
                                          s
                                          1
                                       
                                       ∈
                                       
                                          S
                                          j
                                       
                                       ,
                                       j
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       n
                                    
                                 
                              
                           
                        

The objective function (1) minimizes the total completion time of the patients in the system including the arriving patient as well as the patients already in the system. Constraint (2) ensures that the start time of the just arrived patient process is greater than or equal to its arrival time. Constraint (3) respects previous patients’ tests sequence that is predefined before the present patient arrival. Constraint (4) specifies that each test is assigned to exactly one machine in a stage to complete its process. Constraint (5) calculates the completion time of patients. Constraint (6) ensures that only one test of the just arrived patient is taken at a time. Constraint (7) guaranties that at most one patient is served by each stage at any given time.

@&#METHOD@&#

When the first patient arrives to the system, since there is no other patient in the system, the order of the patient's tests does not affect the completion time of the patient and therefore, can be scheduled randomly. By the time the next patient arrives, the tests of the just arrived patient are scheduled according to the order of tests and current situation of the patient already in the system with the objective of minimizing the total completion time of all patients in the system. This procedure is repeated when another patient arrives to the system. If the number of tests that patients have to take is low, the objective function can be calculated for all possible orders of the tests to find the best sequence of them. However, when the number of tests grows, the number of possible solutions grows exponentially and the problem cannot be solved by enumeration methods in a reasonable amount of time.

In this study, a genetic algorithm is proposed for solving SHSSP. GAs are probabilistic search techniques inspired by Darwin's theory of evolution by natural selection. In GAs, while a population of candidate solutions iteratively evolves through generations by the use of genetic operations (i.e., selection, crossover and mutation), some individuals adapt better to the environment and have more possibilities of survival. Our objective is to schedule the sequence of tests of new arrived patient somehow that the total completion time of all patients including the new arriving patient as well as the patients who are already in the system will be minimized. The general structure of the designed genetic algorithm for scheduling new patient tests is shown in Fig. 3
                     .

As mentioned before, when the new patient arrives, we can find the previous patients states (taking a test, waiting, or left the system after taking all tests). Based on these states and randomly generated sequence for the new patient, the algorithm calculates the total completion time (the fitness value). The flow diagram of the online solving procedure for an example is shown in Fig. 4
                     . In the example, suppose that the arrived patient has 4 tests and the following order fitness value must be calculated: {4, 2, 1 and 3}.

One of the most important steps in designing a GA for a particular problem is to devise a suitable representation scheme showing the solution characteristics. In the proposed algorithm, a permutation of 1 to the total number of tests is used to present a solution as an ordered sequence of the tests. However, according to the partial precedence constraints intrinsic to SHSSP, the obtained sequence may be infeasible. Hence, it is necessary to check the feasibility of each chromosome whenever it undergoes any operator. In the case of infeasibility, the tests that have been ordered in a way that violate the precedence constraint are swapped. For example, suppose that a patient has five types of tests and test 2 must precede test 5. The initial sequence of tests is illustrated in Fig. 5(a) in which test 5 is taken prior to test 2. In order to repair this infeasible chromosome, the positions of tests 2 and 5 are exchanged. The resulted feasible chromosome will be as Fig. 5(b).

Crossover is the main genetic search operator exploiting the information embedded in selected parents to create offspring. The most important issue in designing a crossover operator is that it can preserve the part of the parents’ genetic code that is responsible for their high fitness. The crossover operator used in the proposed algorithm is the linear order crossover [17]. The linear order crossover works as follows:
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             Step 1
                                          Select a subsequence of the tests from parent 1 randomly and copy it into the corresponding positions of the offspring
                                       
                                       
                                          
                                             Step 2
                                          Remove the tests from parent 2 which are held in common with the selected subsequence
                                       
                                       
                                          
                                             Step 3
                                          Copy the tests of parent 2 orderly into the unfixed positions of the offspring
                                       
                                    
                                 
                              
                           
                        

The second offspring is generated by exchanging the roles of the parents. An example of the crossover is illustrated in Fig. 6
                           .

Mutation operator produces random changes in a chromosome in order to keep the diversity of the population in a reasonable level. In the proposed algorithm, the swap mutation is used in which two genes are randomly selected and their values are exchanged. An example of the swap mutation is shown in Fig. 7
                           .

The main feature of a good selection mechanism is that an individual with higher fitness would be selected with higher probability. Roulette wheel [18], as a fitness-proportional selection mechanism, is adopted as the selection mechanism for the proposed algorithm. This mechanism assigns each individual a slice of a roulette wheel while the slice area is proportionate to the individual's fitness. Each time the wheel is spun, an individual is selected for the next generation. The individuals are selected with replacement, which means that a given individual may be chosen multiple times.

In order to calculate the objective function, the chromosomes are decoded into actual schedules. The decoding procedure is designed specifically to calculate the total completion time of all patients in the system. The fitness value calculation is described as follows:
                           
                              
                                 
                                 
                                 
                                    
                                       
                                          Step 1
                                       Set the just arrived patient as the current patient
                                    
                                    
                                       
                                          Step 2
                                       Calculate the finish time of all tests being currently taken by the patients in the system according to their situation
                                    
                                    
                                       
                                          Step 3
                                       Based on the number of sites or operators, determine the start time of the current patient according to the sequence of tests. Calculate the completion time of the current patient on the current stage
                                    
                                    
                                       
                                          Step 4
                                       Set the patient with the minimum completion time as the current patient
                                    
                                    
                                       
                                          Step 5
                                       (1) If the current patient does not have any other test, save the completion time and remove the patient from the system, else go to Step 2
                                    
                                    
                                       (2) If there is not any other patient in the system go to Step 6, else go back to Step 4
                                    
                                    
                                       
                                          Step 6
                                       Calculate sum of the completion time of all patients, and stop
                                    
                                 
                              
                           
                        
                     

GA performance strongly relies on the parameters setting. Developing successful methods for setting the parameters of GA is currently one of the most attractive research fields in computational intelligence. As mentioned by Schaffer et al. [19] the optimal parameters setting vary from problem to problem. Experimental design approaches such as full factorial design [20] and Taguchi method [21,22] have been successfully applied to find the optimal operating parameters in the GA. In this study, response surface methodology (RSM), one of the most popular optimization methods, is used for the parameters optimization in the GA. RSM is a useful experimental approach which combines statistical inference, mathematical techniques and experimental strategies for optimizing a response of interest influenced by several variables [23]. RSM is a powerful tool for optimizing individual factors and determining the optimum response value. It provides an understanding of how the independent variables affect the response, determines possible interrelationship among the independent variables, and generates a mathematical model which describes the processes [24]. In this study, RSM is implemented in three following steps:
                           
                              
                                 
                                 
                                 
                                    
                                       
                                          Step 1
                                       Determine the independent parameters and their preliminary levels
                                    
                                    
                                       
                                          Step 2
                                       Select the appropriate experimental design and predict the model equation as follows
                                    
                                    
                                       
                                          2.1
                                       Run the proposed algorithm around center point (a center point is located in the center of the range of each factor) and set a first-order model. If the curvature test is significant (i.e., first-order model is inadequate), set a second-order model and go to Step 3
                                    
                                    
                                       
                                          2.2
                                       Move sequentially along the direction of maximum decrease in response. When the response starts to get worse, stop and set the last point as the center, go to (2.1)
                                    
                                    
                                       
                                          Step 3
                                       Determine the optimum point and check it
                                    
                                 
                              
                           
                        
                     

In Step 1, after a preliminary analysis of the GA algorithm, the three most commonly studied GA parameters, including population size, crossover rate and mutation rate are considered as the design factors and the number of iterations is selected large enough regarding the convergence behavior of the algorithm. RSM is applied on various instances of the problems with different sizes to determine the optimum parameters of the GA. For example, suppose a problem with 26 patients (i.e. there are 25 patients already in the system when the new patient arrives to the system) and 15 different tests. The initial levels of the parameters are selected based on preliminary analysis and engineering judgment. The engineering judgment includes using problem-specific knowledge and the results of preliminary analysis to determine which ranges of the parameters are suitable to be considered as the initial levels. Table 1
                         shows the initial levels of the GA parameters when the number of iterations is 60.

In step 2, the proposed algorithm is run for 10 replicates in each point. A 23 factorial design augmented by five center points is adopted to determine the first-order model. Then, the curvature test is implemented. The curvature test is a t-test for verifying if the first-order model adequately describes the system. A statistically significant curvature test shows that the quadratic factors that have been overlooked in the first-order model have to be considered in the model. In this example, the curvature test is not significant. Therefore, the new center point is identified by moving sequentially along the direction of maximum decrease in the response by a predetermined step size. The step size is determined by experiments based on the problem specific knowledge or other practical consideration [25]. When the response starts to get worse, the last point is selected as the center. This procedure is repeated until the curvature test is significant. Then, a second-order model is set and in step 3, the optimal point is found. All the experiments are executed by Design-Expert 7.0 software. Table 2
                         shows the optimum levels of the GA parameters based on the obtained results for the different problems.

In order to verify the proposed approach, the algorithm has been run on 10 randomly generated test problems. The data related to the test problems are shown in Table 3
                     . In Table 3, the problem size shows the number of operations multiplied by the number of patients in the system. The number of machines at each stage is considered to be 1 or 2 at random and the processing time of operations are random integer numbers between 150 and 800. The algorithm has been run 10 replicates for each test problem, and the best and the average of the obtained solutions as well as the CPU time have been shown in Table 3.

In order to examine the efficiency of the proposed algorithm, the obtained results have been compared to a lower bound on the optimal solution. To calculate the lower bound, the total completion time of jobs already in the system is aggregated with the sum of the total processing times and release time of the just arrived job. In fact, the lower bound is calculated by releasing the machines constrains for the just arrived patient as follow:
                        
                           (8)
                           
                              
                                 LB
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       J
                                       −
                                       1
                                    
                                 
                                 
                                    C
                                    j
                                 
                                 +
                                 
                                    R
                                    J
                                 
                                 +
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       =
                                       1
                                    
                                    S
                                 
                                 
                                    p
                                    
                                       J
                                       s
                                    
                                 
                              
                           
                        
                     where p
                     
                        Js
                      is the processing time of the just arrived patient on stage s.
                        Theorem 1
                        Eq. (8) is a lower bound for the total completion time of jobs in semi-online hybrid shop scheduling problem.
                        


                     Proof. The total completion time of jobs can be considered as the sum of total completion time of jobs (patients) already in the system and the completion time of the just arrived job as follow:
                        
                           (9)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    J
                                 
                                 
                                    C
                                    j
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       J
                                       −
                                       1
                                    
                                 
                                 
                                    C
                                    j
                                 
                                 +
                                 
                                    C
                                    J
                                 
                              
                           
                        
                     
                  

Furthermore, it is evident that the completion time of the just arrived job cannot be less than the sum of its total processing times and its release time. Hence,
                        
                           (10)
                           
                              
                                 
                                    C
                                    J
                                 
                                 ≥
                                 
                                    R
                                    J
                                 
                                 +
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       =
                                       1
                                    
                                    S
                                 
                                 
                                    p
                                    
                                       J
                                       s
                                    
                                 
                              
                           
                        
                     
                  

According to Eqs. (9) and (10), it can be easily concluded that
                        
                           (11)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    J
                                 
                                 
                                    C
                                    j
                                 
                                 ≥
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       J
                                       −
                                       1
                                    
                                 
                                 
                                    C
                                    j
                                 
                                 +
                                 
                                    R
                                    J
                                 
                                 +
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       =
                                       1
                                    
                                    S
                                 
                                 
                                    p
                                    
                                       J
                                       s
                                    
                                 
                              
                           
                        
                     
                  

The above equation implies that the total completion time of jobs already in the system aggregated with the sum of total processing times and release time of the just arrived job is a lower bound for the completion time of jobs.


                     Table 3 shows the comparison of the results obtained by the proposed algorithm and the lower bound. The solution gap is measured by the mean percentage difference from the lower bound. The average gap of the solutions to the lower bound is 3.4%. As is shown in Table 3, the difference between the results of the proposed algorithm and the lower bound depends on the time required for taking tests and it grows as the total processing time increases. In the lower bound calculation, the total completion time of the patients already in the system is exactly calculated and the completion time of the just arrived patient is estimated by the total time required for the tests disregarding machines constrains. However, in real conditions the patient must wait in each stage until a machine or operator becomes idle. When the processing time increases, the waiting time of the just arrived patient becomes longer and therefore, the difference between the results obtained by the proposed algorithm and the lower bound increases.

The proposed approach has been applied to a pathology laboratory in Iran. The laboratory studied in this research had no specific mechanism for scheduling patients. When a patient arrives, the required tests are determined and unless there is a precedence constraint between the tests, the patient decides which test to take based on the queue length of each stage. Historical data have been used to obtain the distribution function of patients’ arrivals and the data have been analyzed by goodness-of-fit tests. The interarrival time of patients follows an exponential distribution and the mean interarrival time is 360s. The number of men and women are approximately equal. The probability that an arrived patient has a specific test is shown in Table 4
                     . Also, Table 4 summarizes the real laboratory data including tests, processing times, and the number of operators or machines available in the laboratory. In particular, the strict precedence constraints exist among Urine and Stool tests. Therefore, tests 2 and 3 must precede tests 4 and 5, respectively. This means that if a patient needs to take both tests 2 and 4, she must take test 2 before test 4. No precedence constraint exists for the other tests. The laboratory has different locations for taking urine and stool samples from men and women. Although a relatively small percentage of the patients undergoes stool and sperm tests, these tests affect the patients’ schedules. This is because there is only one machine for taking each of these tests while there are four machines to take the blood test.

Based on the empirical data collected from the laboratory, the simulation model has been developed using MATLAB. The behavior of the simulation model has been examined against the actual system in the laboratory by analysis of variance (ANOVA). Sum of differences between the arrival and leaving times of patients for 10 random days are extracted from the historical data. The extracted data have been compared to the results obtained by the simulation model for 10 days. A two-sample t-test has been conducted to test the equality of means 
                        
                           
                              
                                 
                                    H
                                    0
                                 
                                 :
                                 
                                    μ
                                    1
                                 
                                 =
                                 
                                    μ
                                    2
                                 
                              
                           
                        
                     . Prior to t-test, the equality of variances 
                        
                           
                              
                                 
                                    H
                                    0
                                 
                                 :
                                 
                                    σ
                                    1
                                    2
                                 
                                 =
                                 
                                    σ
                                    2
                                    2
                                 
                              
                           
                        
                      has also been tested by F-test. The results of the ANOVA are summarized in Table 5
                     . It is concluded that there is no difference between the simulation model and the actual system with respect to sum of the differences between arrival and leaving times at α
                     =0.05.

In order to investigate the effects of the proposed approach on the performance of the laboratory, the actual system is compared to the results obtained by the proposed algorithm. The total completion time of patients in the actual system is calculated for 8h using the simulation model based on the data given in Table 4. It is supposed that each kind of the test takes the same amount of time to be executed on each patient. The proposed algorithm is then applied to the system to foresee the effects of the proposed approach. The total completion times of patients obtained by the actual system and the proposed approach for 10 days are shown in Table 6
                     .

At this stage, an ANOVA is conducted to evaluate the effects of the proposed approach. In order to test the equality of means, a two-sample t-test is used 
                        
                           
                              
                                 
                                    H
                                    0
                                 
                                 :
                                 
                                    μ
                                    1
                                 
                                 =
                                 
                                    μ
                                    2
                                 
                              
                           
                        
                     . Table 7
                      summarizes the results of the ANOVA. The results reveal that at significance level of 0.05 the proposed approach is statistically superior to the actual system with respect to the total completion time of patients. Hence, the proposed approach reduces the waiting time of patients and improves the operations efficiency.

@&#CONCLUSION@&#

Focusing on real settings, a patient scheduling problem in the pathology laboratory has been formulated as a semi-online hybrid shop scheduling problem, and a mixed integer linear programming model has been proposed. The objective is to minimize the total completion time of patients in the system. A genetic algorithm (GA) has been developed for solving the problem and response surface methodology has been used for optimizing the GA parameters. A lower bound on the objective value has been calculated for the problem and several experiments have been conducted to verify the validity and to evaluate the efficiency of the proposed algorithm. Based on the empirical data collected from a laboratory in Iran, the comparison between the actual system and the proposed approach shows that the proposed approach can significantly reduce the waiting time of patients and improve the operations efficiency. Further research can be done on developing a decision support system for the semi-online patient scheduling problem in the pathology laboratory. We also present a sample of the input and output data in Appendix A, so that other researchers can work on the problem and compare their results with ours.

@&#ACKNOWLEDGEMENTS@&#

The authors are grateful for the valuable comments and suggestions from the respected reviewers. Their valuable comments and suggestions have enhanced the strength and significance of our paper.

This study was supported by a Grant from University of Tehran (Grant No. 8106013/1/19). The authors acknowledge the supports provided by the College of Engineering, University of Tehran, Tehran, Iran.


                     
                        
                           
                              Input and output data.
                           
                           
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                              
                                 
                                    Patient no.
                                    Inputs
                                    Outputs
                                 
                                 
                                    Patient arrival time (s)
                                    Processing time of tests (zero shows the patient does not take that test) (s)
                                    Patient schedule
                                    Optimal schedule
                                 
                                 
                                    1*
                                    
                                    2*
                                    
                                    3*
                                    
                                    4*
                                    
                                    5*
                                    
                                    6*
                                    
                                 
                              
                              
                                 
                                    1
                                    404
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    3
                                    1
                                    4
                                    2
                                    6
                                    5
                                    3
                                    1
                                    4
                                    2
                                    6
                                    5
                                 
                                 
                                    2
                                    545
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    4
                                    6
                                    2
                                    1
                                    5
                                    3
                                    5
                                    4
                                    3
                                    6
                                    1
                                    2
                                 
                                 
                                    3
                                    673
                                    420
                                    0
                                    0
                                    300
                                    0
                                    0
                                    3
                                    2
                                    5
                                    1
                                    4
                                    6
                                    6
                                    5
                                    1
                                    3
                                    2
                                    4
                                 
                                 
                                    4
                                    833
                                    420
                                    0
                                    0
                                    300
                                    0
                                    0
                                    6
                                    4
                                    1
                                    5
                                    3
                                    2
                                    6
                                    5
                                    4
                                    1
                                    2
                                    3
                                 
                                 
                                    5
                                    849
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    2
                                    5
                                    1
                                    6
                                    3
                                    4
                                    5
                                    6
                                    4
                                    3
                                    1
                                    2
                                 
                                 
                                    6
                                    896
                                    420
                                    0
                                    0
                                    300
                                    0
                                    600
                                    5
                                    3
                                    1
                                    4
                                    6
                                    2
                                    1
                                    2
                                    4
                                    5
                                    6
                                    3
                                 
                                 
                                    7
                                    999
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    5
                                    1
                                    2
                                    3
                                    6
                                    4
                                    3
                                    4
                                    6
                                    1
                                    5
                                    2
                                 
                                 
                                    8
                                    1164
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    2
                                    6
                                    3
                                    5
                                    4
                                    1
                                    1
                                    5
                                    6
                                    3
                                    4
                                    2
                                 
                                 
                                    9
                                    1183
                                    420
                                    0
                                    0
                                    300
                                    0
                                    0
                                    3
                                    2
                                    6
                                    1
                                    5
                                    4
                                    3
                                    4
                                    6
                                    2
                                    5
                                    1
                                 
                                 
                                    10
                                    1279
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    2
                                    5
                                    3
                                    4
                                    1
                                    6
                                    6
                                    5
                                    2
                                    3
                                    1
                                    4
                                 
                                 
                                    11
                                    1482
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    3
                                    1
                                    2
                                    5
                                    4
                                    6
                                    3
                                    6
                                    1
                                    2
                                    4
                                    5
                                 
                                 
                                    12
                                    1587
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    4
                                    6
                                    1
                                    5
                                    2
                                    3
                                    2
                                    6
                                    4
                                    1
                                    3
                                    5
                                 
                                 
                                    13
                                    1590
                                    420
                                    0
                                    300
                                    0
                                    300
                                    0
                                    5
                                    4
                                    2
                                    1
                                    3
                                    6
                                    4
                                    1
                                    5
                                    6
                                    2
                                    3
                                 
                                 
                                    14
                                    1600
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    2
                                    4
                                    6
                                    5
                                    1
                                    3
                                    1
                                    2
                                    5
                                    4
                                    3
                                    6
                                 
                                 
                                    15
                                    1662
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    1
                                    2
                                    5
                                    3
                                    6
                                    4
                                    6
                                    4
                                    5
                                    1
                                    3
                                    2
                                 
                                 
                                    16
                                    1731
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    3
                                    4
                                    5
                                    2
                                    6
                                    1
                                    6
                                    5
                                    4
                                    1
                                    2
                                    3
                                 
                                 
                                    17
                                    1764
                                    420
                                    0
                                    0
                                    300
                                    0
                                    0
                                    3
                                    4
                                    1
                                    6
                                    5
                                    2
                                    4
                                    2
                                    3
                                    6
                                    1
                                    5
                                 
                                 
                                    18
                                    1857
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    4
                                    5
                                    3
                                    6
                                    2
                                    1
                                    4
                                    2
                                    3
                                    5
                                    1
                                    6
                                 
                                 
                                    19
                                    1875
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    1
                                    6
                                    5
                                    4
                                    2
                                    3
                                    1
                                    4
                                    2
                                    3
                                    6
                                    5
                                 
                                 
                                    20
                                    2229
                                    420
                                    0
                                    0
                                    0
                                    0
                                    0
                                    2
                                    6
                                    4
                                    3
                                    1
                                    5
                                    1
                                    2
                                    5
                                    4
                                    6
                                    3
                                 
                              
                           
                           
                              
                                 Note. 1*: blood; 2*: urine for men; 3*: urine for women; 4*: stool for men; 5*: stool for women; 6*: sperm. The total completion time=2295.
                           
                        
                     
                  

@&#REFERENCES@&#

