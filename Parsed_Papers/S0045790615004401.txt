@&#MAIN-TITLE@&#Noise free image restoration using hybrid filter with adaptive genetic algorithm

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We modelled a Hybrid filter with AGA to remove the noise from the images.


                        
                        
                           
                           The noisy free images are restored by shining the pixel values using AGA.


                        
                        
                           
                           The performance is analysed by taking number of images and comparing the result with existing technique.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Image denoising

Image restoration

Genetic algorithm

Median filter

Bilateral filter

Adaptive genetic algorithm

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           Image, graphical abstract
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Nowadays, digital images play a major role both in general applications such as satellite television, resonance imaging, computed tomography, and in areas of analysis and engineering sciences such as geographical information systems and astronomy. In general, data collected by image sensors are often contaminated by noise [1]. A digital image is susceptible to a variety of noises that affects image quality [2]. Therefore, image denoising is employed to restore the details of the original image by removing the unwanted noise [3]. Some factors that determine image quality are (i) factors influencing visual quality, (ii) visual artifacts, and (iii) noise. Denoising algorithms are designed assuming parameters based on these factors. Further, these parameters must be optimised to ensure that the final restored image possess good quality.

Image denoising, which is a common procedure in digital image processing, aims to reduce noise from images [4]. Various denoising image filters are used for reducing noise from images. In general, filtering procedures consist of the following two steps: (i) an impulse detector classifies the input pixels as either noise-corrupted or noise-free, and (ii) a noise reduction filter modifies only those pixels that are classified as noise-corrupted. Low power, less area, and high speed are key factors considered for designing an efficient filter. A filter with lower evaluation time (ET) is better than a filter with higher ET when other performance measures are constant [5]. Traditional noise removal methods include the non-local means filter, total variation, shrinkage models, and different transforms. The following transforms are used for noise removal: wavelet, curvelet, and wave atom. These transforms are efficient for image denoising algorithms [6]. First, the grabbed image is converted into grey scale, and then, the filter reconstructs the image. To eliminate the background, background intensities need to be normalised. A Gaussian filter with a window size of 50 and a standard deviation of 30 is used to blur the reconstructed image, and therefore, the resulting (blurred) image is withdrawn from the filtered image. Again, the resulting image is added to the filtered image, and then to the reconstructed image to obtain the enhanced image. Further, denoising may be performed both in the spatial and frequency domains. The conventional method is to select a proper channel as indicated by the characters of the noise to filter out noise. Spatial filters are low pass filters that are further classified as non-linear and linear filters [7].

Image restoration is the process through which a unique image is created by applying the denoising methods to the corrupted image. Restoration enlarges noise; hence, denoising is carried out before restoration to remove noise. Image denoising is still a challenge for researchers because noise removal introduces artifacts, blurring, and residual noise [8]. One more challenge in denoising is managing the staircase effect while preserving image sharpness and convexity [9]. In order to overcome this problem, researchers have focused on investigating models with edges and on preserving smoothness [10].

The remainder of this paper is organised as follows. Section 2 presents a brief discussion about related research and the contribution of the proposed method. The proposed noise removal and restoration method is briefly explained in Section 3. The implementation results and conclusion of the paper are given in Sections 4 and 5, respectively.

In [11], a feature-preserving non-local means filter is proposed for denoising images to enhance feature recovery and particle detection. Their adaptive method addresses the problem by constructing a particle feature probability image based on Haar-like feature extraction. The particle probability image is then used to improve the estimation of the correct coefficients for averaging pixel values. In [12], a decision-based fuzzy averaging (DFA) filter noise detector is presented. This filter can effectively deal with impulsive noise, and a mix of Gaussian and impulsive noise. Experimental outputs have shown the exemplary effectiveness of the new DFA filter both in suppressing impulsive noise and a mix Gaussian and impulsive noise, and in enhancing perceived image quality.

In [13], a non-local minimum mean square error image denoising algorithm was presented. This algorithm achieves better denoising performance than the conventional non-local means filter. In [14], a modified version of the Bayesian least squares-Gaussian scale mixture (BLS-GSM) is presented. By introducing a coarser adaptation level, they model the distribution of pyramidal dual-tree directional filter bank (PDTDFB) coefficients with orientation-adapted GSM with non-oriented component (OAGSM/NC). In [15], image denoising using support vector machine (SVM) classification in the nonsub-sampled contoured transform (NSCT) domain is presented. By using a shrinkage model method in which the adaptive Bayesian threshold is utilised, the aspect sub bands of NSCT coefficients are denoised.

However, a majority of these methods utilise filters in the noise removal process. The filter-based methods efficiently remove noise; however, they do not preserve image quality and information. A good noise filter is mandatory to fulfil the following criteria: (1) smothering noise and (2) safeguarding helpful data in the picture.

The purpose of this paper is to present a new image denoising and restoration technique that uses a hybrid filter and soft computing technique. The hybrid filter is designed by combining two filters to remove the noise from the input images. To achieve a high-level noise free image, the output values from the hybrid filter and noisy input images values must be given to the SVM for training. The SVM is well trained using several input images and it obtains the noisy free image as the output. The resulting pixel values from the SVM produce a noise free output, but these images have a few blurring effects. Therefore, there is a need to restore images with high quality. To restore noise free images, an adaptive genetic algorithm (AGA) will be utilised to shine the image pixel values.

In this study, a denoising and restoration model that uses a hybrid filter and AGA technique is proposed for images affected by Gaussian and impulse noises. An image database 
                        
                           D
                           =
                           {
                           I
                           
                              
                                 (
                                 i
                                 ,
                                 j
                                 )
                              
                              n
                           
                           }
                        
                      is considered, where 
                        
                           0
                           ≤
                           i
                           ≤
                           M
                           −
                           1
                        
                     , & 
                        
                           0
                           ≤
                           j
                           ≤
                           N
                           −
                           1
                        
                     , n is the number of images, and Ip
                     (i, j) is the image affected by noise type p
                     .
                  

Initially, noise-affected images Ip
                     (i, j) are input into the noise removal process and the resulting noise free images are restored by AGA. The proposed technique mainly comprised of two stages: (i) noise removal using a hybrid filter, and (ii) image restoration using AGA. These two stages are consecutively applied to the noisy images in order to obtain noise free and restored images. The structure of the proposed technique is illustrated in Fig. 1.
                     
                  

To remove noise from image Ip
                        (i, j), a hybrid filter is designed by combining two filters (adaptive median filter and optimised bilateral filter).The adaptive median filter is applied to the images that are affected by Gaussian noise and the optimised bilateral filter is applied images affected by impulse noise (salt and pepper noise).

The adaptive median filter is applied to images Ip
                        (i, j) that are affected by Gaussian noise, and a noise free image is obtained as output. Using the adaptive median filter algorithm, the Gaussian noise is removed and the image is input to the restoration process. The image Ip
                        (i, j) affected by the impulse noise is denoised by applying the optimised bilateral filter. The noise is removed and a noise-free output image is obtained. Here, the bilateral filter performance is improved by optimising the two parameters that control the filter behaviour using AGA.

The bilateral filter is an alternative to wavelet thresholding, and it applies spatial weighted averaging without smoothing edges. This is accomplished by joining two Gaussian channels: one filter works in the spatial area and the other in the force space. Therefore, not only the spatial distance but also the intensity distance is important for the determination of weights. For a pixel area X, the output of a bilateral filter can be formulated as

                           
                              (1)
                              
                                 
                                    
                                       I
                                       p
                                    
                                    
                                       (
                                       i
                                       )
                                    
                                    =
                                    
                                       1
                                       
                                          N
                                          C
                                       
                                    
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          N
                                          (
                                          i
                                          )
                                       
                                    
                                    
                                       e
                                       
                                          
                                             −
                                             
                                                
                                                   
                                                      ∥
                                                      
                                                         j
                                                         −
                                                         i
                                                      
                                                      ∥
                                                   
                                                
                                                2
                                             
                                          
                                          
                                             2
                                             
                                                σ
                                                d
                                                2
                                             
                                          
                                       
                                    
                                    e
                                    
                                       
                                          −
                                          
                                             
                                                
                                                   |
                                                   
                                                      I
                                                      (
                                                      j
                                                      )
                                                      −
                                                      I
                                                      (
                                                      i
                                                      )
                                                   
                                                   |
                                                
                                             
                                             2
                                          
                                       
                                       
                                          2
                                          
                                             σ
                                             r
                                             2
                                          
                                       
                                    
                                    I
                                    
                                       (
                                       j
                                       )
                                    
                                    .
                                 
                              
                           
                        where σ
                        
                           d 
                        and σr
                         are parameters for observing the fall-off of loads in the spatial and intensity domains, respectively, N (j) is a spatial neighbourhood of pixel and NC is the normalisation constant stated as

                           
                              (2)
                              
                                 
                                    N
                                    C
                                    =
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          N
                                          (
                                          i
                                          )
                                       
                                    
                                    
                                       
                                          e
                                          
                                             
                                                −
                                                
                                                   
                                                      
                                                         ∥
                                                         
                                                            j
                                                            −
                                                            i
                                                         
                                                         ∥
                                                      
                                                   
                                                   2
                                                
                                             
                                             
                                                2
                                                
                                                   σ
                                                   d
                                                   2
                                                
                                             
                                          
                                       
                                       e
                                       
                                          
                                             −
                                             
                                                
                                                   
                                                      |
                                                      
                                                         I
                                                         (
                                                         j
                                                         )
                                                         −
                                                         I
                                                         (
                                                         i
                                                         )
                                                      
                                                      |
                                                   
                                                
                                                2
                                             
                                          
                                          
                                             2
                                             
                                                σ
                                                r
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In (2), parameters  σ
                        
                           d 
                        and σr
                         are the spatial and intensity domain behaviours that control the behaviour of the bilateral filter. Therefore, the performance of the bilateral filter in the noise removal process depends on these parameter values. However, no optimisation methods are available to select optimal parameters. To improve the performance of the bilateral filter, an AGA method is proposed for parameters optimisation.

The proposed AGA method selects optimal filter parameters by generating these values in the chromosomes and selecting the best chromosomes based on the image peak signal to noise ratio (PSNR) value. Initially, a chromosome 
                              
                                 
                                    c
                                    i
                                 
                                 =
                                 
                                    {
                                    
                                       σ
                                       d
                                    
                                    ,
                                    
                                       σ
                                       r
                                    
                                    }
                                 
                                 ;
                                 
                                 0
                                 ≤
                                 i
                                 ≤
                                 
                                    n
                                    c
                                 
                              
                            is generated, where nc
                            is the total number of generated chromosomes. The generated chromosomes have two gene values related to the filter parameters to be optimised. A fitness function is used to select the best chromosome among the generated number of chromosomes. Thus, the generated chromosomes are evaluated based on the fitness function, which is computed as

                              
                                 (3)
                                 
                                    
                                       f
                                       
                                          (
                                          
                                             I
                                             
                                                (
                                                
                                                   c
                                                   i
                                                
                                                )
                                             
                                             ′
                                          
                                          )
                                       
                                       =
                                       10
                                       
                                       
                                          log
                                          10
                                       
                                       
                                          (
                                          
                                             
                                                M
                                                
                                                   P
                                                   
                                                      
                                                         I
                                                         ′
                                                      
                                                   
                                                   2
                                                
                                             
                                             E
                                          
                                          )
                                       
                                    
                                 
                              
                           
                           
                              
                                 (4)
                                 
                                    
                                       E
                                       =
                                       
                                          1
                                          
                                             M
                                             ×
                                             N
                                          
                                       
                                       
                                          ∑
                                          
                                             i
                                             =
                                             0
                                          
                                          
                                             M
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                0
                                             
                                             
                                                N
                                                −
                                                1
                                             
                                          
                                          
                                             I
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             −
                                             
                                                I
                                                ′
                                             
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 f
                                 (
                                 
                                    I
                                    
                                       (
                                       
                                          c
                                          i
                                       
                                       )
                                    
                                    ′
                                 
                                 )
                              
                            is the fitness function of the generated ci
                            chromosome, 
                              
                                 M
                                 
                                    P
                                    
                                       
                                          I
                                          ′
                                       
                                    
                                    2
                                 
                              
                            is the maximum probable pixel value of image I′, and E represents the mean squared error value, which is calculated between the original image I(i, j) and the denoised image I′(i, j). All generated nc
                            chromosomes are applied to the image Ip
                           (i, j) separately, and the denoised images 
                              
                                 
                                    
                                       
                                          I
                                          ′
                                       
                                    
                                    
                                       n
                                       c
                                    
                                 
                                 
                                    (
                                    i
                                    ,
                                    j
                                    )
                                 
                              
                            are obtained. Then, the fitness values are calculated for all chromosomes and the best nc
                           /2 chromosome is selected, which has the maximum fitness value. Subsequently, the selected best chromosomes are provided to the probability based on the crossover and mutation operations.

An adaptive means of determining the crossover rate accelerates the GA operation to search for the global minimum. The probability of the crossover rate is calculated as

                              
                                 (5)
                                 
                                    
                                       
                                          P
                                          
                                             c
                                             r
                                          
                                       
                                       =
                                       
                                          {
                                          
                                             
                                                
                                                   
                                                      
                                                         w
                                                         1
                                                      
                                                      
                                                         (
                                                         
                                                            f
                                                            max
                                                         
                                                         −
                                                         
                                                            f
                                                            ′
                                                         
                                                         )
                                                      
                                                      /
                                                      
                                                         (
                                                         
                                                            f
                                                            max
                                                         
                                                         −
                                                         
                                                            f
                                                            
                                                               a
                                                               v
                                                               g
                                                            
                                                         
                                                         )
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      
                                                         f
                                                         ′
                                                      
                                                      >
                                                      
                                                         f
                                                         
                                                            a
                                                            v
                                                            g
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         w
                                                         3
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      
                                                         f
                                                         ′
                                                      
                                                      ≤
                                                      
                                                         f
                                                         
                                                            a
                                                            v
                                                            g
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (6)
                                 
                                    
                                       
                                          f
                                          
                                             a
                                             v
                                             g
                                          
                                       
                                       =
                                       
                                          
                                             (
                                             
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                      c
                                                   
                                                
                                                
                                                   f
                                                   i
                                                
                                             
                                             )
                                          
                                          
                                             n
                                             c
                                          
                                       
                                       
                                       
                                       
                                          f
                                          max
                                       
                                       =
                                       max
                                       
                                          (
                                          
                                             f
                                             1
                                          
                                          ,
                                          
                                             f
                                             2
                                          
                                          ,
                                          …
                                          ,
                                          
                                             f
                                             
                                                n
                                                c
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           where f
                           max  and favg
                            represent the maximum and average fitness values in the current population, f′ refers to the larger fitness value of the two chromosomes to be crossed, and w
                           1 and w
                           3 are weighting parameters normally in the range as w
                           1, w
                           3 ≤ 1.0. Hence, from the crossover, nc
                           /2 children chromosomes are obtained.

The obtained children chromosomes from the crossover are mutated based on the mutation rate. A larger mutation rate transforms the GA into a purely random search algorithm. Here, the mutation rate is adopted according to the fitness function. The adaptive mutation rate is expressed as

                              
                                 (7)
                                 
                                    
                                       
                                          P
                                          
                                             m
                                             r
                                          
                                       
                                       =
                                       
                                          {
                                          
                                             
                                                
                                                   
                                                      
                                                         w
                                                         2
                                                      
                                                      
                                                         (
                                                         
                                                            f
                                                            max
                                                         
                                                         −
                                                         f
                                                         )
                                                      
                                                      /
                                                      
                                                         (
                                                         
                                                            f
                                                            max
                                                         
                                                         −
                                                         
                                                            f
                                                            
                                                               a
                                                               v
                                                               g
                                                            
                                                         
                                                         )
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      f
                                                      >
                                                      
                                                         f
                                                         
                                                            a
                                                            v
                                                            g
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         w
                                                         4
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      f
                                                      ≤
                                                      
                                                         f
                                                         
                                                            a
                                                            v
                                                            g
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                    
                                 
                              
                           where f represents the fitness value of the mutated chromosome.

The process is repeated until it reaches the maximum number of iterations T. Once it reaches T, the best ci
                            chromosome that has maximum fitness value is selected. Finally, the corresponding noisy images are successfully denoised by using these best bilateral filter parameter values. Thus, the denoised image from the hybrid filter is denoted as I′.

The noisy free image I′ obtained from the hybrid filter seems to be blurred. To improve the quality of the noise-free image, AGA is exploited using the Richardson–Lucy (RL) algorithm. The optimised point spread function (PSF) obtained through the proposed AGA aids the RL algorithm for recovering the blurred image. Initially, a chromosome hi
                        ;  0 ≤ i ≤ nc
                         is generated, where nc
                         is the total number of generated chromosomes. The chromosomes gene values are randomly generated in the range of [0, 1]. In this case, 10 matrices are randomly generated to form the initial population. These generated chromosomes are evaluated based on their fitness function.

The chromosomes fitness function is computed by

                           
                              (8)
                              
                                 
                                    S
                                    D
                                    M
                                    E
                                    =
                                    −
                                    
                                       1
                                       
                                          
                                             b
                                             1
                                          
                                          .
                                          
                                             b
                                             2
                                          
                                       
                                    
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          b
                                          1
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             b
                                             2
                                          
                                       
                                       
                                          20
                                          ln
                                          
                                             |
                                             
                                                
                                                   
                                                      p
                                                      
                                                         max
                                                         ,
                                                         j
                                                         ,
                                                         i
                                                      
                                                   
                                                   −
                                                   2
                                                   
                                                      p
                                                      
                                                         c
                                                         e
                                                         n
                                                         ,
                                                         j
                                                         ,
                                                         i
                                                      
                                                   
                                                   +
                                                   
                                                      p
                                                      
                                                         min
                                                         ,
                                                         j
                                                         ,
                                                         i
                                                      
                                                   
                                                
                                                
                                                   
                                                      p
                                                      
                                                         max
                                                         ,
                                                         j
                                                         ,
                                                         i
                                                      
                                                   
                                                   +
                                                   2
                                                   
                                                      p
                                                      
                                                         c
                                                         e
                                                         n
                                                         ,
                                                         j
                                                         ,
                                                         i
                                                      
                                                   
                                                   +
                                                   
                                                      p
                                                      
                                                         min
                                                         ,
                                                         j
                                                         ,
                                                         i
                                                      
                                                   
                                                
                                             
                                             |
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Suppose that image I′ is divided into b
                        1 × b
                        2 blocks, and p
                        max , j, i
                        , p
                        min , j, i
                         are the maximum and minimum values of the pixels in each block, respectively. Then, p
                        
                           cen, j, i
                         is the intensity of the centre pixel in each block. After the fitness function evaluation of the chromosomes, they are crossed and mutated based on their crossover and mutation rates. With the proposed AGA, both rates are calculated by exploiting their fitness values from the population. The optimised PSF from the AGA is utilised in the RL algorithm for recovering the blurred image more effectively.

The RL algorithm uses a probabilistic approach for recovering the degraded image. When the degraded image I′ is given as input, an image k that maximises the probability of observing image I′ is obtained. Considering the image I′ as an observation of a Poisson process, the likelihood function is defined as

                              
                                 (9)
                                 
                                    
                                       p
                                       
                                          (
                                          
                                             I
                                             ′
                                          
                                          |
                                          k
                                          )
                                       
                                       =
                                       
                                          ∏
                                          z
                                       
                                       
                                          
                                             h
                                             
                                                (
                                                z
                                                )
                                             
                                             *
                                             k
                                             
                                                
                                                   (
                                                   z
                                                   )
                                                
                                                
                                                   
                                                      I
                                                      ′
                                                   
                                                   
                                                      (
                                                      z
                                                      )
                                                   
                                                
                                             
                                             
                                                e
                                                
                                                   −
                                                   h
                                                   (
                                                   z
                                                   )
                                                   *
                                                   k
                                                   (
                                                   z
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                I
                                                ′
                                             
                                             
                                                (
                                                z
                                                )
                                             
                                             !
                                          
                                       
                                    
                                 
                              
                           
                        

From this equation, a functional to be minimised, 
                              
                                 L
                                 
                                    (
                                    
                                       k
                                       ^
                                    
                                    )
                                 
                                 =
                                 −
                                 log
                                 
                                 p
                                 
                                    (
                                    
                                       I
                                       ′
                                    
                                    |
                                    k
                                    )
                                 
                              
                            is obtained, giving the maximum likelihood estimation as

                              
                                 (10)
                                 
                                    
                                       L
                                       
                                          (
                                          
                                             k
                                             ^
                                          
                                          )
                                       
                                       =
                                       
                                          ∑
                                          z
                                       
                                       
                                          −
                                          
                                             I
                                             ′
                                          
                                          
                                             
                                                (
                                                z
                                                )
                                             
                                             .
                                             log
                                             [
                                          
                                          
                                             (
                                             h
                                             *
                                             
                                                k
                                                ^
                                             
                                             )
                                          
                                       
                                       
                                          (
                                          z
                                          )
                                       
                                       
                                          ]
                                          +
                                       
                                       
                                          (
                                          h
                                          *
                                          
                                             k
                                             ^
                                          
                                          )
                                       
                                       
                                          (
                                          z
                                          )
                                       
                                    
                                 
                              
                           
                        

An iterative algorithm (RL algorithm) is derived from the above functional and it is given by

                              
                                 (11)
                                 
                                    
                                       
                                          
                                             k
                                             ^
                                          
                                          
                                             n
                                             +
                                             1
                                          
                                       
                                       
                                          (
                                          z
                                          )
                                       
                                       =
                                       
                                          [
                                          
                                             
                                                (
                                                
                                                   
                                                      
                                                         I
                                                         ′
                                                      
                                                      
                                                         (
                                                         z
                                                         )
                                                      
                                                   
                                                   
                                                      
                                                         k
                                                         ^
                                                      
                                                      
                                                         (
                                                         z
                                                         )
                                                      
                                                      *
                                                      h
                                                      
                                                         (
                                                         z
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                             *
                                             h
                                             
                                                (
                                                z
                                                )
                                             
                                          
                                          ]
                                       
                                       ×
                                       
                                          
                                             k
                                             ^
                                          
                                          n
                                       
                                       
                                          (
                                          z
                                          )
                                       
                                    
                                 
                              
                           
                        

This algorithm stops after a finite number of iterations. When de-convolution is ill-posed, a common situation in real applications, the signal-to-noise ratio becomes increasingly poorer as the number of iterations n → ∞. In the RL algorithm, a set of operations is carried out for a fixed number of iterations, and finally, we obtain the estimated, enhanced, restored image I″.

The input image is denoised using the proposed hybrid filter with the AGA technique and this denoised image is restored by the AGA. The sample input image used in the proposed technique is shown in Fig. 2
                     . Fig. 3
                      shows the images after adding Gaussian and impulsive noises. These noise affected images are processed by the hybrid filter. The noise-free images obtained from the hybrid filter are shown in Fig. 4
                     . These images are given to the AGA to improve image quality. The image obtained from AGA is shown in Fig. 5.
                     
                  

The proposed technique performance is analysed using two measures—peak signal to noise ratio (PSNR) and second derivative like measurement (SDME) by varying the noise variance of Gaussian and impulse noises. The performance is compared with the existing filter and optimisation methods. The PSNR values of the noise removal performances of the proposed and existing filter-based methods are listed in Table 1.
                     
                  


                     Fig. 6
                      illustrates a graph comparing the average PSNR values of the proposed and different filtering methods for the different noise variance levels.

As seen from Fig. 6, the proposed hybrid filter with AGA attains a higher denoising ratio than the other filtering methods. Fig. 6 (i) and (ii) shows the adaptive median filter and bilateral filter performance in the Gaussian and impulse noise removal process. For all noise variance levels, the proposed filters exhibit high PSNR when compared to the adaptive median filter and other existing filters. Further, the newly developed optimised bilateral filter also exhibits high PSNR for impulse noise removal.

Next, the image restoration performance is evaluated by computing the SDME measure on the restored images. The results of the restored images obtained from the different noise variance levels are listed in Table 2.
                     
                  

The results of the proposed AGA image restoration method are analysed by comparing the proposed AGA performance with other optimisations methods such as GA and PSO (Table 3
                     ).


                     Fig. 7
                      shows the image restoration performance of the proposed AGA and other optimisation methods such as GA and PSO. The SDME value of the proposed AGA is high for the hybrid, average, and Unsharp filters. The high value of SDME shows better image restoration performance. With the proposed hybrid filter using AGA, GA, and PSO, a higher image restoration performance can be achieved compared with other filtering methods. The proposed hybrid filter with AGA achieves a high SDME value.

@&#CONCLUSION@&#

In this paper, an image denoising and restoration technique using a hybrid filter and AGA is proposed. In the proposed method, the given image noise is removed by using the hybrid filter with AGA. The processes used in the proposed technique improve the efficiency of noise removal and image restoration. The results for the proposed techniques indicates that it offers better performance in denoising all types of noisy images with higher denoising PSNR ratio, and it restores all images with high quality. Further investigation will be carried out by exploiting both Optimised Gradient Histogram Preservation and Stein's Unbiased Risk Estimate shrinkage method to obtain much more desired level of denoised image. Also the denoised image will be evaluated using discrete wavelet transforms (DWT) before restoration. This will help to achieve the better denoising results. The usage of above methods will be deeply investigated to achieve the better results.

@&#REFERENCES@&#

