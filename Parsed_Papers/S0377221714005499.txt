@&#MAIN-TITLE@&#Finding optimal hyperpaths in large transit networks with realistic headway distributions

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A hyperpath-based transit routing algorithm is developed to handle service irregularity.


                        
                        
                           
                           Using empirical headway data, more than 15,000 headway distributions are fitted.


                        
                        
                           
                           A heuristic greedy algorithm is implemented and compared to the exact method.


                        
                        
                           
                           The proposed algorithm was tested on a large-scale real transit network.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Hyperpath

Headway distribution

Greedy method

Enumeration

Erlang distribution

@&#ABSTRACT@&#


               
               
                  This paper implements and tests a label-setting algorithm for finding optimal hyperpaths in large transit networks with realistic headway distributions. It has been commonly assumed in the literature that headway is exponentially distributed. To validate this assumption, the empirical headway data archived by Chicago Transit Agency are fitted into various probabilistic distributions. The results suggest that the headway data fit much better with Loglogistic, Gamma and Erlang distributions than with the exponential distribution. Accordingly, we propose to model headway using the Erlang distribution in the proposed algorithm, because it best balances realism and tractability. When headway is not exponentially distributed, finding optimal hyperpaths may require enumerating all possible line combinations at each transfer stop, which is tractable only for a small number of alternative lines. To overcome this difficulty, a greedy method is implemented as a heuristic and compared to the brute-force enumeration method. The proposed algorithm is tested on a large scale CTA bus network that has over 10,000 stops. The results show that (1) the assumption of exponentially distributed headway may lead to sub-optimal route choices and (2) the heuristic greedy method provides near optimal solutions in all tested cases.
               
            

@&#INTRODUCTION@&#

Thanks to the revolution in information technology, many transit agencies now have the capability to track their entire fleets, make short-term projections, archive the data and distribute passenger information, all in real time. BusTracker of Chicago Transit Authority (CTA), for example, employs GPS-based automatic vehicle location (AVL) data to project the arrival times of the next transit vehicle at any stop on any route. Similar passenger information systems can be found in other major US cities, such as New York and Washington, DC. These new systems not only enable passengers to use transit information in the real time, but also make available a large amount of operational data that can be used to support better routing and planning decisions. For example, several studies have explored the possibility of using transit AVL data for the purpose of probing traffic conditions (Bertini & Tantiyanugulchai, 2004; Chakroborty & Kikuchi, 2004; Pu & Lin, 2008).

This paper will first show that these newly emerging data sources can be used to quantify the irregularities in transit services, in particular headway. Then, a transit routing algorithm that incorporates such empirically observed service irregularities will be implemented and tested to help passengers save travel time and improve travel reliability.

The transit routing algorithm developed in this study is built on the notion of hyperpath. A hyperpath represents a sequence of routing strategies rather than a simple path consisting of stops. Routing based on hyperpath promises to make better use of availability of alternative lines in the transit systems. It also offers the flexibility to incorporate real-time information, such as the arrival times of all transit vehicles approaching a stop. It is worth noting that the boarding decision at a stop depends on the waiting time as well as the remaining travel time to the destination once the selected transit line is boarded. This remaining travel time, in turn, is affected by future events such as waiting at subsequent transfers and travel between stops. As a result of service irregularities, the remaining travel time may not be reliably estimated based on the published schedule. Accordingly, decisions have to be made according to what are likely to happen in the future. In light of this observation, the proposed tool copes with uncertainty by choosing an optimal hyperpath to minimize the expected journey time.

Hyperpath based transit routing algorithms have been studied extensively in the literature; see the next section for a brief review. Unlike most existing algorithms, however, the proposed algorithm will operate on realistic headway distributions calibrated from archived trajectory data. It has been commonly assumed in the literature that headway is exponentially distributed. With this simplifying assumption all headway distributions can be fully characterized without using any trajectory data, since the standard deviation and mean of the exponential distribution are equal and can be reliably estimated using the scheduled headway. Moreover, exponentially distributed headway reduces the efforts for obtaining expected waiting times and boarding probabilities at transfers to closed form calculation.

To validate this assumption, the empirical headway data archived by CTA’s BusTracker Application are fitted into various distributions. The results suggest that the headway data fit much better with Loglogistic, Gamma and Erlang distributions than with the exponential distribution. Accordingly, we propose to model headway using the Erlang distribution in the proposed algorithm. This choice reduces the calculation of expected waiting time and line boarding probabilities to manageable one-dimensional numerical integration. When headway is not exponentially distributed, finding optimal hyperpaths may require enumerating all possible line combinations at each transfer stop, which is tractable only if the number of alternative transit lines is small. To overcome this difficulty, efficient heuristic methods are implemented and compared to the exact method based on enumeration. The algorithms is tested on the CTA bus network, which has over 10,000 stops. We found, among other things, that the assumption of exponentially distributed headway may lead to sub-optimal route choices.

The rest of the paper proceeds as follows. Section 2 briefly reviews the literature on the hyperpath problem in transit routing. Section 3 presents the basic analysis of common-lines problem with general headway distributions, as well as the algorithms for finding optimal paths in a transit network. Section 4 describes the sources of headway data and discusses the fitting procedure and results. Section 5 presents the results of numerical experiments, including hyperpath routing in a large-scale CTA bus network. Section 6 concludes the paper.

@&#LITERATURE REVIEW@&#

The concept of hyperpath appears to originate from the study of common bus lines by Chriqui and Robillard (1975). This seminal paper shows that passengers can select a set of attractive lines and board the first arriving bus in that set in order to minimize the expected total travel time. Spiess and Florian (1989) extends this notion of strategy to a general transit network, namely, the choice of an attractive set of lines is considered at each node where boarding occurs. Nguyen and Pallottino (1988) interpret the above strategy as a hyperpath, which is an acyclic directed graph. They propose both label correcting and label setting algorithms for finding the optimal hyperpaths between a pair of nodes. Volpentesta (2008) proposes a polynomial algorithm to solve one-to-all and one-to-one hyperpath problem. The above hyperpath routing model has been extended and incorporated by many into transit assignment (see e.g. Nguyen & Pallottino, 1988). These studies mostly focus on the interactions between transit route choice and congestion effects (overcrowding), which may be modeled through the effective frequency approach (Spiess & Florian, 1989; de Cea & Fernández, 1993; Wu, Florian, & Marcotte, 1994; Cominetti & Correa, 2001; Cepeda, Cominetti, & Florian, 2006), explicit capacity constraints (Marcotte & Nguyen, 1998; Hamdouch, Marcotte, & Nguyen, 2004; Teklu, 2008), failure-to-board probabilities (Kurauchi, Bell, & Schmöcker, 2003; Schmöcker, Bell, & Kurauchi, 2008; Schmöcker, Fonzone, Shimamoto, Kurauchi, & Bell, 2011), and the queueing theory (Trozzi, Hosseinloo, Gentile, & Bell, 2010; Trozzi, Gentile, Bell, & Kaparias, 2013). Nguyen, Pallottino, and Gendreau (1998) propose a transit assignment model that distributes flows on optimal hyperpaths using a logit model, which may be viewed as an extension of Dial’s celebrated STOCH algorithm (Dial, 1979) in transit networks. The focus of their work, however, is to develop an efficient loading procedure to obviate path enumeration, rather than modeling congestion effects. More recently, DAcierno, Gallo, and Montella (2010) apply an ant-colony optimization (ACO) algorithm (see e.g. DAcierno, Montella, & De Lucia, 2006) to solve the hyperpath-based traffic assignment problem. Their study compares the efficiency of ACO algorithm with that of the Method of Successive Averages (MSA). We note that there is another class of models that perform transit assignment based on detailed schedule instead of average frequency. Since this paper is focused on the frequency-based approach, we refer the reader to Tong and Wong (1998) and Wilson and Nuzzolo (2008) for details of this line of work.


                     Bell (2009) adapts the hyperpath concept to model the reliable routing problem, by interpreting random road travel times as the analogy of the waiting times for transit lines. A hyperpath version of the popular A-star algorithm, known as the hyperstar algorithm, is developed and later extended to the time-dependent case (Bell, Trozzi, Hosseinloo, Gentile, & Fonzone, 2012). Schmöcker, Bell, Kurauchi, and Shimamoto (2009) show that the set of paths generated by a multi-agent, zero-sum game in a network with random road travel time is equivalent to the hyperpath of transit assignment. More recently, Ma, Fukuda, and Schmöcker (2012) explore and compare a variety of implementation issues associated with the hyperstart algorithm, and Noh, Hickman, and Khani (2012) integrate the concept of hyperpath with a schedule-based transit network representation. extend schedule-based transit model to a dynamic transit assignment problem where travel demand is time-dependent.

Central to the hyperpath finding problem is the calculation of expected waiting time at stops. Early studies indicate that the expected waiting time for a single transit line can be estimated from the mean and variance of headway (see e.g. Welding, 1957; Holroyd & Scraggs, 1966; Osuna & Newell, 1972; Seddon & Day, 1974). When multiple lines are present, the expected waiting time depends on the probability of taking each line, i.e. the route choice probability, which in turn is affected by the availability of information, routing strategy and headway distributions. In most literature, the route choice probability is derived from frequencies of each routes (see e.g. Spiess & Florian, 1989; Nguyen & Pallottino, 1988). Among the factors that influence route choice probability, the type of headway distributions affects the computation of expected waiting time the most. Conventionally, headway is assumed as exponentially distributed. Consequently, the expected waiting time can be computed in closed form, which greatly improves the computational efficiency in optimal hyperpath search. However, pure random arrival of transit vehicles implies that the expected waiting time for any given line equals its average headway regardless of passengers’ arrival time, which seems overly conservative except for bus services with very small headway (O’Flaherty & Mangan, 1970).

Other types of headway distributions have been considered by several authors. Marguier and Ceder (1984) analyze the waiting time and route choice probabilities in a two-line example, assuming the headways follow either power or Gamma distribution. Hickman and Wilson (1995) model bus headway using lognormal distributions in a simulation study. Gendreau (1984) propose to approximate the line headway distributions by Erlang distribution, which is a special case of Gamma distribution but has better analytical tractability. Erlang distributions are also adopted in Bouzaïene-Ayari, Gendreau, and Nguyen (2001) and Gentile, Nguyen, and Pallottino (2005) to model route choice in the common-lines problem. More recently, Ruan and Lin (2009) fit a sample of observed headway data collected in Chicago to four different distributions, and conclude that Gamma distribution achieves the highest goodness-of-fit. Theirs appears to be the only recent empirical study on bus headway distributions identified in our reading of literature.

The common-lines problem that forms the basis of the hyperpath routing model considered in this paper is built on the following assumptions.
                           Assumption 1
                           The headway of different transit lines is an independent random variable with a known probabilistic distribution.

Travel time between consecutive stops on any transit line is deterministic.

Passengers arrive at stops randomly (i.e. following a poisson distribution). This implies that they do no adjust their arrival time according to the published schedule.

Passengers do not have any real-time information (e.g. arrival times of the next vehicle), but can reliably estimate the remaining line travel time, i.e. the expected travel time from the stop to the destination, once boarded a vehicle of the line.

Passengers aim to minimize their total expected travel time to the destination.

Note that these assumptions are fairly standard in the literature, see e.g. Gentile et al. (2005).

We consider route choice at a stop where the number of available transit lines is denoted as 
                           
                              L
                              =
                              {
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              M
                              }
                           
                        . Without loss of generality, we assume any line 
                           
                              l
                              ∈
                              L
                           
                         can reach the passenger’s destination S, regardless of the actual path from the stop onward. Let 
                           
                              
                                 
                                    s
                                 
                                 
                                    l
                                 
                              
                           
                         be the expected waiting time upon boarding line l, and 
                           
                              
                                 
                                    
                                       
                                          h
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         be the random headway and waiting time associated with line l. The probability density functions of 
                           
                              
                                 
                                    
                                       
                                          h
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         are denoted as 
                           
                              
                                 
                                    g
                                 
                                 
                                    l
                                 
                              
                              (
                              ·
                              )
                           
                         and 
                           
                              
                                 
                                    f
                                 
                                 
                                    l
                                 
                              
                              (
                              ·
                              )
                           
                        , respectively. Accordingly, 
                           
                              
                                 
                                    G
                                 
                                 
                                    l
                                 
                              
                              (
                              ·
                              )
                           
                         and 
                           
                              
                                 
                                    F
                                 
                                 
                                    l
                                 
                              
                              (
                              ·
                              )
                           
                         represent the cumulative distribution function of 
                           
                              
                                 
                                    
                                       
                                          h
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                        . Finally, let 
                           
                              R
                              ∈
                              Ω
                           
                         denote an attractive set, where 
                           
                              Ω
                           
                         is the collection of all subsets of L. R is called “attractive” in that passengers will board the first arriving vehicle in R. Thus, the probability to board line l when 
                           
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                              =
                              t
                           
                        , denoted as 
                           
                              
                                 
                                    γ
                                 
                                 
                                    l
                                 
                              
                              (
                              t
                              )
                           
                        , is
                           
                              (1)
                              
                                 
                                    
                                       γ
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 Pr
                                 (
                                 
                                    
                                       
                                          
                                             w
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       l
                                    
                                 
                                 =
                                 t
                                 )
                                 
                                    
                                       Π
                                    
                                    
                                       k
                                       ∈
                                       R
                                       /
                                       {
                                       l
                                       }
                                    
                                 
                                 Pr
                                 (
                                 
                                    
                                       
                                          
                                             w
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       k
                                    
                                 
                                 ⩾
                                 t
                                 )
                                 =
                                 
                                    
                                       f
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 t
                                 )
                                 
                                    
                                       Π
                                    
                                    
                                       k
                                       ∈
                                       R
                                       /
                                       {
                                       l
                                       }
                                    
                                 
                                 (
                                 1
                                 -
                                 
                                    
                                       F
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 t
                                 )
                                 )
                              
                           
                        Accordingly, the overall probability of boarding l, denoted as 
                           
                              
                                 
                                    π
                                 
                                 
                                    l
                                 
                              
                           
                        , is given by
                           
                              (2)
                              
                                 
                                    
                                       π
                                    
                                    
                                       l
                                    
                                 
                                 =
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       ∞
                                    
                                 
                                 γ
                                 (
                                 t
                                 )
                                 dt
                              
                           
                        The probability that the waiting time at the stop equals t, denoted as 
                           
                              
                                 
                                    W
                                 
                                 
                                    R
                                 
                              
                              (
                              t
                              )
                           
                        , is
                           
                              (3)
                              
                                 θ
                                 (
                                 t
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          l
                                          ∈
                                          R
                                       
                                    
                                 
                                 γ
                                 (
                                 t
                                 )
                              
                           
                        Therefore, the expected waiting time at the stop, denoted as 
                           
                              E
                              [
                              
                                 
                                    W
                                 
                                 
                                    R
                                 
                              
                              ]
                           
                        , can be obtained as
                           
                              (4)
                              
                                 E
                                 [
                                 
                                    
                                       W
                                    
                                    
                                       R
                                    
                                 
                                 ]
                                 =
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       ∞
                                    
                                 
                                 t
                                 θ
                                 (
                                 t
                                 )
                                 dt
                              
                           
                        The expected total travel time to the destination, starting at the stop and corresponding to an attractive set R is then
                           
                              (5)
                              
                                 
                                    
                                       u
                                    
                                    
                                       R
                                    
                                 
                                 =
                                 E
                                 [
                                 
                                    
                                       W
                                    
                                    
                                       R
                                    
                                 
                                 ]
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          l
                                          ∈
                                          R
                                       
                                    
                                 
                                 
                                    
                                       π
                                    
                                    
                                       l
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       l
                                    
                                 
                                 .
                              
                           
                        Since the line waiting time 
                           
                              
                                 
                                    
                                       
                                          w
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         is difficult to observe, its PDF is typically estimated from that of the random headway 
                           
                              
                                 
                                    
                                       
                                          h
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         using the following relationship (see e.g. Larson & Odoni, 1981)
                           
                              (6)
                              
                                 
                                    
                                       f
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 
                                    
                                       λ
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 1
                                 -
                                 
                                    
                                       G
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 t
                                 )
                                 )
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    λ
                                 
                                 
                                    l
                                 
                              
                              =
                              1
                              /
                              E
                              (
                              
                                 
                                    
                                       
                                          h
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                              )
                           
                        , or the average arrival rate.

Given 
                           
                              
                                 
                                    f
                                 
                                 
                                    l
                                 
                              
                              (
                              t
                              )
                           
                        , it is easy to see that the corresponding 
                           
                              
                                 
                                    F
                                 
                                 
                                    l
                                 
                              
                              (
                              t
                              )
                           
                         can be obtained by
                           
                              (7)
                              
                                 
                                    
                                       F
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       t
                                    
                                 
                                 
                                    
                                       f
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 w
                                 )
                                 dw
                              
                           
                        Therefore, for a general distribution, the calculation of 
                           
                              
                                 
                                    π
                                 
                                 
                                    l
                                 
                              
                           
                         and 
                           
                              E
                              [
                              
                                 
                                    W
                                 
                                 
                                    R
                                 
                              
                              ]
                           
                         may involve a two-dimension integration (cf. Eqs. (1) and (7)). Since the calculation of the attractive set R involves enumerating all possible combinations of lines at the stop, the two-dimension integration is computational demanding for large-scale networks.

Passengers will always choose the best attractive set 
                           
                              
                                 
                                    R
                                 
                                 
                                    ∗
                                 
                              
                           
                         such that their expected travel time 
                           
                              
                                 
                                    u
                                 
                                 
                                    
                                       
                                          R
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              
                           
                         to the destination is minimized, i.e.
                           
                              (8)
                              
                                 
                                    
                                       u
                                    
                                    
                                       
                                          
                                             R
                                          
                                          
                                             ∗
                                          
                                       
                                    
                                 
                                 ⩽
                                 
                                    
                                       u
                                    
                                    
                                       R
                                    
                                 
                                 =
                                 E
                                 [
                                 
                                    
                                       W
                                    
                                    
                                       R
                                    
                                 
                                 ]
                                 +
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          l
                                          ∈
                                          R
                                       
                                    
                                 
                                 
                                    
                                       π
                                    
                                    
                                       l
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       l
                                    
                                 
                                 ,
                                 ∀
                                 R
                                 ∈
                                 Ω
                              
                           
                        Searching 
                           
                              
                                 
                                    R
                                 
                                 
                                    ∗
                                 
                              
                           
                         can be challenging for large M since the size of 
                           
                              Ω
                           
                         is 
                           
                              
                                 
                                    2
                                 
                                 
                                    M
                                 
                              
                           
                        . For special headway distributions, the efficiency of the search process may be significantly improved, as shown below.

When 
                           
                              
                                 
                                    
                                       
                                          h
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         is exponentially distributed, we have closed form formulae for line boarding probabilities and expected waiting time as follows (see e.g. Spiess & Florian, 1989):
                           
                              (9)
                              
                                 
                                    
                                       π
                                    
                                    
                                       l
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             ∈
                                             R
                                          
                                       
                                       
                                          
                                             λ
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 E
                                 [
                                 
                                    
                                       W
                                    
                                    
                                       R
                                    
                                 
                                 ]
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             ∈
                                             R
                                          
                                       
                                       
                                          
                                             λ
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                           
                        
                     

When the headway 
                           
                              
                                 
                                    
                                       
                                          h
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    l
                                 
                              
                           
                         follows Erlang distribution, we have closed form for waiting time distribution. Note that Erlang distribution is a special case of Gamma distribution with the shape parameter 
                           
                              
                                 
                                    k
                                 
                                 
                                    l
                                 
                              
                           
                         being an integer (the rate parameter is denoted as 
                           
                              
                                 
                                    λ
                                 
                                 
                                    l
                                 
                              
                           
                        ). The PDF of the waiting time distribution can be calculated using
                           
                              (11)
                              
                                 
                                    
                                       f
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                    
                                    
                                       
                                          
                                             k
                                          
                                          
                                             l
                                          
                                       
                                    
                                 
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                       t
                                    
                                 
                                 
                                    s
                                 
                                 
                                    
                                       um
                                    
                                    
                                       n
                                       =
                                       0
                                    
                                    
                                       
                                          
                                             k
                                          
                                          
                                             l
                                          
                                       
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       1
                                    
                                    
                                       n
                                       !
                                    
                                 
                                 
                                    
                                       (
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                       t
                                       )
                                    
                                    
                                       n
                                    
                                 
                                 .
                              
                           
                        Accordingly, the CDF of waiting time can be calculated by integration.
                           
                              (12)
                              
                                 
                                    
                                       F
                                    
                                    
                                       l
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       t
                                    
                                 
                                 
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                    
                                    
                                       
                                          
                                             k
                                          
                                          
                                             l
                                          
                                       
                                    
                                 
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                       w
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          n
                                          =
                                          0
                                       
                                       
                                          
                                             
                                                k
                                             
                                             
                                                l
                                             
                                          
                                          -
                                          1
                                       
                                    
                                 
                                 
                                    
                                       1
                                    
                                    
                                       n
                                       !
                                    
                                 
                                 
                                    
                                       (
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                       w
                                       )
                                    
                                    
                                       n
                                    
                                 
                                 dw
                                 =
                                 1
                                 -
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                       t
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          n
                                          =
                                          0
                                       
                                       
                                          
                                             
                                                k
                                             
                                             
                                                l
                                             
                                          
                                          -
                                          1
                                       
                                    
                                 
                                 
                                    
                                       1
                                    
                                    
                                       n
                                       !
                                    
                                 
                                 (
                                 1
                                 -
                                 
                                    
                                       n
                                    
                                    
                                       
                                          
                                             k
                                          
                                          
                                             l
                                          
                                       
                                    
                                 
                                 )
                                 
                                    
                                       (
                                       
                                          
                                             λ
                                          
                                          
                                             l
                                          
                                       
                                       t
                                       )
                                    
                                    
                                       n
                                    
                                 
                              
                           
                        
                     

Given CDF and PDF of the waiting time distribution, the route choice probability can be calculated in Eq. (2) by one-dimension integration.

To validate the analytical results for the single-stop transit route choice model presented in the previous section, a discrete event simulation is conducted. In the simulation, each line is dispatched from a stop according to the given headway distribution. Passengers arrive at the stop following a Poisson process, and always board the first incoming bus. The probability of boarding each line is calculated as the number of passengers who board that line divided by the total number of passengers arriving at the stop in the simulation horizon T. We test different running lengths T to see if the system reaches a steady state, for which the analytical results hold. It is worth noting that in the simulation the passengers do not calculate the attractive set. Rather, they simply board the first bus that is dispatched from the stop. To compare the simulation results with the analytical results, a three-line example is constructed such that all of the three line are included in the attractive set. The line attributes are reported in Table 1
                        .


                        Tables 2 and 3
                        
                         report simulated and analytical results for the Exponential and Erlang headway distributions, respectively. For Erlang distributions, all three lines are assumed to have the same shape parameter 
                           
                              k
                              =
                              9
                           
                        , which implies that the standard deviation is one third of the mean. These tables compare results corresponding to three different simulation periods (T). The results reveal noticeable differences between simulated and analytical results for shorter simulation periods (1000 and 10,000minutes). This is expected because in theory the analytical formula only holds when the system reaches the steady state. When 
                           
                              T
                              =
                              1
                              ,
                              000
                              ,
                              000
                           
                         minutes (which closely resembles a steady state), the simulated results are clearly converging to the predictions of the analytical formulae.

In this study, a stop in a transit network is represented as in illustrated Fig. 1
                        . At the center of the stop layout is the so-called transfer node, represented using a solid blue square in the figure. For simplicity, we always assume a journey starts at a transfer node. For each transit line that passes a stop, two dummy nodes are created, corresponding to alighting and boarding maneuvers. For easy reference, the node associated with alighting is called a “transit node”, represented as a solid blue circle in the figure. The node associated with boarding is called “dwell node”, represented as solid gray circle in the figure. Accordingly, there are five types of links as detailed below.
                           
                              
                                 Boarding link Connecting a transfer node to a dwell node.


                                 Alighting link Connecting a transit node to a transfer node.


                                 Dwell link Connecting a transit node to a dwell node.


                                 Transit link Connecting dwell node to the transit node at the next stop.


                                 Walking link Connecting one transfer node to a neighboring node through walking. Walking links are created between stops that are deemed by the modeler as “close enough” for walking at a normal speed (e.g. 5kilometer/hour).

The sets of transit, dwell and transfer nodes will be referred to as 
                           
                              
                                 
                                    N
                                 
                                 
                                    t
                                 
                              
                              ,
                              
                                 
                                    N
                                 
                                 
                                    d
                                 
                              
                           
                         and 
                           
                              
                                 
                                    N
                                 
                                 
                                    s
                                 
                              
                           
                        , respectively. The set of all nodes 
                           
                              N
                              =
                              
                                 
                                    N
                                 
                                 
                                    t
                                 
                              
                              ⋃
                              
                                 
                                    N
                                 
                                 
                                    d
                                 
                              
                              ⋃
                              
                                 
                                    N
                                 
                                 
                                    s
                                 
                              
                           
                        . The sets of boarding, alighting, dwell, transit, and walking links are referred as 
                           
                              
                                 
                                    A
                                 
                                 
                                    b
                                 
                              
                              ,
                              
                                 
                                    A
                                 
                                 
                                    a
                                 
                              
                              ,
                              
                                 
                                    A
                                 
                                 
                                    d
                                 
                              
                              ,
                              
                                 
                                    A
                                 
                                 
                                    t
                                 
                              
                           
                         and 
                           
                              
                                 
                                    A
                                 
                                 
                                    w
                                 
                              
                           
                        , respectively, and the set of all links 
                           
                              A
                              =
                              
                                 
                                    A
                                 
                                 
                                    b
                                 
                              
                              ⋃
                              
                                 
                                    A
                                 
                                 
                                    a
                                 
                              
                              ⋃
                              
                                 
                                    A
                                 
                                 
                                    d
                                 
                              
                              ⋃
                              
                                 
                                    A
                                 
                                 
                                    t
                                 
                              
                              ⋃
                              
                                 
                                    A
                                 
                                 
                                    w
                                 
                              
                           
                        . Furthermore, each link a is associated with three attributes: 
                           
                              
                                 
                                    τ
                                 
                                 
                                    l
                                 
                              
                           
                         as the running time, and 
                           
                              
                                 
                                    h
                                 
                                 
                                    l
                                 
                              
                           
                         and 
                           
                              
                                 
                                    v
                                 
                                 
                                    l
                                 
                              
                           
                         as the mean and variance of the headway of the transit line. Importantly, these attributes are set accordingly to the link type, as explained below:
                           
                              
                                 
                                    
                                       a
                                       ∈
                                       
                                          
                                             A
                                          
                                          
                                             b
                                          
                                       
                                    
                                  
                                 
                                    
                                       
                                          
                                             h
                                          
                                          
                                             a
                                          
                                       
                                    
                                  and 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             a
                                          
                                       
                                    
                                  are mean and variance of the headway of the transit line. 
                                    
                                       
                                          
                                             τ
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                    
                                 .


                                 
                                    
                                       a
                                       ∈
                                       
                                          
                                             A
                                          
                                          
                                             a
                                          
                                       
                                    
                                  
                                 
                                    
                                       
                                          
                                             h
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                    
                                 . 
                                    
                                       
                                          
                                             τ
                                          
                                          
                                             a
                                          
                                       
                                    
                                  is set to the lost time due to alighting (0.1minutes in the case study).


                                 
                                    
                                       a
                                       ∈
                                       
                                          
                                             A
                                          
                                          
                                             d
                                          
                                       
                                    
                                  
                                 
                                    
                                       
                                          
                                             h
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                       ,
                                       
                                          
                                             τ
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                    
                                 .


                                 
                                    
                                       a
                                       ∈
                                       
                                          
                                             A
                                          
                                          
                                             t
                                          
                                       
                                    
                                  
                                 
                                    
                                       
                                          
                                             h
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                    
                                 . 
                                    
                                       
                                          
                                             τ
                                          
                                          
                                             a
                                          
                                       
                                    
                                  is the expected running time between the corresponding stops.


                                 
                                    
                                       ∈
                                       
                                          
                                             A
                                          
                                          
                                             w
                                          
                                       
                                    
                                  
                                 
                                    
                                       
                                          
                                             h
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       0
                                    
                                 . 
                                    
                                       
                                          
                                             τ
                                          
                                          
                                             a
                                          
                                       
                                    
                                  is the walking time.

We first explain how 
                           
                              
                                 
                                    R
                                 
                                 
                                    ∗
                                 
                              
                           
                        , the optimal attractive set, may be identified in the common-lines problem. Algorithm 1 details the procedure of a widely adopted algorithm called the greedy method, which adds candidate lines into the attractive set according to an increasing order of 
                           
                              
                                 
                                    s
                                 
                                 
                                    l
                                 
                              
                           
                        .
                           Algorithm 1
                           Greedy algorithm for finding 
                                 
                                    
                                       
                                          R
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               
                              
                                 
                                    
                                       
                                       
                                          
                                             1: initialize:
                                             
                                          
                                          
                                             2: Rank 
                                                   
                                                      L
                                                      =
                                                      1
                                                      ,
                                                      2
                                                      ,
                                                      …
                                                      ,
                                                      M
                                                   
                                                 such that 
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      <
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                      ,
                                                      ⋯
                                                      ,
                                                      <
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            M
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             3: Set 
                                                   
                                                      R
                                                      =
                                                      {
                                                      1
                                                      }
                                                   
                                                . Compute 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                      
                                                   
                                                 using Eq. (5). Set 
                                                   
                                                      l
                                                      =
                                                      2
                                                   
                                                .
                                          
                                          
                                             4: while 
                                                
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                      <
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                      
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             5: Set 
                                                   
                                                      R
                                                      =
                                                      R
                                                      ⋃
                                                      l
                                                   
                                                
                                             
                                          
                                          
                                             6: Compute 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                      
                                                   
                                                 using Eq. (5).
                                          
                                          
                                             7: Set 
                                                   
                                                      l
                                                      =
                                                      l
                                                      +
                                                      1
                                                   
                                                .
                                          
                                          
                                             8: end while
                                             
                                          
                                          
                                             9: Set 
                                                   
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      =
                                                      R
                                                   
                                                .
                                          
                                       
                                    
                                 
                              
                           

It is clear that the above algorithm has a complexity of 
                           
                              O
                              (
                              M
                              )
                           
                         (in addition to the effort of ranking the lines), which is much better than having to search every element in 
                           
                              Ω
                           
                        . Unfortunately, the greedy method guarantees to find the optimal solution only when the headway is exponentially distributed. To see this, note that the correctness of the greedy algorithm depends on the following relationship
                           
                              
                                 
                                    
                                       u
                                    
                                    
                                       Q
                                    
                                 
                                 <
                                 
                                    
                                       u
                                    
                                    
                                       R
                                    
                                 
                                 ⇔
                                 
                                    
                                       s
                                    
                                    
                                       p
                                       +
                                       1
                                    
                                 
                                 <
                                 
                                    
                                       u
                                    
                                    
                                       R
                                    
                                 
                                 ,
                                 
                                 ∀
                                 p
                                 =
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 M
                                 -
                                 1
                                 }
                              
                           
                        where 
                           
                              R
                              =
                              {
                              1
                              ,
                              …
                              ,
                              p
                              }
                           
                         and 
                           
                              Q
                              =
                              R
                              ⋃
                              {
                              p
                              +
                              1
                              }
                           
                        . When 
                           
                              
                                 
                                    EW
                                 
                                 
                                    R
                                 
                              
                           
                         and 
                           
                              
                                 
                                    π
                                 
                                 
                                    l
                                 
                              
                           
                         are given by (10) and (9) respectively, we have
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   Q
                                                
                                             
                                             <
                                             
                                                
                                                   u
                                                
                                                
                                                   R
                                                
                                             
                                             ⇔
                                          
                                       
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   Q
                                                
                                             
                                             =
                                             
                                                
                                                   1
                                                   +
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         l
                                                         ∈
                                                         P
                                                      
                                                   
                                                   
                                                      
                                                         π
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         l
                                                         ∈
                                                         P
                                                      
                                                   
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         p
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                             <
                                             
                                                
                                                   1
                                                   +
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         l
                                                         ∈
                                                         P
                                                      
                                                   
                                                   
                                                      
                                                         π
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         l
                                                         ∈
                                                         P
                                                      
                                                   
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             ⇔
                                          
                                       
                                       
                                          
                                             
                                                
                                                   s
                                                
                                                
                                                   p
                                                   +
                                                   1
                                                
                                             
                                             <
                                             
                                                
                                                   1
                                                   +
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         l
                                                         ∈
                                                         P
                                                      
                                                   
                                                   
                                                      
                                                         π
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         l
                                                         ∈
                                                         P
                                                      
                                                   
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                
                                             
                                             =
                                             
                                                
                                                   u
                                                
                                                
                                                   R
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Since the above proof relies on (10) and (9), it does not hold for general expressions of 
                           
                              E
                              (
                              
                                 
                                    W
                                 
                                 
                                    R
                                 
                              
                              )
                           
                         and 
                           
                              
                                 
                                    π
                                 
                                 
                                    l
                                 
                              
                           
                        . In those cases, the greedy algorithm may only be considered a heuristic. For general headway distributions, a brute-force enumeration algorithm has to be used to avoid sub-optimal solutions.
                           Algorithm 2
                           Enumeration algorithm for finding 
                                 
                                    
                                       
                                          R
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               
                              
                                 
                                    
                                       
                                       
                                          
                                             1: initialize:
                                             
                                          
                                          
                                             2: Set 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      =
                                                      ∞
                                                   
                                                .
                                          
                                          
                                             3: for all 
                                                   
                                                      R
                                                      ∈
                                                      Ω
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             4: Compute 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                      
                                                   
                                                 using Eq. (5).
                                          
                                          
                                             5: 
                                                if 
                                                
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                      
                                                      <
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             6: 
                                                Set 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            R
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      =
                                                      R
                                                   
                                                .
                                          
                                          
                                             7: 
                                                end if
                                             
                                          
                                          
                                             8: end for
                                             
                                          
                                       
                                    
                                 
                              
                           

We are now ready to present the algorithm for finding optimal hyperpaths to a given destination stop, denoted as S, from all other stops in a transit network. Like a standard shortest path problem, this problem can also be solved based on dynamic programming. The main difference is that the decision at a transfer node (i.e. the so-called embedded problem in dynamic programming) may involve choosing a subset of outgoing links, as opposed to just one link as in the standard shortest path problem. Either label-correcting or label-setting methods may be used. For brevity, only the label-setting algorithm is presented below. Note that our numerical experiments show that the label-setting algorithm is significantly more efficient than the label-correcting counterpart. In the description of 
                           Algorithm 3
                        , Q is the set of candidate nodes; 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                              
                           
                         is the current attractive set at link 
                           
                              i
                              ;
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         is the optimal total expected travel time starting from stop i; and 
                           
                              I
                              (
                              i
                              )
                           
                         and 
                           
                              O
                              (
                              i
                              )
                           
                         denote the set of incoming and outgoing links associated with node i.

Two remarks are in order here. First, the above algorithm is designed to deal with general headway distributions. A more efficient design may be achieved if all headway distributions are exponential. Second, the candidate list Q is implemented as a binary tree. Other data structures may be used to reduce the time for finding the minimum label.
                           Algorithm 3
                           Label-setting hyperpath (LSH) algorithm 
                                 
                                    
                                       
                                       
                                          
                                             1: initialize:
                                             
                                          
                                          
                                             2: 
                                                   
                                                      ∀
                                                      i
                                                      ∈
                                                      N
                                                   
                                                , set 
                                                   
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      ∅
                                                      ;
                                                      
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      inf
                                                   
                                                
                                             
                                          
                                          
                                             3: Set 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            S
                                                         
                                                      
                                                      =
                                                      0
                                                      ;
                                                      Q
                                                      =
                                                      {
                                                      S
                                                      }
                                                   
                                                , which is implemented as a binary tree ranked based on 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             4: while 
                                                
                                                   
                                                      Q
                                                      
                                                      ≠
                                                      
                                                      ∅
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             5: Take the first node j (
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                   
                                                 is the minimum among all 
                                                   
                                                      j
                                                      ∈
                                                      Q
                                                   
                                                ). Remove j from Q.
                                          
                                          
                                             6: 
                                                for all links 
                                                   
                                                      a
                                                      ∈
                                                      I
                                                      (
                                                      j
                                                      )
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             7: 
                                                Set i as the tail node of a.
                                          
                                          
                                             8: 
                                                
                                                if 
                                                
                                                   
                                                      i
                                                      ∈
                                                      
                                                         
                                                            N
                                                         
                                                         
                                                            t
                                                         
                                                      
                                                   
                                                 and 
                                                   
                                                      a
                                                      ∈
                                                      
                                                         
                                                            A
                                                         
                                                         
                                                            b
                                                         
                                                      
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             9: 
                                                
                                                Construct a common-lines problem as follows.
                                          
                                          
                                             10: 
                                                
                                                Set 
                                                   
                                                      L
                                                      =
                                                      {
                                                      l
                                                      |
                                                      ∀
                                                      l
                                                      ∈
                                                      O
                                                      (
                                                      i
                                                      )
                                                      ∩
                                                      
                                                         
                                                            A
                                                         
                                                         
                                                            b
                                                         
                                                      
                                                      }
                                                   
                                                
                                             
                                          
                                          
                                             11: 
                                                
                                                For each 
                                                   
                                                      l
                                                      ∈
                                                      L
                                                   
                                                , the line travel time 
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                   
                                                 is set to 
                                                   
                                                      
                                                         
                                                            τ
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            k
                                                         
                                                      
                                                   
                                                 where 
                                                   
                                                      l
                                                      ∈
                                                      I
                                                      (
                                                      k
                                                      )
                                                   
                                                .
                                          
                                          
                                             12: 
                                                
                                                Call Algorithm 1 or 2 to get 
                                                   
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                 and 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            
                                                               
                                                                  R
                                                               
                                                               
                                                                  ∗
                                                               
                                                            
                                                         
                                                      
                                                   
                                                 with L as the input.
                                          
                                          
                                             13: 
                                                
                                                
                                                if 
                                                
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            
                                                               
                                                                  R
                                                               
                                                               
                                                                  ∗
                                                               
                                                            
                                                         
                                                      
                                                      <
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             14: 
                                                
                                                
                                                Set 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            
                                                               
                                                                  R
                                                               
                                                               
                                                                  ∗
                                                               
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             15: 
                                                
                                                
                                                
                                                if 
                                                i is not in Q 
                                                then
                                             
                                          
                                          
                                             16: 
                                                
                                                
                                                
                                                Insert i into Q based on 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             17: 
                                                
                                                
                                                
                                                else
                                             
                                          
                                          
                                             18: 
                                                
                                                
                                                
                                                Remove i from Q, and re-insert it back based on the updated 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             19: 
                                                
                                                
                                                
                                                end If
                                             
                                          
                                          
                                             20: 
                                                
                                                
                                                end If
                                             
                                          
                                          
                                             21: 
                                                
                                                else
                                             
                                          
                                          
                                             22: 
                                                
                                                Set 
                                                   
                                                      U
                                                      =
                                                      
                                                         
                                                            τ
                                                         
                                                         
                                                            a
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             23: 
                                                
                                                
                                                if 
                                                
                                                   
                                                      U
                                                      <
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             24: 
                                                
                                                
                                                Set 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      U
                                                      ,
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      {
                                                      a
                                                      }
                                                   
                                                .
                                          
                                          
                                             25: 
                                                
                                                
                                                
                                                If 
                                                i is not in Q 
                                                then
                                             
                                          
                                          
                                             26: 
                                                
                                                
                                                
                                                Insert i into Q based on 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             27: 
                                                
                                                
                                                
                                                else
                                             
                                          
                                          
                                             28: 
                                                
                                                
                                                
                                                Remove i from Q, and re-insert it back based on the updated 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                .
                                          
                                          
                                             29: 
                                                
                                                
                                                
                                                end If
                                             
                                          
                                          
                                             30: 
                                                
                                                
                                                end If
                                             
                                          
                                          
                                             31: 
                                                
                                                end If
                                             
                                          
                                          
                                             32: 
                                                end for
                                             
                                          
                                          
                                             33: end while
                                             
                                          
                                       
                                    
                                 
                              
                           

Two main data sources from Chicago Transit Authority (CTA) will be used to construct case studies. The first source is the General Transit Feed Specification (GTFS) data published by CTA through Google’s GTFS project. The GTFS data, which contains schedules and associated geographic information, is used to create the transit network topology consistent with Fig. 1. We note that each transit link defined in Fig. 1 corresponds to a unique pattern of a route. CTA often runs a route in different patterns depending on the time of day. Thus, the services are defined with respect to patterns instead of routes. When the GTFS data are processed, the trips stopping at the exactly same sequence of stops are grouped into one pattern.

The second source is the automatic vehicle location (AVL) data that feeds CTA’s BusTracker Application. The AVL data includes detailed transit vehicle space–time trajectories that can be used to derive various transit performance metrics, such as headway and inter-stop travel time. The trajectories used in this study are from a sample of the CTA’s bus AVL data collected in the July of 2011. Fig. 2
                        (a) depicts the network of CTA stops and bus lines active between 6 AM and 10 AM on weekdays in the July of 2011, which will be used in the case study later. The network, which will be referred to as CTA morning bus (CTAMB) network, consists of 125 routes, 1577 patterns, 11,179 stops and 15,081 stop-pattern combinations (note that each stop-pattern combination corresponds to a transit node in Fig. 1). Fig. 2(b) shows the trajectories of a particular pattern associated with route 151 on July 1st, 2011. Note that actual headway data can be retrieved from these trajectories for each stop of any given pattern, and then be fit into various distribution. To this effort we now turn.

This section will fit the actual headway data obtained from bus trajectories to various distributions using @Risk, a commercial software tool for analyzing risk and uncertainty.
                           1
                           See http://www.palisade.com/risk/.
                        
                        
                           1
                         Since there is no underlying physical basis implying which type of distribution would suit the bus headway distribution, we fit six commonly used distributions for positive random variables, namely Exponential, Erlang, Gamma, Weibull, LogLogistic and LogNormal distributions.

For the purpose of demonstration, Stop Michigan & Cullerton on CTA Route 1 is selected as an example. In total, 524 valid headway observations are extracted for this stop from the bus trajectories recorded between 6 AM and 6 PM on weekdays in July 2011. The headway sample has a mean of 14.85minutes and a standard deviation of 6.17minutes. Using @Risk, The distribution parameters are estimated using the maximum likelihood estimation (MLE) method, and three popular goodness-of-fit (GOF) tests, namely Chi-Square, Anderson–Darling (A–D) and Kolmogorov–Smirnov (K–S), are conducted.


                        Table 4
                         presents the values of the three GOF as well as the parameters of the fitted distributions. Note that different GOF tests do not necessarily generate consistent results in terms of ranking. From the table, we see that Chi-Square test ranks Erlang as the best while both A–D and K–S tests pick LogLogistic as the best. It seems that differences in all three GOF values are rather small for Erlang, Gamma and LogLogistic. Exponential distribution, however, is notably inferior to other candidates: its GOF values are the largest in all three tests.

We now fit the headway of all 15,081 stop-pattern combinations in the aforementioned CTAMB network using the same procedure. The number of headway observations for each combination ranges from 113 to 634 depending on how many trajectories we have for the corresponding pattern. The sample size histogram is shown in Fig. 3
                        (a). The sample size for all headways is larger than 100, which is adequate to qualify for the distribution fitting. Fig. 3(b) shows the histogram of the headway mean for all pattern/stop pairs. It shows that 11,606 out of 15,081 headway distributions (about 77.0%) have a mean headway between 10 and 20minutes. No headway distribution have a mean headway greater than 30minutes in weekday morning peak. The average value of the headway mean is about 13.9minutes. The histogram of the headway standard deviation for all headway distributions is shown in Fig. 3(c). We see that the majority of headway distributions have a standard deviation less than 10minutes. The average headway standard deviation is about 5.1minutes. To better demonstrate the variability of the headway distribution, we plot the coefficient of variation (COV) histogram in Fig. 3(d), where COV is defined as the ratio of the standard deviation to the mean. An overwhelming majority of the headway distribution have a COV value less than 0.6. The average COV value is about 0.38. Note that the COV value is 0 for deterministic distribution, and 1 for exponential distribution. The above observation thus suggests that most headway distributions in this network may not follow exponential distribution.


                        Table 5
                         compares the six candidate distributions based on how well they fit in these 15,081 cases. Two metrics are used in this comparison to determine the best fitted distribution. The first is the number of times a given distribution is ranked as the best by a given GOF test among all candidates. For example, Erlang distribution is ranked best by Chi-Square test in 1561 out of 15,081 cases.
                           2
                           Note that, in some tests, @Risk fails to find the best fit. Failure of fitting the distribution means the MLE method cannot converge.
                        
                        
                           2
                         The second metric is the average percentage deviations of a candidate’s GOF values from the best values. The second metric is introduced to correct the potential bias of the first metric. For example, one distribution may be only slightly worse than the other in the half of the cases but significantly better in the other half. Yet, the first metric will incorrectly rank the two as indifferent.


                        Tables 2 places Exponential distribution as a distant worst performer in all six metrics, strongly suggesting that modeling headway in the CTAMB network using Exponential distribution would be problematic. On the other hand, Loglogistic consistently outperforms all the other candidates. Although Weibull is the second best for the first metric, it ranks the second worst when the second metric is used. In contrast, Gamma is the second best for the second metric and third best for the first metric. The overall fitness of Erlang is comparable to Gamma, but slightly worse (this is expected as Erlang is a special case of Gamma).

Judged solely on the goodness-of-fit, it seems that Loglogistic distribution may be the best choice. However, Erlang distribution has a significant advantage over Gamma and LogLogistic in terms of computational tractability, because the waiting time distribution can be computed in closed-form when the headway follows Erlang headway (see Section 3.2). Therefore, Erlang comes across as an ideal choice for large-scale transit routing applications, because it strikes a better balance between the realistic representation of the headway distributions and computational efficiency.

The hyperpath routing algorithm was coded in C++ based on the TNM library (Nie, 2006), and all tests were conducted on a laptop with an Intel(R) Core(TM) i7-2630QM CPU@2.00gigahertz and 8.00gigabits RAM. We first test the algorithm on a small network to validate the results, and then apply it to the aforementioned CTA morning bus network.

In this section, we present a small hypothetic network to illustrate the impact of different headway assumptions on the resulting optimal hyperpaths. The example transit network consists of three transit lines which go through the three same stops, namely A, B, and C, but with different attributes on line headway and line travel time. The network topology of the small example, represented in the format described in Section 4.1, is shown in Fig. 4
                        . Note that the squares represent the transfer stop nodes A–C and the circles represent the transit nodes. The line attributes are shown in Table 6
                        . To compare the impacts of different headway assumptions, we test the Exponential headway and Erlang headway on this small network. For simplicity, the shape parameter of Erlang headway distribution for all line-stops is set as 9. This implies that the coefficient of variation for Erlang headway distribution is about 0.333, which is realistic according to the analysis of CTA data in the previous section. In the test, stop C is the destination, passengers can travel from both stop A and stop B to the destination.

Not to our surprise, our tests generate different shortest hyperpaths for the Exponential and Erlang headway distributions. The results are shown in Fig. 5
                        . At stop B, the expected total travel time for Exponential headway distribution is 34.67minutes compared with 31.64minutes for Erlang headway distribution. Also notice that the optimal hyperpath for Exponential headway distribution includes all three lines while it only includes line 2 and line 3 for Erlang headway distribution. This is because the expected total travel time of the set of line 2 and line 3 decreases significantly as the headway variance decreases, thus, it is no longer beneficial to include line 1, which has a much longer line travel time, in the attractive set. The intuition here is that since the headway is more regular with the Erlang assumption, the optmal hyperpath may exclude the line with longer travel time.

At stop A, the expected total travel time for Exponential headway distribution is 68.57minutes compared with 64.82minutes for Erlang headway distribution. Passengers may board either line 1 or line 2, whichever comes first, for both Exponential headway distribution and Erlang headway distribution. Interestingly, with Erlang headway distribution, those passengers who board line 1 at stop A are better off if they switch at stop B to either line 2 or line 3, whichever comes first.

The example clearly demonstrates the impact of headway distribution assumptions on the hyperpath choice and the estimated user cost. In both cases, assuming exponential headway distribution leads to a different and potentially suboptimal route choice. In both cases, line 1 is mistakenly included in the attractive set at Stop B, precisely because the overestimated variances resulted from the assumption.

We now conduct routing experiments on the aforementioned CTA morning bus network (CTAMB). Again, results based on both Erlang and exponential distributions are compared. Note that all headway distributions used in this section were directly calibrated from the empirical data using the procedure described in Section 5. For computational efficiency, the greedy method is employed to generate the attractive set. The last section will examine the applicability of this heuristic method by comparing it with the brute-force enumeration method.

Four representative zones are selected in the Chicago metropolitan area, namely Downtown Chicago, North suburbs, South Suburbs and West Suburbs, as shown in Fig. 6
                        . In each zone, ten random stops are selected as the origins or destinations. Four scenarios are tested for both Exponential and Erlang headway distributions, which are North Suburbs to Downtown Chicago, South Suburbs to Downtown Chicago, West Suburbs to Downtown Chicago and Downtown Chicago to Downtown Chicago. In each scenario, trips between all O–D pairs are considered. Therefore, there are in total 90 O–D pairs in Downtown Chicago to Downtown Chicago scenario, and 100 O–D pairs for the other three scenarios.

The average performance of all four scenarios for both headway distributions are reported in Table 7
                        . Note that all performance measures are averaged over all O–D pairs in each scenario. In general, the walking time is more than twice as much as the enroute time for the within-downtown trips, while the average waiting times and speeds are considerably lower than those in the other three scenarios. In fact, the average speed for the downtown trips is almost comparable to the walking speed (assumed as 5kilometer/hour in this example). Together, these observations reflect the fact that CTA buses may not be a competitive mode of transportation for within-downtown travel, where most trips are short and the time for waiting the bus is likely too high for the total journey time. Also clear from the results is the observation that the average speed seems to increase with the trip distance, because longer trips can take advantage of the high speed on the line-haul travel.

For trips within Downtown Chicago, the total journey times obtained based on Erlang assumption is only slightly shorter than those from the Exponential assumption (around 2%). Yet, the en-route travel time (the time spent riding on buses) is about 10% higher and the walking time is 10% lower with Erlang assumption. This is expected because Erlang assumption would make transit more desirable by reducing the expected waiting time. For all other scenarios, the Erlang assumption yields travel time savings on the order of 5–9% on average. It also significantly reduces the walking time and waiting time involved in these trips. For the trips between North suburbs and Downtown Chicago, the average walking times with Erlang assumption is more than 30% lower than those with Exponential assumption; the average waiting times is almost 20% lower. Generally, the difference between Erlang and Exponential assumptions seem to rise as the trip distance increases.

We now evaluate the quality of the greedy method by comparing the results produced by the greedy and exact enumeration methods, since the analysis in Section 3 shows that the greedy algorithm cannot ensure optimality for the Erlang headway distribution.

The same four scenarios as in Section 5.2 are tested. That is to say, the greedy and enumeration methods are applied for all 390 O–D pairs with headway distributions being set as Erlang. Surprisingly, the results indicate that both methods produce the exactly same trip statistics (e.g. expected trip time, enroute time, waiting time, etc.) for all tested O–D pairs. For the limited number of cases in which the optimal hyperpaths are actually extracted and compared, no difference was detected either. In other words, the greedy method seems to be able find optimal solutions in all cases for this network.

The greedy method does significantly improve the computational efficiency of the solution procedure. To solve an all-to-one optimal hyperpath problem for the CTAMB network, the greedy method needs an average of nine seconds of CPU time, whereas the enumeration method takes about 750 s. This is a saving close to a magnitude of two.

In this study, we implement and test a label-setting algorithm to find the optimal hyperpath in large transit networks with realistic headway distributions. Two different methods for finding the attractive set are implemented in our label-setting algorithm: a greedy method and an enumeration method. The latter can ensure optimality even when the headway is not exponentially distributed. Our analysis of the empirical bus headway indicates that modeling headway using Exponential distribution may be problematic. Given the results from data fitting, we propose to model headway using Erlang distribution because it strikes a better balance between realism and computational efficiency. The main findings from the numerical experiments are:
                        
                           •
                           Exponential headway distribution consistently generates different solutions than those from the more realistic Erlang headway distribution in a real transit network;

Although the greedy method cannot guarantee optimality in theory, it always find optimal solutions in our case study. This sugggests that the approximation provided by the greedy method may be satisfactory in real settings.

The proposed hyperpath algorithm may be used to improve existing frequency-based transit assignment models and transit network design problems. Another possible direction is to incorporate real-time information (e.g. the arrival time of next buses) into hyperpath routing decisions.

@&#ACKNOWLEDGEMENT@&#

This research was supported by Center for Commercialization of Innovative Transportation Technology at Northwestern University.

@&#REFERENCES@&#

