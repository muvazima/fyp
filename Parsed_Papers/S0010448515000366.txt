@&#MAIN-TITLE@&#Approaches for the assembly simulation of skin model shapes

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Skin Model Shapes are digital part representatives comprising geometric deviations.


                        
                        
                           
                           Approaches for the relative positioning of point-based Skin Model Shapes are proposed.


                        
                        
                           
                           The approaches ground on algorithms from computational geometry and computer graphics.


                        
                        
                           
                           Applications for the assembly simulation in tolerancing are given.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Computer-aided tolerancing

Skin model shapes

Relative positioning

Registration

Assembly simulation

Industrial geometry

@&#ABSTRACT@&#


               
               
                  Even though they are weakly noticed, geometric part deviations accompany our everyday life. These geometric deviations affect the assemblability and functional compliance of products, since small part variations accumulate through large-scale assemblies and lead to malfunction as well as decreased product reliability and safety. However, the consideration of part deviations in the virtual modelling of mechanical assemblies is an ongoing challenge in computer-aided tolerancing research. This is because the resulting assembly configurations for variant parts are far more complicated than for nominal assemblies. In this contribution, two approaches for the relative positioning of point based models are highlighted and adapted to the assembly simulation of Skin Model Shapes, which are specific workpiece representatives considering geometric deviations. The first approach employs constrained registration techniques to determine the position of variant parts in an assembly considering multiple assembly steps simultaneously, whereas the second utilizes the difference surface to solve the positioning problem sequentially. The application of these approaches to computer-aided tolerancing is demonstrated, though their applicability reaches various fields of industrial geometry.
               
            

@&#INTRODUCTION@&#

Geometric deviations are inevitably observed on every manufactured workpiece  [1] and affect the quality and function of mechanical products. In order to enable part interchangeability and manufacturing process independence in serial production though the presence of these deviations, geometric dimensioning and tolerancing (GD&T) has evolved as an important task in the design of physical artefacts  [2]. This task comprises i.a. the definition of nominal geometric part specifications as well as their allowable limits from a functional and manufacturing point of view with the aim to ensure assembly and functional requirements  [3,4].

GD&T practice has led to the need for international standards, which are to offer a toolbox for the specification and non-ambiguous interpretation of tolerancing information throughout the product life-cycle  [5]. The lately revision of these standards (ISO17450-1:2011) offers a definition of a geometric specification as a condition on a characteristic, which is defined from geometric features   [6,7]. These features are created from the Skin Model, being a model of the physical interface between a part and its environment, by different operations, such as extraction or partition  [7,8]. The aim of this basic concept is to differentiate between the physical workpiece and its model in the abstract world  [8].

However, the advent of solid modelling has led to the increased use of computer-aided design (CAD), computer-aided manufacturing (CAM), as well as computer-aided tolerancing (CAT) tools in digital product development, where the latter aim at supporting the GD&T activities mainly by simulating the effects of geometric part deviations on the product requirements without the need for physical prototypes  [8]. This requires the modelling and representation of geometric deviations and tolerances in such CAT tools, which is a key issue in computer-aided tolerancing research  [9,10]. Despite the vast research interest in this topic, most of the existing approaches, from 1D/2D tolerance stack-ups to assembly modelling approaches for variational geometry, imply severe assumptions, since they reduce geometric deviations to translational and rotational part feature defects, and therefore lack of form deviation considerations  [9–14]. This has tremendous effects on the digital feature, part, and assembly representation and leads to inadequate tolerancing decisions. Furthermore, most of these approaches are not conform to the standards for geometric product specification and verification (GPS)  [15], which endorses ambiguities and misinterpretations.

In order to overcome these shortcomings of existing models for the computer-aided tolerance analysis, the concept of Skin Model Shapes has been developed, which are specific realizations of the Skin Model comprising geometric deviations brought in by manufacturing and assembly processes  [16,17]. In this regard, the concept of Skin Model Shapes is a finite model in contrast to the Skin Model, which requires an infinite description to allow the consideration of all different kinds of geometric deviations from a macro to a micro scale. Though the concept of Skin Model Shapes is not linked to a specific geometry representation scheme, a discrete geometry framework for the Skin Model Shape simulation has been developed, which employs discrete geometry representations, such as point clouds and surface meshes, and aims at generating these shapes in early as well as later design stages  [8,17–19]. These discrete geometry representations allow an integrated computer-aided GD&T process, since they are available throughout the product life-cycle from design, where they can be obtained from the CAD model by tessellation techniques, to manufacturing, inspection, and reverse engineering, where they are gathered from tactile or optical measurement systems  [20]. Furthermore, surface models comprising discrete geometry elements, such as triangles and points, enjoy increasing attention in the computer graphics and the CAD community  [21]. Fig. 1
                      illustrates the Nominal Model, the Skin Model, and the different digital representations of physical artefacts for computer-aided tolerancing.

The application of Skin Model Shapes to the computer-aided tolerance analysis requires models for simulating their relative positioning and assembly considering different kinds of geometric part deviations. In this context, the term “relative positioning” describes the positioning of a digital part representative relative to other part representatives in an assembly  [22]. The need for such models gives rise for this contribution, where the presented approaches have a strong geometric component and are therefore closely linked to the subject of Industrial Geometry   [23].

@&#RELATED WORK@&#

Various models for the assembly simulation in computer-aided tolerancing tools have been proposed, from simple 1D and 2D tolerance stack-ups  [24,25] to vectorial tolerancing and the DLM method  [26,27] and to approaches for the assembly constraint modelling and solving for variational part geometry  [22,28,29]. A rich overview of these methods is for example given in  [9,10], where it can be found, that these approaches differ in the formulation and derivation of assembly constraints and the proposed solution techniques. However, a main similarity is that they hardly allow the consideration of form deviations and are not capable of dealing with discrete geometry part representatives.

In contrast to that, local registration techniques, such as the Iterative Closest Point (ICP) framework  [30] and adoptions of it  [31], are widely used for the registration of 3D data point clouds to model shapes. Furthermore, alternative concepts, such as constrained registration approaches, have been developed to match broken objects  [32] and to fit point clouds to surfaces in the presence of obstacles  [33,34]. In these works, the constraint modelling is mainly based on local vertex normal distance computations, whereas Pierce and Rosen   [35] convert the constrained optimization to an unconstrained optimization problem employing penalty functions. A similar approach for the relative positioning of surface meshes is presented in  [36–38], where the objective function for the optimization is defined as the sum of projected point-to-point distances and the non-penetration requirement is checked by collision detection algorithms, which also trigger penalty terms in the objective function. Furthermore, an approach for the contact simulation of Skin Model Shapes employing constrained registration methods has been proposed in  [39]. However, these registration-based approaches for the matching and relative positioning of point clouds seldom allow the consideration of assembly process characteristics, such as multiple assembly steps with different assembly directions, assembly forces, gravitational forces, or assembly constraints. This hinders their application to computer-aided tolerance analysis.

Unlike these methods, Samper et al.  [40] present an approach for the assembly modelling, which is based on the difference surface computation of mating surfaces by modal analysis. Due to this modal surface decomposition for the difference surface computation employing the finite-element analysis (FEA), each two mating features have to share the same discretization, which is a strong drawback in many situations. Though, the algorithm allows the computation of the “deterministic” contact points between each two discretized variant part representations.

In the following, two classes of approaches for the relative positioning of discrete geometry Skin Model Shapes for the application in computer-aided tolerance analysis are introduced, discussed, and compared, namely adapted registration techniques and an algorithm based on the feature difference surface. The main contributions can be found in the development of two approaches for the assembly simulation of point-cloud based Skin Model Shapes employing algorithms from registration, computational geometry, and computer graphics. These approaches are introduced and discussed, as well as applied to two case studies in the field of computer-aided tolerance analysis. The paper is structured as follows. In Section  2, the approaches for the relative positioning of discrete geometry Skin Model Shapes, as representatives of non-ideal mechanical parts, are introduced, where a focus is laid upon the generic formulation of the positioning framework. Furthermore, it is shown how these approaches can be adapted and extended to various assembly situations in Section  3. In Section  4, the highlighted approaches are applied to two case studies in order to illustrate the suitability for the assembly modelling in computer-aided tolerancing. Finally, a conclusion and an outlook are given.

In order to analyse the effects of geometric part deviations on product requirements, the resulting assembly positions of variant parts in the assembly have to be investigated. Since the resulting assembly configurations for variant parts are far more complicated than for nominal assemblies  [22], the computation of the resulting part positions requires algorithms, where  [35] defines three requirements for such an algorithm:
                        
                           R1:
                           The algorithm should minimize the distances between any point on one feature and the corresponding closest point of the other feature.

The algorithm should avoid interference of parts.

In the case where the form deviations are nil, the algorithm should converge to the nominal assembly position.

An intensively discussed registration problem is the “fitting” of a 3D data point cloud to a given model shape. The idea of the Iterative Closest Point framework as a well-known approach to this registration problem is the minimization of an error metric, that is defined on pairs of points each one consisting of a point from the model shape, which stays unaffected, and a corresponding point from a data shape, which is translated and rotated to fit the reference shape  [30,31].

In the context of relative positioning, a slightly different registration problem occurs, since a 3D data point cloud of a part feature (plane, cylinder, etc.) has to be “fitted” to the 3D point cloud of another parts’ feature. For this purpose, the ICP framework has been generalized in this regard, that the objective function for the minimization is not necessarily defined between pairs of points, but allows more general formulations  [37]. This generalized framework has been employed for the contact simulation of Skin Model Shapes in  [39] and is extended to the assembly simulation considering multiple assembly steps in this contribution. In the following, the mathematical foundation is briefly introduced.

Let 
                              
                                 Y
                              
                              =
                              
                                 {
                                 
                                    
                                       
                                          y
                                       
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       3
                                    
                                 
                                 :
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 M
                                 }
                              
                            be the point cloud of the data shape feature and 
                              
                                 X
                              
                              =
                              
                                 {
                                 
                                    
                                       
                                          x
                                       
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       3
                                    
                                 
                                 :
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                              
                            the point cloud of the reference shape feature. Then, the adjusted position of the data shape feature 
                              
                                 Y
                              
                            can be obtained by minimizing an objective function 
                              f
                              
                                 (
                                 ⋅
                                 )
                              
                           , which is a function of both point clouds 
                              
                                 X
                              
                            and 
                              
                                 Y
                              
                            and the rigid body transformation of the data shape 
                              
                                 α
                              
                           : 
                              
                                 (1)
                                 
                                    min
                                    f
                                    
                                       (
                                       
                                          α
                                       
                                       ;
                                       
                                          X
                                       
                                       ,
                                       
                                          Y
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        

Thus, the unknown rigid body transformation 
                              
                                 α
                              
                            of 
                              
                                 Y
                              
                            is identified by minimizing an objective function 
                              f
                              
                                 (
                                 
                                    α
                                 
                                 ;
                                 
                                    X
                                 
                                 ,
                                 
                                    Y
                                 
                                 )
                              
                           . Similarly to alternative solutions to this generalized registration problem [32,34,41,42], instantaneous kinematics are employed for the expression of the rigid body motion 
                              
                                 α
                              
                            with 
                              
                                 α
                              
                              
                                 (
                                 
                                    Y
                                 
                                 )
                              
                              ≈
                              
                                 m
                              
                              
                                 (
                                 
                                    Y
                                 
                                 )
                              
                              =
                              
                                 Y
                              
                              +
                              
                                 v
                              
                              
                                 (
                                 
                                    Y
                                 
                                 )
                              
                            in the following, where: 
                              
                                 (2)
                                 
                                    
                                       v
                                    
                                    
                                       (
                                       
                                          Y
                                       
                                       )
                                    
                                    =
                                    
                                       t
                                    
                                    +
                                    
                                       r
                                    
                                    ×
                                    
                                       Y
                                    
                                    .
                                 
                              
                            In this context, 
                              
                                 t
                              
                            represents the velocity vector of the origin and 
                              
                                 r
                              
                            is the vector of angular velocity (Darboux vector)  [41]. Since this linearization results in an affine transformation, but not necessarily in a rigid body transformation, the resulting velocity vector field is projected to the corresponding helical motion after the optimization (see  [41,42] for further detail). With 
                              
                                 t
                              
                              ,
                              
                                 r
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                           , the optimization problem is of dimension six  [34]: 
                              
                                 (3)
                                 
                                    
                                       
                                          min
                                       
                                       
                                          
                                             t
                                          
                                          ,
                                          
                                             r
                                          
                                       
                                    
                                    f
                                    
                                       (
                                       
                                          m
                                       
                                       ;
                                       
                                          X
                                       
                                       ,
                                       
                                          Y
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        

Many objective functions for the optimization problem given in Eq. (3) have been proposed, e.g. from the sum of squared distances to the Hausdorff distance in  [37], approximations of the unsigned distance function (
                              
                                 
                                    l
                                 
                                 
                                    1
                                 
                              
                           -norm) in  [43], and projected distances and the convex hull volume in  [39]. Some of these functions are phrased as least-squares problems and are theoretically backed by the Gauss–Markov theorem  [43], some of them may result in non-smooth optimization problems. However, as a result of trials and systematic experiments, a focus is set on signed and absolute projected distance functions as well as convex hull volume computations in the following.

Since assembly processes are usually performed along predominant directions, the distance-based objective functions should consider these directions 
                              
                                 w
                              
                            in the evaluation of part feature distances. Thus, the vector 
                              
                                 w
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                            is defined as the assembly direction, being the main direction for the assembly step in the global coordinate system. It is typically determined by the invariant translations of the contact features and can be obtained from CAD by exporting the assembly constraints. For example, if we consider a contact of two 
                              x
                              –
                              y
                           -planes, then the feature assembly is performed in 
                              z
                           -direction and 
                              
                                 w
                              
                            yields to 
                              
                                 w
                              
                              =
                              
                                 (
                                 0
                                 
                                 0
                                 
                                 1
                                 )
                              
                           . Furthermore, the distance functions are determined for every point of the moving part 
                              
                                 Y
                              
                            and its corresponding point in the fixed part 
                              
                                 X
                              
                            similarly to the ICP algorithm. For this purpose, the nearest neighbour (sometimes called foot-point) 
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    
                                       
                                          y
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                            for every point of the data shape feature 
                              
                                 
                                    
                                       y
                                    
                                 
                                 
                                    i
                                 
                              
                            in 
                              
                                 X
                              
                            is computed by maximizing an adapted projected point-to-point distance 
                              
                                 
                                    a
                                 
                                 
                                    j
                                 
                              
                           , which will be discussed in Eq. (14)   [21]: 
                              
                                 (4)
                                 
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          
                                             
                                                j
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                    
                                    ,
                                    
                                    where  
                                    
                                       
                                          j
                                       
                                       
                                          ∗
                                       
                                    
                                    =
                                    
                                       
                                          
                                             arg max
                                          
                                       
                                       
                                          j
                                       
                                    
                                    
                                       (
                                       
                                          
                                             a
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                            In contrast to the ICP approach, these correspondences are not determined iteratively, but based on a pre-assembly position. Therefore, we deal with a registration problem for known point correspondences. The determination of the point correspondences is illustrated in Fig. 2
                            for two plane features (without loss of generality, the 3D problem is reduced to 2D for the sake of improved comprehensibility).

The discussed objective functions for the optimization problem in Eq. (3) are illustrated in Fig. 3
                            for the assembly of two plane features in 2D: 
                              
                                 •
                                 
                                    Signed projected distance: The distances between the adjusted points 
                                       
                                          m
                                       
                                       
                                          (
                                          
                                             
                                                
                                                   y
                                                
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                     and their correspondences 
                                       
                                          
                                             
                                                x
                                             
                                          
                                          
                                             
                                                
                                                   y
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                     are projected along the assembly direction 
                                       
                                          w
                                       
                                    . Hence, the projected distance is defined as: 
                                       
                                          (5)
                                          
                                             
                                                
                                                   d
                                                
                                                
                                                   
                                                      PS
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   m
                                                
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                ,
                                                
                                                   
                                                      
                                                         x
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                                ,
                                                
                                                   w
                                                
                                                )
                                             
                                             =
                                             
                                                (
                                                
                                                   m
                                                
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                −
                                                
                                                   
                                                      
                                                         x
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             ⋅
                                             
                                                
                                                   
                                                      w
                                                   
                                                
                                                
                                                   ′
                                                
                                             
                                             .
                                          
                                       
                                     The objective function is then the sum of these absolute projected distances: 
                                       
                                          (6)
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   
                                                      PS
                                                   
                                                
                                             
                                             
                                                (
                                                ⋅
                                                )
                                             
                                             =
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   M
                                                
                                             
                                             
                                                |
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      
                                                         PS
                                                      
                                                   
                                                
                                                
                                                   (
                                                   
                                                      m
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                   ,
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                   
                                                      w
                                                   
                                                   )
                                                
                                                |
                                             
                                             .
                                          
                                       
                                     Due to the formulation of the optimization problem as a minimization task, the use of the absolute values 
                                       
                                          |
                                          
                                             
                                                d
                                             
                                             
                                                
                                                   PS
                                                
                                             
                                          
                                          |
                                       
                                     is required to avoid negative values of the objective function leading to implausible part positions.


                                    Signed normal distance: Similarly to Flöry et al.  [34], the directions for the signed projected distance can also be defined individually for every point pair as the vertex normals of the corresponding points 
                                       
                                          
                                             
                                                w
                                             
                                          
                                          
                                             i
                                          
                                       
                                       ≔
                                       
                                          
                                             
                                                n
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    , which results in a distance-to-tangent measure: 
                                       
                                          (7)
                                          
                                             
                                                
                                                   d
                                                
                                                
                                                   
                                                      PSN
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   m
                                                
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                ,
                                                
                                                   
                                                      
                                                         x
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                                ,
                                                
                                                   
                                                      
                                                         n
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  y
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             =
                                             
                                                (
                                                
                                                   m
                                                
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                −
                                                
                                                   
                                                      
                                                         x
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             ⋅
                                             
                                                
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   ′
                                                
                                             
                                             .
                                          
                                       
                                     For the objective function, again the absolute value of the projected distance metric is used: 
                                       
                                          (8)
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   
                                                      PSN
                                                   
                                                
                                             
                                             
                                                (
                                                ⋅
                                                )
                                             
                                             =
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   M
                                                
                                             
                                             
                                                |
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      
                                                         PSN
                                                      
                                                   
                                                
                                                
                                                   (
                                                   
                                                      m
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                   ,
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               y
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         
                                                            n
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  x
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     y
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   )
                                                
                                                |
                                             
                                             .
                                          
                                       
                                    
                                 


                                    Convex hull volume: In contrast to the previous ones, the idea behind this objective function is the minimization of the volume between the part features. For this purpose, the volume of the convex hull of the data shape feature points and their correspondences in 
                                       
                                          X
                                       
                                    , being 
                                       
                                          
                                             
                                                X
                                             
                                          
                                          
                                             
                                                Y
                                             
                                          
                                       
                                    , is computed, e.g. employing the QuickHull algorithm  [44], and minimized. In this regard, the objective functions yields to: 
                                       
                                          (9)
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   
                                                      Hull
                                                   
                                                
                                             
                                             
                                                (
                                                ⋅
                                                )
                                             
                                             =
                                             
                                                CV
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         X
                                                      
                                                   
                                                   
                                                      
                                                         Y
                                                      
                                                   
                                                
                                                ∪
                                                
                                                   m
                                                
                                                
                                                   (
                                                   
                                                      Y
                                                   
                                                   )
                                                
                                                )
                                             
                                             ,
                                          
                                       
                                     where 
                                       
                                          CV
                                       
                                       
                                          (
                                          ⋅
                                          )
                                       
                                     returns the volume of the convex hull. It is worth mentioning, that the results of this objective function are not influenced by inhomogeneous point cloud densities in contrast to the previously introduced point-distance based objective functions.

In real assembly processes, certain degrees of freedom are kept invariant by assembly fixtures. In order to consider this issue, constraints for specific components of 
                              
                                 t
                              
                            and 
                              
                                 r
                              
                            can be added in the formulation of the optimization problem, e.g. for a straight plane-to-plane assembly in 
                              z
                           -direction with three degrees of freedom (
                              
                                 
                                    t
                                 
                                 
                                    z
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    x
                                 
                              
                              ,
                              
                                 
                                    r
                                 
                                 
                                    y
                                 
                              
                           ), the remaining translations along the 
                              x
                           - and 
                              y
                           -direction as well as the rotation around the 
                              z
                           -direction are constrained: 
                              
                                 
                                    
                                       
                                          
                                             min
                                          
                                          
                                             
                                                t
                                             
                                             ,
                                             
                                                r
                                             
                                          
                                       
                                       
                                       f
                                       
                                          (
                                          
                                             m
                                          
                                          ;
                                          
                                             X
                                          
                                          ,
                                          
                                             Y
                                          
                                          )
                                       
                                       ,
                                    
                                 
                                 
                                    (10)
                                    
                                       subject to
                                       
                                       
                                          
                                             t
                                          
                                          
                                             x
                                          
                                       
                                       =
                                       0
                                       ,
                                       
                                       
                                          
                                             t
                                          
                                          
                                             y
                                          
                                       
                                       =
                                       0
                                       ,
                                       
                                       
                                          
                                             r
                                          
                                          
                                             z
                                          
                                       
                                       =
                                       0
                                       .
                                    
                                 
                              
                           
                        

Moreover, the adding of non-linear constraints has been used to respect the non-interference requirement R2  [33,35]. For example, the signed normal distance function can be added to constrain the minimization problem. Expressively spoken, the signed normal distance between any of the reference points and their correspondences is not to take a negative value, since this indicates interfering part positions. In this regard, the minimization problem in Eq. (3) yields to:
                              
                                 
                                    
                                       
                                          
                                             min
                                          
                                          
                                             
                                                t
                                             
                                             ,
                                             
                                                r
                                             
                                          
                                       
                                       
                                       
                                          
                                             f
                                          
                                          
                                             
                                                〈
                                                ⋅
                                                〉
                                             
                                          
                                       
                                       
                                          (
                                          ⋅
                                          )
                                       
                                    
                                 
                                 
                                    (11)
                                    
                                       subject to
                                       
                                       
                                          
                                             d
                                          
                                          
                                             
                                                PSN
                                             
                                          
                                       
                                       
                                          (
                                          
                                             m
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      y
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          ,
                                          
                                             
                                                
                                                   x
                                                
                                             
                                             
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             w
                                          
                                          )
                                       
                                       ≤
                                       0
                                       ,
                                       
                                       
                                          
                                             ∀
                                          
                                          
                                             
                                                
                                                   
                                                      y
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                             ∈
                                             
                                                Y
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                            In analogy, the signed projected distances 
                              
                                 
                                    d
                                 
                                 
                                    
                                       PS
                                    
                                 
                              
                            can be added as constraints, though signed normal distances 
                              
                                 
                                    d
                                 
                                 
                                    
                                       PSN
                                    
                                 
                              
                            are more representative for part interference. However, 
                              
                                 
                                    d
                                 
                                 
                                    
                                       PS
                                    
                                 
                              
                            does not require the computation of point normals. These point-based constraints can also be used in combination with the convex hull volume based objective function 
                              
                                 
                                    f
                                 
                                 
                                    
                                       Hull
                                    
                                 
                              
                           .

The numerical solution of this constrained optimization problem is performed employing an active set method. Illustrative results for the relative positioning of two plane features and various objective functions with non-linear constraints are shown in Fig. 4
                           . It can be seen, that the adding of constraints based on signed projected distances and signed normal distances leads to realistic part positions.

It is worth mentioning, that there are approaches to discard the non-linear constraints and to convert the constrained optimization problem to an unconstrained optimization problem by adding penalty functions in case of part interference to the objective functions (i.e. for 
                              
                                 
                                    
                                       d
                                    
                                 
                                 
                                    
                                       PSN
                                    
                                 
                              
                              
                                 (
                                 
                                    m
                                 
                                 
                                    (
                                    
                                       
                                          
                                             y
                                          
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                    
                                       
                                          x
                                       
                                    
                                    
                                       
                                          
                                             y
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 ,
                                 
                                    w
                                 
                                 )
                              
                              >
                              0
                              ,
                              
                                 
                                    ∀
                                 
                                 
                                    
                                       
                                          
                                             y
                                          
                                       
                                       
                                          i
                                       
                                    
                                    ∈
                                    
                                       Y
                                    
                                 
                              
                           )  [35,37]. However, no instructions for the choice of the required penalty terms in case of constraint violations is given, which hinders the application of this adaption to the constrained registration in the context of computer-aided tolerancing.

In contrast to approaches for the registration of point clouds, Samper et al.  [40] present a method for the assembly modelling based on the computation of the difference surface. The difference surface is defined to comprise the deviations between the model and the data shape. In doing so, the relative positioning problem between the model and the data shape is converted to a relative positioning problem between the difference surface and a perfect surface. Since the approach of Samper et al.  [40] is part of a modal tolerancing approach  [45], the difference surface is computed based on a modal decomposition of both shapes in their work. For this purpose, both mating surfaces are identically discretized to compute their eigen-shapes (modes) employing the Finite Element Analysis (FEA). Thereafter, the modes are fitted to measured surfaces based on a projection operator to obtain the modal spectrum of both mating surfaces. The difference surface between these mating surfaces is then easily computed as the difference between their modal spectra. Once the difference surface is computed, the contact points between the mating surfaces can be found as the intersection of the mating force vector (e.g. assembly or inertial force) and the convex hull of the difference surface. A detailed explanation is given in the following. However, as can be seen, a main drawback of this procedure is the computation of the difference surface based on modal shapes, since it does not allow for different discretizations of the mating surfaces. In the context of virtual product development, where the available surface discretization is often dependent on precision requirements in structural analysis or manufacturing process simulations, this hinders the application of the approach to the integrated computer-aided tolerance analysis. Therefore, in the following, the approach is expanded to overcome this shortcoming.

As mentioned before, assembly processes are usually performed along predefined assembly directions and under the presence of inertial forces. In the last preceding subsection, registration techniques have been adapted in order to fit the data shape to the model shape along these directions by using projected distance functions. According to the difference surface approach for the relative positioning, the point-related distances between the data shape and the model shape along the assembly direction 
                           
                              w
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 3
                              
                           
                         are computed employing a ray trace algorithm for point clouds, which has been introduced as the directed projection algorithm [21,46,47]. The algorithm finds the directed projection 
                           
                              
                                 
                                    y
                                 
                              
                              
                                 i
                              
                              
                                 ′
                              
                           
                           =
                           
                              
                                 
                                    y
                                 
                              
                              
                                 i
                              
                           
                           +
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                           
                              w
                           
                           ,
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                           ∈
                           R
                         of a point 
                           
                              
                                 
                                    y
                                 
                              
                              
                                 i
                              
                           
                         of the data shape onto the reference shape 
                           
                              X
                           
                         in a predefined direction 
                           
                              w
                           
                         by minimizing the sum of projected squared point-to-point distances  [21,46]: 
                           min
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 a
                              
                              
                                 j
                              
                           
                           
                              
                                 
                                    ‖
                                    
                                       
                                          
                                             y
                                          
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    −
                                    
                                       
                                          
                                             x
                                          
                                       
                                       
                                          j
                                       
                                    
                                    ‖
                                 
                              
                              
                                 2
                              
                           
                        . It has been shown, that the solution to this problem can be given as  [21]:
                           
                              (12)
                              
                                 
                                    
                                       d
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       λ
                                       −
                                       
                                          
                                             
                                                y
                                             
                                          
                                          
                                             i
                                          
                                       
                                       ⋅
                                       
                                          w
                                       
                                    
                                    
                                       
                                          
                                             
                                                ‖
                                                
                                                   w
                                                
                                                ‖
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                         where: 
                           
                              (13)
                              
                                 λ
                                 =
                                 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             w
                                          
                                          
                                             x
                                          
                                       
                                       +
                                       
                                          
                                             c
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             w
                                          
                                          
                                             y
                                          
                                       
                                       +
                                       
                                          
                                             c
                                          
                                          
                                             3
                                          
                                       
                                       
                                          
                                             w
                                          
                                          
                                             z
                                          
                                       
                                    
                                    
                                       
                                          
                                             c
                                          
                                          
                                             0
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                         with 
                           
                              
                                 c
                              
                              
                                 0
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 a
                              
                              
                                 j
                              
                           
                        , 
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 a
                              
                              
                                 j
                              
                           
                           
                              
                                 
                                    x
                                 
                              
                              
                                 j
                              
                              
                                 x
                              
                           
                        , 
                           
                              
                                 c
                              
                              
                                 2
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 a
                              
                              
                                 j
                              
                           
                           
                              
                                 
                                    x
                                 
                              
                              
                                 j
                              
                              
                                 y
                              
                           
                        , and 
                           
                              
                                 c
                              
                              
                                 3
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 a
                              
                              
                                 j
                              
                           
                           
                              
                                 
                                    x
                                 
                              
                              
                                 j
                              
                              
                                 z
                              
                           
                        . As it has been pointed out by  [21], the definition of the weights 
                           
                              
                                 a
                              
                              
                                 j
                              
                           
                         has huge effects on the computation of the projection 
                           
                              
                                 
                                    y
                                 
                              
                              
                                 i
                              
                              
                                 ′
                              
                           
                        . In the following, we slightly adapt the weight function of  [21] as follows: 
                           
                              (14)
                              
                                 
                                    
                                       a
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             
                                                ‖
                                                
                                                   
                                                      
                                                         x
                                                      
                                                   
                                                   
                                                      j
                                                   
                                                
                                                −
                                                
                                                   
                                                      
                                                         y
                                                      
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ‖
                                             
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             
                                                ‖
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                                ×
                                                
                                                   w
                                                
                                                ‖
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 .
                              
                           
                         In order to increase the accuracy of the projection, insignificant points in 
                           
                              X
                           
                         are gradually removed by an iterative procedure. Further detail of this algorithm can be found in  [21].

Alternatively, when employing a surface mesh representation of deviated workpiece representatives, ray–triangle intersection algorithms as for example presented in  [48] are used to compute the point-related distances 
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                        . In order to establish the difference surface for the general case where 
                           
                              w
                           
                           =
                           
                              
                                 
                                    w
                                 
                              
                              
                                 z
                              
                           
                           =
                           
                              (
                              0
                              
                              0
                              
                              1
                              )
                           
                        , these distances 
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                         are used to replace the point 
                           z
                        -coordinates of the data shape. For any case, where 
                           
                              w
                           
                           ≠
                           
                              
                                 
                                    w
                                 
                              
                              
                                 z
                              
                           
                        , a coordinate transformation is performed prior to the relative positioning leading to 
                           
                              w
                           
                           =
                           
                              
                                 
                                    w
                                 
                              
                              
                                 z
                              
                           
                        , i.e. the part positions are adapted so that the assembly is performed in 
                           z
                        -direction. Consequently, the difference surface 
                           
                              S
                           
                           =
                           
                              {
                              
                                 
                                    
                                       s
                                    
                                 
                                 
                                    i
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                              :
                              i
                              =
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                         is obtained as the 
                           x
                        - and 
                           y
                        -coordinates of the data shape (
                           
                              
                                 
                                    Y
                                 
                              
                              
                                 x
                              
                           
                         and 
                           
                              
                                 
                                    Y
                                 
                              
                              
                                 y
                              
                           
                        , respectively) and the distances 
                           
                              d
                           
                         in the 
                           z
                        -coordinate direction: 
                           
                              (15)
                              
                                 
                                    S
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          
                                             Y
                                          
                                       
                                       
                                          x
                                       
                                    
                                    
                                    
                                       
                                          
                                             Y
                                          
                                       
                                       
                                          y
                                       
                                    
                                    
                                    
                                       d
                                    
                                    )
                                 
                                 .
                              
                           
                        
                     

Thereafter, the convex hull of the difference surface is computed using e.g. the QuickHull algorithm  [44] and intersected with the force slope 
                           
                              F
                           
                           =
                           
                              P
                           
                           +
                           λ
                           
                              w
                           
                           ,
                           λ
                           ∈
                           R
                         consisting of the force application point 
                           
                              P
                           
                         and the assembly direction 
                           
                              w
                           
                         as illustrated in Fig. 5
                        (b). Since this usually results in two intersecting points, the minimal of both with regard to the distances 
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                         is chosen and marks the relevant segment (2D) or triangle (3D) of the convex hull. The vertices of the relevant segment or triangle in 
                           
                              Y
                           
                         are then fitted to their projections on the model shape 
                           
                              
                                 
                                    Y
                                 
                              
                              
                                 ′
                              
                           
                           =
                           
                              {
                              
                                 
                                    
                                       y
                                    
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                              :
                              i
                              =
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                        , with 
                           
                              
                                 
                                    y
                                 
                              
                              
                                 i
                              
                              
                                 ′
                              
                           
                           =
                           
                              
                                 
                                    y
                                 
                              
                              
                                 i
                              
                           
                           −
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                           ⋅
                           
                              w
                           
                        , to obtain the final part position (see Fig. 5(c)). For this purpose, for example the absolute orientation approach  [49] can be used.

In this context, the force application point 
                           
                              P
                           
                         of the assembly force has a huge effect on the resulting part position as can be seen from Fig. 6
                        , where the shifting of the force application point in 
                           x
                        -direction leads to a lifting of the data shape. In order to consider inertial forces, the force application point is set to the centre of gravity in the following.

In the previous section, two kinds of approaches for the relative positioning of discrete geometry workpiece representatives have been proposed, namely constrained registration approaches and an algorithm based on the computation of the difference surface between mating part features. Furthermore, they have been applied to the part positioning in consideration of single mating features. In this section, these approaches are applied to the relative positioning considering multiple features, as a primary problem in assembly simulations in the context of computer-aided design and computer-aided tolerancing.

In industrial applications, 3-2-1 locating schemes (sometimes also called positioning or fixture layouts) are often used to locate parts in assemblies and consequently to lock their six degrees of freedom (dof)  [50,51]. The term 3-2-1 positioning emerges from the number of part dofs, which are sequentially disabled by the assembly steps. In this regard, the translation in 
                           z
                        -direction and the rotations around the 
                           x
                        - and 
                           y
                        -axes are locked by the first assembly step with three contact points between the part and the assembly surrounding. The translation in 
                           y
                        -direction and the remaining rotation around the 
                           z
                        -axis are locked by the second assembly step with two contact points, whereas the last translation in 
                           x
                        -direction is locked by the last assembly step with one contact point  [50]. This is illustrated in Fig. 7
                        . In the following, the simulation of such a 3-2-1 positioning of planar parts with form deviations is performed simultaneously employing the constrained registration and, in contrast to that, sequentially with the difference surface approach. For this purpose, a cube is assembled with a block as illustrated in Fig. 8
                        . As a pre-processing step, the relevant plane features of both the cube and the block are obtained employing GeoSpelling partition operations  [7] as can be seen from Fig. 8(b). In this context, it should be emphasized, that the surface mesh representation is only used for the visualization, whereas the assembly simulation models employ the point cloud representation of the parts.

The assembly simulation of a 3-2-1 positioning considering form deviations is a non-trivial task and an ongoing challenge for research in the fields of tolerancing, CAD, and computational geometry, since every single assembly step has an effect on the part’s assembly environment. This is illustrated in Fig. 9
                           , where the 2-1 assembly of two rectangular plane features with form deviations is shown. It can be seen, that the first assembly step 
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                            (see Fig. 9(b)) leads to two contact points in 
                              y
                           -direction between the blue and the grey part, whereas the sequential execution of the second assembly step 
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                            in Fig. 9(c) leads to one contact point in 
                              x
                           -direction and the dissolving of the two contact points in 
                              y
                           -direction (only one contact point remains). However, the expected final part position is illustrated in Fig. 9(d) with two contact points in 
                              y
                           -direction and one in 
                              x
                           -direction.

A straightforward idea to solve the assembly simulation problem for a 3-2-1 locating scheme employing constrained registration methods is to perform the assembly steps iteratively. Though, since the constrained registration approaches result in best-fit positions for every assembly step, the part position of the preceding assembly step is dissolved. Therefore, a combined formulation of the optimization problem is required and the constrained registration approach based on the absolute projected distance is adapted as follows, where the assembly steps are subscripted according to the number of locked dofs in the following (i.e. the first assembly step of a 3-2-1 positioning is depicted as 
                              ψ
                              =
                              3
                           ):
                              
                                 •
                                 The part features for the assembly steps (
                                       
                                          
                                             
                                                Y
                                             
                                          
                                          
                                             ψ
                                          
                                       
                                     and 
                                       
                                          
                                             
                                                X
                                             
                                          
                                          
                                             ψ
                                          
                                       
                                       ,
                                       ψ
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       3
                                    ) are obtained by partition operations, where 
                                       
                                          
                                             
                                                Y
                                             
                                          
                                          
                                             ψ
                                          
                                       
                                       ⊆
                                       
                                          Y
                                       
                                    , 
                                       
                                          
                                             
                                                X
                                             
                                          
                                          
                                             ψ
                                          
                                       
                                       ⊆
                                       
                                          X
                                       
                                     and 
                                       
                                          
                                             M
                                          
                                          
                                             ψ
                                          
                                       
                                       =
                                       
                                          |
                                          
                                             
                                                Y
                                             
                                             
                                                ψ
                                             
                                          
                                          |
                                       
                                     (alternatively 
                                       
                                          
                                             M
                                          
                                          
                                             ψ
                                          
                                       
                                       =
                                       #
                                       
                                          
                                             Y
                                          
                                          
                                             ψ
                                          
                                       
                                    ) for 
                                       ψ
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       3
                                    .

The objective function is the sum of weighted average absolute projected distances: 
                                       
                                          (16)
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   Σ
                                                
                                             
                                             =
                                             
                                                
                                                   ∑
                                                
                                                
                                                   ψ
                                                   =
                                                   1
                                                
                                                
                                                   3
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         ω
                                                      
                                                      
                                                         ψ
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         M
                                                      
                                                      
                                                         ψ
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   f
                                                
                                                
                                                   
                                                      PS
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         Y
                                                      
                                                   
                                                   
                                                      ψ
                                                   
                                                
                                                ,
                                                
                                                   
                                                      
                                                         X
                                                      
                                                   
                                                   
                                                      ψ
                                                   
                                                
                                                ,
                                                
                                                   
                                                      
                                                         w
                                                      
                                                   
                                                   
                                                      ψ
                                                   
                                                
                                                )
                                             
                                             ,
                                          
                                       
                                     where 
                                       
                                          
                                             
                                                w
                                             
                                          
                                          
                                             ψ
                                          
                                       
                                     is the assembly direction of the respective assembly step, e.g. 
                                       
                                          
                                             
                                                w
                                             
                                          
                                          
                                             3
                                          
                                       
                                       =
                                       
                                          (
                                          0
                                          
                                          0
                                          
                                          −
                                          1
                                          )
                                       
                                    . In this regard, the weights for the average point distances are chosen to respect the assembly steps as 
                                       ω
                                       =
                                       
                                          {
                                          3
                                          ;
                                          2
                                          ;
                                          1
                                          }
                                       
                                     in analogy to  [36], i.e. the point-to-point distances, which are relevant for the first assembly step, are weighted three-times the point-to-point distances of the last assembly step. However, an adaptive weighting of the assembly steps could also be performed to consider different form deviations of the contact surfaces. The point-wise averaging of the unsigned projected distance function is used to avoid influences of different cardinal numbers 
                                       
                                          
                                             M
                                          
                                          
                                             i
                                          
                                       
                                     (otherwise features with many points would have a stronger contribution to 
                                       
                                          
                                             f
                                          
                                          
                                             Σ
                                          
                                       
                                     than features with less points).

The registration itself is performed by minimizing the objective function 
                              
                                 
                                    f
                                 
                                 
                                    Σ
                                 
                              
                           , where a pseudo-code of the objective function 
                              
                                 
                                    f
                                 
                                 
                                    Σ
                                 
                              
                            for the 3-2-1 positioning is given in Table 1
                           . In this context, non-linear constraints based on the signed projected distance 
                              
                                 
                                    d
                                 
                                 
                                    
                                       PS
                                    
                                 
                              
                            are added for every part feature 
                              
                                 
                                    
                                       Y
                                    
                                 
                                 
                                    ψ
                                 
                              
                            according to the respective assembly directions 
                              
                                 
                                    
                                       w
                                    
                                 
                                 
                                    ψ
                                 
                              
                            in order to avoid part interference.

In contrast to the constrained registration approach, which solves the 3-2-1 positioning problem simultaneously, the difference surface method is employed to solve the three assembly steps sequentially. For this purpose, the part position after the first assembly step is computed based on the 3D difference surface approach for the translation in 
                              z
                           -direction as can be seen from Fig. 10
                           (a). Thereafter, the second assembly step is performed employing the 2D adaption of the difference surface algorithm (Fig. 10(b)). The last assembly step is then a simple translation along the 
                              x
                           -direction (Fig. 10(c)), where the amount of translation 
                              
                                 
                                    d
                                 
                                 
                                    x
                                 
                              
                            is given by: 
                              
                                 (17)
                                 
                                    
                                       
                                          d
                                       
                                       
                                          x
                                       
                                    
                                    =
                                    min
                                    
                                       (
                                       
                                          
                                             d
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    ,
                                    
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    M
                                    .
                                 
                              
                           
                        

For perfectly planar parts, the sequential execution of the three assembly steps seems admissible, since the data shape can be freely moved along the mating planes of the model shape. However, this does not hold when considering form deviations, since they prevent free movements along the remaining coordinate directions, which may lead to improper part positions after the positioning. This can be seen from Fig. 11
                           (a), where intersections (red areas) of the part surface meshes are computed employing a mesh generator (tetgen) for illustration after the sequential execution of the three assembly steps. In order to solve this problem, similarly to the ICP, an iterative execution of the three assembly steps is performed until the change of the part position falls below a critical value 
                              
                                 crit
                              
                            or the algorithm reaches a predefined number of iterations 
                              
                                 
                                    i
                                 
                                 
                                    
                                       max
                                    
                                 
                              
                           . A pseudo-code of this procedure is given in Table 2
                           . The change of the part position can for example be computed as the Euclidean distance between a reference point in the data shape before and after the positioning iteration. The iterative procedure avoids inadmissible part positions and ensures, that the relative positioning represents the part behaviour according to the given assembly sequence (see Fig. 11(b)).

The final assembly position for the two different approaches for the 3-2-1 positioning of planar parts are shown in Fig. 12
                           , where part interferences are highlighted in red. As can be seen, both approaches lead to slight interference in the contact points as expected, where the part interference at the bottom features is more distinct for the constrained registration than for the difference surface approach. Though, both approaches conform to requirement R2. Furthermore, both methods converge to the nominal assembly position for nominal parts and therefore fulfil requirement R3.

However, in order to compare the resulting part positions of both approaches, the point projections of 
                              
                                 Y
                              
                            in 
                              
                                 X
                              
                            according to Eq. (4) of the relevant part features are computed and compared. The directed distances between 
                              
                                 
                                    
                                       y
                                    
                                 
                                 
                                    i
                                 
                              
                            and 
                              
                                 
                                    
                                       y
                                    
                                 
                                 
                                    i
                                 
                                 
                                    ∗
                                 
                              
                            can be seen from Fig. 13
                           , where it can be found, that both approaches lead to comparable results for this example. However, the distances for the side features (
                              ψ
                              =
                              1
                              ,
                              2
                           ) differ considerably between the methods, which is influenced by the weighting vector 
                              ω
                            in the constrained registration approach. Though, the choice of adequate weights 
                              ω
                            is a non-trivial problem and can be seen as a major drawback of this method for the 3-2-1 positioning of planar features.

Beside planar features, the positioning of cylindrical fits, such as pin-and-hole connections, is of high importance in the assembly of mechanical products. In this context, a typical classification of such pin-and-hole connections is based on the clearance between the parts after the positioning. In this regard, it can generally be distinguished between loose and tight fits. The assembly processes of these fits differ in terms of the exerted assembly force, since tight fits require a higher mating force due to small elastic part deformations. As a consequence, these types of fit require different strategies from a computational point of view: 
                           
                              •
                              Mating forces introduce small elastic part deformations in the assembly of tight fits. Therefore, slight part interference is allowed in the relative positioning of rigid parts and requirement R2 is dropped. Thus, the ICP or unconstrained registration approaches can be used to simulate the behaviour of tight fits.

Clearances between the parts result in the assembly of parts with loose fit. Consequently, no part interference should occur, which is conform to R2. Hence, constrained registration approaches or the difference surface approach should be used for the relative positioning of loose fits.

In the following, the positioning of cylindrical features with loose fit is illustrated by a pin-hole assembly as illustrated in Fig. 14
                         and refers to a typical study case in the context of computer aided tolerancing  [52].

The general formulation of the constrained registration problem allows the distinction between relevant part features for the minimization and for the constraint formulation. In this regard, the contacting plane of the pin head (Opt. Feature in Fig. 14) is used for the minimization of the objective function, whereas a feature composed of the optimization feature, two cylinders, and the back of the cylinder (Con. Feature in Fig. 14) is used for the constraint formulation as can also be seen from Fig. 15
                           . In doing so, the pin is positioned to obtain a minimal gap between the pin head and the hole considering the non-interference requirement for the whole pin.

The assembly simulation based on the difference surface approach requires the definition of an assembly direction. For the presented example, a straightforward idea is to choose this direction according to the predominant direction of the pin. However, this may lead to implausible part positions in the final assembly depending on the part deviations of the pin head and the hole opening, since part interference may occur between the pin body and the hole as can be seen from Fig. 16
                           . In order to solve this issue, the assembly direction should be adjusted. Though, so far, there is no adequate algorithm to perform this efficiently. Thus, the choice of the “optimal” assembly direction holds some difficulties. Therefore, this approach may lead to implausible assembly positions, which can be regarded as a drawback of the difference surface approach in the positioning of cylindrical features.

In analogy to the result presentation for the 3-2-1 positioning, the assembly positions as well as the point distances between the optimization feature are shown in Fig. 17
                            for both relative positioning approaches. It can be seen, that the difference surface approach leads to a slightly tighter assembly position than the constrained registration method. However, it does not necessarily ensure the non-interference requirement for the complete pin, since only the planar contact between the pin head and the hole is considered.

Both presented approaches for the relative positioning of point-based Skin Model Shapes enable the assembly simulation of non-ideal part representatives. Main similarities between these approaches can be found in the fact, that they require the specification of assembly characteristics, that they converge to the nominal part position for nominal parts (R3) and that they prevent assembly positions causing part interference (R2). However, major differences between both approaches can be found as follows:
                           
                              •
                              In contrast to the constrained registration method, the difference surface approach aims not at minimizing the distances between any point pair of the features employing optimization algorithms, but computes deterministic contact points based on point-wise feature distances. Therefore, it does not fulfil R1 in a strict sense. However, as mentioned before, this requirement is not relevant for realistic assemblies.

The constrained registration approach with (point) distance based objective functions is prone to inhomogeneous point densities, i.e. feature areas with a high point density contribute more to the objective function than sparely occupied areas. This may lead to implausible assembly positions. In order to avoid this, volume based objective functions combined with point based constraints can be employed. However, these problems do not arise in the difference surface approach.

Based on these similarities and differences as well as on the presented studies, it can be found, that the difference surface approach is well suited for simulating the assembly of parts along predominant assembly directions, such as for example planar contacts, whereas the constrained registration method should be considered for assembly processes with “best-fit” requirements, such as cylindrical joints and complex mating surfaces. However, it can be concluded, that a careful choice of relative positioning algorithms is required for different assembly processes. Indeed, the reported results hint at the need for further studies in future works, which should also aim at combining both approaches.

In order to illustrate the applicability of the presented assembly simulation approaches for computer-aided tolerancing, they are applied to two case studies, where the first is a typical tolerance stack-up and the second is an over-constrained assembly with cylindrical fits.

The first assembly is a typical case study as presented i.a. by Turner   [53], which is a tolerance stack-up comprising two identical cubes enclosed by a bracket as can be seen from Fig. 18
                        . The gap 
                           s
                         is considered as the functional key characteristic  [54] and is measured as the minimum distance between the bracket and the second cube. The nominal values for the given dimensions are: 
                           a
                           =
                           90
                           
                           
                              mm
                           
                        , 
                           b
                           =
                           200
                           
                           
                              mm
                           
                        , and 
                           s
                           =
                           20
                           
                           
                              mm
                           
                        . In the following, a focus is set on the consideration of part deviations of the cube, whereas the bracket is considered as nominal.

The tolerance analysis approach starts with the generation of Skin Model Shapes based on shape modelling approaches  [17,55]. For this illustrative example, random geometric deviations are considered, which are modelled by a random field approach  [17,18]. The Skin Model Shapes are then measured with regard to the specified tolerances, where convex hull techniques are employed for the measurement of the flatness deviations  [17,56], whereas the perpendicularity tolerance is determined by associated planes as can be seen from Fig. 19
                        . In contrast to that, the position tolerance is computed by firstly assembling the part to a nominal measurement fixture by relative positioning methods and determining the distances between the toleranced feature and the measurement fixture using ray tracing approaches thereafter. The procedure is highlighted in Fig. 20
                        .

After the generation and measurement, the Skin Model Shapes are assembled employing the relative positioning approach based on the difference surface, where a slight adoption of the algorithm in Table 2 is employed in order to consider only the first two steps of the 3-2-1 positioning. An illustrative assembly with magnified part deviations can be seen from Fig. 21
                        , where the colours indicate the part deviations.

In order to evaluate the effects of different tolerance specifications on the gap distribution, two exemplary manufacturing processes for the cube are compared, which lead to different deviation distributions for the first cube (
                           
                              
                                 f
                              
                              
                                 …
                              
                              
                                 1
                              
                           
                        ) and the second one (
                           
                              
                                 f
                              
                              
                                 …
                              
                              
                                 2
                              
                           
                        ) as can be seen from Fig. 22
                        . The results on the gap distribution can be seen from Fig. 23
                        , where it can be found, that the manufacturing process with higher accuracy results in a gap distribution with smaller variation and a mean closer to the nominal gap value compare to the less accurate process. A further finding of this case study is, that relative positioning approaches cannot only be used to determine the relationship between part deviations and functional key characteristics of the assembly, but also to measure part deviations of Skin Model Shapes in conformance with tolerancing standards, as for example for the position tolerance with multiple references.

The second study case is an over-constrained assembly similarly to the examples studied in  [7,57,58]. It consists of a part with two tied cylinders and their corresponding holes in the second part as shown in Fig. 24
                        . The relevant constraint and optimization features are chosen in analogy to the example presented in Section  3.2. In contrast to the previous study case, the focus is set on the assemblability evaluation employing Skin Model Shapes, which are gathered from an injection moulding simulation as can be seen from Fig. 25
                        (a) with magnified deviations. For the assembly simulation, the constrained registration approach based on the absolute projected distance function 
                           
                              
                                 f
                              
                              
                                 
                                    PS
                                 
                              
                           
                         with the assembly direction as projection vector and the signed normal distances 
                           
                              
                                 d
                              
                              
                                 
                                    PSN
                                 
                              
                           
                         as constraints are employed. Regarding the part assemblability, it can be found, that the assembly is feasible, if the constrained optimization converges and results in an adequate part position. The results of the assembly simulation based on the constrained optimization approach for the case study can be seen from Fig. 25(b), where it can be found that the assembly is feasible though the presence of part deviations as a consequence to shrinkage and warpage.

The investigation of variant parts’ positions in assemblies to analyse the effects of part deviations on assembly and functional requirements is an ongoing challenge in computer-aided tolerancing research. In this contribution, two different classes of approaches for the relative positioning of Skin Model Shapes have been proposed, which make use of computational geometry algorithms. The first approach is based on a constrained optimization formulation, whereas the second method employs the difference surface to compute deterministic contact points between parts. These approaches have been applied to the assembly simulation of point-based Skin Model Shapes in prominent tolerancing case studies, where it can be found, that the difference surface approach is well suited for the 3-2-1 positioning, whereas the constrained registration approach leads to adequate results for loose cylindrical fits and “best-fit” problems. Both algorithms allow the consideration of form deviations already in the design of physical artefacts and enable the tolerance simulation in conformance with international GD&T standards.

However, the presented work is only a first step towards a comprehensive computer-aided tolerancing approach employing point-based models. Future research directions are the development of simulation models covering all kinds of assembly situations as well as the classification and validation of the employed approaches. As point-based models gain growing interest in the CAD community and industrial geometry, these challenges are to be solved in a flourishing interplay and collaboration between these domains.

@&#REFERENCES@&#

