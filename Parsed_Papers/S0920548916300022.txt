@&#MAIN-TITLE@&#Standards for enabling heterogeneous IaaS cloud federations

@&#HIGHLIGHTS@&#


               
                  
                     
                        
                           
                           We will describe the main challenges regarding cloud federation and in–teroperability.


                        
                        
                           
                           We will showcase and review the existing and emerging standards that can be use to tackle the gaps in cloud federations.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Cloud computing

Standards

Interoperability

Federation

@&#ABSTRACT@&#


               
               
                  Technology market is continuing a rapid growth phase where different resource providers and Cloud Management Frameworks are positioning to provide ad-hoc solutions–as management interfaces, information discovery or billing–trying to differentiate from competitors resulting in incompatibilites between them when addressing more complex scenarios like federated clouds.
                  Therefore, grasping interoperability problems present in current infrastructures by studying how existing and emerging standards could enhance the cloud user experience.
                  In this paper we will review the current open challenges in Infrastructure as a Service cloud interoperability and federation, as well as point to the potential standards that should alleviate these problems.
               
            

@&#INTRODUCTION@&#

Cloud computing is still considered as an emerging technology,now leaving its infancy phase. Standardization in the cloud was notconsidered as an urgent topic by the industry [1], as it is often associated to rigidity, not leaving much room for the innovation needed on the early stages of the technology [2].

Over the last years, a large number of commercial cloud providers have emerged in the market. Each of those vendors tries to differentiate their infrastructure from their competitors offering added value features on their resources. This has led to a situation where several closed and proprietary interfaces have evolved over the time, some being claimed as de-facto standards by the industry, even if they cannot be considered a proper standard at all. The resulting scenario is formed by infrastructures using different solutions that are incompatible and not interoperable, constricting users inside a single provider. These vendor lock-ins are often considered a desirable feature by commercial providers, as a way of engaging users on their resources and services, but it is perceived negatively by cloud users and customers [3].

More recently, several open source Cloud Management Frameworks (CMFs) have appeared in the cloud ecosystem. Some of them decided to adopt the most popular commercial and proprietary interface, implement a compatibility layer that tries to deliver the same functionality; whereas others have built their own interface. Both decisions are contributing to adding more entropy and heterogeneity into the cloud ecosystem. Users willing to exploit several infrastructures face a discouraging panorama, with strong industrial actors driving the developments that have promoted a situation where proprietary and industry-driven interfaces and protocols have dominated the cloud landscape for years [4].

As the cloud computing paradigm is maturing and its heterogeneity is growing, cloud interoperability and federation are becoming areas of concern [5,6]. Federation and interoperability are nowadays considered as one of the main pressing issues towards cloud computing adoption [7]. The vendor lock-ins that currently exist are perceived negatively by users, therefore building and defining frameworks for cloud interoperability is becoming a topic with growing interest [8,9,10,11,12,13]. Moreover, political and government bodies such as the European Commission have stated their position towards the promotion of Open Standards for ensuring interoperability in clouds for science and public administration [14,15].

Nevertheless, cloud federation goes beyond just making several clouds interoperable [16]. A federation should enable the collaboration and cooperation of different providers, delivering resources to the users when a single resource provider is not able to satisfy the user demands, in a collaborative way. Therefore, on top of the interoperability and portability issues, there are several challenges that any federation must tackle.

In this paper we will review the open challenges when building an interoperable cloud federation. We will review the existing enabling standards that can be used to leverage the construction of such a federation of Infrastructure as a Service (IaaS) providers based on them. We will focus on a horizontal federation between different IaaS providers, Therefore a vertical federation spanning several layers is out of the scope of this paper.

In Section 2 we will present the related work in the area. In Section 3 we will present the biggest challenges that an interoperable cloud federation must assess. In Section 4 we focus on the existing and raising standards and how they can be used to tackle the problems presented in Section 3. Finally we present our conclusions in Section 5.

@&#RELATED WORK@&#

Some work and research have been done into cloud interoperability, although a lot of the work is regarding cloud portability between different cloud infrastructures.

There are many non academic works regarding the need, or lack thereof, for a cloud standard. However, authors agree that there would not exist such a unique standard to rule all the cloud aspects. Some preliminary work regarding the need of standards for the cloud has been done in the past [3,17].

The United States National Institute of Standards and Technology (NIST) has surveyed the existing standards for interoperability, performance, portability, security and accessibility in the Cloud Computing Standards Roadmap [18]. However, there are some aspects like information discovery or accounting that are missing in this study.

The G. Lewis [19] report tackles several standardization areas such as workload management, data and cloud management APIs, concluding that there will be not a single standard for the cloud due to pressures and the influences of existing vendors. The author states that an agreement on a set of standards for each of the needed areas would reduce the migration efforts and enable the third generation of cloud systems.

Harsh et al. [20] work surveyed the existing standards for the management of cloud computing services and infrastructure within the Contrail project so as to avoid vendor lock-in issues and ensure interoperability. In the same line, Zhang et al. [21] carried out a complete survey regarding Infrastructure as a Service access, management and interoperability, studying OVF, CDMI and OCCI. However, the analysis lacks other federation challenges.

On top of those academic efforts, some open source Cloud Management Frameworks (CMFs) have started to take into consideration the federation issues. There are development efforts aimed to make possible to federate different aspects of distributed cloud infrastructures to an extent: 
                        
                           •
                           OpenStack [22] implements several levels of federation by the usage of cells and regions. Cells allow to run a distributed cloud sharing the same API endpoint, whereas regions are based on having separate API endpoints, federating some common services. On top of that, OpenStack also implements a federated authentication mechanism [23], making possible to authenticate users coming from trusted external services or third-party identity providers.

CloudStack [24] follows the same line as OpenStack and implements the concept of regions in their software.

OpenNebula [25] makes possible to configure several installations into a tightly integrated federation, sharing the same users, groups and configurations along several cloud sites.

Eucalyptus [26] provides identity federation, making possible to reuse the same credentials in several Eucalyptus infrastructures.

However, all of these solutions are focused on federating several instances of the same CMF (i.e. several OpenNebula installations, for instance), being impossible or difficult to federate disparate and heterogeneous infrastructures (e.g. an OpenStack installation together with an OpenNebula instance).

There a few prominent existing federated infrastructures, some of them being built on top of standards. Some examples of standards-based federations are the EUBrazil Cloud Connect [27], whose middleware is being based on standards for interoperability [28]; and the European Grid Infrastructure (EGI) [29], that started as a federation of grid sites, took the strategic position of exploring and adopting a technology agnostic and based on open standards cloud [12] into their services portfolio. In this context, the Open Science Cloud initiative [30] has outlined that interoperable, distributed and open principles should drive the evolution of Science Clouds as the key to success.

As we briefly exposed in Section 1, a cloud federation should take into account other aspects apart from interoperability and portability such as authentication, authorization or accounting. In the following sections we will elaborate on the open challenges regarding cloud federation.

One of the first obstacles that a heterogeneous cloud federation has to overcome is the lack of a unified cloud interface. Evolving from commercial cloud providers, each middleware implements their own — proprietary or not — interface. Some open CMFs implement an Amazon Web Services (AWS) EC2 [31] compatibility layer, since it was considered as the most popular commercial interface for the cloud.

The adoption of the AWS EC2 API could make two different CMFs being interoperable, but it presents several obvious drawbacks. First of all, its usage and promotion introduce a vendor lock-in, as users can be locked into one infrastructure if the original vendor decides to change its API from one day to another. A proprietary API is subject to change without prior advice by the original vendor. This will render into incompatibilities between providers and CMFs other than the original creator of the API, Amazon in this case. Implementers of such proprietary interfaces need to keep aligned with the reference implementation, and are forced to invest time in following the modifications so that they ensure that its implementation remains compatible.

Secondly, the EC2 Query API is not RESTful [32]. Even if it uses the standard components of the HTTP protocol to represent API actions it does not use the HTTP message components to indicate the API operations, being them expressed as parameters (in the URI parameters of a GET request or in the body of a POST request). This URI-based parameter passing is not enough for defining an interoperable API allowing a standardized implementation. Moreover, as it is not RESTful, it introduces additional complexity for developers exploiting these clouds, as they have to learn the semantics being used instead of the well known REST architectural style. Lastly, the usage of the query component of an URI to obtain hierarchical data goes against the RFC-3986 “Uniform Resource Identifier (URI): Generic Syntax”[33], as it states that “The query component contains non-hierarchical data that along with data in the path component, serves to identify a resource (…)”.

Cloud computing leverages virtualization technologies to abstract the resources being offered to the users. Several virtualization hypervisors (such as Xen, KVM, VMWare, Hyper-V) exist in the market, and each cloud provider uses the one of its choice (or even a combination of them). Moreover, recently operating system level virtualization (that is, container-based such as LXC, OpenVZ and Docker) has emerged in the virtualization ecosystem, being adopted more and by the providers.

This situation renders difficult migration of one Virtual Machine (VM) prepared to be executed in one cloud provider using one virtualization technology, into another provider with a different underlying hypervisor. Moreover, the virtualization technology is hidden and abstracted from the users by the CMFs, hence even if they have the technological skills to prepare and modify a VM to be executed on another hypervisor they would find difficulties in adapting it. Porting one VM to a different hypervisor may require access to consoles and debugging output, that cloud providers may be reluctant to provide.

The delivery of a homogeneous authentication and authorization via a federated identity management system in distributed environment is a challenging topic [23,34], not exclusive to cloud computing. As a matter of fact, cloud computing is just another actor in such environments, formed by disparate services and infrastructures.

A federated identity management system should facilitate flexible authentication methods and federated authorization management. The lack of it makes difficult to manage the users globally at the federation, that is, specifying what resource a user is able to access or globally disabling a user becomes a challenging task.

This challenge is two folded as it affects both the users and the resource providers. 
                           
                              •
                              From the user's perspective, they are forced to cope with the burden of managing several credentials and identities. Moreover, client tools need to deal with them as well, identifying that identity A should be used against provider A but not provider B.

It increases the management complexity for the resource providers. If there is not such a federated identity management system, users are to be managed manually, thus incurring in a tremendous overhead. Moreover, federations should have a way to prevent a malicious user from accessing the infrastructure any longer in an automated way without intervention from the resource provider.

Once a federation is established, one challenge is to define how users are able to discover what resources and capabilities are offered by the federation, so that they can consume them.

This information may be exposed to the users via each of the middleware native APIs, by each of the resource providers participating in the federation. However, this information is not structured in a homogeneous way so that clients can fetch that information and help users making a decision.

In federated infrastructures it is often required to keep track of resource usage for each user and group at every individual provider, so that this information is shared and aggregated at the federation level. This way, users are accounted properly for their resource consumption. This aspect is tightly coupled with the federated identity management systems, as users need to be unambiguously identified throughout the infrastructure. Currently, each Cloud Management Framework and provider may have their own accounting methods, but there is no common way for accessing and/or aggregating that information at the federation level.

It may be possible to obtain interoperability without the usage of Open Standards [35], but it is arguably a more logical way to develop an interoperable federation based on them.

There is not a unique cloud standard to rule all of the aspects regarding clouds [17], neither there is a single federation standard. Nevertheless, there are several well established standards covering some of the open issues; developed prior to the raise of cloud computing and that can be simply reused, adapted or updated to fill in the needed gaps. On top of them there are a number of emerging standards being developed specifically to cover more specific cloud computing topics.

It is the combination of both — existing and emerging standards — they key to solve all the federation and interoperability issues described in Section 3, as we will describe through the rest of the section.

Several organizations and standardization bodies have started working from the early stages of cloud computing trying to build standards for cloud management. Currently, the most prominent examples regarding IaaS computing and storage management are OCCI, CIMI, TOSCA and CDMI:


                        
                           
                              OCCI
                           
                           
                              The Open Grid Forum (OGF) [36] has proposed the Open Cloud Computing Interface (OCCI) [37,38,39], focusing on facilitating an interoperable access and management of IaaS cloud resources. OCCI offers different renderings over the HTTP protocol, leading to a RESTful API implementation.

The Cloud Infrastructure Management Interface (CIMI) [40] is a proposal from the Distributed Management Task Force (DMTF) [41] that has been recently registered as an ISO/IEC standard [42]. CIMI targets the management of the life-cycle of the IaaS resources, offering a RESTful API over the HTTP protocol with various renderings.

The Topology and Orchestration Specification for Cloud Applications (TOSCA) [43] is a standard from the Organization for the Advancement of Structured Information Standards (OASIS) [44]. TOSCA provides a language to describe composite services and applications on a cloud, as well as their relationships (i.e. the topology), makes also possible to describe its operational and management aspects (i.e. its orchestration). Although TOSCA is at a higher level than simply managing the IaaS resources ——it is more focused on the orchestration of the resources —, it should be considered as a complementary standard for the management of the resources.

The Storage Networking Industry Association (SNIA) has proposed the Cloud Data Management Interface (CDMI), defining an interface to perform different operations (creation, retrieval, update and removal) on data stored on a cloud.

The Open Virtualization Format (OVF) [45] is a standard developed by the DMTF for packaging and describing a Virtual Appliance (VA), comprised of an arbitrary number of virtual machines in a portable and vendor neutral format. An OVF package contains an XML description (e.g. hardware configuration, disks used, network configuration, contextualization information) of each component of the VA.

There area large number of standards that can be used for authentication and authorization. The implementation and adoption of one technology or another will eventually depend on the infrastructures that are going to be federated, and there will be no silver bullet that will fit all of the existing infrastructures. Authentication and authorization sometimes imply political aspects that are out of the scope of the standardization efforts.

The X.509 Public Key Infrastructure [46] has been used for authentication in the grid world via the Grid Security Infrastructure (GSI), based on X.509 certificate proxies [47]. Authorization is done by embedding Attribute Certificates (AC) into the proxy, containing assertions about the user. The most notable service is the Virtual Organization Management System (VOMS) [48], being used in some federated cloud infrastructures [49]. However, the direct usage of X.509 certificates is not considered being user-friendly — due to the management burden — and an inflexible — for instance, it is difficult to perform a delegation of trust — solution in spite of being settled on several distributed infrastructures over the years.

The OASIS Security Assertion Markup Language (SAML) [50] is built in X.509 and defines a way to define authentication and attribute assertions in XML. Shibboleth [51] is an implementation of SAML and is focused on the federation of resource providers with different authentication and authorization schemes. Several projects have started looking at SAML and Shibboleth [52,53] as a promising way to provide access to distributed infrastructures, although they have not substituted the direct usage of X.509 certificates yet.

OAuth 1.0 [54] and OAuth 2.0 [55] are IETF open standards for authorization, providing delegated access to some resources on behalf of the resource owner. OAuth has not been designed for authentication, therefore OpenID Connect (OIDC) [56] has been developed as an authentication layer on top of OAuth 2.0.

Information discovery is a problem present in other federated computing paradigms such as grids. The Grid Laboratory Uniform Environment (GLUE) Schema — in its versions 1.x [57] and 2.0 [58] — has been designed by the OGF in order to create an information model relying on the knowledge and experience from the operations of several large grid infrastructures.

The current GLUE 2.0 specification [58] only defines a conceptual model. It makes possible to publish, separately from the standard, concrete data model profiles that will dictate how the information is generated and used in a concrete implementation, infrastructure, and etc. Therefore, the OGF GLUE 2.0 schema is a good candidate for publishing information relative to cloud infrastructures, extending it and creating a cloud profile.

As with the information discovery, the accounting problem is a problem that has been already tackled in the grid. The OGF Usage Record (UR) 2.0 [59] defines a common format to share and exchange basic accounting data, coming from different providers and different resources. It supersedes and integrates the different resource usage records that leveraged the previous UR 1.0 in the various infrastructures that implemented it.

The OGF UR does not specify how the records should be exploited (e.g. how they should be exported, used, aggregated, summarized) or transported. Examples on how the UR is used exist in projects such as RESERVOIR [60] and infrastructures such as EGI [29].

@&#CONCLUSIONS@&#

As we explained, cloud federation involves a lot of different areas and challenges — management, authentication, accounting, interoperability, etc.—, therefore there is not a unique standard for it. However, there is a set of settled and emerging standards that can cover all the federation aspects and their problematics, as summarized in Table 1
                     .

The European Commission is encouraging the usage of Open Standards in its “European Interoperability Framework for pan-European eGovernment Services” [14]. The United Kingdom Government provided a similar set of principles, adopted 2014 [61]. Similarly, the US National Institute of Standards and Technology (NIST) has recommended that national agencies should specify cloud computing standards in their procurements [18]. Moreover, there are some European initiatives, such as the Open Science Cloud [30], promoting the usage of Open Standards as one of the success factors for open clouds.

In this document we have presented the existing challenges that need to be tackled for building an interoperable federation of cloud providers and we have surveyed the existing and arising standards that can be used to solve those problems. Current Cloud Management Frameworks should adopt these existing standards for the functionality they are offering, so as to avoid vendor lock-in issues and to ensure a that proper interoperability is delivered to the users. Moreover, cloud federations must take into account the existing recommendations and they should promote its usage as the path to a successful federation and interoperability.

@&#ACKNOWLEDGMENTS@&#

The authors want to acknowledge the support, in no particular order, of the EGI-Engage (grant number 654142) and INDIGO-Datacloud (grant number 653549) projects, funded by the European Commission's Horizon 2020 Framework Programme.

The authors also want to thank the IFCA Advanced Computing and e-Science Group.

@&#REFERENCES@&#

