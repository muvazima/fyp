@&#MAIN-TITLE@&#Post-processing techniques for making reliable measurements from curve-skeletons

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Post-processing techniques for making reliable measurements from curve-skeletons.


                        
                        
                           
                           Based on a sampling of an object on a scale related to its local thickness.


                        
                        
                           
                           User independent.


                        
                        
                           
                           Applied to computed tomography scans of trabecular bone and tumour vasculature.


                        
                        
                           
                           Measured lengths and cross-sectional thicknesses much less sensitive to noise.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Curve skeleton

Medial axis transform (MAT)

Vascular network

Computed tomography (CT)

Tortuosity

Local thickness

@&#ABSTRACT@&#


               
               
                  Interconnected 3-D networks occur widely in biology and the geometry of such branched networks can be described by curve-skeletons, allowing parameters such as path lengths, path tortuosities and cross-sectional thicknesses to be quantified. However, curve-skeletons are typically sensitive to small scale surface features which may arise from noise in the imaging data. In this paper, new post-processing techniques for curve-skeletons are presented which ensure that measurements of lengths and thicknesses are less sensitive to these small scale surface features. The techniques achieve sub-voxel accuracy and are based on a minimal sphere-network representation in which the object is modelled as a string of minimally overlapping spheres, and as such samples the object on a scale related to the local thickness. A new measure of cross-sectional dimension termed the modal radius is defined and shown to be more robust in comparison with the standard measure (the internal radius), while retaining the desirable feature of capturing the size of structures in terms of a single measure. The techniques are demonstrated by application to trabecular bone and tumour vascular network case studies where the volumetric data was obtained by high resolution computed tomography.
               
            

@&#INTRODUCTION@&#

Many biological structures contain features which form a 3-D interconnected network, such as blood vessels and nerve fibres within a tissue [1,2], air pathways in the lungs [3], trabecular bone [4] and the root systems of plants [5]. The geometry of these networks can be characterised in terms of branch connectivity, path lengths and cross-sectional thicknesses, which in turn influence the structural properties as well as the transport of gasses or liquids. These characteristics can be derived from 3-D volumetric data (e.g. from x-ray computed tomography (CT) scans [6]) by representing the structure as a curvilinear skeleton which corresponds to the ‘local centres’ or ‘backbone’ of the structure [7]. However, the measurements of path length and cross-sectional thickness using this approach can be particularly sensitive to small scale surface features, which may be inherent in the object or due to noise in the volumetric data.

In this paper, new user-independent and fast post-processing techniques for curve-skeletons are described which enable more reliable estimates of path lengths, tortuosities and cross-sectional thicknesses to be obtained. The techniques are particularly suited to voxelised data obtain by tomographic scanners and are based on a minimal sphere-network representation, in which the curve-skeleton is sampled on a scale related to the local thickness of the object. As such the object is represented as a string of minimally overlapping spheres. The techniques achieve sub-voxel accuracy and are validated using simulated data sets with varying noise levels and by application to shape repository test objects. The efficacy of the techniques is then considered by application to two case studies for which the data has been obtained by x-ray computed tomography. In the first case study (trabecular bone), the robustness to different image noise levels is considered, and in the second (tumour vasculature) a comparison is made to a minimum-cost path algorithm.

An important challenge when characterizing networks is to provide a curvilinear skeleton of the structure that describes the ‘backbone’ of the interconnections. The medial axis transform (MAT) is commonly used for this purpose. The medial axis is defined as the locus of the centres of maximal inscribed spheres [7,8], and as such the object is represented by an infinite union of spheres, all of which touch the object surface in at least 2 points. The medial axis is derived from the distance map, which gives the shortest distance from any voxel in the object to its boundary. Points on the medial axis are located at local maxima in the distance map corresponding to singular points (discontinuities in the gradient of the distance map). The distance map also gives a simple measure of the local thickness of the structure (e.g. pore space) at a given point on the medial axis, i.e. the largest diameter sphere that will fit within the structure at that point. The medial axis is well known to be sensitive to small scale surface features and, in particular, protrusions can lead to extra branches in the medial axis, whereas depressions can lead to a local change in the position of the medial axis. Furthermore, only in the case of tubular structures will the medial axis be composed of 1-dimensional lines; for general 3-D shapes it will be composed of 2-D sheets (manifolds) which form ‘surface’ skeletons [9,10].

A curvilinear skeleton (or curve-skeleton) of a 3-D object is a more recent, but less well mathematically defined, concept in comparison to MAT. Cornea et al. 
                     [11] described a set of desirable properties that a curve-skeleton should possess, including the following: be 1-dimensional; be centred within the object; be homotopic to the original object; be invariant under isometric transformations; be robust to noise; be smooth. There are a wide variety of algorithms to calculate curve-skeletons from meshes, point clouds, or voxelised data, which possess the desirable properties to a greater or lesser degree. An overview of some algorithms is given in [11–13].

Robustness to small scale surface features is a key requirement if reliable measurements are to be made from curve-skeletons. It is often the low spatial frequency component of the skeleton which is of interest, particularly when the surface detail is primarily due to noise, or if it varies across the structure or between structures. Robustness can be defined in relation to 3 characteristics, namely: (1) stability of the number and connectedness of branch points and branches; (2) smoothness of the segments that make up the skeleton; (3) stability of the local thickness measure associated with each point in the skeleton. Much research has been carried out to address (1) via pruning algorithms based on a measure of the saliency of each branch [12,14,15], or for simple tubular structures by constructing the shortest path through the skeleton [16,17]. Recent research has focused on both (1) and (2) with a range of algorithms in literature being shown, largely visually, to be reasonably robust to noise. However, the algorithms typically have a number of input parameters which directly or indirectly affect the robustness so that the degree of smoothing is therefore somewhat user dependent [18–27]. Similarly, those curve-skeletons derived from meshes or surface approximations (see algorithms reviewed in [11,28] for example) will be affected, to differing degrees, by the choices made when generating the mesh or surface approximation from volumetric data, which generally include the amount of surface smoothing and the number of surface elements. Furthermore, different algorithms can produce curve-skeletons with different branch points, connectivities and branch locations. Examples of this are given in [11,12,28]. Therefore the most robust algorithms may not generate the curve-skeleton with the most desirable form for a given application. Finally, algorithms differ in their complexity, such that it may be impractical to apply some robust algorithms to large data sets (e.g. the potential field approach can take 1–2 orders of magnitude longer to compute than other algorithms [11]).

Recent promising approaches to address (1) and (2) that are particularly suited to 3-D medical imaging data are based on minimum-cost path algorithms (MCPA) [3,29–32]. The approaches involve two main steps; the first involving calculation of a cost function (via the fast marching method for example) from a start voxel to all other voxels in the structure. In the second step, the geodesic path from an end point to the start point is determined by gradient descent in the cost function, with sub-voxel resolution being possible by interpolation. The cost function weighting is chosen to ensure the geodesic paths are attracted to local centre points in the object, while being less sensitive to surface detail. A key advantage is that the approach can be applied directly to the volumetric data without segmentation, provided a suitable cost function can be specified. However, the approach has a number of disadvantages, including the fact that a suitable cost function may be complex to specify, few points may actually lie on the medial axis and it may be difficult to automatically specify the start and end points of a complex network. Care must also be taken to ensure that the computed paths do not take undesired shortcuts through the object (e.g. see [3,33]). Finally, the approach can be slow for large data sets, such as those obtained by high resolution 3-D imaging (e.g. microCT data sets typically contain 8×109 voxels or greater), where there are many possible paths through the structure [29].

Robustness in terms of the local thickness measure (3) has received less attention. Saha et al. [34] used the fuzzy distance transform to measure trabecular bone thickness from 3-D voxelized data sets. The fuzzy distance transform was sampled along the skeleton of the object's support, and they demonstrated that this measure was robust down to a signal-to-noise ratio as low as ~5. However, the technique is reliant on a fuzzy membership of each voxel to the object under consideration, which may not be straightforward to define, depending on the contrast between the object and background. Coeurjolly developed an alternative approach to capture the distribution of thicknesses based on the power diagram [9]. The mean values of these measures (over the object) were shown to be stable to noise, and hence are useful in capturing overall (global) statistics. Rolland-Nevière et al. extended the shape diameter function to develop a robust thickness estimate for 3-D objects bounded by a surface mesh [35]. The algorithm returns a scale-dependent thickness measurement on the object's surface mesh.

Approaches based on MCPA do not give a direct measure of local thickness within the object. Instead, Schena and Favretto [30] calculated the cross-sectional area on planes perpendicular to the path direction, from which a simplified description in terms of equivalent diameters could be calculated. The equivalent diameter is calculated from the cross-sectional area, A, as 2(A/π)0.5. While the equivalent diameters capture aspects of the cross-sectional geometry in terms of a single number, they can be misleading as cross-sections with widely differing aspect ratios can give the same value. By contrast, the medial axis approach provides an unambiguous measure of thickness, being the diameter of the largest sphere which will fit into the structure at each point on the skeleton.

@&#MOTIVATION@&#

In computer graphics, sphere-trees are hierarchical representations of 3-D objects made by a union of overlapping spheres, with the hierarchy given by the level of detail considered [36,37]. This volume filling representation is useful for fast collision detection and computing intersection volumes. This type of representation has also been used for segmentation of curves from 2-D images, in a technique termed ‘pearling’ [38]. The curves are represented as overlapping discs from which a smooth centre-line can be extracted. Here we construct a 3-D sphere-network representation by sampling the curve-skeleton with minimally overlapping spheres, this being the smallest subset of the curve-skeleton which maintains the union of spheres and also spans the object. This minimal sphere-network applied to curve-skeletons representation (SNACS) is not fully volume-filling, but instead is a connected sampling of the object on a scale related to the local thickness, which determines the level of detail considered. As such, the influence of small scale surface features on geometrical measures derived from the skeleton, such as length and tortuosity, is reduced.

The representation takes into account the natural limit that the local internal thickness places on the spatial frequencies present in the curve-skeleton. This effect is illustrated in 
                        Fig. 1, where a 2-D tube is created by a circle following a triangular wave path. When the period of the wave is large compared to the circle diameter, the medial axis closely follows the underlying path. As the wavelength shortens, parts of the structure overlap, and the medial axis follows a smooth oscillating path with much reduced amplitude. The peaks are then considered to be side branches of the main structure. For even shorter wavelengths, the approach collapses to a straight line path through the structure, with side branches that capture the surface detail. Therefore, for a smooth object, the medial axis segments are expected to vary slowly on a scale related to the local thickness. High frequency components in the medial axis can therefore be considered to be due to surface detail or noise.

The measurement of path lengths, L
                        path, though a skeleton are directly related to segment smoothness. This can be seen for a noisy path which is generated by adding uncorrelated normally distributed random vectors, of mean length σ and mean components equal to 0, to each point on the curve. The expected noisy path length (over repeated measurements) is then given by L
                        noisy
                        2=L
                        2+2(Np
                        −1)σ
                        2, where L is the noise free path length and Np
                         is the number of points that comprise the curve. Noise will therefore lead to an overestimation of path length. A related measure is tortuosity, which can be defined as the ratio of the path length to the Euclidean (shortest) distance between the start and end points, τ=L
                        path/L
                        euclid 
                        [39].

For calculation of the SNACS representation, the input curve-skeleton is taken to comprise an ordered set of coordinates of the centre-lines through the object as well as a measure of the object's thickness at each coordinate point. For voxelated data sets typically provided by medical imaging modalities, the internal object thickness R
                        I can be calculated from the distance transform for example. For a given branch or path through the object's curve-skeleton, having an ordered coordinate set {r
                        
                           k
                        } (such that point k+1 follows point k along the branch/path) and internal object thicknesses Rk
                        =R
                        I(r
                        
                           k
                        ), we can find the sphere-network coordinates {s
                        
                           j
                        } of the minimally overlapping spheres given a start point (s
                        1=r
                        1) via the following pseudo-code algorithm:
                           
                              Table
                              
                                 
                                 
                                 
                                 
                                    
                                       1:
                                       
                                          initialise: j=1, s
                                          1=r
                                          1, 
                                          R
                                          1=R
                                          I(s
                                          1), P={r
                                          
                                             k
                                           | k>1}
                                       
                                    
                                    
                                       2:
                                       
                                          while |P|>0
                                       
                                    
                                    
                                       3:
                                       
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      j
                                                      +
                                                      1
                                                   
                                                
                                                =
                                                
                                                   
                                                      arg
                                                      
                                                      max
                                                   
                                                   
                                                      
                                                         
                                                            r
                                                         
                                                         
                                                            k
                                                         
                                                      
                                                      ∈
                                                      P
                                                   
                                                
                                                
                                                   (
                                                   
                                                      ‖
                                                      
                                                         
                                                            
                                                               s
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         −
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                      ‖
                                                   
                                                   )
                                                
                                             
                                             
                                             (
                                             1
                                             )
                                          
                                       
                                    
                                    
                                       4:
                                       
                                          
                                          
                                          subject to 
                                          
                                             
                                                
                                                   
                                                      
                                                         ‖
                                                         
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                            −
                                                            
                                                               
                                                                  r
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                         ‖
                                                      
                                                      ≤
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            I
                                                         
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                         
                                                         )
                                                      
                                                      +
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            I
                                                         
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               
                                                                  r
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                         )
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      
                                                         ‖
                                                         
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                            −
                                                            
                                                               
                                                                  r
                                                               
                                                               
                                                                  l
                                                               
                                                            
                                                         
                                                         ‖
                                                      
                                                      <
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            I
                                                         
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                         
                                                         )
                                                      
                                                      +
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            I
                                                         
                                                      
                                                      
                                                         (
                                                         
                                                            
                                                               
                                                                  r
                                                               
                                                               
                                                                  l
                                                               
                                                            
                                                         
                                                         )
                                                      
                                                      ∀
                                                      
                                                         {
                                                         
                                                            l
                                                            |
                                                            0
                                                            <
                                                            l
                                                            <
                                                            k
                                                         
                                                         }
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                    
                                    
                                       5:
                                       
                                          
                                          P=P / linkage(s
                                          
                                             j
                                          , s
                                          
                                             j+1)
                                       
                                    
                                    
                                       6:
                                       
                                          end
                                       
                                       
                                    
                                 
                              
                           
                        
                     

The second condition for the argument of the maximum ensures that for a closed loop path, the sphere-network cannot miss out part of the path and jump to the end point. If R
                        Imax is the maximum value of the distance map, then only those points on the centre-line within R
                        Imax+R
                        I(s
                           j
                        ) need be considered.

The linkage is the set of all points in the skeleton between s
                           j
                         and s
                           j+1. This can be found in practice by locating points in the linkage volume, which is defined as the volume swept by a sphere along a path from s
                           j
                         to s
                           j+1 with a corresponding change in sphere radius from R
                        I(s
                        
                           j
                        ) to R
                        I(s
                        
                           j+1). In this work, the linkage path positions and sphere radii are calculated by linear interpolation. The output of the algorithm is shown for the helix test object (Section 4.1) in 
                        Fig. 2.

SNACS can be carried out for all segments in the curve-skeleton, to create a full representation of the object. The above algorithm is applicable when the input curve-skeleton is densely sampled. That is, for neighbouring points in the curve-skeleton || r
                        
                           k+1−r
                        
                           k
                        || < min(R
                        I(r
                        
                           k
                        ), R
                        I(r
                        
                           k+1)) &forall; k. This is typically the case for voxel based skeletonization algorithms. Sparse curve-skeletons can be accommodated by either allowing jumps in SNACS (such that neighbouring spheres do not have to touch/overlap) or by interpolation to generate a dense sampling. In either case, the sparse curve-skeletons will have regions that are already slowly varying on a scale related to the local thickness, and as such SNACS will return a very similar representation for those regions. In the extreme case where all curve-skeleton points are separated by distances greater than the local thickness, {s
                        
                           j
                        }={r
                        
                           j
                        } for all branches. However it should be noted that key features of the object may be missed by a sparse curve-skeleton.

The output of SNACS depends on the given starting point, which will typically be one of the nodes (branch points or end points). The end point for SNACS will be the corresponding node at the opposite end of the branch segment or path. However by allowing the starting point for SNACS to be a randomly chosen non-node point, a family of sphere-networks can be created for each branch or path. SNACS is then carried out for each randomly chosen start point to each of the 2 node points marking the ends of the branch/path. We will refer to this approach as multi-seed (msSNACS) in contrast to the single seed (ssSNACS) approach.

For ssSNACS, a final representation of the curve-skeleton can be constructed by using spline interpolation to generate smooth paths between sphere centres, from which the path length can be calculated. However, it was anticipated that this interpolation may overestimate path length where there is a very sharp change in direction. Therefore, a ‘restricted spline’ method was developed in which the path also passes through the point where the spheres touch, or if the spheres overlap, through the centre point of the overlap region.

The family of sphere-networks from msSNACS can be used directly when making measurements of path length, for example, by taking the ensemble average. It can be anticipated that the ensemble average will be more robust to noise than applying SNACS with a single seed point, with the variance depending on the number of seed points used. For a scalar measurement M derived from the SNACS representation, let Mk
                         be the measurement corresponding to the k
                        th seed point, and denote the ensemble average over N
                        s seed points as M*(N
                        s), and the average over all possible seed points as 
                           
                              M
                              ¯
                           
                        . If Mk
                         are independently identically distributed, then the expectation (over repeated instances of the same noisy object) of the variance in M*(N
                        s), would take the form of VAR(
                           
                              M
                              ¯
                           
                        )+E((Mk
                        −
                           
                              M
                              ¯
                           
                        )2)/N
                        s. Alternatively, a specific path could be selected from the ensemble, which for example minimizes the mean squared deviation from the curve-skeleton.

An alternative approach to the ensemble average is to define a net curve for each skeleton segment which is ‘centred’ with respect to the family of curves produced by msSNACS. We make use of principal curves [40,41] for this by treating the family of curves as noisy instances of the net curve. Each instance is locally smooth (on the scale related to the local thickness) but may contain lower spatial frequency noise since the spheres are located at points on the original curve-skeleton. We calculate the net curve, based on the iterative algorithm given in [40] as follows and an illustration is shown in 
                        Fig. 3 for the cylinder test object:
                           
                              1)
                              Generate densely sampled curves (e.g. samples points separated by <1 voxels) for each msSNACS representation by using spline interpolation.

Initiate the net curve to be one of the curves produced in step 1.

Parameterize the net curve in equal steps of path length, λ, to give a sequence of points to optimize, s
                                 net(λj
                                 ) for j=1…J.

Optimize snet(λj
                                 ) as follows, where ε is for e.g. 1 voxel:

For voxelated data sets, the internal radius of the structure can be determined from the distance map value along the centre line path, R
                        I. However, this measure of thickness only takes into account the closest point on the surface to the position along the path, and does not account for noise or small scale surface detail. Therefore, we define a new measure termed the modal radius, R
                        M, corresponding to the distance about the centre-line position, on the plane perpendicular to the path, at which the number of edge voxels is maximized. An illustration of this is shown in 
                        Fig. 4(b).

In practice, selecting only those edge voxels on the plane perpendicular to the centre-line path can lead to high statistical uncertainties in the modal radii. Therefore we propose a weighted contribution, S(R), over the set of all edge voxels {vi
                        (R)} at a given radius, R, which is calculated as follows for each sphere:
                           
                              (2)
                              
                                 
                                    S
                                    
                                       (
                                       R
                                       )
                                    
                                    =
                                    
                                       1
                                       R
                                    
                                    
                                       
                                          ∑
                                          i
                                       
                                       
                                          (
                                          
                                             1
                                             −
                                             
                                                
                                                   
                                                      cos
                                                   
                                                   γ
                                                
                                             
                                             
                                                
                                                   θ
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          )
                                       
                                    
                                    
                                    for
                                    
                                    R
                                    ≥
                                    
                                       
                                          R
                                       
                                       
                                          I
                                          i
                                       
                                    
                                 
                              
                           
                        where θ
                        i is the angle between the tangent to the centre-line path and the vector joining the i
                        th edge voxel and the current centre-line position. Therefore voxels in the plane perpendicular to the tangent have most weight, with the contribution from out of plane voxels being controlled by a weight parameter γ. Values of γ in the range 0–1 were considered. The factor of R
                        −1 accounts for the fact that the number of edge voxels would typically be expected to be proportional to the sphere circumference. R
                        M is set to the value of R corresponding to the first peak in S with increasing R. As small peaks can arise due to statistical variations, S was first smoothed before locating the first peak (see Fig. 4(a)), using kernel density estimation [42] with a Gaussian kernel of bandwidth in the range 0.25–0.75 voxels. When a family of sphere-networks is generated for each branch/path, the mean modal radius of the branch/path can be calculated as the ensemble average.

This method is suitable for application to segments between branch points. At branch points there may be an ambiguity in which surface voxels relate to the path under consideration and which relate to other segments. This is particularly likely to be the case where there are many branches in the plane perpendicular to the path direction. However, it was found in simulations for a branch point formed from 3 orthogonal cylinders crossing at the origin (so that there are 6 branches emanating from the origin), that the overestimation in sphere radius after inflation due to this effect was less than 1.5 pixels in the no-noise case.

The techniques were applied to 2 simulated test objects to determine their robustness to added noise. Tortuosities are directly compared to those derived from the generic MCPA of Schena and Favretto [30], which was applied using the fast marching toolbox by Peyre available on Matlab file exchange [43]. This toolbox uses the ‘stream3’ built in Matlab function for calculation of the geodesic paths. This algorithm will be referred to as SF. Finally the skeleton net curves are calculated for a range of objects obtained from standard shape repositories.

The first test case was a cylinder with radius being a normally distributed random variable (over the polar angle and along the primary axis) with mean r=25 voxels and standard deviation given by Nr, where N is the noise level which was varied between 2% and 20%. For each noise level, 21 cylinders were generated, each in a volume of 100×100×500 voxels, and a corresponding curve skeleton was created by locating the maximum of the distance transform on each slice perpendicular to the primary axis. A rendering is shown in Fig. 3.

The second test case was a simulated computed tomography scan of a helical tube with circular cross-section of radius R
                        T (Fig. 2). The helical centre-line path had radius R
                        H and pitch (2πα)−1. The tortuosity of the centre-line along the tube is given as follows as a function of distance t along the primary axis of the helix:
                           
                              (3)
                              
                                 
                                    τ
                                    
                                       (
                                       t
                                       )
                                    
                                    =
                                    
                                       
                                          t
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            H
                                                         
                                                      
                                                   
                                                   2
                                                
                                                
                                                   
                                                      α
                                                   
                                                   2
                                                
                                                +
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      t
                                                   
                                                   2
                                                
                                                +
                                                2
                                                
                                                   
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            H
                                                         
                                                      
                                                   
                                                   2
                                                
                                                
                                                   (
                                                   
                                                      1
                                                      −
                                                      
                                                      cos
                                                      
                                                      α
                                                      t
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        R
                        H and α were set to 50 voxels and 0.04 respectively, giving a theoretical tortuosity τ=2.17 for the maximum distance t=400 voxels. 3-D volumetric data sets were generated with added grey-level random noise in the form expected for CT when Poisson noise in the radiographs dominates. Barrett et al. 
                        [44] showed that the standard deviation of the noise, σ, in the reconstructed slices for an object with a uniform circular cross section is proportional to the exponential of the object absorption coefficient µ. Under optimized scan conditions, the standard deviation of the noise simplifies to σ(µ)=Ne where N is the noise level and e is Euler's number. A range of noise levels from 0 to 0.35 were considered (corresponding to contrast-to-noise ratios down to 1) for R
                        T in the range 3–21 voxels. The object was first segmented from background in the 3-D data set by applying a grey-level threshold of 0.5 (i.e. halfway between the grey level of background and object for the no noise case), then the largest connected set of segmented voxels was selected as being the object and finally holes within the object were filled. The curve-skeleton was calculated using the autoskeleton module in Avizo 7.0 (FEI VSG, Burlington, MA, USA) with no branch pruning, and the ‘principal axis’ of the helix was approximated by calculating the shortest path through the network from the plane t=0 to the plane t=400 using Dijkstra's algorithm [45]. In this way, side branches were effectively pruned. The procedure was repeated 21 times for each noise level and radius. A rendering is shown in Fig. 2.

ssSNACS was applied to the helix test object and 
                        Fig. 5 shows a comparison between the tortuosities calculated from the curve-skeleton, ssSNACS and SF. Even in the no-noise case, the curve-skeleton tortuosity is an over-estimation in comparison to the theoretical value due to the effects of voxelization on the structure, meaning that sub-voxel definition of the curve-skeleton is required for high accuracy. The ssSNACS values are in much closer agreement with the theoretical value over a wide range of R
                        T in both the no-noise and added noise cases. However, as expected, ssSNACS performs better for larger tube radii, with the underestimation being within 2.2% for a noise level of 0.15, which was less than for SF. SF performed better for radii less than 8 voxels for this noise level. Over a greater range of noise levels, it was found that for ssSNACS to achieve less than 3% error in tortuosity, the contrast to noise ratio (CNR) should be greater than 6 for R
                        T=3 voxels, whereas the CNR can be as low as 1 for tubes larger in radius than ~11 voxels.

The tortuosities calculated for msSNACS and the net curves were in close agreement with those found for ssSNACS, which shows that there is little or no bias in using just one seed point. For example, for a tube radius of 41 and a noise level of 0.15 the tortuosities were 2.16±0.02 for ssSNACS, 2.16±0.03 for msSNACS and 2.14±0.05 for the net curves.

The effects of the number of seed points used for msSNACS were investigated further for the cylinder test object. Using multiple seed points was found to be advantageous in reducing the expected standard deviation of the measurements, as shown in 
                        Fig. 6. The variation of standard deviation with N
                        s follows the expected square root curve as described in Section 3.3. For N
                        s>7, the reduction in standard deviation by applying msSNACS was ~36%. An example of the net curves, generated using the approach in Section 3.3 is shown in Fig. 3. Overall, the net curve more closely follows the underlying straight-line path than the curve-skeleton or the individual curves generated by msSNACS. For a noise level of 20%, the mean distance between the curve-skeleton and the underlying path was 2.25±0.14 pixels, while the corresponding values were 2.10±0.19 for msSNACS and 1.58±0.16 for the net curves. The net curves also show a modest reduction in tortuosity; namely 1.013±0.009 compared to 1.020±0.004 for msSNACS, for a noise level of 20% and 15 random seed points.

The efficacy of the sphere inflation method was considered for the cylinder test object after application of ssSNACs. The weighted sum S (Eq. (2)) for a single sphere in the ssSNACS representation for a noise level of 20% is shown in Fig. 4(a), and has a peak close to the true value. The modal radius is illustrated in comparison to R
                        I in Fig. 4(b). The variation of the modal radius as a function of weight parameter γ (see (2) Section 3.4) was investigated and 
                        Fig. 7(a) shows that the absolute difference in modal radius to the true (noise-free) radius of 25 voxels is slowly varying for γ>0.05, with a minimum at ~0.1 for low noise levels. With γ set to 0.1, the mean radius after inflation over all noise levels was 24.81±0.17 pixels (see Fig. 7(b)).

When sphere inflation is used in conjunction with msSNACS, the standard deviation of the mean modal radius shows reduced variance as found for tortuosity (see Fig. 6(b)). For N
                        s>7, the reduction in standard deviation by applying msSNACS was ~45%.

The net curves for a range of objects publically available in a shape repository (http://www.cs.rug.nl/svcg/Shapes/SkelBenchmark) are shown in 
                        Fig. 8. In each case the objects were converted from a mesh to a voxel shape using binvox [46] and the curve-skeleton calculated by thinvox programme, which uses the directional thinning algorithm developed by Palágyi and Kuba [47]. Both binvox and thinvox are available from http://www.cs.princeton.edu/~min. In a recent paper, Sobiecki et al. found that this algorithm is fast and simple to use, while producing curve-skeletons that are ‘clean’ and reasonably smooth [12]. However, in all cases SNACS led to an improvement in the smoothness of the skeleton segments. A detailed comparison is shown for the noisy dinosaur object (Fig. 8(d) and (e)), with both SNACS methods producing much smoother segments between nodes. However, for ssSNACS straight line segments occur when the nodes are more closely spaced than the local thickness of the object, as the SNACS representation contains only 2 spheres (one at each node). When multiple seeds are used, each SNACS representation will contain 2–3 spheres, and the resulting net curves capture more of the underlying path as shown in Fig. 8(e).

The curve-skeletons obtained from the voxel based approaches of Reniers et al. 
                        [48] and Liu et al. 
                        [19] are shown for comparison, and while these have advantages in a reduced number of side-branches, the skeleton segments are clearly affected by the surface detail and the effects of voxelization. Mesh based approaches typically perform better than voxel based-approaches as shown in Fig. 8(h) using the algorithm of Tagliasacchi et al. 
                        [49]. However some details of the feet for example are missing. Furthermore, the requirement of having a mesh as an input adds a costly step, which might not be practical for large volumetric data sets.

The post-processing techniques were applied to curve-skeletons derived from experimental volumetric datasets obtained by high resolution x-ray tomography (CT). In the first case study, the measurement of length and thickness is compared for trabecular bone data sets with different noise levels. In the second study, measurements of length are compared to those obtained by SF for the vasculature of a tumour.

Micro CT scans of a mouse femur were taken with exposure times per projection of 1.25s and 0.26s to generate two volumetric data sets with different amounts of noise. The corresponding contrast-to-noise ratios between bone and air in the reconstructed slices were ~13.5 and ~6.5 for the 1.25s and 0.26s exposure times respectively. The data sets were manually aligned to voxel accuracy (as determined visually) and the bone was segmented from air by applying a threshold, with small disconnected holes in the segmentation being filled. 
                        Fig. 9 shows that while both segmentations contain noise, the noise is greater for the shorter scan. The voxel size was 3.4μm in both cases and further details of the scan settings and thresholding method are given in [50].

The curve-skeletons were calculated for a cropped region (159×388×138 voxels) using the algorithm of Reniers et al. 
                        [48]. A comparison for the 2 data sets is presented in 
                        Fig. 10(a), showing that the algorithm is reasonable robust to noise in terms of placement of branch points. msSNACS was then applied to all segments between branch points using 7 random seeds per segment, and the resultant net curves are shown in Fig. 10(b). The tortuosity was calculated before and after application of msSNACS for corresponding segments in the two data sets. Segments were only included in the analysis if the start and end points were in good agreement for the two noise levels (i.e. the sum of the squared distances between corresponding start and end points <6 voxels). The corresponding net curve tortuosities were in much better agreement between the two noise levels as shown in 
                        Fig. 11(a), with the standard deviation of the difference in corresponding tortuosities being 0.093 before and 0.027 after application of msSNACS. However, the mean tortuosities of the original curve-skeletons were similar for the two noise levels, namely 1.19±0.09 and 1.20±0.10 for 1.25s and 0.26s exposure times, suggesting that the extra noise only resulted in a small increase in overall bias. The corresponding values for the net curves are notably reduced at 1.04±0.05 and 1.05±0.05.

Sphere inflation was applied to all skeleton segments, and the histograms of bone thicknesses (modal diameters) are shown in Fig. 11(b and c). There is greater agreement between the histograms for the two scans after sphere inflation with the median thicknesses being 46.1μm and 46.3μm for the 1.25s and 0.26s exposure times, respectively. Before sphere inflation, greater noise leads to a reduction in the measured thickness (as taken from the distance map) as can be seen from the histogram in Fig. 11(b), and from the reduction in the median value from 34.0μm to 31.2μm (the difference corresponding to 0.8 voxels).

A high resolution x-ray tomography scan was taken of a polymer corrosion cast of the vasculature of a tumour (see [1] for experimental details). The CNR in the reconstructed slices was down to ~1.7 for the smaller vessels as the polymer is weakly absorbing at the hard x-ray energies produced by the laboratory source. In addition many of the vessels have diameters close to, or less than, the voxel size, so that partial volume effects can lead to noise in the segmentation on the order of 1 voxel. A rendering of the cast is shown in 
                        Fig. 12. The skeleton of the structure was calculated using Avizo 7.0 (FEI VSG, Burlington, MA, USA).

For comparison with SF, the sphere-network methods were applied after first selecting the shortest paths through the skeleton network between the start point, at the beginning of the largest input vessel, and all end points. End points were excluded if the connecting segment was less than 5 voxels in length, as these can arise due to noise or occur in places where the vessel cross-section deviates considerably from a circle. The histogram of the path tortuosities is presented in 
                        Fig. 13(a) and indicates that the sphere-network methods are necessary to avoid overestimation for all paths. The mean tortuosity reduced from 2.63 to 2.27 after application of the ssSNACS with restricted spline interpolation, and 2.29 for full spline interpolation. The tortuosities of the net curves from msSNACS were very similar, with a mean value of 2.24.

For comparison, SF was applied by randomly selecting 75 end points out of the total of 1740. Good correlation was found between the corresponding path tortuosities given by SF and ssSNACS as shown in Fig. 13(b), with R
                        2 being 0.977. The regression line shows that the ssSNACS values were typically slightly greater than those produced by SF at tortuosities close to 1, with the opposite being the case at higher tortuosities. On average, however, the corresponding values were within 6% of each other. Two of the paths were excluded from the regression analysis, since the SF tortuosities were much greater (by >0.8) than those given by ssSNACS (see Fig. 13(b) in which the points are marked by an ⁎). These SF paths were investigated further and it was found that they deviated considerably from the curve-skeleton in one or two short sections only, making the paths markedly longer. This implies that the geodesics were not correctly found. This may be due to the limitations in numerical accuracy of the implementation of SF, as it was also the case that SF did not generate complete paths for all end points in the object. This arose for narrow vessels (e.g. < a few pixels in diameter) when the direction of gradient descent was opposing for neighbouring voxels, thereby stopping the progression of the geodesic.

SF also took considerably longer to generate the paths than ssSNACS, making its’ application to find all paths between start and end points prohibitively time consuming. For ssSNACS, calculating the curve-skeleton then finding the shortest paths between the start point and all end points took a total of ~200s using a 6 core Intel Xeon E5-2620 2GHz PC. The application of the ssSNACS to the resulting paths took ~1s per path. For SF, the first stage of calculating the weighted distance within the object took ~700s. Calculation of the geodesics with sub-voxel accuracy then took ~50s per path.

@&#DISCUSSION AND CONCLUSION@&#

Two new user-independent post-processing techniques have been developed to analyze curve-skeletons of 3-D network structures, in terms of path lengths and cross-sectional thicknesses. The techniques achieve sub-voxel accuracy and are robust to the presence of noise and small scale surface detail, including that arising from partial volume effects. The techniques are based on a minimal sphere-network representation in which the object is sampled on a scale related to its local thickness. As such adapting smoothing of the skeleton segments is achieved. The techniques can be applied to any curve-skeleton, allowing the user to choose the curve-skeleton algorithm which results in the best representation of the object in terms of retained features and placement of branch points, or which is practical to use for large volumetric data sets.

The minimal sphere-network representation can be construction from a single seed point or by combining the results from multiple seed points selected at random along the skeleton segment or path. The segment and path tortuosities calculated for both approaches were in close agreement, and it is suggested that the single seed approach be adopted when making direct measurements over a large number of paths/segments in order to reduce calculation time. If the objective is to generate a smooth curve-skeleton, as for the shape repository test objects, then the net curves derived from msSNACS should be used.

The user independent measure of low spatial frequency path length from SNACS was found to have very similar accuracy to that derived from the minimum-cost path algorithm (MCPA) of Schena and Favretto [30], while being considerably faster (when used in conjunction with a fast curve-skeleton algorithm). MCPAs have the disadvantage that the choice of cost function directly affects how smooth and how well centred the extracted paths are and the start, end and branch points may be difficult to specify automatically. Algorithms for selecting these node points have been developed for tree-like objects (e.g. [3,29]), but these are not generally applicable. However, MCPAs can be applied directly to the volumetric data, without segmentation, and so would be preferred for very low contrast-to-noise objects when segmentation would have to be carried out manually.

The new measure of cross-sectional thickness, termed the modal radius, is also more robust in comparison with the standard measure (the internal radius) given by the distance transform, while retaining the desirable feature of capturing the size of structures in terms of a single variable. The difference between the modal and internal radius provides further information about the structure or scan data in terms of the amount of surface detail as a function of location. Furthermore unusually large differences between the modal and internal radii may indicate poorly segmented regions or regions where the structures cannot be properly resolved, which can then be excluded from further analysis.

The main limitation of the techniques is that they do not account for noise in the positions of the skeleton nodes. In the case of branch points, noise could be accounted for by applying SNACS to all paths which pass through the given node. The branch position could then be estimated from where the net curves for each path cross. Future work will also concentrate on improving the sphere-inflation method when applied to branch points, by for example assigning edge voxels to the appropriate segment using an algorithm such as [51].

Overall the new techniques allow measurements to be more readily compared between volumetric data sets with varying contrast to noise ratios, whether from different instruments, 3-D measurement techniques or from different sample preparation methods.

None declared.

@&#ACKNOWLEDGEMENTS@&#

The authors would like to acknowledge funding from EPSRC for the Manchester X-ray Imaging Facility under EP/F007906/1, EP/M010619/1 and EP/F028431/1 and the Collaborative Computational Project on Tomographic Imaging, CCPi, funded under EP/J010456/1. RSB is also grateful for funding from Zeiss XRM. The authors would also like to acknowledge S. Robinson, Institute of Cancer Research, UK, for use of the vascular cast data.

@&#REFERENCES@&#

