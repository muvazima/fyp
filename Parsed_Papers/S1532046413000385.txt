@&#MAIN-TITLE@&#A novel approach for connecting temporal-ontologies with blood flow simulations

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Extension of blood flow simulations with temporal-ontologies.


                        
                        
                           
                           Improved realistic simulations by connecting temporal-ontologies with blood flow simulations.


                        
                        
                           
                           Permit medical researchers an intuitive admission to blood flow simulations.


                        
                        
                           
                           Providing of medical special knowledge to archive realistic simulations e. g., by checking the plausibility.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Blood flow simulations

Lattice Boltzmann Method

Temporal ontologies

Systems biology

@&#ABSTRACT@&#


               
               
                  In this paper an approach for developing a temporal domain ontology for biomedical simulations is introduced. The ideas are presented in the context of simulations of blood flow in aneurysms using the Lattice Boltzmann Method. The advantages in using ontologies are manyfold: On the one hand, ontologies having been proven to be able to provide medical special knowledge e.g., key parameters for simulations. On the other hand, based on a set of rules and the usage of a reasoner, a system for checking the plausibility as well as tracking the outcome of medical simulations can be constructed. Likewise, results of simulations including data derived from them can be stored and communicated in a way that can be understood by computers. Later on, this set of results can be analyzed. At the same time, the ontologies provide a way to exchange knowledge between researchers. Lastly, this approach can be seen as a black-box abstraction of the internals of the simulation for the biomedical researcher as well. This approach is able to provide the complete parameter sets for simulations, part of the corresponding results and part of their analysis as well as e.g., geometry and boundary conditions. These inputs can be transferred to different simulation methods for comparison. Variations on the provided parameters can be automatically used to drive these simulations. Using a rule base, unphysical inputs or outputs of the simulation can be detected and communicated to the physician in a suitable and familiar way. An example for an instantiation of the blood flow simulation ontology and exemplary rules for plausibility checking are given.
               
            

@&#INTRODUCTION@&#

Ontologies instead of relational databases are a good choice when not only storage of data is a requirement but as well the representation of modeled knowledge in the semantic web where the information can be shared, distributed and discussed easily (cf. [1]). Because of their attractiveness, ontologies were widely adopted in biomedical communities. Biomedical ontologies are formal artifacts representing reality strictly within a boundary of a given domain, cf. [2]. The biomedical community introduced many different ontologies of this domain: For example [3] defined the “Ontology of Physics for Biology” (OPB) in which a reference ontology of physical principles for an integrated view of bioinformatics modeling and biological processes is modeled. The “The Unified Medical Language System” and the “Gene Ontology” are the most widely used ontologies in the biomedical domain, cf. [4]. For a survey of standard techniques for ontologies we refer to [5] or [6]. Such conventional taxonomies which are in some cases complemented by controlled dictionaries and thesauri may however fail to categorize temporal data efficiently. A novel approach has therefore been developed to bring the temporal dimension into formal biomedical ontologies tailored to the need of computer applications in the field of medical informatics and bioinformatics.

However, the aim of this present study is to demonstrate a possible strategy to start working out the admixture of temporal data. Blood flow simulations in aneurysms (ICD
                        1
                        The International Classification of Diseases, Version 10.
                     
                     
                        1
                     -10: I72.0, I72.1, I72.5, I72.6, I72.8 and I72.9) in arteries modeled for the ontological representation of the taxonomy of homo sapiens (NCBI Taxonomy ID: 
                     9606) served as entries to create and populate branches in the ontology that were designed to host representations of changes with time. These representations abstract from the internal mathematics of the simulation and provide a familiar ontology-based view of the domain which may be more intuitive for the medical researchers and therefore will be of greater acceptance. Beside the acceptance of blood flow simulations in the medical setting the benefit of connecting temporal-ontologies with blood flow simulations is to achieve improved realistic simulations. Blood flow simulations appear to be an especially rewarding topical issue for studying the enrichment of ontologies by temporal information since they are inherently dynamic and demand for taking changes over time into consideration in a very natural way.

The remainder of the paper is organized as follows: First, in Section 2, the medical problem and its mathematical description are presented on a fairly basic level. First hints for connecting simulation and ontology are given. Second, in Sections 3 and 4, these connections are picked up and the biomedical temporal ontology is proposed and evaluated. This includes an example for deriving time relations as well as an example for extracting knowledge from these relations. Last but not least, in Section 5 the findings are discussed.

Based on the description of blood flow simulation in conjunction with aneurysms in Section 2.1, the basic concepts of the mathematical background behind computer-based simulation of blood flow are introduced in Section 2.2.

A stroke is one of the most life-threatening diseases and in many cases is caused by a rupture of an aneurysm. In the case of intracranial appearance, such ruptures can cause devastating subarachnoid hemorrhage with high morbidity and mortality. Hemorrhage as a consequence of ruptured intracranial aneurysms can be prevented by the means of minimally invasive therapy, endoluminal stenting. Quantitative approaches however applied to learn more about how specific design features of endovascular stents such as porosity [7], struts [8] and mesh design [9] affecting intra-aneurysmal hemodynamics have mainly provided inconsistent results [10]. In some cases, stenting alone has been suggested to promote thrombogenic conditions such as reduced flow activity and prolonged stasis, and thereby occlude aneurysms simply by thrombosis. But the selection of the preferred therapy is still controversially discussed. Computer-based simulation of blood flow appears to be gaining acceptance in healthcare as several technical problems can be solved and facts be learnt without animal experimentation or by working with actual patients. The state of the art in blood flow simulation and extensive bibliographies for computational fluid dynamics (CFD) approaches can be found, for example, in [11–13].

Among many different methods for solving fluid flow problems the Lattice Boltzmann Method (LBM) is selected here to show possible couplings of simulations with ontology-based data. For the sake of brevity, a rather simple and easy to implement and parallelize single-component and -phase Lattice Boltzmann Method (LBM) is described here. The following introduction to the method is very brief to stay on topic and the interested reader is referred to literature for further details. The monographs of [14] or [15] are well known starting points.

In continuum mechanics, fluid behavior is described by time-varying velocity, density or pressure fields which correspond to a macroscopic point of view. A microscopic point of view on the other hand would be to describe the motion of each fluid particle. The LBM takes a third probabilistic approach that is positioned somewhere in between the two and hence is called a mesoscopic. The (macroscopic) density 
                           
                              ρ
                           
                         of a fluid is represented by multiple particle distribution functions (PDFs). Each of these PDFs represent fluid particles which move in the same direction. The larger a PDF the more particles move into this direction. In contrast to its continous variant, the Boltzmann-Equation, in the LBM the evolution of the PDFs is confined to a finite number of directions 
                           
                              c
                              (
                              ±
                              1
                              ,
                              0
                              ,
                              0
                              )
                              ,
                              
                              c
                              (
                              0
                              ,
                              ±
                              1
                              ,
                              0
                              )
                              ,
                              
                              c
                              (
                              0
                              ,
                              0
                              ,
                              ±
                              1
                              )
                           
                         for 
                           
                              i
                              =
                              1
                              ,
                              …
                              ,
                              6
                           
                         and 
                           
                              c
                              (
                              ±
                              1
                              ,
                              ±
                              1
                              ,
                              0
                              )
                              ,
                              
                              c
                              (
                              ±
                              1
                              ,
                              0
                              ,
                              ±
                              1
                              )
                              ,
                              
                              c
                              (
                              0
                              ,
                              ±
                              1
                              ,
                              ±
                              1
                              )
                           
                         for 
                           
                              i
                              =
                              7
                              ,
                              …
                              ,
                              18
                           
                         on a regular three-dimensional lattice, each lattice node i corresponds with PDF 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                           
                        . The quotient 
                           
                              c
                              =
                              
                                 
                                    δ
                                    x
                                 
                                 
                                    δ
                                    t
                                 
                              
                           
                         denotes the lattice speed where 
                           
                              δ
                              x
                           
                         and 
                           
                              δ
                              t
                           
                         define spacial and temporal resolution. The direction 
                           
                              
                                 
                                    e
                                 
                                 
                                    0
                                 
                              
                           
                         is the zero-vector which represents particles at rest. Consequently, the model is called 
                           
                              D
                              3
                              Q
                              19
                           
                        . The evolution of the PDFs at each lattice node (called streaming) with regard to collisions between fluid particles is described by 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                              (
                              x
                              +
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              ,
                              t
                              +
                              δ
                              t
                              )
                              =
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                              (
                              x
                              ,
                              t
                              )
                              +
                              
                                 
                                    Ω
                                 
                                 
                                    i
                                 
                              
                              (
                              τ
                              )
                           
                        , for 
                           
                              i
                              =
                              0
                              ,
                              1
                              ,
                              …
                              ,
                              18
                           
                        , in which 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    i
                                 
                              
                              (
                              τ
                              )
                           
                         is a collision operator (details omitted, cf. [15] for details). The evolution of the directional densities can be understood as a relaxation towards local equilibrium which is a function of the local density 
                           
                              ρ
                           
                        , the current velocity 
                           
                              u
                           
                         and e.g., a single relaxation time 
                           
                              τ
                           
                         which is connected to the kinematic viscosity 
                           
                              ν
                           
                         suitable for blood and is dependent on the values chosen for 
                           
                              δ
                              x
                           
                         and 
                           
                              δ
                              t
                           
                        :
                           
                              (1)
                              
                                 ν
                                 =
                                 
                                    
                                       δ
                                       
                                          
                                             x
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       δ
                                       t
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                τ
                                                -
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       3
                                    
                                 
                                 .
                              
                           
                        The simulated application of drugs can alter viscosity, but altering viscosity can result in unstable simulations. 
                           
                              τ
                           
                         for example can assume values mathematically in the range of 
                           
                              
                                 
                                    1
                                 
                                 
                                    2
                                 
                              
                              –
                              2
                           
                        . Depending on the model for the collision operator and e.g., the geometry of the problem, this range can sometimes not be fully exploited, resulting in unstable simulations or (see below) unwanted compressibility artifacts. The macroscopic density 
                           
                              ρ
                              (
                              x
                              )
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    0
                                 
                                 
                                    18
                                 
                              
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                              (
                              x
                              )
                           
                         at a lattice node is the sum of the PDFs in every direction. The current velocity 
                           
                              u
                              (
                              x
                              )
                              =
                              
                                 
                                    1
                                 
                                 
                                    ρ
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    0
                                 
                                 
                                    18
                                 
                              
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                              (
                              x
                              )
                              ·
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                           
                         is also computed from the PDFs. Solid boundaries can relatively easily be incorporated by swapping opposite PDFs at solid nodes instead of performing the normal evolution. The evolution on solid nodes thus becomes 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                              (
                              x
                              +
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              ,
                              t
                              +
                              δ
                              t
                              )
                              =
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                                 
                                    opp
                                 
                              
                              (
                              x
                              ,
                              t
                              )
                           
                         for 
                           
                              i
                              =
                              0
                              ,
                              1
                              ,
                              …
                              ,
                              18
                           
                         with 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                                 
                                    opp
                                 
                              
                           
                         being the PDF in the opposite direction of 
                           
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                           
                        . This technique known as bounce-back is one way of simulating the no-slip-condition at solid boundaries. In the simulation of blood flow using LBM this bounce-back is used at the blood vessel boundaries, the coils and/or the stents. The structures themselves are defined by multiple level sets [16] 
                        
                           
                              
                                 
                                    ϕ
                                 
                                 
                                    j
                                 
                              
                           
                         with e.g., 
                           
                              j
                              =
                              {
                              vessel
                              ,
                              stent
                              }
                           
                        . The level set can be used to track quantities of the simulation e.g., the average velocity in a blood vessel:
                           
                              (2)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   avg
                                                
                                             
                                             =
                                             
                                                
                                                   1
                                                
                                                
                                                   |
                                                   V
                                                   |
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      x
                                                      ∈
                                                      V
                                                   
                                                
                                             
                                             u
                                             (
                                             x
                                             )
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             V
                                             =
                                             {
                                             x
                                             |
                                             
                                                
                                                   ϕ
                                                
                                                
                                                   vessel
                                                
                                             
                                             (
                                             x
                                             )
                                             <
                                             0
                                             ∧
                                             
                                                
                                                   ϕ
                                                
                                                
                                                   stent
                                                
                                             
                                             (
                                             x
                                             )
                                             >
                                             0
                                             }
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The LBM is popular because of the simplicity of boundary conditions. For example the steady blood flow through the vessel is initiated by introducing pressure or velocity boundaries at the ends of the vessel. Here, velocity Dirichlet conditions at the inflow and velocity Neumann conditions at the outflow are applied. Those boundary conditions are applied on a macroscopic level e.g., setting 
                           
                              u
                           
                         to a certain value 
                           
                              
                                 
                                    u
                                 
                                 
                                    0
                                 
                              
                           
                         – for some small artery, such values could be as high as e.g., 
                           
                              
                                 
                                    u
                                 
                                 
                                    0
                                 
                              
                              =
                              50
                              
                              
                                 
                                    mm
                                 
                                 
                                    s
                                 
                              
                           
                        , as well as on a microscopic level e.g., depending on boundary velocity 
                           
                              u
                           
                         one has to set 
                           
                              ρ
                           
                         and some of the 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                           
                         that point into the fluid. See [17] for further details. The compressibility error depends on the Mach number. With a Mach number 
                           
                              Ma
                              ≪
                              1
                           
                        , the method is quasi incompressible. Assuming a large value e.g., 
                           
                              δ
                              t
                           
                         may result in compressibility artifacts (see above). With a low Ma, it has been shown in the above literature that the Lattice Boltzmann Method approximates the time-dependent, incompressible Navier–Stokes Equations under this circumstance. Fig. 1
                         shows an exemplary blood flow simulation of an arterial aneurysm.

To recap, for a successful application of this method, all physical parameters e.g., inflow velocities, blood viscosities or domain space and time units have to be converted to LBM units. This conversion introduces some constraints and worse, some of the conditions are mutually exclusive to achieve, at least to a certain degree. In case these conditions are violated, the simulation becomes unstable or produces unphysical results. Ontologies can be of help in providing parameters and tracking/analyzing simulation results. In the following chapters, the main ideas are outlined.

Besides the correct mathematical modeling the settings of the parameters are important to achieve a more realistic simulation. In view of the complex situation it is mandatory to integrate medical domain knowledge. In particular to provide a sustainable knowledge base an ontology based representation is developed. In doing so, it is initially the goal of the definition of the ontology to map medical knowledge onto a computer understandable representation and to provide it for the simulation. This knowledge can comprise patient specific parameters like blood viscosity or velocity profiles but may also model processes over time like the application of an anticoagulant and its influence on blood flow. A second aspect is the optimization of the parameters of the simulation and the simulation of blood flow itself. By enabling the simulation to add its results to an ontology, a rule-based monitoring of the simulation of blood flow can be applied and, if necessary, an adjustment of the parameters to achieve a realistic simulation can be conducted. In consideration of time dependent simulations of blood flow and associated processes, an ontology has to consider the important concept of time. Based on the description of the general concepts of temporal ontologies in Section 3.1, the novel temporal ontology for simulation of blood flow is introduced in Section 3.2.

The upper level ontology developed to represent temporal and non-temporal information in biomedical domain ontologies is based on existing upper ontologies and in the first place is independent of the domain of use which is due to the fact that non of the used ontologies is domain specific. Although other ontologies may deal with the topic of representing temporal knowledge, like the CNTRO which focuses on dealing temporal clinical data (cf. [18,19]) we decided to use ontologies which do not come with a specific domain focus to maximize the possible area of application for the resulting domain ontology. The used upper ontologies are the BFO (Basic Formal Ontology) [20], SWRLTO (SWRL Temporal Ontology) [21], and RO (Relation Ontology) [22]. The BFO provides a very generic representation of reality and thus can be used to model the knowledge of any domain. Below the top category bfo:Entity the BFO is divided into two categories, snap:Continuant and span:Occurent which form a dichotomy. The SPAN-part of the BFO holds the temporal categories and the SNAP-part the non-temporal categories (cf. Fig. 2
                        ). The most significant temporal categories for our purpose are span:Process as top-category for categories of processes like blood flow or the application of a drug, and the two subcategories of span:ConnectedTemporalRegion: span:TemporalInstant and span:TemporalInterval. A temporal instant is a single moment in time and a temporal interval lasts more than one single moment of time (for details of the BFO see [23]). Using the BFO enables users to build various domain ontologies with a similar understanding of reality which makes them comparable and in some way compatible. In our scenario objects of the reality (comprising all material things) are represented by individuals of proper categories below the snap:Continuant part of BFO.

The temporal information which can be represented with the BFO is limited to categories and individuals leaving out the relations which can hold between entities. For that reason the RO was integrated into the BFO so that the resulting upper level ontology provides the ability to represent fundamental properties (in ontologies it is common to be note binary relations as properties) of the following kind: participation relations, part whole relations, spatial relations, and temporal relations. This is performed by importing the RO and the BFO into the target ontology and additionally importing the RO_BFO_bridge ontology which sets the domain and range constraints of the RO properties to the corresponding BFO classes.
                           2
                           The RO_BFO_bridge ontology can be found at http://www.obofoundry.org/ro/.
                        
                        
                           2
                         For this work only the temporal relations are of further interest. Detailed information about the other RO properties can be found in [22]. This paper can only give a brief overview of the three temporal properties, ro:Transformation_of, ro:derives_from, and ro:preceded_by. These are the fundamental temporal relations which hold between instantaneous objects that exist during a specific time or between processes themselves. For example an individual reticulocyte_1 that represents a single reticulocyte at time 
                           
                              
                                 
                                    t
                                 
                                 
                                    0
                                 
                              
                           
                         can be put in relation with an individual erythrocyte_1 which exists at 
                           
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                           
                         by the property ro:transformation_of stating that the latter cell arose from the former cell. This property sustains the identity of the object, it is still the identical cell but lost and gained substance and thereby changed some of its qualities. Although the cell changed it still has the same identity, like a child that rises to an adult still is the same person. In contrast the RO property ro:derives_from does not sustain the identity of objects and as such can be used to represent cells during cell division and so forth. Additionally the property ro:preceded_by can function as connector between processes and not between objects like the latter two properties. With the temporal relations of the RO it is possible to express causality in an imprecise manner as outlined with further details in [22].

Despite the possibility of the RO to express temporal transformations of individuals which belong to different categories but sustain their identity (e.g. reticulocyte and erythrocyte) there is no possibility to express such a relation between individuals of same identity which belong to the same category. But in the case of blood flow simulation it is necessary to express such a relation between a simulated portion of blood whose qualities change over time. This leads to the problem that the following triple is not valid because of the definition of the RO property (cf. [22]):


                        PortionOfBlood_1 ro:transformation_of PortionOfBlood_2
                     

The two individuals represent a portion of blood with different qualities each, but they both belong to the same category (bfso:PortionOfBlood). When the qualities of a portion of blood change, a new individual of the same portion of blood is created which carries these new quality values. But it still represents the portion of blood with the same identity assuming that one can talk about identity when referring to fluids. To be able to express such relations a new property called tbfo:quality_transformation was created whose definition is almost identical to the definition of ro:transformation_of except the fact that it allows to relate individuals of the same category.

The BFO in combination with the RO (BFO/RO) is a powerful base for modeling temporal biomedical ontologies. However its ability to express relations between processes is very weak, because the only such support is given by the property ro:preceded_by. Besides this property there are various possibilities concerning how processes can be related to each other. Processes are mostly compared by their time instants or intervals which characterize the active time of the process. One way to relate processes via the comparison of their time intervals are the 13 Allen relations [24] (cf. Table 1
                        ). The definition of the Allen algebra only allows to relate two intervals. The algebra is not intended to relate an interval with an instant or even two instants. But for a subset of the thirteen relations it is meaningful to allow the application on intervals and instants as well. To be specific before (i,
                        
                        j), after (i,
                        
                        j), during (i,
                        
                        j), starts (i,
                        
                        j), finishes (i,
                        
                        j) assuming that i is an instant and j is an interval or instant, respectively.

With temporal instants it is possible to characterize events and with temporal processes it is possible to characterize processes. Whether something is an event or a process depends on the granularity with which it is viewed. For example the application of a drug via injection only lasts seconds so with the granularity of seconds it is a process whereas it is an event with a granularity of minutes. The time a process or an event takes place is either the time it occurred (and is measured) in reality or in case of this scenario the time it was simulated and the simulated time, respectively. Both may be referred to as active time of the process or event.

To be able to make use of the Allen relations in the ontology for the domain of blood flow the BFO/RO was consolidated with the SWRLTO, which implements such functionality via SWRL built ins. There are some standard SWRL built ins which are for comparison (lessThen, equal, etc.) or arithmetic operations (add, subtract, sin, etc.), but by the import of the SWRLTO additional customer built ins are used to implement the Allen relations (before, meets, during, etc.). These customer built ins can be applied in the originally intended use of Allen relations but the use for intervals and instants as described above is provided as well with the SWRLTO. Details on the implementation of the SWRLTO can be found in [21]. The result of the combination of the BFO/RO with the SWRLTO was named “temporal BFO” (TBFO) and is depicted in Fig. 2. This ontology as well as the Protégé project file are available under http://ls7-www.cs.tu-dortmund.de/owl/.
                           3
                           The Protégé file is best edited with version 3.4.8.
                        
                        
                           3
                         Categories are represented by rectangles and arrows stand for object and data type properties, respectively. Data type properties are relations between instances of classes and RDF literals and XML Schema data types whereas object properties are relations between instances of two classes [25]. The required data types for the data type properties are represented by rectangles with rounded corners. If not stated differently the arrows stand for is_a relations.

The construction of the TBFO was done by fulfilling the following steps. At first the two ontologies BFO/RO and SWRLTO are imported into the same (blank) target ontology. Importing the two source ontologies can be accomplished by using the web versions of the BFO/RO and the SWRLTO or local copies of each. Afterwards the correlating categories from both source ontologies are identified and connected by newly inserted is_a relations. These new is_a relations between correlating categories are represented by red arrows which reach from SWRLTO classes to BFO classes. Because of these relations it is possible to use the SWRLTO categories as if they were a proper part of the BFO. The only SWRLTO category for which no corresponding BFO category could be identified is temporal:Granularity. But this fact does not affect the ability to represent temporal information. temporal:Proposition and its subclass are no longer used and instead the domain of temporal:hasValidTime is supplemented with span:Process.

The resulting ontology at this step did not fit the requirements of the simulation as yet. So some further properties had to be added. All added properties are shown in Table 2
                        . The property tbfo:hasQuality functions as a connector between independent continuants and their qualities and tbfo:is⧹-Quality⧹-Of as its inverse vice versa. tbfo:hasQualityValue enriches the ontology with the ability to add concrete values to qualities. At the end the ontology has to be extended to support SWRL temporal built ins and SQWRL. SQWRL stands for Semantic Query-Enhanced Web Rule Language and is an SWRL based language that enables the querying of OWL ontologies and thereby the extraction of the represented knowledge [26]. On the other hand SWRL (Semantic Web Rule Language) provides a syntax to add Horn-like rules to an ontology what enables the deduction of implicit knowledge, cf. [27]. The potential to use the SWRL temporal built ins comes with the import of the SWRLTO. To interpret the SWRL rules and SQWRL queries the Jess rule engine was used.
                           4
                           
                              http://www.jessrules.com/.
                        
                        
                           4
                         The TBFO works as an upper level ontology which is domain independent just like the BFO but with the additional functionality to represent concrete valid-times for individuals of the type span:Process. Here valid-times represent the active times of a process.

To demonstrate the functionality of the TBFO the concepts were translated into a specific C++-realization and integrated into SeVi3D, a prototypical software system recently upgraded from SeViSe which encapsulated the functionalities for (bio-)medical segmentation, simulation and visualization [28]. Fig. 3
                         is an exemplary view of the graphical user interface. A previously published composite histological image of a methyl-methacrylate embedded and toluidine blue stained stented arterial aneurysm [29] has been segmented (left) to allow the extraction of geometries considered pertinent for simulation. Blood flow into an arterial aneurysm was assumed in this use case (cf. Fig. 1). The graphical representation of the ontology (right) is a context based browser in which it is possible to define concepts and properties that are of relevance to the simulation scenario. The domain ontology (Blood Flow Simulation Ontology, BFSO) was modeled in dependence on the Ontology 101 method [30] enriched with two steps, namely the definition of SWRL rules and the definition of SQWRL queries, which are a fundamental part for representing and querying temporal information. The biomedical domain has numerous ontologies representing anatomies of various species at different levels of granularity. One of these ontologies is the Foundational Model of Anatomy (FMA) [31] which served as pattern for some parts of the BFSO. These were for example categories that allow the modeling of particular entities such as the lumen of a blood vessel (cf. Fig. 3). All other parts of the BFSO where modeled from scratch with the goal to implement the functionality for the showcase.

To model domain specific knowledge the most important categories of the upper ontology BFO are snap:Object (e.g. PortionOfBlood), snap:Quality (e.g. KinematicViscosity) and span:Process (e.g. AntiplateletApplication). In a further step these categories were initialized with individuals which represent the showcase which is depicted in Fig. 4
                        . These individuals were either extracted from a patient’s health record (e.g. bfso:Hematocrit) or added by the simulation (e.g. bfso:AverageVelocity). The figure can be described as follows.

The blood flow of a portion of blood which is contained in the lumen of a blood vessel of the type arteriae elastotypicae which has a length of 2cm and a diameter of approximately 1.12mm is simulated. The first simulation on May 29th (bfso:BloodFlow_1) the qualities hematocrit, kinematic viscosity 
                           
                              ν
                           
                         (cf. Section 2, Eq. (1), bfso:KinematicViscosity_1) and average velocity 
                           
                              
                                 
                                    u
                                 
                                 
                                    avg
                                 
                              
                           
                         (cf. Eq. (2), bfso:AverageVelocity_1) of the portion of blood represented by bfso:PortionOfBlood_1 are assumed to be constant during a specific period of time (
                           
                              bfso
                              :
                              Hematocrit
                              _
                              1
                              =
                              40
                              %
                           
                        , 
                           
                              bfso
                              :
                              KinematicViscosity
                              _
                              1
                              =
                              3.773585
                              
                              
                                 
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    s
                                 
                              
                           
                         and 
                           
                              bfso
                              :
                              AverageVelocity
                              _
                              1
                              =
                              37.01
                              
                              
                                 
                                    mm
                                 
                                 
                                    s
                                 
                              
                           
                        ). The application of an antiplatelet drug is assumed to be simulated (bfso:AntiplateletApplication_1). This has an effect on the qualities of the blood portion on June 1st causing a lower kinematic viscosity (
                           
                              bfso
                              :
                              Hematocrit
                              _
                              2
                              =
                              38
                              %
                           
                        , 
                           
                              bfso
                              :
                              KinematicViscosity
                              _
                              2
                              =
                              3.584906
                              
                              
                                 
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    s
                                 
                              
                           
                        ) and a higher average velocity 
                           
                              
                                 
                                    
                                       bfso
                                       :
                                       AverageVelocity
                                       _
                                       2
                                       =
                                       37.23
                                       
                                       
                                          
                                             mm
                                          
                                          
                                             s
                                          
                                       
                                    
                                 
                              
                           
                        . The effect of the application on June 7th on the qualities of the blood portion results in an even lower kinematic viscosity (
                           
                              bfso
                              :
                              Hematocrit
                              _
                              3
                              =
                              32
                              %
                           
                        , 
                           
                              bfso
                              :
                              KinematicViscosity
                              _
                              3
                              =
                              3.018868
                              
                              
                                 
                                    
                                       
                                          mm
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    s
                                 
                              
                           
                        ) and a higher average velocity 
                           
                              (
                              bfso
                              :
                              AverageVelocity
                              _
                              3
                              =
                              37.89
                              
                              
                                 
                                    mm
                                 
                                 
                                    s
                                 
                              
                              )
                           
                        . The simulation of blood flow during which these changed values are held to be true is represented by the individuals bfso:BloodFlow_{1,2,3}. Fig. 4 shows the first two of them, some additional individuals and the relations that hold between them. The color code from above (processes blue, objects green and qualities orange) is expanded with gray for temporal parts (valid times and granularity) and purple for numerical values of qualities and the corresponding measurement units e.g., 
                           
                              
                                 
                                    mm
                                 
                                 
                                    s
                                 
                              
                           
                         for the average velocity. A category for measurement units and a data type property named bfso:hasMeasurementUnit were introduced to the BFSO to relate individuals of a quality category not only with a dimensionless value but also with the relevant measurement unit.

Thus temporal information can be represented via the data type property temporal:hasValidTime and as such is stored as literal of the XML schema xsd:dateTime. This type of information cannot be included in the deductive reasoning process with reasoners e.g., Pellet
                           5
                           Pellet: http://clarkparsia.com/pellet.
                        
                        
                           5
                         or KAON2.
                           6
                           KAON2: http://kaon2.semanticweb.org.
                        
                        
                           6
                         A way to interpret the semantics of those temporal information is to use SWRL rules in the way stated by [21]. This allows the use of the Allen interval algebra and makes it possible to infer implicit knowledge from the temporal information. To query those information SQWRL can be used, which enhances the use of temporal built ins in queries.

The following chapter discusses the previously explained kind of rules and queries of the new Top-Level-Ontology TBFO for the domain of blood flow. Beside the explanation of the corresponding temporal requirements (cf. Section 4.1) and and of the SWRL rules and the SQWRL queries (cf. Section 4.2), an essential aspect is the novel possibility to validate the correctness of the blood of simulations by the use of SWRL rules in Section 4.3.

Regarding the representation and reasoning abilities of temporal information of the TBFO the according requirements have to be determined first. The identified requirements presented below refer to [32] where further examples are given.
                           
                              •
                              
                                 Absolute and relative timelines: The valid time model of the SWRLTO allows the representation of time in absolute terms. Occurrents can be associated relative to each other using the object property ro:preceded_by of the RO.


                                 Absolute and relative vagueness: Absolute vagueness must be stated if the start and/or the finish time of an occurrent is not precisely known. A solution is to represent the earliest/latest known time for the start and/or termination time which in either case can be represented with the mechanisms of the SWRLTO, using different granularities. The TBFO is not capable of representing relative vagueness which would require the ability to represent imprecise temporal relations between occurrents. This ability would demand a mechanism to form disjunctions of primitive temporal relations, like the Allen relations, which is not possible with the TBFO.


                                 Duration: The duration of occurrents can be represented by temporal:Duration and temporal:hasCount as described in [33].


                                 Incompleteness: Incompleteness can be represented by omitting the start or the termination time of an occurrant.


                                 Instants/events: Instants can be represented by using the category temporal:ValidInstant. Events can be modeled under the BFO category span:Process. Events are characterized by instants stating the time the event occurred.


                                 Intervals/processes: Intervals can be represented by modeling corresponding categories as subcategories of temporal:ValidPeriod and processes by using the category span:Process. Processes are characterized by intervals stating start and end of the process.


                                 Convex/non-convex: Processes which are characterized by intervals can be either convex which is defined as the fact that there is some form of activity throughout the process or they can be non-convex which states that there can be times of inactivity. The former is represented by valid times which are the active time and the latter is represented by the gaps between valid times because there can be more then one valid time per each process.


                                 Periodicity: To represent periodic processes the process itself and the algorithm which regulates the periodicity has to be modeled. The former can be modeled as described above but the latte cannot be represented with the TBFO.


                                 Aggregated processes: Aggregated processes can be modeled as subcategories of span:ProcessAggregate.


                                 Trends: Trends require the representation of change, its direction and the rate of change. The BFO/RO and the SWRLTO are not able to represent trends by itself but in combination they are. Objects, their qualities and the processes can be modeled using the BFO. The pertinent relations can be modeled by RO properties or by self defined properties. In case of the BFSO the properties bfso:hasQuality (relation between objects and qualities) and bfso:hasQualityValue (relation between a quality and the obtaining value) were defined. The RO property ro:has_participant relates a process with its participants and the process on the other hand is related with its valid time through temporal:hasValidTime. If a quality of an object changes then a new individual for the process in which the object participates is initialized with the corresponding new individuals of the object and its new quality values. This represents the change. The direction of change can be calculated by using SWRL rules as well as the rate of change (by subtracting valid times).


                                 Patterns: As patterns are defined as compounded processes or events, consisting of simpler processes and events, it is possible to represent them by using the BFO/RO plus some additional properties to relate the processes and events.


                                 Causality: As outlined above the RO comes with a small set of temporal relations which enable basic imprecise representation of causality in terms of temporal precedence. The Allen relations implemented by built ins of the SWRLTO give a wider range of possibilities to represent causality despite their lack of precision. Modeling one process that takes place before one other states no information about the exact time between the two processes so it could be one second or one year.


                                 Change: See requirement trends.

In the following some examples for SWRL rules and SQWRL queries are given to demonstrate its use and as a proof of concept.

SWRL rules can be interpreted by SWRL enabled reasoners e.g., Pellet or KAON2, or by rule engines like the Jess Rule Engine4 which can be combined with Protégé.
                           7
                           
                              http://protege.stanford.edu.
                        
                        
                           7
                         Protégé is an open source ontology editor which allows the creation of OWL DL based ontologies. In order to follow the steps described in this paper it is necessary to use Protégé in a 3.4.x version which supports the Jess Rule Engine in combination with the Jess Tab plug-in which comes automatically with Protégé in the 3.4.x versions and only has to be activated (cf. [34]). A rule that infers a temporal aspect of a causal relation between the two process individuals bfso:BloodFlow_1 and bfso:BloodFlow_2 can be stated as follows:
                           
                              
                                 
                                 
                                    
                                       
                                          
                                          bfso:BloodFlow (?bf1) 
                                          
                                             
                                                ∧
                                             
                                           
                                          bfso:BloodFlow (?bf2)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:hasValidTime (?bf1,?bf1VT)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:hasValidTime (?bf2,?bf2VT)
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:before (?bf1VT,?bf2VT, temporal:Hours)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                →
                                             
                                           
                                          ro:preceded_by (?bf2,?bf1)
                                       
                                    
                                 
                              
                           
                        
                     

This rule infers the following axiom automatically and adds it to the ontology:


                        ro:preceded_by (bfso:BloodFlow_2, bfso:BloodFlow_1)
                     

Known limitations of SWRL amongst others are monotonicity or the loss of decidability (cf. [35,36]). These did not have any impact on the work presented in this paper as for example the decidability can be regained by only using DL-safe rules [36].

SQWRL queries can be used to query the temporal knowledge in a SQL like manner. This knowledge is held by categories of the domain ontology (e.g. bfso:BloodFlow). The result of the following query is shown in Table 3
                        . It contains all individuals representing a simulated blood flow modeled in the BFSO (represented by the variable ?bf1) with their start and end time (represented by the variables ?bf1ST and ?bf1FT, respective).
                           
                              
                                 
                                 
                                    
                                       
                                          bfso:BloodFlow (?bf1) 
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:hasValidTime (?bf1,?bf1VT)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:hasStartTime (?bf1VT,?bf1ST)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:hasFinishTime (?bf1VT,?bf1FT)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                →
                                             
                                          
                                          sqwrl:select (?bf1,?bf1ST,?bf1FT)
                                       
                                    
                                 
                              
                           
                        
                     

A possibility to validate the correctness of the blood flow simulation is the use of SWRL rules in conjunction with the individuals added by the simulation (e.g. bfso:AverageVelocity). A simulation run produced a consistent ontology e.g., if the value for bfso:AverageVelocity is greater after the application of an antiaggregant than before. In this case the resulting ontology is valid and a SWRL rule adds the individual of bfso:AntiplateletApplication (in this case bfso:AntiplateletApplication_1) as an individual to the class check:Valid which is part of an ontology called check. This ontology consists only of the one single class which is a direct subclass of Thing. A rule that matches the needs described above could look like this:
                           
                              
                                 
                                 
                                    
                                       
                                          
                                          
                                          
                                          bfso:BloodFlow (?bf1) 
                                          
                                             
                                                ∧
                                             
                                           
                                          bfso:BloodFlow (?bf2)
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          bfso:PortionOfBlood (?pb1) 
                                          
                                             
                                                ∧
                                             
                                           
                                          bfso:PortionOfBlood (?pb2)
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∧
                                             
                                           
                                          bfso:AverageVelocity (?avgV1) 
                                          
                                             
                                                ∧
                                             
                                           
                                          bfso:AverageVelocity (?avgV2)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          bfso:AntiplateletApplication (?apa)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:hasValidTime (?bf1,?bf1VT)
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:hasValidTime (?bf2,?bf2VT)
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:before (?bf1VT,
                                       
                                    
                                    
                                       
                                          ?bf2VT, temporal:Hours) 
                                          
                                             
                                                ∧
                                             
                                           
                                          temporal:hasValidTime (?apa,?apaVT) 
                                          
                                             
                                                ∧
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          temporal:finishes (?apaVT,?bf1VT, temporal:Seconds)
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∧
                                             
                                           
                                          ro:hasParticipant (?bf1,?pb1) 
                                          
                                             
                                                ∧
                                             
                                           
                                          ro:hasParticipant (?bf2,?pb2)
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∧
                                             
                                           
                                          tbfo:hasQuality (?pb1,?avgV1) 
                                          
                                             
                                                ∧
                                             
                                           
                                          tbfo:hasQuality (?pb2,?avgV2)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          tbfo:hasQualityValue (?avgV1,?qv1) 
                                          
                                             
                                                ∧
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          tbfo:hasQualityValue (?avgV2,?qv2)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                             
                                                ∧
                                             
                                           
                                          swrlb:greaterThan (?qv2,?qv1)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          
                                          
                                          
                                             
                                                →
                                             
                                          
                                          check:Valid (?apa)
                                       
                                    
                                 
                              
                           
                        
                     

After the execution of this rule the class Valid contains all the individuals of the type bfso:AntiplateletApplication that were generated by those simulations which worked in a coherent way. Similarly, other rules for the validation of other informations can be constructed.

@&#DISCUSSION@&#

The paper introduced a novel approach for connecting temporal-ontologies with blood flow simulations. The advantages of the fusion of these two different concepts are, among other things, to permit medical researchers an intuitive admission to blood flow simulations and the providing of medical special knowledge to achieve realistic simulations e.g., by checking the plausibility.

Although the huge amount of data that is generated by time-dependent CFD cannot be analyzed on the fly nor stored in an ontology, some selected features however can. Among these are plausibility flags relating to different parameter sets. The prototypical implementation shows that the approach works well. The extension of blood flow simulations with temporal-ontologies is therefore promising more realistic and expanded simulations. The resulting temporal ontology (TBFO) is available at http://ls7-www.cs.tu-dortmund.de/owl/ as owl file and as Protégé project file.

Neither the current version of the BFO nor the RO are meeting the requirements for a sufficient representation of time-associated processes such as blood flow. The BFO for example does not contain a category for the representation of process qualities (e.g., the average blood flow velocity), which is why a workaround had to be developed even at the cost of lowering the compatibility of ontologies of different domains. It’s decrease in compatibility is apparent even in cases in which the domain ontologies are referring to the same upper level ontology (e.g., the BFO). Especially the BFO community appears to be aware of this drawback. This mechanism as a whole could be useful, but is not feature complete. Among the possible extensions are the modeling of pulse as a form of periodicity. Periodicity is missing in current temporal ontologies and could not yet be modeled. Other aspects concerning the simulation are the inclusion of hematocrit (non-Newtonian fluid modeling) or parameters for thrombosation (quick, prothrombin time) which are not yet included (and simulated).

@&#ACKNOWLEDGMENTS@&#

The authors would like to express their most cordial gratitude to Mathias Brochhausen from the Division of Biomedical Informatics at the University of Arkansas for Medical Sciences (UAMS), Little Rock, AR, USA, for critically discussing this project. The authors would also like to thank Bernd F. Romeike, Department of Neuropathology, Friedrich Schiller University Medical School, Jena, Germany, for providing the unsegmented previously published [29] pictoral representation of an arterial aneurysm in a New Zealand White Rabbit (Oryctolagus cuniculus; National Center for Biotechnology Information, NCBI, Taxonomy Identifier: 9986).

@&#REFERENCES@&#

