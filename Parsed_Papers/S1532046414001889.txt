@&#MAIN-TITLE@&#An optimization based on simulation approach to the patient admission scheduling problem using a linear programing algorithm

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Radiology workflow optimization using simulation and a meta-heuristics algorithm.


                        
                        
                           
                           Problem modeled as a multi-stage/multi-server system considering elective patients.


                        
                        
                           
                           Statistical methods were used to estimate processing times according to exam type.


                        
                        
                           
                           Workflow reengineering according to international standards and guidelines.


                        
                        
                           
                           Minimization of patients’ waiting time and increase of workload was achieved.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Workflow

Diagnostic imaging

Personnel staffing and scheduling

Process assessment

Organizational case studies

Patient admission

@&#ABSTRACT@&#


               
               
                  Background
                  As patient’s length of stay in waiting lists increases, governments are looking for strategies to control the problem. Agreements were created with private providers to diminish the workload in the public sector. However, the growth of the private sector is not following the demand for care. Given this context, new management strategies have to be considered in order to minimize patient length of stay in waiting lists while reducing the costs and increasing (or at least maintaining) the quality of care.
               
               
                  Method
                  Appointment scheduling systems are today known to be proficient in the optimization of health care services. Their utilization is focused on increasing the usage of human resources, medical equipment and reducing the patient waiting times. In this paper, a simulation-based optimization approach to the Patient Admission Scheduling Problem is presented. Modeling tools and simulation techniques are used in the optimization of a diagnostic imaging department.
               
               
                  Results
                  The proposed techniques have demonstrated to be effective in the evaluation of diagnostic imaging workflows. A simulated annealing algorithm was used to optimize the patient admission sequence towards minimizing the total completion and total waiting of patients. The obtained results showed average reductions of 5% on the total completion and 38% on the patients’ total waiting time.
               
            

@&#INTRODUCTION@&#

It is common-knowledge that in the last decade there has been an increasing demand for health care services. Among others, this arises from an ageing population and an increasing awareness for preventative care. On the other hand, the world economic situation is leading to a reorganization of healthcare systems. At a macro level, what is noticeable is a centralization and decrease in the number of public healthcare providers [1]. In practice, and mainly in the department of medical imaging, this reflects an inability of healthcare providers to respond to an ever increasing demand. As the patient’s length of stay in waiting lists increases, governments are looking for strategies to control the problem. In Portugal, to diminish the workload in the public sector, conventions were created with private providers in which patients can access examinations without losing the benefits of the National Health Service (SNS, from the Portuguese Serviço Nacional de Saúde). However, the growth of the private sector is not following the demand for care. In this context, new management strategies have to be considered to minimize the patient length of stay in waiting lists, while reducing the costs and increasing the quality of care.

The study of workflows attempts to understand the process and remove components, without added value, which delay the service and introduce complexity that ultimately may result in errors. The opportunities that this type of study has in medical imaging are significant, given that the majority of workflows in medicine have yet to be consistently described [2], which is also the case for medical imaging.

Appointment scheduling systems are today known to be proficient in the optimization of health care services. Their utilization is focused on increasing the usage of human resources, medical equipment and reducing the patient waiting times. This paper considers the appointment scheduling problem in an imaging clinic. The considered imaging clinic provides services on Computed Tomography (CT), MRI, Radiology (RX), Orthopantomography (OT), Densitometry (PX), Mammography (MG) and Ultrasound (US). Appointments are requested by the patient either by phone or in person. At the moment of request the patient appointment is scheduled for a day and time according to the timetable availability and patient’s preference. The size of the time block, i.e. processing time, is defined according to the modality. The aim was to improve the patients’ admission scheduling in order to minimize the patients’ waiting time, and increase patient throughput. Thus, the problem studied herein considered elective patients and was modeled as a static, multi-stage/multi-server system, with processing times estimated according to the type of clinical examination and defined as a probability distribution. A discrete-event simulation model integrated with an optimization technique was used to minimize the patients’ waiting time and increase patient throughput.

This paper is divided in eight sections. In the first section, the problem object of study is presented. In the second section, the problem is defined and the state of the art is reported. In the third section, the case study is described. In the fourth section, the resources’ and tasks’ characterization parameters are presented. In the fifth section, the modeling approach is explained and the simulation technique described. In the sixth section, the optimization algorithm with which the results were obtained is presented. In the seventh section the optimization results are interpreted and presented. Section eight draws conclusions on the results and foresees future work.

The first reference to the Admission Scheduling (AS) problem is from Bailey [3] and dates from 1952. In this work, the problem was addressed as a queuing system with the objective of minimizing patients’ waiting time. Bailey concluded that the best solution for the problem was to schedule patients in regular intervals, equal to the average consultation time. The AS problem definition was first addressed by Cayirli and Veral [4] and is briefly described hereafter. AS problems consider the finding of an appointment schedule in a healthcare environment for which an objective function, considering one or multiple performance measures, is optimized. If AS is considered as a queuing system, these performance measures have an essential role as, in queuing systems, issues are often related to the patient. The problem definition is primarily divided into two main categories: static and dynamic. It is considered a static problem when all the decisions are made a priori. This means that the proposed appointment system does not consider the system current state. Static problems are the most common type of problems in healthcare environment [3,5–7].

In contrast to this, in a dynamic problem the appointment system is reviewed based on its current state [8–11]. In both categories, problems are further defined according to environmental factors defined in the following sub-sections, namely: number of stages – number of tasks required to complete the process, number of servers – number of available resources with competences to complete the same task, patient tardiness and processing times.


                           
                              
                                 (i)
                                 
                                    Single-stage: system where patients queue for a single stage. The majority of the studies in literature represent single-stage problems. Schemes, illustrating single-stage systems, are provided in Fig. 1
                                    (a) and (b).


                                    Multi-stage: system where patients queue for multiple stages, such as registration, examination and checkout. Schemes illustrating multi-stage systems are provided in Fig. 2
                                    (a) and (b). A multi-stage system was considered by Garg et al. [5]. In this work, a hospital scenario was studied and the patient pathway was modeled to consider different phases of care, such as acute, treatment and rehabilitation. In the workflow modeled by Granja et al. [12], three stages were considered in the patient’s pathway in radiology: admission, examination and billing. Chen et al. [13] considered four stages in their analysis of surgery admission. Connelly and Bair [14] explored the potential of discrete event simulation in the operations analysis in an emergency department. In their work, a multi-stage system was considered as each patient was modeled as a set of instructions that define a series of individual activities that must be completed in a given order before the patient leaves de emergency department.


                           
                              
                                 (i)
                                 
                                    Single-server: appointment system regards a specific server. Schemes illustrating single-server systems are provided in Fig. 1(a) and Fig. 2(a). They are the most predominant in literature [15,16]. Even if not considered the best option to define the problem, this choice is related to the human background of the problem. The doctor–patient relation is highly considered in quality measures. Always being sent to the same doctor is highly valued by the patient. Therefore, most models consider independent queues for each doctor.


                                    Multi-server: more than one server with the same capabilities is considered in the appointment system [17–20]. The scheduling algorithm decides to which server each patient is queuing. Schemes illustrating multi-server systems are provided in Fig. 1(b) and Fig. 2(b). A multi-server system was considered by Hoot et al. [21]. In this work, the emergency department crowding was studied. Discrete event simulation was applied to real-time forecasting of emergency department crowding, being number of beds used to measure the occupancy level of the emergency department.


                           
                              
                                 (i)
                                 
                                    Delays: difference between the scheduled time for the appointment and the time of the patient’s arrival, is denominated by patient tardiness. Alexopoulos et al. [22] modeled patient tardiness by an asymmetric Johnson distribution. More recent studies in literature handle this uncertainty by considering it while modeling the patient arrival, instead of estimating patient’s tardiness. Williams et al. [23] defined the patient arrival as a dynamic random Poisson process; the patient arrival process is described by an exponential distribution with time varying parameters.


                                    No-shows: no-shows and late-cancelations, hereafter referred to as no-shows, are a major concern for healthcare managers. Liu et al. [17], defined no-shows as a binomial random variable with two parameters: (a) the number of appointments for the day and (b) the probability that the patient is a no-show. The no-show probability is estimated based on the time elapsed between the day the appointment was requested and the day the appointment was scheduled to. The influence of appointment date on no-shows was studied by Alaeddini et al. [18]. However, patient related variables were also considered. A hybrid probabilistic model was presented using patient social and demographic data, individual attendance records and appointment date. Lin et al. [19] studied the use of overbooking to decrease the impact of no-shows in admission scheduling. In this work, the authors presented a model for sequential assignment of heterogeneous no-show patients to time slots with the possibility of slot overbooking and in-clinic patient waiting.


                                    Walk-ins: patients that come into the system without an appointment. Very few AS models consider walk-ins. Walk-ins are generally defined as probability related to a percentage of the scheduled appointments [20,24,25].


                           
                              
                                 (i)
                                 
                                    Processing time: was defined by Bailey [3] in the particular case of outpatient scheduling, as the sum of all the times the patient is with the doctor preventing him from attending to other patients. Extrapolating to other clinical environments, the processing time represents the sum of all the times the patient is using clinical resources in activities that add value to the process, or activities which the process completion depends on. Meaning that, in systems that do not refer to outpatient scheduling, i.e. patients that are hospitalized, the patient interacts with and uses other clinical resources, such as nurses, technicians, beds and rooms.

Mazier et al. [9] used real system data on admission and planned discharge. These authors used a random variable to correct the data and define the processing times distribution. The random variable was estimated using empirical data for the day of discharge. A heterogeneous stochastic model was used by Adan et al. [24]. The processing time was defined as a probability estimated according to patient group. Groups were defined by patient’s age and empirical data regarding the use of resources.

The problem studied herein considered elective patients and was modeled as static, multi-stage/multi-server system and processing times were estimated according to the type of clinical examination and defined as a probability distribution.

A framework for production control in healthcare, describing the different decision levels in production planning, was introduced by Groot et al. [25] and further developed by Vissers et al. [26]. In the framework by Vissers et al. five hierarchical levels were proposed for resource capacity planning that are, from the highest to the lowest level: strategic planning, patient volumes planning and control, resources planning and control, patient group planning and control and patient planning and control. The hierarchical levels are defined as follows:
                           
                              (i)
                              
                                 Strategic planning: is the highest level of the framework. At this level, decisions encompass two to five years. They refer to top management and define the future direction of the provider.


                                 Patient volumes planning and control: the target number of patients and service levels are set for each patient group and the production volume is settled. These decisions have a range from one to two years.


                                 Resources planning and control: is devoted to the allocation of resources to the patient group, such as specialties or departments. It is at this level that the batching rules are set by patient group. At this level the decisions have an effect on the system for a period of three months to one year.


                                 Patient group planning and control: refers to the availability of the resources required to perform the activities defined in the Patient Planning and Control level. At this level the decisions have a time range from weeks to three months.


                                 Patient planning and control: is devoted to the scheduling of daily activities required for patient planning. The decisions have a timeframe from one day to one week and refer to the point in time when waiting patients are admitted. That is, the definition of admission and discharge dates.

Although this framework treated healthcare providers as independent business units it is limited to resource capacity planning and does not consider online decision making.

Hans et al. [27] presented a two-dimensional framework for healthcare planning and control which considers four management areas and four hierarchical levels. The managerial areas are: medical planning, resource capacity planning, materials planning and financial planning. As for the hierarchical levels considered, these are: strategic, tactical, offline operational and online operational.

Considering the scope of the work presented herein, the literature review on the state of the art, given in this section, will only consider the resource capacity planning managerial area. This area is defined in the healthcare planning and control framework presented by Hans et al. [27]. Moreover, the identified research works are categorized according to the hierarchical levels described in the same framework.

In what concerns the four hierarchical levels proposed by Hans et al. [27], the strategic level has a similar scope as in the framework defined by Vissers [26]. This level addresses structural decisions with a long-term effect on the organization. Diwas and Terwiesch [15] studied the effect that the focus at firm level, operating unit level and process flow level, has on the operational performance in an AS problem describing cardiac care delivery in hospitals. Firm level denotes the percentage of hospital patients that are admitted for cardiac care. Operating unit level refers to the percentage of patients that require the same type of care delivery from the cardiology department. Process flow level, as indicated by the name, refers to the patient pathway. At this level, the process was modeled as a single-stage/single-server system. The effect of focus on performance was measured by the outcome of patient treatment. The authors were able to demonstrate that an increase of 10% at firm level was associated with a reduction of 3.88% in the patient length of stay; the same increase at operating unit level implies a reduction in length of stay of 4.92%. Lee and Kwak [16] developed an enterprise resource planning (ERP) for healthcare using a multi-criteria decision-making model. The model was developed in the scope of the implementation of a new hospital providing patient-oriented healthcare services. At process level the system was modeled as a single-stage/single-server and the global work objectives were the maximization of service quality and minimization of cost for the organization, through an efficient resource allocation. Using goal programming the authors achieved satisfying solutions for the problem that allowed the increase of patient throughput. Mullen [28] demonstrated the importance of waiting lists prioritization in healthcare organizations, according to political and clinical objectives. This author investigated the importance of prioritization rules for patients’ clinical aspects, such as pain and severity, and social factors, such as age, employment status and number of dependents.


                        Tactical level addresses the processes organization and execution. At this level the decisions have an intermediate planning horizon. An AS problem in a surgery department aiming to minimize the patients’ length of stay in waiting list was presented by Arenas et al. [29]. The problem was defined as a single-stage/multi-server system. The number of requests and processing time were estimated using empirical data and described by the average. Using goal programming the authors were able to present a solution to minimize the patients’ length of stay to a maximum of six months but no solution was found to minimize it to a maximum of four months. Gallivan et al. [30] studied the effect of the variability of patient length of stay on the capacity requirements in cardiac surgery. The number of service requests was estimated based on empirical data and described by the total average, not considering daily or weekly patterns. The effect of the variability of length of stay was determined by investigating the bed occupancy in the intensive care unit. The results of this study revealed that not considering this variability could lead to an operational overload of 41% of the operational time, indicating that the variability in length of stay is determinant in hospital activities. AS for elective patients in a hospital was presented by Nunes et al. [31]. The AS problem was modeled as a single-stage/multi-server and aimed at the prevention of resources idleness and excessive usage. Adan and Vissers [32] studied the AS problem at an orthopedics department in a general hospital. The goal was to find a feasible admission profile while setting targets for patient throughput and resource utilization. Good results were obtained when maximum weight was given to operating room use. However, because only elective patients were considered, the optimization level achieved was small when compared to the real scenario. Holm et al. [33] used a discrete event simulation model to tackle the AS problem through the optimization of bed allocation among wards, aiming the minimization of hospital overcrowding. The model does not consider the patients’ flow among the wards and each ward has an unlimited number of beds. Thus, the model is classified as a single-stage/multi-server being both elective and walk-in patients considered. Patients’ length of stay in the ward is defined by probability distribution and the arrival of walk-ins is defined by a Poisson distribution. In the proposed model, each bed allocation scenario is simulated generating a matrix M, denoting the utility of increasing the number of beds, which is then fed to an optimization algorithm that yields the optimum allocation scenario. Bair et al. [34] approached the AS problem in an emergency department (ED) through the optimization of ED bed allocation as well as patients transfer to inpatient beds. The problem was modeled as a multi-stage/multi-server system and both patient inter-arrival time and processing time were defined by a probability distribution. The authors demonstrated that by increasing the number of inpatient beds available it is possible to decrease both ED overcrowding and the number of patients that leave the ED without being seen. Patrick et al. [8] formulated the AS as a capacity allocation problem of appointment slots for Computed Tomography (CT) demand in a hospital. Three priority classes were considered for the patient that constrained the length of stay in waiting list to 7, 14 and 28days, respectively. Given the complexity of the multi-priority patient scheduling problem, linear approximations for the value functions were used to develop an approximate dynamic programming method. The authors demonstrated that, contrary to current practice, small amounts of flexibility have a significant positive impact in the scheduling of the high-priority patients.


                        Operational level also addresses process execution. However, at this planning level decisions have a short-term horizon. Given the stochastic nature of healthcare processes and considering the low level decisions involved in operational planning, this level contains two sub categories: offline and online.


                        Offline operational level, the level approached in the work presented herein, is devoted to operational decision making that involves advanced planning of the processes, whereas online operational level refers to decisions that take into consideration the current status of the processes. Demmester et al. [6] described the AS problem as an offline single-stage/multi-server system. By means of a hybrid tabu search algorithm, the authors studied the daily assignment of patients to beds in a hospital with the goal of minimizing patient waiting. The proposed algorithm revealed to be very effective in finding a feasible solution when compared to commercial integer programming solvers. However, the single-stage modeling of the problem used limits the proposed system applicability. Single-stage models do not allow the algorithm to have full knowledge of the patient pathway. Therefore, it cannot be applied to problems, as the case-study considered herein that considers more than one type of resources, since it is unable to handle the interaction in between them. Su and Shih [35] used a case-study of an outpatient urology clinic to investigate and demonstrate the benefits of applying simulation models to offline AS problems. A multi-stage/single server system was considered, with both elective and walk-in patients. Patients’ processing times were determined from empirical data and fitted to a probability distribution, which goodness-of-fit was proved by a Kolmogorov-Simirnov test [36]. The authors sequentially numbered admission slots and setup four scenarios considering different admission policies to infer from its implications on patients’ throughput and waiting time. In the outpatient clinic setting considered, patients’ appointments are scheduled to a specific physician. Thus, the proposed method is not suitable for AS problems where patients queue for multiple server, i.e. more than one resource with the same capabilities is considered for allocation by the appointment system. Pham and Klinkert [37] proposed a mixed integer programming (MIP) model for the offline AS problem in a surgery department, considering both elective and emergency patients. Surgery processes were modeled as multi-stage/multi-server system with time constraints on the maximum waiting between stages. The authors introduced the multi-mode concept to refer to the multiple groups of resources, selected from the resources pool, available to execute each activity. Each mode was defined by a set of resources and characterized by the time interval of availability. Considering that the authors used MIP, and have identified as future work the development of a heuristic solution, one may conclude that they were not able to overcome the problem of excessive calculation time inherent to this type of algorithms. Cardoen et al. [38] determined the offline optimal sequence for the daily schedule of patients to operating rooms in an ambulatory surgical center. Using a MIP method the authors simultaneously optimized six objectives by incorporating them into a single multi-objective function with weighting factors. The method revealed several limitations concerning the non-interchangeable time slots, resource capacity, and multi-tasking. Moreover, deterministic processing times were used for surgeries which introduces a huge error in the description of the actual events. Lamiri et al. [2] developed a stochastic algorithm combining Monte Carlo Simulation and MIP for scheduling patients to operating rooms. Their objective was to minimize operating room overtime costs, considering both elective patients, who may be delayed in a time horizon, and emergency patients, which have to be admitted on the day of arrival. The authors demonstrated that stochastic optimization models achieve considerably good results, when compared to deterministic models. However, solutions were achieved by solving random instances of the problem. Thus, it is difficult for the authors to know whether the algorithm is converging to an optimum value.

As an example of the online operational level the reader is referred to Li et al. [39]. The authors proposed a method for patient scheduling aimed at minimizing patient waiting time and resolving waiting room overcrowding. The model considered patient priorities in real-time and its implementation allowed a significant reduction of patient waiting times.

In this paper, the AS problem is addressed at an offline operational level. The proposed method aims to minimize the patients’ waiting time and maximize the patients’ throughput by minimizing the processes’ total completion time.

To unequivocally understand the optimum operation of clinical workflows defined by national and international guidelines [40,41], the processes from all the modalities existing in the studied clinic were theoretically modeled. The case of Magnetic Resonance Imaging (MRI) is briefly presented hereafter.

In MRI, and diagnostic imaging in general, implemented workflows are notoriously inefficient. These workflows require professionals to perform a heightened number of tasks, since the patient is scheduled until the image report is ready for delivery. To evaluate and understand the workflow in an MRI examination it is necessary to understand the main types of examinations and their utility, as well as the technical protocols involved in each of them. Technical protocols mainly influence the time required for image acquisition during an examination. It should also be understood for each type of examination: (a) how the members of clinical staff are involved, e.g. exams that require contrast administration imply additional human resources, and (b) which are the technical requirements, e.g. not all equipment is able to perform a given set of protocols.

To understand and outline the capabilities and responsibilities of each human resource, national and international guidelines on the execution and interpretation of MRI examinations were analyzed. The identified capabilities by human resource category are as follows:


                     Radiologist: the radiologist’s capabilities may be divided in two main sub-categories: executive and cognitive [42]. Executive capabilities may be described, defined, taught and subjected to execution patterns, which makes them transferable to other members of staff with appropriate training, e.g. radiology technician. During examination, the radiologist performs a supervision role, unless the examination requires advanced anatomical knowledge. Cognitive capabilities are those in which the radiologist cannot be replaced and that add value to the process such as examination reporting. Therefore, the radiologist should be available to perform them as much as possible.


                     Radiologist technician: it is competence of the technician the preparation and positioning of the patient for examination, as well as their surveillance during the examination. Technicians also plan, program and execute the procedures necessary for the examination. They may also write a preliminary report describing the observations, to aid the radiologist on reporting. Daily quality control assessment, such as equipment calibration, is also the responsibility of the technician [42,43].


                     Nurse: the nurse is responsible, in cooperation with the technician, for preparing and positioning the patient. The nurses also have to prepare the intravenous line for contrast administration, detect eventual contraindications and monitor the patient during injection [43].

In the general case of an imaging clinic, the following physical resources were identified: front office, waiting room, control room, exam room, dressing room, recovery room, processing room, and radiologist room. For a detailed explanation on the specifications of physical resources, please consult the following references [44,45].

Parallel to the patient workflow there is an information and/or resource flow, hereafter denoted by information flow, independent from the patient workflow. The information workflow includes tasks that despite the patient not being aware of, are of extreme relevance to accomplish the examination request. This includes tasks such as: (a) the patient registry on the IT system; (b) the analysis of the patient and the examination information in order to define the examination sequences; (c) the registry of examination information on the modality; (d) the equipment preparation for examination; (e) the images processing; and (f) the images reporting. Together, the patient and the information workflow compose the clinic workflow, since the patient requests the examination until the final report is delivered.

Considering the specification on the resources, given herein, the guidelines and the best practices [46,48–56], all the tasks required to accomplish an examination were identified, characterized, and the optimum workflow defined, as illustrated in Fig. 3
                     .

This article approaches an AS problem in a private imaging clinic. Since the clinic is not integrated in a hospital, no service requests, besides the scheduled patients, are delivered by the clinic. In the field work, carried out in the beginning of the project, a non-significant number of patient delays was observed. This is mainly due to the social environment in which the clinic is integrated. As the clinic is situated in a rural area in the north of Portugal, and serves a vast area, due to social factors the patients tend to arrive early for the appointment, often several hours before the scheduled time. Thus, it was not possible to characterize this environmental factor.

The considered clinic provides services on Computed Tomography (CT), MRI, Radiology (RX), Orthopantomography (OT), Densitometry (PX), Mammography (MG) and Ultrasound (US). It has 8 daily working hours and is composed of human, physical and technical resources, such as: Physicians; Technicians; Assistants; Administrative; Waiting room; Changing Room; Control Rooms; Examination rooms; Modalities.

CT and MRI modalities use the same human and physical resources. The call for examinations is made by the same assistant, who directs the patients to the dressing rooms. There are four dressing rooms shared by both modalities. RX/OT and MG/PX share the technician that executes the examination.

In the considered case, appointments are requested by the patient either by phone or in person. At the moment of request the patient appointment is scheduled for a day and time according to the timetable availability and patient’s preference. The size of the time block, i.e. processing time, is defined according to the modality. At the day of the appointment the patient refers to the clinic for admission. Subsequent to admission, the patient waits to be called for examination. The service is provided to the patient when the necessary resources are available and according to the reschedule made by the technicians, based on their empirical knowledge on the type of examination. Depending on the number of patients waiting and the modality required to fulfill the examination, more than one patient may be called at the same time. In these cases, if the patients are scheduled either to CT, MRI or RX then they are directed to dressing rooms. Otherwise, only one patient enters directly to the examination room and the remainders are directed to the interior waiting area. After discharge, patients are directed to billing.

The proposed AS problem was defined as a multi-stage/multi-server system. Patient tardiness, i.e. delays, no-shows and walk-ins, was not considered, given that in the case presented herein patient earliness was assumed to be more frequent. The system was modeled based on a new concept of task. Here, task is defined as all activities using the same set of resources during the same time range. Tasks are characterized by their space and time dependency of the resources and their sequence in time. Thus, for a task to be fully defined the previous task has also to be defined in time, either by its ending time or operation mode, i.e. if waiting is or not allowed.

The processes implemented at the studied clinic were modeled by in loco observation and characterized according to the parameters described in the following sections. The parameters were defined based on the optimum workflow, to ensure the process models accuracy. These parameters allow describing of the real case, while maintaining the modeling flexibility and robustness.

No distinction was made between human, physical or technical resources while defining the characterization parameters of the modeling approach. Furthermore, given that both the patient workflow and the information flow are considered in the characterized processes, for modeling purposes patients are considered as resources.

Resources are defined by the activities they are able to perform instead of their type, (e.g. physician, nurse, or technician). This ensures that during simulation all the resources executing the activity in the real case are considered for allocation. This allows the simulation tool to describe situations such as the technician referring to the waiting room to call the patient for examination when the assistant is not available. These situations occur in the real case even though it is not of the resource responsibility.

During the fieldwork at the clinic it was noticed that resources often operate in multi-tasking mode. This is particularly relevant in cases where, during the examination of a patient, the technician processes the examination images from another patient, since this last task is extremely time consuming when compared to the duration of an examination. In this sense, resources are characterized according to their capacity when performing an activity and their availability is defined in time slots that are used by the activities.

Furthermore, it was observed that physicians have preferences when choosing the technician that executes certain examinations. To be able to consider these preferences resources are classified as belonging to a team or not, when performing specific activities. This feature is also used to tackle the common situation of dressing rooms being chosen for patient use according to the examination modality.

Each resource m belonging to the set of resources Mm
                      is characterized by the parameters described in Table 1
                     .

The in loco observation of the clinical workflows of the studied clinic led to the conclusion that the process could not be modeled as a single stage. Considering a single-stage system means that all the resources needed to perform the process are used in continuous mode throughout the process, which does not describe the reality.

The present modeling approach considers each task as a stand-alone process, i.e. performed by the same set of resources in the same time space. The use of this concept makes necessary to establish precedence relations between tasks in order to sequence them in time and to prevent tasks from starting before previous tasks are completed. Additionally, for a task to be fully defined in time it is also necessary to either characterize its processing time or its operation mode (i.e. defining whether waiting time is allowed or not). However, in diagnostic imaging waiting time limits have to be imposed to tasks in processes that involve the administration of contrast material to the patient. For the same reason it is necessary to impose that examination tasks are non-preemptive, i.e. when the examination starts the process cannot be interrupted. The non-preemption constraint is imposed to the patient resource and not to the tasks. This ensures that the second image acquisition task is performed on time, independent of the technician being available or not; since the process of bio-distribution of the contrast material takes 20min and the technician might not be available.

In the healthcare environment the doctor/patient relationship is very important. Patients feel reassured and consider a parameter of quality is met when the same resources assist them during their stay at the clinic. However, this does not apply to all the resources that intervene in the process; as an example, it is not relevant that the assistant is the same throughout the process, as it is not important to the patient or to the clinic quality. To describe this preference, the decision of the resource needed to perform an activity in a given task; is constrained to the previously used resource (e.g. the same nurse, the same dressing room).

Each task i in the set of tasks Ti
                      (i
                     =1,…,
                     nj
                     ) from process j is characterized by the parameters shown in Table 1. The task resources m and task precedence relations are characterized by the parameters presented in Table 1.

According to the aforementioned characterization parameters for both resources and tasks, each process at the clinic was modeled.

@&#METHODOLOGY@&#

The modeling methodology was implemented in three stages: workflow definition, data collection and simulation and optimization via simulated annealing. First, it was accomplished through a holistic overview of the clinic workflows to identify possible tasks that were not taken into account in the previous definition of an optimum workflow. The data collected at this stage established the principles for the elaboration of a detailed checklist, generic to all providers, that systematizes the relevant data collection. In the following, the used modeling methodology is exemplified for the MRI modality.

To better understand the resources utilization at the studied clinic, 966 medical exams were investigated and characterized. For a period of four months, data was collected by the observation of the daily work. The workload characterization data is given in Table 2
                         and Fig. 4
                        .

Data in Fig. 4 evidences a characteristic pattern concerning the frequency of a given type of exam. From a total number of forty-one different types of medical exams, six represent 76.4% of the total workload (cervical, lumbar, knee, brain, breast and shoulder). This led to the restriction of the exams observed, during the second phase to the six stated above, given the amount of observation time required to have a sample that would be statistically representative.

In the second stage, the major sources of disturbances to the normal workflow were investigated. In this sense, it was studied the influence on the clinical workflow of events/features, such as: (a) resource sharing between modalities – several times this leads to idle processes due to the assistant’s participation in the ultrasound processes, which require his/her attention for long periods of time; and (b) rescheduling of patients by the technicians, based on their empirical knowledge, it is not always effective and in the majority of times leads to longer patient waiting and extensive working hours. The standard checklist, developed during the first stage, made it possible to recreate the idiosyncratic reality of the studied clinic.

At a third and last stage, the processing time was determined for every previously identified task. The collected data was subjected to an outlier analysis. These points were not included in the calculation of the parameters required for processing time definition, considering that their numerical value was very distinct from the rest of the sample. Since these points were part of the collected data, the cause of variability was investigated.

In the task of equipment preparation one outlier was removed from the sample. The cause for its value being extremely high was due to a patient undergoing two examinations without leaving the examination room. This resulted in the technician preparing both coils needed for the examinations, doubling the time required for the task. In this case the influencing variable was the number of examinations performed on the same patient.

The outliers in the patient positioning were all associated to the breast examination. During this examination the contrast injection is automatic and, in these cases, an intravenous line has to be prepared for the injector, which does not happen in any other type of examination. In this case the influencing variable was the examination type.

The statistical analysis on the clinic workflow main tasks is given in Table 3
                        . Considering that the type and number of sequences differ by examination type, the data relating to the image acquisition task was segmented by examination type, see Table 4
                        .

The proposed simulation model is based on the dynamic allocation of resources, taking into consideration the stochastic nature of tasks processing times. The scheduling system, in which the simulation is based, considers frequently occurring situations in healthcare that are seldom studied, such as activities performed simultaneously and remotely, technical patient waiting, multi-activities of resources and their interdependency. In order to guarantee the scheduling results reproducibility, for a given set of patients, the events mentioned before are described by modeling parameters. By not letting the simulation technique decide on these situations the model guarantees that they are solved following the real events, and that the results obtained for the same set of patients in the same sequence are the same. This allows the scheduling system to have a high degree of accuracy. The scheduling system only has to handle the time related constraints. In this sense, the decision variables are:
                           
                              
                                 
                                    
                                       
                                          
                                             t
                                          
                                          
                                             
                                                
                                                   0
                                                
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                          
                                       
                                    
                                  Task i from process j starting time.


                                 
                                    
                                       
                                          
                                             t
                                          
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                          
                                       
                                    
                                  Task i from process j ending time, defined as:


                        
                           
                              
                                 
                                    
                                       Δ
                                       
                                          
                                             t
                                          
                                          
                                             
                                                
                                                   w
                                                
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                          
                                       
                                    
                                  Waiting time of task i from process j.

The constraints reads:
                           
                              (2)
                              
                                 
                                    
                                       ε
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   w
                                                   →
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               i
                                                               ,
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                   ⩾
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                               -
                                                               1
                                                               ,
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   o
                                                   →
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               i
                                                               ,
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                               -
                                                               1
                                                               ,
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       η
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   zw
                                                   →
                                                   Δ
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               i
                                                               ,
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                   =
                                                   0
                                                
                                             
                                             
                                                
                                                   nzw
                                                   →
                                                   Δ
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         
                                                            
                                                               w
                                                            
                                                            
                                                               i
                                                               ,
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               i
                                                               +
                                                               1
                                                               ,
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                   -
                                                   (
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               i
                                                               ,
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        For each task, pi
                        
                        ,
                        
                           j
                         is defined by a normal distribution, based on μi
                        
                        ,
                        
                           j
                         and 
                           
                              
                                 
                                    σ
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    2
                                 
                              
                           
                         specified in task parameters. The definition of pi
                        
                        ,
                        
                           j
                         is bounded as follows:
                           
                              (4)
                              
                                 
                                    
                                       p
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 >
                                 0
                                 ,
                                 
                                 ∀
                                 
                                 i
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 j
                                 ∈
                                 J
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 -
                                 3
                                 
                                    
                                       σ
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 ⩽
                                 
                                    
                                       p
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 ⩽
                                 
                                    
                                       μ
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 +
                                 3
                                 
                                    
                                       σ
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                 ∀
                                 
                                 i
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 j
                                 ∈
                                 J
                              
                           
                        Considering the magnitude of processing time for some tasks, constraints (4) ensure that only valid values are used for simulation. Moreover, constraints (5) impose a three sigma precision to pi
                        
                        ,
                        
                           j
                        , centered in μi
                        
                        ,
                        
                           j
                        . This implies that the defined pi
                        
                        ,
                        
                           j
                         matches 99.7% of the observed value.

Simulated annealing (SA) metaheuristic was originally proposed by Kirkpatrick et al. [46] and Černý [47]. The algorithm is based on the thermodynamic principles of the physical annealing process. In the annealing process, a solid is heated to a temperature above its melting point and then cooled slowly. The structural proprieties of the solid depend on the cooling rate. If the cooling process is fast the solid crystals will be small and with imperfections. The analogy between the SA and the physical process is as follows:
                        
                           Objective function, Fobj
                              
                              →System energy, Ei
                              .

Initial solution, S
                              0
                              →Initial state.

Accepted solution, Sm
                              
                              →System state.

Neighbor solution, S
                              →Change of state.

Control parameter, T
                              →Temperature.

Best solution, Sbeat
                              
                              →Solidification state.

One of the benefits of a SA metaheuristic is that it can avoid local minima by accepting a worse solution, under given conditions. In the SA version used herein, shown in Fig. 6
                      as a flowchart, the Boltzmann distribution (see Eq. (6)) was considered to define the probability of acceptance of worse solutions and the cooling rate was defined as being geometrical, Eq. (7).
                        
                           (6)
                           
                              p
                              =
                              
                                 
                                    exp
                                    (
                                    -
                                    
                                       
                                          E
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    /
                                    kT
                                    )
                                 
                                 
                                    exp
                                    (
                                    -
                                    
                                       
                                          E
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    /
                                    kT
                                    )
                                    +
                                    exp
                                    (
                                    -
                                    
                                       
                                          E
                                       
                                       
                                          i
                                       
                                    
                                    /
                                    kT
                                    )
                                 
                              
                              ≈
                              exp
                              (
                              -
                              Δ
                              E
                              /
                              kT
                              )
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    T
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                              =
                              β
                              ·
                              
                                 
                                    T
                                 
                                 
                                    i
                                 
                              
                           
                        
                     The algorithm of Fig. 6 has five parameters: T
                     0, the system initial temperature; Tmin
                     , stopping criteria; N, the number of neighbors evaluated at each temperature; β, the cooling rate; and k, the Boltzmann constant. An additional stopping criterion is used to evaluate if the system is frozen, based on the evolution of the objective function in a given interval of iterations.

In SA original configuration [46,47], the search space was defined by the random generation of neighbors. In the work presented herein, SA searches on the space of patient sequences, representing the order by which elective patients are admitted in a working day, with relations in between neighborhoods, denoted as S. The first space investigated, denoted as S
                     0, has only one solution that represents the original patient sequence at the studied provider. In this way, the simulation results for S
                     0 were used to check the simulator accuracy on reproducing the original scheduling. Each new solution generated in each neighborhood S was simulated and the total completion (TC), which denotes the final processing time of the last task to end, and the sum of patients’ waiting time, or total waiting (TW), were used in the evaluation of the objective function, according to Eq. (8).
                        
                           (8)
                           
                              
                                 
                                    F
                                 
                                 
                                    obj
                                 
                              
                              =
                              0.5
                              TC
                              +
                              0.5
                              TW
                           
                        
                     The random generation of patient sequences, in the search for new solutions, means that there is no control in the search method. The new solution may or not be close to the previous and the search procedure may overcome the optimum solution, or take a longer time to find it.

Considering that the clinic processes share one or more resources, slight changes in the patient sequence have a large impact in the objective function. In this sense, a patient swap move was considered to generate neighbor solutions. In the sequence generation, a pair of patients 〈p
                     1,
                     p
                     2〉 is swapped for the full set of exams they are scheduled to. The swap is restricted and does not occur if the set of exams to be performed by both patients is the same. In each search space one of the patients was kept unchanged in the 〈p
                     1,
                     p
                     2〉 pair selected for swap to generate a new neighbor, as shown in Fig. 5
                     .

@&#RESULTS AND DISCUSSION@&#

Experiments were conducted in order to determine the optimum patient admission sequence that minimizes total completion and total waiting.

Total completion was used as a measure of the system efficiency. It was considered that, a sequence of patient admissions was more efficient if the production ends earlier. Total waiting was used as a measure of production quality. TW, as it is a performance indicator that directly affects the patient, was used to measure production quality. It was considered that a sequence of patient admissions that, on average, imposes less waiting time to the patient denotes better production quality.

The developed work was applied in the operational analysis of the imaging clinic described in Section 3.1, with the exception of the US modality. Simulation inputs are based on empirical data and are representative of the workload in a typical day at the studied clinic. The set of exams investigated is presented in Table 5
                     .

The results obtained for the space S
                     0 were compared to the reference of 8h of work per day, denoting a relative error in simulation of 1.2%. The results for S
                     0 evidenced that the number of administrative staff is a limiting variable of the system. The bottleneck mostly influences the MG modality since the patient length of stay, in most cases, is shorter than the time given between admissions, turning the technician idle. The situation in which the idleness does not occur is when the patient is scheduled for MG and OT. Since the technician executing both modalities is the same, the patient performs the processes in continuum. The best result was obtained in the trial in which the optimum solution was found at S
                     11. In the sequence evaluated as the optimum, the MRI patients were admitted by examination type. In practice this means that less room preparation is needed, since the coils necessary for the exams are the same, diminishing the processing time and, consequently, the patient wait (see Table 6
                     ).

The same variable, examination type, also influences the CR modality. In the optimum sequence, all the patients scheduled for the thorax examination and three of the patients scheduled for the lumbar examination were admitted consecutively. This also diminishes the processing time since the equipment existing at the studied clinic had a rotary table that had to be set according to the examination type. In the mentioned type of examinations, the table is set to the vertical position in all of them, which eliminates the machine setup time from these processes, except for the first to be admitted.

Resource sharing was also identified as a limiting variable. The CR and the MG modalities share the equipment in which the images are digitalized. Several times this equipment was required by both modalities at the same time, or was in use when required, causing idleness of technicians and increased patient waiting, since the patient cannot be discharged until the image quality was evaluated.

@&#CONCLUSIONS@&#

It was demonstrated that the application of the developed tools could be used for the evaluation of patient admissions. The gathering of simulation with optimization techniques was demonstrated to be very effective in the determination of system bottlenecks as well as their evaluation by identifying their cause. A drawback of simulation tools, based on linear programming, is that this approach attempts to solve the AS problem as a queuing system, by generating an empirical fit to the system behavior defined in the process model. Such limitation was minimized by the modelling methodology, the system module that defines the system behavior. Here, each resource is characterized according to its competences. Thus, the simulation tool allocates a resource to a task according to the activities they are able to perform, therefore, being flexible when generating a solution and more truthful to the actual events. Additionally, a sequence generation algorithm, that allows to explore different system settings when searching for a solution, was embedded in the developed system.

An imaging clinic was studied in terms of efficiency and production quality, denoted by total completion time and total patient waiting, respectively.

The patient sequence of the simulated optimum solutions was similar to the patient call order imposed by the technicians. If during patient admission the type of examination is considered, and as a result, patients with similar exams are admitted in continuum, this would have a positive impact in the patient waiting time. On the other hand, if the technician overrides the patient sequence on the day of the examination, to improve the internal sequence of examinations, these results on an extension of patient waiting time, assuming that he/she arrived on time. Therefore, it is concluded that the type of examination should be considered in patient admission.

The process limitations caused by the sharing of the resource used for image development can only be resolved by the acquisition of additional development equipment, or by updating the analog equipment that is used for image acquisition, to digital equipment that does not require image development.

In future work it would be interesting to test other optimization tools that guarantee the finding of a global optimum. It would also be important to consider in the objective function the cost of resources (human, technical and physical).

@&#REFERENCES@&#

