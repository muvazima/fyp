@&#MAIN-TITLE@&#From circle to 3-sphere: Head pose estimation by instance parameterization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Coarse-to-fine framework for 3-dimensional head pose estimation.


                        
                        
                           
                           Parameterize instance factors in a generative mannar.


                        
                        
                           
                           Uniform embedding in a novel direction alleviates manifold degradation.


                        
                        
                           
                           Outperform state-of-the-arts on multiple challenging databases.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Head pose estimation

Manifold embedding

Instance parametric space

Coarse-to-fine

Faces in the wild

Tensor

Bilinear model

@&#ABSTRACT@&#


               
               
                  Three-dimensional head pose estimation from a single 2D image is a challenging task with extensive applications. Existing approaches lack the capability to deal with multiple pose-related and -unrelated factors in a uniform way. Most of them can provide only one-dimensional yaw estimation and suffer from limited representation ability for out-of-sample testing inputs. These drawbacks lead to limited performance when extensive variations exist on faces in-the-wild. To address these problems, we propose a coarse-to-fine pose estimation framework, where the unit circle and 3-sphere are employed to model the manifold topology on the coarse and fine layer respectively. It can uniformly factorize multiple factors in an instance parametric subspace, where novel inputs can be synthesized under a generative framework. Moreover, our approach can effectively avoid the manifold degradation problem when 3D pose estimation is performed. The results on both experimental and in-the-wild databases demonstrate the validity and superior performance of our approach compared with the state-of-the-arts.
               
            

@&#INTRODUCTION@&#

The task of inferring the orientation of human head is defined as head pose estimation. In the computer vision context, head pose estimation is specified as processing steps to transform a pixel-based digital image representation of a head into a high-level concept of direction [1]. Many tasks related to face analysis rely on accurate head pose estimation. For instance, a multi-pose face recognition system can carry out head pose estimation first and then select face images with similar poses for matching; a 3D face tracker can use head pose information to render the face model for the optimal fitting. Other applications of head pose estimation include inferring human gaze direction in the human–computer interaction (HCI) system, monitoring driver awareness for safety driving [2] and inferring the intentions of people in both verbal, and nonverbal communication environments [3].

It is often assumed that the human head is a rigid object and three Euler angles, pitch, yaw and roll, can be used to depict the head orientation [4]. Estimating the three angles from a single 2D image is a challenging task, since there exists extensive variations among pose-unrelated factors such as identity, facial expression, illumination condition and other latent variables. Fig. 1
                      shows the examples of the variations. In many cases, these pose-unrelated factors play a more significant role on the appearance variations than pose changes do [5–7]. Therefore, extracting information that ensures pose changes can dominate over pose-unrelated factors is a crucial point in designing the head pose estimator.

Numerous of approaches have been proposed over the past decades for head pose estimation. We arrange existing methods into four categories: classification-based approaches 
                     [8,9], regression-based approaches 
                     [10–12,7,13], deformable-model-based approaches 
                     [14–16] and manifold-embedding based approaches 
                     [17,18,5,6]. Classification-based approaches are limited to estimate 1-dimensional (only yaw angle) discrete head pose. Regression-based approaches can predict 3-dimensional continuous pose efficiently, but they are extremely sensitive to noise and pose-unrelated factors. Deformable-model-based approaches rely on the localization of facial landmarks, which limits their capability to handle extensive instance variations especially in low resolution images. Manifold-embedding-based approaches assume that facial images with consecutive head poses can be viewed as nearby points lying on a low-dimensional manifold embedded in the high-dimensional feature space. Head pose angles can be recovered by measuring the points’ distribution in the manifold embedding space.

Although manifold-embedding-based approaches have achieved great success in the former research, they still suffer from multiple limitations. First, there is no guarantee that pose-related factors can dominate over pose-unrelated factors in the manifold embedding process, since pose-unrelated factors will distort the manifold building process and result in geometry deformation across instance manifolds (different combinations of identity, expression and illumination) [1]. Though various approaches [17,5,6] have been proposed to partially solve this problem, they either focus on single pose-unrelated factor like identity while ignoring the others [17], or cannot handle multiple pose-unrelated factors in a uniform way [6]. Second, former methods tries to learn the mapping from the high-dimensional feature space to the low-dimensional manifold embedded representation. This mapping direction would cause manifold degradation (highly folded or self-intersection) [19] when the manifold topology is complicate (in the case of 3-dimensional pose estimation). Hence, most manifold-embedding-based estimators are limited to provide only 1-dimensional yaw estimation while ignoring the pitch and roll variations. Third, the projections from the image feature space to the low-dimensional manifold are defined only on the training space [20]. The entire embedding procedure has to be repeated since they lack of the ability to depict the out-of-sample inputs in an efficient way [5].

To address the limitations of existing methods, we propose a manifold-embedding-based coarse-to-fine framework for 3-dimensional head pose estimation. This approach employs the unit circle and 3-sphere to model the uniform manifold topology on the coarse and fine layer respectively. By learning the instance-dependent nonlinear mappings from the unit circle or 3-sphere to every instance manifold (certain person with certain expression under certain illumination condition), the pose-related and -unrelated factors can be decoupled in a latent instance parametric subspace. The basic idea is that pose-unrelated factors dominate the geometry deformations across different instance manifolds. Hence, we can factorize the instance variations, which are encoded in the geometry deformations, in the instance parametric subspace.

There are several merits of our approach. First, the coarse-to-fine framework guarantees the efficient and accurate 3-dimensional continuous head pose estimation. Second, it can uniformly parameterize multiple pose-related and -unrelated factors under a uniform framework in the latent space. Third, the designed mapping direction of the manifold embedding, which is completely different from the existing methods, can effectively avoid the manifold degradation problem when 3-dimensional pose estimation is performed. Last but not least, the out-of-sample data can be effectively synthesized in the instance parametric subspace, which guarantees the generative ability of our approach.

The remainder of this paper is organized as follows. We briefly review existing head pose estimation approaches in Section 2. Section 3 elaborates the motivation and details of our approach. In Section 4, We carry out experiments in multiple databases to verify our approach and compare its performance with the state-of-the-art. Section 5 summarizes paper.

@&#BACKGROUND@&#

Head pose estimation from visual perception has been a broad and diverse field for decades. To motivate our approach, we summarize existing methods and briefly review the most representative and related works.

There exists a large amount of literatures on the topic of head pose estimation in the scope of computer vision area. Based on the type of data relied on, existing methods can be coarsely classified as 2D image-based verse 2.5D image-based. 2D image-based approaches carry out head pose estimation based on features extracted from 2D image. While 2.5D image-based approaches take advantage of the rapid development of depth/range sensing technology [21] to design head pose estimators. They rely on both standard 2D image information and reliable depth/range information.

It has been demonstrated that the additional depth/range information can effectively overcome limitations which are inherent with methods relied on only 2D images [22,23], such as illumination changes and extracting feature from texture-less face regions. However, approaches solely rely on standard 2D image attract much more attention than ones requiring additional depth/range sensing, when considering the extensive application and affordability of the 2D cameras. In the rest part of this section, we focus on the taxonomy of the 2D image-based methods. Broadly speaking, the evolutionary taxonomy of head pose estimation approaches can be outlined as following categories.
                           
                              •
                              
                                 Classification based approaches split the pose variation space into discrete intervals and apply classifiers learned in a unsupervised or supervised way to assign the pose label to the query image.


                                 Regression based approaches try to learn a linear or nonlinear mapping from the feature space to the pose variation space and use this mapping to predict pose parameters given the testing sample.


                                 Deformable model based approaches fit a flexible face shape model composed by sparse landmarks onto the object facial image and estimate head pose from the configuration of landmarks.


                                 Manifold embedding based approaches seek low-dimensional manifolds of pose variation embedded in the high-dimensional feature space and pose can be estimated by embedding a new image into the learned manifolds.

We follow the taxonomy and briefly review representative methods in each category. We focus on more recent approaches to provide an overview of the up-to-date status on the head pose estimation topics.


                        
                           Classification based approaches
                         in the simplest form are template matching methods. These methods compare testing image with all exemplars in the training set under defined distance metrics, and assigned pose label to the required image with the label of the most similar template. Other supervised learning based tools such as Support Vector Machines (SVMs) [24] and Kernel Linear Discriminant Analysis (KLDA) [25] are demonstrated to estimate head pose from single image. These methods split training images into several groups by specifying discrete pose labels, and train multiple binary classifiers for all groups under one-to-all framework [8,9]. The pose label of testing image can be acquired by the classifiers with the most confidence.

There are many disadvantages with classification based approaches: first, they can only provide coarse head pose estimation results due to the discrete labeled groups in the training set; second, they can only handle 1-dimensional yaw variations and extensions to 3-dimensional pose changes including pitch, yaw and roll would encounter great obstacle; third, they suffer from over-fitting problems which result in sensitiveness to pose-unrelated variations like facial expression and illumination changes.


                        
                           Regression based approaches
                         use the mapping learned from the image feature space to the pose space to recover the pose in the testing image. Regressors such as Support Vector Regressors (SVRs) [11] and Gaussian Processes Regression (GPR) [12] can be employed to construct the pose estimator. Framework like Artificial Neural Networks (ANN) [25] is also shown the capability to recognize pose orientation from images [10]. More recently, Huang et al. [7] use Supervised Local Subspace Learning (SL2) to learn a local linear model which shows prominent potential to provide accurate head pose estimation when the training data is pretty sparse and non-uniformly sampled. Haj et al. in [13] apply Partial Least Squares (PLS) regression to alleviate the negative effect on pose estimation when there exists misalignment of head location in the image.

Regression based methods are characterized with fast prediction speed and capability to output continuous pose angles, thus they attract lots of research interest in previous literatures. However, they also suffer from obvious drawbacks. There is no guarantee that the learned mapping under regression framework can properly reflect the connection between the image feature and the pose label, since pose-unrelated factors would also affect the mapping process. Another weakness of regression based methods is they are highly sensitivity to noise, which limits their capability to handle the extensive variations among pose-related and -unrelated factors.


                        
                           Deformable model based approaches
                         take advantage of different types of flexible facial model to refer head pose. Usually the facial model is constituted by both the shape model (specific facial points and their 2D coordinates in an image) and the appearance model (2D texture of corresponding facial points) [26]. The specific facial points, such as the corners of eyes, mouth and nose tip, are notated as landmarks. By fitting landmarks to the correct responding positions in a facial image, the head pose can be estimated from the geometric shape formatted by the landmarks. For instance, Active Shape Model (ASM) [27] find the primary modes of shape variation among all the training faces and use the largest principal component to recover the facial shape of the testing face. Then the pose parameters can be estimated by applying Bayesian inference [14]. Saragih et al. [15] employ Constrained Local Model (CLM) to estimate global (scale, pose and face location) and local (identity and expression) parameters simultaneously. Mean-Shift algorithm is applied on the response map of each landmark to find the local optimal under the global constraint. Zhu et al. [16] employ tree structured deformable part model [28] to locate facial landmarks and use view-based models to describe the topological changes caused by head pose variations. The main challenge of these approaches is how to effectively incorporate domain knowledge into traditional models [29], and how to efficiently solve them [30].

There are multiple limitations for deformable model based methods when regarding pose estimation task. First, the pose prediction accuracy of flexible model based methods extremely relies on the precision of the landmark locations, in other word, they are quite sensitive to the location error/noise; second, pose-unrelated factors such as identity and facial expression will affect the aligned shape, which contaminates the positional information of landmarks for predicting pose; third, these methods need to fit all the landmarks before inferring the head pose, while solving the optimization problem for landmarks localization is fairly time-consuming regarding the efficiency.


                        
                           Manifold embedding based approaches
                         try to acquire a low-dimensional manifold where data points with consecutive poses lies on. Either linear embedding techniques like Principal Component Analysis (PCA) and Linear Discriminant Analysis (LDA) [25] or non-linear embedding methods such as Isomap [17,31], Locally Linear Embedding (LLE) [5] and Local Embedded Analysis (LEA) [18] can be employed to find the low-dimensional space. Head pose estimation can be carried out in this space using classification [17,18] or regression [5] strategies.

The key challenge of manifold embedding based approaches is how to ensure pose variations can dominate over pose-unrelated factors during the embedding process. To address this problem, Hu et al. [17] apply Isomap embedding to model each individual manifold as an ellipse. The ellipses from different individuals can be normalized to a unified embedding by carrying out an ellipse fitting process. However, this approach is designed based on the classification framework and it does not utilize the pose label information which are available in the training set in a supervised way. Balasubramanian et al. [5] propose the biased manifold embedding method for person-independent head pose estimation. They define a distance metric based on pose angles. This metric is applied to bias the distance between data points in high-dimensional feature space. And the effect of identity variations can be eliminated by removing pose-unrelated dimensions. However, these approaches mainly focus on identity variations and they still have the tendency to build manifolds for other pose-unrelated factors as well as pose. Besides, they have limited representation ability for out-of-sample data that results from the descriptive model used. Moreover, they can only handle at most 2-dimensional pose estimation due to the manifold degradation issue. It is not a trivial task to extend them to 3-dimensional pose estimation.

This section describes our approach in details. First, we discuss the motivation of the coarse-to-fine pose estimation framework. Then we propose the instance parametric subspace and the uniform geometry representation. The instance parameterization can be achieved by conducting instance-dependent mappings and pose-related/unrelated factorization in the subspace. Finally, an efficient pose referring solution is provided to estimate head pose in the testing image. An overview of our approach is illustrated in Fig. 2
                     .

The appearance of human head is almost symmetrical with respect to the yaw angle variations, for example the left profile is almost the same as the right profile. Taking advantage of this fact, we propose a cascade pose estimation approach in a coarse-to-fine framework: 1-dimensional yaw estimator on the coarse layer and 3-dimensional pose estimator on the fine layer.

The single estimator on the coarse layer only needs to provide a fast and rough prediction of the yaw angle. Based on the coarse prediction, the 1-dimensional yaw variation space can be divided into multiple discrete intervals. Each 3-dimensional pose estimator on the fine layer is responsible for one interval. Once the testing image is categorized into one of the intervals based on the coarse estimation of yaw angle, the corresponding 3-dimensional pose estimator in the fine layer is activated to estimate pitch, yaw and roll simultaneously.

This coarse-to-fine framework can reduce the trained model size of the estimators on the fine layer, since it only needs to train pose estimators for left profile. A testing image with right profile can be processed by left profile pose estimators with flip operation. Besides, splitting the yaw variation space into multiple intervals can shrink the solution space for the 3-dimensional pose estimator to find the true pose, which can accelerate the prediction speed in the testing phase. Moreover, a reduced searching space can make it easier to find the global optimum when inference method, which is prone to local optimal, is employed.

Suppose there are K instances (a certain combination of pose-unrelated factors, i.e. identity, expression, illumination and etc.) in the training data set. For the k-th instance 
                           
                              
                                 
                                    I
                                 
                                 
                                    k
                                 
                              
                           
                        , we have a sequence of images 
                           
                              
                                 
                                    Y
                                 
                                 
                                    k
                                 
                              
                              =
                              {
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    D
                                 
                              
                              ,
                              i
                              =
                              1
                              ,
                              …
                              ,
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                              }
                           
                        , and their corresponding head pose angles 
                           
                              
                                 
                                    Θ
                                 
                                 
                                    k
                                 
                              
                              =
                              {
                              
                                 
                                    θ
                                 
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    d
                                 
                              
                              ,
                              i
                              =
                              1
                              ,
                              …
                              ,
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                              }
                           
                        , where 
                           
                              
                                 
                                    R
                                 
                                 
                                    D
                                 
                              
                           
                         and 
                           
                              
                                 
                                    R
                                 
                                 
                                    d
                                 
                              
                           
                         are D-dimensional image feature space and d-dimensional pose variation space respectively (e.g. 
                           
                              d
                              =
                              1
                           
                         represents the 1-dimensional yaw angle, 
                           
                              d
                              =
                              3
                           
                         represents the 3-dimensional pose angle including yaw, pitch and roll). Notice that image sequences for different instances do not need to have the same length. These high-dimensional multiple views are expected to lie on a low-dimensional manifold 
                           
                              
                                 
                                    M
                                 
                                 
                                    k
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    e
                                 
                              
                           
                        .

The allure of manifold embedding techniques is that the pattern of head movement can be preserved during the dimension reduction in the high-dimensional feature space. However, as we discussed in Section 2, the most significant drawback of existing manifold embedding based methods is that they have the tendency to build manifolds for pose-unrelated factors as well as pose [1,5]. For example, consider the cases that two images of different persons in the same pose and two images of the same person in slightly different poses. The fist pair of images would have a larger metric distance than the second pair in the embedding space since the identity factor can dominate over pose when the pose variation is small.

To address this problem, we resort to Homeomorphic Manifold Analysis (HMA) [32,19] to formulate our framework. Research in [1,17,5] indicates that manifolds arise from head pose variation should have similar geometry in viewing space. Pose-unrelated factors, such as identity, facial expression, illumination and other latent variables, will result in geometric deformation across instance manifolds. The key idea of our approach is that different instance manifolds can be viewed as points distributed in a latent 
                           instance parametric space
                        , where the spacial distribution of a point (represents a manifold) is dominated by the manifold deformation.

Considering the fact that all the instance manifolds are topologically equivalent (with similar geometry in the viewing space), we can define a uniform geometry representation 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    e
                                 
                              
                           
                         in the viewing space, which is homeomorphic to each instance manifold 
                           
                              
                                 
                                    M
                                 
                                 
                                    k
                                 
                              
                           
                        . In other words, each 
                           
                              
                                 
                                    M
                                 
                                 
                                    k
                                 
                              
                           
                         is a deformed instance of 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                           
                        . To construct the instance parametric space, we can learn an instance-dependent nonlinear mapping from 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                           
                         to 
                           
                              
                                 
                                    M
                                 
                                 
                                    k
                                 
                              
                           
                        . The mapping coefficient 
                           
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                           
                         encodes all the pose-unrelated factors of the k-th instance. We get K mapping coefficient matrices 
                           
                              {
                              
                                 
                                    C
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    C
                                 
                                 
                                    K
                                 
                              
                              }
                           
                         for all the K instances in the training data. By arranging them as a tensor and carrying out tensor decomposition along the instance dimension, we can find K instance bases to span the instance parametric space.

There are several benefits to introduce the instance parametric space. First, we can handle multiple pose-unrelated factors simultaneously under a uniform framework since all instance factors are factorized in the space. Second, the space guarantees the generative ability of our approach. We can directly synthesize new instances to approximate the out-of-sample testing data without repeating the whole embedding process. Moreover, we can use L instead of K (
                           
                              L
                              <
                              K
                           
                        ) instance bases to span a more compact subspace, which can significantly improve the computational efficiency in terms of both time and space without sacrificing the prediction accuracy.

The geometry of 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                           
                         is important for manifold embedding since it provides prior information to model the topology of the instance manifold 
                           
                              
                                 
                                    M
                                 
                                 
                                    k
                                 
                              
                           
                        . It should faithfully represent the structure of the head motion as well as simple enough for fast computing.

Let 
                           
                              θ
                              =
                              
                                 
                                    (
                                    α
                                    ,
                                    β
                                    ,
                                    γ
                                    )
                                 
                                 
                                    T
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                           
                         denotes the 3-dimensional head pose, where 
                           
                              α
                              ,
                              β
                              ,
                              γ
                           
                         refer pitch, yaw and roll respectively. To find a faithful structure of 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                           
                        , we consider the case that the head is stationary where the camera is moving around to simulate the head pose variations. The camera should moves along a circle to simulate the 1-dimensional yaw variations β. In this case, the motion trajectory of the camera is a partial viewing circle centered at the head. Similarly, when pitch variations α is involved, the motion trajectory should be upgraded to a partial viewing sphere to simulate the 2-dimensional head movement. To get the 3-dimensional pose variations, we can image that at each point on the surface of the viewing sphere, the camera has another freedom to move along a tangent partial circle to obtain the roll movement γ. The geometry of the motion trajectory is a 3-sphere embedded in 
                           
                              
                                 
                                    R
                                 
                                 
                                    4
                                 
                              
                           
                        .

Recall here we only need to preserve the topology of the instance manifold not the metrical measurement, we use a partial unit circle and a partial unit 3-sphere to model the uniform representations of the 1-dimensional (yaw) and the 3-dimensional (pitch, yaw and roll) head pose variations respectively in our coarse-to-fine framework.


                        
                           1-dimensional yaw estimator on the coarse layer
                         provides discrete yaw prediction to categorize the testing image into one of several yaw intervals. We use a half unit circle to model the uniform geometry representation for yaw varies from 
                           
                              -
                              90
                              °
                           
                         to 
                           
                              90
                              °
                           
                        . The embedding coordinates 
                           
                              x
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                           
                         on the unit circle is:
                           
                              (1)
                              
                                 x
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   cos
                                                   β
                                                
                                             
                                             
                                                
                                                   sin
                                                   β
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 where
                                 
                                 β
                                 ∈
                                 
                                    
                                       
                                          -
                                          
                                             
                                                π
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                π
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The output of the 1-dimensional yaw estimator on the coarse layer is a discrete label, which indicates the corresponding interval. Since most head movement occurs within the yaw interval from 
                           
                              -
                              45
                              °
                           
                         to 
                           
                              45
                              °
                           
                         and face appearance is symmetrical regarding yaw variations, we split the yaw range into 4 intervals, 
                           
                              [
                              -
                              90
                              °
                              ,
                              -
                              45
                              °
                              )
                              ,
                              [
                              -
                              45
                              °
                              ,
                              0
                              °
                              ]
                              ,
                              (
                              0
                              °
                              ,
                              45
                              °
                              ]
                           
                         and 
                           
                              (
                              45
                              °
                              ,
                              90
                              °
                              ]
                           
                        , to best balance the trade off between the estimation accuracy and the computational complexity.


                        
                           3-dimensional pose estimators on the fine layer
                         output continuous estimation result for pitch, yaw and roll simultaneously. There should be four estimators on the fine layer regarding four discrete intervals. However, considering the fact that the left and right head profiles are symmetric, we only need two estimators on the fine layer: one for 
                           
                              β
                              ∈
                              [
                              -
                              90
                              °
                              ,
                              -
                              45
                              °
                              )
                           
                         and the other for 
                           
                              β
                              ∈
                              [
                              -
                              45
                              °
                              ,
                              0
                              °
                              ]
                           
                        . Testing image with 
                           
                              β
                              ∈
                              (
                              0
                              °
                              ,
                              90
                              °
                              ]
                           
                         can be horizontally flipped to use the fine estimators for pose prediction. We use a partial 3-sphere to model the uniform geometry representation. The embedding coordinates 
                           
                              x
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    4
                                 
                              
                           
                         on the partial 3-sphere is:
                           
                              (2)
                              
                                 x
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   cos
                                                   α
                                                
                                             
                                             
                                                
                                                   sin
                                                   α
                                                   
                                                   cos
                                                   β
                                                
                                             
                                             
                                                
                                                   sin
                                                   α
                                                   
                                                   sin
                                                   β
                                                   cos
                                                   γ
                                                
                                             
                                             
                                                
                                                   sin
                                                   α
                                                   
                                                   sin
                                                   β
                                                   sin
                                                   γ
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              β
                              ∈
                              
                                 
                                    
                                       -
                                       
                                          
                                             π
                                          
                                          
                                             4
                                          
                                       
                                       ,
                                       0
                                    
                                 
                              
                           
                         or 
                           
                              
                                 
                                    
                                       -
                                       
                                          
                                             π
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       -
                                       
                                          
                                             π
                                          
                                          
                                             4
                                          
                                       
                                    
                                 
                              
                              ,
                              α
                              ∈
                              
                                 
                                    
                                       -
                                       
                                          
                                             π
                                          
                                          
                                             3
                                          
                                       
                                       ,
                                       
                                          
                                             π
                                          
                                          
                                             3
                                          
                                       
                                    
                                 
                              
                           
                         and 
                           
                              γ
                              ∈
                              
                                 
                                    
                                       -
                                       
                                          
                                             π
                                          
                                          
                                             3
                                          
                                       
                                       ,
                                       
                                          
                                             π
                                          
                                          
                                             3
                                          
                                       
                                    
                                 
                              
                           
                        .

During the testing, we first conduct the 1-dimensional yaw estimation to narrow the solution space. Then the corresponding fine estimator is activated to provide a continuous 3-dimensional pose estimation.

In former manifold embedding based approach, the dimension reduction is conducted by mapping from the high-dimensional feature space to the low-dimensional manifold embedding space. However, this strategy suffers from manifold degradation issue when dealing with complicate manifold topology. In the case of 3-dimensional pose estimation, there is no guarantee that the embedding procedure can obtain the faithful 3-sphere structure since the embedded manifold would be highly folded or self-intersected. To overcome this problem, we follow the HMA and learn the mapping in the reverse direction [33]: from the low-dimensional uniform geometry representation to the high-dimensional feature space. See Fig. 2 for an illustration. This completely different mapping direction has significant advantages: it can not only avoid the manifold degradation problem but also greatly simplified the instance factorization in instance parametric space since the uniform manifold topology is preserved.

Giving the fact that each of 
                           
                              {
                              
                                 
                                    M
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    M
                                 
                                 
                                    K
                                 
                              
                              }
                           
                         is homeomorphic to 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                           
                         and the geometry deformation from 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                           
                         to 
                           
                              
                                 
                                    M
                                 
                                 
                                    k
                                 
                              
                           
                         is resulted from pose-unrelated variations, we can obtain the factorization by learning a set of nonlinear mapping from 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                           
                         to 
                           
                              
                                 
                                    M
                                 
                                 
                                    k
                                 
                              
                           
                        . Let us consider the k-th instance with input image sequence 
                           
                              
                                 
                                    Y
                                 
                                 
                                    k
                                 
                              
                           
                         and the corresponding head pose 
                           
                              
                                 
                                    Θ
                                 
                                 
                                    k
                                 
                              
                           
                        . The embedding coordinates for the image sequence on the uniform geometric representation are 
                           
                              
                                 
                                    X
                                 
                                 
                                    k
                                 
                              
                              =
                              {
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    e
                                 
                              
                              ,
                              i
                              =
                              1
                              ,
                              …
                              ,
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                              }
                           
                         following the definitions in (1) and (2). We select m mapping centers 
                           
                              {
                              
                                 
                                    z
                                 
                                 
                                    j
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    e
                                 
                              
                              ,
                              j
                              =
                              1
                              ,
                              …
                              ,
                              M
                              }
                           
                         evenly spaced along 
                           
                              
                                 
                                    M
                                 
                                 
                                    ∼
                                 
                              
                           
                        . A nonlinear mapping function 
                           
                              [
                              s
                              :
                              
                                 
                                    R
                                 
                                 
                                    e
                                 
                              
                              →
                              R
                              ]
                           
                         can be learned by using Radial Basis Function (RBF) interpolation [34]. This function maps from e dimensional embedding space to 1 of the D dimensional image feature space:
                           
                              (3)
                              
                                 s
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          M
                                       
                                    
                                 
                                 
                                    
                                       λ
                                    
                                    
                                       j
                                    
                                 
                                 ϕ
                                 (
                                 |
                                 |
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       z
                                    
                                    
                                       j
                                    
                                 
                                 |
                                 |
                                 )
                                 +
                                 P
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       e
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              |
                              |
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    z
                                 
                                 
                                    j
                                 
                              
                              |
                              |
                           
                         is the Euclidean distance defined in the manifold embedding space, 
                           
                              
                                 
                                    λ
                                 
                                 
                                    j
                                 
                              
                           
                         are coefficients, ϕ is the RBF with popular choices including:
                           
                              
                                 ϕ
                                 (
                                 r
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   biharmonic
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         -
                                                         cr
                                                      
                                                   
                                                
                                                
                                                   Gaussian
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               r
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         )
                                                      
                                                      
                                                         1
                                                         /
                                                         2
                                                      
                                                   
                                                
                                                
                                                   multiquadric
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        The linear polynomial for positive semi-definite kernels is needed to span the null space for regularization and defined as:
                           
                              (4)
                              
                                 P
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       ω
                                    
                                    
                                       0
                                    
                                 
                                 +
                                 
                                    
                                       ω
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 .
                              
                           
                        
                     

The full mapping 
                           
                              [
                              S
                              :
                              
                                 
                                    R
                                 
                                 
                                    e
                                 
                              
                              →
                              
                                 
                                    R
                                 
                                 
                                    D
                                 
                              
                              ]
                           
                         can be organized as:
                           
                              (5)
                              
                                 S
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       C
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ψ
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       e
                                    
                                 
                                 ,
                              
                           
                        where the mapping coefficient matrix 
                           
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                           
                         and the nonlinear kernel mapping 
                           
                              ψ
                              (
                              x
                              )
                           
                         have the following form:
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         11
                                                      
                                                   
                                                   ⋯
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         1
                                                         m
                                                      
                                                   
                                                   
                                                   
                                                      
                                                         ω
                                                      
                                                      
                                                         10
                                                      
                                                   
                                                   
                                                   
                                                      
                                                         ω
                                                      
                                                      
                                                         11
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   ⋮
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         D
                                                         1
                                                      
                                                   
                                                   ⋯
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         Dm
                                                      
                                                   
                                                   
                                                   
                                                      
                                                         ω
                                                      
                                                      
                                                         D
                                                         0
                                                      
                                                   
                                                   
                                                   
                                                      
                                                         ω
                                                      
                                                      
                                                         D
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                 and
                                 
                                 ψ
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ϕ
                                                   (
                                                   |
                                                   x
                                                   -
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   |
                                                   )
                                                
                                             
                                             
                                                
                                                   ⋮
                                                
                                             
                                             
                                                
                                                   ϕ
                                                   (
                                                   |
                                                   x
                                                   -
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         m
                                                      
                                                   
                                                   |
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        The dimension of 
                           
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                           
                         is 
                           
                              D
                              ×
                              (
                              M
                              +
                              1
                              +
                              e
                              )
                           
                        . All of the 
                           
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                           
                         images in the sequence of the k-th instance should satisfy the mapping 
                           
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                           
                        . To ensure the orthogonality of the RBF interpolation, we add the constraint:
                           
                              (6)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          M
                                       
                                    
                                 
                                 
                                    
                                       λ
                                    
                                    
                                       j
                                    
                                 
                                 Q
                                 (
                                 
                                    
                                       z
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 =
                                 0
                                 ,
                              
                           
                        where 
                           
                              Q
                              (
                              
                                 
                                    z
                                 
                                 
                                    j
                                 
                              
                              )
                              =
                              
                                 
                                    (
                                    1
                                    ,
                                    
                                       
                                          z
                                       
                                       
                                          j
                                       
                                    
                                    )
                                 
                                 
                                    ⊤
                                 
                              
                           
                        . By arranging (4)–(6) together, we can obtain a linear system for the k-th instance:
                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   Φ
                                                
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         ⊤
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   Q
                                                
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       ⊤
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where Φ is a 
                           
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                              ×
                              M
                           
                         matrix:
                           
                              
                                 Φ
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ϕ
                                                   (
                                                   |
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   |
                                                   )
                                                
                                                
                                                   ⋯
                                                
                                                
                                                   ϕ
                                                   (
                                                   |
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         M
                                                      
                                                   
                                                   |
                                                   )
                                                
                                             
                                             
                                                
                                                   ⋮
                                                
                                                
                                                   ⋱
                                                
                                                
                                                   ⋮
                                                
                                             
                                             
                                                
                                                   ϕ
                                                   (
                                                   |
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         
                                                            
                                                               N
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   |
                                                   )
                                                
                                                
                                                   ⋯
                                                
                                                
                                                   ϕ
                                                   (
                                                   |
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         
                                                            
                                                               N
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         M
                                                      
                                                   
                                                   |
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        Block P has the dimensions of 
                           
                              (
                              1
                              +
                              e
                              )
                              ×
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                           
                         with the i-th column is 
                           
                              
                                 
                                    (
                                    1
                                    
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                       
                                          ⊤
                                       
                                    
                                    )
                                 
                                 
                                    ⊤
                                 
                              
                           
                        , while Q is a 
                           
                              (
                              1
                              +
                              e
                              )
                              ×
                              M
                           
                         matrix with the j-th column is 
                           
                              
                                 
                                    (
                                    1
                                    
                                    
                                       
                                          z
                                       
                                       
                                          j
                                       
                                       
                                          ⊤
                                       
                                    
                                    )
                                 
                                 
                                    ⊤
                                 
                              
                           
                        . 
                           
                              
                                 
                                    Y
                                 
                                 
                                    k
                                 
                              
                           
                         is the 
                           
                              
                                 
                                    N
                                 
                                 
                                    k
                                 
                              
                              ×
                              D
                           
                         dimensional image feature matrix, which is arranged as 
                           
                              
                                 
                                    (
                                    
                                       
                                          y
                                       
                                       
                                          1
                                       
                                       
                                          ⊤
                                       
                                    
                                    ⋯
                                    
                                       
                                          y
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          ⊤
                                       
                                    
                                    )
                                 
                                 
                                    ⊤
                                 
                              
                           
                         with 
                           
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                           
                         is the D dimensional image feature for the i-th image in the k-th instance sequence. The linear system in (7) has a closed-form solution:
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       ⊤
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   Φ
                                                
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         ⊤
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   Q
                                                
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                                 ⧹
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The instance nonlinear mapping can effectively avoid the manifold degradation issue. The faithful manifold geometry representation can be expected even when the topology is complicate. Moreover, the nonlinear mapping 
                           
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                           
                         is easy to train, which guarantees the instance parametric space can be constructed in a very efficient way.

Instance manifolds are distributed in the instance parametric space while the mapping coefficients encode manifold deformations from the uniform geometry representation to every instance manifold. We can learn an array of corresponding mapping coefficients 
                           
                              {
                              
                                 
                                    C
                                 
                                 
                                    1
                                 
                              
                              ⋯
                              
                                 
                                    C
                                 
                                 
                                    K
                                 
                              
                              }
                           
                         for all of the K instances in the training data. It is worth emphasizing that this coefficients array encodes both within-manifold pose variations (pose-related) and across-manifold instance variations (pose-unrelated).

The array of coefficients can be arranged as a tensor 
                           
                              C
                           
                         with the dimensions of 
                           
                              D
                              ×
                              (
                              M
                              +
                              1
                              +
                              e
                              )
                              ×
                              K
                           
                        . Following the tensor decomposition in [35], the pose-related and -unrelated factors can be separated by carrying out tensor decomposition:
                           
                              (9)
                              
                                 C
                                 =
                                 A
                                 
                                    
                                       ×
                                    
                                    
                                       3
                                    
                                 
                                 I
                                 ,
                              
                           
                        where 
                           
                              A
                           
                         is a 
                           
                              D
                              ×
                              (
                              M
                              +
                              1
                              +
                              e
                              )
                              ×
                              J
                           
                         tensor containing all the bases of the RBF space, which can be used to refer pose. And 
                           
                              I
                              =
                              (
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                              ⋯
                              
                                 
                                    I
                                 
                                 
                                    K
                                 
                              
                              )
                           
                         is a 
                           
                              J
                              ×
                              K
                           
                         matrix containing all the bases that span the instance parametric space.

We flatten the tensor 
                           
                              C
                           
                         to matrix 
                           
                              C
                           
                         with 
                           
                              D
                              (
                              M
                              +
                              1
                              +
                              e
                              )
                           
                         rows and K columns by reshaping each 
                           
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                           
                         into a 
                           
                              D
                              (
                              M
                              +
                              1
                              +
                              e
                              )
                              ×
                              1
                           
                         vector. Singular Value Decomposition (SVD) can be carried out to decouple row bases and column bases:
                           
                              (10)
                              
                                 C
                                 =
                                 
                                    
                                       (
                                       US
                                       )
                                    
                                    
                                       D
                                       (
                                       M
                                       +
                                       1
                                       +
                                       e
                                       )
                                       ×
                                       K
                                    
                                 
                                 
                                    
                                       V
                                    
                                    
                                       K
                                       ×
                                       K
                                    
                                    
                                       ⊤
                                    
                                 
                                 .
                              
                           
                        The columns of 
                           
                              US
                           
                         are bases of pose variation. The columns of 
                           
                              
                                 
                                    V
                                 
                                 
                                    T
                                 
                              
                              =
                              {
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    I
                                 
                                 
                                    K
                                 
                              
                              }
                           
                         are bases of instance parametric space where 
                           
                              
                                 
                                    I
                                 
                                 
                                    k
                                 
                              
                           
                         is the k-th instance basis.

We can expect a full instance parametric space by using 
                           
                              {
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    I
                                 
                                 
                                    K
                                 
                              
                              }
                           
                        . A new testing instance can be approximated by a linear combination of all the bases. However, it is not necessary to employ all of the K bases to achieve the approximation. Ignoring instance bases with trivial eigenvalues will have little effect on generating new instance parameterization since most instance variation directions have been preserved among the bases with significant eigenvalues. From the SVD decomposition, we have 
                           
                              S
                              =
                              diag
                              (
                              
                                 
                                    σ
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    σ
                                 
                                 
                                    K
                                 
                              
                              )
                           
                         containing K eigenvalues 
                           
                              
                                 
                                    σ
                                 
                                 
                                    1
                                 
                              
                              ⩾
                              ⋯
                              ⩾
                              
                                 
                                    σ
                                 
                                 
                                    K
                                 
                              
                           
                        . The object is to find a subset 
                           
                              {
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    I
                                 
                                 
                                    L
                                 
                              
                              }
                              ⊂
                              {
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    I
                                 
                                 
                                    K
                                 
                              
                              }
                           
                         satisfying:
                           
                              (11)
                              
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             L
                                          
                                       
                                       
                                          
                                             σ
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             K
                                          
                                       
                                       
                                          
                                             σ
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                                 >
                                 δ
                                 ,
                              
                           
                        where δ is set to 
                           
                              0.6
                              ∼
                              0.7
                           
                         to best balance the trade-off between the computational efficiency and the estimation accuracy.


                        
                           
                              {
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    I
                                 
                                 
                                    L
                                 
                              
                              }
                           
                         span the 
                           instance parametric subspace
                        . The size of the offline trained model is greatly compacted to reduce both the space requirement and the computational complexity, which can significantly boost the online speed.

Given a single testing input 
                           
                              y
                           
                        , suppose the instance parameterization in the instant parametric subspace is I and the embedding coordinates of pose is 
                           
                              x
                           
                        . From (5) and (9), the estimation of 
                           
                              y
                           
                         is:
                           
                              (12)
                              
                                 
                                    
                                       y
                                    
                                    
                                       ˆ
                                    
                                 
                                 =
                                 S
                                 (
                                 I
                                 ,
                                 x
                                 )
                                 =
                                 A
                                 
                                    
                                       ×
                                    
                                    
                                       3
                                    
                                 
                                 I
                                 
                                    
                                       ×
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ψ
                                                   (
                                                   x
                                                   )
                                                
                                             
                                             
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   x
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        The head pose estimation problem is equivalent to find both 
                           
                              
                                 
                                    I
                                 
                                 
                                    ∗
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    ∗
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    e
                                 
                              
                           
                         to minimize the loss function:
                           
                              (13)
                              
                                 J
                                 =
                                 
                                    
                                       
                                          
                                             y
                                             -
                                             A
                                             
                                                
                                                   ×
                                                
                                                
                                                   3
                                                
                                             
                                             I
                                             
                                                
                                                   ×
                                                
                                                
                                                   2
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                               (
                                                               x
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               1
                                                            
                                                         
                                                         
                                                            
                                                               x
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

We employ an two-step alternative iterative optimization procedure to find 
                           
                              
                                 
                                    I
                                 
                                 
                                    ∗
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    ∗
                                 
                              
                           
                         that minimize the J. In the first step, we linearly combine instance bases 
                           
                              {
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    I
                                 
                                 
                                    L
                                 
                              
                              }
                           
                         with coefficients 
                           
                              {
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    w
                                 
                                 
                                    L
                                 
                              
                              }
                           
                         to generate the new instance 
                           
                              
                                 
                                    I
                                 
                                 
                                    ∗
                                 
                              
                           
                        . 
                           
                              
                                 
                                    w
                                 
                                 
                                    l
                                 
                              
                           
                         is re-weighted based on the reconstruction error:
                           
                              (14)
                              
                                 
                                    
                                       w
                                    
                                    
                                       l
                                    
                                 
                                 =
                                 exp
                                 
                                    
                                       
                                          
                                             
                                                ‖
                                                y
                                                -
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                                
                                                   
                                                      ‖
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                2
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 l
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 L
                                 .
                              
                           
                        
                     

In the next step we fix 
                           
                              
                                 
                                    I
                                 
                                 
                                    ∗
                                 
                              
                           
                         and search along 
                           
                              
                                 
                                    M
                                 
                                 
                                    ̃
                                 
                              
                           
                         to find 
                           
                              
                                 
                                    x
                                 
                                 
                                    ∗
                                 
                              
                           
                         that minimize the reconstruction error given 
                           
                              
                                 
                                    I
                                 
                                 
                                    ∗
                                 
                              
                           
                         fixed. The alternative updating of 
                           
                              
                                 
                                    I
                                 
                                 
                                    ∗
                                 
                              
                           
                         and 
                           
                              
                                 
                                    x
                                 
                                 
                                    ∗
                                 
                              
                           
                         continues until convergence or maximal iteration times reached. Algorithm 1 show details of the pose inference process.
                           Algorithm 1
                           Pose Refering 
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                1: 
                                                   
                                                      Uniformly
                                                      
                                                      or
                                                      
                                                      randomly
                                                      
                                                      initialize
                                                      
                                                      w
                                                      =
                                                      (
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      ⋯
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            L
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                2: 
                                                   
                                                      ct
                                                      ←
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                3: repeat
                                             
                                          
                                          
                                             
                                                
                                                4: 
                                                
                                                   
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                      ←
                                                      w
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                5: 
                                                
                                                   
                                                      
                                                         
                                                            I
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      ←
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            l
                                                            =
                                                            1
                                                         
                                                         
                                                            L
                                                         
                                                      
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                      ·
                                                      
                                                         
                                                            I
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                6: 
                                                
                                                   
                                                      
                                                         
                                                            C
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      ←
                                                      US
                                                      
                                                         
                                                            
                                                               
                                                                  I
                                                               
                                                               
                                                                  ∗
                                                               
                                                            
                                                         
                                                         
                                                            ⊤
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                7: 
                                                
                                                   
                                                      Reshape
                                                      
                                                      
                                                         
                                                            C
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      
                                                      into
                                                      
                                                      D
                                                      ×
                                                      (
                                                      M
                                                      +
                                                      1
                                                      +
                                                      e
                                                      )
                                                      
                                                      matrix
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                8: 
                                                
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            ˆ
                                                         
                                                      
                                                      ←
                                                      
                                                         
                                                            C
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        ψ
                                                                        (
                                                                        x
                                                                        )
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        1
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                9: 
                                                
                                                   
                                                      Search
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                      
                                                      along
                                                      
                                                      
                                                         
                                                            M
                                                         
                                                         
                                                            ̃
                                                         
                                                      
                                                      
                                                      to
                                                      
                                                      minimize
                                                      
                                                      ‖
                                                      y
                                                      -
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            ˆ
                                                         
                                                      
                                                      
                                                         
                                                            ‖
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             10: 
                                                for 
                                                
                                                   
                                                      l
                                                      ←
                                                      1
                                                      →
                                                      L
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             11: 
                                                
                                                   
                                                      error
                                                      ←
                                                      ‖
                                                      y
                                                      -
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            ˆ
                                                         
                                                      
                                                      
                                                         
                                                            ‖
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             12: 
                                                
                                                   
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                      ←
                                                      exp
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     -
                                                                     error
                                                                  
                                                                  
                                                                     2
                                                                     
                                                                        
                                                                           σ
                                                                        
                                                                        
                                                                           2
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             13: 
                                                
                                                   
                                                      ct
                                                      ←
                                                      ct
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             14: 
                                                end for
                                             
                                          
                                          
                                             15: 
                                                
                                                   
                                                      w
                                                      =
                                                      (
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      ⋯
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            L
                                                         
                                                      
                                                      )
                                                      /
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            l
                                                            =
                                                            1
                                                         
                                                         
                                                            L
                                                         
                                                      
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             16: until 
                                                
                                                   
                                                      ‖
                                                      w
                                                      -
                                                      
                                                         
                                                            w
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                      ‖
                                                      <
                                                      ∊
                                                   
                                                 
                                                or 
                                                
                                                   
                                                      ct
                                                      >
                                                      max
                                                      _
                                                      iter
                                                   
                                                
                                             
                                          
                                          
                                             17: return 
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

@&#EXPERIMENTS@&#

In this section, we carry out a series of experiments to demonstrate the validity of our approach and evaluate its performance. Several state-of-the-art approaches are compared with our approach on both experimental and faces in-the-wild databases.

Most pubic face databases come without accurate pose annotations due to the difficulty of manual or automatic pose labeling. Three widely used databases with pose annotations are used in our experiments:
                           
                              •
                              
                                 
                                    CMU-MultiPIE database
                                  
                                 [36] contains head images of 336 subjects (identity) illuminated by 15 light directions under 6 expressions. The yaw angles vary from 
                                    
                                       -
                                       90
                                       °
                                    
                                  (left profile) to 
                                    
                                       90
                                       °
                                    
                                  (right profile) spaced by 
                                    
                                       15
                                       °
                                    
                                 , so there are 13 images in the sequence for each instance.


                                 
                                    BU-4DFE database
                                  
                                 [37] has 100 subjects and each subject performs 6 expressions in front of the 3D face scanner. We render the 3D face model to synthesize head images under different poses. The yaw angle variations are from 
                                    
                                       -
                                       90
                                       °
                                    
                                  to 
                                    
                                       90
                                       °
                                    
                                  while the pitch angles vary from 
                                    
                                       -
                                       30
                                       °
                                    
                                  to 
                                    
                                       30
                                       °
                                    
                                  and the roll vary from 
                                    
                                       -
                                       30
                                       °
                                    
                                  (left bent) to 
                                    
                                       30
                                       °
                                    
                                  (right bent). 
                                    
                                       15
                                       °
                                    
                                  is set as the interval for all the three pose dimensions.


                                 
                                    Annotated Face In-the-wild database
                                  (
                                    AFW
                                 ) [16] collects 205 images with 468 faces (multiple faces in a single image) from Flickr.com. There are discrete pose annotations for yaw from 
                                    
                                       -
                                       90
                                       °
                                    
                                  to 
                                    
                                       90
                                       °
                                    
                                  with 
                                    
                                       15
                                       °
                                    
                                  spacing in the database and the annotations, which can be used for quantitative evaluations.

Databases constructed under a experimental environment (CMU-MultiPIE and BU-4DFE) can provide accurate pose labels, which facilitates model training and quantitative evaluation of general performance. However, they have limited coverage of variations among identity, facial expression and illumination condition in the perspective of both reality and extensiveness compared to faces in-the-wild database (AFW). In contrast, the limitation of faces in-the-wild database is that it lacks detailed pose labels for model training and performance testing, thus we employ experimental databases to train the estimator and test it on faces in-the-wild database to demonstrate the generalization ability of our approach on the challenging real-world data. See Fig. 1 for examples of the three different databases.

All the images are pre-processed before the training and testing procedure. First, head images are cropped from the background manually (CMU-MultiPIE), or automatically according to facial landmarks annotations (BU-4DFE, AFW). All the cropped images are resized to 
                           
                              64
                              ×
                              64
                           
                         pixels for features extraction. We choose the Histogram of Oriented Gradients (HOG) features with the consideration of the well balance between computational efficiency and robust performance. Mean Absolute Error (MAE) and Standard Deviation (SD) are used as the performance measurement.

We compare our approach with approaches that are either the state-of-the-arts or the most representative ones in the categories. They are:
                           
                              •
                              
                                 
                                    Biased Manifold Embedding Estimator
                                  (
                                    BME
                                 ) [5] biases traditional Isomap, LLE and LE toward unified manifold embedding to handle pose-unrelated factor. The BME estimator can provide 1-dimensional yaw estimation with continues result.


                                 
                                    Supervised Local Subspace Learning Estimator
                                  (
                                    SL
                                 
                                 2) [7] has the potential to handle sparse and non-uniformly sampled training set for head pose estimation. It can estimate full 3-dimensional pose variations and output continuous result.


                                 
                                    Partial Least Squares Estimator
                                  (
                                    PLS
                                 ) [13] demonstrates the capability to handle misalignment that would place a negative effect on the pose estimation performance. The PLS estimator provides 2-dimensional (pitch and yaw) continues result.


                                 
                                    Tree Structured Part Model Estimator
                                  (
                                    TSPM
                                 ) [16] aligns facial feature points first by fitting a tree structured facial deformable model. Then head pose estimation is conducted bases on the locations of facial landmarks.


                                 
                                    Hybrid Estimator
                                  
                                 [25,12] use the same coarse-to-fine framework as our approach. On the coarse layer, we use the multi-class Support Vector Machine (SVM) [25] to provide discrete yaw estimation. On the fine layer, we use Gaussian Process Regression (GPR) [12] to conduct continuous 3-dimensional pose estimation in the corresponding yaw interval.

The experimental databases, CMU-MultiPIE and BU-4DFE, have accurate pose annotations. We carry out quantitative experiments to compare the performance of different methods.

For the training instances, we randomly pick out 20 subjects under 3 light directions (
                           
                              45
                              °
                              ,
                              90
                              °
                              ,
                              135
                              °
                           
                        ) and 6 facial expressions with a total of 
                           
                              20
                              ×
                              3
                              ×
                              6
                              =
                              360
                           
                         instances from CMU-MultiPIE to compose dataset (i), and 60 subjects under 6 facial expressions totally 
                           
                              60
                              ×
                              6
                              =
                              360
                           
                         instances from BU-4DFE to compose dataset (ii). For the testing instances, 10 instances are randomly picked out from CMU-MultiPIE and BU-4DFE to compose dataset (iii) and dataset (iv) respectively. There is no overlap between the training and testing instances.

Since CMU-MultiPIE and BU-4DFE are experimental data, to best evaluate the generalize ability to faces in-the-wild data of different approaches, we carry out experiments with both 
                           intra-database
                         (training and testing in the same database) and 
                           inter-database
                         (training and testing in different databases) settings.
                           
                              •
                              
                                 
                                    Experiment A
                                  uses dataset (i) from CMU-MultiPIE for training, and dataset (iii) from CMU-MultiPIE for intra-database testing.


                                 
                                    Experiment B
                                  uses dataset (ii) from BU-4DFE for training, and dataset (iv) from BU-4DFE for intra-database testing.


                                 
                                    Experiment C
                                  uses dataset (i) from CMU-MultiPIE for training, and dataset (iv) from BU-4DFE for inter-database testing.


                                 
                                    Experiment D
                                  uses dataset (ii) from BU-4DFE for training, and dataset (iii) from CMU-MultiPIE for inter-database testing.

For our approach, we use dataset (i) from CMU-MultiPIE to train the 1-dimensional yaw estimator on the coarse layer. The number of the mapping centers is empirically set to 
                           
                              m
                              =
                              5
                           
                         since only discrete angle need to be predicted. We use dataset (ii) from BU-4DFE to train the 3-dimensional pose estimators on the fine layer. The numbers of the mapping centers are set to 
                           
                              m
                              =
                              {
                              7
                              ,
                              9
                              ,
                              7
                              }
                           
                         for pitch, yaw and roll. Especially, the output of the 1-dimensional yaw estimator on the coarse layer is discretized as:
                           
                              
                                 
                                    
                                       c
                                    
                                    
                                       yaw
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                   ,
                                                
                                                
                                                   when
                                                   
                                                   θ
                                                   <
                                                   -
                                                   45
                                                   °
                                                
                                             
                                             
                                                
                                                   2
                                                   ,
                                                
                                                
                                                   when
                                                   
                                                   -
                                                   45
                                                   °
                                                   ⩽
                                                   θ
                                                   ⩽
                                                   0
                                                   °
                                                
                                             
                                             
                                                
                                                   3
                                                   ,
                                                
                                                
                                                   when
                                                   
                                                   0
                                                   °
                                                   ⩽
                                                   θ
                                                   ⩽
                                                   45
                                                   °
                                                
                                             
                                             
                                                
                                                   4
                                                   ,
                                                
                                                
                                                   when
                                                   
                                                   θ
                                                   >
                                                   45
                                                   °
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where labels 
                           
                              
                                 
                                    c
                                 
                                 
                                    yaw
                                 
                              
                              =
                              {
                              1
                              ,
                              2
                              ,
                              3
                              ,
                              4
                              }
                           
                         represent left profile, left frontal face, right frontal face and right profile respectively. We train two 3-dimensional estimators on the fine layer: one for left profile and the other for left frontal face. Our approach has the same prediction accuracy on Experiment A and D, and same prediction accuracy on Experiment B and C since the combinations of the training and testing are the same.

The comparative results in Table 1
                         shows that our method outperforms others with substantial margins in all the four different experimental settings. It needs to be emphasized that in Experiment C and D, the superiority of our approach is extremely obvious when the training and testing are performed on distinct databases, see Fig. 3
                         for a more clear comparison. This fact highlights the strong capability of our approach to handle extensive instance variations and its prominent generative ability, which is a merit of instance parameterization. Considering the fact that there are only limited number of images with annotations available during training which can not cover the huge instance variations in testing cases, the generative capability is important for robust performance on faces in-the-wild data. We will explain this point soon in next section.

The results shows that the cascade of multi-class SVM +GPR can boost the prediction accuracy compared with the case where only GPR is employed. Multi-class SVM that divides the pose variation space into more compact intervals, can significantly alleviate the ambiguity during the procedure of the non-linear mappings. However, the cascade performance is still inferior to ours due to the sensitiveness to noise and instance variations. We also notice that BMEs have very limited performance especially when the testing is performed on BU-4DFE (Experiment B and C) where 3-dimensional pose variations and multiple pose-unrelated factors exist. The manifold degradation in this case adversely affects the manifold embedding process, which highlights the significance of the proposed uniform geometry representation and mapping directions to effectively factorize pose-related and -unrelated factors.

Experiments on faces in the wild are conducted to demonstrate the performance of different approaches on real-world data. The experiments on AFW are carried out as follows. We use the annotations of facial landmarks as face detector to crop faces out. Faces that are larger than 
                           
                              64
                              ×
                              64
                           
                         are preserved for experiments. This leaves totally 205 images with 459 faces in the testing set. Since there are only 1-dimensional discrete yaw annotations available in AFW, we use dataset (i) from CMU-MultiPIE and dataset (ii) from BU-4DFE together to train pose estimators for BME, SL2, PLS, Multi-class SVM and our approach. For these estimators, the results of continuous yaw predictions are bucketed with a 
                           
                              15
                              °
                           
                         or 
                           
                              30
                              °
                           
                         spacing for performance evaluation. For TSPM, we use the reported results in [16] for both the independent model and the fully shared model.

Experimental results of different methods are compared in Table 2
                        . It shows that our method outperforms other approaches in terms of the fraction of testing images with prediction errors less then given tolerances. The uniform factorization framework and the generative ability of our approach guarantees the robust and accurate pose prediction on the challenging unconstrained data, where drastic variations among identity, facial expression, illumination and other latent factors exists. Another significant advantage of our approach is that, unlike other estimators that can provide only 1- or 2-dimensional pose estimation, our estimators can provide full 3-dimensional pose prediction by the 3-sphere manifold embedding. Examples of pose estimation of our approach on AFW are showed in Fig. 4
                        .

We carry out experiments to verify the validity of the proposed instance parametric subspace. 100 instances from CMU-MultiPIE are randomly selected to train a 1-dimensional yaw estimator. Each instance contains 13 images for a certain subject (identity) with one of the 6 facial expression under certain illumination condition. Since the estimator needs to provide continuous pose prediction, the number of mapping centers is set to 
                           
                              m
                              =
                              15
                           
                        . We increase the number of instance bases 
                           
                              {
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    I
                                 
                                 
                                    L
                                 
                              
                              }
                           
                         incrementally with the order of decreasing eigenvalues. 10 new testing instances are picked out to evaluate the performance of the pose estimation.

The relationship between the size of instance bases and prediction accuracy for the yaw estimator is showed in Fig. 5
                        . Quantitative results are given in Table 3
                        . It shows that the MAE decreases fast when adding the first a few instance bases with significant eigenvalues. The MAE converges as instance bases with trivial eigenvalues are added. At the same time, the testing time and the trained model size grows linearly as the number of instance bases increased. We use δ as a threshold to truncate instance bases with trivial eigenvalues. For instance, 
                           
                              δ
                              =
                              0.6
                              ∼
                              0.7
                           
                         can best balance the trade-off between the prediction accuracy and the trained model size and testing time. This experiment proves that the eigen instance bases can effectively span the instance parametric subspace, which can significantly reduce the computational cost without sacrificing the pose estimation accuracy.

@&#CONCLUSION@&#

In this paper, we presented a novel head pose estimation approach. We propose the instance parametric subspace to handle multiple instance variations in a generative way. The coarse-to-fine framework, which employs a unit circle on the coarse layer and a 3-sphere on the fine layer to model the uniform geometry representation, can significantly alleviate the manifold degradation problem by learning instance-dependent nonlinear mappings in an unconventional direction. Experiments on both experimental and in-the-wild databases demonstrate the superior performance of our approach compared with state-of-the-arts in terms of prediction accuracy.

Our current approach relies on an external face detector to locate the face. In future work, we plan to combine the face detection and pose estimation together in a more complete system for head pose estimation.

@&#REFERENCES@&#

