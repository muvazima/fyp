@&#MAIN-TITLE@&#Potential of support vector regression for optimization of lens system

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Lens system design represents a crucial factor for good image quality.


                        
                        
                           
                           Optimization procedure is the main part of the lens system design methodology.


                        
                        
                           
                           Soft computing methodologies optimization application.


                        
                        
                           
                           Adaptive neuro-fuzzy inference system (ANFIS) application.


                        
                        
                           
                           Support vector regression (SVR application).


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Lens system

Optimization

Spot diagram

SVR

Soft computing

@&#ABSTRACT@&#


               
               
                  Lens system design is an important factor in image quality. The main aspect of the lens system design methodology is the optimization procedure. Since optimization is a complex, non-linear task, soft computing optimization algorithms can be used. There are many tools that can be employed to measure optical performance, but the spot diagram is the most useful. The spot diagram gives an indication of the image of a point object. In this paper, the spot size radius is considered an optimization criterion. Intelligent soft computing scheme Support Vector Regression (SVR) is implemented. In this study, the polynomial and radial basis functions (RBF) are applied as the SVR kernel function to estimate the optimal lens system parameters. The performance of the proposed estimators is confirmed with the simulation results. The SVR results are then compared with other soft computing techniques. According to the results, a greater improvement in estimation accuracy can be achieved through the SVR with polynomial basis function compared to other soft computing methodologies. The SVR coefficient of determination 
                        
                           
                              R
                           
                           
                              2
                           
                        
                      with the polynomial function was 0.9975 and with the radial basis function the 
                        
                           
                              R
                           
                           
                              2
                           
                        
                      was 0.964. The new optimization methods benefit from the soft computing capabilities of global optimization and multi-objective optimization rather than choosing a starting point by trial and error and combining multiple criteria into a single criterion in conventional lens design techniques.
               
            

@&#INTRODUCTION@&#

Lens system design is a complex engineering task in analytical approaches  [1,2] due to strong interactions among parameters and many local optima. There are also several design criteria, such as Seidel aberrations, chromatic aberrations, size and cost  [3,4].

Lens system design mainly comprises two steps: calculating the initial lens and further optimization. The optimization method presents better and more robust results than the initial design[5,6]. Optimization is very important to lens system design  [7]. For decades, various optimization methods have been successfully used in lens system design  [8,9]. Optimization of a lens system involves determining the surface parameters defining the shape and position of each lens surface  [10]. The mathematical model for this problem is generally complicated  [11,12].

The goal of the optimization process is to find the minimum merit function in a multi-dimensional variable space  [13–16]. In each step of the optimization procedure, the search direction in terms of optimization variables has to be found  [17–19]. The cycle continues until the merit function is sufficiently small.

Traditional methods of optimization can be effectively employed on continuous and differential functions. But many complex real world engineering problems involve efficiently solving problems in areas of structural optimization, design and analysis of control systems and scheduling. These disciplines are characterized by nonlinear, multi objective dynamical systems that face major obstacles of getting stuck in non-optimal solutions and premature convergence  [20].

Even though a number of mathematical functions have been proposed for optimization of the lens system geometrical parameters, there are still disadvantages of the models like very demanding in terms of calculation time. Meta heuristics are a class of powerful stochastic algorithms, which have been proved over the years as efficient and fast problem solvers  [21–23]. Computational intelligence (CI) belongs to this class of Meta heuristic search techniques. CI is an emerging derivative of artificial intelligence and has recently gained attention from varied fields of science, technology and management since it is an established metaheuristic optimization technique  [24]. Artificial neural networks (ANN) can be used as alternative to analytical approach as ANN offers advantages such as no required knowledge of internal system parameters, compact solution for multi-variable problems and fact calculation. For optimization of complex systems, new techniques can be used, such as the fuzzy logic (FL)  [25], ANN  [26] and neuro-fuzzy  [27].

Support vector machines (SVMs) as on type of metaheuristic soft computing technique, have gained importance regarding issues related with the environment  [28,29]. There are two fundamental classes of support vector machines: support vector classification (SVC) and support vector regression (SVR). SVM is a learning framework utilizing a high-dimensional peculiarity space  [30–33]. SVR is focused around a measurable learning hypothesis and structural risk minimization rule and has been effectively utilized for nonlinear frameworks  [34,35]. The correctness of an SVM model is to a great extent reliant on determining the model parameters. Notwithstanding, organized strategies for selecting parameters are important. Hence, model parameter alignment ought to be made.

SVR with radial basis function and SVR with polynomial basis function are used to determine lens system geometric parameters. Besides, the adaptive neuro fuzzy (ANFIS) model and improved versions of ANFIS, like ANFIS-PSO (ANFIS-particle swarm optimization)  [36–38], ANFIS-GA (ANFIS-genetic algorithm)  [39,40], and ANFIS-ACO (ANFIS-ant colony optimization)  [41–43], are also investigated for comparison.

The main task is to investigate and compare the soft computing methods for the estimation of the optimal geometrical parameters of a lens system. Until now there are no reports of using of SVR approach for optimization of the lens system geometrical parameters. Several soft computing techniques are used to illustrate the capabilities of each method. As a measure of optimal functionality of the lens system, spot size radius of the lens system is minimized to achieve best image quality. The soft computing networks attempt to reduce the aberration and distortion in the lens system. Finally, the optimal result will present the optimal image quality of the lens system.

In this article, a doublet lens system was used for the analysis of optimization techniques. Fig. 1
                         shows the doublet lens system as an example for the optimization procedure in this work.

Designing the doublet lens system involves selecting the overall power 
                           
                              
                                 0̸
                              
                              
                                 s
                                 y
                                 s
                              
                           
                         of the doublet with the two glass lenses to be used. The glass choice gives the Abbe number 
                           V
                        . For the linear dispersion of the system to become zero the system has to satisfy the following equations: 
                           
                              
                                 (1)
                                 
                                    
                                       
                                          0̸
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          0̸
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    
                                       
                                          0̸
                                       
                                       
                                          s
                                          y
                                          s
                                       
                                    
                                 
                              
                              
                                 (2)
                                 
                                    
                                       
                                          
                                             
                                                0̸
                                             
                                             
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                V
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                0̸
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                V
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    =
                                    0
                                 
                              
                           
                         where the lens power is 
                           0̸
                           =
                           
                              
                                 1
                              
                              
                                 f
                              
                           
                         for a lens with focal length 
                           f
                        . From Eqs. (1) and (2) we can get: 
                           
                              
                                 (3)
                                 
                                    
                                       
                                          
                                             
                                                0̸
                                             
                                             
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                0̸
                                             
                                             
                                                s
                                                y
                                                s
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      1
                                                   
                                                
                                                −
                                                V
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 (4)
                                 
                                    
                                       
                                          
                                             
                                                0̸
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                0̸
                                             
                                             
                                                s
                                                y
                                                s
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                −
                                                V
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      1
                                                   
                                                
                                                −
                                                V
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                         Since 
                           
                              
                                 0̸
                              
                              
                                 2
                              
                           
                           =
                           −
                           
                              
                                 0̸
                              
                              
                                 1
                              
                           
                           
                              
                                 
                                    
                                       −
                                       V
                                    
                                    
                                       2
                                    
                                 
                              
                              
                                 
                                    
                                       V
                                    
                                    
                                       1
                                    
                                 
                              
                           
                         and the Abbe numbers are positive, the power of the second element in the doublet system would be negative when the first element is positive.

To characterize lens systems, ray tracing is required. Beginning at a given point on the item and a given starting plot, a ray is the processing of the trajectory through the optical framework until it achieves the picture plane. Fig. 2
                         shows the layout of one lens system with some of the ray paths. There are numerous parameters that a lens creator must focus on to get a lens with excellent picture framing abilities: the shape of the surfaces, the thickness between two surfaces, material of the lens components, the quantity of lens components, and so forth. Image blur and distortion at a certain wavelength can be improved by changing the curvature of surfaces and thickness between surfaces.

In this paper, the aim is to examine the curvature of surfaces, 
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                        , and thickness between two surfaces, 
                           
                              
                                 t
                              
                              
                                 i
                              
                           
                        , to obtain a lens with good image-forming capabilities (Fig. 2). 
                           
                              
                                 D
                              
                              
                                 p
                                 u
                                 p
                                 i
                                 l
                              
                           
                         is the diameter of the bundle of rays with an entrance angle of zero degrees. The curvature (radius) of all surfaces and the distance from it to the image surface are modified to meet a required spot size radius of the lens system. The lens system is investigated by using spot diagrams made by performing ray tracing. 22 input rays with input angles varying from 0 to 22°are used. The grid at the aperture stop (or at the entrance pupil) traces the rays from the object that pass through all grid points. At the image plane, the collection of intersection points creates a spot diagram (Fig. 3
                        ). The post diagram sizes could serve as an image quality indicator.

The optimization procedure of the lens system requires variable parameters and a merit function. In this article one wavelength is used. Lens surface radii and thicknesses are optimization variables. In the optimization process, all of the variables are altered. Optimization functions are designed to maximize the image quality of the lens system. It may be necessary to select a point of reference on the image surface for optimization—usually either the intercept coordinates of the primary-wavelength chief ray or the weighted center position over all the wavelengths (the centroid) (Fig. 4
                        ).

RMS minimization of the spot (blur) size to the weighted centroid is the most common optimization function choice for lens design. The RMS spot size is an indicator of image quality based on geometrical rays. The RMS spot size is estimated by tracing a selection of rays of each defined wavelength from every defined entrance angle. To calculate the RMS spot size relative to the centroid, it is first necessary to locate the centroid’s position (Fig. 4). This is the average image position determined by tracing a number of rays: 
                           
                              
                                 (5)
                                 
                                    
                                       
                                          x
                                       
                                       
                                          c
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          1
                                       
                                       
                                          n
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                 
                              
                              
                                 (6)
                                 
                                    
                                       
                                          y
                                       
                                       
                                          c
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          1
                                       
                                       
                                          n
                                       
                                    
                                    
                                       
                                          y
                                       
                                       
                                          n
                                       
                                    
                                    .
                                 
                              
                           
                         The RMS spot size is then determined using: 
                           
                              (7)
                              
                                 
                                    RMS
                                 
                                 =
                                 
                                    
                                       
                                          (
                                          
                                             
                                                ∑
                                             
                                             
                                                1
                                             
                                             
                                                n
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   x
                                                   −
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         c
                                                      
                                                   
                                                   )
                                                
                                                +
                                                
                                                   (
                                                   y
                                                   −
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         c
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                n
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                          
                                             1
                                          
                                          
                                             n
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The optimization result will be a reduction in the lens design aberration.

The optimization problem is an extreme value problem of the objective function 
                           f
                           
                              (
                              x
                              )
                           
                           =
                           
                              RMS
                           
                         defined in the 
                           n
                        -dimensional space 
                           
                              
                                 R
                              
                              
                                 n
                              
                           
                        . The mathematical programming form of the constrained optimization problem is: 
                           
                              (8)
                              
                                 
                                    
                                       min
                                    
                                    
                                       x
                                       ∈
                                       
                                          
                                             R
                                          
                                          
                                             n
                                          
                                       
                                    
                                 
                                 f
                                 
                                    (
                                    x
                                    )
                                 
                              
                           
                        
                        
                           
                              
                                 a
                              
                              
                                 i
                              
                           
                           ⩽
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                           ⩽
                           
                              
                                 b
                              
                              
                                 i
                              
                           
                           ,
                           
                           i
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           n
                         explicit constraints


                        
                           
                              
                                 g
                              
                              
                                 j
                              
                           
                           
                              (
                              x
                              )
                           
                           ⩽
                           0
                           ,
                           
                           j
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           n
                         implicit constraints

where 
                           x
                           =
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    n
                                 
                              
                              )
                           
                         are the optimization variables. In lens systems, the structure and parameters of a lens system are taken as components of the optimization variables.

Using paraxial approximation, all the rays with the same entrance angle converge at a single point. However, with exact ray traces, they will strike the image plane at different points, generally in the neighborhood of approximated points, and form a so-called blur spot as illustrated in Fig. 3. The RMS blur spot size is computed from the variance of the position at the image plane of different exact rays with the same entrance angle. A reference ray traced with the paraxial approximation is used to evaluate the distortion, measuring its distance from the centroid of the exact rays at the image plane.

In this article, ZEMAX in sequential mode was used to optimize the lens doublet design and to acquire experimental training data for soft computing models. The optimization feature provided by ZEMAX is quite powerful and is capable of improving lens designs given a reasonable starting point and a set of variable parameters. ZEMAX uses either an actively damped least squares or an orthogonal descent algorithm. The algorithms are capable of optimizing a merit function composed of weighted target values. Fig. 5
                         shows a flowchart of the optimization procedure.


                        Fig. 6
                         illustrates the procedure of optimizing the lens doublet system based on the input ray angle as well as the optimal spot size radius. Spot size radius represents the qualitative image indicator of the lens doublet system. To improve the image quality of the lens doublet system, more qualitative image indicators can be added during the optimization procedure. The optimization method can calculate optimal lens system parameters for any input ray angle.

The fundamental working principle of SVMs is to perform the data mapping in some spaces through non-linear mapping and perform the linear algorithm in the feature space. If a way of computing the inner product in a feature space is available directly as a function to the original input points, it is possible to build a non-linear learning machine, which is known as a direct computation method of a kernel function, denoted by 
                           K
                        .

The flexible nature of the SVM is attributed to the kernel functions that implicitly chart the data to a higher-dimensional feature space. A linear solution in the higher-dimensional feature space corresponds to a non-linear solution in the original, lower-dimensional input space. There are some available methods that employ non-linear kernels in their strategy for regression problems and that simultaneously apply SVMs. One kernel function is the radial basis function. The main benefit of the radial basis function is that it is computationally more efficient than the customary SVM method, since radial basis function training needs only the solution of a set of linear equations instead of the lengthy and computationally demanding quadratic programming problem that is entailed in standard SVM. Compared with other probable kernel features, the radial basis function is a more compressed, supported kernel, which makes it very suitable for restricting the computational training process and improving the generalization efficiency of the radial basis function—an attribute of great value in model design. Therefore, the radial basis function with parameter 
                           σ
                         is adopted in this study. The non-linear radial basis kernel function is defined as: 
                           
                              (9)
                              
                                 K
                                 
                                    (
                                    x
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 =
                                 exp
                                 
                                    (
                                    −
                                    
                                       
                                          1
                                       
                                       
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             ‖
                                             x
                                             −
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             ‖
                                          
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                              
                           
                         where  
                           x
                          and  
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                         are vectors in the input space, i.e. vectors of features computed from training or test samples.

In this study the following polynomial kernel function was also used: 
                           
                              (10)
                              
                                 K
                                 
                                    (
                                    x
                                    y
                                    )
                                 
                                 =
                                 
                                    
                                       
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                T
                                             
                                          
                                          y
                                          +
                                          c
                                          )
                                       
                                    
                                    
                                       d
                                    
                                 
                              
                           
                         where  
                           x
                          and  
                           y
                         are vectors of features computed from training or test samples, and  
                           c
                          is a constant making a tradeoff for the influence of higher-order versus lower-order terms in the polynomial.

As a data-driven model, the ability of the SVR to make reasonable estimations is mostly dependent on input parameter selection. Adequate consideration of the factors controlling the system studied is therefore crucial to developing a reliable network. According to the experiments, the input parameters (Aperture stop—radius, Aperture stop—thickness, Surface 2—radius, Surface 3—radius, Surface 4—thickness) are collected and defined as input for the learning techniques. For the experiments, 70% of the data was used to train samples and the subsequent 30% served to test the samples. A summary of the statistical properties of the lens doublet system is provided in Table 1
                        .

There are two intuitive lower bounds on the computational cost of any algorithm that solves the SVM problem for arbitrary kernel matrices 
                              
                                 
                                    K
                                 
                                 
                                    i
                                    j
                                 
                              
                           .

Suppose that an oracle reveals which examples are not support vectors (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              0
                           ), and which examples are bounded support vectors (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              =
                              C
                           ). The coefficients of the 
                              R
                            remaining free support vectors are determined by a system of 
                              R
                            linear equations representing the derivatives of the objective function. Their calculation amounts to solving such a system. This typically requires a number of operations proportional to 
                              R
                              3
                           .

Simply verifying that a vector is a solution of the SVM problem involves computing the gradient g of the dual and checking the optimality conditions. With 
                              n
                            examples and 
                              S
                            support vectors, this requires a number of operations proportional to nS.

Few support vectors reach the upper bound 
                              C
                            when it gets large. The cost is then dominated by the 
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                              ∼
                              
                                 
                                    S
                                 
                                 
                                    3
                                 
                              
                           . Otherwise the term nS is usually larger. The final number of support vectors therefore is the critical component of the computational cost of solving the dual problem.

Since the asymptotic number of support vectors grows linearly with the number of examples, the computational cost of solving the SVM problem has both a quadratic and a cubic component. It grows at least like 
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                            when 
                              C
                            is small and 
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                            when 
                              C
                            gets large  [44].

To assess the success of the SVR models and other soft computing techniques, some statistical indicators were examined as follows: 
                           
                              (1)
                              root-mean-square error (RMSE) 
                                    
                                       (11)
                                       
                                          
                                             RMSE
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            =
                                                            1
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               (
                                                               
                                                                  
                                                                     P
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               −
                                                               
                                                                  
                                                                     O
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                   
                                                      n
                                                   
                                                
                                             
                                          
                                          ,
                                       
                                    
                                 
                              

coefficient of determination (
                                    
                                       
                                          R
                                       
                                       
                                          2
                                       
                                    
                                 ) 
                                    
                                       (12)
                                       
                                          
                                             
                                                R
                                             
                                             
                                                2
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         [
                                                         
                                                            
                                                               ∑
                                                            
                                                            
                                                               i
                                                               =
                                                               1
                                                            
                                                            
                                                               n
                                                            
                                                         
                                                         
                                                            (
                                                            
                                                               
                                                                  O
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                            −
                                                            
                                                               
                                                                  
                                                                     
                                                                        O
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                               ¯
                                                            
                                                            )
                                                         
                                                         ⋅
                                                         
                                                            (
                                                            
                                                               
                                                                  P
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                            −
                                                            
                                                               
                                                                  
                                                                     
                                                                        P
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                               ¯
                                                            
                                                            )
                                                         
                                                         ]
                                                      
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   (
                                                   
                                                      
                                                         O
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         
                                                            
                                                               O
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                      ¯
                                                   
                                                   )
                                                
                                                ⋅
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   (
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         
                                                            
                                                               P
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                      ¯
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                  where 
                                    
                                       
                                          P
                                       
                                       
                                          i
                                       
                                    
                                 and 
                                    
                                       
                                          O
                                       
                                       
                                          i
                                       
                                    
                                  are known as the experimental and forecast values, respectively, and 
                                    n
                                  is the total number of test data.

@&#RESULTS AND DISCUSSION@&#

Radial basis and polynomial functions were applied as the kernel functions for SVR prediction of the optimal parameters of a lens system in this study. The five parameters associated with two kernels are 
                           C
                        , 
                           e
                           ,
                           γ
                           ,
                           d
                         and 
                           t
                        . SVM model accuracy is principally dependent on model parameter selection. To select user-defined parameters (i.e.  
                           C
                        , 
                           e
                           ,
                           γ
                           ,
                           d
                         and 
                           t
                        ), a large number of trials were carried out with different combinations of 
                           C
                         and 
                           d
                         for polynomial kernels and 
                           C
                         and 
                           t
                         for radial basis function kernels. Table 2
                         provides the optimal values of user-defined parameters for this dataset with polynomial and radial basis kernels for SVR.

The initial data helped establish the polynomial and radial kernel-based SVR. The data was essentially predicted using SVR with radial and polynomial functions. The estimated optimal parameters of the lens system are represented in Fig. 7
                         in the form of a scatterplot.

It is very hard to characterize correctly computational complexity. First, there are two complexities involved: at training time and at test time. For linear SVMs, at training time the vector 
                           w
                         and bias 
                           b
                         by solving a quadratic problem must be estimated, and at test time prediction is linear in the number of features and constant in the size of the training data. For kernel SVMs, at training time the support vectors must be selected and at test time the complexity is linear on the number of the support vectors (which can be lower bounded by training set size) and linear on the number of features (since most kernels only compute a dot product; this will vary for graph kernels, string kernels, etc.).

To evaluate the performance of the methods, experiments were conducted to determine the relative significance of each independent parameter on the output. The root-mean-square error (RMSE), coefficient of determination (
                           
                              
                                 R
                              
                              
                                 2
                              
                           
                        ) and computational complexity served to evaluate the differences between the expected and actual values for both SVRs and other soft computing techniques. Table 3
                         compares the single radial-basis SVR and polynomial-basis SVR models with ANFIS, ANFIS-PSO, ANFIS-ACO and ANFIS-GA. The results in Table 3 indicate that the polynomial-basis SVR model has the best capabilities of estimating the optimal doublet lens system parameters.


                        Fig. 8
                         presents the SVR-polynomial optimization errors of the optimal RMS spot radius in relation to the field input angle. Smaller errors are noted for small input angles and the errors drastically increase beyond a 15°field input angle.

@&#CONCLUSION@&#

In this paper, an optimization method for designing a lens doublet system was proposed. The inherent relationship between the input ray angle and lens geometrical parameters was studied. The behavior of the two kinds of factors in lens system optimization was examined based on spot size radius and main image quality measure. The proposed strategy was successfully applied to lens doublet system optimization.

Optimization methods were also analyzed based on soft computing strategies. Spot diagram size was considered in lens design with the goal being to reduce the aberration and distortion in the lens design. The optimal result, whereby the total blur size is reduced, generally indicates the optimal image quality. Boundary limitations were considered as well. Boundary constraints on lens components can assure that the lens is physically viable. First, we extracted training data with ZEMAX software in sequential mode. By applying the proposed method to some small-scale problems and a two-element lens design problem, it was shown that the proposed method can be used to find the optimal parameters of the lens system. The proposed soft computing methodology can be easily trained with new experimental data to address other lens systems (singlet, triplet). Also for subsequent work, the optimization process could be improved to optimize the system and eliminate chromatic aberration by choosing appropriate glass lenses.

The performance of the SVR approaches compared to the results from ANFIS, ANFIS-PSO, ANFIS-ACO and ANFIS-GA showed interesting improvements in the prediction system. SVR predictions with the polynomial kernel function are superior to other methodologies in terms of root-mean-square error and coefficient of error. Moreover, SVR takes less computation time than ANFIS. The complexity of training a SVM is particular, time complexity and depends on both, the number of free support vectors and the number of training samples. In this article SVR computation time was 20 s for the given data but the ANFIS computation time was 35 s. On the other hand, SVR approach is data-driven model. It means the ability of the SVR to make reasonable optimization is mostly dependent on input parameter selection. This is the main limitation of the method. Also the five parameters associated with two kernels, 
                        C
                     , 
                        e
                        ,
                        γ
                        ,
                        d
                      and 
                        t
                      are user-defined parameters and SVR model accuracy is principally dependent on the model parameter selection. These parameters are selected by a large number of trials and errors. It is second limitation of the SVR model.

@&#ACKNOWLEDGMENTS@&#

This paper is financially supported by the Malaysian Ministry of Education under the University of Malaya High Impact Research Grants UM.C/625/1/HIR/MoE/FCSIT/12.

@&#REFERENCES@&#

