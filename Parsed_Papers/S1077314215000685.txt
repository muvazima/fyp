@&#MAIN-TITLE@&#Phase correlation with sub-pixel accuracy: A comparative study in 1D and 2D

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Six methods for the accurate estimation of phase-correlation maxima are evaluated.


                        
                        
                           
                           Methods are tested under noise, extreme transformations, incomplete data, and for real cases with unknown transformations.


                        
                        
                           
                           Sinc function fitting provides the best average accuracy.


                        
                        
                           
                           Local Center of Mass, and Minimization of the POC gradient provide good balance between accuracy and efficiency.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Phase correlation

Sub-pixel accuracy

Rigid image registration

Motion estimation

@&#ABSTRACT@&#


               
               
                  Six methods for the accurate estimation of the phase-correlation maxima are discussed and evaluated in this article for one- and two-dimensional signals. The evaluation was carried out under a rigid image registration framework, where artificially generated transformations were used in order to perform a quantitative assessment of the accuracy of each method and its robustness in the presence of noise, incomplete data, or extreme transformations. Another round of tests were performed with real cases where the true transformation is unknown, and not necessarily rigid; for these tests, quantitative evaluation was achieved by means of the root mean square error of the overlapping area between the two aligned images. While most methods behaved similarly under difficult conditions, three of the methods under study displayed clear advantages under mild levels of noise, low transformation complexity, and small percentages of missing data. These methods are the local center of mass, sinc function fitting, and minimization of the POC gradient magnitude. The other tested methods included quadratic fitting, linear fitting in the frequency domain, and up-sampling; however, these methods did not perform consistently well.
               
            

@&#INTRODUCTION@&#

The phase correlation method [1] is a frequency domain technique used to estimate the delay or shift between two copies of the same signal. This technique is based on the shift properties of the Fourier transform. Specifically, consider two discrete periodic signals f(x) and g(x), and let F(ω) and G(ω) be their respective Fourier transforms. The normalized cross-spectrum R(ω) of f and g is given by
                        
                           (1)
                           
                              
                                 
                                    
                                       
                                          R
                                          
                                             (
                                             ω
                                             )
                                          
                                          =
                                          
                                             
                                                F
                                                
                                                   (
                                                   ω
                                                   )
                                                
                                                
                                                   
                                                      G
                                                   
                                                   *
                                                
                                                
                                                   (
                                                   ω
                                                   )
                                                
                                             
                                             
                                                
                                                   |
                                                   F
                                                   
                                                      (
                                                      ω
                                                      )
                                                   
                                                
                                                
                                                   
                                                      G
                                                   
                                                   *
                                                
                                                
                                                   
                                                      (
                                                      ω
                                                      )
                                                   
                                                   |
                                                
                                             
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where G* is the complex conjugate of G. Note that 
                        
                           |
                           R
                           (
                           ω
                           )
                           |
                           =
                           1
                        
                      for all ω. Also, the phase-only correlation (POC) function r(x) is defined as the inverse Fourier transform of R(ω).

Now suppose g is simply a delayed copy of f; that is, 
                        
                           g
                           (
                           x
                           )
                           =
                           f
                           (
                           x
                           +
                           d
                           )
                        
                     , where d is an unknown integer. The shift property of the Fourier transform states that 
                        
                           G
                           (
                           ω
                           )
                           =
                           F
                           (
                           ω
                           )
                           exp
                           {
                           j
                           ω
                           d
                           }
                        
                     , where 
                        
                           j
                           =
                           
                              
                                 −
                                 1
                              
                           
                        
                     . In this case, it is easy to see that 
                        
                           R
                           (
                           ω
                           )
                           =
                           exp
                           {
                           −
                           j
                           ω
                           d
                           }
                        
                      and 
                        
                           r
                           (
                           x
                           )
                           =
                           δ
                           (
                           x
                           −
                           d
                           )
                        
                     , where δ is the discrete impulse function (i.e., 
                        
                           δ
                           (
                           0
                           )
                           =
                           1
                        
                      and 
                        
                           δ
                           (
                           x
                           )
                           =
                           0
                        
                      for 
                        
                           x
                           
                              
                                 0.25
                                 e
                                 m
                              
                              
                                 0
                                 e
                                 x
                              
                           
                           ≠
                           
                              
                                 0.25
                                 e
                                 m
                              
                              
                                 0
                                 e
                                 x
                              
                           
                           0
                        
                     ). Therefore, one can recover d by simply locating the maximum of r(x).

This method can be easily extended to 2D and 3D images, and has been successfully applied in several image processing and computer vision problems, such as image registration [2–5], biometrics [6–8], stereo disparity estimation [9,10], motion and optical flow estimation [11,10], and video encoding [12,10]. While newer methods have been proposed, such as Gradient Correlation [13], the phase correlation method is still very popular and widely used in a variety of applications.

One of the most important drawbacks of the basic phase correlation method, when implemented in the discrete-time domain, is that the recovered displacements have integer accuracy; i.e., the coordinates of the maximum of the discrete POC function will be a rounded version of the components of the true displacement vector. Various alternatives have been devised to estimate the displacements with non-integer (sub-pixel) accuracy. Among the most popular are those which rely on local function fitting: one can first obtain the displacement d
                     0 with integer accuracy using the basic phase correlation method and fit a simple analytical function f(d) (e.g., a polynomial) to the POC values in a neighborhood of d
                     0; then one maximizes f(d) to estimate the true maximum. The most common fitting functions are quadratic polynomials and Gaussian functions [14,15], cubic splines [6], and Dirichlet or sinc functions [16,17,11]. In a recent approach, the authors derive an expression for the continuous gradient of the POC function, and use different search methods to find the minima of the magnitude of the gradient, which correspond to the extrema of the POC function [18]; since the search is performed around the initial integer-valued solution, this method is able to quickly estimate the location of the POC maximum with good accuracy.

Most of the methods described above perform reasonably well under controlled conditions but their accuracy is seriously degraded by noise, border effects, and the presence of multiple motions. This restricts many of the methods from being applied to some computer vision problems, such as stereo depth or optical flow estimation. Also, most of these methods were originally proposed in order to overcome the limitations of the classic POC method within the context of a specific application, without considering other possible approaches to the estimation of the POC maxima with sub-pixel accuracy.

A few papers have been published where some of the methods described above are compared. For instance, Argyriou and Vlachos perform a comparison by fitting different functions (quadratic, Gaussian, and sinc) around the integer-valued solution, in the context of motion-based video encoding [19]. This work shows that fitting a Sinc function produces the best results among the tested fitting functions, particularly in the presence of white additive noise. In another study, Vera and Torres evaluate five different methods, including up-sampling in the frequency domain, linear fitting in the frequency domain, and Gaussian fitting in the spatial domain, for the estimation of 2D translations under aliasing conditions [20]. The authors conclude that Gaussian function fitting provides results that are less affected by aliasing than the other methods under study. While these works provide a good reference point, they do not include some of the more recent proposals and also lack a detailed explanation of each method under study. Moreover, the batteries of tests reported in these works are relatively limited and sometimes do not show the particular strengths and shortcomings of each method.

In this work, a thorough comparison of six of the most representative methods for the estimation of POC maxima at sub-pixel level is presented, focusing on accuracy, success rate, and robustness to noise and missing data in a translational and rigid image registration framework. In Section 2 we will describe in detail all the methods under study. Section 3 will present some ideas that may increase the performance of some of the methods. In Section 4, the evaluation results for the estimation of translational and rigid transformations will be shown. And finally, Section 5 will present our conclusions.

@&#METHODS@&#

In this section we present the most relevant methods for the estimation of POC maxima with sub-pixel accuracy. The description of each method considers both the 1D case (e.g., for stereo matching) and the 2D extension (e.g., for image registration). Extensions to higher dimensions (e.g., for volume registration) are possible, and in some cases straightforward. Throughout the article, square brackets will be used to denote N-periodic discrete-time signals (e.g., f[x], where 
                        
                           x
                           =
                           0
                           ,
                           ⋯
                           ,
                           
                              N
                              x
                           
                           −
                           1
                        
                     ), and parentheses for continuous-time signals (e.g., f(x) with 
                        
                           x
                           ∈
                           R
                        
                     ). Also note that in most cases we will be dealing with periodic signals and will obviate the need of mod-N indexing (e.g., 
                        
                           f
                           [
                           x
                           +
                           N
                           ]
                           =
                           f
                           [
                           x
                           ]
                        
                     ).

This a very common technique for the estimation of the maxima of a sampled function with sub-sample accuracy [14,15,19]. The basic idea is this: let c[x] be a sampled version of some (unknown) continuous function c(x) and x
                        0 an integer such that c[x] ≤ c[x
                        0] for any integer x in a neighborhood of x
                        0. In the case of the POC function, one must also assume that c(x) is periodic with period N (i.e., the length of the input signals). One can easily fit a continuous quadratic function 
                           
                              
                                 c
                                 ^
                              
                              
                                 (
                                 x
                                 )
                              
                              =
                              
                                 a
                                 0
                              
                              
                                 
                                    x
                                 
                                 2
                              
                              +
                              
                                 a
                                 1
                              
                              x
                              +
                              
                                 a
                                 2
                              
                           
                         around x
                        0 and analytically obtain its maximum, whose coordinate 
                           
                              x
                              ^
                           
                         is given by
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                ^
                                             
                                             =
                                             
                                                x
                                                0
                                             
                                             −
                                             
                                                1
                                                2
                                             
                                             −
                                             
                                                
                                                   
                                                      c
                                                      0
                                                   
                                                   −
                                                   
                                                      c
                                                      
                                                         −
                                                         1
                                                      
                                                   
                                                
                                                
                                                   
                                                      c
                                                      
                                                         +
                                                         1
                                                      
                                                   
                                                   −
                                                   2
                                                   
                                                      c
                                                      0
                                                   
                                                   +
                                                   
                                                      c
                                                      
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 c
                                 0
                              
                              =
                              c
                              
                                 [
                                 
                                    x
                                    0
                                 
                                 ]
                              
                              ,
                              
                                 
                                    0.35
                                    e
                                    m
                                 
                                 
                                    0
                                    e
                                    x
                                 
                              
                              
                                 c
                                 
                                    +
                                    1
                                 
                              
                              =
                              c
                              
                                 [
                                 
                                    (
                                    
                                       x
                                       0
                                    
                                    +
                                    1
                                    )
                                 
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 
                                    mod
                                 
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 N
                                 ]
                              
                           
                        , and 
                           
                              
                                 c
                                 
                                    −
                                    1
                                 
                              
                              =
                              c
                              
                                 [
                                 
                                    (
                                    
                                       x
                                       0
                                    
                                    −
                                    1
                                    )
                                 
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 
                                    mod
                                 
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 N
                                 ]
                              
                           
                        .

This method is extremely easy to implement since it provides a closed formula for the real-valued displacement between the input signals, and is generally more accurate than the integer-valued POC maximum x
                        0. However, when the true displacement is actually integer, the estimator 
                           
                              x
                              ^
                           
                         tends to under-perform.

The extension of this method to 2D is non-trivial since it involves fitting a quadric surface to a set of points. Suppose we know the POC matrix c[x,y] and that x
                        0 and y
                        0 are integers such that c[x,y] ≤ c[x
                        0,y
                        0]. The interpolating function c(x,y) now takes the form of a general quadric with six coefficients:
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             c
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             =
                                             
                                                a
                                                0
                                             
                                             
                                                
                                                   x
                                                
                                                2
                                             
                                             +
                                             
                                                a
                                                1
                                             
                                             
                                                
                                                   y
                                                
                                                2
                                             
                                             +
                                             
                                                a
                                                2
                                             
                                             xy
                                             +
                                             
                                                a
                                                3
                                             
                                             x
                                             +
                                             
                                                a
                                                4
                                             
                                             y
                                             +
                                             
                                                a
                                                5
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        The estimated real-valued displacement 
                           
                              (
                              
                                 x
                                 ^
                              
                              ,
                              
                                 y
                                 ^
                              
                              )
                           
                         is obtained by solving the system obtained by setting the partial derivatives of c(x,y) to zero, which results in
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                y
                                                ^
                                             
                                             =
                                             
                                                
                                                   
                                                      a
                                                      2
                                                   
                                                   
                                                      a
                                                      3
                                                   
                                                   −
                                                   2
                                                   
                                                      a
                                                      4
                                                   
                                                   
                                                      a
                                                      0
                                                   
                                                
                                                
                                                   4
                                                   
                                                      a
                                                      0
                                                   
                                                   
                                                      a
                                                      1
                                                   
                                                   −
                                                   
                                                      a
                                                      
                                                         2
                                                      
                                                      2
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                ^
                                             
                                             =
                                             −
                                             
                                                
                                                   
                                                      a
                                                      2
                                                   
                                                   
                                                      y
                                                      ^
                                                   
                                                   +
                                                   
                                                      a
                                                      3
                                                   
                                                
                                                
                                                   2
                                                   
                                                      a
                                                      0
                                                   
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The problem lies in finding the coefficients 
                           
                              
                                 a
                                 0
                              
                              ,
                              ⋯
                              ,
                              
                                 a
                                 5
                              
                           
                        . One way to do this is by choosing six integer-valued points (x,y) close to (x
                        0,y
                        0) for which the value of function is known, and solve the linear equation system obtained by substituting these points in (3). These points are, of course, (x
                        0,y
                        0) and its five nearest neighbors. Four of these neighbors are 
                           
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 +
                                 1
                                 ,
                                 
                                    y
                                    0
                                 
                                 )
                              
                              ,
                              
                                 
                                    0.35
                                    e
                                    m
                                 
                                 
                                    0
                                    e
                                    x
                                 
                              
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 −
                                 1
                                 ,
                                 
                                    y
                                    0
                                 
                                 )
                              
                              ,
                              
                                 
                                    0.35
                                    e
                                    m
                                 
                                 
                                    0
                                    e
                                    x
                                 
                              
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 ,
                                 
                                    y
                                    0
                                 
                                 +
                                 1
                                 )
                              
                           
                         and 
                           
                              (
                              
                                 x
                                 0
                              
                              ,
                              
                                 y
                                 0
                              
                              −
                              1
                              )
                           
                        . The last point can be arbitrarily chosen from any of the four cornering neighbors of (x
                        0,y
                        0) (i.e., (x
                        0 ± 1,y
                        0 ± 1)). The result 
                           
                              (
                              
                                 x
                                 ^
                              
                              ,
                              
                                 y
                                 ^
                              
                              )
                           
                         is relatively sensitive to this choice; however, the method can be made more robust if one estimates the result for each corner and then takes the average estimator. Alternatively, one can use least-squares fitting (LSF) given a larger set of known points, for example, nine points on a 
                           
                              3
                              ×
                              
                              3
                           
                         window centered at (x
                        0,y
                        0). In our experience, LSF produces less accurate results than directly solving the linear system with six points.

Consider again the ideal case where 
                           
                              g
                              (
                              x
                              )
                              =
                              f
                              (
                              x
                              +
                              d
                              )
                           
                        , and the normalized cross-spectrum function simply becomes 
                           
                              R
                              (
                              ω
                              )
                              =
                              exp
                              {
                              j
                              ω
                              d
                              }
                           
                        . Note that the phase of R(ω) is a linear function of the frequency ω whose slope is precisely the displacement d. Intuitively, one could extract the unwrapped phase vector ϕ(ω) from R(ω) and fit a linear function to the data to find the slope; using, for example, least-squares linear regression. Unfortunately, there are several problems with this approach; the most important one is that it only works in the ideal case where one of the images is a shifted version of the other. When there are various objects in the images moving in different directions, the normalized cross-spectrum takes a much more complex form, and its phase becomes highly non-linear. Moreover, even under nearly-ideal conditions, the phase of R(ω) is very noisy and the results are highly sensitive to errors and discontinuities introduced by the unwrapping method. For these reasons, this method only performs decently when the normalized cross-spectrum is bandlimited (see Section 3).

For 2D displacement recovery, the sub-space identification approach proposed by Hoge [21] produces very good results. The idea is that, in the ideal case where 
                           
                              f
                              
                                 (
                                 x
                                 ,
                                 y
                                 )
                              
                              =
                              g
                              
                                 (
                                 x
                                 +
                                 
                                    d
                                    x
                                 
                                 ,
                                 y
                                 +
                                 
                                    d
                                    y
                                 
                                 )
                              
                           
                        , the normalized 2D cross-spectrum can be factorized as 
                           
                              R
                              
                                 (
                                 
                                    ω
                                    x
                                 
                                 ,
                                 
                                    ω
                                    y
                                 
                                 )
                              
                              =
                              
                                 q
                                 x
                              
                              
                                 (
                                 
                                    ω
                                    x
                                 
                                 )
                              
                              
                                 q
                                 y
                              
                              
                                 (
                                 
                                    ω
                                    y
                                 
                                 )
                              
                           
                        . In the discrete case, R is a matrix that can be written as the outer product of non-zero vectors qx
                         and qy
                        , and is therefore of rank 1. In other words, qx
                         and qy
                         can be obtained from the rank-one approximation of R. Once qx
                         and qy
                         are known, it is only a matter of applying least-squares linear regression to each of their unwrapped phase signals to find dx
                         and dy
                        . The rank-one approximation of R can be found, for instance, by singular value decomposition (SVD). Newer approaches may apply different pre-processing stages to make the algorithm more robust to noise, and apply statistical methods such as RANSAC to find the best linear model for the 1D unwrapped phase data [22].

Suppose one wants to reconstruct a continuous version r(x) of the POC function from its samples r[x]. One way to do this is by taking the convolution of the continuous impulse train defined by the samples with the kernel of an ideal low-pass filter, which is basically a sinc function. In the ideal case, when one of the input signals is a circularly-shifted version of the other (with true shift 
                           
                              
                                 (
                                 
                                    d
                                    x
                                 
                                 ,
                                 
                                    d
                                    y
                                 
                                 )
                              
                              ,
                              
                                 
                                    0.35
                                    e
                                    m
                                 
                                 
                                    0
                                    e
                                    x
                                 
                              
                              r
                              
                                 [
                                 x
                                 ]
                              
                           
                         is a single displaced impulse; therefore, r(x) must be a shifted sinc function of the form:
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             r
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             ≈
                                             
                                                α
                                                
                                                   
                                                      N
                                                      x
                                                   
                                                   
                                                      N
                                                      y
                                                   
                                                
                                             
                                             
                                                
                                                   sin
                                                   {
                                                   π
                                                   
                                                      (
                                                      x
                                                      +
                                                      
                                                         d
                                                         x
                                                      
                                                      )
                                                   
                                                   }
                                                
                                                
                                                   sin
                                                   {
                                                   
                                                      π
                                                      
                                                         N
                                                         x
                                                      
                                                   
                                                   
                                                      (
                                                      x
                                                      +
                                                      
                                                         d
                                                         x
                                                      
                                                      )
                                                   
                                                   }
                                                
                                             
                                             
                                                
                                                   sin
                                                   {
                                                   π
                                                   
                                                      (
                                                      y
                                                      +
                                                      
                                                         d
                                                         y
                                                      
                                                      )
                                                   
                                                   }
                                                
                                                
                                                   sin
                                                   {
                                                   
                                                      π
                                                      
                                                         N
                                                         y
                                                      
                                                   
                                                   
                                                      (
                                                      y
                                                      +
                                                      
                                                         d
                                                         y
                                                      
                                                      )
                                                   
                                                   }
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where α ≈ 1. When noise and multiple motions are involved, the model described by (6) is only valid in the neighborhood of a peak, and the amplitude α will be less than 1 [17,11]. The model parameters (dx,dy,α) can be recovered by least squares function fitting using gradient descent methods, using as samples the values of discrete POC function r[x,y] for 
                           
                              
                                 x
                                 0
                              
                              −
                              w
                              ≤
                              x
                              ≤
                              
                                 x
                                 o
                              
                              +
                              w
                           
                         and 
                           
                              
                                 y
                                 0
                              
                              −
                              w
                              ≤
                              y
                              ≤
                              
                                 y
                                 0
                              
                              +
                              w
                           
                        , where (x
                        0,y
                        0) is the integer-valued displacement given by the basic POC method, and w defines the size of the fitting neighborhood. We have used 
                           
                              w
                              =
                              3
                           
                        , as suggested in [17], and obtained very good results. Our implementation uses a simple gradient descent algorithm which converges in less than 4000 iterations in most cases.

True integer displacements produce a very sharp peak in the POC function. When the displacement is non-integer, the energy of the peak is spread across the neighboring pixels, so that the intensity value at each of these pixels is inversely related to the distance of the true peak to the center of each pixel. This suggests a very intuitive and straightforward way of estimating the true displacement by simply computing the center of mass of the POC function locally in a neighborhood centered around the integer-valued peak location. The estimation 
                           
                              d
                              ^
                           
                         in 1D is therefore given by
                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             
                                                d
                                                ^
                                             
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         x
                                                         =
                                                         
                                                            d
                                                            0
                                                         
                                                         −
                                                         w
                                                      
                                                      
                                                         
                                                            d
                                                            0
                                                         
                                                         +
                                                         w
                                                      
                                                   
                                                   xr
                                                   
                                                      [
                                                      x
                                                      ]
                                                   
                                                
                                                
                                                   
                                                      ∑
                                                      
                                                         x
                                                         =
                                                         
                                                            d
                                                            0
                                                         
                                                         −
                                                         w
                                                      
                                                      
                                                         
                                                            d
                                                            0
                                                         
                                                         +
                                                         w
                                                      
                                                   
                                                   r
                                                   
                                                      [
                                                      x
                                                      ]
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where d
                        0 is the integer-valued estimation of the peak location (obtained from the basic POC method), and w determines the size of the neighborhood used to estimate the local center of mass. We have obtained the best average results with w between 1 and 3. The actual number of points used by LCM is 
                           
                              2
                              w
                              +
                              1
                           
                         in 1D, and 
                           
                              
                                 (
                                 2
                                 w
                                 +
                                 1
                                 )
                              
                              2
                           
                         in 2D. Therefore, with 
                           
                              w
                              =
                              1
                           
                         LCM uses 3 points in 1D and 9 points in 2D to estimate the peak. However, in our tests we selected 
                           
                              w
                              =
                              2
                           
                        , which amounts to 5 points in 1D and 25 points in 2D. The extension of this method to higher dimensions is trivial. LCM is loosely based on the method proposed in [16] and further evaluated in [23].

Let us recall that the discrete POC function r[x] is in fact the discrete inverse Fourier transform of the normalized cross-spectrum R[k]; that is,
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             r
                                             
                                                [
                                                x
                                                ]
                                             
                                             =
                                             
                                                ∑
                                                
                                                   k
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             R
                                             
                                                [
                                                k
                                                ]
                                             
                                             exp
                                             
                                                {
                                                j
                                                2
                                                π
                                                kx
                                                /
                                                N
                                                }
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        The right-hand side expression on the equation above is actually a continuous function of x, and provides an expression to reconstruct the continuous, band-limited POC function r(x), given by:
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             r
                                             
                                                (
                                                x
                                                )
                                             
                                             =
                                             
                                                ∑
                                                
                                                   k
                                                   =
                                                   0
                                                
                                                
                                                   N
                                                   −
                                                   1
                                                
                                             
                                             R
                                             
                                                [
                                                k
                                                ]
                                             
                                             exp
                                             
                                                {
                                                j
                                                2
                                                π
                                                kx
                                                /
                                                N
                                                }
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where x is now real-valued.

One can then use Eq. (9), for example, to evaluate the POC function at intervals smaller than 1pixel in order to find the maximum with sub-pixel accuracy. The accuracy will be somewhat determined by the length of the intervals at which the POC is evaluated. For example, suppose one wants to compute the POC with a 1/M precision; one could evaluate r(y/M) for all 
                           
                              y
                              =
                              0
                              ,
                              ⋯
                              ,
                              MN
                              −
                              1
                           
                         and then simply find the 
                           
                              y
                              ^
                           
                         that maximizes r. The estimated displacement would be 
                           
                              
                                 d
                                 ^
                              
                              =
                              
                                 y
                                 ^
                              
                              /
                              M
                           
                        . This procedure, however, is equivalent to interpolating r in the frequency domain by zero-padding and extending R[k] by a factor of M, prior to taking the IFFT; in other words, one can simply compute the zero-padded normalized cross-spectrum 
                           
                              
                                 R
                                 ^
                              
                              
                                 [
                                 k
                                 ]
                              
                           
                         as
                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             
                                                R
                                                ^
                                             
                                             
                                                [
                                                k
                                                ]
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            
                                                               R
                                                               [
                                                               k
                                                               ]
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               if
                                                               
                                                                  
                                                                     0.35
                                                                     e
                                                                     m
                                                                  
                                                                  
                                                                     0
                                                                     e
                                                                     x
                                                                  
                                                               
                                                               0
                                                               ≤
                                                               k
                                                               <
                                                               N
                                                               /
                                                               2
                                                               −
                                                               1
                                                               ,
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               if
                                                               
                                                                  
                                                                     0.35
                                                                     e
                                                                     m
                                                                  
                                                                  
                                                                     0
                                                                     e
                                                                     x
                                                                  
                                                               
                                                               N
                                                               /
                                                               2
                                                               ≤
                                                               k
                                                               <
                                                               MN
                                                               −
                                                               N
                                                               /
                                                               2
                                                               ,
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               R
                                                               [
                                                               k
                                                               −
                                                               MN
                                                               +
                                                               N
                                                               ]
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               if
                                                               
                                                                  
                                                                     0.35
                                                                     e
                                                                     m
                                                                  
                                                                  
                                                                     0
                                                                     e
                                                                     x
                                                                  
                                                               
                                                               MN
                                                               −
                                                               N
                                                               /
                                                               2
                                                               ≤
                                                               k
                                                               ≤
                                                               MN
                                                               −
                                                               1
                                                               ,
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        and then estimate the interpolated POC function 
                           
                              
                                 r
                                 ^
                              
                              
                                 [
                                 y
                                 ]
                              
                              =
                              r
                              
                                 (
                                 y
                                 /
                                 M
                                 )
                              
                           
                         as the IFFT of 
                           
                              R
                              ^
                           
                        , which is considerably faster than using Eq. (9) directly. The extension to 2D images is straightforward, although it may be computationally expensive for large values M. The advantage of this method is that it can be easily implemented using fixed-point arithmetic with log2
                        M bits of precision, which may be useful for applications developed on specialized hardware such as DSPs or FPGAs. In practice, we have found 
                           
                              M
                              =
                              8
                           
                         results in a good compromise between accuracy and computational burden.

Alternatively, one can apply a local search method with Eq. (9) to refine an integer-valued solution given by the basic POC method. For example, suppose the integer-valued solution is d; one could evaluate Eq. (9) in the range 
                           
                              [
                              d
                              −
                              Δ
                              ,
                              d
                              +
                              Δ
                              ]
                           
                         at intervals of δ > 0
pixels, so that the number of evaluated points is 
                           
                              n
                              =
                              (
                              2
                              Δ
                              +
                              1
                              )
                              /
                              δ
                           
                        ; the best of these points is selected (i.e., the one which maximizes r), and the process is repeated with smaller Δ and δ. A similar approach was used in [24] to estimate the cross-correlation between two images with sub-pixel accuracy.

For most applications, one is only interested in finding the maxima of the (unknown) continuous phase correlation function r(x), but not the function itself. If 
                              
                                 x
                                 ^
                              
                            is a maximum, then it holds that 
                              
                                 
                                    
                                       r
                                    
                                    ′
                                 
                                 
                                    (
                                    
                                       x
                                       ^
                                    
                                    )
                                 
                                 =
                                 0
                              
                           , where 
                              
                                 
                                    
                                       r
                                    
                                    ′
                                 
                                 =
                                 dr
                                 /
                                 dx
                              
                            is the first-order derivative of r. From Eq. (9), one can easily obtain an analytical expression for r′, which is given by
                              
                                 (11)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      r
                                                   
                                                   ′
                                                
                                                
                                                   (
                                                   x
                                                   )
                                                
                                                =
                                                j
                                                
                                                   
                                                      2
                                                      π
                                                   
                                                   N
                                                
                                                
                                                   ∑
                                                   
                                                      k
                                                      =
                                                      0
                                                   
                                                   
                                                      N
                                                      −
                                                      1
                                                   
                                                
                                                kR
                                                
                                                   [
                                                   k
                                                   ]
                                                
                                                exp
                                                
                                                   {
                                                   j
                                                   2
                                                   π
                                                   kx
                                                   /
                                                   N
                                                   }
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Therefore, instead of finding the extrema of r(x), one can simply find the zeros of r′(x). The advantage is that there exist many well-known and accurate numerical methods to find the zeros of a given function, such as bisection, false position, and Newton–Raphson methods. Most of these methods require a good initial solution, or an initial interval that must contain the solution; fortunately, the integer-valued peak locations of the discrete POC function already provide a good starting point.

For example, suppose the maximum of the discrete POC is located at 
                              
                                 d
                                 ∈
                                 Z
                              
                           . By simple inspection one could determine if there is a change of sign between 
                              
                                 
                                    
                                       r
                                    
                                    ′
                                 
                                 
                                    (
                                    d
                                    −
                                    1
                                    )
                                 
                              
                            and r′(d), or between r′(d) and 
                              
                                 
                                    
                                       r
                                    
                                    ′
                                 
                                 
                                    (
                                    d
                                    +
                                    1
                                    )
                                 
                              
                           , and determine an adequate initial interval for the bisection or false position methods. Alternatively, one could use the Newton–Raphson method, which requires estimating the second-order derivative of r, which is given by
                              
                                 (12)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      ′
                                                      ′
                                                   
                                                
                                                
                                                   (
                                                   x
                                                   )
                                                
                                                =
                                                −
                                                
                                                   
                                                      4
                                                      
                                                         
                                                            π
                                                         
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         N
                                                      
                                                      2
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      k
                                                      =
                                                      0
                                                   
                                                   
                                                      N
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   
                                                      k
                                                   
                                                   2
                                                
                                                R
                                                
                                                   [
                                                   k
                                                   ]
                                                
                                                exp
                                                
                                                   {
                                                   j
                                                   2
                                                   π
                                                   kx
                                                   /
                                                   N
                                                   }
                                                
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

In our experience, the false position approach produces accurate results after only 4 or 5 iterations, and is more robust than Newton–Raphson, possibly due to the excess of high-frequency content in the second derivative.

The extension of this method to 2D carries some difficulties: since the POC function is now bivariate, its derivative takes the form of a vector-valued bivariate gradient function, given by
                              
                                 (13)
                                 
                                    
                                       
                                          
                                             
                                                ∇
                                                r
                                                
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                
                                                =
                                                
                                                   [
                                                   
                                                      
                                                         ∂
                                                         r
                                                      
                                                      
                                                         ∂
                                                         x
                                                      
                                                   
                                                   
                                                      (
                                                      x
                                                      ,
                                                      y
                                                      )
                                                   
                                                   ,
                                                   
                                                      
                                                         0.35
                                                         e
                                                         m
                                                      
                                                      
                                                         0
                                                         e
                                                         x
                                                      
                                                   
                                                   
                                                      
                                                         ∂
                                                         r
                                                      
                                                      
                                                         ∂
                                                         y
                                                      
                                                   
                                                   
                                                      (
                                                      x
                                                      ,
                                                      y
                                                      )
                                                   
                                                   ]
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           with


                           
                              
                                 (14)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∂
                                                      r
                                                   
                                                   
                                                      ∂
                                                      x
                                                   
                                                
                                                
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                
                                                =
                                                −
                                                
                                                   
                                                      2
                                                      π
                                                   
                                                   
                                                      N
                                                      x
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      l
                                                      =
                                                      0
                                                   
                                                   
                                                      
                                                         N
                                                         y
                                                      
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      k
                                                      =
                                                      0
                                                   
                                                   
                                                      
                                                         N
                                                         x
                                                      
                                                      −
                                                      1
                                                   
                                                
                                                k
                                                
                                                   
                                                      0.35
                                                      e
                                                      m
                                                   
                                                   
                                                      0
                                                      e
                                                      x
                                                   
                                                
                                                I
                                                
                                                   {
                                                   R
                                                   
                                                      [
                                                      k
                                                      ,
                                                      l
                                                      ]
                                                   
                                                   exp
                                                   
                                                      {
                                                      2
                                                      π
                                                      j
                                                      
                                                         (
                                                         
                                                            kx
                                                            
                                                               N
                                                               x
                                                            
                                                         
                                                         +
                                                         
                                                            ly
                                                            
                                                               N
                                                               y
                                                            
                                                         
                                                         )
                                                      
                                                      }
                                                   
                                                   }
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

and
                              
                                 (15)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∂
                                                      r
                                                   
                                                   
                                                      ∂
                                                      y
                                                   
                                                
                                                
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                
                                                =
                                                −
                                                
                                                   
                                                      2
                                                      π
                                                   
                                                   
                                                      N
                                                      y
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      l
                                                      =
                                                      0
                                                   
                                                   
                                                      
                                                         N
                                                         y
                                                      
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      k
                                                      =
                                                      0
                                                   
                                                   
                                                      
                                                         N
                                                         x
                                                      
                                                      −
                                                      1
                                                   
                                                
                                                l
                                                
                                                   
                                                      0.35
                                                      e
                                                      m
                                                   
                                                   
                                                      0
                                                      e
                                                      x
                                                   
                                                
                                                I
                                                
                                                   {
                                                   R
                                                   
                                                      [
                                                      k
                                                      ,
                                                      l
                                                      ]
                                                   
                                                   exp
                                                   
                                                      {
                                                      2
                                                      π
                                                      j
                                                      
                                                         (
                                                         
                                                            kx
                                                            
                                                               N
                                                               x
                                                            
                                                         
                                                         +
                                                         
                                                            ly
                                                            
                                                               N
                                                               y
                                                            
                                                         
                                                         )
                                                      
                                                      }
                                                   
                                                   }
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

where Nx
                            and Ny
                            are, respectively, the width and height of the input images.

Instead of finding the zeros of ∇r(x,y), one can approximate them by minimizing the real-valued magnitude of the gradient [18]. In other words, the estimated displacement (dx,dy
                           ) is given by
                              
                                 (16)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   (
                                                   
                                                      d
                                                      x
                                                   
                                                   ,
                                                   
                                                      d
                                                      y
                                                   
                                                   )
                                                
                                                =
                                                
                                                   arg
                                                
                                                
                                                   min
                                                   
                                                      
                                                         (
                                                         x
                                                         ,
                                                         y
                                                         )
                                                      
                                                      ∈
                                                      N
                                                      
                                                         (
                                                         
                                                            x
                                                            0
                                                         
                                                         ,
                                                         
                                                            y
                                                            0
                                                         
                                                         )
                                                      
                                                   
                                                
                                                h
                                                
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 h
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 =
                                 
                                    ∥
                                    ∇
                                    r
                                    
                                       (
                                       x
                                       ,
                                       y
                                       )
                                    
                                    |
                                 
                                 
                                    
                                       |
                                    
                                    2
                                 
                                 ,
                                 
                                    (
                                    
                                       x
                                       0
                                    
                                    ,
                                    
                                       y
                                       0
                                    
                                    )
                                 
                              
                            is a suitable initial solution (e.g., the integer-valued displacement estimation), and 
                              
                                 N
                                 (
                                 
                                    x
                                    0
                                 
                                 ,
                                 
                                    y
                                    0
                                 
                                 )
                              
                            is a neighborhood centered at this point.

Eq. (11) shows that the spectrum of the derivative of the POC function is obtained as the normalized cross-spectrum R[k] multiplied by the frequency k. This means that r′(x) will, in general, have an increased high-frequency content with respect to r(x). If one were to compute the second derivative r″(x), it would show even more high-frequency content, making it very sensitive to noise and border effects. For this reason, it is a good idea to avoid methods based on the derivatives of h(x,y) (i.e., the second-order derivatives of the POC function) such as gradient or Newton descent methods. Instead, one can apply the Nelder–Mead (NM) method [25], which is a well-known minimization heuristic technique that relies only on the evaluation of the function to be minimized. When applying this method to minimize the POC gradient h(x,y) one requires 3 starting points; the first one is chosen to be the integer solution (x
                           0,y
                           0), and the remaining two can be chosen as (x
                           0 ± 0.5,y
                           0) and (x
                           0,y
                           0 ± 0.5) where the sign is selected depending on which neighbor is best. The reflection, expansion, and contraction coefficients we used in our tests were 
                              
                                 α
                                 =
                                 1
                                 ,
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 γ
                                 =
                                 2
                              
                           , and 
                              
                                 β
                                 =
                                 0.5
                              
                           , respectively, and the method usually converges in less than 100 iterations.

This section describes some general ideas to increase the robustness of the estimated peak locations in the presence of noise and border artifacts which may result from multiple motions. These ideas can be applied and produce significant benefits in most of the methods under study.

Most of the methods which attempt to estimate the maxima of the POC function with sub-pixel accuracy are seriously affected by noise, aliasing, and border effects, which are mostly present in the higher components of the frequency spectrum of the signals. Therefore, it is strongly suggested to limit the bandwidth of the POC function prior to the estimation of the POC maxima [16,21,17]. In many cases, a simple ideal lowpass filter is sufficient and very easy to implement, since it only requires zeroing those coefficients in R[k] corresponding to higher frequencies, before taking its inverse Fourier transform. For the GradPOC method, we can apply this filter directly in the estimation of the partial derivatives:


                        
                           
                              (17)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∂
                                                   r
                                                
                                                
                                                   ∂
                                                   x
                                                
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             =
                                             −
                                             
                                                
                                                   2
                                                   π
                                                
                                                
                                                   N
                                                   x
                                                
                                             
                                             
                                                ∑
                                                
                                                   l
                                                   =
                                                   0
                                                
                                                
                                                   
                                                      M
                                                      y
                                                   
                                                   −
                                                   1
                                                
                                             
                                             
                                                ∑
                                                
                                                   k
                                                   =
                                                   0
                                                
                                                
                                                   
                                                      M
                                                      x
                                                   
                                                   −
                                                   1
                                                
                                             
                                             k
                                             
                                                
                                                   0.35
                                                   e
                                                   m
                                                
                                                
                                                   0
                                                   e
                                                   x
                                                
                                             
                                             I
                                             
                                                {
                                                R
                                                
                                                   [
                                                   k
                                                   ,
                                                   l
                                                   ]
                                                
                                                exp
                                                
                                                   {
                                                   2
                                                   π
                                                   j
                                                   
                                                      (
                                                      
                                                         kx
                                                         
                                                            N
                                                            x
                                                         
                                                      
                                                      +
                                                      
                                                         ly
                                                         
                                                            N
                                                            y
                                                         
                                                      
                                                      )
                                                   
                                                   }
                                                
                                                }
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                     

and
                           
                              (18)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∂
                                                   r
                                                
                                                
                                                   ∂
                                                   y
                                                
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             =
                                             −
                                             
                                                
                                                   2
                                                   π
                                                
                                                
                                                   N
                                                   y
                                                
                                             
                                             
                                                ∑
                                                
                                                   l
                                                   =
                                                   0
                                                
                                                
                                                   
                                                      M
                                                      y
                                                   
                                                   −
                                                   1
                                                
                                             
                                             
                                                ∑
                                                
                                                   k
                                                   =
                                                   0
                                                
                                                
                                                   
                                                      M
                                                      x
                                                   
                                                   −
                                                   1
                                                
                                             
                                             l
                                             
                                                
                                                   0.35
                                                   e
                                                   m
                                                
                                                
                                                   0
                                                   e
                                                   x
                                                
                                             
                                             I
                                             
                                                {
                                                R
                                                
                                                   [
                                                   k
                                                   ,
                                                   l
                                                   ]
                                                
                                                exp
                                                
                                                   {
                                                   2
                                                   π
                                                   j
                                                   
                                                      (
                                                      
                                                         kx
                                                         
                                                            N
                                                            x
                                                         
                                                      
                                                      +
                                                      
                                                         ly
                                                         
                                                            N
                                                            y
                                                         
                                                      
                                                      )
                                                   
                                                   }
                                                
                                                }
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                     

where 
                           
                              
                                 M
                                 x
                              
                              =
                              
                                 ⌊
                                 κ
                                 
                                    N
                                    x
                                 
                                 ⌋
                              
                           
                         and 
                           
                              
                                 M
                                 y
                              
                              =
                              
                                 ⌊
                                 κ
                                 
                                    N
                                    y
                                 
                                 ⌋
                              
                           
                        . Here, κ represents the cutoff frequency of the filter and must be between 0 and 0.5. In general, good results are obtained with κ ≈ 0.3.

In the case of the SincFit method, applying a rectangular window (ideal lowpass filter) to the cross-spectrum results in the following fitting model [17]:
                           
                              (19)
                              
                                 
                                    
                                       
                                          
                                             r
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             ≈
                                             
                                                α
                                                
                                                   
                                                      N
                                                      x
                                                   
                                                   
                                                      N
                                                      y
                                                   
                                                
                                             
                                             
                                                
                                                   sin
                                                   {
                                                   κ
                                                   π
                                                   
                                                      (
                                                      x
                                                      +
                                                      
                                                         d
                                                         x
                                                      
                                                      )
                                                   
                                                   }
                                                
                                                
                                                   sin
                                                   {
                                                   
                                                      π
                                                      
                                                         N
                                                         x
                                                      
                                                   
                                                   
                                                      (
                                                      x
                                                      +
                                                      
                                                         d
                                                         x
                                                      
                                                      )
                                                   
                                                   }
                                                
                                             
                                             
                                                
                                                   sin
                                                   {
                                                   κ
                                                   π
                                                   
                                                      (
                                                      y
                                                      +
                                                      
                                                         d
                                                         y
                                                      
                                                      )
                                                   
                                                   }
                                                
                                                
                                                   sin
                                                   {
                                                   
                                                      π
                                                      
                                                         N
                                                         y
                                                      
                                                   
                                                   
                                                      (
                                                      y
                                                      +
                                                      
                                                         d
                                                         y
                                                      
                                                      )
                                                   
                                                   }
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The effect of bandlimiting is shown in Fig. 1
                         for the registration of a translated and slightly rotated T1 MRI image. The rotation introduces distortion and noise in the higher frequencies of the normalized cross-correlation (Fig. 1a). To reduce the effect of these distortions, a rectangular window (with cutoff 
                           
                              κ
                              =
                              0.3
                           
                        ) is applied (Fig. 1c). This results in a smoother POC function (Fig. 1d), making it easier to accurately fit a continuous function.

More sophisticated band-limiting can be performed by multiplying the normalized cross-spectrum R[k] by a suitable windowing function (such as a Hanning or Gaussian window). In [17], the effect of various windowing functions is evaluated for the sinc function fitting method. Nonetheless, the effect of different windows applied to other methods falls outside the scope of this paper.

Not all methods seem to benefit from band-limiting the phase correlation function. For example, in our experience, the performance of the QuadFit and LCM methods degrades when the POC is band-limited. This is possibly due to the fact that, since QuadFit replaces the POC data with a low-degree polynomial and LCM estimates a weighted average, they can both be already seen as smooth versions of the POC function; therefore, further filtering not only does not improve the accuracy of the results but may even decrease it.

Some of the methods under study may be more sensitive than others to the choice of band-limiting cutoff frequency. Unfortunately, the optimal cutoff frequency for each method is difficult to determine, and may even be case-dependant. If computation time is not an issue, one can estimate several displacements using different cutoff values, and then obtain a statistic (such as the mean or median) of these displacements. For example, one could obtain an estimate 
                           
                              (
                              
                                 d
                                 
                                    x
                                 
                                 
                                    (
                                    k
                                    )
                                 
                              
                              ,
                              
                                 d
                                 
                                    y
                                 
                                 
                                    (
                                    k
                                    )
                                 
                              
                              )
                           
                         for 
                           
                              k
                              =
                              0
                              ,
                              ⋯
                              ,
                              K
                              −
                              1
                           
                         using a cutoff κ
                        (k) given by:
                           
                              (20)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   κ
                                                
                                                
                                                   (
                                                   k
                                                   )
                                                
                                             
                                             =
                                             κ
                                             −
                                             σ
                                             +
                                             
                                                
                                                   2
                                                   k
                                                   σ
                                                
                                                
                                                   K
                                                   −
                                                   1
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where K is the number of sampled cutoff values, and σ represents the maximum deviation from the central cutoff value κ.

The estimated displacement can then be obtained as the median of the displacements 
                           
                              (
                              
                                 d
                                 
                                    x
                                 
                                 
                                    (
                                    k
                                    )
                                 
                              
                              ,
                              
                                 d
                                 
                                    y
                                 
                                 
                                    (
                                    k
                                    )
                                 
                              
                              )
                           
                        . Here, the median is chosen due to its increased robustness to outliers with respect to the mean.

@&#RESULTS AND DISCUSSION@&#

The comparison of the six methods under study was carried out in two stages. In the first stage, all of the discussed methods were implemented in Octave for 1D and 2D signals. For each case, a series of tests were performed, where a known fractional shift d (chosen at random) was applied to a reference signal f(x) in order to obtain a circularly-shifted version 
                        
                           g
                           (
                           x
                           )
                           =
                           f
                           (
                           x
                           −
                           d
                           )
                        
                     . Since d (or its components, in the 2D case) is not necessarily integer, spline interpolation was used to obtain a high quality version of g(x). The POC between f and g was then computed and its maxima was estimated with sub-pixel accuracy with each of the methods under discussion. The position 
                        
                           d
                           ^
                        
                      of the peak was then compared with the true displacement d to estimate an error, and the average error was computed across a large number of cases (
                        
                           n
                           =
                           100
                        
                     ). The experiment was later repeated adding white Gaussian noise to both signals f and g. In this stage, only the accuracy of the methods was tested.

In the second stage of our study, the six methods were evaluated within a rigid image registration framework. The registration algorithm was implemented in C/C++ using the OpenCV library, and it is based on the method proposed by Reddy and Chatterji [3]. LinFit was implemented using the Armadillo library for SVD [26]. Under this framework, a more thorough evaluation was carried out to test execution speed, and robustness to noise, transformation complexity and missing data.

All tests were performed in a typical PC with an Intel Core2Duo CPU running at 2.4GHz (although our implementation ran in a single core) and 4GB of RAM. The parameters used in all tests (unless stated otherwise) are as follows:
                        
                           •
                           
                              QuadFit: Cutoff 
                                 
                                    κ
                                    =
                                    1
                                 
                               (no band-limiting applied). Robustness is increased by taking the average point over four estimations using each cornering neighbor for the sixth equation of the linear system (see Section 2.1).


                              LinFit: Cutoff 
                                 
                                    κ
                                    =
                                    0.2
                                 
                              .


                              SincFit: Cutoff 
                                 
                                    κ
                                    =
                                    0.3
                                 
                              , window size 
                                 
                                    w
                                    =
                                    3
                                 
                              , 2000 gradient descent iterations maximum.


                              LCM: Cutoff 
                                 
                                    κ
                                    =
                                    1
                                 
                               (no band-limiting applied), window size 
                                 
                                    w
                                    =
                                    2
                                 
                               (5pixels in 1D, 25pixels in 2D).


                              Upsamp: Cutoff 
                                 
                                    κ
                                    =
                                    1
                                 
                               (no band-limiting applied), precision 
                                 
                                    M
                                    =
                                    8
                                 
                               (1/8pixel).


                              GradPOC: Cutoff 
                                 
                                    κ
                                    =
                                    0.3
                                 
                              , 100 Nelder–Mead iterations maximum.

The cutoff values were obtained empirically by performing several tests using cutoff values ranging from 0.1 to 0.5, aiming to minimize the average errors for synthetically-generated transformations. We settled for the value 0.3 for SincFit and GradPOC, and a cutoff of 0.2 for LinPOC.

For the 1D comparison, 100 random test cases were created, each composed of a white Gaussian noise signal f(x) with a length of 128 samples, and a known random displacement d normally distributed with zero mean and standard deviation of 8. For each test case, the estimated displacement 
                           
                              d
                              ^
                           
                         was recovered using the discussed methods and the median of the absolute error 
                           
                              
                                 |
                                 d
                                 −
                              
                              
                                 d
                                 ^
                              
                              
                                 |
                              
                           
                         was computed across all test cases. The experiment was repeated two more times, adding different amounts of white Gaussian noise to both input signals to obtain the target signal-to-noise ratio (SNR) of 10 and 2, respectively. Here we define the SNR as the ratio of the standard deviation of the uncontaminated signal, and the standard deviation of the noise. Results from these experiments are shown in the left column of Fig. 2
                         in the form of boxplots, indicating the median. Only the basic implementation of each method was used with no additional statistical robustness (i.e., 
                           
                              σ
                              =
                              0
                           
                        , according to Section 3.2).

The best results are obtained with the sinc-fitting (SincFit) and gradient estimation (GradPoc) methods, with GradPoc giving slightly better accuracy. The linear-fitting (LinFit) method performs fairly well when no noise is present, but fails quickly as the noise level is increased. At high noise levels (SNR=2) most of the methods (with the exception of LinFit and LCM) perform similarly.

A similar experiment was performed in 2D by generating 100 random circular translations of a 
                           
                              128
                              ×
                              
                              128
                           
                         grayscale version of the Lena image. Again, since the translation parameters were not necessarily integer, spline interpolation was used to obtain the translated image. The L
                        2 (Euclidean) distance between the estimated and true displacements was used as error measure. The experiment was repeated adding Gaussian noise to both input images to achieve SNR values of 10 and 2. Results are shown in the middle column of Fig. 2. The right column shows an example of the Lena image with the corresponding level of noise for each row.

These results are in line with the 1D case: the LinFit, SincFit, and GradPOC methods perform very well when no noise is present; however, in the presence of noise, LinFit is easily confounded. At high levels of noise, all methods except LinFit perform similarly.

To evaluate the methods under consideration in the context of a real application, we have implemented a rigid image registration algorithm based on the one proposed by Reddy and Chatterji [3], with the exception that the POC maxima are estimated with sub-pixel accuracy. By definition, a rigid transformation is composed only of rotations and translations; however, the proposed algorithm can also deal with isotropic scalings (equal scaling along both axes). This algorithm can be summarized in the following steps (see [3] for details):
                           
                              1.
                              Let I
                                 1 and I
                                 2 be the input images of equal size, where I
                                 2 is assumed to be a rigidly transformed version of I
                                 1.

Compute the discrete Fourier transform 
                                    
                                       
                                          I
                                          ^
                                       
                                       k
                                    
                                  of each input image Ik
                                 .

Compute the log-magnitude of the spectra Mk
                                  of each image as
                                    
                                       (21)
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         M
                                                         k
                                                      
                                                      
                                                         [
                                                         k
                                                         ,
                                                         l
                                                         ]
                                                      
                                                      =
                                                      W
                                                      
                                                         [
                                                         k
                                                         ,
                                                         l
                                                         ]
                                                      
                                                      log
                                                      
                                                         |
                                                         
                                                            
                                                               I
                                                               ^
                                                            
                                                            k
                                                         
                                                         
                                                            [
                                                            k
                                                            ,
                                                            l
                                                            ]
                                                         
                                                         |
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 where W[k,l] is the frequency response of a high-pass filter. For instance, Reddy et al. suggest using
                                    
                                       
                                          
                                             W
                                             [
                                             k
                                             ,
                                             l
                                             ]
                                             =
                                             (
                                             1
                                             −
                                             X
                                             [
                                             k
                                             ,
                                             l
                                             ]
                                             )
                                             (
                                             2
                                             −
                                             X
                                             [
                                             k
                                             ,
                                             l
                                             ]
                                             )
                                          
                                       
                                    
                                 with
                                    
                                       
                                          
                                             X
                                             
                                                [
                                                k
                                                ,
                                                l
                                                ]
                                             
                                             =
                                             cos
                                             
                                                (
                                                π
                                                k
                                                /
                                                
                                                   N
                                                   x
                                                
                                                )
                                             
                                             cos
                                             
                                                (
                                                π
                                                l
                                                /
                                                
                                                   N
                                                   y
                                                
                                                )
                                             
                                          
                                       
                                    
                                 for 
                                    
                                       −
                                       
                                          N
                                          x
                                       
                                       /
                                       2
                                       ≤
                                       k
                                       <
                                       
                                          N
                                          x
                                       
                                       /
                                       2
                                    
                                  and 
                                    
                                       −
                                       
                                          N
                                          y
                                       
                                       /
                                       2
                                       ≤
                                       l
                                       <
                                       
                                          N
                                          y
                                       
                                       /
                                       2
                                    
                                 .

Transform Mk
                                  from cartesian coordinates [x,y] to log-polar coordinates [ρ,θ], where
                                    
                                       (22)
                                       
                                          
                                             
                                                
                                                   
                                                      ρ
                                                      =
                                                      K
                                                      
                                                         
                                                            
                                                               
                                                                  x
                                                               
                                                               2
                                                            
                                                            +
                                                            
                                                               
                                                                  y
                                                               
                                                               2
                                                            
                                                         
                                                      
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       (23)
                                       
                                          
                                             
                                                
                                                   
                                                      θ
                                                      =
                                                      
                                                         
                                                            0.35
                                                            e
                                                            m
                                                         
                                                         
                                                            0
                                                            e
                                                            x
                                                         
                                                      
                                                      atan2
                                                      (
                                                      y
                                                      ,
                                                      x
                                                      )
                                                      ,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 where K is an adequate scaling factor which controls the resolution of the radius (ρ) axis. Good results are obtained with 
                                    
                                       K
                                       =
                                       (
                                       
                                          N
                                          x
                                       
                                       +
                                       
                                          N
                                          y
                                       
                                       )
                                       /
                                       8
                                    
                                 , where 
                                    
                                       
                                          N
                                          x
                                       
                                       ×
                                       
                                       
                                          N
                                          y
                                       
                                    
                                  is the size of the input images.

Compute the normalized cross-correlation RM
                                 [k,l] and the POC function rM
                                 [ρ,θ] between M
                                 1[ρ,θ] and M
                                 2[ρ,θ].

Estimate the maximum of rM
                                  with sub-pixel accuracy using any of the methods under study. The coordinates of this maximum correspond to the scaling and rotation parameters (s and ϕ, respectively) between I
                                 1 and I
                                 2.

Let 
                                    
                                       
                                          
                                             I
                                             ∼
                                          
                                          1
                                       
                                       
                                          [
                                          x
                                          ,
                                          y
                                          ]
                                       
                                       =
                                       
                                          I
                                          1
                                       
                                       
                                          (
                                          
                                             T
                                             
                                                s
                                                ,
                                                ϕ
                                             
                                          
                                          
                                             {
                                             x
                                             ,
                                             y
                                             }
                                          
                                          )
                                       
                                    
                                 , where T
                                 
                                    s,ϕ
                                  is a transformation defined as
                                    
                                       (24)
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         T
                                                         
                                                            s
                                                            ,
                                                            ϕ
                                                         
                                                      
                                                      
                                                         {
                                                         x
                                                         ,
                                                         y
                                                         }
                                                      
                                                      =
                                                      
                                                         [
                                                         
                                                            
                                                               
                                                                  
                                                                     s
                                                                     cos
                                                                     ϕ
                                                                  
                                                               
                                                               
                                                                  
                                                                     −
                                                                     s
                                                                     sin
                                                                     ϕ
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     s
                                                                     sin
                                                                     ϕ
                                                                  
                                                               
                                                               
                                                                  
                                                                     s
                                                                     cos
                                                                     ϕ
                                                                  
                                                               
                                                            
                                                         
                                                         ]
                                                      
                                                      
                                                         [
                                                         
                                                            
                                                               
                                                                  x
                                                               
                                                            
                                                            
                                                               
                                                                  y
                                                               
                                                            
                                                         
                                                         ]
                                                      
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 In other words, 
                                    
                                       
                                          I
                                          ∼
                                       
                                       1
                                    
                                  is a rectified version of I
                                 1, rotated and scaled according to the parameters found in the previous step.

Compute the normalized cross-correlation R[k,l] and the POC function r[x,y] between 
                                    
                                       
                                          I
                                          ∼
                                       
                                       1
                                    
                                  and I
                                 2.

Estimate the maximum of r with sub-pixel accuracy. The coordinates of the maximum correspond to the translation between the input images.

To evaluate the accuracy of the registrations, one can take a reference image and perform an artificial transformation with known parameters. The reference and transformed images are then registered, and the estimated parameters are compared against the true ones using the True Mean Relative Error (TRME) [27], defined as
                           
                              (25)
                              
                                 
                                    
                                       
                                          
                                             TRME
                                             
                                             =
                                             
                                             
                                                1
                                                4
                                             
                                             
                                                [
                                                
                                                   
                                                      
                                                         |
                                                         s
                                                         −
                                                      
                                                      
                                                         s
                                                         ^
                                                      
                                                      
                                                         |
                                                      
                                                   
                                                   s
                                                
                                                
                                                +
                                                
                                                
                                                   
                                                      
                                                         |
                                                         ϕ
                                                         −
                                                      
                                                      
                                                         ϕ
                                                         ^
                                                      
                                                      
                                                         |
                                                      
                                                   
                                                   ϕ
                                                
                                                
                                                +
                                                
                                                
                                                   
                                                      
                                                         |
                                                      
                                                      
                                                         d
                                                         x
                                                      
                                                      −
                                                      
                                                         
                                                            d
                                                            ^
                                                         
                                                         x
                                                      
                                                      
                                                         |
                                                      
                                                   
                                                   
                                                      d
                                                      x
                                                   
                                                
                                                
                                                +
                                                
                                                
                                                   
                                                      
                                                         |
                                                      
                                                      
                                                         d
                                                         y
                                                      
                                                      −
                                                      
                                                         
                                                            d
                                                            ^
                                                         
                                                         y
                                                      
                                                      
                                                         |
                                                      
                                                   
                                                   
                                                      d
                                                      y
                                                   
                                                
                                                ]
                                             
                                             ×
                                             
                                             100
                                             %
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where (s,ϕ,dx,dy
                        ) are the true parameters and 
                           
                              (
                              
                                 s
                                 ^
                              
                              ,
                              
                                 ϕ
                                 ^
                              
                              ,
                              
                                 
                                    d
                                    ^
                                 
                                 x
                              
                              ,
                              
                                 
                                    d
                                    ^
                                 
                                 y
                              
                              )
                           
                         the estimated ones. Note that this error measure is more sensitive to accuracy when the transformation parameters are relatively small. In order to avoid numerical instability in the TRME, one should only allow cases where all parameters have an absolute value above a given threshold, which for this paper is set to 1pixel for the translation parameters, and 1° for the rotation angle. On the other hand, a registration will be considered successful when the corresponding TRME is below 5%. For a series of N registrations, one can define the success rate as the percentage of successful registrations over the N cases. Note that when the success rate falls below 50%, the median TRME becomes meaningless, since it will correspond to a non-successful registration.

For this test, 100 randomly-generated transformations were applied to two different images: a 
                              
                                 256
                                 ×
                                 
                                 256
                              
                            T1 MRI slice (Fig. 3
                            and a 
                              
                                 512
                                 ×
                                 
                                 512
                              
                            grayscale version of the Lena image (Fig. 3b). The transformations were chosen uniformly within the following parameter ranges: rotation angle 
                              
                                 ϕ
                                 ∈
                                 [
                                 −
                                 30
                                 °
                                 ,
                                 +
                                 30
                                 °
                                 ]
                              
                           , scaling factor 
                              
                                 s
                                 ∈
                                 [
                                 
                                    
                                       2
                                    
                                    
                                       −
                                       1
                                       /
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       2
                                    
                                    
                                       1
                                       /
                                       2
                                    
                                 
                                 ]
                              
                            (approximately between 0.7 and 1.4), and translation parameters 
                              
                                 
                                    d
                                    x
                                 
                                 ,
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 
                                    d
                                    y
                                 
                                 ∈
                                 
                                    [
                                    −
                                    16
                                    ,
                                    +
                                    16
                                    ]
                                 
                              
                            for the T1 MRI image and 
                              
                                 
                                    d
                                    x
                                 
                                 ,
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 
                                    d
                                    y
                                 
                                 ∈
                                 
                                    [
                                    −
                                    32
                                    ,
                                    +
                                    32
                                    ]
                                 
                              
                            for the Lena image. We tested the basic version of the algorithms (with 
                              
                                 σ
                                 =
                                 0
                              
                           ) and, in the case of SincFit and GradPOC, a robust version with 
                              
                                 σ
                                 =
                                 0.1
                              
                            and 
                              
                                 K
                                 =
                                 5
                              
                            (as described in Section 3.2). Results are shown in Table 1
                           .

From these tests, one can see that the LCM, SincFit and GradPOC methods show the best performance in terms of accuracy, whereas QuadFit, LCM and GradPOC (with 
                              
                                 σ
                                 =
                                 0
                              
                           ) are the most computationally-efficient. Note also that the robust approach described in Section 3.2 seems to benefit GradPOC more than SincFit, at the cost of a significant increase in the computation time. On the other hand, the Upsampling method is considerably slow (due to the much larger size of the images required for the IFFT) and produces less reliable results (as the test with the Lena image shows); for this reason, we decided to remove Upsampling from the following tests.
                        

Extreme transformations with long displacements or very large or small scaling factors may cause loss of information and artificial borders due to parts of the transformed image being cropped when they lie outside of the frame. Because of this, some registration algorithms perform better when the images to register are relatively close to each other; that is, when the true transformation is relatively close to the identity. Other algorithms may perform well even with more extreme transformations.

In order to test the robustness of the methods under study against extreme transformations, nine sets composed of 100 rigid transformations were generated by uniformly sampling the transformation parameters within specific ranges determined by a complexity level a, where a takes values from 1 to 9. The chosen ranges for the transformation parameters were: 1 ± 0.1a for the scaling parameter, ± 10a degrees for the angle, and ± 10a
                           pixels for the translation parameters ( ± 5a for the T1 MRI image). To avoid numerical instability in the computation of the TRME, the angle and translation parameters were always chosen to have a magnitude above 1. For this test, no additive noise was introduced to the input images.


                           Fig. 4 graphs the success rate and median TRME with respect to the complexity level a of the transformations. As expected, as the transformation complexity increases, the success rate decreases and the median error increases. All of the methods except LinFit show a similar behavior, with LCM, SincFit and GradPOC displaying a clear advantage, particularly at lower complexity levels (a ≤ 3). At higher complexity levels (i.e., more extreme transformations), the differences in accuracy and success rate are less noticeable.

Robustness against additive Gaussian noise with varying intensity was also tested. In this experiment, the standard deviation of the additive noise was varied from 0.0 to 0.1 in a normalized scale (i.e., gray level intensities range from 0 to 1). For each noise level, 100 random transformations were generated with parameters in the following ranges: 0.7–1.4 for the scaling factor, ± 32
pixels for the translation parameters ( ± 16 in the case of the T1 MRI image), and ±30° for the angle. These parameters are approximately equivalent to a complexity level 
                              
                                 a
                                 =
                                 3
                              
                           , according to the previous test. The resulting success rate and median error are shown in Fig. 5
                           . In these tests, LCM, SincFit and GradPOC perform well with the T1 MRI image, but GradPOC has a slightly higher error in the case of the Lena image. LinFit appears to have serious difficulties to cope with the increasing noise levels.

For the next test, a circular area in the center of the transformed image was filled with zeros, effectively reducing the amount of matching data for the phase-correlation function. The radius of the circular area was chosen so that the number of pixels set to zero would be a specific percentage of the total area of the image. This percentage of missing data was varied from 0% to 15%. As in previous experiments, 100 random transformations were generated with parameters in the following ranges: 0.7–1.4 for the scaling factor, ± 32
pixels for the translation parameters ( ± 16 in the case of the T1 MRI image), and ±30° for the angle (roughly equivalent to a complexity level 
                              
                                 a
                                 =
                                 3
                              
                           ), and each transformed image was degraded with different percentages of missing data. The success rate and median error obtained from these experiments are shown in Fig. 6
                           . According to these results, the percentage of missing data has a direct impact on the success rate of all of the methods being tested, with SincFit being the most robust of the bunch. Again, LinFit seems to be unable to deal with the degradations due to missing data, especially in the case of the Lena image. On the other hand, the GradPOC method performs badly with the T1 MRI image even at modest percentages of missing data (>5%). When the percentage of missing data is above 6%, all of the methods showed a significant increase in the median error. However, it must be noted that this percentage of data is eliminated from the transformed image, so the actual amount of missing data could be much larger due to the transformation applied, especially in the case of the Lena image.

In this test, we generated a synthetic image where different rigid motions were applied to the background and foreground objects. The background consists of a tile texture from the Brodatz catalog, while the foreground is a textured smiley face. The transformation parameters were 
                              
                                 s
                                 =
                                 1.1
                                 ,
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 ϕ
                                 =
                                 10
                                 °
                                 ,
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 dx
                                 =
                                 −
                                 12.345
                              
                            and 
                              
                                 dy
                                 =
                                 14.702
                              
                            for the background, and 
                              
                                 s
                                 =
                                 0.9
                                 ,
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 ϕ
                                 =
                                 −
                                 5
                                 °
                                 ,
                                 
                                    
                                       0.35
                                       e
                                       m
                                    
                                    
                                       0
                                       e
                                       x
                                    
                                 
                                 dx
                                 =
                                 23.456
                              
                            and 
                              
                                 dy
                                 =
                                 9.876
                              
                            for the foreground. The original and transformed images are shown in Fig. 7
                           a and b. This is a clear case where a rigid registration algorithm will attempt to align only one of the objects, in this case the background since it covers a larger area of the image. Table 2 shows the TRME values comparing the true background motion with the transformations obtained from the rigid registration approach using the different sub-pixel estimation schemes, and Fig. 7c shows the best result, which was obtained with SincFit. LCM and GradPOC also produced good results (TRME<1%), while the other methods (QuadPOC, LinFit, Upsamp) were unable to align any of the objects.

The final test consists in aligning images obtained in real situations, where either the camera or the objects in the scene have moved. The true transformation is unknown and in some cases it is more complex than a rigid transformation (e.g., projective transformations); in these cases, the POC-based methods attempt to align some of the objects present in the scene. There are six test image pairs, which were obtained from different sources: Boston [28], Aerial 1 [29], Aerial 2, Face, MRI, and Bark [29]. In order to
                         quantitatively evaluate the results of the registration, we computed the root mean square error (RMSE) between the gray levels of the aligned images, over the overlapping area. The RMSE results are shown in Table 3, where the best result for each case is shown in bold face. The best results are also shown in Fig. 8
, using the red color channel for the reference image and the green color channel for the registered image; matching pixels between the aligned images should appear in yellow. These results show the same tendency as in previous tests: LCM, SincFit and GradPOC produce consistently good results, whereas the other methods do not. In average (last column of Table 3), SincFit produces the most accurate results.

@&#CONCLUSIONS@&#

Six methods for the estimation of the phase-correlation maxima with sub-pixel accuracy were evaluated. These methods included: local fitting of quadratic (QuadFit) and sinc functions (SincFit), fitting a linear function in the frequency domain (LinFit), local center of mass (LCM), up-sampling in the frequency domain (UpSamp), and minimization of the magnitude of the POC gradient (GradPOC). Various tests were performed to assess the robustness of each method against additive noise, extreme transformations, and missing data. From these tests, one can conclude that the more accurate methods at mild or moderate noise levels are LCM, SincFit and GradPOC, with SincFit having a slight edge in accuracy. At higher noise levels, all of the methods under study perform similarly, with the exception of LinFit, which seems to be extremely sensitive to noise, even at mild levels. A similar behavior is observed at increasing degrees of ranges for the transformation parameters (transformation complexity), increasing degrees of missing data, and for difficult cases such as those presented in Section 4.4. Surprisingly, the LCM method, which is the easiest to implement and the most computationally efficient, performed very well with real transformations, which makes it apt for real-time implementations, or for a first approach before implementing a more sophisticated method. In general, however, SincFit appears to be the most accurate and robust of all the evaluated methods. On the other hand, linear fitting in the frequency domain proved to be very sensitive in our tests, although it has been used successfully in certain scenarios, mostly for translational registration [22]; however, its application to rigid registration seems to be challenging due to the non-linearities introduced to the normalized cross-correlation function by the presence of rotations and scales, interpolation artefacts, and multiple motions. Finally, the Up-sampling method did not produce results that were competitive enough to justify its high computational cost.

@&#ACKNOWLEDGMENTS@&#

A. Alba was supported by CONACYT grant #154623. E. Arce was supported by CONACYT grant #168140. The authors would like to thank Otniel Garcia for providing the Face images, Aldo Mejia for the MRI images used in Section 4.4, and El Colegio de la Frontera Sur (ECOSUR) for the Aerial 2 images.

@&#REFERENCES@&#

