@&#MAIN-TITLE@&#A three stage ontology-driven solution to provide personalized care to chronic patients at home

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A three-stage approach is proposed to develop an ontology-based system to remote monitor patients at home.


                        
                        
                           
                           The developed ontology can be used to provide personalized care to remote patients with a wide range of chronic conditions.


                        
                        
                           
                           Sixteen patient profiles have been successfully designed using the ontology model.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Ontologies

Home-based telemonitoring scenarios

Chronic patients

Personalized care

Conceptual modelling

Knowledge management application

@&#ABSTRACT@&#


               
               
                  Purpose
                  The goal of this work is to contribute to personalized clinical management in home-based telemonitoring scenarios by developing an ontology-driven solution that enables a wide range of remote chronic patients to be monitored at home.
               
               
                  Methods
                  Through three stages, the challenges of integration and management were met through the ontology development and evaluation. The first stage dealt with the ontology design and implementation. The second stage dealt with the ontology application study in order to specifically address personalization issues. For both stages, interviews and working sessions were planned with clinicians. Clinical guidelines and MDs (medical device) interoperability were taken into account as well during these stages. Finally the third stage dealt with a software prototype implementation.
               
               
                  Results
                  An ontology was developed as an outcome of the first stage. The structure, based on the autonomic computing paradigm, provides a clear and simple manner to automate and integrate the data management procedure. During the second stage, the application of the ontology was studied to monitor patients with different and multiple morbidities. After this task, the ontology design was successfully adjusted to provide useful personalized medical care. In the third and final stage, a proof-of-concept on the software required to remote monitor patients by means of the ontology-based solution was developed and evaluated.
               
               
                  Conclusions
                  Our proposed ontology provides an understandable and simple solution to address integration and personalized care challenges in home-based telemonitoring scenarios. Furthermore, our three-stage approach contributes to enhance the understanding, re-usability and transferability of our solution.
               
            

@&#INTRODUCTION@&#

The development of innovative technology solutions for monitoring patients at home is nowadays one of the most interesting research areas within the field of e-Health, mainly due to the growing population with chronic conditions and disabilities in western countries [1,2]. More than a third of the population of Europe is currently affected with a chronic non-communicable disease [3]. This increasing population with chronic diseases together with the dramatic process of population aging will have a serious economic effect in terms of social security, health insurance and pensions systems [4]. This is a big issue for governments to face. One solution for reducing health costs is shifting from traditional care to the use of new technology and engineering innovations such as telemonitoring for providing care at home. By periodically collecting patients’ clinical data and transferring them to physicians located in remote sites, remote patient health status supervision and feedback provision is possible. This type of telemedicine system guarantees patient supervision while reducing costs (enabling more autonomous patient care and avoiding hospital overflows). Furthermore, patients’ quality of life and empowerment are improved [5].

In general, a typical home-based telemonitoring scenario includes two sites: the home site and the health-care site linked by a communication network. At the home site, patients themselves periodically take measurements (e.g. temperature) to monitor their current health condition according to indications provided by physicians. This information acquired using medical devices (MDs) together with patient feedback is collected in a concentrator device (HG, home gateway) used to evaluate and/or transmit the data outside the patient’s home if necessary. Depending on the type of telemonitoring system, the evaluated data can alert patients to take any necessary action while the transmitted data can make physicians aware of abnormal findings so that they can consequently take actions if required. At the health-care site, a server device is used to manage information from the home sites as well as to manage and store patients monitoring guidelines defined by clinicians (TS, Telemonitoring Server).

Data integration is a key challenge in home-based telemonitoring scenarios where heterogeneous information sources (MDs, patients and physicians) participate together in the patient’s monitoring process [6]. Data integration is required to guarantee interoperability and seamless access to data provided by all the sources involved in the process. At the home site, a wide variety of MDs using their own formats to represent and transfer data to the HG are expected to be used together for patient supervision. Regarding this issue, the ISO/IEEE 11073 (X73) family of standards has been proposed as an integrated and interoperable solution for MD data communication [7]. This standard describes how information can be exchanged between personal MDs (X73 agents) and a concentrator device or gateway (where the X73 manager is installed) used to gather all the measurements provided by the different agents. Although this is a good approach it should be used in combination with other alternatives to provide an end-to-end integrated solution. Apart from data acquired by MDs, additional information needs to be provided by patients in order to accurately describe their context thus ensuring correct diagnostic supervision and consequently be integrated in the HG. Patient’s context should be taken into account for providing personalized care services [8,9]. In addition to, this information should be related to physician’s indications. Finally, all the data collected in the HG should be transmitted to the remote site or should be evaluated in order to extract additional information that may even be required to trigger alarms. Hence, apart from data integration, integrated management tasks need to be performed in the HG.

Providing personalized healthcare services is a challenging requirement in home-based telemonitoring scenarios too [9]. No two patients are the same and consequently each one requires his/her own monitoring guidelines adapted to his/her own chronic conditions. In fact, it is very usual that patients with chronic diseases suffer more than one chronic condition (co-morbidities). The prevalence of multi-morbidity increases significantly with age in both men and women and published studies have rated it of 98% for primary care patients older than 65years [10]. These conditions affect each other, increasing the number of risk factors for patients and consequently having in general a significant link with mortality and prevalence rates, functional status and quality of life [11].

In recent times, ontology definition has been emerging as an interesting and commonly used solution to represent shared knowledge. Hence, they are a good solution to be used in home-based telemonitoring scenarios towards achieving data and management integration. In order to address the challenges described above, a three-stage approach is proposed in this paper to develop an ontology-based system for monitoring patients at home. This paper presents a new solution based on autonomic computing ideas that specifically address the challenge of providing personalized care. Flexibility, simplicity and re-usability are three key advantages of our proposal.

The remainder of the paper is structured as follows. Section 2 provides background and related work information. The framework proposal is presented in Section 3. Sections 4–6 describe the materials and methods, and present the results involved in each stage respectively. The main advantages and drawbacks of the presented solution are discussed in Section 7 and finally the conclusions are drawn in this last section too.

An ontology can be defined as a “formal, explicit specification of a shared conceptualization” [12]. In practical terms, an ontology is a hierarchy of concepts with a set of properties and relations that provides a formalized representation of a common view of a determined domain. Ontologies have gained in importance in recent years for knowledge representation and semantic interoperability in many areas including healthcare. Specifically, in the biomedical domain, this is demonstrated by the plethora of biomedical ontologies available in the OBO Foundry repository [13] and in the BioPortal repository available in the National Center for Biomedical Ontologies (NCBO) [14]. These ontologies are used, among others, to describe controlled medical vocabularies, diseases or medical procedures. See for example the Ontology for General Medical Science (OGMS) which including general terms that are used across medical disciplines provides a formal theory of disease that can be further re-used by specific disease ontologies [15]. Ontologies have been used also to facilitate the communication and solve interoperability problems when different entities deal with the same data [16–26]. According to [27], there are different categories of ontology applications and scenarios and consequently differences in the role of the ontology and its purpose.

Ontologies have been successfully applied in the telemonitoring scenario and other solutions have been reported regarding remote control of patients with chronic conditions. On the one hand, good examples of ontology usage in the telemonitoring domain for specific chronic patients can be found in [16,17]. An ontology-based system to monitor patients suffering from a degenerative disease such Alzheimer’s is proposed in [16] and for dementia supervision in [17]. On the other hand, other works have been reported regarding the use of ontologies and semantic tools for monitoring patients with generic chronic and multi-chronic conditions. See for example the 4KCARE (Knowledge-Based Home Care eServices for an Aging Europe) project [18], which includes the use of ontologies for representing actors [19], diseases and symptoms and also formal intervention plans [20]. Another example can be seen in [21] where a context management middleware to support health information exchange and alerts handling for patient supervision in telemonitoring scenarios is presented. The Aingeru system [22] is another good example of how ontologies can be used for continuous and pervasive monitoring of elderly people. A common and good point of these last works is that address the challenging task of personalization or customization of intervention plans. This challenge was also addressed in our work and indeed is one of the key advantages of our proposal. Our second stage presents a complete application study which aims to demonstrate how personalization can be achieved to monitor chronic and multi-chronic patients with our proposed ontology. Related with that, a remarkable approach for adaptation of clinical guidelines and creation of individual plans is presented in [23].

Main advantages and limitations of the use of the agent-oriented paradigm to develop autonomic systems in the healthcare domain are studied and reported in [24]. While personalization, efficiency and flexibility are highlighted positive features, limitations of reported solutions rely in its difficulty to be extended and thus staying as prototype solutions. Inspired on the autonomic computing paradigm our proposed solution aims to reduce complexity and to offer a re-usable framework which we have already studied for technical management in telemonitoring scenarios [28]. This constitutes an innovation regarding other presented solutions [20–23]. In addition, the presented methodology enhances the understanding of the proposal, provides details about materials and methods involved within the design and development of the ontology and improves the re-usability of our solution for other telemonitoring applications.

Other approaches for implementing home-based telemonitoring systems make use of combination of standards in order to address the integration and interoperability challenges [29]. In contrast, our solution is not limited to the use of one of them but making possible its combination with any of them. Note that mobile technologies and wearable devices have been successfully studied to support the implementation of home-based telemonitoring systems enhancing in this way the mobility and independence of the patient [30,31]. This is an interesting scenario for future applications of our proposed framework.

The telemonitoring process, and thus the data required to supervise the evolution of patients’ health status, is managed through indications provided by physicians. These include instructions about the number and frequency of measurements the patient should make (and transmit) and sometimes the setting of alarms in order to be alerted if an abnormal finding is detected. All this information comprising physicians’ indications, measurement results and patient information have been termed in this document as the patient profile.

The ontology-based system developed and presented in this paper aims to describe and model the tasks specified within a patient profile. As depicted in Fig. 1
                     , our system-design approach is divided into three stages: ontology engineering, application-based study and prototype development. These stages were based and built upon on well-known generic stages within the development of an ontology [32]. They were adapted in order to specifically study and address the challenges presented in the telemonitoring scenario. Published literature related to the development of a health information system based on ontologies was considered too [26]. The inputs required to carry out each stage are represented on the left side of the image (materials involved in each stage), the actions performed in the centre and the outcomes or results of each stage on the right.

As shown in Fig. 1, the conceptual level of the solution consisted on a dynamic ontology development and evaluation during stages one and two. The first stage, the ontology engineering stage, comprised two sub-stages addressing first the specification, conceptualization and formalization of the ontology and then its implementation [26,32]. The main objective was to develop a basic model that included common parameters to be monitored in patients with chronic conditions, thus making easy its refinement during the stage 2. After stage 1 and 2, it could be said that the model is general in a way that any patient presenting one or several of the conditions studied could be monitored with our model. The ontology presented in this section is the final version of the ontology.

After a review of home-based telemonitoring systems [1,2,16–22,24], a list of competency questions relating to the knowledge to be expressed in the ontology was initially formulated in order to determine its scope and define its structure [33]. In order to define concepts included in the ontology and the taxonomy of their relations, two main research tasks were then carried out. First, clinicians meetings were scheduled and, secondly, the X73 standard was reviewed (see Fig. 1). For the first task, a total of 20h of meetings were arranged with clinical staff (2 physicians) in order to identify two types of data: (1) information that could be acquired in a home-based telemonitoring scenario to be monitored for patient supervision (e.g. vital signs measurements) and (2) contextual information that could influence a measurement result and that should be additionally provided by the patient.

In order to derive all data that should be modelled in the ontology, clinicians identified parameters that could be easily acquired at home and useful to supervise different types of patients with chronic conditions. Data included in the ontology referred to simple measurements that could be easily acquired by the patient. Complex data such as ECG signals were discarded in this approach. This information was used to model the measurements and the information that may affect them. The resulting model included data not confined to monitor a patient with one chronic disease but a set of parameters which combination may be useful to monitor different cases of patients.

After the meetings with clinicians, the X73 standard was also reviewed in order to take into account MDs data format and interoperability issues. Although this is a good approach, the current situation is that the standard has not been implemented yet in the majority of the MDs vendors, consequently each one may use different models to describe data transferred from their MDs. However, they share common parameters which could be included in the ontology. In this way, reviewing the standard our goal was to take advantage of the efforts already done to unify these existing heterogeneous models and thus provide with a very complete view of the mentioned parameters. This information was used to describe vital signs and body measurement results in terms of units and data type values, and to know how much of the information that could be provided by a MD needs to be collected for a patient’s evaluation.

The OWL-DL language (an OWL – Ontology Web Language – sublanguage) was chosen to describe the ontology model [34]. OWL is a vocabulary extension of RDF (Resource Description Framework) [35]. It describes the structure of a domain in terms of classes and properties and provides a set of axioms to express assumptions or equivalences with respect to classes or properties. The OWL DL was chosen to write the ontology because it provides the maximum expressivity capacity that can be offered while guaranteeing total computational capacity. The ontology was implemented by using the Protégé-OWL v.4.0.2 ontology editor and its consistency was checked using the FACT++ reasoner [36].

In order to provide personalized monitoring services, apart from an instance of the patient profile ontology, a number of rules should be individually defined for each patient. By using rules, the behaviour of individuals can be expressed inside a domain and thus can be used to express individual alarms according to patients’ conditions. In fact, rule-based systems have been extensively used in applications that require personalized services [21,37]. Specifically, the SPARQL (SPARQL Protocol and RDF Query Language) language was selected to express rules to be applied over the patient profile instances [38]. Although SPARQL is a query language, it offers substantial power to filter individuals with specific characteristics, and by using CONSTRUCT and FILTER clauses it can be used to define IF/THEN rules. Therefore, SPARQL rules can be used to define personalized care tasks according to patients’ conditions.

As an outcome of this first stage, a formal conceptual schema to define individual patient profiles was achieved in which data provided by the different sources participating in the telemonitoring process could be mapped. This ontology was proposed as an extension of the HOTMES (Home Ontology for inTegrated Management in homE-based Scenarios) ontology presented in [28]. This HOTMES ontology offered a solution for data and management integration that could be used to manage any type of data in home-based scenarios. It was thus applied to manage clinical data in home-based telemonitoring scenarios by means of defining a patient profile.

The main core of the HOTMES ontology was inspired by the autonomic computing initiative [39]. This paradigm was selected in order to provide a clear and simple workflow of the management procedure aiming to enhance the re-usability of the ontology model for any particular case of management. According to this initiative, an autonomic element implements a closed-control loop that dictates the work flow of the system behaviour [37,39]. Implementing this classic control loop, also known as the MAPE (Monitor Analyse Plan Execute) process, the state of the resource domain is first monitored and then analysed. A plan to react to (and if necessary to correct) the situation is done and finally executed.

The main components of the HOTMES clinical ontology are presented in Fig. 2
                           . According to the ontology, a patient profile will be composed of four different types of tasks: monitoring tasks, analysis tasks, planning tasks and execution tasks. The relation between tasks is established by conditions expressed using rules. Hence, apart from using these rules for personalization, they are used to sequence the tasks that comprise the closed loop. In this way, associated to each monitoring task there will be an analysis task, a planning task and at least one execution task. Each patient profile is associated to monitor a patient and will be defined by a physician (see Fig. 2).

The general HOTMES ontology describes how to manage data that is going to be acquired at home. Specifically it describes what a monitoring, an analysis, a planning and an execution tasks are. The HOTMES clinical ontology extends the HOTMES ontology by modelling in the ontology the information required to monitor the patient’s health status within the Monitoring Task class. All this information has been divided into four groups represented in the ontology as four classes (subclasses of the Control Information class). Furthermore, the Polling Task (subclass of the Monitoring Task) was slightly modified in order to include the Reminders concept (alarms directed to patients) in the ontology. An instance of a Monitoring Task should be configured to collect each type of data (e.g. vital–body measurements) to be controlled. As depicted in Fig. 2, there are two ways of collecting data: by polling (Polling Task class) or by events (Event Task class). By polling, patients are required to provide some information following a reminder which will be activated in order to alert them about the action they should perform. In this way, a physician can schedule a patient to perform a blood pressure measurement or to take a prescribed medication once per day.

An instance of the Analysis Task should be configured to analyse acquired data and be able to configure alarms associated to find an abnormal value after its analysis. An instance of a Syntactical Analysis will be configured in order to compare string datatype values acquired in the home-based scenario such as, for example, a response provided by the patient to a question configured by the physician. An instance of a Mathematical Analysis will be configured in order to compare a numeric value (normally after being mathematically manipulated though a process) with a threshold configured by the physician. These processes can be simple or complex. By defining an analysis task it is possible to evaluate e.g. the temperature value provided by a thermometer to know whether it is within a normal range for this patient or to configure a check of the temperature value conditioned to a pressure-measurement evaluation.

A planning task will be activated if the associated pre and post conditions (expressed by rules) are true. In general, they will be activated after obtaining a positive value in an analysis task in order to execute the correct actions to solve the observed problem. These actions will be defined as instances of the Execution Task class. For instance, a planning task consisting of warning the physician by e-mail and advising the patient to repeat the measurement can be configured.

The version of the HOTMES ontology for clinical application contains 173 classes, 123 object properties, 90 datatype properties and 82 individuals. Furthermore, 75 annotations properties have been included in the ontology. Forty-nine out of these are used to relate terms from the ontology with the X73 standard.

The data identified by physicians as being of interest for monitoring patients at home were classified into four groups described in the ontology as four general classes: Environmental Information, Health Qualitative Information, Health Quantitative Information and Vital–Body Measurement (see Fig. 2).

The Environmental Information class includes Humidity Environment, Patient Location and Temperature Environment subclasses. For patients with chronic obstructive pulmonary disease (COPD) or asthma diseases, it may be useful to collect information about the environmental characteristics of the room where they perform the measurements.


                           Health Qualitative Information refers to subjective information provided by patients such as their stress level, mood or specific answers to personalized questions. This information is quite useful for example in supervising patients with mental disorders or for controlling adverse reactions caused by medication at the start of a new treatment. This section includes two subclasses: General Health Info and Health Tests Questionnaires. On the one hand, an instance of General Health Info could be configured in order to ask patients about routine activities or mood levels. On the other hand, an instance of Health Tests Questionnaires can be configured in order to detail a sequence of questions (e.g. about physical symptoms) that together with measurements data or by themselves could indicate that the patient is getting better or worse.


                           Health Quantitative Information refers to quantitative information that is not acquired by an MD. The following subclasses of the Health Quantitative Information class have been defined: Smoked Cigarettes, Food Quantity, Liquid Quantity and Medication. This information can be useful for patient supervision. For instance, controlling the quantity of food intake can be very interesting for following up patients with obesity or thyroid disorders.

Finally, 11 measurements were identified and included in the ontology as subclasses of the Vital–Body Measurement class. These measurements subclasses are: Temperature, Weight, Height, Blood Pressure (Systolic, Diastolic and MAP, modelled as three different subclasses), Glucose, Pulse Rate, SpO2, HbA1c, FEV1, Body Water and Body Fat. Concepts described in the ontology were related to standardized terms in medicine by using the SNOMED-CT (Systematized Nomenclature of Medicine-Clinical Terms) nomenclature [40]. These codes were included in the ontology as individuals of subclasses of the Measurement Code class, one for each type of measurement represented in the ontology (e.g. Systolic Pressure Code).

The information used to describe the clinical concepts (located under the Monitoring Task) has been organized in two levels: (1) the configuration level, (2) the results data level. The first level gathers properties used to characterize a clinical concept. An instance of these classes should be configured by the physician when defining the patient profile related with a monitoring task. The second level gathers properties used to characterize the corresponding clinical datum (a piece of data retrieved at a certain time). Hence, it describes all the data eventually retrieved from the patient’s supervision.

An example of a vital–body measurement model (for systolic pressure) can be seen in Fig. 3
                           . The concepts associated to the first level correspond to configured information provided by the physician. The second level corresponds to the datum acquired by using a MD and the additional contextual information (that may be provided by the patient) required to evaluate each measurement. For example, for the case of blood pressure, the physicians indicated that apart from reporting the data value of the pressure measurements, patients should provide information about the arm with which they have taken the measurement (left or right), the patient’s position (sitting down, standing up or lying down) and if he/she had taken any stimulating substances during the hour prior to taking the measurement (such as coffee, medication and tobacco). Information regarding the general characteristics of the MD is also collected (e.g. type of system: blood pressure monitor).

As stated in [33], there is no single correct way to model a domain. The best solution depends on the application where it is going to be used. As long as the ontology helps to provide good results for a given task, it could be said that the ontology is good for that application [41]. Hence, different cases of use of the proposed ontology were studied during this stage. This stage involved two sub-phases: (1) chronic patient profile specification, (2) multi-chronic patient profile specification.

The goal of the first sub-stage was to do a further refinement of the ontology after studying in detail specific types of chronic pathologies. Light improvements were included in the ontology after the chronic patient profile specification sub-stage. Specifically these modifications led to a refinement of the Health Qualitative Questionnaire, the Medication and the FEV1 classes. The main core of the ontology was not modified.

In the second sub-stage, the ontology adaptability (used to measure how far the ontology anticipates its uses [42]) and completeness were studied to verify the use of the ontology for defining new patient profiles for the supervision of co-morbid chronic patients. It was our hypothesis that the ontology could be used to define new and more complex patient profiles for patients presenting more than one of the pathologies studied in previous stage.

For the purposes of this stage a physician identified 11 different types of patients with one general chronic condition as possible candidates for remote supervision. Consequently, 11 chronic patient profiles were defined. These configured patient profiles (chronic patient profiles) were used to supervise patients with the following chronic conditions: (1) COPD, (2) obesity, (3) thyroid disorders, (4) ischemic heart disease (IHD), (5) asthma, (6) hypertension (HTA) or high blood pressure, (7) osteoporosis (OPO), (8) heart failure (HF), often called congestive heart failure (CHF), (9) diabetes mellitus (DM), (10) dyslipidaemia (DLP) and (11) osteoarthritis (OA). These specific patient profiles where configured because these are the main chronic cases reported in the daily primary care and cover diseases prevalent in a high percentage of population. Cardiovascular diseases, chronic respiratory diseases and diabetes have been reported together with cancer as leading causes of mortality in the world. Raised blood pressure and overweight are major risk factors for e.g. coronary diseases [55]. Regarding the last one and according to data from WHO (World Health Organization), prevalence was estimated 15.6% for patients with obesity (BMI, body mass index >30kg/m2) over 18years in 2007 in our country, Spain [56]. As another example, according to a study conducted from May 2006 to July 2007, COPD prevalence in our country represents 10, 2% of population between 40 and 80years old [57]. Rheumatic diseases (e.g. osteoarthritis) and osteoporosis are also highly prevalence [58,59]. Specifically, complications of osteoporosis derive in an increase in fragility fractures leading to morbidity.

The primary care physician followed published standard clinical guidelines to configure the patient’s profiles 
                           [43–53]. Representing clinical guidelines in an electronic format is a complex issue [54]. Our goal in this work was to configure a subset of simple but useful monitoring guidelines by means of tasks plus rules. This patient profile specification sub-stage included two steps: Step (1) profile specification (related to the definition of instances of the ontology), and Step (2) personalization (related to the definition of rules). The first step consisted on defining measurements to be monitored for each type of patient, reminders, data to be analysed and actions to be taken. The data defined in this step was used to identify the instances of the ontology required to configure a patient profile. In order to define the profile, a Patient Profile questionnaire was designed and then completed by the physician in order to describe all the requirements for monitoring each type of patient. The Patient Profile questionnaires included questions about the vital signs and body measurements required to be controlled. They were also asked whether the patient environment could affect the acquired measurement result and if the patient should provide any additional qualitative information regarding physiological symptoms or quantitative information such as e.g. the number of cigarettes smoked. At the end, they had to indicate which alarms should be configured both for reminding patients about performing an action and for warning the physician about something abnormal.

During the second step, the physician was asked about the specific data values for triggering a defined clinical alarm. The data defined in this step were related to the rules definition for the analysis task and planning task activation. The rules were used to provide personalized care and to distinguish between each patient profile with the same definition of instances for two patients with the same pathology (e.g. COPD) but with different levels of restrictions in their supervision. For instance, for a COPD patient a physician can configure one single rule in order to detect serious COPD, such as “IF FEV1 is <30% THEN activate alarm”. However, for another patient, the physician can limit the supervision further and configure rules to detect serious, mild and slight COPD for different FEV1 range values. Apart from the specific values, the physician was also asked whether the clinical alarm should be conditioned by the contextual information relating to the acquired measurement. This information is converted into a set of IF/THEN rules.

Five patient profiles (multi-chronic patient profiles) for patients with co-morbidities (among many other possibilities) were designed in this phase: (1) MCD (multi-chronic diseases) 1: DM+IHD, (2) MCD 2: obesity+DLP, (3) MCD 3: osteoporosis+HTA, (4) MCD4: COPD+HF, (5) MCD 5: obesity+DLP+DM+HTA. The physician designed these profiles by using the same questionnaires as those used to define the chronic patient profiles, and the same steps were followed. These are, in fact, the steps for generating new patients’ profiles.


                           Fig. 4
                            illustrates the relation between the information contained in the Patient Profile questionnaires together with the IF/THEN values for alarm configurations as indicated by the physician and the tasks described in the ontology. Monitoring patient data is done by defining instances of the Monitoring Task class. Clinical alarms are directly related to analysis task which will be associated to one monitoring task, and consequently patient’s data. Furthermore, some rules should be configured in order to evaluate the analysis result within a range and in this way determine the threshold that will trigger the alarm. Actions to be performed after clinical alarm detection are related to planning and execution tasks. By using rules, they will be linked to the activation of the analysis task.

In order to illustrate the design of a patient profile (ontology instances and rules), a COPD patient profile configuration is presented. COPD includes two main illnesses: chronic bronchitis and emphysema, a pair of commonly co-existing diseases of the lungs in which theairwaysbecome narrowed. This leads to a limitation of the flow of air to and from the lungs, causingshortness of breath. There is no cure for COPD and it is almost always caused by cigarette smoking [43]. The requirements for the supervision of this type of patient configured by the physician are depicted in Table 1
                           . As explained in Section 5.1.3, the data to be monitored directly corresponds to the required instances of the Monitoring Tasks. All of them taken together are described as the polling task, and reminders have been configured to ask the patient for the relevant clinical data. Each reminder should be activated at the scheduled days (d) and at the specified hour (h) as depicted in Table 1. Moreover the defined alarms associated to each configured data have been included in the table.

According to the mapping schema presented in Fig. 4, a total of 15 monitoring tasks (one for each monitored data although it should be noted that 3 monitoring tasks should be configured to control blood pressure), 11 analysis tasks (one for each data to be evaluated within a range), 9 planning tasks (depending on the analysis tasks that should be evaluated together to perform an execution task) and 3 execution tasks were required to configure the patient profile for a COPD patient. Furthermore, 18 rules had to be also configured. Regarding the number of execution tasks, only three actions were included in the evaluation and in all the configured patient profiles: (1) A1: warning physician, (2) A2: warning patient and (3) A3: indicate patient to repeat a measurement after 10min in a relaxed manner.

An example of the instances included in the COPD patient profile instance regarding alarm 1 for blood pressure measurement can be seen in Fig. 5
                           . It can be seen that both systolic and diastolic pressure measurements were included for monitoring by using a polling task. Both of them were activated by the same reminder (reminder_COPD_1). Then, two mathematical analyses were associated to perform an atomic process (one step process) which analyses the absolute value of the diastolic and systolic pressure datum, respectively. The evaluation criterion was then executed by means of two rules (see Fig. 6
                           ) which turn the result of the analysis task into a positive value. As can be seen, the first analysis will be positive if the systolic value is under 100mmHg and the second one if the diastolic value is under 70mmHg. Finally, the planning task which comprises the execution of the three actions (A1, 2 and 3) described in Section 4.2.1 will be activated, reporting that a blood pressure alarm has been triggered if both analysis tasks are positive. This statement is expressed as two preconditions of the activation of the planning task (see Fig. 6).

According to the profiles defined by the physician (using the Patient Profiles questionnaires), the corresponding monitoring, analysis, planning and execution tasks were configured in order to define the required tasks (information to be controlled and alarms) for each type of defined profile. Table 2
                            depicts the relation between the information required to be monitored as defined in the Patient Profile questionnaires and the number of tasks required from the ontology to configure each patient profile instance. The mapping process between the monitoring requirements specified in each profile and the tasks contained in the ontology was manually done by engineers using the Protégé editor. Additional research would be required to develop an interface that would automatically map physicians’ information into the MAPE tasks, thus making it easier for physicians to define the profiles through the ontology model.

As depicted in Table 2, there are significant differences regarding the number of monitoring, analysis and planning tasks required to configure each profile. Regarding the chronic patient profiles, the mean number of monitoring tasks configured in each profile was 12 tasks, the osteoporosis profile requiring the smallest number of tasks (5) and the asthma profile requiring the largest (16). For example, for the asthma profile, 8 vital–body measurements were selected for monitoring but environmental information, number of smoked cigarettes and medication had also to be controlled. Furthermore, an asthma exacerbation detection questionnaire test was included (Health Test Questionnaire). This questionnaire included questions such as: “Have you got signs of a cold (sneezing, runny nose, cough, sore throat, and headache) or allergies?” or “Do you feel chest tightness, pain, or pressure?”. A positive answer was configured to be detected through an analysis task and consequently used to trigger an alarm.

Regarding MCD profiles, it can be seen that the same number of tasks were required to monitor a patient with diabetes as a patient with diabetes and ischemic. The main difference between these profiles lies in the health test questionnaire configuration. While normally ischemic patients feel chest pains when a heart attack occurs, diabetes patients often experience stomach ache or epigastrium for the same heart attack event. Consequently, this question should be modified in the profile. MCD 2, 3 and 4 profiles included the mixture of requirements of both related diseases. As can be seen in Table 2, the main difference between chronic and multi-chronic profiles lies in the amount of quantitative and qualitative information rather than in the vital–body measurements performed. Nevertheless, after completing Step 1 (instances definition) some alarm values can be modified and be more restrictive during Step 2 (rules configuration) if one pathology affects another (e.g. the blood pressure for obesity patients).


                           Table 2 also depicts the number of required instances and rules to configure each profile. The number of rules is directly related to the number and complexity of configured alarms in each profile (also with the number of analysis tasks defined in each one). Thyroid disorders, obesity and asthma profiles require a larger number of rules to completely configure a profile for the supervision of these diseases. It should be noted that using the same type of patient profile (e.g. COPD), it is possible to particularize and personalize supervision of two different patients by simply modifying the rules.

Although most of the alarms configured by physicians were related to the evaluation of the absolute value of a vital–body measurement within a range, such as in the blood pressure case, alarms conditioned to the evaluation of several measurements or after a mathematical manipulation process (such as the BMI alarm) were also described within the Patient Profile questionnaire and then successfully addressed with the HOTMES clinical ontology structure.

The last stage of the three-stage approach was practical. It consisted on a proof-of-concept of the software agent required to hold the ontology, the patient profile instance and the rules, and to run the tasks specified in the patient profile. This prototype, called Semantic Autonomic Agent was designed to be installed in the HG, at the home site where the patient is located. Hence, it would be used by the patient to manage his/her disease.

This tool was required to manipulate and map incoming data into the new format (data integration) provided by the MDs and the patient and to run the management tasks specified in the patient profile (management integration). Java technologies were used to develop this agent. Specifically, the Jena framework (version 2.8.6) was used to process the ontology, create new instances and apply SPARQL queries [60]. Moreover, the TDB triple-store (version 0.87) has been used to store the ontology model and the patient profile instance in the HG [61].

Once the patient profile has been downloaded by the patient, the configured reminders are initiated. Every time that data is transferred or introduced by the patient (data not acquired by an MD), the prototype working mode follows the workflow depicted in Fig. 7
                           . It can be seen that when a new datum is introduced in the system, the prototype checks first if there is any monitoring task associated with collecting that type of data. In the case of a vital–body measurement, then some pop-ups will be activated in order to ask the patient about the contextual information required to create a new datum instance according to the ontology model (see Fig. 7 where pop-ups associated to a glucose measurement have been included). Note that this new instance is introduced as part of the patient profile and comprises both the MD data and the patient contextual information. It will then check if there is any analysis task in the profile associated to a previous monitoring task. If there is, then the mathematical or syntactical process will be performed and after that the rules will be applied over the model (in the example case, the analysis task is associated with detecting a glucose measurement over 126mg/dl). As a consequence, planning tasks can be activated if pre-conditions and post-conditions are fulfilled. Finally, execution tasks will be performed (in the example, to pop-up an alarm to the patient and send an email to notify the corresponding physician about this finding).

The performance of the Semantic Autonomic Agent has been evaluated in terms of memory cost, computational cost and storage cost. Memory cost refers to the amount of memory allocated to the agent process. The memory allocated to the agent process was measured using the Windows Task Manager. The initial required memory allocated to the agent was measured (static memory). Then, for all the tests performed, memory cost was measured in terms of increments related to this static memory. Computational cost refers to the processing activity at the entity. This parameter was also measured using the Windows Task Manager. Finally, storage cost refers to the size of the database observed during the management procedure to hold the ontology and the instances. In order to test the functionality of the agent for telemonitoring patients, some tests have been performed using a simulated scenario. The test scenario included the developed Semantic Autonomic Agent with the web client located on a 1.6GHz i7 Intel Core running Windows 7. Data transmissions for seven different MDs were simulated.

All the patient profiles developed to evaluate the applicability of the ontology for monitoring different patient types were used to test the agent performance. The tests consisted on running the agent in order to perform the tasks described in the profile, thus monitoring the patient. The agent was running during 1h including periods with high and low activity. Polling tasks were configured to retrieve data every 2min (hence, reminders for patients to take measurements or provide some information were activated every 2min). Events were manually simulated in periods with irregular activity (5min active periods every 1min and every 5min). 50% of the simulated transferences led to the activation of an alarm. After repeating the test with all the chronic profiles, it was observed that in average, an increase of 48.327KB in memory was required regarding the initial (or static) memory allocated for the agent (83.476KB). The average of the CPU measured was 0.7%. Finally, the size of the required database increased from 1.33MB to 1.8MB after the evaluation. There was no significant differences worth to mention between the functionality of the agent with the tested profiles. The increase in the consumed resources was directly related with the increase of instances and rules required.

@&#DISCUSSION AND CONCLUSIONS@&#

Our purpose is to offer through three simple stages a solution based on ontologies to provide personalized monitoring services for patients with any of a wide range of chronic conditions in a telemonitoring scenario. Presenting the work through the three stages, actions involved in each stage are clearly described enhancing its understanding, re-usability and transferability of both the ontology and the methodology for different domains or applications. Furthermore our approach makes some additional key contributions regarding other ontology-based solutions to monitor patients at home [16,20–22]. First, not only clinical knowledge was taken into account for the ontology development but also the interoperability and integration of MDs was considered. Patients’ contextual data was also included in the profile. In this way, the final ontology design aims to integrate the different heterogeneous sources involved in the telemonitoring process. Furthermore, the ontology model design describes a generic patient profile not limited to monitor patients with only one particular chronic condition [16,17]. It provides the advantage of creating, as instances of the patient profile class, monitoring profiles to supervise patients with different conditions and co-morbidities, as studied in the application-based study stage. Specifically, our ontology was validated and adjusted according to the cases studied within this second stage.

The designed ontology and the use of rules provide a good and flexible solution for personalized monitoring services. Indeed, this application-based study is one of the key contributions of this paper [20–23]. It was proposed to deal with the personalization challenge and could be re-used to evaluate other systems used for telemonitoring purposes. Regarding this line, we are currently working in the development of a tool that permits to easily configure a personalized patient profile considering both cognitive methods for visualization and usability.

The 16 patient profiles used in this application-based study were designed by one primary care physician following standard clinical guidelines. Aiming to complete our study, we planned a meeting with five different experts involved in the different chronic diseases to be included in the system. We asked them to perform two tasks: (1) modify if required the 16 configured patient’s profiles, (2) identify additional patient candidates to be monitored at home and additional information to be included in the ontology. For the first task, it was found that despite light differences in the patient’s profiles configuration, no additional modifications had to be included in the ontology to be able to define the patient’s profiles. Two of them suggested that temperature could be monitored for COPD patients as well and they configured the same alarms defined in the asthma profile. Four of them suggested that weight should be monitored more often for HF patients and suggested to include a test for diet supervision and exercise practice for the dyslipidaemia profile. The interviewed physicians suggested additional profiles candidates to be monitored at home. For example, they pointed out that patients without specific pathologies but under a medication treatment could be supervised at home too.

The generality of our model is limited to the chronic conditions that were specifically studied within the application based study. As explained in Section 5, these represent a wide range of pathologies that can be monitored at home. The ontology could be easily extended to include additional information or more complex analysis processes if required to monitor other type of patients. New data to be monitored could be modelled as subclasses of the Control Information class and analysis processes as subclasses of the Analysis Task class. For example, the INR (international normalized ratio) measurement should be included if the solution is studied for the supervision of patients under anti-coagulant therapy control.

Our ontology-based approach was designed to represent not only data modelling but also modelling of the management procedure execution, that is to say the workflow that dictates the management service and the automation of the patient care tasks. The application of the MAPE paradigm to the remote management of patients provides a simple, clear and easily understandable way of controlling and evaluating patients’ clinical data, and its combination with ontologies constitutes an innovative application in the healthcare domain and difference regarding other solutions [16,17,20–22].

The results of the evaluation performance show that this prototype implementation does not consume many resources. Memory and computational costs were not high in the performed test. These results lead us to conclude that this prototype implementation could be viable in wearable and small devices. Nevertheless, advanced research into its specific implementation together with hardware measurements should be carried out in order to substantiate this assessment. Although the definition of if-then rules is a suitable vehicle to identify critical events it can lead to generate false positives and consequently the problem of generating a large amount of them should be studied [62].

Semantic interoperability and individualization of care services are cornerstones within the development of health services systems in home-based telemonitoring scenarios that can be successfully addressed by ontology-driven solutions. While benefits can be reported in terms of flexibility and empowerment, limitations of telemonitoring systems should be also carefully studied before its final implementation [63]. Specifically safety concerns should be carefully analysed for each individual case and since we are dealing with alarm activation, time dimension should be evaluated as well.

@&#ACKNOWLEDGMENTS@&#

The authors are pleased to thank Dr. Rosa Magallón for her contribution to this work. This research work has been supported by project TIN-2011-23792 from Ministerio de Economía y Competitividad (MINECO), European Regional Development Fund (ERDF), Diputación General de Aragón (DGA) and European Social Fund (ESF).

@&#REFERENCES@&#

