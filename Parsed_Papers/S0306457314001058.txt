@&#MAIN-TITLE@&#Burst-aware data fusion for microblog search

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We tackle the problem of microblog search differently, by data fusion.


                        
                        
                           
                           We propose to integrate temporal characteristics into data fusion.


                        
                        
                           
                           We propose a novel and effective probabilistic data fusion model for microblog search.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Information retrieval

Microblog search

Rank aggregation

Burst detection

Temporal information retrieval

@&#ABSTRACT@&#


               
               
                  We consider the problem of searching posts in microblog environments. We frame this microblog post search problem as a late data fusion problem. Previous work on data fusion has mainly focused on aggregating document lists based on retrieval status values or ranks of documents without fully utilizing temporal features of the set of documents being fused. Additionally, previous work on data fusion has often worked on the assumption that only documents that are highly ranked in many of the lists are likely to be of relevance. We propose BurstFuseX, a fusion model that not only utilizes a microblog post’s ranking information but also exploits its publication time. BurstFuseX builds on an existing fusion method and rewards posts that are published in or near a burst of posts that are highly ranked in many of the lists being aggregated. We experimentally verify the effectiveness of the proposed late data fusion algorithm, and demonstrate that in terms of mean average precision it significantly outperforms the standard, state-of-the-art fusion approaches as well as burst or time-sensitive retrieval methods.
               
            

@&#INTRODUCTION@&#

Microblogging platforms, such as Twitter,
                        1
                        
                           http://www.twitter.com.
                     
                     
                        1
                      have become indispensable communication channels through which hundreds of millions of users around the world witness breaking news events. The characteristics of the posts, such as their limited length, along with easy access on many platforms, facilitate regular status updates by large numbers of people (Zhao & Rosson, 2009). Microblogging platforms display fast paced dynamics as reflected by rapidly evolving topics (Yang & Leskovec, 2011). Searching posts in such rapidly changing environments is a challenge (Ounis, Macdonald, Lin, & Soboroff, 2011). To tackle this problem, much previous work has focused on content-based criteria for ranking posts in response to a query, in combination with a broad range of other ranking criteria, including, e.g., existence of hyperlinks, hashtags and retweets.

Fusion is a popular method for generating result lists based on multiple ranking criteria. Previous research has found that data fusion can enhance the retrieval performance in many cases (Dong & Srivastava, 2013; Shaw, Fox, Shaw, & Fox, 1994; Wu, 2012). In this paper, we look at the problem of searching microblog posts as a late data fusion task (Shaw et al., 1994): we fuse ranked lists of posts produced by a diverse set of microblog post rankers into a single final ranked list of posts. In the following, we consider the case where only ranks and publication times are available and no other additional information is provided such as the retrieval status values or the contents of the posts. We focus on a particular microblog search scenario, one that was studied at the Text REtrieval Conference (TREC) 2011 and 2012 Microblog tracks (Ounis et al., 2011; Soboroff, Ounis, Macdonald, & Lin, 2012). The task uses Twitter data and is defined as follows: given a query with a timestamp, return relevant and interesting tweets.

Fusing multiple document lists that have been retrieved from a corpus in response to a query so as to compile a single result list, has a long history (Kozorovitsky & Kurland, 2011; Shaw et al., 1994; Tsai, Wang, & Chen, 2008), with the CombSUM family (CombMax, CombMin, CombSUM, CombANZ, CombMNX, CombMNZ, etc. Lee, 1995) of fusion methods being the oldest and one of the most successful ones for many IR tasks (He & Wu, 2008; Sheldon, Shokouhi, Szummer, & Craswell, 2011; Tsagkias, de Rijke, & Weerkamp, 2011; Tsai et al., 2008). The lists are often produced by multiple ranking functions, e.g., query representations or document representations (Croft, 2000). Many effective fusion methods are based on the assumption that only documents that are highly ranked in many of the lists are likely to be relevant (Aslam & Montague, 2001; Croft, 2000; Dwork, Kumar, Naor, & Sivakumar, 2001; Kozorovitsky & Kurland, 2011; Lee, 1995; Montague & Aslam, 2002; Shaw et al., 1994; Tsagkias et al., 2011). As a consequence, a relevant document will be ranked low in the final fused list if it appears only in a single list and is ranked low in this list.

The characteristics of microblog environments suggest a different perspective. In such environments news events trigger people to talk about the topics related to an event mostly during specific short time intervals (Chen, Chen, Zhang, Wang, & Bu, 2010; Hoonlor, Szymanski, Zaki, & Chaoji, 2012; Lappas, Arai, Platakis, Kotsakos, & Gunopulos, 2009; Mathioudakis, Bansal, & Koudas, 2010; Peetz, Meij, de Rijke, & Weerkamp, 2012; Vlachos, Meek, & Vagena, 2004). For instance, people talked about the “2014 Eastern Synchronized Skating Sectional Championship” mainly between January 30 and February 1, 2014, which is when the championship was held. Posts created before the beginning or after the ending of the event are less likely to discuss the championship competitions and, hence, are less likely to be relevant. This observation leads to the following intuition about fusing ranked lists of microblog posts. If a post d and (other) relevant posts 
                        
                           
                              
                                 d
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 d
                              
                              
                                 k
                              
                           
                        
                      were published within the same narrow time window, and the relevant posts 
                        
                           
                              
                                 d
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 d
                              
                              
                                 k
                              
                           
                        
                      are ranked highly in many of the lists to be merged, then post d should be “rewarded” by boosting its rank, even if, in the extreme case, it appears in only one list where it is ranked low. Fig. 1
                      illustrates this intuition; there, post 
                        
                           
                              
                                 d
                              
                              
                                 2
                              
                           
                        
                      is ranked low in list 
                        
                           
                              
                                 L
                              
                              
                                 1
                              
                           
                        
                      but our intuition suggests that it should be rewarded as it was published in the same narrow time window in which a large number of posts occur that are ranked high in many lists; in contrast, 
                        
                           
                              
                                 d
                              
                              
                                 8
                              
                           
                        
                     , while ranked high in 
                        
                           
                              
                                 L
                              
                              
                                 m
                              
                           
                        
                     , receives no such bonus as it was published outside the narrow window.

To tackle the problem of microblog post search, we propose BurstFuseX, a novel probabilistic model that not only utilizes information traditionally used when merging ranked lists, such as ranks, but also exploits temporal information, i.e., the publication timestamps of microblog posts. In our fusion model, we focus on the case where only ranks and publication timestamps are available and no additional information is provided—such as the content of the posts, the post’s RSVs (Relevance Status Values), and the resources the posts link to. In fact, accessing the contents of posts may be inefficient and hence inappropriate in dynamic environments such as microblog search. In addition, the content may not be available in all scenarios (Salakhutdinov & Mnih, 2008). Briefly, BurstFuseX first calls a standard document fusion method X to merge a set of ranked lists of microblog posts for a given query. Subsequently, as illustrated in Fig. 1, based on the fused scores produced by method X, we detect windows of timestamps of high-scoring posts. These windows give rise to bursts of posts. We then reward posts that are published in the temporal vicinity of a burst that contains high-scoring posts.

In our experiments aimed at assessing the performance of BurstFuseX, we sample runs that have been submitted to the TREC 2011 and 2012 Microblog tracks and fuse them using BurstFuseX, respectively. For the underlying fusion method X (on top of which BurstFuseX builds), we consider three alternatives: two unsupervised fusion methods, CombSUM (Shaw et al., 1994), CombMNZ (Lee, 1995), and one state-of-the-art supervised fusion methods: λ-Merge (Sheldon et al., 2011). For further comparisons, we consider a number of burst or time-sensitive microblog retrieval baselines. As BurstFuseX detects bursts based on the output of a standard fusion method rather than on the contents of microblogs, we also consider a baseline that detects bursts based on the contents. As we will see below, BurstFuseX significantly outperforms most fusion approaches and burst or time-sensitive retrieval methods.

Our contributions in this paper can be summarized as follows.
                        
                           i.
                           We propose a novel and effective probabilistic data fusion model to microblog post search, BurstFuseX, which not only takes traditional information such as document rank into account, but also exploits the temporal characteristics of microblog environments.

To the best of our knowledge, this is the first attempt to frame the problem of searching microblog posts as a data fusion problem and also the first attempt to integrate temporal characteristics of result sets into data fusion.

We provide a detailed analysis of the performance of BurstFuseX and offer a number of examples where we observe the effect hypothesized in Fig. 1, i.e., of posts in a burst having their rank boosted.

In Section 2 we discuss related work; in Section 3 we detail BurstFuseX; we follow with a description of our experimental setup in Section 4 and report on our experimental results and perform topic-level and run-time analyses in Section 5. Finally, Section 6 concludes the paper.

@&#RELATED WORK@&#

In this section, we first review data fusion approaches in the information retrieval literature, briefly discuss previous ways of performing burst detection in information retrieval, and finally we survey state-of-the-art approaches of searching microblogs since the TREC 2011 Microblog track ran.

The task of fusing document lists that have been retrieved in response to a given query so as to compile a single more effective result list has been widely studied in the information retrieval literature (Beitzel et al., 2003; Dong & Srivastava, 2013; He & Wu, 2008; Kozorovitsky & Kurland, 2011; Montague & Aslam, 2002; Shaw et al., 1994; Sheldon et al., 2011; Shokouhi & Si, 2011; Tsai et al., 2008; Wu, 2012). Data fusion have a large number of applications, e.g., in multilingual information retrieval (Sheldon et al., 2011; Si, Callan, Cetintas, & Yuan, 2008), federated search (He, Hong, & Si, 2011; Hong & Si, 2012; Shokouhi & Si, 2011) also known as distributed retrieval (Crestani & Markov, 2013), resource selection (Hong & Si, 2013; Markov, Azzopardi, & Crestani, 2013b; Markov & Crestani, 2014), etc. We divide these existing data fusion approaches into supervised and unsupervised methods.


                        Supervised data fusion approaches first extract a large number of features, either from documents or lists, and then utilize a machine learning algorithm to train the fusion model (Croft, 2000; Efron, 2011; Sheldon et al., 2011; Tsai et al., 2008; Wu, 2012). Supervised data fusion approaches become feasible when we can leverage the use of information existing in labeled training data. Adopting a supervised learning approach to data fusion has some advantages. For instance, we can apply existing optimization techniques to the data fusion problem, and the approaches become more easily amenable to specific domains or user groups (Liu, Liu, Qin, Ma, & Li, 2007). Liu et al. (2007) set up a general framework for conducting supervised data fusion, in which learning is formalized as an optimization problem in which one minimizes disagreements between ranking results and the labeled data. Tsai et al. (2008) propose a learning approach for the merging process in multilingual information retrieval. To conduct the learning data fusion approach, they extract a number of features from the given query, the documents to be retrieved and the translation, and then use an existing learning to rank algorithm to construct a merge model from a large number of labeled data. Qin, Geng, and Liu (2010) propose a supervised probabilistic data fusion model, which is based on coset-permutation distance and defined in a stage-wise manner. To fuse result lists generated by different query reformulations, the state-of-the-art data fusion method λ-Merge proposed by Sheldon et al. (2011) first extracts features from both the lists and the documents appearing in any of the lists, and then uses a learning to rank method to optimize a given metric, like NDCG, MAP, to fuse the lists into a final merging list in response to a given query. We use λ-Merge as a representative example of supervised fusion methods. Recently, Hong and Si (2012) propose a novel supervised fusion model for result merging by utilizing multiple centralized retrieval algorithms. However, the fact that a large amount of labeled data has to be available, together with other supervised problems (for instance over-fitting noted above in λ-Merge), makes supervised data fusion less useful when labeled data is hard to come by. Our experimental results show that in many cases, even a traditional unsupervised data fusion can beat a state-of-the-art supervised data fusion method.

In contrast, unsupervised data fusion methods mainly utilize either retrieval scores or ranks of documents in the lists to be merged (Bruno & Marchand-Maillet, 2009; Croft, 2000; Khalaman & Kurland, 2012; Shaw et al., 1994; Wu, 2012). Methods utilizing retrieval scores take score information from the result lists to be fused as input, while those utilizing rank information only use order information of the documents appearing in any of the lists to be fused as input. Data fusion methods utilizing rank information have many uses and applications in information retrieval, including, e.g., meta-search (Aslam & Montague, 2001; Shaw et al., 1994) where only order information from the result lists tends to be available. Our burst-aware data fusion algorithm only uses rank and time information of the posts in the result lists, which makes it usable in cases where only order information is available.

Unsupervised data fusion has a long history with the CombSUM family of fusion methods being the oldest and one of the most successful ones in many information retrieval tasks (Croft, 2000; Kozorovitsky & Kurland, 2011; Shaw et al., 1994; Tsagkias et al., 2011). Other unsupervised data fusion approaches include, for instance, Borda Count (Aslam & Montague, 2001; Dwork et al., 2001; Erp & Schomaker, 2000), median data fusion (Fagin, Kumar, & Sivakumar, 2003), genetic algorithm (Beg, 2004), fuzzy logic based data fusion (Ahmad & Beg, 2002), Markov Chain based data fusion (Dwork et al., 2001), the outranking model for fusion (Farah & Vanderpooten, 2007), data fusion in clustering microarray data (Kustra & Zagdanski, 2010), data fusion for the management of multimedia documents (Deloule, Lambert, Beauchene, & Ionescu, 2007) and a distance-based model (Klementiev, Roth, & Small, 2008). In addition, Markov and Crestani (2014) and Markov, Arampatzis, and Crestani (2012, 2013a) provide theoretical arguments on why some traditional unsupervised fusion methods work, and based on these insights, they propose other unsupervised fusion methods. Through the use of unsupervised data fusion, Loia, Pedrycz, and Senatore (2007) offer a new way of organizing web documents that emphasizes a direct separation between syntactic and semantic facets.


                        Khalaman and Kurland (2012) utilize the content of documents appearing in any of the result lists to be fused to get an additional source of rich information, i.e., document similarities, and then integrate information induced from the clusters of similar documents created across the result lists to be merged with the output of a fusion method that relies on retrieval scores. This fusion model makes strong assumptions: the content of documents is assumed available and it is very easy to compute document similarities and get clusters for documents. However, in the case of microblog retrieval, some of these assumptions are somewhat unrealistic. For instance, some posts with only links but without any words are still labeled as relevant ones in response to the query, and creating clusters of similar posts may be very challenging as the length of posts is at most 140 characters, while many posts are ambiguous (Liang, Ren, & de Rijke, 2014a, 2014b; Zhao & Rosson, 2009). Instead of computing document similarities and creating clusters, we make full use of the characteristics of microblog environments where people tend to talk about a specific topic within specific time intervals. Our data fusion method utilizes the timestamp of posts. We detect bursts—sets of documents that are generated in specific time windows—, and use posts within a burst to boost the scores of “nearby” posts. To our knowledge, this is the first attempt to integrate the temporal characteristics of posts into data fusion.

Our framework for detecting bursts is similar to that in (Chen et al., 2010; Hoonlor et al., 2012; Lappas et al., 2009; Mathioudakis et al., 2010; Peetz et al., 2012; Vlachos et al., 2004; Zhu & Shasha, 2003), but the input information we use and our purpose in detecting bursts differs strongly. Much prior work detects bursts mainly based on document frequency or/and query term frequency in the whole corpus (Hoonlor et al., 2012; Peetz et al., 2012; Zhu & Shasha, 2003). In contrast, the information in our burst detection method is the score of documents generated by standard data fusion algorithm from documents in the lists to be merged. Our purpose in detecting bursts is also different to the aims in (Chen et al., 2010; Hoonlor et al., 2012; Lappas et al., 2009; Peetz et al., 2012; Vlachos et al., 2004). For instance, work in (Chen et al., 2010) detects bursts for generating events and their evolution in new streams, while we detect bursts to help improve the effectiveness of fusing methods. Unlike most of the past work on detecting bursts (Chen et al., 2010; Hoonlor et al., 2012; Lappas et al., 2009; Miyanishi, Seki, & Uehara, 2013a; Peetz et al., 2012; Vlachos et al., 2004), we do not make any assumption that the content of documents is available and the distribution of documents is known. In contrast, we only utilize the rank information of posts appearing in the result lists to be fused to detect bursts, and our experimental results show that using standard fusion scores to detect bursts outperforms using the content of posts to detects bursts.

Microblog retrieval has become an active research topic in IR, especially following the launch of the Microblog track at TREC in 2011 (Ounis et al., 2011). Earlier work, however, already explored the task of retrieving microblog posts. O’Connor, Krieger, and Ahn (2010) present TweetMotif, an exploratory search application for Twitter. Unlike traditional approaches to information retrieval, which present a simple list of messages, TweetMotif groups messages by frequent significant terms, a result set’s subtopics, which facilitate navigation and drilldown through a faceted microblog search interface. Efron (2010) proposes a language model for hashtag retrieval in a microblog environment, where retrieved hashtags on a topic of interest for query expansion are utilized to improve the performance of microblog search. Duan, Jiang, Qin, Zhou, and Shum (2010) show that learning to rank methods work well on the task of microblog retrieval and that account authority and URL presence are very strong features.

Following the launch of the Microblog track at TREC in 2011, many approaches have been proposed. At TREC in 2011, for instance, some approaches (Amati et al., 2011; Cao, Gao, Yu, Liu, & Cheng, 2011; Horn, Pimas, Granitzer, & Lex, 2011; Metzler & Cai, 2011; Wei, Gao, Zhou, Li, & Wong, 2011) exploit the idea that microblog queries are distinguished from web queries with many unique characteristics, and utilize the temporal information to help searching posts. The method proposed by Metzler and Cai (2011) combines a Markov random field model with a learning to rank model for searching posts, which achieves the best p@30 performance at TREC in 2011. A combination strategy is also used by Zhang, Hui, He, and Luo (2011) to search posts in 2011, where they combine a field-based model that takes the frequency of a query term in different document fields into account with query expansion. In contrast, work present in (Bandyopadhyay, Mitra, & Majumder, 2011) uses query expansion only for searching posts, but the way their query expansion method works is different; they use the Google Search API to retrieve pages from the web, and use the titles to expand the queries.

At the TREC 2012 Microblog track, Luo, Osborne, Petrovic, and Wang (2012) consider a microblog post to be a structured document, consisting not only of the text, but also of other blocks, like hashtags, links, and mentions. Using these blocks as features in a learning to rank method, they show good retrieval performances. At TREC 2012, the best performing run also uses learning to rank model (Han et al., 2012). Wei, Zhang, Li, and Wang (2012) propose a ranking algorithm with temporal information based on a language model. Kim, Yeniterzi, and Callan (2012) present two approaches to address the problem of the limited vocabulary of each posts due to their short length. The first is query expansion through pseudo-relevance feedback and the other is document expansion of tweets using web documents linked from the body of a tweet. Jabeur et al. (2012) experiment with a bayesian network retrieval model for posts search and a feature learning model for relevance classification.

Beside the approaches presented at TREC 2011 and 2012, many microblog post retrieval approaches have been proposed outside TREC since the launch of the TREC 2011 Microblog track. For instance, Massoudi, Tsagkias, de Rijke, and Weerkamp (2011) and Miyanishi et al. (2013a) propose a method for query expansion in the microblog domain and find that this is highly effective. Naveed, Gottron, Kunegis, and Che Alhadi (2011) explore the impact of document length normalization on retrieval performance and find that this has a negative effect. They also introduce interestingness as a measure for microblog posts and show that using this measure leads to better retrieval effectiveness. Choi, Croft, and Kim (2012) suggest a quality model using surrogate judgments based on retweets that can be collected automatically to train a microblog search model. Chang et al. (2013) propose a method to utilize Twitter TinyURL (shortened URL links) to detect fresh and high-quality documents, and leverage Twitter data to generate novel and effective features for ranking documents. The work by Miyanishi, Seki, and Uehara (2013b), Dakka, Gravano, and Ipeirotis (2012), Choi and Croft (2012) and Massoudi et al. (2011) utilizes burst (time) information to boost the performance of searching posts.

Another related line of work concerns retrieval score regularization for improving the performance of ad hoc search (Diaz, 2005, 2007). Specifically, Diaz (2005, 2007) present a framework for improving document retrieval scores under a regularization framework, where retrieval scores of documents are adjusted to respect inter-document consistency. Our microblog search algorithm, BurstFuseX, builds on the same intuitions as the algorithms proposed in (Diaz, 2005, 2007): in (Diaz, 2005, 2007) the regularization algorithms for ad hoc search build on the cluster hypothesis, according to which closely related documents should have similar retrieval scores, given the same information request; in our algorithm, we assume that posts published within the same time intervals are more likely to be talking about the same topic. There are several dissimilarities, though, between the algorithms in (Diaz, 2005, 2007) and our algorithm. For instance, the algorithms in (Diaz, 2005, 2007) utilize (expensive) inter-document similarities for retrieval score regularization; in contrast, our algorithm utilizes time information for data fusion score regularization. The input of the former algorithms consists of the retrieval scores of documents generated by a single retrieval model and the documents’ content; in contrast, the input of our algorithm is a number of result lists generated by multiple retrieval models plus the timestamps of the posts.

In sum, the work that we present in this paper differs in important ways from the related work just discussed. We observe that people tend to talk about topics within specific time intervals. We first detect set of bursts where the majority of posts appear in many of the lists and are likely to be relevant. Then we let posts published in or near the burst boost each others’ scores. To our knowledge, this is the attempt to frame the problem of searching microblog posts as a data fusion problem and the first attempt to integrate temporal characteristics of result sets into data fusion techniques.

In this section, we first provide the main research question we address. Then we briefly describe standard unsupervised and supervised data fusion methods that will be integrated in our proposed data fusion methods and taken as baselines in our experiments. We define what bursts are and detail how to detect bursts in data fusion scenarios in Section 3.2. After that, we detail our proposed data fusion methods for microblog search in Section 3.3.

The task we address in this paper is the following: Given a query and a set of ranked lists of posts returned in response to the query, fuse the lists into a single ranked list of posts to be returned in response to the query. Hence, the input of our burst-aware data fusion method BurstFuseX consists of a query and a set of ranked lists of posts; the output is a single fused list. Algorithm 1 gives a high level overview of BurstFuseX.
                        Algorithm 1
                        BurstFuseX: Burst-aware data fusion for microblog post search 
                              
                                 
                                    
                                    
                                       
                                          
                                             Input: A query q
                                          
                                       
                                       
                                          
                                             
                                             A number of ranked lists of posts to be fused, 
                                                
                                                   
                                                      
                                                         L
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         L
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      
                                                         L
                                                      
                                                      
                                                         m
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             The combined set of posts 
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         L
                                                      
                                                   
                                                   
                                                   ≔
                                                   
                                                   
                                                      
                                                         ⋃
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         m
                                                      
                                                   
                                                   
                                                      
                                                         L
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             A standard fusion method X.
                                       
                                       
                                          
                                             Output: A final fused list of posts.
                                       
                                       
                                          1 Calculate the (standard) fusion score 
                                                
                                                   
                                                      
                                                         F
                                                      
                                                      
                                                         X
                                                      
                                                   
                                                   (
                                                   d
                                                   ;
                                                   q
                                                   )
                                                
                                              according to X for each post 
                                                
                                                   d
                                                   ∈
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         L
                                                      
                                                   
                                                
                                             ; see Section 3.1;
                                       
                                       
                                          2 Detect bursts based on the timestamps and 
                                                
                                                   
                                                      
                                                         F
                                                      
                                                      
                                                         X
                                                      
                                                   
                                                   (
                                                   d
                                                   ;
                                                   q
                                                   )
                                                
                                              scores; see Section 3.2;
                                       
                                       
                                          3 Calculate the BurstFuseX fusion score for each 
                                                
                                                   d
                                                   ∈
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         L
                                                      
                                                   
                                                
                                              using the bursts and the standard fusion score; see Section 3.3;
                                       
                                       
                                          4 Construct the final fused list based on the BurstFuseX score of 
                                                
                                                   d
                                                   ∈
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         L
                                                      
                                                   
                                                
                                              obtained in step 3.
                                       
                                    
                                 
                              
                           
                        

In the remainder of this section we detail the steps that make up BurstFuseX. In Table 1
                      we list the notation that we use.

The fusion methods we consider as building blocks for BurstFuseX all assign a non-negative fusion score 
                     
                        
                           
                              
                                 F
                              
                              
                                 X
                              
                           
                           (
                           d
                           ;
                           q
                           )
                        
                      to every post 
                        
                           d
                           ∈
                           
                              
                                 C
                              
                              
                                 L
                              
                           
                        
                     . We set 
                        
                           
                              
                                 F
                              
                              
                                 X
                              
                           
                           (
                           d
                           ;
                           q
                           )
                           
                           ≔
                           
                           0
                        
                      for 
                        
                           d
                           
                           ∉
                           
                           
                              
                                 C
                              
                              
                                 L
                              
                           
                        
                     , following (Bruno & Marchand-Maillet, 2009; Kozorovitsky & Kurland, 2011; Lee, 1995; Shaw et al., 1994; Wu, 2012). The higher 
                        
                           
                              
                                 F
                              
                              
                                 X
                              
                           
                           (
                           d
                           ;
                           q
                           )
                        
                      is, the more likely d is assumed to be an appropriate response to q.

To be able to define the final fusion score 
                           
                              
                                 
                                    F
                                 
                                 
                                    BurstFuseX
                                 
                              
                              (
                              d
                              ;
                              q
                              )
                           
                         we integrate and make use of an existing standard fusion method (step 1 of Algorithm 1). BurstFuseX is independent of the particular choice of the standard fusion method that it integrates: any fusion method can be integrated into our model. Below, we briefly review the three standard fusion methods that we consider in this paper: two unsupervised ones and a supervised method.

Classical unsupervised methods include the so-called CombSUM family. Methods in this family assume that documents that are ranked highly in many of the lists to be merged are highly relevant (Shaw et al., 1994): typically, a fusion score 
                              
                                 
                                    
                                       F
                                    
                                    
                                       X
                                    
                                 
                                 (
                                 d
                                 ;
                                 q
                                 )
                              
                            for document d, given query q, is defined based on the rank of d in the lists to be merged and on the number of lists in which d appears.

Let 
                              
                                 
                                    
                                       R
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 (
                                 d
                                 )
                              
                            denote d’s score based on the rank of d in list 
                              
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                 
                              
                           ; by default, 
                              
                                 
                                    
                                       R
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       d
                                       )
                                    
                                 
                                 =
                                 0
                              
                            if 
                              
                                 d
                                 ∉
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                 
                              
                           . In both CombSUM and CombMNZ, 
                              
                                 
                                    
                                       R
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 (
                                 d
                                 )
                              
                            is often defined as:
                              
                                 (1)
                                 
                                    
                                       
                                          R
                                       
                                       
                                          
                                             
                                                L
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    (
                                    d
                                    )
                                    =
                                    
                                       
                                          (
                                          1
                                          +
                                          
                                             
                                                k
                                             
                                             
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          )
                                          -
                                          rank
                                          (
                                          d
                                          ,
                                          
                                             
                                                L
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       
                                          
                                             
                                                k
                                             
                                             
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 rank
                                 (
                                 d
                                 ,
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 
                                    
                                       k
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 }
                              
                            is the rank of d in 
                              
                                 
                                    
                                       L
                                    
                                    
                                       i
                                    
                                 
                              
                           . The well-known CombSUM fusion method (Shaw et al., 1994; Wu, 2012), for instance, scores d by the sum of its rank scores in the lists:
                              
                                 
                                    
                                       
                                          F
                                       
                                       
                                          CombSUM
                                       
                                    
                                    (
                                    d
                                    ;
                                    q
                                    )
                                    
                                    ≔
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   L
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          R
                                       
                                       
                                          
                                             
                                                L
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    (
                                    d
                                    )
                                    ,
                                 
                              
                           while CombMNZ (Shaw et al., 1994; Wu, 2012) rewards documents d that rank high in many lists:
                              
                                 
                                    
                                       
                                          F
                                       
                                       
                                          CombMNZ
                                       
                                    
                                    (
                                    d
                                    ;
                                    q
                                    )
                                    
                                    ≔
                                    
                                    |
                                    {
                                    
                                       
                                          L
                                       
                                       
                                          i
                                       
                                    
                                    :
                                    d
                                    ∈
                                    
                                       
                                          L
                                       
                                       
                                          i
                                       
                                    
                                    }
                                    |
                                    ·
                                    
                                       
                                          F
                                       
                                       
                                          CombSUM
                                       
                                    
                                    (
                                    d
                                    ;
                                    q
                                    )
                                    .
                                 
                              
                           
                        

Recently, several supervised methods for merging ranked lists have been proposed, one of which is λ-Merge (Sheldon et al., 2011). In this paper, we view λ-Merge as a typical representative of the supervised standard fusion methods that are currently available.
                              2
                              To be able to define λ-Merge, we need to assume that we can access the content of posts.
                           
                           
                              2
                           
                        

Given a query, λ-Merge can directly optimize a retrieval metric (e.g., MAP) to enhance retrieval effectiveness under the assumption that query reformulation candidates are available. In particular, λ-Merge learns a scoring function to rank documents from multiple reformulations of the given query by combining features that indicate document quality (such as retrieval score) with features that indicate the quality of the reformulation and its results lists (called gating features in Sheldon et al., 2011). In our setting, we do not assume that query reformulation candidates are easily available, i.e., no features about the quality of the reformulation (gating features) are used in our data fusion method.

Our settings for λ-Merge are detailed in an appendix to the paper (see Appendix A).

To ground our intuitions about utilizing burst information to boost the performance of microblog search, we choose four test queries as examples and examine plots of the number of relevant documents distributed over their document ages (measured by days) in Fig. 2
                        .
                           3
                           The topics are selected from test collections detailed in Section 4.2.
                        
                        
                           3
                         The figure confirms that people tend to talk about topics within specific time windows. It is, therefore, worthwhile to detect such time windows (“bursts”) and to use such burst information, which is what our proposed data fusion method for microblog search aims to do.

Next, we move on to the next step (step 2) of Algorithm 1 and detail how we detect bursts. Let 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                           
                         be a timestamp. Let 
                           
                              
                                 
                                    d
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         (
                           
                              ∈
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                           
                        ) denote a post d with timestamp 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                           
                        . We regard posts published during the same hour as having the same timestamp. Although it is possible to define “the same timestamp” in many different ways, we found that this is a suitable level of granularity for the fusion effectiveness of searching posts; the same setting is also used in (Metzler, Cai, & Hovy, 2012). Now, before we detect bursts, we need to define 
                           
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                           
                        , the burst-time score at time 
                        
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                           
                         
                        of 
                        
                           
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                           
                        , the set of posts occurring in the lists under consideration. Let 
                           
                              
                                 
                                    F
                                 
                                 
                                    X
                                 
                              
                              (
                              
                                 
                                    d
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              ;
                              q
                              )
                           
                         be the score of 
                           
                              
                                 
                                    d
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         given q under the standard fusion method X. Then:
                           
                              (2)
                              
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   d
                                                
                                                
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                             ∈
                                             
                                                
                                                   C
                                                
                                                
                                                   L
                                                
                                             
                                          
                                       
                                       
                                          
                                             F
                                          
                                          
                                             X
                                          
                                       
                                       (
                                       
                                          
                                             d
                                          
                                          
                                             
                                                
                                                   t
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                       ;
                                       q
                                       )
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             
                                                
                                                   t
                                                
                                                
                                                   
                                                      
                                                         C
                                                      
                                                      
                                                         L
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   d
                                                
                                                
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                             ∈
                                             
                                                
                                                   C
                                                
                                                
                                                   L
                                                
                                             
                                          
                                       
                                       
                                          
                                             F
                                          
                                          
                                             X
                                          
                                       
                                       (
                                       
                                          
                                             d
                                          
                                          
                                             
                                                
                                                   t
                                                
                                                
                                                   j
                                                
                                             
                                          
                                       
                                       ;
                                       q
                                       )
                                    
                                 
                                 -
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   L
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 1
                                 ⩽
                                 i
                                 ⩽
                                 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             C
                                          
                                          
                                             L
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              1
                              ⩽
                              j
                              ⩽
                              
                                 
                                    t
                                 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          L
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          L
                                       
                                    
                                 
                              
                           
                         is the total number of different timestamps belonging to posts in 
                           
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                           
                        . Notice that the burst-time score 
                           
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              >
                              0
                           
                         if it is above the average score (i.e., 
                           
                              1
                              /
                              
                                 
                                    t
                                 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          L
                                       
                                    
                                 
                              
                           
                        ), otherwise 
                           
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              ⩽
                              0
                           
                        .

We compute a burst-time score 
                           
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                           
                         at each time point 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              ∈
                              {
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    t
                                 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          L
                                       
                                    
                                 
                              
                              }
                           
                         in 
                           
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                           
                        . In this manner we generate a burst-time score sequence 
                        
                           
                              I
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              =
                              {
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              ,
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              ,
                              …
                              ,
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          
                                             
                                                C
                                             
                                             
                                                L
                                             
                                          
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              }
                           
                        .

Following (Ruzzo & Tompa, 1999), a segment 
                           
                              I
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              [
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              :
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                              ]
                              =
                           
                         
                        
                           
                              {
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                           
                        , 
                           
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              ,
                              …
                              ,
                              
                                 
                                    S
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              }
                           
                        , where 
                           
                              1
                              ⩽
                              i
                              ⩽
                              j
                              ⩽
                              
                                 
                                    t
                                 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          L
                                       
                                    
                                 
                              
                           
                        , is a maximal segment in 
                           
                              I
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                           
                         if:
                           
                              i.
                              All proper subsequences of 
                                    
                                       I
                                       (
                                       
                                          
                                             C
                                          
                                          
                                             L
                                          
                                       
                                       )
                                       [
                                       
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                       :
                                       
                                          
                                             t
                                          
                                          
                                             j
                                          
                                       
                                       ]
                                    
                                  have a lower score.
                                    4
                                    The score of a subsequence is the sum of the burst-time scores of the elements in the subsequence.
                                 
                                 
                                    4
                                 
                              

No proper super-segments of 
                                    
                                       I
                                       (
                                       
                                          
                                             C
                                          
                                          
                                             L
                                          
                                       
                                       )
                                       [
                                       
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                       :
                                       
                                          
                                             t
                                          
                                          
                                             j
                                          
                                       
                                       ]
                                    
                                  in 
                                    
                                       I
                                       (
                                       
                                          
                                             C
                                          
                                          
                                             L
                                          
                                       
                                       )
                                    
                                  satisfy item i.

We adapt a linear-time algorithm proposed in (Ruzzo & Tompa, 1999) to find all maximal segments in the sequence 
                           
                              I
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                           
                        . As an example, consider the input sequence 
                           
                              I
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              =
                              {
                              2
                              ,
                              -
                              2
                              ,
                              4
                              ,
                              3
                              ,
                              -
                              3
                              ,
                              -
                              4
                              ,
                              -
                              1
                              ,
                              -
                              3
                              ,
                              5
                              ,
                              -
                              1
                              ,
                              3
                              ,
                              -
                              2
                              }
                           
                        . The maximal segments in this sequence are 
                           
                              {
                              2
                              }
                              ,
                              
                              {
                              4
                              ,
                              3
                              }
                           
                         and 
                           
                              {
                              5
                              ,
                              -
                              1
                              ,
                              3
                              }
                           
                        . The segment 
                           
                              {
                              2
                              ,
                              -
                              2
                              ,
                              4
                              ,
                              3
                              }
                           
                         is not maximal, since it has a nonempty zero-scoring prefix 
                           
                              {
                              2
                              ,
                              -
                              2
                              }
                           
                         appending to the left of 
                           
                              {
                              4
                              ,
                              3
                              }
                              ;
                              
                              {
                              5
                              }
                           
                         is not a maximal segment, since 
                           
                              {
                              5
                              ,
                              -
                              1
                              ,
                              3
                              }
                           
                         has a total higher score of 7. Each maximal segment 
                           
                              I
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              [
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              :
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                              ]
                           
                         gives rise to a burst of posts 
                           
                              b
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              [
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              :
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                              ]
                           
                         with start timestamp 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                           
                         and end timestamp 
                           
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                           
                        : it contains any post 
                           
                              d
                              ∈
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                           
                         whose timestamp is between 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                           
                         is within this segment. We write 
                           
                              B
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              =
                              ⋃
                              b
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              [
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              :
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                              ]
                           
                         to denote the set of all bursts in response to q.

We let b be short for 
                           
                              b
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                              [
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                              
                              :
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                              ]
                           
                         in the following. As it does not access the contents of posts, the source of complexity in our burst detection method is in the problem of finding all maximal segments: this problem can be solved in linear time (Ruzzo & Tompa, 1999), so that the computational complexity of our burst detection method is 
                           
                              O
                              (
                              |
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              |
                              )
                           
                        .

We turn to the key steps 3 and 4 of Algorithm 1 and define our burst-aware fusion algorithm. Motivated by the fact that people tend to talk about a topic within specific short time intervals (Lappas et al., 2009; Mathioudakis et al., 2010; Peetz et al., 2012), we devise a method that allows posts in the same burst to boost the scores of other posts such that posts that are ranked low in a small number of lists can be promoted by posts in the same burst that are ranked highly in many lists. After detecting a set of bursts, 
                           
                              B
                              (
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                              )
                           
                        , we integrate burst information with scores of posts in the lists, scores that were generated by a standard fusion method X, to estimate 
                           
                              P
                              (
                              d
                              |
                              q
                              )
                           
                        —the final probability that d (
                           
                              ∈
                              
                                 
                                    C
                                 
                                 
                                    L
                                 
                              
                           
                        ) is relevant to query q.

We use a set of bursts 
                              
                                 B
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                                 )
                              
                            as proxies for d in estimating its relevance in response to q. Specifically, we can rewrite the probability of a post d being about 
                              
                                 q
                                 ,
                                 P
                                 (
                                 d
                                 |
                                 q
                                 )
                              
                           , as:
                              
                                 (3)
                                 
                                    P
                                    (
                                    d
                                    |
                                    q
                                    )
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             b
                                             ∈
                                             B
                                             (
                                             
                                                
                                                   C
                                                
                                                
                                                   L
                                                
                                             
                                             )
                                          
                                       
                                    
                                    p
                                    (
                                    d
                                    |
                                    b
                                    ,
                                    q
                                    )
                                    ·
                                    p
                                    (
                                    b
                                    |
                                    q
                                    )
                                    ,
                                 
                              
                           where the probability, 
                              
                                 p
                                 (
                                 b
                                 |
                                 q
                                 )
                              
                           , indicates how likely a set of posts in b produced within the same time interval are relevant to q, and 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 ,
                                 q
                                 )
                              
                            indicates how likely d is talking about q and belongs to b. To estimate 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 ,
                                 q
                                 )
                              
                           , a linear mixture governed by a free parameter μ is used (Kurland & Lee, 2004; Markovits, Shtok, & Kurland, 2012) such that:
                              
                                 (4)
                                 
                                    
                                       
                                          p
                                       
                                       
                                          θ
                                       
                                    
                                    (
                                    d
                                    |
                                    b
                                    ,
                                    q
                                    )
                                    
                                    ≔
                                    
                                    (
                                    1
                                    -
                                    μ
                                    )
                                    ·
                                    p
                                    (
                                    d
                                    |
                                    q
                                    )
                                    +
                                    μ
                                    ·
                                    p
                                    (
                                    d
                                    |
                                    b
                                    )
                                    ,
                                 
                              
                           where 
                              
                                 p
                                 (
                                 d
                                 |
                                 q
                                 )
                              
                            measures the relevance of d to q and 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 )
                              
                            indicates how likely d belongs to b. We substitute Eq. (4) into Eq. (3), and define our BurstFuseX model as:
                              
                                 (5)
                                 
                                    
                                       
                                          F
                                       
                                       
                                          BurstFuseX
                                       
                                    
                                    (
                                    d
                                    ;
                                    q
                                    )
                                    
                                    ≔
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             b
                                             ∈
                                             B
                                             (
                                             
                                                
                                                   C
                                                
                                                
                                                   L
                                                
                                             
                                             )
                                          
                                       
                                    
                                    
                                       
                                          
                                             (
                                             1
                                             -
                                             μ
                                             )
                                             ·
                                             p
                                             (
                                             d
                                             |
                                             q
                                             )
                                             +
                                             μ
                                             ·
                                             p
                                             (
                                             d
                                             |
                                             b
                                             )
                                          
                                       
                                    
                                    ·
                                    p
                                    (
                                    b
                                    |
                                    q
                                    )
                                    =
                                    (
                                    1
                                    -
                                    μ
                                    )
                                    ·
                                    p
                                    (
                                    d
                                    |
                                    q
                                    )
                                    +
                                    μ
                                    ·
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             b
                                             ∈
                                             B
                                             (
                                             
                                                
                                                   C
                                                
                                                
                                                   L
                                                
                                             
                                             )
                                          
                                       
                                    
                                    p
                                    (
                                    d
                                    |
                                    b
                                    )
                                    ·
                                    p
                                    (
                                    b
                                    |
                                    q
                                    )
                                    .
                                 
                              
                           That is, to obtain a score for post d in response to q, BurstFuseX uses three types of probability. If posts in a burst are talking about 
                              
                                 q
                                 ,
                                 b
                              
                            will be rewarded as 
                              
                                 p
                                 (
                                 b
                                 |
                                 q
                                 )
                              
                            indicates. If d is strongly associated with b, then as indicated by 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 )
                                 ,
                                 d
                              
                            will be rewarded. Finally, if each burst b in 
                              
                                 B
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                                 )
                              
                            talks about 
                              
                                 q
                                 ,
                                 
                                 d
                              
                            itself discusses q and is strongly associated with a burst, then d will be ranked high in the final fused list.

Notice how BurstFuseX can boost the score of posts: if post d ranks low in a single list (i.e., 
                              
                                 p
                                 (
                                 d
                                 |
                                 q
                                 )
                              
                            is small) but is contained in a burst, as indicated by 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 )
                              
                           , then the final fused score of 
                              
                                 d
                                 ,
                                 
                                 
                                    
                                       F
                                    
                                    
                                       BurstFuseX
                                    
                                 
                                 (
                                 d
                                 ;
                                 q
                                 )
                              
                           , may still be relatively high, which may boost the final ranking of d.

Our next task is to derive estimates for the following key components in Eq. (5):
                              
                                 •
                                 
                                    
                                       
                                          p
                                          (
                                          d
                                          |
                                          q
                                          )
                                       
                                    : post-level relevance—how likely d is talking about q.


                                    
                                       
                                          p
                                          (
                                          b
                                          |
                                          q
                                          )
                                       
                                    : burst-level relevance—how likely a set of posts as a whole are talking about q.


                                    
                                       
                                          p
                                          (
                                          d
                                          |
                                          b
                                          )
                                       
                                    : post-burst association strength—how likely d belongs to b.


                           Post-level relevance. To obtain 
                              
                                 p
                                 (
                                 d
                                 |
                                 q
                                 )
                              
                            in Eq. (5), we apply Bayes’ Theorem, such that 
                              
                                 p
                                 (
                                 d
                                 |
                                 q
                                 )
                                 =
                                 
                                    
                                       p
                                       (
                                       q
                                       |
                                       d
                                       )
                                       p
                                       (
                                       d
                                       )
                                    
                                    
                                       p
                                       (
                                       q
                                       )
                                    
                                 
                              
                           , where we let 
                              
                                 p
                                 (
                                 q
                                 )
                                 ∝
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             d
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       
                                          
                                             C
                                          
                                          
                                             L
                                          
                                       
                                    
                                 
                                 p
                                 (
                                 q
                                 |
                                 
                                    
                                       d
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 p
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ′
                                    
                                 
                                 )
                              
                           . Here, 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ′
                                    
                                 
                              
                            is a post in the set of posts 
                              
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                              
                            to be fused. A uniform prior distribution is assumed for each post 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ′
                                    
                                 
                                 ∈
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                              
                           . So 
                              
                                 p
                                 (
                                 d
                                 |
                                 q
                                 )
                              
                            can be rewritten as:
                              
                                 
                                    p
                                    (
                                    d
                                    |
                                    q
                                    )
                                    ∝
                                    
                                       
                                          p
                                          (
                                          q
                                          |
                                          d
                                          )
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      L
                                                   
                                                
                                             
                                          
                                          p
                                          (
                                          q
                                          |
                                          
                                             
                                                d
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       
                                    
                                    .
                                 
                              
                           
                        

We use an estimate 
                              
                                 
                                    
                                       p
                                    
                                    
                                       θ
                                    
                                 
                                 (
                                 q
                                 |
                                 d
                                 )
                                 ∝
                                 
                                    
                                       F
                                    
                                    
                                       X
                                    
                                 
                                 (
                                 d
                                 ;
                                 q
                                 )
                              
                            (Khalaman & Kurland, 2012), where 
                              
                                 
                                    
                                       F
                                    
                                    
                                       X
                                    
                                 
                                 (
                                 d
                                 ;
                                 q
                                 )
                              
                            is the score of a standard fusion method X for d given q:
                              
                                 (6)
                                 
                                    
                                       
                                          p
                                       
                                       
                                          θ
                                       
                                    
                                    (
                                    d
                                    |
                                    q
                                    )
                                    
                                    ≔
                                    
                                    
                                       
                                          
                                             
                                                F
                                             
                                             
                                                X
                                             
                                          
                                          (
                                          d
                                          ;
                                          q
                                          )
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      L
                                                   
                                                
                                             
                                          
                                          
                                             
                                                F
                                             
                                             
                                                X
                                             
                                          
                                          (
                                          
                                             
                                                d
                                             
                                             
                                                ′
                                             
                                          
                                          ;
                                          q
                                          )
                                       
                                    
                                    ,
                                 
                              
                           which is the normalized standard fusion score reflecting d’s relevance to q. Notice that our burst-aware fusion model will reduce to the standard fusion method X if we let 
                              
                                 μ
                                 =
                                 0
                              
                            in Eq. (5), as 
                              
                                 
                                    
                                       F
                                    
                                    
                                       BurstFuseX
                                    
                                 
                                 (
                                 d
                                 ;
                                 q
                                 )
                                 =
                                 (
                                 1
                                 -
                                 μ
                                 )
                                 ·
                                 p
                                 (
                                 d
                                 |
                                 q
                                 )
                                 ∝
                                 
                                    
                                       F
                                    
                                    
                                       X
                                    
                                 
                                 (
                                 d
                                 |
                                 q
                                 )
                              
                            in Eq. (5) in this case. In other words, the effect of merging result lists according to 
                              
                                 
                                    
                                       F
                                    
                                    
                                       BurstFuseX
                                    
                                 
                                 (
                                 d
                                 ;
                                 q
                                 )
                              
                            will then be the same as that of merging result lists according to 
                              
                                 
                                    
                                       F
                                    
                                    
                                       X
                                    
                                 
                                 (
                                 d
                                 ;
                                 q
                                 )
                              
                           .


                           Burst-level relevance. Next, to obtain 
                              
                                 p
                                 (
                                 b
                                 |
                                 q
                                 )
                              
                            in Eq. (5), we apply Bayes’ Theorem again, such that 
                              
                                 p
                                 (
                                 b
                                 |
                                 q
                                 )
                                 =
                                 
                                    
                                       p
                                       (
                                       q
                                       |
                                       b
                                       )
                                       p
                                       (
                                       b
                                       )
                                    
                                    
                                       p
                                       (
                                       q
                                       )
                                    
                                 
                              
                           , where we use the probability rule, and have 
                              
                                 p
                                 (
                                 q
                                 )
                                 ∝
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       B
                                       (
                                       
                                          
                                             C
                                          
                                          
                                             L
                                          
                                       
                                       )
                                    
                                 
                                 p
                                 (
                                 q
                                 |
                                 
                                    
                                       b
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 p
                                 (
                                 
                                    
                                       b
                                    
                                    
                                       ′
                                    
                                 
                                 )
                              
                           . Here, 
                              
                                 
                                    
                                       b
                                    
                                    
                                       ′
                                    
                                 
                              
                            is a burst in the set of bursts 
                              
                                 B
                              
                            detected by our burst detection method. Assuming a uniform prior for each burst in 
                              
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                              
                            for a given q, the probability that a burst b contains information pertaining to q can be represented as:
                              
                                 
                                    p
                                    (
                                    b
                                    |
                                    q
                                    )
                                    ∝
                                    
                                       
                                          p
                                          (
                                          q
                                          |
                                          b
                                          )
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                
                                                   
                                                      b
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ∈
                                                B
                                                (
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      L
                                                   
                                                
                                                )
                                             
                                          
                                          p
                                          (
                                          q
                                          |
                                          
                                             
                                                b
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       
                                    
                                    .
                                 
                              
                           
                        

A burst may contain posts that have multiple appearances in the lists to be fused. Prior work on representing sets of posts has shown that product-based representations somewhat outperform sum-based representations (Khalaman & Kurland, 2012; Liu & Croft, 2008; Seo & Croft, 2010). Accordingly, we let:
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          θ
                                       
                                    
                                    (
                                    q
                                    |
                                    b
                                    )
                                    =
                                    
                                       
                                          
                                             ∏
                                          
                                          
                                             d
                                             ∈
                                             b
                                          
                                       
                                    
                                    p
                                    
                                       
                                          (
                                          q
                                          |
                                          d
                                          )
                                       
                                       
                                          
                                             
                                                1
                                             
                                             
                                                |
                                                b
                                                |
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

As we use an estimate 
                              
                                 
                                    
                                       p
                                    
                                    
                                       θ
                                    
                                 
                                 (
                                 q
                                 |
                                 d
                                 )
                                 ∝
                                 
                                    
                                       F
                                    
                                    
                                       X
                                    
                                 
                                 (
                                 d
                                 ;
                                 q
                                 )
                              
                            (see above), 
                              
                                 p
                                 (
                                 b
                                 |
                                 q
                                 )
                              
                            can be estimated as:
                              
                                 (7)
                                 
                                    
                                       
                                          p
                                       
                                       
                                          θ
                                       
                                    
                                    (
                                    b
                                    |
                                    q
                                    )
                                    
                                    ≔
                                    
                                    
                                       
                                          
                                             
                                                ∏
                                             
                                             
                                                d
                                                ∈
                                                b
                                             
                                          
                                          
                                             
                                                F
                                             
                                             
                                                X
                                             
                                          
                                          
                                             
                                                (
                                                d
                                                ;
                                                q
                                                )
                                             
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      |
                                                      b
                                                      |
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                
                                                   
                                                      b
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ∈
                                                B
                                                (
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      L
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             
                                                ∏
                                             
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      b
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                          
                                             
                                                F
                                             
                                             
                                                X
                                             
                                          
                                          
                                             
                                                (
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ;
                                                q
                                                )
                                             
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      |
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      |
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 |
                                 b
                                 |
                              
                            and 
                              
                                 |
                                 
                                    
                                       b
                                    
                                    
                                       ′
                                    
                                 
                                 |
                              
                            are the number of posts in b and 
                              
                                 
                                    
                                       b
                                    
                                    
                                       ′
                                    
                                 
                              
                           , respectively.


                           Post-burst association strength. To obtain 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 )
                              
                            in Eq. (5), we apply Bayes’ Theorem again, such that 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 )
                                 =
                                 
                                    
                                       p
                                       (
                                       b
                                       |
                                       d
                                       )
                                       p
                                       (
                                       d
                                       )
                                    
                                    
                                       p
                                       (
                                       b
                                       )
                                    
                                 
                              
                           . We observe that 
                              
                                 p
                                 (
                                 b
                                 )
                                 ∝
                                 
                                    
                                       ∑
                                    
                                    
                                       
                                          
                                             d
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       
                                          
                                             C
                                          
                                          
                                             L
                                          
                                       
                                    
                                 
                                 p
                                 (
                                 b
                                 |
                                 
                                    
                                       d
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 p
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ′
                                    
                                 
                                 )
                              
                            and assume a uniform prior for the probability of a post, so that 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 )
                              
                            can be represented as:
                              
                                 
                                    p
                                    (
                                    d
                                    |
                                    b
                                    )
                                    ∝
                                    
                                       
                                          p
                                          (
                                          b
                                          |
                                          d
                                          )
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      L
                                                   
                                                
                                             
                                          
                                          p
                                          (
                                          b
                                          |
                                          
                                             
                                                d
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       
                                    
                                    .
                                 
                              
                           Here, 
                              
                                 p
                                 (
                                 b
                                 |
                                 d
                                 )
                              
                            is the probability of d belonging to b.

Next, we need to estimate 
                              
                                 p
                                 (
                                 b
                                 |
                                 d
                                 )
                              
                           . Again, we use the product of scores of posts in a burst with the index of 
                              
                                 1
                                 /
                                 |
                                 b
                                 |
                              
                            rather than the average of the sum of the score.
                              5
                              Experimental results show that using products is not statistically significantly different from using sums with a two-tailed paired t-test at a 95% confidence level.
                           
                           
                              5
                            We set:
                              
                                 (8)
                                 
                                    
                                       
                                          p
                                       
                                       
                                          θ
                                       
                                    
                                    (
                                    b
                                    |
                                    d
                                    )
                                    
                                    ≔
                                    
                                    
                                       
                                          
                                             ∏
                                          
                                          
                                             
                                                
                                                   d
                                                
                                                
                                                   ″
                                                
                                             
                                             ∈
                                             b
                                          
                                       
                                    
                                    p
                                    
                                       
                                          (
                                          
                                             
                                                d
                                             
                                             
                                                ″
                                             
                                          
                                          |
                                          d
                                          )
                                       
                                       
                                          
                                             
                                                1
                                             
                                             
                                                |
                                                b
                                                |
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           to estimate 
                              
                                 p
                                 (
                                 b
                                 |
                                 d
                                 )
                              
                           , where 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 ∈
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                              
                            is a post in b.

Three factors affect the association strength between d and b: the temporal relationship between d and posts 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 ∈
                                 b
                              
                           , the relevance of d given q and the relevance of 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                              
                            given q. We estimate the time relationship between d and 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                              
                            as:
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          t
                                       
                                    
                                    (
                                    
                                       
                                          d
                                       
                                       
                                          ″
                                       
                                    
                                    ,
                                    d
                                    )
                                    =
                                    exp
                                    
                                       
                                          
                                             -
                                             
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               t
                                                            
                                                            
                                                               
                                                                  
                                                                     d
                                                                  
                                                                  
                                                                     ″
                                                                  
                                                               
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               t
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                         )
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                                
                                                   2
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         b
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           Here, 
                              
                                 
                                    
                                       t
                                    
                                    
                                       d
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             d
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                              
                            are the timestamps of post d and 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                              
                           , respectively, 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       b
                                    
                                 
                              
                            is the standard deviation of the timestamps in b:
                              
                                 (9)
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          b
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      k
                                                      -
                                                      
                                                         
                                                            
                                                               
                                                                  n
                                                               
                                                               
                                                                  b
                                                               
                                                            
                                                            +
                                                            1
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                b
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         k
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   -
                                                   k
                                                   (
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         b
                                                      
                                                   
                                                   +
                                                   1
                                                   )
                                                   +
                                                   
                                                      
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               b
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         +
                                                         2
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               b
                                                            
                                                         
                                                         +
                                                         1
                                                      
                                                      
                                                         4
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                b
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                   
                                                      3
                                                   
                                                
                                                +
                                                2
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                   
                                                      2
                                                   
                                                
                                                +
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                             
                                             
                                                4
                                             
                                          
                                          +
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                             
                                          
                                          
                                             
                                                k
                                             
                                             
                                                2
                                             
                                          
                                          -
                                          (
                                          
                                             
                                                n
                                             
                                             
                                                b
                                             
                                          
                                          +
                                          1
                                          )
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                             
                                          
                                          k
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                b
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                   
                                                      3
                                                   
                                                
                                                +
                                                2
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                   
                                                      2
                                                   
                                                
                                                +
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                             
                                             
                                                4
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                                (
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                                +
                                                1
                                                )
                                                (
                                                2
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                                +
                                                1
                                                )
                                             
                                             
                                                6
                                             
                                          
                                          -
                                          (
                                          
                                             
                                                n
                                             
                                             
                                                b
                                             
                                          
                                          +
                                          1
                                          )
                                          
                                             
                                                (
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                                +
                                                1
                                                )
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      b
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                n
                                             
                                             
                                                b
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                n
                                             
                                             
                                                b
                                             
                                             
                                                2
                                             
                                          
                                          -
                                          1
                                       
                                       
                                          12
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 
                                    
                                       n
                                    
                                    
                                       b
                                    
                                 
                                 =
                                 j
                                 -
                                 i
                                 +
                                 1
                              
                            is the total number of different timestamps of posts in the burst b.
                              6
                              Alternative definitions of 
                                    
                                       
                                          
                                             σ
                                          
                                          
                                             b
                                          
                                       
                                    
                                  are possible, but we found that this has little effect on the overall retrieval performance.
                           
                           
                              6
                            If 
                              
                                 j
                                 =
                                 i
                              
                           , we let 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       b
                                    
                                 
                                 =
                                 0.5
                              
                            to avoid 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       b
                                    
                                 
                                 =
                                 0
                              
                           . The bigger the temporal distance between 
                              
                                 
                                    
                                       t
                                    
                                    
                                       d
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             d
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 
                              
                            is, the smaller 
                              
                                 
                                    
                                       p
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 ,
                                 d
                                 )
                              
                            will be, which means that compared to other posts in burst 
                              
                                 b
                                 ,
                                 d
                              
                            is rewarded less by post 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                              
                           .

Now, to estimate 
                              
                                 p
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 |
                                 d
                                 )
                              
                            (Eq. (8)) we build on the following intuition. If 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                              
                            is ranked highly, based on a relatively large value of 
                              
                                 p
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 |
                                 q
                                 )
                              
                           , and 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                              
                            and d are produced at almost the same points in time, based on a relatively high value of 
                              
                                 
                                    
                                       p
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 ,
                                 d
                                 )
                              
                           , then 
                              
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                              
                            should be able to boost d’s score. Hence, we estimate 
                              
                                 p
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 |
                                 d
                                 )
                              
                            by putting 
                              
                                 
                                    
                                       p
                                    
                                    
                                       θ
                                    
                                 
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 |
                                 d
                                 )
                                 
                                 ≔
                                 
                                 p
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 |
                                 q
                                 )
                                 ·
                                 
                                    
                                       p
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 ,
                                 d
                                 )
                                 
                                 ≔
                                 
                                 
                                    
                                       p
                                    
                                    
                                       θ
                                    
                                 
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 |
                                 q
                                 )
                                 ·
                                 
                                    
                                       p
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       ″
                                    
                                 
                                 ,
                                 d
                                 )
                              
                           . When we substitute this term in (8) we obtain:
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          θ
                                       
                                    
                                    (
                                    b
                                    |
                                    d
                                    )
                                    
                                    ≔
                                    
                                    
                                       
                                          
                                             ∏
                                          
                                          
                                             
                                                
                                                   d
                                                
                                                
                                                   ″
                                                
                                             
                                             ∈
                                             b
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      θ
                                                   
                                                
                                                (
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ″
                                                   
                                                
                                                |
                                                q
                                                )
                                                ·
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      t
                                                   
                                                
                                                (
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ″
                                                   
                                                
                                                ,
                                                d
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                1
                                             
                                             
                                                |
                                                b
                                                |
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

Putting everything together, we can now estimate the post-burst association strength, 
                              
                                 p
                                 (
                                 d
                                 |
                                 b
                                 )
                              
                           , as:
                              
                                 (10)
                                 
                                    
                                       
                                          p
                                       
                                       
                                          θ
                                       
                                    
                                    (
                                    d
                                    |
                                    b
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                ∏
                                             
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ″
                                                   
                                                
                                                ∈
                                                b
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            θ
                                                         
                                                      
                                                      (
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            ″
                                                         
                                                      
                                                      |
                                                      q
                                                      )
                                                      ·
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            t
                                                         
                                                      
                                                      (
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            ″
                                                         
                                                      
                                                      ,
                                                      d
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      |
                                                      b
                                                      |
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      C
                                                   
                                                   
                                                      L
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ∏
                                             
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      ″
                                                   
                                                
                                                ∈
                                                b
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            θ
                                                         
                                                      
                                                      (
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            ″
                                                         
                                                      
                                                      |
                                                      q
                                                      )
                                                      ·
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            t
                                                         
                                                      
                                                      (
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            ″
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            d
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      |
                                                      b
                                                      |
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           According to (10), if d is in b and the scores of posts surrounding d (including d itself) in b are high, the association strength between d and b increases. In this case, d’s scores will be boosted. Note, by the way, that d (
                              
                                 ∈
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                              
                           ) does not have to be in b; any d in 
                              
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                              
                            can have a non-zero association strength to any b in 
                              
                                 B
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       L
                                    
                                 
                                 )
                              
                           .

In this section, we describe our experimental setup; Section 4.1 lists our specific research questions; Section 4.2 describes the data set; Section 4.4 details the evaluation metrics and the significance testing used in the experiments. Finally, Sections 4.5 and 4.6 detail how BurstFuseX is trained and optimized, and the settings of the experiments.

The research questions guiding the remainder of the paper are:
                           
                              i
                              Does BurstFuseX outperform the standard data fusion method that it integrates? (See Section 5.1).

Does BurstFuseλ-Merge outperform BurstFuseCombSUM or BurstFuseCombMNZ? (See Section 5.1).

Does BurstFuseX outperform the best run to be fused? (See Section 5.1).

What is the effect of using burst information in BurstFuseX? I.e., what is the impact of the free parameter μ in Eq. (5)? (See Section 5.2).

What is the effect of the number of lists to be fused in BurstFuseX? (See Section 5.3).

Can we observe the hypothesized effect sketched in Fig. 1 (See Section 5.4).

How fast is BurstFuseX compared to other data fusion methods? (See Section 5.5).

Can BurstFuseX beat burst or time-sensitive microblog search algorithms? (See Sections 5.6 and 5.7).

Can BurstFuseX aid a single run that does not take time into account? (See Section 5.8).

In order to answer our research questions we work with the Tweets 2011 corpus (Macdonald, Ounis, Lin, Choudhury, & Soboroff, 2011), called Tweet11, provided by the TREC 2011 Microblog track. The collection is comprised of approximately 16 million tweets collected over a period of 2weeks (23th January until 8th February 2011, inclusive) sampled courtesy of Twitter. Different types of tweets in this data set are present, including replies and retweets. Each tweet has its own timestamp. Descriptive statistics about the collection are provided in Table 2
                        .

The task studied at the TREC 2011 Microblog track was: given a query with a timestamp, return relevant and interesting tweets in reverse chronological order. This task is akin to adhoc search on Twitter, where a user’s information need is represented by a query at a specific time. For 2012, the setting of the TREC was almost the same as that in 2011 except that the topics were different and the result lists were required to be ordered by relevance instead of chronologically (Soboroff et al., 2012). In our experiments, we rank tweets by relevance.
                           7
                           We reorder all 2011 runs by retrieval score before fusing them.
                        
                        
                           7
                        
                     

We use two sets of test topics (queries) in our experiments, the 2011 test set and the 2012 test set. In total, NIST (the National Institute of Standards and Technology) created 50 test topics for TREC 2011 Microblog track, each representing an information need at a specific point in time when the topics were issued. Fig. 3
                         shows an example topic. 49 test topics were used in the TREC and 2965 tweets were deemed relevant; some topics have just two relevant tweets while some have more than 100 relevant tweets. Indeed, one of the 50 topics originally created, MB050, did not have any relevant tweets in the pool, and it was therefore dropped from the evaluation. To assess the tweets, the assessors judged the relevance of a tweet after reading it. Tweets in the Tweet11 corpus were judged on the basis of the defined information need using a three-point scale: Not Relevant, Minimally Relevant and Highly Relevant (Macdonald et al., 2011).

A total of 59 groups participated in the TREC 2011 Microblog track, with each team submitting at most four runs, which resulted in 184 runs
                           8
                           These 2011 and 2012 runs can be downloaded from http://trec.nist.gov.
                        
                        
                           8
                         (Macdonald et al., 2011; Ounis et al., 2011). The official evaluation metric was precision at 30 (p@30) (Macdonald et al., 2011). The p@30 scores of these 184 runs varied dramatically, with the best run achieving a p@30 score of 0.4551 and the worst run achieving 0.000. In our experiments below, we do not use any runs whose p@30 scores are below 0.10, leaving us with 174 runs from the TREC 2011 Microblog track. Details about the implementation of each run from the TREC 2011 Microblog track can be found in (Macdonald et al., 2011; Ounis et al., 2011).

The Microblog search track continued in 2012 using the same corpus, Tweet11 (Soboroff et al., 2012). NIST created 60 new test topics representing information needs at specific points in time in TREC 2012 and labeled 6286 tweets as minimally or highly relevant. The TREC 2012 Microblog track received 121 runs
                           8
                         from 33 participating groups. The best run in TREC 2012 Microblog track is hitURLrun3 (Han et al., 2012), with its p@30 score being 0.4695. Once again, in our experiments, we only use the runs whose p@30 scores are no less than 0.10, leaving us with 117 runs from the TREC 2012 Microblog track. For details about the implementation of the runs from the TREC 2012 Microblog track we refer to (Soboroff et al., 2012). The track continued in 2013, but with a different experimental setup, where participants used a shared API to retrieve documents that were subsequently re-ranked.

We compare BurstFuseX to 3 data fusion baselines: 2 traditional unsupervised methods, i.e., CombSUM, CombMNZ, and a start-of-the-art supervised method, λ-Merge (Sheldon et al., 2011). As BurstFuseX utilizes burst information to boost the performance, we also compare BurstFuseX to 4 state-of-the-art burst-sensitive microblog search algorithms: time-based language model (TBLM) (Li & Croft, 2003), textual quality factor model with temporal query expansion (LM-T(qe)) (Massoudi et al., 2011), direct time-sensitive BM25 retrieval model (DIRECT-BM25 (mean)) (Dakka et al., 2012) and temporal tweet selection feedback method (TSF+QDRM) (Miyanishi et al., 2013b). All of these burst-sensitive algorithms first detect bursts (or time-spans) based on the content (words) of the posts and then utilize the burst information to boost the retrieval performance. Our BurstFuseX detect bursts based on the fusion scores of posts rather than directly based on the content of the posts.

To illustrate the merits of detecting bursts from fusion scores, we implement an alternative algorithm, BurstFuseX
                           posts
                         (BurstFuseCombSUM
                           posts
                         and BurstFuseCombMNZ
                           posts
                        ), which detects bursts using the burst detection approach presented in (Lappas et al., 2009), using the content of posts, and then fuses the input rank lists using our fusion framework. In other words, the only difference between BurstFuseX and BurstFuseX
                           posts
                         is in the way they detecte bursts. To build the index of the dataset that some of our baselines require, we apply Porter stemming, tokenization, and stopword removal (using INQUERY lists) to posts using the Lemur toolkit.
                           9
                           
                              http://www.lemurproject.org.
                        
                        
                           9
                         The features and settings used for λ-Merge are briefly described in Appendix A.

For performance evaluation in our experiments we consider both minimally relevant and highly relevant posts relevant and use the official metric, p@30 (precision at rank 30). We also report on p@5, p@10, p@15 and MAP (mean average precision) scores. Given a query q, the precision at rank k metrics p@k (
                           
                              k
                              =
                              5
                              ,
                              10
                              ,
                              15
                              ,
                              30
                           
                         in our experiments) for this query can be simply calculated by:
                           
                              
                                 p
                                 @
                                 k
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             k
                                          
                                       
                                       rel
                                       (
                                       
                                          
                                             d
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    
                                       k
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              rel
                              (
                              d
                              )
                           
                         is a binary function that indicates whether the document 
                           
                              
                                 
                                    d
                                 
                                 
                                    i
                                 
                              
                           
                         at rank i is relevant to the query q:
                           
                              
                                 rel
                                 (
                                 
                                    
                                       d
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                
                                                
                                                   if
                                                   
                                                   
                                                      
                                                         d
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   
                                                   is relevant to
                                                   
                                                   q
                                                   ,
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   otherwise
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The p@k score for a test collection is the average p@k score of all test queries in the collection. Mean average precision (MAP) is a commonly used recall-oriented metric. For each relevant document in the result list we take the precision at the rank of the document. We sum over these precision values and divide it by the total number of relevant documents. This gives us the average precision (AP) for a query, which can be formulated as:
                           
                              
                                 AP
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                       p
                                       @
                                       k
                                       ×
                                       rel
                                       (
                                       
                                          
                                             d
                                          
                                          
                                             k
                                          
                                       
                                       )
                                    
                                    
                                       |
                                       R
                                       |
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              R
                           
                         is the set of relevant documents for a given query, and N is the number of returned documents. Then, the MAP score for a test collection is obtained by taking the mean of AP scores over a set of test queries.

We use trec_eval
                           10
                           Like the runs, the evaluation script can be obtained from http://trec.nist.gov.
                        
                        
                           10
                         to compute the performance scores. We expect BurstFuseX to have a recall-enhancing effect. This may negatively impact very early precision, which is why we include p@5. But we hypothesize that we will see an increase in precision scores at lower ranks because of the expected boost in recall and the limited length of the lists being scored (only 30 items). For this reason we consider precision scores at multiple cut-offs (5, 10, 15, 30) as well as MAP. Statistical significance of observed differences between the performance of two runs is tested using a two-tailed paired t-test; we use 
                           
                              
                           
                         (or 
                           
                              
                           
                        ) to denote significant differences for 
                           
                              α
                              =
                              .
                              01
                           
                        , or 
                           
                              
                           
                        
                        (and 
                           
                              
                           
                        ) for 
                           
                              α
                              =
                              .
                              05
                           
                        .

Our BurstFuseX fusion method incorporates a single free parameter, μ in Eq. (5). The value of μ (
                           
                              ∈
                              {
                              0
                              ,
                              0.1
                              ,
                              …
                              ,
                              1
                              }
                           
                        ) is set using 10-fold cross validation performed over the entire set of queries in the TREC 2011 Microblog track. In the learning phase, the performance of BurstFuseX is optimized with respect to MAP. In other words, the set of 49 queries is randomly partitioned into 10 equal size subsamples; the performance for a single test subsample (5 queries) is that attained using a value of μ that maximizes MAP performance over the remaining subsamples (44 queries). We repeat the experiment 10 times and report the average scores on the metrics. In each time, the subsamples are permuted until all the 49 queries were chosen once for the test set. The setting of BurstFuseX over the entire set of queries in the TREC 2012 Microblog track is the same as that in TREC 2011 Microblog track. Our baseline fusion methods, i.e., CombSUM, CombMNZ and λ-Merge, do not incorporate free parameters.

@&#EXPERIMENTS@&#

We report on 8 main experiments in this paper. First, to understand the overall performance of BurstFuseX, we sample about 10% from the ranked lists produced by the participants in the TREC 2011 and 2012 Microblog tracks based on the lists’ p@30 distribution, respectively: 18 out of the 174 runs in TREC 2011 and 18 out of the 117 runs in TREC 2012, 6 each with p@30 scores between 0.20 and 0.30 (Class 3), between 0.30 and 0.40 (Class 2), and over 0.40 (Class 1). We also randomly choose two runs from each class to construct Class 4. See Tables 3 and 4
                        
                         for details of our sample runs from the TREC 2011 and 2012 Microblog track, respectively. Note that in our experiments, the runs in Class 1 in Tables 3 and 4 are actually the six best ones in the TREC 2011 and 2012 Microblog tracks, respectively. In every class, we use run1, run2, run3, run4, run5 and run6 to refer to the runs in descending order of p@30 score.

To understand the influence of bursts and see whether burst information is helpful to boost fusion performance and to which extent, we change the parameter μ in Eq. (5) from 0.0 to 1.0, which alters the degree to which burst-based and standard fusion information are to be mixed. Then, to understand the effect of the number of lists to be merged, we randomly choose 
                           
                              k
                              
                              (
                              ∈
                              {
                              2
                              ,
                              4
                              ,
                              6
                              ,
                              …
                              ,
                              38
                              }
                              )
                           
                         lists from the 174 TREC 2011 Microblog lists and fuse them by BurstFuseX and the standard fusion methods. We repeat the experiments 20 times and report the average results as well as the corresponding standard deviation scores.

In order to understand the topic-level performance of BurstFuseX, we provide an analysis of topic-level performance against the standard fusion method it cooperates. Next, to determine how fast BurstFuseX can merge result lists, we again fuse 
                           
                              k
                              
                              (
                              ∈
                              {
                              2
                              ,
                              4
                              ,
                              …
                              ,
                              30
                              }
                              )
                           
                         lists, and report and compare the average computing time required by BurstFuseX against that of the standard fusion methods. To understand whether BurstFuseX can improve over microblog search approaches that already incorporate time-sensitive search algorithms, we compare the performance of BurstFuseX, the standard fusion method it builds on and 5 time-sensitive baselines of searching microblogs.

To understand whether detecting bursts based on standard fusion scores works better than detecting based on the textual content of posts, we make a comparison between our fusion methods and those detecting bursts based on the textual contents of posts. We also compare burst-sensitive component lists to be fused and the fusion methods to see whether fusion can help to boost the retrieval performance. Finally, to understand whether BurstFuseX requires multiple result lists or if it can aid single runs that may not have taken time into account, we fuse only a single result list using BurstFuseX and compare the single result list and the output of BurstFuseX on that list.

As described in Section 3, in our experiments we use two unsupervised data fusion methods, CombSUM and CombMNZ, and one supervised method, λ-Merge, as representatives of the standard methods that can be integrated by BurstFuseX.

@&#RESULTS AND ANALYSIS@&#

In this section, we present our experimental results and perform an analysis. We follow the order of the research questions listed in Section 4.1. In particular, in Section 5.1 we examine the effectiveness of BurstFuseX on fusing the sample lists; in Section 5.2 we study the effect of using burst information and in Section 5.3 the effect of the number of lists on the overall performance; Section 5.4 reports on a topic level analysis; Section 5.5 is devoted to look at the runtime performance of BurstFuseX and in Section 5.6 we examine whether BurstFuseX is able to add anything in terms of performance on top of result lists produced by retrieval methods that already use temporal information; Section 5.7 provides a further analysis of the use of burst information in data fusion for microblog search; finally, Section 5.8 shows the performance of BurstFuseX on single result list.

We begin by addressing research questions i–iii. The performance of BurstFuseX and of the standard fusion methods X that it incorporates is detailed in Table 5
                        , with scores based on the 10% sample runs from the TREC 2011 Microblog track, as mentioned in Section 4.6. It is clear from Table 5 that the performance of unsupervised data fusion and the corresponding burst-aware fusion methods, i.e., CombSUM, CombMNZ, BurstFuseCombSUM and BurstFuseCombMNZ, is better than that of the best result list that is used in the merging process (run1) for all classes and on almost all metrics. Many of these improvements are statistically significant. More importantly, in class 1 all of these methods beat the best recorded run (isiFDL) in the TREC 2011 Microblog track (e.g., the p@30 score for BurstFuseCombSUM is 0.5578 while that of the best run in the track is 0.4551), and even the standard fusion method it integrates, i.e., CombSUM, outperforms the best recorded run. Meanwhile, in class 1, the supervised data fusion methods λ-Merge and BurstFuseλ-Merge can also beat the best recorded run in terms of the official metric p@30. All of this demonstrates that data fusion strategies can help improve effectiveness in searching microblogs. One of the main reasons behind this is that various retrieval approaches often return very different irrelevant posts, but many of the same relevant posts.

It is worth noting that in most cases BurstFuseX outperforms the standard fusion method X that it incorporates for all classes and on nearly all metrics (MAP, p@10, p@15, p@30). Almost all of these improvements are substantial and statistically significant. For instance, when fusing the runs in class 4, the MAP and p@30 metrics of BurstFuseCombMNZ are 0.2883 and 0.4387, respectively, compared to only 0.2794 and 0.4048, respectively, for CombMNZ. This finding attests to the merits of incorporating burst information into data fusion and shows that using burst information can improve the performance of existing data fusion methods in terms of MAP and p@30.

Interestingly, in Table 5 when we consider the p@5 scores, we see that BurstFuseX always outperforms the best single run but that it loses against the standard fusion method X on which it builds in most cases. One reason is that some relevant posts ranked very high in the lists being merged but not near any of the bursts are forced down the ranking. Another reason is that a very small number of irrelevant posts in the bursts are promoted to slightly higher ranks in the fused list. In contrast, the gain obtained from relevant posts that are ranked at the bottom of the runs but near bursts are clearly observed at bigger cut-offs, resulting in the improvements of p@10, p@15 and p@30 scores.

Additionally, from Table 5 we see that, in terms of MAP, BurstFuseCombSUM outperforms BurstFuseCombMNZ, and both of them outperform BurstFuseλ-Merge in Class 2 (0.2651, 0.2587, 0.2161, respectively). In other words, BurstFuseCombSUM outperforms BurstFuseCombMNZ, followed by BurstFuseλ-Merge. This is quite obvious in Class 1, Class 2 and Class 4 for instance. In terms of the standard fusion methods, CombSUM performs almost the same as CombMNZ without statistically significant differences. Both CombSUM and CombMNZ easily beat the supervised standard fusion method λ-Merge; in same cases, λ-Merge becomes worse than the best result list (run1) to be fused in the corresponding class. This may be due to over-fitting of λ-Merge.

As a sanity check, so as to confirm our observations about the performance of BurstFuseX, we also test BurstFuseX on the 10% sample runs from TREC 2012 Microblog track. We present the experimental results of BurstFuseX and the standard fusion method X it incorporates in Table 6
                        . Clearly, our observations about the performance of BurstFuseX and the standard fusion methods when fusing the runs from TREC 2011 Microblog track are confirmed by the 2012 data. For instance, in Table 6 we see that all data fusion methods, both BurstFuseX and other ones, when fusing runs in Class 1, outperform the best result run of the TREC 2012 Microblog track, and almost all of these improvements are statistically significant in terms of the metrics listed in the table. Below, we only report experimental results for the TREC 2011 Microblog track test collection: the 2012 collection consistently yields the same overall results and trends.

Next we address research question iv and examine the effect of using different amounts of burst information in our burst-aware fusion method. Put differently, we examine the impact of the free parameter μ in Eq. (5). Fig. 4
                         depicts the p@30 performance curves for BurstFuseX and the corresponding standard fusion methods it integrates when fusing result lists in Class 1, Class 2, Class 3 and Class 4, respectively. For 
                           
                              μ
                              =
                              0
                           
                        , BurstFuseX amounts to the standard fusion method X that it integrates; more weight is put on burst information with higher values of μ; for 
                           
                              0
                              <
                              μ
                              <
                              1
                           
                        , the standard fusion scores of posts (according to method X) as well as the burst information are utilized for fusing the lists.

It is worth noting in Fig. 4 that when fusing lists in different quality classes, the official metric p@30 scores of BurstFuseX (
                           
                              μ
                              >
                              0
                           
                        ) are usually higher than those of the standard fusion method X it incorporates (
                           
                              μ
                              =
                              0
                           
                        ), especially when 
                           
                              μ
                              =
                              0.6
                              ,
                              
                              0.7
                           
                        . For instance, in Class 4 the p@30 performance of BurstFuseCombSUM peaks at 
                           
                              μ
                              =
                              0.7
                           
                         with the score of 0.4451, while that of the standard fusion method it integrates, CombSUM achieves only 0.3918. As we observed before, BurstFuseX works better when it integrates one of the unsupervised standard fusion methods than the supervised fusion method λ-Merge.

In addition, it is clear from Fig. 4 that when the quality of the result lists as a whole is higher, it will be more useful to utilize burst information. Fig. 4 shows that even if 
                           
                              μ
                              =
                              1.0
                           
                        , BurstFuseX still outperforms the standard fusion method it incorporates in high quality classes, like Class 1 and Class 2. But when the quality of the result lists as a whole becomes lower, the positive impact of BurstFuseX is reduced. We provide a further analysis of the use of burst information in data fusion and single retrieval microblog search algorithms in Sections 5.7 and 5.8.

We have already seen that BurstFuseX outperforms the standard fusion methods it incorporates when fusing 6 lists in different quality classes. We now address research question v and explore the effect on the performance of BurstFuseX of varying the number of lists being merged, in terms of MAP, p@5, p@15 and p@30. In Fig. 5
                        , we randomly choose 
                           
                              k
                              ∈
                              {
                              2
                              ,
                              4
                              ,
                              6
                              ,
                              …
                              ,
                              38
                              }
                           
                         lists from the 174 lists made available by the TREC 2011 Microblog track and then fuse them. For each k, we repeat the experiment 20 times and report on the average scores as well as the standard deviation. We use CombSUM and BurstFuseCombSUM as a representative example; for the other combinations with a standard fusion method X qualitatively similar results can be observed.

As can be seen in Fig. 5, with fewer than 12 lists to be merged by either BurstFuseX or the standard fusion method it builds on, the addition of one more list tends to lead to performance increases across all metrics. Beyond 12 lists, the performance gains of additional lists tend to level off. This is because despite the fact that with more lists, on average we may see more high quality lists, more low quality lists may show up as well. Unlike the MAP, p@15 and p@30 performance of BurstFuseCombSUM where it always enhances that of CombSUM, the early precision p@5 performance of BurstCombSUM is worse than that of CombSUM especially when fewer lists are merged. This observation is consistent with those in both Tables 5 and 6. Performance gains in terms of p@15 of BurstFuseCombSUM and CombSUM continue even when more than 16 lists are being fused. In contrast, in terms of p@30, when the number of lists to be merged increases, the gain of BurstFuseCombSUM over CombSUM decreases. As more lists are being fused, more noise is being brought in, especially with posts ranked lower.

Next, we take a closer look at per query improvements of BurstFuseX over the underlying standard fusion method X, thereby addressing research question vi. For brevity, we only consider BurstFuseCombSUM as a representative to report all the queries (topics) performance differences against that of the standard fusion method it incorporates, and we only consider runs in Class 1, Class 2, Class 3 and Class 4, respectively. The results for other instances of BurstFuseX are qualitatively similar.


                        Fig. 6
                         shows the per query performance differences in terms of AP, p@5, p@15 and p@30, respectively, between BurstFuseCombSUM and CombSUM. Overall, gains by BurstFuseCombSUM over CombSUM outnumber losses for p@15 and p@30 as well as MAP, but not for very early precision, i.e., p@5. Gains by BurstFuseCombSUM over CombSUM are due mainly to topics that are discussed only in very specific time intervals. Examples include topics MB010 (Egyptian protesters attack museum), MB011 (Kubica crash) and MB015 (William and Kate fax save-the-date). Invariably, for such topics we found evidence of the intuition depicted in Fig. 1: posts that are ranked low in a small number lists but that are pushed into the final merged list by BurstFuseX because they are central to a burst. For instance, in response to topic MB010 (Egyptian protesters attack museum), post #30354903104749568 is ranked near the bottom in only two lists (at ranks 26 and 27 in runs clarity1 and DFReekLIM30, respectively). Because many posts for the topic were generated around the same time interval (January 26–29, 2011, when the event happened) and are ranked highly in many lists to be fused, post #30354903104749568 is rewarded and ranked as high as top 6 in the merged list.

Topics for which BurstFuseCombSUM cannot beat ComSUM tend to be quite general and unrelated to any specific time windows. Examples include topics MB023 (Amtrak train service) and MB027 (reduce energy consumption). For a very small number of queries, BurstFuseCombSUM’s performance, in terms of MAP or p@30 is worse than that of CombSUM. One reason that we observed for this phenomenon is that a very small number of posts are not relevant to the topics even if they are central to the bursts according to their timestamps, and hence they should not be rewarded. An example here is topic MB031 (Special Olympics athletes). In response to this topic, result lists to be fused ranked some irrelevant posts highly, but these posts are still in the bursts, which results in promoting these posts to high ranks, which hurts the performance.

We now turn to research question vii and examine the run-times of BurstFuseX. In particular, we explore what the added costs in terms of run-time of BurstFuseX is on top of the standard fusion methods that it incorporates. Our implementation of BurstFuseX is developed in C++ and the experiments are run on a 10.6.8 MacBook Pro computer with 4GB memory and a 2.3GHz Intel core i5 processor. In Table 7
                        , we randomly choose 
                           
                              k
                              ∈
                              {
                              2
                              ,
                              4
                              ,
                              6
                              ,
                              8
                              ,
                              12
                              ,
                              18
                              ,
                              24
                              ,
                              30
                              }
                           
                         lists from the 174 lists available from the TREC 2011 Microblog track. For each k, we repeat the following experiment 20 times: sample a query from the TREC 2011 Microblog track test set, run fuse k result lists for the query (using CombSUM, CombMNZ, λ-Merge as well as BurstFuseCombSUM, BurstFuseCombMNZ and BurstFuseλ-Merge), record the wall clock time. The results are recorded in Table 7 and plotted in Fig. 7
                        .

As can be seen in Table 7 and Fig. 7, the overhead of running BurstFuseX over simply running the standard fusion method X is very limited, but increases with the number of lists to be merged, especially when BurstFuseX incorporates with CombSUM and CombMNZ. BurstFuseCombSUM and BurstFuseCombMNZ merge the lists within 0.01s when given 30 result lists and within 0.001s when fusing two lists. In contrast, however, compared to any of the fusion methods, BurstFuseλ-Merge has to spend more time, which is almost the same as that of the fusion method it builds on. In addition, it is worth noting in Fig. 7 that in many cases, as the number of lists to be fused increases, the time spent on fusing is almost linear for BurstFuseX and the standard fusion method as well. For instance, the time needed to fuse 8 lists by BurstFuseCombSUM is nearly double the time needed for fusing 4 lists (2.96e−3s and 1.50e−3s, respectively).

BurstFuseX uses temporal information in an essential way. Research question viii asks what happens when BurstFuseX fuses result lists that have been generated using temporal information themselves? That is, is there anything left to gain by using BurstFuseX? To answer this question, we explore the performance of BurstFuseX using five result lists that themselves consider temporal information: isiFDRML (Metzler & Cai, 2011; Metzler et al., 2012), DFReeKLIM30 (Horn et al., 2011), Wise2ndRun (Wei et al., 2011), ICTNET11MBR3 (Cao et al., 2011) and UDMicroIDFD (Amati et al., 2011). We use BurstFuseX as well as the standard fusion methods, CombSUM, CombMNZ and λ-Merge to fuse those result lists, and report the comparison results.


                        Table 8
                         shows the result of the comparisons between BurstFuseX and the five time-sensitive result lists. Obviously, CombSUM and CombMNZ perform on a par with the best result list (isiFDRML). For all metrics but p@5, BurstFuseCombSUM and BurstFuseCombMNZ outperform the best result run as well as the standard fusion method they incorporate; many of the improvements are statistically significant. This illustrates that exploring time information in data fusion has a different effect than utilizing time information in an individual ranking function, an effect that can lead to performance increases. One of the main reasons behind this is that posts within intervals in which many relevant posts appear can only be confirmed to be relevant by gathering data from multiple lists, time-sensitive or not. Finally, neither λ-Merge nor BurstFuseλ-Merge can beat the best time-sensitive result list; as before, BurstFuseλ-Merge does improve over λ-Merge.

We continue with research question viii and provide a further analysis of the use of burst information in the setting of microblog search. More specifically, the component lists that we consider next are generated using a temporal model for microblogs (TMM) (Choi & Croft, 2012), a textual quality factor model with temporal query expansion (LM-T(qe)) (Massoudi et al., 2011), a direct time-sensitive BM25 retrieval model (DIRECT-BM25 (mean)) (Dakka et al., 2012) and a temporal tweet selection feedback method (TSF+QDRM) (Miyanishi et al., 2013b).


                        Table 9
                         shows a comparison between fusion methods and the component lists that are burst-sensitive. As can be seen in the table, except for the performance of λ-Merge, which is slightly worse than that of the best component list, all other fusion methods can boost retrieval performance, especially for the fusion methods that we propose in this paper. This finding again underlines the merit of fusion for searching microblog posts and of using bursts information in the fusion step.

In Table 9 we also compare our BurstFuseX with CombSUM, CombMNZ, λ-Merge, and BurstFuseX
                           posts
                        , where BurstFuseX
                           posts
                         is the fusion method that detects bursts based on the content of posts by the detection approached in (Lappas et al., 2009) and then integrates burst information into the fusion process. Clearly, BurstFuseX can still significantly enhance the retrieval performance in all cases and outperforms all standard fusion methods and the best component run, in contrast with BurstFuseX
                           posts
                        . We also see that detecting bursts based on one of the standard fusion methods, CombSUM or CombMNZ, works better than detecting bursts based on the content of posts.

Finally, to address our final research question, ix, and understand whether BurstFuseX requires multiple result lists or whether it can aid single runs that may not have taken time into consideration, we feed BurstFuseX single result lists and compare the output against the single input list.


                        Table 10
                         shows the results on the result lists in class 1; results on other result lists are qualitatively similar. As can be seen in the table, the retrieval performance of BurstFuseX is almost the same as that of the input result list and the difference between them is not statistically significant for any of the metrics. The main reason why BurstFuseX cannot significantly beat the input result list is that detecting bursts within a small set of documents (i.e., those contained in a single result list) is challenging.

@&#CONCLUSION@&#

Various features of microblog posts make searching such posts a real challenge: their limited length, their dynamic nature, the creative language usage and their highly contextualized nature. However, the special nature of microblog posts also offers unique opportunities. In this paper, we have focused on utilizing one such special feature for boosting the performance of search algorithms for microblog posts. We have proposed a data fusion approach, BurstFuseX, that fuses result lists based in part on the bursty nature of many discussions on microblog platforms. Our approach is based on integrating information generated by a standard fusion method, such as CombSUM, CombMNZ or λ-Merge, detecting bursts of posts across the lists being fused, and rewarding posts that are published in or near a burst containing highly ranked posts. Our experimental results show that detecting bursts and then using burst information into a standard fusion method can enhance the retrieval performance compared to the standard fusion method it integrates, in terms of mean average precision as well as precision-oriented measures. Our new fusion method has a strong recall-enhancing effect; compared to the standard fusion method it incorporates, this comes at a small price in terms of a small drop in very early precision measures such as p@5. Our experimental results also show that our BurstFuseX method can significantly outperform burst or time-sensitive retrieval models and models that detect bursts based on the content of posts.

As to future work, we have only explored data fusion techniques in microblog search. But data fusion can be, and has been, applied in a variety of areas in IR, like federated search (Crestani & Markov, 2013; Shokouhi & Si, 2011), cross-lingual search (Si et al., 2008), and finding groups of knowledgeable experts (Liang & de Rijke, 2013). How to apply our burst-aware data fusion in these other areas is an open research question. One other avenue for future work is to integrate temporal information into web search—for so-called fresh results (Lefortier, Serdyukov, & de Rijke, 2014).

@&#ACKNOWLEDGEMENTS@&#

We would like to thank our reviewers for valuable comments and suggestions that helped to improve the paper.

This research was partially supported by the China Scholarship Council, the European Community’s Seventh Framework Programme (FP7/2007-2013) under grant agreements nr 288024 (LiMoSINe) and nr 312827 (VOX-Pol), the Netherlands Organisation for Scientific Research (NWO) under project nrs 727.011.005, 612.001.116, HOR-11-10, 640.006.013, the Center for Creation, Content and Technology (CCCT), the QuaMerdes project funded by the CLARIN-nl program, the TROVe project funded by the CLARIAH program, the Dutch national program COMMIT, the ESF Research Network Program ELIAS, the Elite Network Shifts project funded by the Royal Dutch Academy of Sciences (KNAW), the Netherlands eScience Center under project number 027.012.105 the Yahoo! Faculty Research and Engagement Program, the Microsoft Research PhD program, and the HPC Fund.

In this appendix we detail one of the standard fusion methods we use, λ-Merge. To be able to define the fusion score for document d in response to query q according to λ-Merge, we need to consider the sum of weighting the individual document scores in each list by the weight of the corresponding list:
                        
                           (A.1)
                           
                              g
                              (
                              d
                              ;
                              q
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                    
                                 
                              
                              
                                 
                                    α
                                 
                                 
                                    m
                                 
                              
                              ·
                              f
                              (
                              
                                 
                                    x
                                 
                                 
                                    d
                                 
                                 
                                    
                                       
                                          L
                                       
                                       
                                          m
                                       
                                    
                                 
                              
                              ;
                              θ
                              )
                              ,
                           
                        
                     where 
                        
                           
                              
                                 α
                              
                              
                                 m
                              
                           
                        
                      is the weight of list 
                        
                           
                              
                                 L
                              
                              
                                 m
                              
                           
                           ,
                           
                           f
                           (
                           
                              
                                 x
                              
                              
                                 d
                              
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                    
                                 
                              
                           
                           ;
                           θ
                           )
                        
                      is the scoring function for d in 
                        
                           
                              
                                 L
                              
                              
                                 m
                              
                           
                        
                     , with parameters 
                        
                           θ
                        
                     . We adapt a linear function for 
                        
                           f
                           (
                           
                              
                                 x
                              
                              
                                 d
                              
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                    
                                 
                              
                           
                           ;
                           θ
                           )
                        
                     , due to its widespread use (Atrey, Hossain, Saddik, & Kankanhalli, 2010), such that:
                        
                           
                              f
                              (
                              
                                 
                                    x
                                 
                                 
                                    d
                                 
                                 
                                    
                                       
                                          L
                                       
                                       
                                          m
                                       
                                    
                                 
                              
                              ;
                              θ
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    θ
                                 
                                 
                                    n
                                 
                              
                              ·
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          n
                                       
                                       
                                          d
                                       
                                    
                                 
                                 
                                    
                                       
                                          L
                                       
                                       
                                          m
                                       
                                    
                                 
                              
                              ,
                           
                        
                     where 
                        
                           
                              
                                 θ
                              
                              
                                 n
                              
                           
                        
                     , the n-th dimension of vector 
                        
                           θ
                        
                     , is the weight of the n-th feature, and 
                        
                           
                              
                                 x
                              
                              
                                 
                                    
                                       n
                                    
                                    
                                       d
                                    
                                 
                              
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                    
                                 
                              
                           
                        
                     , the n-th dimension of 
                        
                           
                              
                                 x
                              
                              
                                 d
                              
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                    
                                 
                              
                           
                        
                     , is the value of the n-th feature of d in 
                        
                           
                              
                                 L
                              
                              
                                 m
                              
                           
                        
                     .

Now, writing C to denote the smoothed objective, according to λ-Merge the parameters 
                        
                           
                              
                                 α
                              
                              
                                 m
                              
                           
                        
                      and 
                        
                           
                              
                                 θ
                              
                              
                                 n
                              
                           
                        
                      can be updated based on the gradients 
                        
                           ∂
                           C
                           /
                           ∂
                           
                              
                                 α
                              
                              
                                 m
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 d
                              
                           
                           (
                           ∂
                           C
                           /
                           ∂
                           g
                           (
                           d
                           ;
                           q
                           )
                           )
                           ·
                           (
                           ∂
                           g
                           (
                           d
                           ;
                           q
                           )
                           /
                           ∂
                           
                              
                                 α
                              
                              
                                 m
                              
                           
                           )
                        
                      and 
                        
                           ∂
                           C
                           /
                           ∂
                           
                              
                                 θ
                              
                              
                                 n
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 d
                              
                           
                           (
                           ∂
                           C
                           /
                           ∂
                           g
                           (
                           d
                           ;
                           q
                           )
                           )
                           ·
                           (
                           ∂
                           g
                           (
                           d
                           ;
                           q
                           )
                           /
                           ∂
                           
                              
                                 θ
                              
                              
                                 n
                              
                           
                           )
                        
                     , respectively. Then, 
                        
                           ∂
                           C
                           /
                           ∂
                           g
                           (
                           d
                           ;
                           q
                           )
                        
                      is defined as:
                        
                           
                              ∂
                              C
                              /
                              ∂
                              g
                              (
                              d
                              ;
                              q
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       e
                                    
                                 
                              
                              |
                              
                                 
                                    Δ
                                 
                                 
                                    de
                                 
                              
                              |
                              {
                              
                                 
                                    I
                                 
                                 
                                    d
                                    ≻
                                    e
                                 
                              
                              -
                              1
                              /
                              (
                              1
                              +
                              exp
                              (
                              g
                              (
                              e
                              ;
                              q
                              )
                              -
                              g
                              (
                              d
                              ;
                              q
                              )
                              )
                              )
                              }
                              ,
                           
                        
                     where 
                        
                           |
                           
                              
                                 Δ
                              
                              
                                 de
                              
                           
                           |
                        
                      is the absolute change in the performance metric if document d and e were swapped in the current ranking, and the indicator 
                        
                           
                              
                                 I
                              
                              
                                 d
                                 ≻
                                 e
                              
                           
                        
                      is 1 when d is judged more relevant than e, 0 otherwise. As explained in the main text, MAP is the metric on which we focus; hence, we optimize λ-Merge for MAP.

Let 
                        
                           
                              
                                 r
                              
                              
                                 d
                              
                           
                        
                      and 
                        
                           
                              
                                 r
                              
                              
                                 e
                              
                           
                        
                      denote the rank positions of d and e in 
                        
                           
                              
                                 L
                              
                              
                                 m
                              
                           
                        
                     . Assume that d and e are misranked by current function g, i.e., 
                        
                           
                              
                                 r
                              
                              
                                 d
                              
                           
                           >
                           
                              
                                 r
                              
                              
                                 e
                              
                           
                        
                      but the relevance level of 
                        
                           d
                           ,
                           l
                           (
                           d
                           )
                        
                     , is larger than that of 
                        
                           e
                           ,
                           l
                           (
                           e
                           )
                        
                     , then
                        
                           
                              |
                              
                                 
                                    Δ
                                 
                                 
                                    de
                                 
                              
                              |
                              =
                              
                                 
                                    1
                                 
                                 
                                    R
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      e
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      d
                                                   
                                                
                                             
                                          
                                       
                                       l
                                       (
                                       k
                                       )
                                       P
                                       @
                                       k
                                       -
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      e
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      d
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             l
                                          
                                          
                                             ′
                                          
                                       
                                       (
                                       k
                                       )
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                       @
                                       k
                                    
                                 
                              
                              .
                           
                        
                     Here, R is the number of relevant documents for that query, 
                        
                           l
                           (
                           k
                           )
                        
                      is the relevance level of the document at rank position 
                        
                           k
                           ,
                           P
                           @
                           k
                        
                      is the precision at rank k, and 
                        
                           
                              
                                 l
                              
                              
                                 ′
                              
                           
                           (
                           k
                           )
                        
                      is the relevance value after the documents at positions 
                        
                           
                              
                                 r
                              
                              
                                 d
                              
                           
                        
                      and 
                        
                           
                              
                                 r
                              
                              
                                 e
                              
                           
                        
                      being swapped. Mathematically, the remaining derivatives can be presented as: 
                        
                           ∂
                           g
                           (
                           d
                           ;
                           q
                           )
                           /
                           ∂
                           
                              
                                 α
                              
                              
                                 m
                              
                           
                           =
                           f
                           (
                           
                              
                                 x
                              
                              
                                 d
                              
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                    
                                 
                              
                           
                           ;
                           θ
                           )
                        
                     , and 
                        
                           ∂
                           g
                           (
                           d
                           ;
                           q
                           )
                           /
                           ∂
                           
                              
                                 θ
                              
                              
                                 n
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 m
                              
                           
                           
                              
                                 α
                              
                              
                                 m
                              
                           
                           ·
                           
                              
                                 x
                              
                              
                                 
                                    
                                       n
                                    
                                    
                                       d
                                    
                                 
                              
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                    
                                 
                              
                           
                        
                     . After training, the parameters 
                        
                           θ
                        
                      and the weight 
                        
                           
                              
                                 α
                              
                              
                                 m
                              
                           
                        
                      of each list are obtained. Then we employ max–min normalization to 
                        
                           g
                           (
                           d
                           ;
                           q
                           )
                        
                     , such that:
                        
                           (A.2)
                           
                              
                                 
                                    F
                                 
                                 
                                    λ
                                    -
                                    Merge
                                 
                              
                              (
                              d
                              ;
                              q
                              )
                              
                              ≔
                              
                              
                                 
                                    g
                                    (
                                    d
                                    ;
                                    q
                                    )
                                    -
                                    
                                       min
                                    
                                    (
                                    
                                       
                                          g
                                       
                                       
                                          q
                                       
                                    
                                    )
                                 
                                 
                                    
                                       max
                                    
                                    (
                                    
                                       
                                          g
                                       
                                       
                                          q
                                       
                                    
                                    )
                                    -
                                    
                                       min
                                    
                                    (
                                    
                                       
                                          g
                                       
                                       
                                          q
                                       
                                    
                                    )
                                 
                              
                              ,
                           
                        
                     where 
                        
                           min
                           (
                           
                              
                                 g
                              
                              
                                 q
                              
                           
                           )
                        
                      and 
                        
                           max
                           (
                           
                              
                                 g
                              
                              
                                 q
                              
                           
                           )
                        
                      are the minimum and maximum value of g in response to q. For further details about λ-Merge we refer to (Donmez, Svore, & Burges, 2008; Sheldon et al., 2011).

Before training λ-Merge, a number of features have to be extracted for 
                        
                           d
                           ∈
                           
                              
                                 C
                              
                              
                                 L
                              
                           
                        
                     . Table A.11
                      lists the features used to construct our version of λ-Merge. We identify ten features, extracted from two levels: query-post level and post level; all features are represented by either binary or real numbers. At the query-post level, following Tsai et al. (2008), we use three features: Rank, Rankers and IsTop-N. Rank is defined in Eq. (1). Rankers is the number of ranked lists in which the post appears divided by the total number of lists to be merged. IsTop-N is a binary feature to indicate if this document is within the top-N results in the list. At the post level, we extract features capable of indicating the quality of a post (Macdonald et al., 2011; Ounis et al., 2011); the post features include Link, Hashtag, Retweet to indicate if the document contains links, hashtags, and retweets. The post-level features also consist of content quality indicators of a post (Density, Capitalization and Length) (Lee et al., 2001; Weerkamp & de Rijke, 2012). We also extract a feature that we call “post-burstiness” based on bursts. Density of a post is defined as the sum of 
                        
                           tf
                           ·
                           idf
                        
                      values of non-stopwords, divided by the number of stopwords they are apart, squared (Lee et al., 2001). As in Eq. (A.2) we use max–min normalization to normalize the scores. The Capitalization score of d is obtained by determining the fraction of sentences in d that have a leading capital, seeing to which degree this deviates from the median and then applying max–min normalization (Weerkamp & de Rijke, 2012). The Length score of d is obtained by considering the deviation from the median length of posts in the collection. The Post-burstiness score of d is obtained by utilizing burst information.

@&#REFERENCES@&#

