@&#MAIN-TITLE@&#Skeleton-based intrinsic symmetry detection on point clouds

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose an intrinsic symmetry detection algorithm over imperfect point clouds by leveraging recent advances in curve skeleton extraction from point clouds.


                        
                        
                           
                           We employ the electors voting scheme where the symmetry electors are pruned with a cascade of symmetry filters.


                        
                        
                           
                           Our method works with raw scans as well as the low quality point clouds captured by Microsoft Kinect.


                        
                        
                           
                           We apply our method to repair incomplete scans based on the detected intrinsic symmetries.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Symmetry detection

Intrinsic symmetry

Skeleton

Point clouds

Self-isometry

@&#ABSTRACT@&#


               
               
                  We present a skeleton-based algorithm for intrinsic symmetry detection on imperfect 3D point cloud data. The data imperfections such as noise and incompleteness make it difficult to reliably compute geodesic distances, which play essential roles in existing intrinsic symmetry detection algorithms. In this paper, we leverage recent advances in curve skeleton extraction from point clouds for symmetry detection. Our method exploits the properties of curve skeletons, such as homotopy to the input shape, approximate isometry-invariance, and skeleton-to-surface mapping, for the detection task. Starting from a curve skeleton extracted from an input point cloud, we first compute symmetry electors, each of which is composed of a set of skeleton node pairs pruned with a cascade of symmetry filters. The electors are used to vote for symmetric node pairs indicating the symmetry map on the skeleton. A symmetry correspondence matrix (SCM) is constructed for the input point cloud through transferring the symmetry map from skeleton to point cloud. The final symmetry regions on the point cloud are detected via spectral analysis over the SCM. Experiments on raw point clouds, captured by a 3D scanner or the Microsoft Kinect, demonstrate the robustness of our algorithm. We also apply our method to repair incomplete scans based on the detected intrinsic symmetries.
               
            

@&#INTRODUCTION@&#

Symmetry is a universal phenomenon in nature, science, and art. Recently, symmetry analysis and symmetry-aware shape processing have been intensively studied in computer graphics, where the vast majority of existing works have been on extrinsic symmetry detection over complete shapes represented by polygonal meshes [1]. In this paper, we are interested in the problem of intrinsic symmetry detection over point cloud data. In particular, the input point cloud is assumed to be imperfect with noise and missing data, which are typical results of acquisition via 3D capture/scanning devices.

Intrinsic symmetry is defined as a region over a shape that possesses a self-map that preserves geodesic distances. Naturally, existing approaches to intrinsic symmetry detection have relied on geodesic distances in one way or another and they have all been applied to closed meshes [2–5]. One exception is the work by Ovsjanikov et al. [6] which detects symmetries in signature space defined by the eigenfunctions of the Laplace–Beltrami operator. However, this method also works on meshes and cannot deal with substantial topological defects. However, accurate geodesic distance computation over a point cloud is challenging in general [7], making it difficult to adapt existing symmetry detection schemes on meshes to work on imperfect point clouds.

The key idea in this paper is to take advantage of the recent success on robust curve skeleton extraction from imperfect point cloud data [8–12] and transform the symmetry detection problem from an input point cloud to its extracted curve skeleton. Given an imperfect point cloud, we expect curve skeleton extraction to be an easier problem than that of intrinsic symmetry detection since the former relies primarily on local geometry analysis and the latter is a global problem that is particularly susceptible to missing data. That being said, imperfect point clouds typically result in imperfect skeletons, which pose challenges to the ensuing symmetry analysis. For 3D scans of human body obtained by a RGBD camera such as Microsoft Kinect, a pre-computed skeleton is fitted to the scan in real time, which can be directly used in our symmetry detection pipeline. The detected symmetry information can in turn be used to complete the low quality scans of Kinect.

In the paper, we propose an intrinsic symmetry detection algorithm over imperfect point clouds by exploiting several properties resulting from robust curve skeleton extraction [9,10,12]: (i) homotopy to the input shape; (ii) approximate isometry-invariance; and (iii) skeleton-to-surface mapping. In our work, by isometry, we mainly refer to articulated deformation (or skeletal deformation) of the input shape which is approximately isometric.

Given a point cloud, our algorithm returns a set of self-symmetric regions, as well as a set of pairs of symmetric regions, if any. Each detected symmetry represents a partial intrinsic symmetry and together they constitute a global intrinsic symmetry of the input shape, see Fig. 1
                     (4). To accomplish this, we compute symmetry electors, each of which is composed of a set of node pairs filtered by a cascade of pruning tests. The electors are then used to vote for symmetric node pairs indicating the symmetry map on the skeleton. The symmetry map is transferred to the point cloud, leading to a symmetry correspondence matrix over which we perform spectral analysis to extract the final symmetry regions for the point cloud.

@&#RELATED WORK@&#

We concentrate on the most relevant works in intrinsic symmetry detection. For comprehensive review, we refer the reader to the survey [1].

Existing approaches to intrinsic symmetry detection have so far been working with closed meshes. To obtain the geodesic distance preserving self-mapping, Raviv et al. [2,5] directly minimize distance distortion in the space of Generalized Multi-Dimensional Scaling (GMDS) embedding. Ovsjanikov et al. [6] detect global intrinsic symmetry through exploiting the fact that the intrinsic symmetries of a shape are transformed into the Euclidean symmetries in the signature space defined by the eigenfunctions of the Laplace–Beltrami operator. Lipman and Funkhouser [13] develop the Möbius voting to find near-isometric correspondence for 3D shapes, which is extended by Kim et al. [14] in detecting global intrinsic symmetry. Through defining continuous symmetry as infinitesimal rigid transformations, represented as tangent vector fields, Ben-Chen et al. [15] detect cylindrical and translational symmetry on a smooth manifold surface.

Berner et al. [16] detect partial symmetries in 3D objects through matching graphs of feature lines. Lasowski et al. [17] propose a probabilistic framework for partial intrinsic symmetry detection based on Markov random field model. Mitra et al. [18] detect intrinsic regularity in 3D shapes using multidimensional scaling. Xu et al. [3] detect partial intrinsic symmetries for 3D shapes through directly voting for intrinsic reflectional symmetry axis transform on the input surface.

A few works has been devoted to symmetry detection on imperfect point cloud data. Some researchers [4,19] have attempted to detect extrinsic symmetry on point clouds. Their success relies on the robust extraction of symmetry-invariant features. Lipman et al. [20] propose to detect symmetry in the space of correspondences. They construct a random walk matrix for symmetry, called symmetry correspondence matrix (SCM), where each entry measures the probability of two points being symmetric. Spectral analysis is performed on the SCM to extract the symmetry regions as orbits reflecting the connectedness in the random walk graph. Due to the robustness of spectral analysis, the method can be used to detect extrinsic symmetry on point clouds. Xu et al. [21] extend this approach to detect multiscale partial intrinsic symmetries. However, none of the above works can detect intrinsic symmetry on point clouds. Our paper makes it possible through combining the framework with a skeleton-based approach. Recently, Berger and Silva [22] propose a method for computing non-rigid matching for point clouds through deriving the so-called medial Laplacian and a diffusion process based on the medial axis.

Given a point cloud, we first extract its curve skeleton using existing approaches [9,10,12]. Some of the existing skeleton extraction approaches require point clouds with normals. However, our symmetry detection does not require normal information. Throughout this paper, we assume that the extracted skeleton is topologically identical, or homotopic, to the input shape. This assumption is practically reasonable for moderately incomplete 3D point clouds. For Kinect scans of human body, we can directly use the realtime fitted skeleton provided by the Kinect SDK.

The objective of our algorithm is to find from the input point cloud a set of non-overlapping regions (not necessarily covering the whole point cloud) each of which possesses a intrinsic symmetry. All these regions constitute the intrinsic symmetry of the point cloud. See Fig. 1 for an example.

The curve skeletons extracted by the existing methods are typically of low resolution (contain a few skeleton nodes). To achieve a better accuracy of symmetry detection, we first refine the skeletons by inserting new nodes on the bones until the prescribed sampling rate is satisfied: the distance between every two adjacent nodes is about 0.01times the maximal path length on the skeleton. The input point cloud is subsampled using the farthest point sampling approach based on Euclidean distance. In the preprocessing stage, we also perform some pre-computation, including geodesic distances on skeleton, symmetry-invariant local shape descriptors, etc., which will be detailed in the related subsections.

@&#OVERVIEW@&#

Let us denote the sampled point cloud by a set 
                           
                              P
                           
                         of M sample points, and its refined curve skeleton by a set 
                           
                              S
                           
                         of N skeleton nodes.


                        Algorithm 1 gives the pseudocode of our algorithm. Fig. 1 shows the pipeline of our algorithm. Our algorithm operates in four steps.

First, it constructs a set of symmetry electors from the skeleton nodes through a cascade of filtering tests and a voting based aggregation process (SymmetryElectors); see SubSection 3.3. This step is elaborated in Algorithm 2. Second, the electors cast votes on individual candidate node pairs to establish the symmetry correspondences on skeleton nodes (VoteNodePairs); see SubSection 3.4. Third, the symmetry correspondences on the skeleton are transferred onto the point cloud, leading to a symmetry correspondence matrix (SCM) (BuildSymCorrMat); see SubSection 3.5. In the last step, we perform spectral analysis over the SCM to extract symmetry clusters on the point cloud (SpectralAnalysis); see SubSection 3.6.
                           Algorithm 1
                           Symmetry detection via electors voting. 
                                 
                                    
                                       
                                       
                                          
                                             
                                                REQUIRE Input a point cloud 
                                                   
                                                      P
                                                   
                                                 and its curve skeleton 
                                                   
                                                      S
                                                   
                                                .
                                          
                                          
                                             
                                                ENSURE Output symmetry regions 
                                                   
                                                      Ω
                                                      =
                                                      {
                                                      
                                                         
                                                            C
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      |
                                                      i
                                                      =
                                                      1
                                                      ,
                                                      …
                                                      ,
                                                      n
                                                      }
                                                   
                                                .
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      E
                                                      ←
                                                      SymmetryElectors
                                                      (
                                                      S
                                                      )
                                                   
                                                ; /* construct symmetry electors */
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            node
                                                         
                                                      
                                                      ←
                                                      VoteNodePairs
                                                      (
                                                      E
                                                      )
                                                   
                                                ; /* vote for node pairs */
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      M
                                                      ←
                                                      BuildSymCorrMat
                                                      (
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            node
                                                         
                                                      
                                                      )
                                                   
                                                ; /* build SCM from node pairs */
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      Ω
                                                      ←
                                                      SpectralAnalysis
                                                      (
                                                      M
                                                      )
                                                   
                                                ; /* spectral analysis on SCM */
                                          
                                       
                                    
                                 
                              
                           

Symmetry electors selection. 
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      E
                                                      =
                                                      SymmetryElectors
                                                      (
                                                      S
                                                      =
                                                      {
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      |
                                                      i
                                                      =
                                                      1
                                                      ,
                                                      …
                                                      ,
                                                      N
                                                      }
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      E
                                                      =
                                                      ∅
                                                   
                                                .
                                          
                                          
                                             
                                                for
                                                
                                                   
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      ∈
                                                      S
                                                   
                                                
                                                do
                                             
                                          
                                          
                                             
                                                /* filters below executed sequentially */
                                          
                                          
                                             
                                                if Similarity-Filter
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                 passed and
                                             
                                          
                                          
                                             
                                                
                                                Branch-Filter
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                 passed and
                                             
                                          
                                          
                                             
                                                
                                                Dist-Profile-Filter
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                 passed
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      
                                                         
                                                            Σ
                                                         
                                                         
                                                            ij
                                                         
                                                      
                                                      ←
                                                   
                                                 
                                                Symmetry-Support
                                                
                                                   
                                                      (
                                                      {
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      }
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                if
                                                
                                                   
                                                      |
                                                      
                                                         
                                                            Σ
                                                         
                                                         
                                                            ij
                                                         
                                                      
                                                      |
                                                      >
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            d
                                                         
                                                      
                                                      ·
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     N
                                                                  
                                                                  
                                                                     2
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             
                                                
                                                /* filter of symmetry support */
                                          
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      E
                                                      =
                                                      {
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      }
                                                      ∪
                                                      
                                                         
                                                            Σ
                                                         
                                                         
                                                            ij
                                                         
                                                      
                                                   
                                                ;
                                          
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      E
                                                      ∪
                                                      =
                                                      {
                                                      E
                                                      }
                                                   
                                                ;
                                          
                                          
                                             
                                                
                                                
                                                end if
                                             
                                          
                                          
                                             
                                                
                                                end if
                                             
                                          
                                          
                                             
                                                end if
                                             
                                          
                                          
                                             return 
                                                   
                                                      E
                                                   
                                                .
                                          
                                       
                                    
                                 
                              
                           

Since computing intrinsic symmetry map directly on point cloud is prohibitive, we opt to do so on its skeleton. Specifically, we seek for a set of symmetry correspondences over the skeleton nodes, which we call symmetric node pairs. However, detecting symmetric node pairs is difficult since skeleton is a reduced representation of the input shape which may lose the important geometric information useful to symmetry detection.

To this end, we adopt the electors voting scheme [23]. A symmetry elector contains a set of pairs of skeleton nodes, which represents a potential intrinsic symmetry of the input point cloud. Since an individual elector may not contain full information about the intrinsic symmetry of the point cloud, we let the electors cast votes to all node pairs and extract the symmetry correspondence from those node pairs receiving sufficient supports from the electors (Section 3.4).

Specifically, we compute symmetry electors through filtering the bad correspondences according to a serial of intrinsic symmetry criteria tailored for skeleton nodes. Starting from a pair of nodes, we test it against four carefully designed symmetry filters: Similarity, Branch, Distance-Profile and Symmetry-Support. The four filters are applied in the ascending order of computational cost, for the efficiency consideration; see also Algorithm 2.

The first filter compares the isometry-invariant local feature computed around the two nodes. Specifically, we compute the approximate Shape Diameter Function (SDF) [24] for the skeleton nodes. Most existing approaches to skeleton extraction naturally provide skeleton-surface mapping [12]. Thus the approximate SDF of a given skeleton node can be simply computed as the averaged Euclidean distances from the node to all its associated surface points according to the skeleton-surface mapping.

A pair of nodes passes the filter if the difference between their approximate SDF values is less than a threshold. We use 
                              
                                 0.05
                                 
                                    
                                       SDF
                                    
                                    
                                       max
                                    
                                 
                              
                            where 
                              
                                 
                                    
                                       SDF
                                    
                                    
                                       max
                                    
                                 
                              
                            is the maximum SDF value of all skeleton nodes. To speed up the online comparison, we can pre-compute and store the approximate SDF values for all skeleton nodes.

Roughly speaking, a skeleton branch can be seen as the rotational symmetry axis of local geometry. This observation has been exploited by Tagliasacchi et al. [9] for curve skeleton extraction from point clouds. Knowing the skeleton of a point cloud, it is trivial to recover the local rotational symmetries based on the skeleton-surface mapping.

In this work, we wish to extract more prominent and nontrivial symmetries, e.g., the left–right reflectional symmetry of a human body. Therefore, we can filter the node pairs whose two nodes are from the same skeleton branch. To this end, we detect branches through extracting all junction nodes (with at least three incident bones) and tracing the branches one by one between every two adjacent junction nodes. The branch detection can be done off-line prior to the online filtering.

For a shape with global intrinsic symmetry, a pair of symmetric points should have similar configuration of intrinsic distances from the point to all other points, up to a symmetric permeation. If the distances are sorted into a vector, we obtain a more global feature, the distance profile, to filter erroneous point pairs.

This observation can be extended to skeleton nodes since skeleton is isometry invariant. Given two nodes, we can compute a similar vector to test if they are symmetric according to the global intrinsic symmetry of the input shape. Specifically, for each of the two nodes, we compute all distances from that node to all terminal nodes (with only one incident bone) and sort them in the ascending order, forming a 
                              
                                 
                                    
                                       N
                                    
                                    
                                       t
                                    
                                 
                              
                           -dim vector (
                              
                                 
                                    
                                       N
                                    
                                    
                                       t
                                    
                                 
                              
                            is the number of terminal nodes). We then compare the two nodes by computing the L2 difference between their distance profile vectors. The node pair passes this filter if the difference is less than a prescribed threshold, i.e. 0.1 times the maximum profile difference between all pairs of nodes.

The fourth filter examines whether the current node pair indicates a real intrinsic symmetry through testing whether the symmetry support for that node pairs is sufficiently strong. The intrinsic symmetry support between two pairs of nodes is defined similar to the symmetry criteria of Xu et al. [21]. Given two pairs of nodes, 
                              
                                 {
                                 
                                    
                                       n
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       q
                                    
                                 
                                 }
                              
                            and 
                              
                                 {
                                 
                                    
                                       n
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       t
                                    
                                 
                                 }
                              
                           , we test whether the two pairs are supporting the same intrinsic symmetry (or say another way, they are supporting each other) with the following necessary condition of intrinsic involute symmetry
                              
                                 (1)
                                 
                                    
                                       
                                          d
                                       
                                       
                                          S
                                       
                                    
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          p
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          s
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          d
                                       
                                       
                                          S
                                       
                                    
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          q
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          t
                                       
                                    
                                    )
                                    AND
                                    
                                       
                                          d
                                       
                                       
                                          S
                                       
                                    
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          p
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          t
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          d
                                       
                                       
                                          S
                                       
                                    
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          q
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          s
                                       
                                    
                                    )
                                    ,
                                 
                              
                           where 
                              
                                 
                                    
                                       d
                                    
                                    
                                       S
                                    
                                 
                              
                            is geodesic distance on skeleton. Fig. 2
                            illustrates the criteria on the skeleton nodes. If the number of supporting pairs a node pair received reaches a fraction 
                              
                                 
                                    
                                       p
                                    
                                    
                                       d
                                    
                                 
                              
                            of 
                              
                                 
                                    
                                       
                                          
                                             
                                                N
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           , the node pair passes the filter. We use 
                              
                                 
                                    
                                       p
                                    
                                    
                                       d
                                    
                                 
                                 =
                                 0.01
                                 %
                              
                            for all our experiments.

Once passing all the four filters, the current node pair, as well as its supporting node pairs, form a new symmetry elector. For each elector, we can measure its degree of symmetry by computing its intrinsic deviation defined based on the symmetry criteria (1):
                              
                                 (2)
                                 
                                    
                                       
                                          D
                                       
                                       
                                          
                                             
                                                E
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                {
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      p
                                                   
                                                
                                                ,
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      q
                                                   
                                                
                                                }
                                                ,
                                                {
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      s
                                                   
                                                
                                                ,
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      t
                                                   
                                                
                                                }
                                                ∈
                                                
                                                   
                                                      E
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          d
                                          (
                                          {
                                          
                                             
                                                n
                                             
                                             
                                                p
                                             
                                          
                                          ,
                                          
                                             
                                                n
                                             
                                             
                                                q
                                             
                                          
                                          }
                                          ,
                                          {
                                          
                                             
                                                n
                                             
                                             
                                                s
                                             
                                          
                                          ,
                                          
                                             
                                                n
                                             
                                             
                                                t
                                             
                                          
                                          }
                                          )
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               N
                                                            
                                                            
                                                               
                                                                  
                                                                     E
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 
                                    
                                       N
                                    
                                    
                                       
                                          
                                             E
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                            is the number of node pairs in elector 
                              
                                 
                                    
                                       E
                                    
                                    
                                       i
                                    
                                 
                              
                           . The distance between two node pairs is defined as
                              
                                 
                                    d
                                    (
                                    {
                                    
                                       
                                          n
                                       
                                       
                                          p
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          q
                                       
                                    
                                    }
                                    ,
                                    {
                                    
                                       
                                          n
                                       
                                       
                                          s
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          t
                                       
                                    
                                    }
                                    )
                                    =
                                    
                                       max
                                    
                                    {
                                    
                                       
                                          d
                                       
                                       
                                          S
                                       
                                    
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          p
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          s
                                       
                                    
                                    )
                                    -
                                    
                                       
                                          d
                                       
                                       
                                          S
                                       
                                    
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          q
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          t
                                       
                                    
                                    )
                                    ,
                                    
                                       
                                          d
                                       
                                       
                                          S
                                       
                                    
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          p
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          t
                                       
                                    
                                    )
                                    -
                                    
                                       
                                          d
                                       
                                       
                                          S
                                       
                                    
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          q
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          s
                                       
                                    
                                    )
                                    }
                                    .
                                 
                              
                           
                        

The node pairs from all the electors are referred to as elector node pairs, denoted as 
                              
                                 
                                    
                                       Π
                                    
                                    
                                       e
                                    
                                 
                                 =
                                 
                                    
                                       ∪
                                    
                                    
                                       
                                          
                                             E
                                          
                                          
                                             i
                                          
                                       
                                       ∈
                                       E
                                    
                                 
                                 
                                    
                                       E
                                    
                                    
                                       i
                                    
                                 
                              
                           . In Fig. 3
                           , we show the effects of the different filters on the node pairs. With more filters applied, the node pairs left better reveal the intrinsic symmetry of the input shape.

We have selected a set of symmetry electors indicating potential symmetries. To accentuate the node pairs supporting the prominent intrinsic symmetry, we let the electors vote for the individual node pairs. The process is rather simplistic. The votes are casted into a 
                           
                              N
                              ×
                              N
                           
                         vote matrix as demonstrated in Fig. 4
                        , where each entry corresponds to a node pair. Finally, those node pairs (corresponding to the entries in the vote matrix) whose value is greater than a threshold (0.1times the maximum value in the vote matrix) is selected as symmetric node pairs, which will be use to find symmetry correspondence on the point cloud in the next subsection.

Since our ultimate goal is to find symmetry map on the point cloud, we need to transfer the symmetry map found on the skeleton, i.e., the symmetric node pairs to the sample points on the input point cloud, leading to a symmetry correspondence matrix (SCM) for the input point cloud.

Symmetry correspondence matrix is a symmetry affinity matrix where each entry measures the dissimilarity between the corresponding two sample points in the sense of symmetry, or say another way, the degree to which the two sample points are asymmetric [20]. We compute SCM for the sample points through interpolating the symmetry dissimilarity of the skeleton nodes which is computed as follows. Given a pair of skeleton nodes, we first collect all the electors that contains the node pair. Since we have computed an intrinsic deviation for each elector, the symmetry dissimilarity between a pair of nodes is simply the minimal intrinsic deviation among all the electors containing the node pair:
                           
                              
                                 
                                    
                                       D
                                    
                                    
                                       {
                                       
                                          
                                             n
                                          
                                          
                                             p
                                          
                                       
                                       ,
                                       
                                          
                                             n
                                          
                                          
                                             q
                                          
                                       
                                       }
                                    
                                 
                                 =
                                 
                                    
                                       
                                          min
                                       
                                       
                                          {
                                          
                                             
                                                n
                                             
                                             
                                                p
                                             
                                          
                                          ,
                                          
                                             
                                                n
                                             
                                             
                                                q
                                             
                                          
                                          }
                                          ∈
                                          
                                             
                                                E
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 {
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             E
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 }
                                 .
                              
                           
                        
                     

We then convert the symmetry dissimilarity of the node pairs to that of the sample point pairs through linear interpolation. To this end, we first compute for each skeleton node 
                           
                              
                                 
                                    n
                                 
                                 
                                    p
                                 
                              
                           
                         a neighborhood 
                           
                              
                                 
                                    η
                                 
                                 
                                    p
                                 
                              
                           
                         containing a set of k sample points using k-Nearest Neighbor (kNN) search. Given a pair of sample points 
                           
                              {
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              }
                           
                        , we collect its relevant node pairs into 
                           
                              
                                 
                                    Γ
                                 
                                 
                                    ij
                                 
                              
                           
                        .
                           
                              
                                 
                                    
                                       Γ
                                    
                                    
                                       ij
                                    
                                 
                                 =
                                 {
                                 {
                                 
                                    
                                       n
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       q
                                    
                                 
                                 }
                                 |
                                 {
                                 
                                    
                                       n
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       q
                                    
                                 
                                 }
                                 ∈
                                 
                                    
                                       Π
                                    
                                    
                                       e
                                    
                                 
                                 ∧
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       η
                                    
                                    
                                       p
                                    
                                 
                                 ∧
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 
                                    
                                       η
                                    
                                    
                                       q
                                    
                                 
                                 )
                                 ∨
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 
                                    
                                       η
                                    
                                    
                                       p
                                    
                                 
                                 ∧
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       η
                                    
                                    
                                       q
                                    
                                 
                                 )
                                 }
                                 ,
                              
                           
                        where 
                           
                              ∧
                           
                         and 
                           
                              ∨
                           
                         denote relation 
                           
                              AND
                           
                         and 
                           
                              OR
                           
                         respectively. Intuitively, an node pair is relevant to a point pair if it is an elector pair and each of its two neighbors contains exactly one of the two points in an exclusive manner. The symmetry dissimilarity of a point pair can be computed as the linear blending of the deviations of its relevant node pairs:
                           
                              (3)
                              
                                 
                                    
                                       D
                                    
                                    
                                       {
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             x
                                          
                                          
                                             j
                                          
                                       
                                       }
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          {
                                          
                                             
                                                n
                                             
                                             
                                                p
                                             
                                          
                                          ,
                                          
                                             
                                                n
                                             
                                             
                                                q
                                             
                                          
                                          }
                                          ∈
                                          
                                             
                                                Γ
                                             
                                             
                                                ij
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       pq
                                    
                                 
                                 
                                    
                                       D
                                    
                                    
                                       {
                                       
                                          
                                             n
                                          
                                          
                                             p
                                          
                                       
                                       ,
                                       
                                          
                                             n
                                          
                                          
                                             q
                                          
                                       
                                       }
                                    
                                 
                                 .
                              
                           
                        
                     

The linear blending weight is computed as:
                           
                              
                                 
                                    
                                       w
                                    
                                    
                                       pq
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             1
                                             -
                                             
                                                
                                                   d
                                                
                                                
                                                   ̃
                                                
                                             
                                             (
                                             {
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             
                                                
                                                   x
                                                
                                                
                                                   j
                                                
                                             
                                             }
                                             ,
                                             {
                                             
                                                
                                                   n
                                                
                                                
                                                   p
                                                
                                             
                                             ,
                                             
                                                
                                                   n
                                                
                                                
                                                   q
                                                
                                             
                                             }
                                             )
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  d
                                                               
                                                               
                                                                  ̃
                                                               
                                                            
                                                         
                                                         
                                                            ij
                                                         
                                                         
                                                            max
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    d
                                 
                                 
                                    ̃
                                 
                              
                           
                         is the distance between a point pair and its relevant node pair
                           
                              
                                 
                                    
                                       d
                                    
                                    
                                       ̃
                                    
                                 
                                 (
                                 {
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 }
                                 ,
                                 {
                                 
                                    
                                       n
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       q
                                    
                                 
                                 }
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      max
                                                   
                                                   {
                                                   ‖
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                      
                                                         ‖
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   ‖
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         q
                                                      
                                                   
                                                   
                                                      
                                                         ‖
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                   if
                                                   
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   
                                                      
                                                         η
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                   and
                                                   
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ∈
                                                   
                                                      
                                                         η
                                                      
                                                      
                                                         q
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      max
                                                   
                                                   {
                                                   ‖
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         q
                                                      
                                                   
                                                   
                                                      
                                                         ‖
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                   ‖
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   
                                                      
                                                         ‖
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                   if
                                                   
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   
                                                      
                                                         η
                                                      
                                                      
                                                         q
                                                      
                                                   
                                                   
                                                   and
                                                   
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ∈
                                                   
                                                      
                                                         η
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        and 
                           
                              
                                 
                                    
                                       
                                          d
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    ij
                                 
                                 
                                    max
                                 
                              
                           
                         is the maximum distance between point pair 
                           
                              {
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                              }
                           
                         and all its relevant node pairs. Note that there is the case where a point pair may not have a relevant node pair. In this case, we simply set the symmetry dissimilarity of that point pair as infinite.

The symmetry dissimilarity between any pair of points is then converted to a symmetry correspondence matrix (SCM) 
                           
                              C
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    M
                                    ×
                                    M
                                 
                              
                           
                         using a Gaussian kernel 
                           
                              
                                 
                                    C
                                 
                                 
                                    ij
                                 
                              
                              =
                              
                                 
                                    e
                                 
                                 
                                    -
                                    (
                                    
                                       
                                          D
                                       
                                       
                                          {
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          
                                             
                                                x
                                             
                                             
                                                j
                                             
                                          
                                          }
                                       
                                    
                                    /
                                    (
                                    σ
                                    ·
                                    
                                       
                                          D
                                       
                                       
                                          max
                                       
                                    
                                    )
                                    
                                       
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                        ,where we use 
                           
                              σ
                              =
                              0.01
                           
                        , and 
                           
                              
                                 
                                    D
                                 
                                 
                                    max
                                 
                              
                           
                         is the maximum value of all 
                           
                              
                                 
                                    D
                                 
                                 
                                    {
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          j
                                       
                                    
                                    }
                                 
                              
                           
                        . With the SCM, we perform spectral analysis to extract the symmetry regions [20,21], which we briefly review for completeness.

We perform eigendecomposition over the SCM and compute the symmetry factored embedding (SFE) for a sample point as
                           
                              
                                 
                                    
                                       SFE
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 (
                                 
                                    
                                       λ
                                    
                                    
                                       1
                                    
                                    
                                       t
                                    
                                 
                                 
                                    
                                       ψ
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 …
                                 b
                                 ,
                                 
                                    
                                       λ
                                    
                                    
                                       n
                                    
                                    
                                       t
                                    
                                 
                                 
                                    
                                       ψ
                                    
                                    
                                       n
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 )
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    ψ
                                 
                                 
                                    k
                                 
                              
                           
                         is the kth eigenfunction and 
                           
                              
                                 
                                    λ
                                 
                                 
                                    k
                                 
                              
                           
                         the associated eigenvalue. We take the diffusion time 
                           
                              t
                              =
                              20
                           
                         for all examples in this paper. The symmetry factored distance can be defined as the Euclidean distance within the space of SFE:
                           
                              
                                 
                                    
                                       SFD
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       λ
                                    
                                    
                                       k
                                    
                                    
                                       2
                                       t
                                    
                                 
                                 |
                                 
                                    
                                       ψ
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 -
                                 
                                    
                                       ψ
                                    
                                    
                                       k
                                    
                                 
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 |
                                 .
                              
                           
                        
                     

With the SFE and SFD in hand, we can perform the standard K-means clustering in the space of SFE. To automatically determine the number of clusters, we employ the self-tuning spectral clustering [25], where the eigen-decomposition of the symmetry scale matrix is computed with ARPACK [26]. After clustering, the set of sample points is divided into k clusters where each represents a symmetry orbit. Fig. 5
                         demonstrates the result of spectral clustering on the input point cloud based on SCM.

@&#RESULTS AND DISCUSSION@&#

In this section, we demonstrate and discuss results obtained by our skeleton-based intrinsic symmetry detection algorithm on a variety of imperfect point clouds. We also compare our detection method with other ones including those both for meshes and for point clouds. As a major application of our method, we demonstrate how the detected symmetries can be utilized to fill the missing regions of the incomplete point clouds.

The ability of our method to identify intrinsic symmetry from the input point clouds is evident. Figs. 1 shows the detection result on a raw scan. In Fig. 6
                        , we show the results on a gallery of eight point clouds. For each model, we show the input point cloud, the extracted skeleton, as well as the symmetric node pairs on the skeleton. The detected symmetries on the point cloud are shown as a set of self-symmetric regions, as well as a set of pairs of symmetric regions, if any. Each of the symmetric regions is shaded with a unique color. It should be noted that for each model, the symmetric regions together constitute the global intrinsic symmetry of the model. Say another way, they share the same global intrinsic symmetry of the input point cloud. Our method cannot detect partial symmetries such as the self-symmetries of the human body and the trident of the Neptune model shown in Fig. 15a. On the Giraffe model in the gallery, there are a few node pairs connecting the head and feet of the giraffe. Our method failed to filter these erroneous pairs since the head and feed part have similar local thickness (SDF) and the related branches have almost the same length. However, these sparse wrong pairs did not affect the clustering result as shown in the figure.

By using the consistent skeletons [27] extracted for point clouds of the articulated shape in different poses, our method returns consistent symmetry detection results for different poses. Fig. 7
                         demonstrates the effectiveness of our method on consistent symmetry detection on a set of scans of an articulated shapes captured in different poses, due to its intrinsic nature. This feature is potentially useful for cross-completion between different frames of an animated mesh sequence, which can be achieved by a trivial extension of the hole filling for single meshes proposed in SubSection 4.6.

Most existing approaches to intrinsic symmetry detection rely on geodesic distance computed on the input surface. The imperfection of real world data, especially raw scans, often makes the estimation of geodesic distance prohibitive. In this case, extracting a skeleton first would help much in symmetry detection.

For the single-frame low-quality data captured by a Kinect, our algorithm produces reasonable results. In Fig. 8
                        , we show our method can detect symmetries from a raw scan obtained by a Kinect camera. Although in very low quality, the Kinect scan of a human body comes with a pre-computed skeleton which can be utilized by our method for symmetry detection. To the best of our knowledge, our method is the first one that detects intrinsic symmetry from such low quality point clouds.


                        Fig. 9
                         demonstrates the symmetry detection results on a Camel model with the number of scans is progressively reduced. The skeletons are extracted using the method of Tagliasacchi et al. [9]. Our method can detect the symmetry regions reasonably even for a partial scan with a large portion of missing data. When the data miss significantly and the global symmetry is broken, our method breaks down as expected (Fig. 9d).

In Fig. 10
                        a–c, we demonstrate the robustness of our method against uniformly distributed Gaussian noise. Our method runs mainly on skeleton, the major step that relies on the point cloud is skeleton extraction. Base on the skeletons extracted by the noise-insensitive methods such as [12], our symmetry detection results are quite stable. The other two components of our algorithm which depend on point cloud are the computation of SDF for point cloud and the transfer of symmetry map from skeleton to point cloud. The latter does not affect the detection of symmetric node pairs and hence does not affect the symmetry detection significantly even if the noise is non-uniformly distributed. However, it may not be reliable to use SDF for node pair filtering in the case of non-uniform noise. For example, in Fig. 10d, the legs of the horse have different levels of noise. For this example, we increase the threshold of the Similarity filter (using 
                           
                              0.1
                              
                                 
                                    SDF
                                 
                                 
                                    max
                                 
                              
                           
                        ) and our method still produces reasonable result.

Our experiments were performed on an Intel (R) Core (TM) Quad CPU 2.4GHz machine with 2GB RAM. For all 3D models, the number of sample points is about 2K with small discrepancies due to criteria employed by the MeshLab sampling routine. Table 1
                         reports various statistics including timing. The most time-consuming parts are the construction of SCM and the symmetry extraction through spectral analysis.

We compare our method to those both for meshes and point clouds. Our method naturally extends to surface meshes. In Fig. 11
                        , we qualitatively compare the symmetry detection results on the Momento model with the other two methods for global intrinsic symmetry detection on surface meshes, i.e. [3,20]. Quantitative evaluation of the quality of symmetry detection results is out of the scope of this paper which we leave for future work. It can be seen that our method produces similar result to [20] where the global symmetry between the three human bodies are detected. Again, our method does not detect the partial symmetries of each human as is done by [3].

To the best of our knowledge, the only existing work that detects intrinsic symmetry on point clouds is proposed by Berger and Silva [22]. We make a comparison with their method on both a full and a partial scan of the Camel model (Fig. 12
                        ). In [22], although the medial diffusion is defined based on media structure, the method does not extract a skeleton explicitly. Therefore, we do not show the skeleton but only the symmetric maps (point pairs) found by each method. On the full scan (a), the two methods produce similar symmetry maps which mainly appear on the leg parts. On the partial scan (b), our method produces more accurate symmetry maps on the forelegs. The symmetry of the hindlegs is broken due to the large portion of missing data. Our method does not produce symmetry maps for the torso since the symmetric pairs are computed only on skeleton.

In order to reveal the effect of skeletons on the symmetry detection results, we evaluate our method on the skeletons extracted by different methods; see Fig. 13
                        . On the two scans of the Camel model, we extract skeletons using three methods including those from [9,10,12], and for each skeleton we run our method to detect the symmetry node pairs as well as the symmetry regions. Our method works well with all the three types of skeletons while producing the most accurate results for the high quality curve skeletons produced by [9].

Symmetry induces redundancy. Such redundancy allows for filling the input point clouds in the presence of missing parts. In Fig. 14
                        , we demonstrate the application of our symmetry detection method in the completion of imperfect point clouds. In a preliminary implementation, we employ a straightforward method where we utilize the detected symmetric node pairs, as well as the skeleton-to-surface mapping, to perform surface completion. Specifically, we transform the surface points associated with one of a pair of symmetric nodes along the skeleton to align them with those associated with its counterpart.

Given an input point cloud with missing data, we first let the user to identify the holes interactively using surface painting. Then our system automatically detects the relevant symmetric node pairs around the hole regions. Based on the node pairs, hole filling is performed through transforming the surface points associated with one node to the other. Suppose we want to complete a hole based on a symmetric node pair 
                           
                              {
                              
                                 
                                    n
                                 
                                 
                                    s
                                 
                              
                              ,
                              
                                 
                                    n
                                 
                                 
                                    t
                                 
                              
                              }
                           
                        . Without loss of generality, let us assume that we use the surface points associated with 
                           
                              
                                 
                                    n
                                 
                                 
                                    s
                                 
                              
                           
                        , denoted as set 
                           
                              
                                 
                                    P
                                 
                                 
                                    s
                                 
                              
                           
                        , to complete the surface around 
                           
                              
                                 
                                    n
                                 
                                 
                                    t
                                 
                              
                           
                        , denoted as 
                           
                              
                                 
                                    P
                                 
                                 
                                    t
                                 
                              
                           
                        . We first perform a mirror transformation for 
                           
                              
                                 
                                    P
                                 
                                 
                                    s
                                 
                              
                           
                         along any plane whose normal is perpendicular to the tangent of the curve skeleton at node 
                           
                              
                                 
                                    n
                                 
                                 
                                    s
                                 
                              
                           
                        , resulting in 
                           
                              
                                 
                                    P
                                 
                                 
                                    s
                                 
                                 
                                    ′
                                 
                              
                           
                        . 
                           
                              
                                 
                                    P
                                 
                                 
                                    s
                                 
                                 
                                    ′
                                 
                              
                           
                         is then transformed along the geodesic path on the skeleton connecting 
                           
                              
                                 
                                    n
                                 
                                 
                                    s
                                 
                              
                           
                         and 
                           
                              
                                 
                                    n
                                 
                                 
                                    t
                                 
                              
                           
                         in a rotation minimizing fashion [28], leading to a rough alignment between the two 
                           
                              
                                 
                                    P
                                 
                                 
                                    s
                                 
                                 
                                    ′
                                 
                              
                           
                         and 
                           
                              
                                 
                                    P
                                 
                                 
                                    t
                                 
                              
                           
                        . If a surface point is associated with multiple skeleton nodes, its final position is computed as the weighted average of the target positions transformed by each of the skeleton nodes, using a Gaussian kernel. Finally, we refine the alignment using the Iterative Closest Point (ICP) method [29] with the help of the partial overlap between the two point sets. As shown in Fig. 14, our method can robustly fill the small holes in the point clouds of human bodies taking various poses.

@&#LIMITATIONS@&#

Perhaps the most fundamental limitation of our approach is its reliance on geodesic distances on skeleton, which is topologically sensitive. In the case of a composite shape with several self-symmetric objects, as shown in Fig. 15
                        a, the partial symmetries on each object cannot be detected correctly. This is a fundamental limitation of any approach that relies on intrinsic distances for shape analysis.

In Fig. 15b, we show another type of partial symmetry where some parts of the Wooden doll model are missing. Although the global symmetry is broken, partial symmetries (such as the upper parts of the two legs) remain. Our method failed to detect such symmetries due to the Distance-Profile filter we employed in the node pair detection: The missing parts cause the skeleton has different lengths of branches. Furthermore, our method cannot detect symmetry for shapes whose skeleton contains too few terminal nodes (only one for the example in Fig. 15c) so that the Distance-Profile filter cannot be applied.

Another limitation of our method is the dependence on the topologically correct skeletons. Therefore our method must work with an existing method for point cloud skeleton extraction. However, our method can seamlessly work with a Kinect system where the RGBD image of a human body is fitted with a pre-computed skeleton in real time, showing the potential in augmenting the low quality scans of Kinect.

@&#CONCLUSIONS@&#

We have presented a novel and practical algorithm for intrinsic symmetry detection on imperfect point clouds based on accurate curve skeletons. The various experiments demonstrate the robustness of our method in terms of handling raw point clouds with severe noise, under-sampling, and missing data. The detected symmetry can be applied to repair the scanned data by filling the missing regions.

Our current algorithm and implementation still leave much room for improvement. First and foremost, we would like to investigate how to detect symmetric node pairs for the independent partial intrinsic symmetries appearing on a shape, e.g. the Neptune model in Fig. 15. Another interesting venue is finding more efficient filtering mechanisms for the symmetry electors tailored for curve skeletons. We would also like to improve the performance of our algorithm, especially for the construction of SCM. Parallelization is obviously possible since the entries in the SCM can all be computed in parallel. Finally, it is desirable to more intelligently combine the symmetry criteria (Eq. (1)) with the conventional measures used in mesh segmentation problem, and develop an optimization-based framework for symmetry detection.

@&#ACKNOWLEDGMENTS@&#

We would like to thank Andrea Tagliasacchi and Oscar Kin-Chung Au for sharing their code/executable on curve skeleton extraction. We are also grateful to Matthew Berger for producing the results in Fig. 12 using their method. Thanks also go to Junjie Cao and Qian Zheng for data sharing. This work was supported by NSFC (Nos. 60970094, 61103084, 61202333 and 61202334) and CPSF (No. 2012M520392).

@&#REFERENCES@&#

