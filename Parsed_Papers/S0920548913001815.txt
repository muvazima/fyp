@&#MAIN-TITLE@&#Securing business processes using security risk-oriented patterns

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a method to develop secure business processes.


                        
                        
                           
                           The method is based on collaboration between business and security analysts.


                        
                        
                           
                           We define a set of security risk-oriented patterns.


                        
                        
                           
                           We use the BPMN notation to present these patterns graphically.


                        
                        
                           
                           The proposal is tested within two industrial business models.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Security engineering

Business process modelling

Security risk-oriented patterns

Security requirements

@&#ABSTRACT@&#


               
               
                  Business process modelling and security engineering are two important concerns when developing information system. However current practices report that security is addressed at the later development stages (i.e. design and implementation). This raises a question whether the business processes are performed securely. In this paper, we propose a method to introduce security requirements to the business processes through the collaboration between business and security analysts. To support this collaboration we present a set of security risk-oriented patterns. We test our proposal in two industrial business models. The case findings characterise pattern performance when identifying business assets, risks, and countermeasures.
               
            

@&#INTRODUCTION@&#


                     Business process modelling (BPM) is an activity of representing enterprise processes, so that the current processes may be analysed and improved. Security engineering is concerned with lowering the risk of intentional unauthorised harm to valuable assets to a level that is acceptable to the system's stakeholders by preventing and reacting to malicious harm, misuse, threats and security risks [1]. Assuming that business analysts concentrate on improving the business performance, early security analysis could help in discovering and discarding system design alternatives that do not offer sufficient security levels. Although the importance of addressing security concerns is now acknowledged [2], the common practice is to consider security when the system is about to be implemented or deployed [3]. One of the reasons is that, business analysts are experts in business domain, they have limited or no expertise in security engineering; thus they depend on the practices, security standards [4,5], or security experts. Such a situation potentially contains several limitations. In this paper, we investigate the following research question: how to facilitate elicitation of security concerns during business process modelling? To answer it we introduce a seven-step method that describes how to integrate systematically the security requirements into a business process. Typically security engineering requires a close collaboration between the business analyst (i.e., the specialist of the business domain) and security analyst (i.e., the specialist of the security domain). Being experts in business domain, business analysts have limited or no expertise in security engineering. They have to rely on the best security practices, information security standards, or security experts. To improve, potentially, this situation we propose the use of security risk-oriented patterns to secure business processes. The idea is that majority of the problems often do not require new solutions. Developers reuse similar solutions already implemented independently, or elicit different aspects of similar problems, they already solved in other situations. By introducing the security risk-oriented pattern we potentially reduce the business analysts' need to ask for the help from the security analysts because patterns introduce both the security requirements and security rationale.

According to Schumacher et al. “a security pattern describes a particular recurring security problem that arises in a specific security context and presents a well-proven generic scheme for a security solution [6]. Following this definition, we develop a set of security risk-oriented patterns (i.e., generic scheme). The patterns are based on understanding security risks (i.e., recurring security problems) that arise within business processes (i.e., specific security context). To mitigate the risks, the patterns recommend security requirements (i.e., security solution). Thus, our approach aligns business processes and security requirements elicited using security risk-oriented patterns. In order to understand the usefulness and performance of these patterns we apply them in business models. Our study, thus, results in the guidelines to elicit security assets, potential security risks and their countermeasures in the business processes.

The rest of the paper is structured as follows. In Section 2 we survey the security expressed using business modelling languages and overview some security risk management approaches. In Section 3 we present our proposal to secure business processes through collaboration between the business analyst and security analyst. To ease this collaboration we introduce a set of security risk-oriented patterns. In Section 4 we define guidelines for the pattern application and illustrate their performance in two case studies. Finally, in Section 5 we discuss and conclude our work.

@&#BACKGROUND@&#

There exist several studies relating business processes and security requirements elicitation. Röhrig and Knorr [7] derive security requirements by assigning the security level to business process components using a formal descriptive language. Security levels are assigned to artefacts and activities while actors are assigned the corresponding clearance levels. However, security measures are applied after the definition of the business processes. In [8] Herrman and Herrman introduce a framework to secure the processes defined in UML activity diagrams. The business process elements are distinguished and the common security requirements are classified to 14 detailed categories. Elsewhere in [9] Sindre extends the activity diagrams with mal activities to model the unwanted system behaviour. Rodríguez et al. [10] extend BPMN using padlocks to annotate business processes with security requirements. The early security requirements are expressed with specific padlock symbols. Security is specified by defining the data types and a protection degree for business processes. In [11] the approach is extended to UML activity diagram. Similarly in [12], Christopher and Joe propose operating condition and control case to express the constraints on business processes (using BPMN). The operating condition (i.e., business process constraint) is applied to an activity, and then the controls (i.e., criteria to mitigate the risk) are defined and implemented. Modelling constraints help mitigate risks and facilitate the early discovery of security requirements.

The above practices express the security requirements and give a starting point for system design. However, risk analysis is not aligned with the security requirements and the rationale for the security requirements in business process diagrams is absent. Paja et al. [13] design secure business processes through social commitment. They analyse the participant's objectives and their interactions, which are considered as high-level security requirements. These specifications are annotated in BPMN conversation and choreography diagrams. Though it gives a rationale for the security requirements these requirements are only limited to the resource exchange. A detailed semantic mapping between the organisational model and BPMN diagrams is missing as well. We adapt the semantic alignment [14] of BPMN to the domain model of Information Systems Security Risk Management (see Section 2.2); such an alignment justifies the use of different BPMN constructs to express secured assets, their security criteria, potential risks and their security countermeasures. To complement this alignment we also adopt few visual BPMN extensions proposed by Rodríguez et al. [10].

A domain model (see Fig. 1
                        ) for Information Systems Security Risk Management (ISSRM) [15,16] expresses the key concepts and their relationships used to define the security risk-based template [17]. In comparison to security risk management approaches (see detailed survey in [15,16]) ISSRM differs because along with the identification and specification of risks it also focuses on the whole IS, instead of defining security requirements for one or more IS components. Additionally a number of modelling languages (e.g., Secure Tropos [18], Mal-activities [19], Misuse cases [20] and recently BPMN [14]) could be applied following the ISSRM guidelines; thus providing a systematic guidance for security risk management.

Other risk management methods (see details in [15,16]), mostly, produce analysis in natural language, which hinders to automate their activities for reasoning, evolution, monitoring or traceability, except CORAS [21]. CORAS has a customised language; however, it is neither connected to requirement engineering activities nor applicable to the IS development and, therefore, is disconnected from the standard terminology. In [22] Herrmann et al. present a method for managing IT security risks. The solution defines a set of security requirements, which outline how security could be achieved. Similarly, ISSRM aligns these concepts by supporting the definition of security for the key IS constituents and addresses the IS security risk management process at three different conceptual levels, i.e., asset-related, risk-related, and risk treatment-related concepts as illustrated in Fig. 1.

A method to integrate security requirements to business processes consists of seven steps (See Fig. 2
                        ). It describes how business analysts and security analysts could collaborate to result in secure business processes. The steps are as follows:
                           
                              1)
                              
                                 Identify assets and security objectives. In this step, business analyst introduces security context to security analyst. On one hand business analyst as an expert of business domain, describes the work-flow. On another hand the goal of security analyst is to understand what business values are described in the presented business model. In other words security analyst (through collaboration with business analyst) identifies what business assets are, what security objectives (in terms of confidentiality, integrity, and availability) should be taken into account, and what are the IS assets to support the identified business assets. The result of the first step is the business process model annotated with the security objectives.


                                 Analyse security risks. This step corresponds to the steps of the standard security risk management process (e.g., see the ISSRM process [15,16]). The major responsibility of the security analyst is to identify security risks that potentially are characterised by threats, vulnerabilities and risk impact. This step results in the list of security risks that are addressed within the context of the business processes.


                                 Elicit security requirements. During the elicitation of security requirements, the business analyst takes risk-treatment decisions to reduce, avoid, retain or transfer the identified risks. Security decisions are refined to the security requirements to mitigate the identified risks. Thus, the major output of this step is the security requirements for business processes.


                                 Annotate business process model with security requirements. The primary goal of business process models is to describe the work-flow. Eliciting security requirements (in step 3) could change the focus of the business process models to the implementation of the security requirements, but also losing the primary goal of the business process. Thus, to avoid such situation, a security analyst only annotates (e.g., comments) the business process model (i.e., A see Fig. 2) with the security requirements; however he should also record the traceability between models D and E (see Fig. 2). The result of the fourth step is the business process model annotated with security requirements.


                                 Feed back business models annotated with security requirements. The major artefact that is returned to the business analyst is the business process model annotated with security requirements. However, the feedback also includes other models, like security requirements for business process model (i.e., D, see Fig. 2) and the security risk-oriented business process model (i.e., C, see Fig. 2). Hence the business process analyst is provided with the complete security solution for his work-flow (also not disturbing the primary goal of the business process models, see step 4).


                                 Present security solutions & 7) Rationalise security solutions. Introducing security decisions is a trade-off which a business analyst must take into account (Step 6). Security requirements need to be prioritised based on their cost and risk reduction [23], but not every security requirement would be selected. Firstly, the business analyst should examine what is potential cost of implementing the defined security requirement (or how this security requirement could potentially influence the performance of the workflow). Then in step 7 the security analyst should understand what the risk reduction is if this security requirement is implemented. By ranging the requirements according to their cost and risk reduction, one could define a prioritised set of requirements that should be implemented in the work-flow to increase its security.

In [24], we have briefly presented ten security risk-oriented patterns. In this paper we limit our scope to five patterns, however here we give a detailed overview by highlighting the secured assets, potential risks and security requirements. Additionally we present patterns using the BPMN modelling notations.

Pattern secures the data transmitted between the business entities.

This pattern is derived from the claim registration activity of an insurance company [25]. It addresses the electronic transmission of data between two entities. Its scenario indicates that when the client needs to register a claim, s/he fills the form and submits data to the server for employment as illustrated in Fig. 3
                            (this figure instantiates to B. Business process model annotated with security objectives as described in Fig. 2). Here confidentiality and integrity of data are two important security criteria; data correspond to business assets; and IS assets are defined as Input interface and Server.

In SRP1 we make an assumption that the data are transmitted using Transmission medium (characterised as IS asset, too) as illustrated in Fig. 4
                           . However this situation faces (at least) two vulnerabilities. Firstly such a transmission medium could be intercepted by an Attacker (i.e., threat agent) who has the means to intercept it by acting as a proxy. Secondly, since data are not encrypted, they could be misused (i.e., read and kept for later use or modified and passed to the server) by this attacker. As described in Table 1
                            (see Impact), this could harm data, could lead to the loss of transmission medium reliability, and could negate data confidentiality and integrity. Fig. 4 reflects C. Security risk-oriented business process model (see Fig. 2).

The SRP1 pattern introduces two alternative security decisions i.e., risk reduction and risk avoidance, which leads to different security requirements (see Table 1). In case of risk reduction, security requirements are making data unreadable and verify the received data 
                           [29]. In Fig. 5
                           , we illustrate how security requirements are introduced to reduce the identified risks. Annotations (see Fig. 6
                           ) corresponding to these security requirements are placed on the business model and fed back to the business analyst. Figs. 5 and 6 correspondingly reflect D. Security requirements for business process model and E. Business process model annotated with security requirements from Fig. 2.

In case of the risk avoidance as defined in Table 1 the security requirement “change the transmission medium so that there will be no ability to intercept it” is introduced. The implementation of this requirement could potentially lead to introduction of the physical data delivery to the server.

Pattern ensures valid data entry into business processes by rejecting the unwanted malicious data.

As SRP1 this pattern is also derived from the claim registration activity of the insurance company [25]. This pattern (see Fig. 7
                           ) secures the business activity (i.e., any activity after data is submitted), of which integrity and availability have to be ensured. According to this pattern, the data could be submitted by any entity to the input interface (understood as IS asset). The activity submits data is vulnerable because it does not check the incoming data, which could be submitted by an attacker (i.e., threat agent) who is capable of writing malicious scripts (e.g., cross-site scripting, like SQL queries or xPath injections [30]). Executing these scripts enable an attacker to read/write the confidential business data or change the business rules. If this happens, it risks the confidentiality and integrity of the data itself, and any activity after data is submitted may be harmed, become unavailable or lose its integrity; additionally the input interface would be compromised. To mitigate the risk(s), the SRP2 pattern introduces a security requirement filter the incoming data. This security requirement could be implemented into input validation [30], input sanitisation [31], input filtration [30], or/and input canonicalization [32] security controls.

The pattern ensures the availability of business service by protecting the IS from denial of service (DoS) attack.

This pattern is derived from the comprehensive survey [33] of the Denial of Service (DoS) attacks and their protection strategies. The major idea is to protect the business services (i.e., business assets), which is provided by a server (i.e., IS asset), in order to guarantee the availability of this business service. The pattern assumes that there exists an attacker capable of hacking a large number of computers that simultaneously request (see Fig. 8
                           ) the business service 
                           [33]. The attacker is able to target the server because the used protocol (e.g., TCP, ICMP, or DNS) allows handling unlimited number of requests for service [34]. Depending on the protocol used, the multiple service request (i.e., attack method) could be executed as (i) TCP SYN flooding [34], (ii) HTTP Spidering [35], (iii) ICMP directed broadcasting [33], or (iv) DNS flooding [33]. Hence, the impact of the risk event is that the server becomes incapable to operate resulting in business service becoming unavailable to the ordinary users. This impact could, potentially, provoke the loss of the business consumers' confidence in the service provider. To reduce the DoS attack, one needs to implement a security requirement for checking for the abnormal requests (see Fig. 8), which should include filtering and classifying of incoming requests, detecting abnormal requests, and discarding the attacking ones. Implementation would result in detection [36–38], filtering [39], and response to attack [40] techniques.

The pattern secures the confidential data by applying multi-level security.

Derived from [41] the SRP4 pattern describes how to secure confidential data from access by unauthorised people or devices. The pattern is based in an implementation of the multi-level security technique where (stakeholder or device) roles and data are classified to levels of trust and sensitivity. In Fig. 9
                            a user requests data (a confidential business asset). In response to this request the data are retrieved (using the retrieval interface characterised as the IS asset) and provided to the user. The problem arises if the retrieval of the confidential data is allowed to any user (independently whether s/he is malicious or not) without checking his or her access permissions to the data. Such a risk event would lead to the disclosure of the confidential data; it might provoke that these data would be sent to the business competitors, thus, compromising the business itself. On the technical level it would question the reliability of the data retrieval (and potentially storage) device. To reduce such risk, the check for the access rights should be implemented. This means that one needs to define clearance or trust levels (for accessing people or devices) and data sensitivity levels. Additionally, the verification procedure of clearance levels against sensitivity levels should be established. Potentially the implementation of such security requirements would lead to application of the Bell-la Padula [42], RBAC [43] or similar models.

The pattern ensures the data privacy at the data store against insiders (i.e., administrators or malware that infects data store).

The SRP5 pattern originates from [44]. The main goal of this pattern is to prevent the flow-control of information from leaking horizontally across the departments (i.e., at the same level). Let's assume (see Fig. 10
                           ), that there exists a storing/retrieval interface (i.e., IS asset), which helps clients (i) to store the patient's confidential data (i.e., business asset) in the data store and (ii) to retrieve them when needed. There also exists an attacker characterised as malicious insider who has privileges to access the data store and also retrieve data directly from it. If the storing/retrieval interface (also including the queries to the database) are designed in a way that data are saved/retrieved in a plain format, the attacker could view the patient's medical history that negates the data confidentiality. To reduce such security risk, one needs to introduce security requirements (see Fig. 10) that help in making data nvisible before they are stored in the data store and making them visible after they are retrieved from the database. Implementation of these security requirements would result in cryptographic techniques [44], or data protection techniques [45].

Each pattern contributes to the achievement of one or more security criteria. Table 2
                         associates the security criteria to the security requirements defined in five patterns (see Section 3.2). These security patterns contribute to the confidentiality and integrity of data and integrity and availability of business activity. For instance, the confidentiality of data is addressed through four security requirements. Similarly, the security criteria on integrity of data and business activity could be accomplished by the security requirements Verify the received data with the original and Filter the incoming data respectively. A single pattern may have multiple criteria associated with it, thus, one security requirement could potentially contribute to the accomplishment of more than one criterion.

The graphical notations of each security pattern is summarised in Table 3
                        . In column a it describes a number of elements that constitute patterns under search (e.g., see SRP1 in Fig. 3). In column b it describes a number of elements needed to express security requirements.

Following Fig. 2 the first interaction between a business analyst and security analyst happens when identifying assets and their security criteria (see step 1). Instead of asking for the help from the security analyst, the business analyst could use the security risk-oriented patterns presented in Section 3 to define the secure business processes by himself. For example, in Fig. 11
                         we illustrate an occurrence of SRP1 by aligning between Log on to portal and Submit data (Fig. 3). Both of these activities are about entering data (or User log on details in Fig. 11) using their input interface (or Lodging party in Fig. 11). Similarly there is correspondence between tasks Validate user and Employ data (see, Fig. 3).

The security risk-oriented patterns suggest to the business analyst solutions on how to achieve the security objectives. In correspondence to F (see Fig. 2), it means (re-)annotating the business model with the security requirements as illustrated in Fig. 12
                        . The next step of the pattern application includes both the presentation of the security requirements (see step 6 in Fig. 2) and reasoning for the security countermeasure (see step 7 in Fig. 2). On the instance level Fig. 13
                         corresponds to the G model (see Fig. 2). Correspondingly Fig. 14
                         instantiates the H model (see Fig. 2) and visualises the security risk in the given example.

The benefit of such visualisation is that it allows justifying the security solution. For example using Fig. 13, the business analyst could estimate the cost of security requirements (either (i) make data unreadable to attacker, or (ii) verify the received data with the origin, (iii) both i and ii, or (iv) none of these). The precise estimation certainly depends on the analysed problem domain. Using the Fig. 14, the business analyst could determine what constitutes the overall risk level (again the precise estimation depends on the analysed problem domain) in terms of the security event potentiality and impact level. Taking into account these measures the business analyst is able to judge what security requirements should be implemented into the security control.

To understand the SRPs performance we have applied the patterns in two business cases: i) land management organisation (see Figs. 11–14), and ii) construction organisation. The major objectives to select these business cases are: their complex execution of activities, large IT dependency, and continuous data exchange between various stakeholders. These models (see their size described in Table 4
                        ) are expressed in BPMN. The research goal of both case studies is twofold. Firstly, we verify the application guidelines described in Section 4.1. Secondly, we investigate the performance to discover potential security flaws.

To estimate the performance we calculate three metrics, as presented in Table 5
                        . Firstly, the pattern occurrences characterises how many times the pattern was found in the case model. Secondly, we calculate the extent, at which the pattern influences the business model. This extent is defined as a correspondence between the pattern size (i.e., sum of tasks, message flows and sequence flows, see Table 3, a columns) multiplied by occurrences and the size of business model (see Table 4). This extent characterises the security problem space. Thirdly, we introduce the extent, at which business models are increased when introducing security requirements (in terms of BPMN notations). This extent characterises the security solution space. It is defined as correspondence between the size of business model when security requirements are introduced (i.e., original business model size in Table 4 plus sum of elements needed to define security requirements (see Table 3, column b) multiplied by occurrences) and size of the original business models (i.e., Table 4).

Both extent measures could be used to prioritise security requirements. For example in Fig. 15
                         we show the correspondence between the problem and solution spaces. In both our cases the SRP3 is rather a large influence to the business model, but it indicates rather low extent needed to introduce security requirements for mitigating risks identified by SRP3. Contrary argumentation could be done regarding SRP1. In this way the business analyst could rationalise his decision on the business process security.

The validity of results may be affected by few threats. The security requirements described in SRPs might not be final, since other ones to mitigate the risks could be reported in the literature. The matching of security patterns has been performed manually by two persons. Further a certain degree of subjectivity is involved when interpreting the model constructs. Finally, we have analysed only two business models. Thus, we acknowledge that the obtained results could be broadened by analysing cases of larger scope.

@&#DISCUSSION@&#

Implementing security using patterns is not a novel way. Yoshioka [46] et al. performed a detailed survey on adoption of security patterns at different stages of IS development. In [47] authors presented a method to derive requirements using patterns. Likewise, as in our approach they determine the collaboration of customers and IT consultants. Their method can be used for eliciting security requirements but it lacks emphasis on the risk management. Schumacher et al. [6] provide a collection of security patterns addressing several levels of abstraction. These patterns implement the risk assessment and mitigation, however they give no guidelines to express the security patterns on business processes.

In comparison to pattern-based approaches there exist few studies to integrate risk management with business processes. Muehlen and Rosemann [48] identify risk as an inherent part of every business activity. They develop techniques for risk-aware process modelling and present a graphical extension of Event-driven Process Chains (EPC) to express risks. Similarly, Cope et al. [49] introduce risk-extended process models using BPMN. Their approach supports risk assessment, specification of vulnerabilities and countermeasures, but it lacks the specification of security requirements. Varela-Vaca et al. [50] have also extended the BPMN meta-model to add the risk-based concerns. They adapt the concept of UML profile to model threat scenarios in separate pools attached to the business processes. In [51] the complexity of asset-driven risk assessment is described. Authors highlight the problems by keeping a track of asset dependencies, which help estimate asset values. The approaches described in [50,51] emphasise the risk assessment of the business processes however they express neither the risk impact nor rationale for the security solutions.

@&#CONCLUSION@&#

In business processes, security concerns are addressed either by (i) eliciting and expressing the security requirements in business process models [12,8,13,10,7], or (ii) performing the risk assessment and implementing the countermeasures [51,52]. These approaches are beneficial but a holistic method is needed to manage security risks within business models. In this paper we have proposed eliciting security requirements using security risk-oriented patterns. We illustrate how security annotations enable the patterns to be applied to business processes (at early stages). Patterns facilitate non-security experts in implementing security concerns during business processes definition without consulting security experts. It benefits business analysts to choose cost effective solutions that suit the business earlier rather than knowing it later with the increased cost. We have illustrated the SRP patterns using BPMN, however, other (business) modelling languages [18–20] could be adoptable, too.

Our future work includes developing a semi-automatic identification of the SRP patterns. In addition we plan to strengthen the security patterns with the measurement for asset value, risk level and risk-treatment cost in order to support the security trade-off analysis.

@&#REFERENCES@&#

