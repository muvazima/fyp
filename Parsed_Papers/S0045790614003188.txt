@&#MAIN-TITLE@&#The Hamiltonian-based odd–even turn model for maximally adaptive routing in 2D mesh networks-on-chip

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A highly adaptive routing method is proposed for wormhole-switched 2D mesh networks.


                        
                        
                           
                           The degree of adaptiveness is maximized by minimizing the number of prohibited turns.


                        
                        
                           
                           The deadlock-freedom is guaranteed without adding virtual channels.


                        
                        
                           
                           The proposed method is minimal and can be used for unicast/multicast routing.


                        
                        
                           
                           The number of hotspots is diminished and the traffic distribution is efficient.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Network-on-Chip (NoC)

Adaptive routing methods

Deadlock

Turn model

Hamiltonian path-based routing strategy

@&#ABSTRACT@&#


               
               
                  Networks-on-Chip (NoCs) have emerged as a promising solution for the communication crisis in today’s high-performance Multi-Processor System-on-Chip (MPSoC) architectures. Routing methods have a prominent role in taking advantage of the potential benefits offered by NoCs. As a result, designing high-performance and efficient routing algorithms is highly desirable. In this paper, the Hamiltonian-based Odd–Even (HOE) turn model is proposed for both unicast and multicast routing in wormhole-switched 2D mesh networks. HOE is able to maximize the degree of adaptiveness by minimizing the number of prohibited turns, such that the algorithm remains deadlock-free without adding virtual channels. By increasing the number of alternative minimal paths, the hotspots are less likely to be created and the traffic is efficiently distributed throughout the network. The simulation results in terms of latency and power consumption indicate the better performance of the proposed method in comparison with the existing routing methods.
               
            

@&#INTRODUCTION@&#

Nowadays, bus-based and ad-hoc interconnects can no longer support the high communication demands of the complex Multi-Processor Systems-on-Chip (MPSoCs) according to the continuously increasing number of cores. As a result, Networks-on-Chip (NoCs) have been proposed as a promising solution to take advantage of the inherent parallelization offered by these multicore architectures [1,2]. Routing algorithms are responsible for the on-chip communication and traffic distribution across the network. Since on-chip communication plays a major role in the performance of the system, designing efficient routing methods is of significant importance.

According to [3], there are several properties that an ideal routing method should possess for maximum system performance, namely, high-throughput and low-latency message delivery, avoidance of deadlocks and livelocks, and ability to work well under various traffic patterns. Deadlock occurs when two or more packets are blocked forever due to the cyclic dependencies of resources such as links or buffers [4]. Livelock is a state when a packet keeps circulating in the network without ever reaching its destination [5].

In the wormhole switching technique, a packet is decomposed into small units called FLITs (FLow control digIT) which are then routed consecutively through the network [2]. Wormhole flow control has been increasingly advocated and used as a means of reducing latency and buffering requirements in various multicomputers [2,5]. But since it is prone to deadlock [5], additional precautions are necessary to guarantee the deadlock-freedom. It has been proven in [2] that a routing function for an interconnection network is deadlock-free if and only if there are no cycles in the Channel Dependence Graph (CDG). Breaking the cycles in the CDG is realized by either (1) restricting the routing algorithm in path selection such that an acyclic CDG is formed, or (2) splitting each physical channel along a cycle into a number of Virtual Channels (VCs) [2].

Among the factors contributing to the design of an efficient routing method, adaptivity [4] is an important one. Adaptivity determines the ability of the routing algorithm to provide alternative paths between each pair of source and destination nodes. In terms of adaptivity, the routing algorithms are classified into two main categories [2,4]: A deterministic (non-adaptive) routing algorithm always supplies the same fixed path between a given source–destination pair. On the contrary, a (minimal) adaptive routing algorithm adapts to the state of the network to select a route among alternative (shortest) paths to the destination. Note that a fully adaptive routing algorithm allows the packets to choose from any path. However, a partially adaptive routing algorithm is capable of routing packets through multiple paths, but some paths are prohibited for deadlock-freedom. A partially adaptive routing algorithm that maximizes the number of routing options while avoiding deadlock is referred to as maximally adaptive 
                     [5]. Compared to the deterministic methods, adaptive routing algorithms are able to avoid congested or faulty regions, and achieve a better load balance by distributing the traffic across the network.

VCs can also be incorporated to design highly adaptive routing methods that are deadlock-free. In fact, designing deadlock-free fully adaptive routing algorithms without VCs is impossible [2,5]. However, adding VCs to the network is costly because of the extra hardware requirements and the complex control logic imposed to the routers which can potentially increase the area overhead and network latency [2,4]. Thus, designing adaptive deadlock-free routing algorithms without using VCs is highly desirable.

In this paper, a maximally adaptive unicast/multicast routing method is presented targeting wormhole-switched two-dimensional (2D) mesh on-chip networks. The proposed Hamiltonian-based Odd–Even (HOE) turn model is deadlock- and livelock-free and requires no VCs. It has also been exploited to increase the adaptivity of the Column-Path (CP) [6] and Multi-Path (MP) [7] routing algorithms.

The remainder of this paper is organized as follows. After a brief overview of related works in Section 2, the path-based multicast routing algorithms are further studied in Section 3 because of their important role as an infrastructure for the proposed routing scheme. Section 4 presents the proposed routing method in both unicast and multicast modes, its degree of adaptiveness, and the deadlock avoidance in this model. Section 5 is devoted to the simulation results and discussion. Finally, the conclusions are drawn and some possible directions for future work are outlined in Section 6.

In general, the routing algorithms can be classified as either unicast (one-to-one) or multicast (one-to-many) [8,9], depending on the number of destination nodes.

The turn model was proposed in [4] as a systematic approach to design partially adaptive and deadlock-free unicast routing algorithms without using VCs. The turn model is based on analyzing the directions in which packets can turn in a network and the cycles that the turns can form. By prohibiting the smallest number of turns to break all of the cycles, maximally adaptive routing algorithms could be designed which are deadlock-free. The algorithm should not prohibit more turns than necessary. Otherwise, its adaptivity is reduced [4].

The two cycles in Fig. 1
                        (a) represent the eight turns formed using the four directions, East (E), West (W), North (N), and South (S) in a 2D mesh. Note that a 90-degree change of the travelling direction is called a turn [10]. The permitted and prohibited turns using the XY routing method are shown in Fig. 1(b) by the solid and dashed arrows, respectively. XY is deadlock-free since the four permitted turns cannot form a cycle, but neither do they allow any adaptivity [5]. In fact, only two turns, one from each cycle, need to be prohibited in order to provide some degree of adaptivity in routing. However, the prohibited turns must be chosen carefully since prohibiting any two turns does not guarantee deadlock-freedom [4]. The West-First (WF), North-Last (NL), and Negative-First (NF) routing algorithms presented in [4] based on the turn model, prohibit just one turn in each cycle. The permitted and prohibited turns of these maximally adaptive unicast methods are illustrated in Fig. 1(c)–(e), respectively.

The drawback of the turn model is the highly uneven degree of adaptiveness, and hence, uneven traffic distribution which may degrade the performance of the network, significantly [10]. For instance, using the WF, NL, or NF routing algorithms, only one minimal path could be identified for at least half of the source and destination pairs, while full adaptivity is granted to the remaining pairs.

In order to alleviate this problem, the Odd–Even (OE) turn model has been proposed in [10] as a maximally adaptive, deadlock-free routing method without using VCs. Unlike the turn model, the OE method does not eliminate any certain type of turns for message routing. Instead, the locations at which certain turns can take place are restricted such that a circular wait can never occur. The OE rules could be summarized as follows [10]:
                           
                              
                                 Rule 1: 
                                 East-South and East-North turns are prohibited in even columns.
                              


                                 Rule 2: 
                                 South-West and North-West turns are prohibited in odd columns.
                              

Note that 180-degree turns are prohibited in the OE turn model [10]. Fig. 1(f) shows the OE allowed and prohibited turns in even and odd columns, respectively.

Multicast communication is frequently employed in MPSoCS for the execution of parallel applications, such as dispatching information from a master node to several slave nodes, synchronization of multiple nodes, cache invalidations, and clock synchronization [6,11,12]. There are mainly three classes of multicast routing methods, namely, unicast-based 
                        [13], tree-based 
                        [14], and path-based 
                        [8].

In the unicast-based multicast delivery, the messages are replicated and multiple copies of the same message are injected into the network from the source to every destination. Although there is no hardware overhead involved in this method, it suffers from a considerable startup latency at the source and significant network traffic [7,12].

In the tree-based approach, a spanning tree is constructed by considering the source as the root and the destinations as the leaves of the tree [14]. A message is replicated at the branches and separate copies of the message are transmitted along the outgoing channels. The performance of the tree-based schemes degrades drastically in high traffic loads because if any of the branches are blocked, a part of the tree, or in the worst case the entire tree is blocked [5,12]. Note that the tree-based multicast methods require multiple VCs for deadlock-free routing [7].

Virtual Circuit Tree Multicasting (VCTM) [15] is a well-known minimal tree-based approach which supports multicasting in 2D NoCs. In VCTM, discrete unicast setup (look-ahead) packets exploit the XY routing method to form a tree from the source to the destinations. The ID of the multicast message which is carried by the setup packets, is used to update the look-up tables stored in each router. After this step, the multicast message is routed through the virtual path which is already established by the setup packets [15]. The main disadvantages of VCTM are as follows [16]: (1) Extra storage is required in each router to maintain the tree information which can consume a large power and chip area; (2) The startup packets introduce multicast latency. If the number of the destinations grows, the number of the startup packets increases, and the network performance degrades significantly; (3) VCTM is a deterministic routing method which cannot provide adaptiveness for neither unicast nor multicast messages.

Path-based multicast routing algorithms have been shown to outperform both unicast- and tree-based methods significantly [6,17]. In order to shorten the path in the multicast delivery, first, the set of destination nodes is partitioned into a number of disjoint subsets based on the location of the source. Then, the source generates one message for each subset, and the sorted destinations per subset are also put in the message header. In fact, multicasting is realized by sending multi-destination messages in this approach [9]. The current paper is focused mainly on the path-based multicast routing algorithms which are discussed in the next section in detail.

The deterministic and adaptive path-based methods which are introduced in this section are extended in Section 4 in order to implement new routing schemes.

Generally, in an 
                           
                              m
                              ×
                              n
                           
                         2D mesh network with a total number of 
                           
                              N
                              =
                              m
                              ×
                              n
                           
                         routers, each router’s location corresponds to the Cartesian coordinate system. Therefore, each router 
                           
                              i
                              ,
                              
                              0
                              ⩽
                              i
                              <
                              N
                           
                         is specified with its coordinate 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        , such that 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                         
                        
                           
                              (
                              0
                              ⩽
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              <
                              n
                              )
                           
                         and 
                           
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                           
                         
                        
                           
                              (
                              0
                              ⩽
                              
                                 
                                    y
                                 
                                 
                                    i
                                 
                              
                              <
                              m
                              )
                           
                         indicate the router’s position along the X and Y directions, respectively. In the Hamiltonian routing strategy, each router is assigned a label between 0 and 
                           
                              N
                              -
                              1
                           
                        . Starting from the first router with 
                           
                              (
                              0
                              ,
                              0
                              )
                           
                         coordinates, the routers in even rows are given labels from left to right, and the routers located in odd rows are labelled from right to left. The labelling function could be generalized as [7]:
                           
                              (1)
                              
                                 l
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   y
                                                   ×
                                                   n
                                                   +
                                                   x
                                                
                                                
                                                   if
                                                   
                                                   y
                                                   
                                                   is even
                                                
                                             
                                             
                                                
                                                   y
                                                   ×
                                                   n
                                                   +
                                                   n
                                                   -
                                                   x
                                                   -
                                                   1
                                                
                                                
                                                   if
                                                   
                                                   y
                                                   
                                                   is odd
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Such a labelling in a 
                           
                              3
                              ×
                              4
                           
                         mesh is illustrated in Fig. 2
                        . A Hamiltonian path for a graph is any path that visits every node exactly once. Based on the labelling, two disjoint subnetworks (or directed Hamiltonian paths) could be identified in the network: a high-channel (
                           
                              
                                 
                                    H
                                 
                                 
                                    H
                                 
                              
                           
                        ) subnetwork and a low-channel (
                           
                              
                                 
                                    H
                                 
                                 
                                    L
                                 
                              
                           
                        ) subnetwork. In the 
                           
                              
                                 
                                    H
                                 
                                 
                                    H
                                 
                              
                           
                         (
                           
                              
                                 
                                    H
                                 
                                 
                                    L
                                 
                              
                           
                        ), the nodes are visited in an ascending (descending) order starting from (ending up to) 
                           
                              (
                              0
                              ,
                              0
                              )
                           
                        . If the label of the destination is greater (smaller) than that of the source, the routing takes place in the 
                           
                              
                                 
                                    H
                                 
                                 
                                    H
                                 
                              
                           
                         (
                           
                              
                                 
                                    H
                                 
                                 
                                    L
                                 
                              
                           
                        ) subnetwork. Although the vertical channels are not part of the Hamiltonian paths, they can also be utilized accordingly in order to shorten the paths in routing [7,12]. The 
                           
                              
                                 
                                    H
                                 
                                 
                                    H
                                 
                              
                           
                         and 
                           
                              
                                 
                                    H
                                 
                                 
                                    L
                                 
                              
                           
                         Hamiltonian paths are represented in Fig. 2 by the solid and dashed arrows, respectively. The Hamiltonian path-based routing strategy guarantees deadlock- and livelock-free routing [6,7]. This is due to the fact that the packets get closer to the destinations by visiting the nodes in a strictly ascending (descending) order along the paths in 
                           
                              
                                 
                                    H
                                 
                                 
                                    H
                                 
                              
                           
                         (
                           
                              
                                 
                                    H
                                 
                                 
                                    L
                                 
                              
                           
                        ). Thus, the routing path has been restricted such that no cyclic dependency is formed between the nodes.

The Multi-Path (MP) routing algorithm [7] was introduced to reduce the path lengths in the network. The idea is based on the fact that most of the routers in the mesh topology have four output ports. Therefore, the set D of destination nodes is partitioned into two discrete subsets, 
                              
                                 
                                    
                                       D
                                    
                                    
                                       H
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       D
                                    
                                    
                                       L
                                    
                                 
                              
                           . 
                              
                                 
                                    
                                       D
                                    
                                    
                                       H
                                    
                                 
                              
                            (
                              
                                 
                                    
                                       D
                                    
                                    
                                       L
                                    
                                 
                              
                           ) contains the destinations whose labels are greater (smaller) than that of the source. Then, 
                              
                                 
                                    
                                       D
                                    
                                    
                                       H
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       D
                                    
                                    
                                       L
                                    
                                 
                              
                            are partitioned further into left and right subsets to form (at most) four disjoint subsets in total. Finally, the source generates one multicast packet per subset with the sorted destinations in the header. The packets are forwarded through the network using the corresponding Hamiltonian path [7].

The behaviour of this algorithm is clearly shown in the 
                              
                                 8
                                 ×
                                 8
                              
                            mesh of Fig. 3
                           (a). As could be seen in the figure, the source is the node at 
                              
                                 (
                                 3
                                 ,
                                 4
                                 )
                              
                            with label 35 which attempts to send packets to 10 destination nodes. The destinations are partitioned such that four copies of the message are prepared and sent from the source to accomplish the desired multicast operation. The header of the packets created and sent to the network by the source, contains 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 =
                                 {
                                 33
                                 ,
                                 15
                                 }
                                 ,
                                 
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 =
                                 {
                                 28
                                 ,
                                 27
                                 ,
                                 7
                                 }
                                 ,
                                 
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 =
                                 {
                                 62
                                 ,
                                 63
                                 }
                              
                           , and 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 =
                                 {
                                 37
                                 ,
                                 54
                                 ,
                                 59
                                 }
                              
                           . Once the packet with 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                            in the header arrives at node 37, a copy of the packet is sent to the local core and 37 is removed from the header. Since 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                            is not empty yet, the packet is routed to the next destination until it reaches the final destination and is terminated from the network. The deterministic MP method is a deadlock-free routing algorithm by following the Hamiltonian path strategy [7].

A unicast routing algorithm is compatible with a multicast method if no deadlock occurs among the unicast and multicast messages routed by them. Designing multicast algorithms that are compatible with the existing unicast methods is an efficient approach to handle the incompatibility problem [6]. The Column-Path (CP) routing algorithm is designed based on the XY routing policy. Since XY is implemented in many multiprocessors, it is possible to implement CP in existing architectures with simple modifications [6].

In the CP routing algorithm, D is partitioned into at most 
                           
                              2
                              k
                           
                         subsets, where k is the number of columns in the mesh. At most two messages are forwarded to each column: One message is sent from the source to the destinations which are in the same row or in the rows above that of the source. Similarly, another message is sent to the destinations which are in the rows below that of the source. If all of the destinations in a column are either below or above the source, one copy of the message is sufficient to service them [6].

An example of applying the CP routing method is shown in Fig. 3(b). As could be seen in the figure, the source attempts to send packets to 14 destination nodes. Based on the CP mechanism, the destinations are partitioned such that nine copies of the message are prepared and sent from the source to accomplish the desired multicast operation. For instance, since the destinations in 
                           
                              
                                 
                                    D
                                 
                                 
                                    
                                       
                                          H
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                         are all located above the source, one packet is created and sent to the network by the source to service them. The header of this packet which is routed along the X and Y directions, respectively, contains 
                           
                              D
                              =
                              {
                              (
                              1
                              ,
                              5
                              )
                              ,
                              (
                              1
                              ,
                              6
                              )
                              }
                           
                        .

By increasing the number of subsets compared to the MP scheme, CP uses shorter paths to route the message copies. Thus, the resources are held for shorter periods which results in better performance at high network loads [6]. However, a potential disadvantage of CP is revealed when the number of destinations grows. Since a large number of messages has to prepared and sent to the network, a severe congestion could occur at the source and its neighbouring nodes in the X dimension. This is due to the fact that CP is deterministic and the packets are routed first along the X axis. This is also evident in Fig. 3(b), where node 
                           
                              (
                              4
                              ,
                              4
                              )
                           
                         has to route five out of nine packets created by the source. Thus, other packets traversing through such paths could easily be blocked and practically, these nodes will become hotspots. These hotspots may gradually hinder the traffic flow in the overloaded networks, and cause the latency to rise significantly.

As discussed previously, deterministic routing methods suffer significantly from the degraded performance in congested networks. Hamiltonian Adaptive Multicast Unicast Model (HAMUM) was proposed in [12] in order to improve the performance of the Hamiltonian strategy by exploiting the alternative minimal paths during routing.

HAMUM, in general, is associated with two groups of rules [12]:

For the low-channel subnetwork,
                           
                              
                                 Rule 1: 
                                 South and West directions are allowed in even rows.
                              


                                 Rule 2: 
                                 South and East directions are allowed in odd rows.
                              

And for the high-channel subnetwork,
                           
                              
                                 Rule 1: 
                                 North and East directions are allowed in even rows.
                              


                                 Rule 2: 
                                 North and West directions are allowed in odd rows.
                              

If the source and destination are located in adjacent rows, HAMUM behaves deterministically. HAMUM is also deadlock-free since the packets follow the Hamiltonian paths. In fact, inasmuch as the packets are routed in strictly ascending (descending) order in the 
                           
                              
                                 
                                    H
                                 
                                 
                                    H
                                 
                              
                           
                         (
                           
                              
                                 
                                    H
                                 
                                 
                                    L
                                 
                              
                           
                        ) subnetwork, the deadlock is avoided [12].

The Adaptive Multi-Path (AMP) routing algorithm was proposed in [12] based on HAMUM to improve the characteristics of the deterministic MP. Fig. 4
                           (a) illustrates the AMP routing mechanism with the same source and destinations as Fig. 3(a). Consider the multicast message originating from the source node 35 which attempts to reach the destinations in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           . In order to route the message from node 27 (which is located in an odd row) to the last destination (node 7), the second rule of HAMUM for the 
                              
                                 
                                    
                                       H
                                    
                                    
                                       L
                                    
                                 
                              
                            subnetwork is applicable. The router at this node has to decide whether to route the packet to the south (node 20) or to the east (node 26). The decision is based upon the congestion level of the north and west input buffers of the aforementioned routers, respectively. The congestion level of each input port is examined through its Congestion Flag (CF) [12] by the adjacent router. Then by comparing the CFs, the router determines the proper direction towards which the packet has to be forwarded. Compared to MP, the number of available paths to be taken from node 27 to node 7 is increased to 4. For the packets being routed from the source node to the destinations in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                              
                           , and 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           , the number of available paths has been increased to 2, 3, and 2, respectively.

Similar to the AMP method, HAMUM rules were also exploited to modify the deterministic CP into an adaptive scheme. Fig. 4(b) shows an example of utilizing the resulting Adaptive Column-Path (ACP) routing strategy [12] for the network of Fig. 3(b). The number of message copies sent from the source to the destinations is the same as CP, but just three subsets have been depicted in this figure for simplicity. Consider the multicast message dispatched from the source node towards the destinations in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             7
                                          
                                       
                                    
                                 
                              
                           . As can be seen from the figure, the number of available paths to be taken from node 35 to node 54 is increased to 4. Once the packet arrives at 54, it is routed deterministically along the Y axis to reach 57. For the packets being routed from the source node to the destinations in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             8
                                          
                                       
                                    
                                 
                              
                           , the number of available paths has been increased to 3 and 5, respectively. Note that partitioning the destinations using ACP is according to the 
                              
                                 
                                    
                                       H
                                    
                                    
                                       H
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       H
                                    
                                    
                                       L
                                    
                                 
                              
                            subnetworks, and slightly different from the CP.

As mentioned earlier, adaptivity in routing algorithms influences the network’s performance and power consumption to a high degree. Hence, the main motivation for this study was to increase the adaptivity of HAMUM and propose a new routing method based on that. This is achieved by taking advantage of the minimal unused paths in the HAMUM routing model.

Considering the HAMUM rules, the permitted and prohibited turns in even and odd rows can be regulated as in Fig. 5
                        (a) by the solid and dashed arrows, respectively. As it is evident from the figure, two of the four possible turns in each cycle are prohibited using the HAMUM routing method. However, prohibiting just one turn from each cycle not only ensures the deadlock-freedom, but also provides the maximum adaptivity at the same time. In fact, the restrictions in HAMUM that confine the packets to necessarily follow the Hamiltonian paths in order to avoid deadlock are relaxed by the proposed routing mechanism. This is achieved by carefully choosing the prohibited turns so that every possible cycle is broken and the deadlock is avoided.

Of the 16 different possibilities to modify the prohibited turns in each cycle of Fig. 5(a), 14 result in deadlock. The permitted and prohibited turns in one of the deadlock-free routing possibilities is shown in Fig. 5(b). As it is obvious from the figure, in each cycle, one of the prohibited turns of HAMUM has been modified to an allowed turn, and the other one remains forbidden to prevent deadlock. Since the proposed maximally adaptive routing method is based on the odd and even rows in the Hamiltonian routing, it will be called Hamiltonian-based Odd–Even (HOE) routing method, hereafter. HOE rules can be established as follows [18]:
                           
                              
                                 Rule 1: 
                                 East-South and North-West turns are prohibited in even rows.
                              


                                 Rule 2: 
                                 North-East and West-South turns are prohibited in odd rows.
                              

According to the HOE rules, ES and NE turns do not take place in the same row. Furthermore, NW and WS turns cannot be taken at the nodes in the same row. Note that similar to the OE turn model, 180-degree turns are prohibited. The order of the turns in the above two rules may also be interchanged.

Applying HOE rules to further increase the adaptivity in the AMP and ACP schemes results in two new highly adaptive routing algorithms which will be called HOEMP and HOECP, respectively. These methods are described below, together with some examples.

HOE is able to surpass HAMUM in terms of adaptivity. This is evident in Fig. 4(c) where HOE rules are applied to the MP routing method (HOEMP). Consider the case when the packet dispatched from the source node and heading to the destination node 7 in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           , has arrived at router 10 via 11. By exploiting the rules added by HOE, this packet can be forwarded to 9 (the same as AMP), or to 5 by taking a ES turn which is allowed in odd rows. Once it reaches 5 which is located in an even row, the packet can take a SE turn to reach the destination. Compared to the AMP, the number of alternative paths in this particular case has been raised from 4 to 10. Also, it has been doubled for the packets travelling in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                              
                           . For the destinations located in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                              
                           , the number of alternative paths has been raised to 3. But as can be seen in the figure, the number of alternative paths for forwarding the packets to the destinations in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             H
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                            remains unchanged. Note that the destination partitioning is identical to the AMP and MP.

Adapting the HOE rules to the CP method results in the HOECP routing algorithm. As shown in Fig. 4(d), consider the packet sent from the source node towards the destination node 14 in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           , which has arrived at router 18 from 19. There are two paths to choose from utilizing the HOE rules: either to forward the packet to 17 (similar to the ACP), or to 13 by taking a WS turn. Once the packet arrives at node 13, it can take a SW turn to reach the destination. In comparison with the ACP, the number of alternative paths in this particular case has been doubled. It has also been raised from 5 to 15 for the packets travelling from the source node to 7 in 
                              
                                 
                                    
                                       D
                                    
                                    
                                       
                                          
                                             L
                                          
                                          
                                             8
                                          
                                       
                                    
                                 
                              
                           . It is important to mention that the destination partitioning in HOECP is the same as ACP.

Unicast mode is a special case of multicast. Therefore, routing the packets by HOE in the multicast mode could be applied easily to the unicast as well. Consider the node 35 in Fig. 6
                         as the destination with four source nodes sending unicast messages to that. These source nodes are located on the South-West (node 0), South-East (node 7), North-East (node 56), and North-West (node 63) of the destination. The solid arrows represent the HAMUM paths, and the dashed arrows indicate the paths added by HOE. It is evident from the figure that HOE is always capable of finding at least one minimal path from the source to the destination. The pseudo code of the proposed routing algorithm for unicast traffic is presented in Fig. 7
                        .

The Degree of Adaptiveness (DoA), as the name implies, can be used to compare the routing algorithms in terms of adaptivity for unicast traffic. Assume that 
                           
                              
                                 
                                    S
                                 
                                 
                                    algorithm
                                 
                              
                           
                         is the number of minimal paths that an algorithm offers from a source node 
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    x
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    y
                                 
                              
                              )
                           
                         to a destination node 
                           
                              (
                              
                                 
                                    d
                                 
                                 
                                    x
                                 
                              
                              ,
                              
                                 
                                    d
                                 
                                 
                                    y
                                 
                              
                              )
                           
                        . If 
                           
                              Δ
                              x
                              =
                              |
                              
                                 
                                    d
                                 
                                 
                                    x
                                 
                              
                              -
                              
                                 
                                    s
                                 
                                 
                                    x
                                 
                              
                              |
                           
                         and 
                           
                              Δ
                              y
                              =
                              |
                              
                                 
                                    d
                                 
                                 
                                    y
                                 
                              
                              -
                              
                                 
                                    s
                                 
                                 
                                    y
                                 
                              
                              |
                           
                        , the DoA for a fully adaptive algorithm is defined as [4]:
                           
                              (2)
                              
                                 
                                    
                                       S
                                    
                                    
                                       fully
                                       
                                       adaptive
                                       
                                       algorithm
                                    
                                 
                                 =
                                 
                                    
                                       (
                                       Δ
                                       x
                                       +
                                       Δ
                                       y
                                       )
                                       !
                                    
                                    
                                       Δ
                                       x
                                       !
                                       Δ
                                       y
                                       !
                                    
                                 
                              
                           
                        
                     

Based on the location of the destination node with respect to the source node in the Hamiltonian path, 16 different states could be formed. Eight of those states which are formed in the 
                           
                              
                                 
                                    H
                                 
                                 
                                    H
                                 
                              
                           
                         subnetwork are illustrated in Fig. 8
                        . In each state, both HAMUM paths (solid arrows) and HOE additional paths (dashed arrows) are illustrated. The DoA for HAMUM has been calculated for all of the states in [12] as follows:
                           
                              (3)
                              
                                 
                                    
                                       S
                                    
                                    
                                       High
                                       -
                                       channel
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         (
                                                         Δ
                                                         x
                                                         +
                                                         D
                                                         )
                                                         !
                                                      
                                                      
                                                         Δ
                                                         x
                                                         !
                                                         D
                                                         !
                                                      
                                                   
                                                
                                                
                                                   for states
                                                   
                                                   1
                                                   
                                                   and
                                                   
                                                   8
                                                
                                             
                                             
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         (
                                                         Δ
                                                         x
                                                         +
                                                         
                                                            
                                                               D
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                         )
                                                         !
                                                      
                                                      
                                                         Δ
                                                         x
                                                         !
                                                         
                                                            
                                                               D
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                         !
                                                      
                                                   
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       S
                                    
                                    
                                       Low
                                       -
                                       channel
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         (
                                                         Δ
                                                         x
                                                         +
                                                         D
                                                         )
                                                         !
                                                      
                                                      
                                                         Δ
                                                         x
                                                         !
                                                         D
                                                         !
                                                      
                                                   
                                                
                                                
                                                   for
                                                   
                                                   states
                                                   
                                                   3
                                                   
                                                   and
                                                   
                                                   6
                                                
                                             
                                             
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         (
                                                         Δ
                                                         x
                                                         +
                                                         
                                                            
                                                               D
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                         )
                                                         !
                                                      
                                                      
                                                         Δ
                                                         x
                                                         !
                                                         
                                                            
                                                               D
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                         !
                                                      
                                                   
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              D
                              =
                              ⌈
                              |
                              
                                 
                                    Δ
                                    y
                                 
                                 
                                    2
                                 
                              
                              |
                              ⌉
                           
                         and 
                           
                              
                                 
                                    D
                                 
                                 
                                    ′
                                 
                              
                              =
                              ⌊
                              |
                              
                                 
                                    Δ
                                    y
                                    -
                                    1
                                 
                                 
                                    2
                                 
                              
                              |
                              ⌋
                           
                         
                        [12].

As it can be seen in Fig. 8, the DoA for the high- and low-channel subnetworks can be computed similarly for the proposed routing method. Thus,
                           
                              (5)
                              
                                 
                                    
                                       S
                                    
                                    
                                       High
                                       -
                                       channel
                                    
                                 
                                 =
                                 
                                    
                                       S
                                    
                                    
                                       Low
                                       -
                                       channel
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         (
                                                         Δ
                                                         x
                                                         +
                                                         
                                                            
                                                               D
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                         )
                                                         !
                                                      
                                                      
                                                         Δ
                                                         x
                                                         !
                                                         
                                                            
                                                               D
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                         !
                                                      
                                                   
                                                
                                                
                                                   for states
                                                   
                                                   2
                                                   
                                                   and
                                                   
                                                   7
                                                
                                             
                                             
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         (
                                                         Δ
                                                         x
                                                         +
                                                         D
                                                         )
                                                         !
                                                      
                                                      
                                                         Δ
                                                         x
                                                         !
                                                         D
                                                         !
                                                      
                                                   
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

From the above analysis, it is clear that the HOE routing method surpasses HAMUM in terms of adaptiveness. This is achieved by taking advantage of the unused minimal paths in routing utilizing the HOE rules. It is noteworthy to mention that the DoA of HOE is comparable to that of the OE turn model, as calculated in [10]. However, since employing the unicast routing methods such as OE for the multicast delivery increases the likelihood of deadlock in the network [12], HOE turns out to be a valuable asset for both multicast and unicast traffic with a higher DoA compared to HAMUM. This is discussed further in the following subsection.

The following argument is based on the proof given in [10] for the OE turn model.
                              Theorem
                              
                                 Any unicast routing algorithm that follows the HOE rules is deadlock-free as long as 180-degree turns are not allowed.
                              

We need to prove that the uppermost row which is a necessary part of a circular waiting path can never be formed. Suppose by contradiction that there exists a set of packets 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             k
                                          
                                       
                                    
                                  that are deadlocked in a circular waiting path. This waiting path must be comprised of both row and column channels because 180-degree turns are prohibited. Consider 
                                    
                                       
                                          
                                             RS
                                          
                                          
                                             u
                                          
                                       
                                    
                                  which is the uppermost row segment in the waiting path. There exist no other row channels in the waiting path that are more upward than 
                                    
                                       
                                          
                                             RS
                                          
                                          
                                             u
                                          
                                       
                                    
                                 . The channels of 
                                    
                                       
                                          
                                             RS
                                          
                                          
                                             u
                                          
                                       
                                    
                                  could be either West–East (eastward) or East–West (westward), which are shown in Fig. 9
                                  with the beginning and the end nodes designated as A and B, respectively. In Fig. 9(a), there must be some 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       1
                                       ⩽
                                       i
                                       ⩽
                                       k
                                    
                                 , taking a NE turn at node A, and also some 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                       1
                                       ⩽
                                       j
                                       ⩽
                                       k
                                    
                                 , taking an ES turn at node B on the waiting path. Here the contradiction arises because NE and ES turns cannot occur at the nodes in the same row according to the first rule of HOE. A similar contradiction can be obtained for the westward channels in 
                                    
                                       
                                          
                                             RS
                                          
                                          
                                             u
                                          
                                       
                                    
                                 . Thus, it is proved that HOE is deadlock-free.□

Here, we show that some restrictions have to be imposed on the HOE routing method for the multicast delivery in HOEMP to prevent the deadlock-freedom in this algorithm. As can be seen in Fig. 8, depending on the location of the destination relative to the source, eight different states (four in each subnetwork) could be identified such that the DoA of HOE is higher than that of HAMUM. Since the routing in HOE and HAMUM are identical in the remaining states, we will concentrate our discussion on states 3, 4, 5, and 6 in the 
                              
                                 
                                    
                                       H
                                    
                                    
                                       H
                                    
                                 
                              
                           , and 1, 4, 5, and 8 in the 
                              
                                 
                                    
                                       H
                                    
                                    
                                       L
                                    
                                 
                              
                            subnetworks, respectively. Once a multicast message arrives at a destination, the current router has to forward it to the next destination (if any). Here, the risk of deadlock arises using the HOE rules together with the MP destination partitioning. This can be studied in three occasions:
                              
                                 1.
                                 For the multicast messages dispatched from the source node in the 
                                       
                                          
                                             
                                                H
                                             
                                             
                                                H
                                             
                                          
                                       
                                     subnetwork, utilizing the HOE method does not jeopardize the deadlock-freedom in HOEMP. Note that the HOE additional paths use the same row as that of the source in the 
                                       
                                          
                                             
                                                H
                                             
                                             
                                                H
                                             
                                          
                                       
                                     subnetwork (as shown in the states 3, 4, 5, and 6 in Fig. 8). Since there is no risk of a turn occurring at the source node, deadlock cannot happen. Moreover, exploiting the HOE paths can reduce the traffic around the source nodes to a high extent.

This is also true for the multicast packets travelling to the last destination in the 
                                       
                                          
                                             
                                                H
                                             
                                             
                                                L
                                             
                                          
                                       
                                     subnetwork. Although the HOE paths use the same row as that of the final destination, it is clear that no additional turn will take place at this node. Thus, the deadlock-freedom is preserved.

For the remaining situations in both subnetworks, HOEMP has to be restricted to take the HAMUM paths in order to avoid deadlock. A sample case is depicted in Fig. 10
                                    (a), which is a combination of states 5 and 4 in 
                                       
                                          
                                             
                                                H
                                             
                                             
                                                H
                                             
                                          
                                       
                                     (
                                       
                                          S
                                          ,
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                    , and 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                       
                                     indicate the source node, and first and second destinations, respectively). The solid and dashed arrows represent the HAMUM and HOE additional paths. As discussed earlier, exploiting the HOE paths from S is possible without any risk of deadlock. However, once the message reaches 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     through the west or south, it has to be sent to 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                       
                                    . If the message selects the HOE additional paths to reach 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                       
                                    , a 180-degree or prohibited NW turn will take place in an even row. Fig. 10(b) shows another example in 
                                       
                                          
                                             
                                                H
                                             
                                             
                                                L
                                             
                                          
                                       
                                     in which following the HOEMP paths may cause a 180-degree or prohibited WS turn at 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                    , and has to be avoided.

Here, we show that unlike OE, HOE is consistent with the destination partitioning in the CP method, and utilizing HOECP for the multicast delivery does not result in deadlock. Based on the destination partitioning in the CP, the destinations are located either in the same column as that of the source, or in the left or right columns. If the source and destinations are located in the same column, the packets will travel along the Y axis without any turn required to reach the destinations. But for the destinations located in the other columns, the routing path can be divided into at least two (
                              
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                              
                           ) parts as shown in Fig. 11
                           (a):
                              
                                 1.
                                 The packet has to reach 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     starting from S. This routing problem is the same as the unicast routing discussed previously. Since it has been proved that HOE is deadlock-free in the unicast mode, it can easily be concluded that the packets travelling to 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     from S do not cause deadlock in the multicast mode as well. The 
                                       
                                          
                                             
                                                p
                                             
                                             
                                                1
                                             
                                          
                                       
                                     arrow in Fig. 11(a) represents the path from S to 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     which may contain several turns.

The packet has to reach 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                       
                                     via 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                    . If the packet has arrived at 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     through the Y axis, it can be simply routed to 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                       
                                     following the same Y direction. This deadlock-free path has been illustrated with the solid 
                                       
                                          
                                             
                                                p
                                             
                                             
                                                2
                                             
                                          
                                       
                                     arrow in Fig. 11(a). But the critical situation arises when the packet has reached 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     through the X axis. Therefore, the packet has to take a turn at 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     to reach 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                       
                                    . The dashed 
                                       
                                          
                                             
                                                p
                                             
                                             
                                                2
                                             
                                          
                                       
                                     arrows in Fig. 11(a) represent the four possible turns which can happen in 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     to reach 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                       
                                    , depending on the location of 
                                       
                                          
                                             
                                                D
                                             
                                             
                                                1
                                             
                                          
                                       
                                     relative to the S.

Based on the above facts, proving the deadlock-freedom in the multicast mode using HOECP can be simplified as follows: We need to show that there exists at least one permitted path from S to 
                              
                                 
                                    
                                       D
                                    
                                    
                                       2
                                    
                                 
                              
                            passing through 
                              
                                 
                                    
                                       D
                                    
                                    
                                       1
                                    
                                 
                              
                            by following the HOE rules. These paths are marked in Fig. 11(b) and (c) by considering all of the possible locations of the destinations with respect to the source. Note that if 
                              
                                 
                                    
                                       D
                                    
                                    
                                       1
                                    
                                 
                              
                            is located in the same row as that of the source, the problem space does not change. Routing the packet which has been arrived at 
                              
                                 
                                    
                                       D
                                    
                                    
                                       2
                                    
                                 
                              
                            to the next destinations in the subset (if any) is accomplished using the Y direction without any turn taking place. Hence, there is no further risk of deadlock once the packet arrives at 
                              
                                 
                                    
                                       D
                                    
                                    
                                       2
                                    
                                 
                              
                           . Note that HOECP is not only deadlock-free, but it can also offer adaptivity to the multicast packets in some cases.

Now we show that extending the OE turn model to be used in multicast CP is deadlock-prone. Using OE when S is located in an even column does not result in deadlock (Fig. 11(d)). But the problem arises when S is located in an odd column and 
                              
                                 
                                    
                                       D
                                    
                                    
                                       1
                                    
                                 
                              
                            is in an even column on the right side of the S, as in Fig. 11(e). Consider the case where the destinations are located above the source. Since EN turn is prohibited in even columns, no deadlock-free path can be formed to reach 
                              
                                 
                                    
                                       D
                                    
                                    
                                       2
                                    
                                 
                              
                            through 
                              
                                 
                                    
                                       D
                                    
                                    
                                       1
                                    
                                 
                              
                           . A similar problem exists for the destinations which are located below the source.

In this section, the efficiency of the proposed method is evaluated using a modified version of BookSim 2.0 cycle-based network simulator [2]. Details of the configuration parameters are listed in Table 1
                     . As can be seen from the table, an 
                        
                           8
                           ×
                           8
                        
                      2D mesh network has been simulated and analyzed. In each set of simulations, the number of destinations is considered to be 10 and 25 for the multicast messages. The VCTM routing technique as a representative of the tree-based methods is compared with six path-based routing algorithms discussed in the paper. Unlike the path-based methods which do not require VCs, the VCTM routers utilize 4 VCs to avoid deadlock. In order to compare VCTM and the path-based methods fairly, the VCTM’s buffer queue is equipped with 2 entries.

Latency is defined as the number of cycles spent between the initiation of the message operation until the tail flit reaches the last destination [12]. BookSim models all router pipeline delays and wire latencies for transmitting the packets. In our simulations, all of the routing methods have a channel latency of 1 cycle. First, the simulator has been warmed up for 10,000 cycles to be stabilized and then the results were averaged over the next 100,000 cycles. All of the values reported in this section are obtained by averaging the results from at least 10 simulation samples, each with a distinct random starting seed to ensure a fair comparison between the algorithms. Orion 
                        
                           2.0
                        
                      
                     [19] power library has also been integrated in BookSim to obtain the power consumption results.

The performance of the seven routing algorithms are investigated under different traffic patterns in order to verify the efficiency of the proposed method.

The hotspot traffic profile is based on the uniform traffic model. In the uniform random pattern, the probability of sending a message from each node to any other node is equal. In the hotspot traffic profile, a few nodes in the network are designated as hotspot nodes. The probability of sending packets to the hotspot nodes (h) is higher compared to the remaining nodes. In other words, the hotspot nodes receive an extra proportion of the traffic in addition to the regular uniform traffic. This traffic pattern can represent computations in multiprocessors in which critical sections or shared data are placed at the hotspot node(s) [10]. In our simulations, four hotspot nodes at 
                              
                                 (
                                 3
                                 ,
                                 3
                                 )
                                 ,
                                 
                                 (
                                 4
                                 ,
                                 3
                                 )
                                 ,
                                 
                                 (
                                 3
                                 ,
                                 4
                                 )
                              
                           , and 
                              
                                 (
                                 4
                                 ,
                                 4
                                 )
                              
                            which are located at the centre of the network have been chosen with 
                              
                                 h
                                 =
                                 25
                                 %
                              
                           .


                              Fig. 12
                              (a) shows the average latency of the routing algorithms with respect to the network’s message injection rate for an 
                                 
                                    8
                                    ×
                                    8
                                 
                               mesh with multicast messages destined to 10 and 25 destinations. As can be seen in the figure, when the injection rate and the number of destinations grow, the worst performance belongs to the tree-based VCTM routing technique. As discussed in Section 2.2, there are a number of reasons as to why the path-based methods can achieve a superior performance compared to VCTM [16]: (1) When the traffic load and the number of destinations grow in the network, the setup delay and the tree construction overhead becomes dominant for VCTM. Hence, the performance of VCTM degrades excessively. However, as the setup packets are not required in the path-based schemes, the number of injected packets and thereby, the traffic in the network is reduced; (2) The AMP, HOEMP, ACP, and HOECP routing methods are adaptive. Since they can provide more diverse paths than the deterministic methods such as VCTM, the links in the network can be fairly used with less contention; (3) Utilizing VCs can impose excessive delay to the routers due to the extra arbitration.

As it has been discussed in Section 3.2, MP-based methods achieve better performance when the injection rate is relatively small. However, by increasing the injection rate, CP-based schemes are successful in decreasing the average latency, as can be seen in Fig. 12(a). In general, employing HOE on both MP and CP algorithms results in a lower average latency in high injection rates and large number of destinations. This improvement is mainly due to the fact that adaptive routing algorithms try to minimize the congestion in the network by offering alternative paths to route the packets, thereby reducing the average communication delay. On the contrary, deterministic routing methods (such as MP and CP) are highly vulnerable to the congestion since they have no mechanism to tackle the congested areas of the network. Although AMP and ACP are adaptive, the results also confirm that the HOEMP and HOECP routing algorithms are able to outperform them in terms of adaptiveness. Hence, our highly adaptive method succeeds in achieving lower latency by a better distribution of the traffic in the network such that the network saturates later.

For a better study of the unicast aspect of HOE, it has been compared with five other unicast methods, namely, NF, WF, NL, the unicast mode of HAMUM, and OE under the hotspot traffic profile. The results are presented in Fig. 12(b). As can be predicted, the behaviour of the HOE and OE routing methods are quite similar since they have equal DoAs. This figure clearly demonstrates the superiority of the proposed method in the unicast mode compared to the four other methods under a nonuniform traffic pattern. As discussed earlier, the NF, WF, and NL routing models suffer from a high uneven DoA which curtails their ability to alleviate the traffic congestion problem [10].

Simple traffic models such as uniform random and hotspot are useful for NoC designers in acquiring insights by stressing the network with a regular, predictable traffic pattern. However, they do not represent realistic traffic loads which are necessary in assessing the networks [20]. Therefore, utilizing traffic models such as Rentian which mimics realistic traffic behaviour is of significant importance. We will first explain why Rentian traffic better imitates the real traffic patterns.

The power-law form of Rent’s rule predicts the number of terminals required by a group of gates for communication with the rest of the circuit [21]. Christie and Stroobandt [21] argue that Rent’s rule originates naturally from the locality of connections in circuit placement. In the VLSI domain, circuit designers attempt to exploit locality by placing highly connected blocks as close as possible to minimize the wiring. Similarly, an optimal mapping algorithm tends to exploit locality by placing the heavily communicating tasks onto the nearest neighbours in order to avoid excessive communication overhead between the cores. Therefore, the locality of tasks is required in NoCs, analogous to the classical logic placement in circuits [22]. Extending the concept of connection locality in circuits to communication locality among the cores was the motivation for Greenfield et al. [22] to apply the principle of Rent’s rule to the analysis of NoCs [23].

Heirman et al. [24] studied the Rentian localized traffic implication on NoC architectures by analyzing the SPLASH-2 [25] benchmarks. They confirmed that the network traffic in all of the benchmark applications follows the Rent’s rule. Hence, we have implemented a Rentian traffic generator in order to assess the efficiency of the proposed method under real traffic distributions. The implementation is based on the Communication Probability Distribution (CPD) introduced in [23]. CPD is the probability that a processor sends packets to another processor at a particular distance in the network: the farther the distance, the smaller the probability. The formula for CPD and implementation details are described in detail in [23].


                           Multicast Traffic. The average latency of the routing algorithms as a function of the message injection rate is shown in Fig. 13
                            under the Rentian traffic profile. The Rent’s exponent (p) has been set to 
                              
                                 0.75
                              
                           .
                              1
                              
                                 p 
                                 
                                    
                                       (
                                       0
                                       ⩽
                                       p
                                       ⩽
                                       1
                                       )
                                    
                                  is a representative of communication locality such that smaller values of p indicate more localized communication [22].
                           
                           
                              1
                            As is apparent from the figure, VCTM has the highest average latency for the Rentian traffic as well. HOEMP outperforms the other algorithms when the injection rate is low. But as the injection rate increases and the network is overloaded, HOEMP reaches the saturation point and HOECP excels in reaching the lowest average latency. Based on the results shown in this figure, the average latency that a flit using the HOEMP and HOECP routing algorithms experiences near the saturation points, is compared to the other path-based methods in Table 2
                            under the Rentian traffic pattern. The saturation is defined to be when the latency is double the zero-load latency [15]. The simulation results confirm the high adaptiveness provided by HOE, particularly under nonuniform traffic. In fact, the routing has become less vulnerable to the numerous number of hotspots being created under the Rentian traffic pattern.


                           Mixed (Multicast and Unicast) Traffic. The algorithms are also compared in terms of average latency under a mixed Rentian traffic pattern. This pattern represents the traffic in distributed shared-memory multiprocessors, in which cache misses are performed using unicast messages, and updates and invalidations are served by the multicast messages [6,12–14]. In our simulations, the mixture of multicast and unicast traffic has been implemented such that 
                              
                                 80
                                 %
                              
                            of the injected messages are unicast, and the remaining 
                              
                                 20
                                 %
                              
                            are multicast. The results which are plotted in Fig. 14
                            validate the efficiency of our approach in alleviating the latency through a better traffic distribution across the network. It is also clear from Fig. 14 that VCTM is more efficient for applications with a small percentage of multicast operations [15]. The average performance gain that the HOE-based routing algorithms offer near the saturation points under the mixed Rentian traffic pattern is also listed in Table 3
                           .

The power dissipation of the network (including the communication channels, input buffers, router control logic, and output control modules) has been calculated for a 65nm technology, with an operating point of 1GHz and supply voltage of 1V. Leakage power is included for channels, buffers, and switches. The results in terms of average power consumption for the 
                           
                              8
                              ×
                              8
                           
                         mesh with 10 and 25 destinations under the mixed Rentian traffic have been illustrated in Fig. 15
                        . Table 4
                         tabulates the average power gain obtained using HOE near the saturation points. The results support our conclusion that HOE excels the other methods in diminishing the number of hotspots, and consequently, the power consumption in the network.

To assess the hardware cost of the proposed method, the routers were modelled with VHDL and synthesized by Synopsys Design Compiler using the TSMC 65nm standard cell library. Each router is assumed to have 5 input and output ports. The data width is fixed at 32bits (flit size), and each input channel has a buffer size of 8 flits for the path-based methods. The VCTM router exploits 4 VCs, each with a buffer size of 2 flits. The area overhead in the VCTM method consists of a virtual circuit table with 512 entries which is implemented using a Context Addressable Memory (CAM) at each router. The AMP and ACP (HOEMP and HOECP) schemes use the same switch structure but their destination partitioning strategies are different. Thus, the destination partitioning mechanisms were also included in the hardware overhead in addition to the multicast routing scheme. Based on the results which are shown in Table 5
                        , the area overhead of HOEMP and HOECP routers are comparable to those of AMP and ACP. The results also reveal that HOEMP and HOECP impose around 1% area overhead compared to the MP and CP, which can be considered negligible. As mentioned earlier, the excessive area and power overhead of the VCTM method is mostly related to the CAM and VCs.

In this paper, a maximally adaptive unicast/multicast routing method (HOE) is presented based on the even and odd rows in the Hamiltonian routing strategy. The proposed method is able to reach the maximum degree of adaptiveness by imposing the minimum number of restrictions on the travelling directions of the packets, from a turn-model point of view. Hence, the likelihood of the deadlock occurrence is eliminated without using VCs. HOE has also been applied to the Multi-Path (MP) and Column-Path (CP) routing algorithms to improve their characteristics. Experimental results validate the efficiency of the proposed approach in choosing the appropriate routing path by avoiding the congested regions of the network, and a better traffic distribution across the network.

We plan to study the possibility of extending the HOE turn model to high-dimensional meshes or other topologies. Moreover, the design of fault-tolerant routing methods based on HOE remains to be investigated in the future.

@&#REFERENCES@&#

