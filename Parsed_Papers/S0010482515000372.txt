@&#MAIN-TITLE@&#Reducing dimensionality in remote homology detection using predicted contact maps

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Predicted contact maps can be used to detect remote homology.


                        
                        
                           
                           The dimensionality of the protein representation can be reduced.


                        
                        
                           
                           A new discriminative strategy to detect remote homology is proposed.


                        
                        
                           
                           We model every protein family using diverse classification techniques.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Classification

Physicochemical properties

Remote homology detection

SCOP family

3D structure models

@&#ABSTRACT@&#


               
               
                  In this paper, a new method for remote protein homology detection is presented. Most discriminative methods concatenate the values extracted from physicochemical properties to build a model that separates homolog and non-homolog examples. Each discriminative method uses a specific strategy to represent the information extracted from the protein sequence and a different number of indices. After the vector representation is achieved, support vector machines (SVM) are usually used. Most classification techniques are not suitable in remote homology detection because they do not address high dimensional datasets. In this paper, we propose a method that reduces the high dimensionality of the vector representation using models that are defined at the 3D level. Next, the models are mapped from the protein primary sequence. The new method, called remote-C3D, is presented and tested on the SCOP 1.53 and SCOP 1.55 datasets. The remote-C3D method achieves a higher accuracy than the composition-based methods and a comparable performance with profile-based methods.
               
            

@&#INTRODUCTION@&#

Remote homology detection is a fundamental problem in bioinformatics. A remote homolog of a protein P is another protein Q that does not exhibit high sequence similarity but is functionally and structurally related. This type of research is considered a fundamental step in biomedical applications such as drug discovery [1,2], where there is a need to identify proteins that share common functions given a specific protein sequence. Although the formal definition of remote homology detection refers to protein sequences with less than 25% sequence identity, called the “twilight zone” in Homaeian et al. [3] and Huang and Bystroff [4], the problem can also be defined using the SCOP hierarchy. Considering the four levels of the SCOP hierarchy (i.e., class, fold, superfamily and family), the remote homologs of a protein P in family F are proteins in the same superfamily of P that do not belong to F.

Several methods have been proposed to determine remote homology [2,5–18]. Recent strategies include discriminative methods, which build a model considering both positive (remote) and negative (non-remote) examples. They rely on a combination of features that can discriminate protein families. SVM I-sites [5] is a discriminative method. In SVM I-sites, every subfragment of an unknown target sequence is submitted to the log-odd matrix representing each I-site. The I-sites library is a set of short sequence patterns (profiles) that correlate strongly with protein three-dimensional structure elements. The similarity scores of different clusters of I-sites are mapped to a range of comparable values by using a confidence curve. A confidence curve maps similarity scores to the probability of the correct local structure based on a jack-knife test.

Remote homology can be detected by sequence composition-based methods, which are based on using subsequences, motifs or word similarity from protein sequences to extract features that help in discriminating protein families. There are sequence composition-based methods that incorporate physicochemical properties of amino acids [7–10]. SVM-RQA [7] is a discriminative method that uses a recurrent quantification analysis to measure the similarity between two proteins. The recurrent quantification analysis is a method that allows detecting recurrence patterns along the protein sequence. A protein is represented by 10 values extracted from an embedding matrix that is part of a recurrence quantification analysis. An embedding matrix can be calculated for each physicochemical property. SVM-RQA uses 480 indices or physicochemical properties, obtaining a total of 10×480=4800 values in its vector representation. Another discriminative method is SVM-PCD [8], which proposes to represent a protein by 18 values extracted from the distribution of physicochemical properties scores. Each distribution is calculated from the 4-mers of the primary sequence when a single physicochemical property is considered; a 4-mer is the average of the physicochemical values in a 4-size window. Webb-Robertson et al. [8] propose SVM-PCD (61), SVM-PCD (181), and SVM-PCD (531), which uses 61, 181, and 531 physicochemical properties, respectively. Thus, a total of 61×18=1098, 181×18=3258, and 531×18=9558 values are used in the vector representation. Identifying remote homologs is performed by using the support vector machines (SVM) technique because it is not affected by the high dimensionality of the vector representation of proteins (usually 4200 values or more for each protein). Building an SVM depends on the number of samples in the training dataset and not on its dimensionality [19]. Most of the classification techniques (i.e., Bayes classifiers, neural networks, decision trees) are not suitable when they are used on high dimensional data. For instance, calculating the probabilities when a Bayes classifier is being built from high dimensional data makes that classification technique unfeasible [20]. Using other classification techniques rather than support vector machines could be achieved by reducing the dimensionality of the protein representation in the remote homology detection problem.

Remote homology can also be detected by using generative methods, which are based on building a statistical model for each family or superfamily. Hidden Markov Models (HMM) and profiles of protein families are frequently used [14,15]. Secondary structure elements have also been considered in remote homology detection [17,18]. Kumar and Cowen [17] focus on detecting remote homology for β-structural motifs by training a HMM model with sequences based on pairwise dependencies of β-sheet hydrogen bonding. Profile-based methods are another kind of strategies that allow detecting remote homology. Profile-based methods [21–23] use an alignment of each protein against a non-redundant database to obtain a profile. The evolutionary information extracted from profiles allows detecting remote homologs in a more accurate way than composition-based methods.

In this paper, we propose a new method that reduces the high dimensionality of the vector representation in remote homology detection by using models that are defined at the 3D level and thus are highly structurally and functionally related. Then, the 3D models are mapped from the protein primary sequence. We propose to address the problem of remote homology detection by correlating 3D structure models and primary sequence. The new method, called remote homology detection by the correlation of 3D models (remote-C3D), is presented and tested on two different datasets, SCOP 1.53 and SCOP 1.55.

In the following section every step in the remote-C3D method is explained in detail. In Section 3, the results are given for both the SCOP 1.53 benchmark and the SCOP 1.55 dataset. We focus the evaluation of the remote-C3D method on discovering the effect of reducing the dimensionality of the vector representation in remote homology detection and also on obtaining the accuracy of a remote homology detection method that is based on 3D structural models. Finally, the conclusions of the research are presented in Section 4.

@&#METHODS@&#

In this section, we explain in detail every step in the remote-C3D method. The remote-C3D method includes obtaining the 3D models, predicting a contact map from the primary sequence, calculating the count vector, and building a classifier for each SCOP family. The general overview of the remote-C3D method is shown in 
                     Fig. 1.

The first step in the remote-C3D method is obtaining 3D models from the contact map representation of protein in a given dataset. A distance matrix of a protein is a square matrix containing the Euclidean distances between all pairs of Cα atoms in the protein. A contact map is achieved by discretizing the distance matrix. Different thresholds can be used to determine when two residues are in contact. In this research, we assume that two residues are in contact when the Euclidean distance between the corresponding Cα atoms is less than or equal to 8.0 Angstroms. A cutoff distance of 8.0 Angstroms has been considered a standard threshold for most of the current contact maps prediction programs [24–26].

Although contact maps of any two proteins are different, there are specific areas in the contact maps that can be recognized as patterns even in different domains. In fact, Choi et al. [27] found that a set of 100 representative 10×10 submatrices extracted from the distance matrices are able to discriminate domains in the protein structure comparison problem, which is related to classifying a protein into the correct SCOP classification at the class, fold, superfamily, and family levels. Choi et al. [27] established that the 100 representative submatrices or models reflecting local structural features, and combinations of these models can be used to reconstruct the original distance matrices. In addition, Choi et al. [27] demonstrated that even though there are millions of different submatrices in all proteins, most of the submatrices are common, and thus, a finite number of models can be sufficient to represent observed interactions in the distance matrix.

If the 3D information is available then solving the remote homology detection problem is very easy; otherwise it becomes a complicated task. Therefore, the remote-C3D method predicts contact maps from the primary sequence alone. Even though remote homology detection is performed using predicted contact maps, the collection of models are obtained from actual contact maps. A collection of 3D models (i.e., common m×m submatrices in the contact maps; where m goes from 4 to 12) are used in the remote-C3D method. The 3D models are extracted from a training dataset of 40 proteins selected from the SCOP 1.55 dataset by taking two proteins randomly selected for each of the 20 SCOP superfamilies in the dataset. Distance matrices, and thus, actual contact maps are available for the SCOP 1.55 dataset. Section 3.6 shows how the selection of the proteins affects the clustering process. Obtaining the 3D models starts by calculating a contact map for each protein in the training dataset used specifically for the clustering process. Then, discretized submatrices of m×m are extracted as local structural features. The size of the submatrix determines the size of the models that are used. A large size of the submatrix (i.e., 12×12 submatrix) captures a large portion of a 3D interaction in the contact map. On the other hand, a small size of the submatrix (i.e., 4×4 submatrix) might not be enough to capture a representative interaction. We propose to use different sizes (i.e., 4×4, 6×6, 8×8, 10×10, 12×12) to discover the impact of the size of the submatrix in the remote-C3D method. For the obtained collection of discretized submatrices, the clustering algorithm CLARA (Clustering Large Applications) [28] is used to obtain representative discretized submatrices (i.e., resulting medoids after clustering algorithm) that are taken as 3D models in the remote-C3D method. The CLARA algorithm is used because it can work with large datasets [28]. Traditional clustering algorithms cannot be applied in our dataset. In addition, the CLARA algorithm returns medoids, which means that each model is a typical structure that actually exists in the dataset. It is expected that these discrete models are common and frequently used in contact maps. Following the methodology proposed by Choi et al. [27], each protein in training is first clustered into 50 representative submatrices, and then the obtained medoids are clustered again to obtain a final set of k models. This allows having a reasonable amount of submatrices in the clustering process. Otherwise, there would be millions of submatrices to be clustered, affecting the performance of the machine learning algorithm.

In this paper, we attempted different sizes of the submatrices (i.e., 4×4, 6×6, 8×8, 10×10, 12×12) and different number of models (i.e., 10, 20, 30, 40, 50). 
                        Fig. 2 shows the collection of models 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 10
                              
                           
                         (i.e., 10 discretized 10×10 submatrices). Contacts are represented in black and non-contacts in white. Every 3D model reflects a local structural interaction. m1 represents the helix contacts in the main diagonal; m2 represents the end of a parallel beta-sheet; m3 represents the extreme outer part (right) of the main diagonal; m4 represents the non-contacts between residues and is the most frequent model in any protein; m5 represents the inner part of the main diagonal; m
                        6 represents the thin diagonal (non-helix); m
                        7 represents the outer part (left) of the main diagonal; m8 represents the extreme outer part (left) of the main diagonal; m9 represents the anti-parallel beta-sheets; m
                        10 represents the outer part (right) of the main diagonal. 
                        Fig. 3 shows the models obtained in the collection 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 20
                              
                           
                         (i.e., 20 discretized 10×10 submatrices). As observed, more detailed models are obtained for each local structural interaction. For instance, models m
                        13, m
                        16, m
                        17, and m
                        18 in the collection 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 20
                              
                           
                         reflect different positions for an anti-parallel beta-sheet, whereas only the model m
                        9 was obtained in the collection 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 10
                              
                           
                         to represent the same local structural interaction.

The next step in the remote-C3D method is to predict the contact map from the primary sequence of every protein in the SCOP 1.55 dataset. We used the NNcon1.0 program [24] to predict contact maps from the primary sequence. NNcon1.0 is a program that predicts contact maps using artificial neural networks. NNcon1.0 requires the amino acid sequence and returns the predicted contact map at two different thresholds of 8.0 and 12.0 Angstroms. NNcon1.0 uses two 2D-Recursive Neural Networks, one to predict a general residue-residue contact map and another to predict the special beta-sheet residue pairing map. NNcon1.0 focuses on the problem of predicting beta-sheet residue contacts, which has been demonstrated to be a difficult task. The output of the NNcon1.0 program includes a predicted probability for each pair of residues to be in contact. In this paper, we attempted two different predicted probabilities in NNcon1.0 (i.e., 0.1 and 0.2). Even though the predictions in the NNcon1.0 program are faster than in other programs, there is an overhead when the contact maps are predicted for every protein in the dataset. However, representing a protein as a predicted contact map is a key aspect when the dimensionality of the remote homology detection problem is being reduced. The predicted 3D information can be used in a natural way to detect proteins that are functionally related.

Contact maps have been used in some other problems in Bioinformatics such as protein structure classification [29,30]. For instance, Suvarna et al. [30] extract rules from contact maps to represent all-alpha structural classes in the SCOP database. However, predicted contact maps have never been used in remote homology detection. In this paper, we present a first attempt to use predicted contact maps as the protein representation in the remote homology detection problem. Even though the accuracy of the contact maps prediction programs is still low (i.e., 58% in the NNcon1.0 program), we want to discover if the information that is predicted is sufficient to determine the structure of the protein, and thus, allows distinguishing remote homologs.

We define a count vector of a protein as the set of values indicating the times a 3D structural model is identified in its predicted contact map. The size of the count vector depends on the number of considered models. For instance, when 20 structural models are considered (i.e., collection 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 20
                              
                           
                        ), the count vector will have a size of 20, indicating how many times each of the 20 models is identified in a protein. The count vector is obtained from the predicted contact map, which is calculated previously from the primary sequence. Thus, the count vector can be observed as a summary of the local structural interactions considering a predicted contact map. It is expected that the better the prediction of the contact map, the more accurate the count vector is.

Given a predicted contact map (PCM) of size n×n, overlapping submatrices of m×m are extracted. Each submatrix S
                        
                           j
                         in a PCM is assigned to the closest model in the collection 
                           
                              
                                 M
                              
                              
                                 m
                                 ×
                                 m
                              
                              
                                 k
                              
                           
                         by taking the normalized Hamming distance to evaluate the degree of dissimilarity between the submatrix S
                        
                           j
                         and every model in 
                           
                              
                                 M
                              
                              
                                 m
                                 ×
                                 m
                              
                              
                                 k
                              
                           
                        . The normalized Hamming distance between two discrete matrices is defined as the number of positions at which the values in the matrices are different.

After calculating the count vector for each protein in the dataset, a normalized count vector (NCV) is obtained. The normalization allows that every value in the count vector contributes equally. It becomes necessary because there are models that are present much more frequently than others. For instance, model m4 in the collection 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 10
                              
                           
                         is the most frequent model in any protein. The normalized count vector of a protein P is represented as the vector NCV
                           p
                        =[A
                        
                           p1,A
                        
                           p2,…,A
                        
                           pS
                        ], where A
                        
                           ps
                        , the normalized count value for the sth model in protein P, is defined in Eq. (1).
                           
                              (1)
                              
                                 
                                    
                                       A
                                    
                                    
                                       p
                                       s
                                    
                                 
                                 =
                                 
                                    
                                       f
                                       (
                                       p
                                       ,
                                       s
                                       )
                                    
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      p
                                                      ′
                                                   
                                                   =
                                                   1
                                                
                                                Q
                                             
                                             
                                                
                                                   f
                                                
                                                2
                                             
                                             
                                                (
                                                
                                                   p
                                                   ′
                                                   ,
                                                   s
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where f(p, s) is the sth value in the count vector of protein P and Q is the number of proteins in the dataset. The normalized count vector of a protein P is the vector NCV
                           
                              p
                           
                        , which contains the normalized counts of the overlapping predicted submatrices. 
                        Fig. 4 shows the predicted contact map using NNcon1.0 for domain d1a1d__. Overlapping 10×10 submatrices are extracted from the predicted matrix and assigned to the closest model using the normalized Hamming distance. For instance, for submatrix S
                        
                           j
                         that is shown zoomed out, the normalized Hamming distances to the 10 models in the collection 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 10
                              
                           
                         are calculated. As observed, S
                        
                           j
                         is closer to m
                        9, which is visually similar to S
                        
                           j
                        .

In remote homology detection a classifier is trained for each SCOP family. For each family F, the proteins within F are considered as the positive testing set. The proteins outside F that belong to the same superfamily are taken as the positive training set. Negative examples are proteins outside the fold of the family F. We used the same evaluation scheme proposed by Liao and Noble [31].

Once the normalized count vector is calculated for each protein in the dataset, we propose to use different classification techniques to distinguish remote homologs from non-homologs in a given SCOP family. Identifying remote homologs is performed by using the support vector machines (SVM) technique because it is not affected by the high dimensionality of the vector representation of proteins (usually 4200 values or more) compared with other classification techniques such as decision trees, neural networks and naïve Bayes classifiers.

Even though remote homology detection methods use the same classification technique (i.e., support vector machines), a different SVM is built for each family. For instance, if families f
                        1, f
                        2, and f
                        3 belong to the superfamily S and a classification model is being built for family f
                        1, proteins in families f
                        2 and f
                        3 are taken as the training dataset because they belong to the same superfamily. The SVM that is obtained is able to detect the remote homologs of family f
                        1. In addition, when a classification model is built for family f
                        2, proteins in families f
                        1 and f
                        3 are taken as the training dataset. Because the dataset for family f
                        2 is actually different from the one used for family f
                        1 another SVM has to be obtained.

In this paper, we propose to reduce the dimensionality of the vector representation to 10, 20, 30, 40, and 50 values; every value represents a specific set of local structural interactions. Reducing dimensionality to a maximum of 50 values allows us to attempt classification techniques that have not been used in remote homology detection. There are several classification techniques that might be applied when a classification model is obtained for each SCOP family, including different strategies such as Bayes, Functions, and Decision trees methods. In this paper, remote homology detection is performed by selecting a classifier for each SCOP family using 5-fold cross validation on the training dataset. However, we decided to use only seven classification techniques. We chose three Bayes strategies (i.e., BayesNet, NaiveBayes, and NaiveBayesMultinomial), one Function strategy (i.e., Multilayer perceptron), two Miscellaneous algorithms (i.e., Hyper pipes and VFI (voting feature intervals)), and one Decision tree method (i.e., LMT (logistic model trees)). All these classification techniques are implemented using WEKA, an open-source platform for data mining [32].Using only seven classification techniques allows us accomplishing the classification process in a reasonable time. We considered at least one method of some well-known classification strategies (i.e., Bayes, Functions, and Decision trees methods). However, any other classification techniques might be used as well.

Because training and testing datasets are different from one family to other, we propose to explore seven classification techniques, being aware that each family might reach the highest accuracy for a specific classification method. The exploration process of the classification technique for each family is performed by using five-fold cross validation on the training set. The ROC score is taken as a measure to choose the classifier for each family (i.e., the classifier with the highest ROC score is selected as the classifier of the family). In addition, the parameters for each classification technique in the WEKA data mining software are kept as the defaults. The testing process for each family is carried out by using the classification technique that is selected as the classifier of the family according to the ROC score during the five-fold cross validation on the training set. Our methodology involves obtaining a classifier that is more suitable for each family. The classifier is obtained considering only the training dataset, and thus, the testing dataset is kept unseen during this process and is only used to obtain the accuracy of the remote-C3D method.

@&#RESULTS AND DISCUSSION@&#

In this section, the results of the experiments are shown. We focus the evaluation of the remote-C3D method on using different sizes of models (i.e., 4×4, 6×6, 8×8, 10×10, 12×12), different number of models (i.e., 10, 20, 30, 40, 50), two different predicted probabilities in the NNcon1.0 program (i.e., 0.1, 0.2), and two different SCOP versions (i.e., the SCOP 1.53 and SCOP 1.55 datasets). In addition, the stability of the clustering process is tested. The stability of the clustering process is related to discover if the models obtained depend on the proteins that are selected to start the clustering process.

There are several measures to evaluate the accuracy of a classifier. Remote homology detection methods are usually evaluated using the ROC score. The ROC score is the normalized area under the curve, which exhibits the relationship between true positives and false positives for different classification thresholds. Current discriminative methods based on sequence composition information exhibit a ROC score ranging from 0.86 to 0.92 with the SCOP 1.53 dataset, while profile-based methods reach a ROC score of 0.950. In this paper, we used three measures to evaluate the accuracy of the classifiers (i.e., the ROC score, the Matthews correlation coefficient (MCC), and the area under de precision-recall curve (auPRC)). The Matthews correlation coefficient ranges from −1 to +1, where +1 indicates a perfect classification and −1 a totally wrong classification. The MCC is defined asMCC=((TP×TN)−(FP·FN))/((TP+FP)×(TP+FN)×(TN+FP)×(TN+FN))1/2, where TP is the number of true positives, TN is the number of true negatives, FP is the number of false positives, and FN is the number of false negatives. The auPRC shows the relationship between the precision and recall values for different classification thresholds and is particularly useful for imbalanced datasets.

The ASTRAL SCOP database 1.53 has been used as a standard for remote homology detection. A total of 4352 sequences are selected by removing similar sequences using an E-value threshold of 10−25. The data are further filtered for classification purposes keeping only SCOP families having at least five positive sequences for testing and 10 positives sequences for training, which gives a total of 54 families. Most of the remote homology detection methods use the SCOP 1.53 dataset, so it is especially easy to perform a comparison analysis. However, PDB-style files with coordinates for each protein are not available for the SCOP 1.53 dataset. In this paper, the PDB files are necessary to calculate the contact maps when the 3D structural models are found, and thus, a SCOP database based on stable SCOP identifiers with coordinates for each protein is mandatory. We decided to use both the SCOP 1.53 and SCOP 1.55 datasets. The SCOP 1.55 dataset is a more recent dataset than the SCOP 1.53 and the PDB files are available. The SCOP 1.55 dataset is first used to obtain the models and calculate the accuracy of the remote-C3D method. Then, the same 3D models are used to detect remote homologs in the SCOP 1.53 dataset and to compare the remote-C3D with some discriminative methods. The SCOP 1.55 dataset was first filtered by selecting sequences with less than 40% of identity to each other. In addition, for classification purposes, only SCOP families having at least five positive sequences for testing and 10 positives sequences for training were kept, which gave a total of 3527 domains in 51 families. 
                        Table 1 shows the SCOP 1.55 database after the filtering process.


                        
                        Fig. 5 shows the mean ROC score over the 54 families found in the SCOP 1.53 dataset when different sizes of submatrices are considered (i.e., from 4×4 up to 12×12), different number of models (i.e., from 10 to 50) are used, and a probability of 0.1 is set in the NNcon1.0 program. 
                        Fig. 6 shows the accuracy values when a probability of 0.2 is set in the NNcon1.0 program. The classifiers that were selected for the families in the two SCOP versions and the different sizes of submatrices, number of models, and probabilities in NNcon1.0 program, considered during the experiments, are available in Supplementary file S1.

The ROC score ranges from 0.914 to 0.949 when a probability of 0.1 is used. In addition, the ROC score ranges from 0.912 to 0.945 when a probability of 0.2 is considered. The ROC score values seem more compact when 0.2 is used (i.e., the values are closer to each other between submatrices sizes and number of models). In most of the cases, 20 models is a local optimum. There is a decrease in the accuracy when 30 models are used and another local optimum when 40 models are used. Most of sizes for submatrices (4×4, 8×8, 10×10) reach their highest ROC score when 50 models are used. The higher the number of models, the more accurate the method becomes. When 0.1 is used, submatrix sizes such as 6×6 and 8×8 are better than the others. A complete list with the ROC score, the Matthews correlation coefficient, and the area under de precision-recall curve for all the experiments described in this paper is available in Supplementary file S2. The Matthews correlation coefficient on the SCOP 1.53 dataset ranges from 0.071 to 0.4 and reaches a maximum of 0.4 when 10×10 submatrices and 20 models are used. The auPRC on the SCOP 1.53 dataset ranges from 0.347 to 0.623 and reaches a maximum of 0.623 when 10×10 submatrices and 20 models are used.

The CLARA algorithm, which is used during the clustering process to obtain the models in this research, uses a sampling strategy to handle large datasets. In the first stage of the CLARA algorithm, a sample is selected from the dataset and then the PAM algorithm (Partitioning around medoids) is applied. To reduce the bias included by sampling, CLARA repeats the sampling process and selects the best set of medoids between the medoids found in each repetition. A cost function, which is based on the dissimilarity between objects in the whole dataset and the medoids, is used to select the best set of medoids.

During the clustering process we used different number of models. We found that most of the models in a collection of M models are included in a collection of more models. However, there are some cases in which it does not necessarily happen. The set of medoids that are taken as models depends on the CLARA algorithm. Because the CLARA algorithm is based on a sampling strategy, a different set of representative medoids can be obtained when varying the number of models. We obtained that most of the models are similar from one collection to another. In addition, similar values for accuracy are obtained.

Increasing the number of models tends to improve the accuracy of the remote homology detection as well. It is an expected result because considering more models allows having more specific interactions in the contact maps, and thus, when the predicted contact map is fully represented through the models a better discrimination is expected.


                        
                        Fig. 7 shows the mean ROC score over the 51 families found in the SCOP 1.55 dataset when a probability of 0.1 is taken in the NNcon1.0 program. 
                        Fig. 8 shows the accuracy values when a probability of 0.2 is set in the NNcon1.0 program.

The ROC score ranges from 0.902 to 0.929 when a probability of 0.1 is used. In addition, the ROC score ranges from 0.919 to 0.941 when a probability of 0.2 is considered. The accuracy of the contact map prediction affects the accuracy of the remote homology detection. There are proteins whose predicted contact maps are more difficult to achieve, especially when the 0.1 probability is used. The 0.2 probability allows detecting remote homologs in a more accurate way.

When a 0.1 probability is used we obtained that the larger the size of the submatrix, the more accurate the method is. In most of the cases, 20 models is a local optimum. There is a decrease in the accuracy when 30 models are used (except for 6×6 and 10×10) and another local optimum can be found when 40 models are used. Most of sizes for submatrices (4×4, 8×8, 10×10) reach their highest ROC score when 50 models are used. The higher the number of models, the more accurate the method becomes.

In the SCOP 1.53 dataset, the 0.2 probability in the NNcon1.0 program allows having more compact accuracy values (i.e., the ROC scores are closer to each other between submatrices sizes and number of models). In the SCOP 1.55 dataset, the difference in accuracy between 0.1 and 0.2 is more significant. The 0.1 probability, which includes more false positives contacts than 0.2, might affect the accuracy of the remote homology detection. Because our method is based on the idea of assigning each submatrix to the closest model, the assignation might be wrong if there are false positives in the submatrix. We found that a probability of 0.2 is more accurate, and thus, the remote homology detection method distinguishes better remote from non-remote homologs.

Two datasets were used to test the accuracy of the remote-C3D method and we obtained that remote homologs can be detected in both cases. In the SCOP 1.53 dataset there are 4352 proteins and 54 families. The SCOP 1.55 dataset has 3527 proteins and 51 families. The same models were used in both datasets and the same strategy of predicting contacts maps from primary sequence, calculating count vectors to represent each protein, and obtaining a classifier for each family were applied. The models that were found in the SCOP 1.55 dataset were also suitable for the SCOP 1.53 dataset because each model captures a typical 3D interaction in proteins that does not depend on the SCOP version.

We compared the remote-C3D method with other discriminative methods, two profile-based methods (i.e., SVM-DT [21], SVM-PDT-Profile [22]) and three composition-based methods (i.e., SMV-LA [33], SVM-RQA, SVM-PDT). Even though remote-C3D uses a completely different strategy from the current methods for remote homology detection, a comparison was performed by using the SCOP 1.53 dataset, which is the same dataset used for the current methods. Profile-based methods are discriminative strategies that use an additional alignment of each protein against a non-redundant database to obtain a profile. The evolutionary information extracted from profiles allows detecting remote homologs in a more accurate way than composition-based methods. The disadvantage of using profile-based methods is that the high computational cost of profile calculation for large datasets makes these methods unfeasible [22]. On the other hand, composition-based methods are discriminative strategies that only use the sequence composition of proteins to construct the feature vectors.

The remote-C3D method is a discriminative strategy because it is based on obtaining a classification model for each family using both positive and negative samples. However, remote-C3D is not a composition-based method because it uses predicted contact maps from primary sequence to represent each protein instead of just the amino acid composition. In addition, the remote-C3D is not a profile-based method because it does not use evolutionary information. Another major difference between remote-C3D and the current methods is the fact of using different classifiers instead of just support vector machines. SVM technique is not affected by the high dimensionality of the vector representation of proteins. In fact, support vector machines tend to generalize well even when a high dimensional dataset is considered. Most of the classification techniques (i.e., multilayer perceptron, decision trees, and Bayes classifiers) are affected when they are used on high dimensional data. The remote-C3D is the first attempt to apply classification techniques different from support vector machines, and thus, a reduction in dimensionality was needed.


                        
                        Table 2 shows the mean ROC score over the 54 families in the SCOP 1.53 dataset for some of the current discriminative methods. In all cases, the values that are shown correspond to the average of the ROC scores obtained over the 54 families. We chose the configuration of remote-C3D when 40 models and 8×8 submatrices are used because that set of parameters obtained a high accuracy independently from the probability chosen in NNcon1.0. We found that the remote-C3D method achieves a higher accuracy than the composition-based methods and a comparable performance with profile-based methods. Table 2 includes the mean ROC score of the SVM-C3D method, which is a version of remote-C3D that uses only support vector machines to build a model for each family in the dataset. This experiment was carried out to discover the impact of using only one classification technique in the remote-C3D method. The accuracy decreases drastically when only support vector machines are used. We found that the major improvement in the remote-C3D method is achieved by using different classification algorithms instead of just one technique. As can be observed in Supplementary material S1, different classifiers are selected for different families, which means that a family can be modeled in a more accurate way when different classification techniques are used.

The 3D models used in this research were obtained from a training dataset of 40 proteins selected from the SCOP 1.55 dataset. We took two proteins for each of the 20 SCOP superfamilies in the dataset. A clustering algorithm was fed with the submatrices extracted from the 40 proteins. The stability of the clustering process indicates whether the models obtained depend on the proteins selected to start the clustering process. We repeated the clustering process using a different set of proteins to evaluate the stability of the collection 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 10
                              
                           
                        . We kept the condition of using two proteins for each of the 20 superfamilies in the dataset. 
                        Fig. 9 shows the 10 models obtained; we call those models the collection 
                           M
                           
                              ׳
                              
                                 10
                                 ×
                                 10
                              
                              10
                           
                        . The collection 
                           M
                           
                              ׳
                              
                                 10
                                 ×
                                 10
                              
                              10
                           
                         achieves a ROC score and a standard deviation of 0.919±0.084 on the SCOP 1.53 dataset. The accuracy values with the collection 
                           
                              
                                 M
                              
                              
                                 10
                                 ×
                                 10
                              
                              
                                 10
                              
                           
                           
                        were 0.920±0.098.

The same experiment was carried out 10 times by selecting two different proteins for each superfamily. The mean ROC score over the 10 experiments is 0.921, which is similar to the accuracy of 0.920±0.098 that we had obtained in the first time. It indicates that the models obtained during the clustering process are actually common interactions found in proteins. A similar result was obtained by Choi et al. [27], whose hypothesis was that even though there are millions of submatrices in the distance matrices of all proteins, most of the submatrices are common and a finite number of models are sufficient to represent the most typical interactions.

@&#CONCLUSIONS@&#

In this paper, we propose a new method that reduces the high dimensionality of the vector representation in remote homology detection by using models that are defined at the 3D level. The remote-C3D method differs from the current state of the art strategies because our proposing method uses models that are highly 3D correlated, which allows the reduction of dimensionality while raising the accuracy. The ROC score of the remote-C3D method using 8×8 submatrices and 40 models reaches 0.948 with the SCOP 1.53 dataset and 0.936 with the SCOP 1.55 dataset, which is a higher accuracy than the composition-based methods and a comparable performance with profile-based methods.

We found that even though there is an error included in the prediction of the contact maps, the information contained in the contact map is suitable for detecting remote homology. When a predicted contact map is used to represent a protein instead of translating the amino acids to physicochemical properties, we obtain more information about the 3D structure of the protein, and thus, the remote homology detection can be performed in a more natural and accurate way. In addition, representing a protein by a predicted contact map and calculating the count vector as the number of times that every 3D model is presented, allows reducing the dimensionality of the protein representation. Reducing the dimensionality allowed us to use seven different classification techniques that had never been applied to the problem of remote homology detection, which has always been addressed by using support vector machines.

We found that 8×8 submatrices are a suitable size for different SCOP versions and different number of models. The 8×8 submatrices in the SCOP 1.53 with a predicted probability in NNcon1.0 of 0.1 have the highest ROC score for most number of models (i.e., 10, 20, 50). When a 0.2 predicted probability is used, the 8×8 submatrices are still among the most accurate options. A similar behaviour is obtained in the SCOP 1.55. The 8×8 submatrices are able to capture typical 3D interactions and they are not affected by the number of models. In addition, 8×8 submatrices tend to have the same behaviour in different SCOP versions.

Different strategies to predict contact maps might be tested on the remote-C3D method. It is expected that when the prediction of the contact maps becomes more accurate, the assignation to the models that we defined using actual 3D information can also improve, and thus, the overall accuracy of the remote homology detection problem might reach higher values.

@&#SUMMARY@&#

Remote homology detection addresses the problem of identifying sequences with less than 25% sequence identity that are functionally and structurally related. It can be a difficult task because proteins in the search space share low sequence similarities with the target domain, even though there is a strong relationship at the 3D structural and/or functional levels. Several solutions to the remote homology detection problem have been proposed, and they can be categorized into three groups: pairwise sequence comparison, generative strategies, and discriminative algorithms.

Current discriminative methods based on sequence composition information exhibit ROC scores (receiver operating characteristic) that range from 0.86 to 0.92 on the SCOP 1.53 benchmark. Identifying remote homologs is performed by using the support vector machines (SVM) technique because it is not affected by the high dimensionality of the vector representation of proteins (usually 4200 values or more) compared with other classification techniques such as decision trees, neural networks and naïve Bayes classifiers.

In this paper, we propose a new method called remote-C3D. It reduces the high dimensionality of the vector representation in remote homology detection by using models that are defined at the 3D level and thus are highly structurally and functionally related. We propose to reduce the dimensionality of the vector representation to 10, 20, 30, 40, and 50 values; every value represents a specific set of local structural interactions. Reducing dimensionality to a maximum of 50 values allows us to attempt classification techniques that have not been used in remote homology detection. The remote-C3D method differs from the current state of the art methods based on sequence composition because the models used are highly 3D correlated, which allows the reduction of dimensionality while raising the accuracy. The ROC score of the remote-C3D method using 8×8 submatrices and 40 models reaches 0.948 with the SCOP 1.53 dataset and 0.936 with the SCOP 1.55 dataset, which surpasses the 0.92 of the current methods.

Supplementary data associated with this article can be found in the online version at doi:10.1016/j.compbiomed.2015.01.020.


                     
                        
                           
                              Supplementary material
                           
                           
                        
                     
                  


                     
                        
                           
                              Supplementary material
                           
                           
                        
                     
                  

@&#REFERENCES@&#

