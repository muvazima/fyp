@&#MAIN-TITLE@&#Multi-objective models and techniques for analysing the absolute capacity of railway networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Multi-objective capacity models were formulated for railways.


                        
                        
                           
                           The new models regulate the competition between trains of different type.


                        
                        
                           
                           This approach performs a sensitivity analysis and is very applicable to real life.


                        
                        
                           
                           An efficient adaptive e-constraint method was implemented for the Pareto analysis.


                        
                        
                           
                           A hybrid Simulated Annealing algorithm was used to identify the best solution.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Railways

Absolute capacity

Multi-objective models

Separable programming

@&#ABSTRACT@&#


               
               
                  Railway capacity determination and expansion are very important topics. In prior research, the competition between different entities such as train services and train types, on different network corridors however have been ignored, poorly modelled, or else assumed to be static. In response, a comprehensive set of multi-objective models have been formulated in this article to perform a trade-off analysis. These models determine the total absolute capacity of railway networks as the most equitable solution according to a clearly defined set of competing objectives. The models also perform a sensitivity analysis of capacity with respect to those competing objectives. The models have been extensively tested on a case study and their significant worth is shown. The models were solved using a variety of techniques however an adaptive E constraint method was shown to be most superior. In order to identify only the best solution, a Simulated Annealing meta-heuristic was implemented and tested. However a linearization technique based upon separable programming was also developed and shown to be superior in terms of solution quality but far less in terms of computational time.
               
            

@&#INTRODUCTION@&#

Railway capacity determination and capacity expansion are increasingly important topics as railways become more developed, sophisticated and have greater demands placed upon them in the future. This article considers those tasks because there are significant limitations and weaknesses in prior approaches. Also there are many opportunities for the development of more advanced, sophisticated and all-encompassing techniques. Railway capacity determination and expansion activities have been addressed in a variety of different ways in past research. Some approaches have been purely analytical, however the majority have been empirical or simulation based. Recent examples that are noteworthy are: Dicembre and Ricci (2011), Singh et al. (2012), Mussone and Wolfler (2013), Yaghini (2014), Shih, Dick, Sogin and Barkan (2014), Froidh, Sipila and Warg (2014), Di Giandomenico, Fantechi, Gnesi and Itria (2013), Goverde, Corman and D'ariano (2013).

This article however specifically builds upon the research in Burdett and Kozan (2006), Kozan and Burdett (2005), and Burdett (2015) which predominantly considers the analysis of absolute capacity. In Burdett and Kozan (2006) the concept of absolute capacity was first defined and the value of analysing it was discussed in detail. In essence absolute capacity is a measure of the total possible throughput of trains across all the corridors of a railway network. It is an ideal level that only occurs when critical sections of rail are continuously occupied and train "interaction effects" and "interference delays" that are resolved by proper train scheduling (Burdett & Kozan, 2009a, 2009b), are ignored. Hence it is a form of structural analysis. Although absolute capacity is an overestimation of real "operational" capacity, it is sufficiently accurate for high level planning purposes, and thus provides a robust metric for benchmarking. This concept is also used in this article and is denoted forthwith by 
                        A
                      and a number of other variations involving different sub scripting alternatives. It should be noted that this article does not consider how to optimise the performance of the network. To optimise the networks performance, maximising the number of trains can be detrimental as interaction effects and delays can be increased which reduce capacity utilisation.

The highlight of Burdett and Kozan (2006) was an optimisation approach that identifies the absolute capacity of a railway network, subject to a number of imposed technical constraints, and for a wide range of defined “real life” operational conditions such as the proportional mix of trains and their direction of travel, the length of trains, dwell times, and the presence of crossing loops and intermediate signals. In Kozan and Burdett (2005), rail access charging methodologies were also proposed. In Burdett (2015) supplementary analytical techniques for measuring and planning capacity expansion activities were developed. The new features in that article were track duplications and track sub divisions. Those developments identify how railway networks can be best expanded, either immediately or over time.

The models developed in Burdett and Kozan (2006) and Burdett (2015) are essential techniques for absolute capacity determination however they assume a specific mix of trains is defined. Hence as only a single value of capacity is identified, those capacity models can only be used to identify how the infrastructure can be used and whether it can support an intended future traffic load. In practice, railway networks must be analysed for different mixes of trains. The number of different mixes that could be analysed is vast. To understand what occurs more generally, a sensitivity analysis or some other type of approach is required. In response a multi-objective approach is proposed in this article. The significance of a multi-objective approach is also that a variety of competing capacity metrics can be incorporated. In contrast the original model considered only a single objective which was the total number of trains, with for example no emphasis or meaning given to trains or to train services of different type. As few if any railways operate with a single train or service type, and those trains are not of equivalent worth, the previous models were somewhat inadequate. There are many ways to regulate competition and a multi-objective approach is investigated in this article as the best way to perform a sensitivity analysis of railways.

On the topic of multi-objective optimisation, several articles have considered railway applications. Ghoseiri, Szidarovszky and Ashharpour (2004) developed a multi-criteria optimisation approach to schedule trains. The competing objectives were fuel consumption and total passenger time. The Pareto frontier was determined using the e-constraint method and then a “distance” based method was utilised to solve the multi-objective decision problem. Twenty one modest sized test cases were solved. Zou and Zhong (2005) developed a branch and bound approach to schedule trains on double tracks. As the objective was bi-criteria, dominance rules were developed and Pareto solutions were generated. Lu et al. (2013) considered the development of a framework for evaluating the performance of railway networks. They proposed a “quality of service” framework that includes attributes like punctuality, resilience, energy/resource usage, journey time, etc. The proposed framework was considered because railway network performance is so multi-faceted. This affects both strategic and tactical planning. This article gives evidence (and motivation) of the need for more multi-objective planning approaches.

The articles by Kim and De Weck (2005, 2006) are generic and do not consider topics in railways. Those papers are however noteworthy for the development of multi-objective optimisation techniques. In their 2005 paper a method was developed for determining the Pareto front for bi-objective optimisation problems. Their approach is an adaptive version of the WSM, and is labelled AWS. It approximates a Pareto front by gradually increasing the number of solutions on the front. It concentrates computational effort where it is needed. In the 2006 paper multi-objectives were considered. A mesh of Pareto front patches was identified and refined.

Access to railway networks is competitive in practice. As previously stated, railways are rarely constructed for specific services, and typically must sustain and support the movement of a mix of both passenger and freight services. There are a variety of different competitions that may be characterised and how this competition is regulated, greatly affects the outcome of any analysis of capacity. The following competition types are introduced: service_versus_service, train_versus_train, corridor_versus_corridor. These types all refer to competitions between trains. In summary trains of different service types (like passenger and freight) compete, but individual trains also compete against other trains. Similarly trains with different routes (i.e. that traverse different corridors) compete against those with other routes.

In Burdett and Kozan (2006) competition was regulated by the introduction of three parameters, namely the proportional mix of train types (i.e. the proportional distribution), the directional mix (i.e. the directional distribution), and the proportional flow of trains on different corridors (i.e. the percentage flow). These had to be specified a-priori, and were assumed to be static. These three parameters describe most of the different types of competition.

In this article several different multi-objective models have been developed to address the different forms of competition on the network. A base (i.e. core) capacity model however is first reviewed as the new models are based upon it.

A review of the base model is presented here. In that model the set of train types is denoted by I, the set of corridors by C, and the set of section by S. The number of tracks on each section is denoted by τs
                         and the set of sections in each corridor is denoted by Ω
                        
                           c
                        . The purpose of the model is to determine the maximum number of trains that can traverse the network over time T. Of the total number of trains selected by the model, the number of trains of each type is also identified. For example 
                           
                              
                                 x
                                 →
                              
                              i
                              c
                           
                         and 
                           
                              
                                 x
                                 ←
                              
                              i
                              c
                           
                         are the number of trains of type i that traverse corridor c in each direction respectively. Similarly, 
                           
                              
                                 y
                                 →
                              
                              i
                              s
                           
                         and 
                           
                              
                                 y
                                 ←
                              
                              i
                              s
                           
                         are the number of trains of type i that traverse each section s. The sectional occupation times in each direction are denoted by 
                           
                              
                                 T
                                 →
                              
                              i
                              s
                           
                         and 
                           
                              
                                 T
                                 ←
                              
                              i
                              s
                           
                         and these are assumed to be provided. These values primarily include the sectional running time (
                           
                              SRT
                              i
                              s
                           
                        ), but may also include other time spent on sections, such as loading or unloading passengers and freight, breakdowns, delays, acceleration, deceleration, etc. The SRT may be measured or theoretical values may be used. For example the free flow sectional running time is as follows: 
                           
                              
                                 SRT
                                 i
                                 s
                              
                              =
                              60
                              ×
                              
                                 L
                                 s
                              
                              /
                              
                                 V
                                 i
                              
                           
                         where Ls
                         is the section length, Vi
                         is the train speed, and 60 is multiplier needed to convert to minutes.

The base model has a set of standard constraints that regulate the mix of trains and the flow of trains across every section of the network over time. The mix regulation constraints are optional, and can be added or removed as desired. They are as follows:

                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      →
                                                   
                                                   i
                                                   c
                                                
                                                +
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ←
                                                      
                                                   
                                                   i
                                                   c
                                                
                                                )
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                σ
                                                c
                                             
                                             
                                                ∑
                                                
                                                   
                                                      c
                                                      ′
                                                   
                                                   ∈
                                                   C
                                                
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      →
                                                   
                                                   i
                                                   
                                                      c
                                                      ′
                                                   
                                                
                                                +
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ←
                                                      
                                                   
                                                   i
                                                   
                                                      c
                                                      ′
                                                   
                                                
                                                )
                                             
                                             
                                             ∀
                                             c
                                             ∈
                                             C
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Mix
                                                   
                                                   across
                                                   
                                                   corridors
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   →
                                                
                                                i
                                                c
                                             
                                             +
                                             
                                                
                                                   
                                                      x
                                                   
                                                   ←
                                                
                                                i
                                                c
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                η
                                                
                                                   c
                                                   ,
                                                   i
                                                
                                             
                                             
                                                ∑
                                                
                                                   
                                                      i
                                                      ′
                                                   
                                                   ∈
                                                   I
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         →
                                                      
                                                      
                                                         
                                                            i
                                                            ′
                                                         
                                                      
                                                      c
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         ←
                                                      
                                                      
                                                         
                                                            i
                                                            ′
                                                         
                                                      
                                                      c
                                                   
                                                
                                                )
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             I
                                             ,
                                             c
                                             ∈
                                             C
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             [
                                             
                                                Proportional
                                                
                                                mix
                                                
                                                using
                                             
                                             
                                             
                                                η
                                                
                                                   c
                                                   ,
                                                   i
                                                
                                             
                                             ]
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          →
                                       
                                       i
                                       c
                                    
                                    =
                                    
                                       μ
                                       
                                          c
                                          ,
                                          i
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                x
                                             
                                             →
                                          
                                          i
                                          c
                                       
                                       +
                                       
                                          
                                             
                                                x
                                             
                                             ←
                                          
                                          i
                                          c
                                       
                                       )
                                    
                                    
                                    ∀
                                    i
                                    ∈
                                    I
                                    ,
                                    c
                                    ∈
                                    C
                                    
                                    
                                    
                                       [
                                       
                                          Directional
                                          
                                          mix
                                       
                                       ]
                                    
                                 
                              
                           
                        
                     

The proportion of trains of each type in the forward direction is denoted by μ
                        
                           c, i
                         or by 
                           
                              
                                 μ
                                 →
                              
                              
                                 c
                                 ,
                                 i
                              
                           
                        . Hence, 
                           
                              
                                 
                                    μ
                                    →
                                 
                                 
                                    c
                                    ,
                                    i
                                 
                              
                              +
                              
                                 
                                    μ
                                    ←
                                 
                                 
                                    c
                                    ,
                                    i
                                 
                              
                              =
                              1
                           
                        . The flow of trains on each corridor proportional to that across all corridors is denoted as the percentage flow and is denoted by σc
                        . The proportion of trains of each type on each corridor is denoted by η
                        
                           c, i
                        . Its definition regulates the competition between train types on different corridors. In other words on each corridor, the mix of trains is selected separately such that 
                           
                              
                                 ∑
                                 
                                    i
                                    ∈
                                    I
                                 
                              
                              
                                 η
                                 
                                    c
                                    ,
                                    i
                                 
                              
                              =
                              1
                              
                              ∀
                              c
                              ∈
                              C
                           
                        .

An alternative is proposed here whereby η
                        
                           c, i
                         could be redefined as the proportion of trains on each corridor of each type. In other words, for each train type, the mix is specified differently between corridors and such that 
                           
                              
                                 ∑
                                 
                                    c
                                    ∈
                                    C
                                 
                              
                              
                                 η
                                 
                                    c
                                    ,
                                    i
                                 
                              
                              =
                              1
                              
                              ∀
                              i
                              ∈
                              I
                           
                        . To avoid confusion a separate parameter is defined for this situation, namely κ
                        
                           c, i
                        . Hence 
                           
                              
                                 ∑
                                 
                                    c
                                    ∈
                                    C
                                 
                              
                              
                                 κ
                                 
                                    c
                                    ,
                                    i
                                 
                              
                              =
                              1
                           
                        . The following constraint must be added:

                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   →
                                                
                                                i
                                                c
                                             
                                             +
                                             
                                                
                                                   
                                                      x
                                                   
                                                   ←
                                                
                                                i
                                                c
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                κ
                                                
                                                   c
                                                   ,
                                                   i
                                                
                                             
                                             
                                                ∑
                                                
                                                   
                                                      c
                                                      ′
                                                   
                                                   ∈
                                                   C
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         →
                                                      
                                                      i
                                                      
                                                         c
                                                         ′
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         ←
                                                      
                                                      i
                                                      
                                                         c
                                                         ′
                                                      
                                                   
                                                
                                                )
                                             
                                             ∀
                                             i
                                             ∈
                                             I
                                             ,
                                             c
                                             ∈
                                             C
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             [
                                             
                                                Proportional
                                                
                                                mix
                                                
                                                using
                                             
                                             
                                             
                                                κ
                                                
                                                   c
                                                   ,
                                                   i
                                                
                                             
                                             ]
                                          
                                       
                                    
                                 
                              
                           
                        
                     

It is envisaged that in many scenarios κ
                        
                           c, i
                         would be the same for each train type i. Under those circumstances the i subscript could be removed and κc
                         is equivalent to σc
                        .

In the following sections different models are presented to analyse different forms of competition.

In this section the formulated model considers the competition between different train service types, namely passenger and freight. In other words, the model attempts to maximise the flow of both types simultaneously. The number of trains of each type is defined as N
                        P and N
                        F. Hence the criterion for optimisation and decision making is bi-objective. In the event that three or more service types exist, the model would become multi-objective. Let the set of passenger and freight trains be I
                        P and I
                        F respectively. Hence the union of the sets is the set of all trains, i.e. I
                        P∪I
                        F = I. The model is as follows:

                           
                              
                                 
                                    
                                       Maximise
                                       :
                                    
                                    {
                                    
                                       
                                          A
                                          P
                                       
                                       ,
                                       
                                          A
                                          F
                                       
                                    
                                    }
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       Or
                                       
                                       Maximise
                                       :
                                    
                                    
                                    Z
                                    =
                                    
                                       λ
                                       1
                                    
                                    
                                       
                                          A
                                          ˜
                                       
                                       P
                                    
                                    +
                                    
                                       λ
                                       2
                                    
                                    
                                       
                                          A
                                          ˜
                                       
                                       F
                                    
                                    
                                    
                                       [
                                       
                                          Comparable
                                          
                                          single
                                          
                                          objective
                                       
                                       ]
                                    
                                 
                              
                           
                        
                     


                        Subject to:
                     

Optional constraint: Eqs. (1), (3) and (4)

                           
                              (6)
                              
                                 
                                    
                                       A
                                       P
                                    
                                    =
                                    
                                       ∑
                                       
                                          c
                                          ∈
                                          C
                                       
                                    
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             I
                                             P
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                x
                                             
                                             →
                                          
                                          i
                                          c
                                       
                                       +
                                       
                                          
                                             
                                                x
                                             
                                             ←
                                          
                                          i
                                          c
                                       
                                       )
                                    
                                    
                                    
                                       [
                                       
                                          
                                             Capacity
                                             
                                             w
                                          
                                          
                                             .
                                             r
                                          
                                          
                                             .
                                             t
                                             
                                             passenger
                                             
                                             services
                                          
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       A
                                       F
                                    
                                    =
                                    
                                       ∑
                                       
                                          c
                                          ∈
                                          C
                                       
                                    
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             I
                                             F
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                M
                                             
                                             →
                                          
                                          i
                                          c
                                       
                                       
                                          
                                             
                                                x
                                             
                                             →
                                          
                                          i
                                          c
                                       
                                       +
                                       
                                          
                                             
                                                M
                                             
                                             ←
                                          
                                          i
                                          c
                                       
                                       
                                          
                                             
                                                x
                                             
                                             ←
                                          
                                          i
                                          c
                                       
                                       )
                                    
                                    
                                    
                                    
                                    
                                    
                                       [
                                       
                                          
                                             Capacity
                                             
                                             w
                                          
                                          
                                             .
                                             r
                                          
                                          
                                             .
                                             t
                                             
                                             freight
                                             
                                             services
                                          
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                y
                                             
                                             →
                                          
                                          i
                                          s
                                       
                                       
                                          
                                             
                                                T
                                             
                                             →
                                          
                                          i
                                          s
                                       
                                       +
                                       
                                          
                                             
                                                y
                                             
                                             ←
                                          
                                          i
                                          s
                                       
                                       
                                          
                                             
                                                T
                                             
                                             ←
                                          
                                          i
                                          s
                                       
                                       )
                                    
                                    ≤
                                    T
                                    ×
                                    
                                       τ
                                       s
                                    
                                    
                                    ∀
                                    s
                                    ∈
                                    S
                                    
                                    
                                    
                                       [
                                       
                                          Section
                                          
                                          saturation
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             y
                                          
                                          →
                                       
                                       i
                                       s
                                    
                                    =
                                    
                                       ∑
                                       
                                          
                                             c
                                             ∈
                                             C
                                             |
                                             s
                                             ∈
                                          
                                          
                                             Ω
                                             c
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                x
                                             
                                             →
                                          
                                          i
                                          c
                                       
                                       )
                                    
                                    ;
                                    
                                    
                                       
                                          
                                             y
                                          
                                          ←
                                       
                                       i
                                       s
                                    
                                    =
                                    
                                       ∑
                                       
                                          
                                             c
                                             ∈
                                             C
                                             |
                                             s
                                             ∈
                                          
                                          
                                             Ω
                                             c
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                x
                                             
                                             ←
                                          
                                          i
                                          c
                                       
                                       )
                                    
                                    
                                    
                                    
                                       [
                                       
                                          Section
                                          
                                          usage
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   →
                                                
                                                i
                                                c
                                             
                                             +
                                             
                                                
                                                   
                                                      x
                                                   
                                                   ←
                                                
                                                i
                                                c
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                η
                                                
                                                   c
                                                   ,
                                                   i
                                                
                                                P
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   
                                                      I
                                                      p
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         →
                                                      
                                                      j
                                                      c
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         ←
                                                      
                                                      j
                                                      c
                                                   
                                                
                                                )
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             
                                                I
                                                P
                                             
                                             ,
                                             c
                                             ∈
                                             C
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Proportional
                                                   
                                                   
                                                      mix
                                                      −
                                                      PAS
                                                   
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   →
                                                
                                                i
                                                c
                                             
                                             +
                                             
                                                
                                                   
                                                      x
                                                   
                                                   ←
                                                
                                                i
                                                c
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                η
                                                
                                                   c
                                                   ,
                                                   i
                                                
                                                F
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   
                                                      I
                                                      f
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         →
                                                      
                                                      j
                                                      c
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         ←
                                                      
                                                      j
                                                      c
                                                   
                                                
                                                )
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             
                                                I
                                                F
                                             
                                             ,
                                             c
                                             ∈
                                             C
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                             
                                             
                                             
                                                [
                                                
                                                   Proportional
                                                   
                                                   
                                                      mix
                                                      −
                                                      FRE
                                                   
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          →
                                       
                                       i
                                       c
                                    
                                    ,
                                    
                                       
                                          
                                             x
                                          
                                          ←
                                       
                                       i
                                       c
                                    
                                    ≥
                                    0
                                    
                                    ∀
                                    i
                                    ∈
                                    I
                                    ,
                                    c
                                    ∈
                                    C
                                    
                                    
                                    
                                    
                                       [
                                       
                                          Positivity
                                          
                                          requirement
                                       
                                       ]
                                    
                                 
                              
                           
                        
                     

In this model constraint (2) is not required. The single proportional distribution is no longer needed to regulate competition between the different service types as that aspect is now controlled by the two competing objective functions. The proportional distribution however could be divided into two parts, namely 
                           
                              η
                              
                                 c
                                 ,
                                 i
                              
                              P
                           
                         and 
                           
                              η
                              
                                 c
                                 ,
                                 i
                              
                              F
                           
                        , one for each service type. These new parameters and their associated constraints regulate the competition between different trains of the same service type. The objectives may be normalised and combined as in (5) and solved for different values of λ
                        1 and λ
                        2. It should be noted that the tilde symbol has been used to specify normalised values. In addition it should also be noted that 
                           
                              A
                              =
                              
                                 A
                                 P
                              
                              +
                              
                                 A
                                 F
                              
                           
                         but 
                           A
                         is not being specifically maximised.

If the number of freight trains is more important, rather than the amount of goods and cargo transported, then 
                           
                              
                                 
                                    M
                                    →
                                 
                                 i
                                 c
                              
                              =
                              
                                 
                                    M
                                    ←
                                 
                                 i
                                 c
                              
                              =
                              1
                           
                         and 
                           
                              A
                              F
                           
                         is the number of freight trains, i.e. N
                        F. It is also possible that both the number of freight trains and the amount of cargo should be optimised simultaneously. This possibility would constitute another objective to be optimised.

In practice it is highly likely that traffic on different corridors will compete for access. Competition occurs because different corridors may overlap. For instance the same section(s) of rail may be used by each. It is assumed here that each corridor can potentially compete with every other corridor. The objective of the proposed optimisation model is hence multi-objective and there are C separate objectives. In other words, the model attempts to maximise the flow N
                        C on every corridor simultaneously. The model is as follows:

                           
                              (13)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             Maximize
                                             :
                                             
                                                {
                                                
                                                   
                                                      A
                                                      c
                                                   
                                                   
                                                      |
                                                      ∀
                                                      c
                                                      ∈
                                                      C
                                                   
                                                
                                                }
                                             
                                             
                                             where
                                             
                                             
                                                A
                                                c
                                             
                                             =
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         →
                                                      
                                                      i
                                                      c
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         ←
                                                      
                                                      i
                                                      c
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Multi
                                                   
                                                   objectives
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             Or
                                             
                                             Maximise
                                             :
                                             Z
                                             =
                                             
                                                ∑
                                                c
                                             
                                             
                                                λ
                                                c
                                             
                                             
                                                
                                                   A
                                                   ˜
                                                
                                                c
                                             
                                             
                                             where
                                             
                                             
                                                ∑
                                                c
                                             
                                             
                                                λ
                                                c
                                             
                                             =
                                             1
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Comparable
                                                   
                                                   single
                                                   
                                                   objective
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Subject to:
                     

Eqs.: (8), (9), and (12)

Optional constraint: Eqs. (2), (3) or (4)

It is necessary to remove the percentage flow constraint (i.e. constraint (1)) as multi-objectives are sufficient to regulate the competition occurring from traffic on different corridors. It is also necessary to keep the constraints involving the proportional distributions as they regulate flow within individual corridors and for different train types. The objectives may be normalised and combined as in (14) and solved for different values of λc
                        . It should be noted that in that situation 
                           
                              A
                              =
                              
                                 ∑
                                 c
                              
                              
                                 A
                                 c
                              
                              
                           
                         but whether 
                           A
                         is specifically being maximised is unclear.

On a single bi-directional line, each direction of travel is treated as a separate corridor because each has a different origin-destination pairing. Hence this approach (i.e. model) is also pertinent to that situation.

In practice every train type could compete with every other train type. It is assumed however that trains of a particular type do not compete against other trains of the same type. The proposed capacity optimisation model is hence multi-objective and there are I separate ones. It is assumed that within train type categories, the relative importance of having flows on particular corridors may be irrelevant. For example, the model may assign trains of a particular type to any corridor it can in order to maximise the total system capacity. The model is as follows:

                           
                              (15)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             Maximize
                                             :
                                             
                                                {
                                                
                                                   
                                                      A
                                                      i
                                                   
                                                   
                                                      |
                                                      ∀
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                                }
                                             
                                             
                                             where
                                             
                                             
                                                A
                                                i
                                             
                                             =
                                             
                                                ∑
                                                
                                                   c
                                                   ∈
                                                   C
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         →
                                                      
                                                      i
                                                      c
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         ←
                                                      
                                                      i
                                                      c
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Multi
                                                   
                                                   objectives
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             Or
                                             
                                             Maximise
                                             :
                                             Z
                                             =
                                             
                                                ∑
                                                i
                                             
                                             
                                                λ
                                                i
                                             
                                             
                                                
                                                   A
                                                   ˜
                                                
                                                i
                                             
                                             
                                             where
                                             
                                             
                                                ∑
                                                i
                                             
                                             
                                                λ
                                                i
                                             
                                             =
                                             1
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Comparable
                                                   
                                                   single
                                                   
                                                   objective
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Subject to:
                     

Eqs.: (8), (9), and (12)

Optional constraint: (1), (2), (3) or (4)

Constraint (2) and (4) are not exactly enforced by the multi-objectives, and hence could be included. The objectives may be normalised and combined as in (16) and solved for different values of λi
                        . It should be noted that in that situation 
                           
                              A
                              =
                              
                                 ∑
                                 i
                              
                              
                                 A
                                 i
                              
                           
                         but whether 
                           A
                         is specifically being maximised is unclear.

For each unique pairing of train and corridor, namely (i, c) an objective could be created. The model for this scenario is as follows:

                           
                              (17)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                Maximize
                                                :
                                             
                                             
                                             
                                                {
                                                
                                                   
                                                      A
                                                      
                                                         i
                                                         ,
                                                         c
                                                      
                                                   
                                                   
                                                      |
                                                      ∀
                                                      i
                                                      ∈
                                                      I
                                                      ,
                                                      ∀
                                                      c
                                                      ∈
                                                      C
                                                   
                                                
                                                }
                                             
                                             
                                             where
                                             
                                             
                                                A
                                                
                                                   i
                                                   ,
                                                   c
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      x
                                                   
                                                   →
                                                
                                                i
                                                c
                                             
                                             +
                                             
                                                
                                                   
                                                      x
                                                   
                                                   ←
                                                
                                                i
                                                c
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Multi
                                                   
                                                   objectives
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             Or
                                             
                                             
                                                Maximise
                                                :
                                             
                                             
                                             Z
                                             =
                                             
                                                ∑
                                                
                                                   ∀
                                                   
                                                      (
                                                      
                                                         i
                                                         ,
                                                         c
                                                      
                                                      )
                                                   
                                                   ∈
                                                   I
                                                   ×
                                                   C
                                                
                                             
                                             
                                                λ
                                                
                                                   (
                                                   
                                                      i
                                                      ,
                                                      c
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   A
                                                   ˜
                                                
                                                
                                                   (
                                                   
                                                      i
                                                      ,
                                                      c
                                                   
                                                   )
                                                
                                             
                                             
                                             where
                                             
                                             
                                                ∑
                                                
                                                   ∀
                                                   
                                                      (
                                                      
                                                         i
                                                         ,
                                                         c
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                λ
                                                
                                                   (
                                                   
                                                      i
                                                      ,
                                                      c
                                                   
                                                   )
                                                
                                             
                                             =
                                             1
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Single
                                                   
                                                   objective
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Subject to:
                     

Eqs.: (8), (9), and (12)

Optional constraint: (2), (3) or (4)

The objectives may be normalised and combined as in (18) and solved for different weights λ
                        (i, c). It should be noted that in that situation 
                           
                              A
                              =
                              
                                 ∑
                                 
                                    ∀
                                    (
                                    
                                       i
                                       ,
                                       c
                                    
                                    )
                                 
                              
                              
                                 A
                                 
                                    (
                                    
                                       i
                                       ,
                                       c
                                    
                                    )
                                 
                              
                           
                         but whether 
                           A
                         is specifically being maximised is unclear.

Another form of competition occurs between each pairing of train service type and corridor. The objectives for this scenario are as follows:

                           
                              (19)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                Maximize
                                                :
                                             
                                             
                                             
                                                {
                                                
                                                   
                                                      A
                                                      c
                                                      P
                                                   
                                                   
                                                      |
                                                      ∀
                                                      c
                                                      ∈
                                                      C
                                                   
                                                
                                                }
                                             
                                             
                                             where
                                             
                                             
                                                A
                                                c
                                                P
                                             
                                             =
                                             
                                                ∑
                                                
                                                   ∀
                                                   i
                                                   ∈
                                                   
                                                      I
                                                      P
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         →
                                                      
                                                      i
                                                      c
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         ←
                                                      
                                                      i
                                                      c
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Multi
                                                   
                                                   objectives
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                Maximize
                                                :
                                             
                                             
                                             
                                                {
                                                
                                                   
                                                      A
                                                      c
                                                      F
                                                   
                                                   
                                                      |
                                                      ∀
                                                      c
                                                      ∈
                                                      C
                                                   
                                                
                                                }
                                             
                                             
                                             where
                                             
                                             
                                                A
                                                c
                                                F
                                             
                                             =
                                             
                                                ∑
                                                
                                                   ∀
                                                   i
                                                   ∈
                                                   
                                                      I
                                                      F
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         →
                                                      
                                                      i
                                                      c
                                                   
                                                   +
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         ←
                                                      
                                                      i
                                                      c
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Multi
                                                   
                                                   objectives
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             Or
                                             
                                             Maximise
                                             :
                                             Z
                                             =
                                             
                                                ∑
                                                
                                                   ∀
                                                   c
                                                
                                             
                                             
                                                
                                                   λ
                                                   c
                                                   F
                                                
                                                
                                                   A
                                                   c
                                                   F
                                                
                                             
                                             +
                                             
                                                ∑
                                                
                                                   ∀
                                                   c
                                                
                                             
                                             
                                                
                                                   λ
                                                   c
                                                   P
                                                
                                                
                                                   A
                                                   c
                                                   P
                                                
                                             
                                             
                                             where
                                             
                                             
                                                ∑
                                                c
                                             
                                             
                                                (
                                                
                                                   
                                                      λ
                                                      c
                                                      P
                                                   
                                                   +
                                                   
                                                      λ
                                                      c
                                                      F
                                                   
                                                
                                                )
                                             
                                             =
                                             1
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                [
                                                
                                                   Single
                                                   
                                                   objective
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In the above model 
                           
                              λ
                              c
                              F
                           
                         and 
                           
                              λ
                              c
                              P
                           
                         are introduced weights.

Identifying how to increase the capacity of a railway network is an important endeavour. How to expand the network when there are competing objectives and when the network is utilised in different ways at different times, makes this task quite difficult. There are many ways to expand railway networks, for example by adding signals and sidings, altering train speeds, and duplicating sections of rail. In this section track duplication is specifically considered. In each of the aforementioned multi-objective models (namely Sections 2.1–2.5) the previously defined objectives remain the same however an additional decision variable ∥s must be introduced to define the number of additional tracks to add on each section. Parameters for the cost of each track duplication (i.e. 
                           
                              C
                              s
                           
                        ) and the maximum number of duplications (i.e. 
                           
                              ∥
                              s
                              max
                           
                        ) are also necessary. The following additional constraints and objectives need to be added to the aforementioned models to facilitate capacity expansion planning:


                        Maximise: {(5), (6)} or (13) or (15) or 
                           A
                         where

                           
                              (22)
                              
                                 
                                    A
                                    =
                                    
                                       ∑
                                       
                                          c
                                          ∈
                                          C
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             ∀
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                          (
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   →
                                                
                                                i
                                                c
                                             
                                             +
                                             
                                                
                                                   
                                                      x
                                                   
                                                   ←
                                                
                                                i
                                                c
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    Minimise
                                    :
                                    B
                                    =
                                    
                                       ∑
                                       
                                          s
                                          ∈
                                          S
                                       
                                    
                                    
                                       C
                                       s
                                    
                                    .
                                    
                                       ∥
                                       s
                                    
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   y
                                                
                                                →
                                             
                                             i
                                             s
                                          
                                          
                                             
                                                T
                                                →
                                             
                                             i
                                             s
                                          
                                          +
                                          
                                             
                                                
                                                   y
                                                
                                                ←
                                             
                                             i
                                             s
                                          
                                          
                                             
                                                
                                                   T
                                                
                                                ←
                                             
                                             i
                                             s
                                          
                                       
                                       )
                                    
                                    ≤
                                    T
                                    ×
                                    
                                       (
                                       
                                          
                                             τ
                                             s
                                          
                                          +
                                          
                                             ∥
                                             s
                                          
                                       
                                       )
                                    
                                    
                                    ∀
                                    s
                                    ∈
                                    S
                                    
                                    
                                       [
                                       
                                          Section
                                          
                                          saturation
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    0
                                    ≤
                                    
                                       ∥
                                       s
                                    
                                    ≤
                                    
                                       ∥
                                       s
                                       max
                                    
                                    
                                    
                                    
                                       [
                                       
                                          Limit
                                          
                                          on
                                          
                                          track
                                          
                                          numbers
                                       
                                       ]
                                    
                                 
                              
                           
                        
                     

It should be noted that the previously defined section saturation constraint (i.e. (8)) should be replaced with (24). In Eq. (23) the total spending may be minimised. If the total number of track duplications is to be minimised then 
                           
                              
                                 C
                                 s
                              
                              =
                              1
                           
                        . The cost of duplication is generally computed as follows: 
                           
                              
                                 C
                                 s
                              
                              =
                              C
                              .
                              
                                 L
                                 s
                              
                           
                         where 
                           C
                         is the cost per kilometer.

This section considers how the multi-objective models formulated in Section 2 can be solved. Of those models the bi-objective model of Section 2.2 is conceptually simpler to solve than the models with three or more objectives.

Without loss of generality the goal of multi objective optimization is to find solutions that are considered equally good for all objectives or in technical terms to identify the set of non-dominated “Pareto” optimal solutions. Pareto optimality is a state in which it is impossible to make any one objective better without making at least one objective worse. In other words there is no other point that improves at least one objective function without detriment to another function (Marler & Arora, 2004). Several well-known approaches exist for solving these multi-objective models. These include for instance the ɛ-constraint method (ECM), weighted sum method (WSM), normal boundary (NBI) method, and others. Many of these techniques attempt to identify a set of candidate solutions, from which a single solution can then be chosen. Most of these methods also produce only one point on the Pareto frontier per iteration. The Pareto frontier can be pre-computed in order to facilitate the evaluation of different preferences at a later time. Otherwise, it is possible to solve for the best solution directly. That course of action is less often taken as it results in an optimisation problem with a non-linear objective criterion, involving traditionally some measure of distance from the utopia point. Most often the utopia point is a fictional solution that obtains the best possible value for each objective.

The WSM has been described as a popular technique and hence it was investigated. In summary it converts the multiple objectives to a single objective. For bi-objective situations the following weighted sum is evaluated: Z = wφ1(x) + (1 − w)φ2(x) where 0 ≤ w ≤ 1. An alternative is also to normalise the objective values: 
                           
                              Z
                              =
                              w
                              
                                 
                                    φ
                                    ˜
                                 
                                 1
                              
                              
                                 (
                                 x
                                 )
                              
                              +
                              
                                 (
                                 
                                    1
                                    −
                                    w
                                 
                                 )
                              
                              
                                 
                                    φ
                                    ˜
                                 
                                 2
                              
                              
                                 (
                                 x
                                 )
                              
                           
                        . The idea behind the WSM is then to solve the model for different values of w and to create a Pareto frontier from those values.

For the multi-objective situations a single objective could be formulated in the following way: 
                           
                              Z
                              =
                              
                                 ∑
                                 
                                    k
                                    ∈
                                    K
                                 
                              
                              
                                 
                                    w
                                    k
                                 
                                 
                                    
                                       φ
                                       ˜
                                    
                                    k
                                 
                                 
                                    (
                                    x
                                    )
                                 
                              
                           
                         where ∑
                           k ∈ K
                        
                        wk
                         = 1. The enumeration and analysis of all w vectors constitutes a Cartesian product in 
                           
                              K
                              ¯
                           
                         dimensions. The WSM method is hence to solve the model for different values of wk
                        . An alternative WSM approach (Kim & DeWeck, 2006) is to create a single objective in the following way: Zk
                         = w
                        
                           k − 1
                        Z
                        
                           k − 1 + (1 − w
                        
                           k − 1)Zk
                         for 
                           
                              2
                              ≤
                              k
                              ≤
                              
                                 K
                                 ¯
                              
                           
                         and where 
                           
                              
                                 Z
                                 1
                              
                              =
                              
                                 
                                    φ
                                    ˜
                                 
                                 1
                              
                              
                                 (
                                 x
                                 )
                              
                           
                         and wk
                         ∈ [0, 1] for 
                           
                              k
                              ∈
                              [
                              
                                 1
                                 ,
                                 
                                    K
                                    ¯
                                 
                                 −
                                 1
                              
                              ]
                           
                        .

Preliminary testing of the WSM method has shown that it is quite flawed. For example many φ
                           k
                         are set as zero even when wk
                         > 0. In some ways it only makes sense that φ
                           k
                         = 0 if wk
                         = 0. The following constraints however could be added: 
                           
                              
                                 
                                    φ
                                    ˜
                                 
                                 k
                              
                              ≥
                              
                                 w
                                 k
                              
                           
                         , i.e. 
                           
                              
                                 φ
                                 k
                              
                              ≥
                              
                                 w
                                 k
                              
                              .
                              
                                 
                                    φ
                                    ¯
                                 
                                 k
                              
                           
                        . They are investigated because they force the solution to satisfy specific levels for each objective. The weights wk
                         are no longer preferences but strict conditions. In addition the objective is either ∑
                           k ∈ K
                        φ
                           k
                         or else there is no objective. The altered WSM method is roughly equivalent to the ECM method which is discussed in the next section.

The ECM for involves the systematic solution for different values of ɛ the following model for a chosen objective k:

                           
                              (25)
                              
                                 
                                    Maximise
                                    
                                       (
                                       Minimise
                                       )
                                    
                                    :
                                    
                                       φ
                                       k
                                    
                                    
                                       (
                                       x
                                       )
                                    
                                 
                              
                           
                        
                     


                        Subject to:
                        
                           
                              (26)
                              
                                 
                                    
                                       φ
                                       j
                                    
                                    
                                       (
                                       x
                                       )
                                    
                                    ≥
                                    
                                       (
                                       ≤
                                       )
                                    
                                    
                                       
                                          ɛ
                                       
                                       j
                                    
                                    
                                    ∀
                                    j
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    
                                       K
                                       ¯
                                    
                                    
                                       |
                                       j
                                       ≠
                                       k
                                    
                                 
                              
                           
                        
                        
                           
                              (27)
                              
                                 
                                    x
                                    ∈
                                    X
                                 
                              
                           
                        
                     

The set of objectives is denoted by 
                           
                              K
                              =
                              {
                              
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    K
                                    ¯
                                 
                              
                              }
                           
                        , and the kth objective value is computed as φ
                           k
                        (x). The set of all possible solutions is X. Initially the upper and lower bounds, namely 
                           
                              
                                 φ
                                 ¯
                              
                              j
                           
                         and 
                           
                              
                                 φ
                                 j
                              
                              ̲
                           
                         are computed for each of the objectives. This is achieved by solving the model for a single objective φ
                           j
                        (x) and without the constraints specified by Eq. (26). Initially 
                           
                              
                                 
                                    ɛ
                                 
                                 j
                              
                              =
                              
                                 
                                    φ
                                    ¯
                                 
                                 j
                              
                           
                         and then it is relaxed iteratively. For example one strategy is to set ɛ
                           j
                         as the following values: 
                           
                              
                                 
                                    φ
                                    ¯
                                 
                                 j
                              
                              ,
                              
                                 
                                    φ
                                    ¯
                                 
                                 j
                              
                              −
                              
                                 δ
                                 j
                              
                              ,
                              
                                 
                                    φ
                                    ¯
                                 
                                 j
                              
                              −
                              2
                              
                                 δ
                                 j
                              
                              …
                              ,
                              
                                 
                                    φ
                                    ̲
                                 
                                 j
                              
                           
                         where 
                           
                              
                                 δ
                                 j
                              
                              =
                              
                                 
                                    φ
                                    ¯
                                 
                                 j
                              
                              /
                              N
                           
                         and N is the number of iterations. The values may similarly be generated and evaluated in the reverse order from 
                           
                              
                                 φ
                                 ̲
                              
                              j
                           
                        . Only one ɛ
                           j
                         however is changed each time the model is solved otherwise the Pareto frontier cannot be constructed correctly in multiple dimensions. The set of all ɛ vectors constitutes a Cartesian product in 
                           
                              
                                 K
                                 ¯
                              
                              −
                              1
                           
                         dimensions. In this article the ECM method was applied as its only weakness is reported to be computational. For example the effort required to generate the Pareto frontier can be large if many sub divisions are made and some of those solutions may be infeasible.

The ECM is a good approach for generating the Pareto frontier however as commented upon in Marler and Arora (2004) the possibility of generating many infeasible points is a reality for multi-objective problems. Preliminary numerical investigation on our railway capacity problems has again verified this to be true. For example, and comparatively speaking, only a small number of mesh points resulted in feasible solutions. Reducing the mesh size further just aggravates the situation and results in an even greater number of infeasible points.

Without loss of generality observation has shown that the infeasible points are those that occur closest to the utopia point and those points that are further away are most likely to be feasible, for instance at each of the boundary (i.e. corner) points in the objective space, where only a single metric is considered. Based upon this observation and the adaptive approach of Kim and DeWeck (2006) for the WSM, an adaptive ECM is hence proposed. In that approach it has been postulated that it is best to generate the mesh dynamically from 
                           
                              (
                              
                                 
                                    0
                                    1
                                 
                                 ,
                                 
                                    0
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    0
                                    
                                       
                                          K
                                          ¯
                                       
                                       −
                                       1
                                    
                                 
                              
                              )
                           
                         and to expand outward from that point toward the utopia point, in a kind of breadth first search. The idea behind this adaptive ECM is shown in Fig. 1
                         for 2D and 3D situations. For higher dimensions the same expansion movements are done. Along the way any point that is found to be infeasible should not be expanded upon because feasibility cannot be restored. The proof of this is shown below in the Theorem. First let the solution be defined as 
                           
                              
                                 x
                                 ˜
                              
                              =
                              
                                 (
                                 
                                    
                                       x
                                       1
                                    
                                    ,
                                    
                                       x
                                       2
                                    
                                    ,
                                    …
                                    ,
                                    
                                       x
                                       
                                          |
                                          I
                                          |
                                       
                                    
                                 
                                 )
                              
                           
                         where 
                           
                              
                                 x
                                 i
                              
                              =
                              
                                 ∑
                                 
                                    c
                                    ∈
                                    C
                                 
                              
                              
                                 (
                                 
                                    
                                       
                                          x
                                          →
                                       
                                       i
                                       c
                                    
                                    +
                                    
                                       
                                          x
                                          →
                                       
                                       i
                                       c
                                    
                                 
                                 )
                              
                           
                        . The solution may alternatively be defined as 
                           
                              
                                 x
                                 ˜
                              
                              =
                              
                                 (
                                 
                                    
                                       x
                                       1
                                    
                                    ,
                                    
                                       x
                                       2
                                    
                                    ,
                                    …
                                    ,
                                    
                                       x
                                       
                                          |
                                          C
                                          |
                                       
                                    
                                 
                                 )
                              
                           
                         where 
                           
                              
                                 x
                                 c
                              
                              =
                              
                                 ∑
                                 
                                    i
                                    ∈
                                    I
                                 
                              
                              
                                 (
                                 
                                    
                                       
                                          x
                                          →
                                       
                                       i
                                       c
                                    
                                    +
                                    
                                       
                                          x
                                          →
                                       
                                       i
                                       c
                                    
                                 
                                 )
                              
                           
                        .

                           Theorem
                           
                              If
                              
                                 
                                    x
                                    ˜
                                 
                               
                              is infeasible then
                              
                                 
                                    
                                       
                                          x
                                          ˜
                                       
                                       ′
                                    
                                    =
                                    
                                       x
                                       ˜
                                    
                                    +
                                    
                                       Δ
                                       ˜
                                    
                                 
                               
                              is also infeasible regardless of how
                              
                                 
                                    
                                       Δ
                                       ˜
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             δ
                                             1
                                          
                                          ,
                                          
                                             δ
                                             2
                                          
                                          ,
                                          …
                                          ,
                                          
                                             δ
                                             I
                                          
                                       
                                       )
                                    
                                 
                               
                              is defined.
                           

Let 
                                 
                                    LH
                                    
                                       S
                                       s
                                    
                                    
                                    =
                                    
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                y
                                                →
                                             
                                             i
                                             s
                                          
                                          
                                             
                                                T
                                                →
                                             
                                             i
                                             s
                                          
                                          
                                          +
                                          
                                          
                                             
                                                y
                                                ←
                                             
                                             i
                                             s
                                          
                                          
                                             
                                                T
                                                ←
                                             
                                             i
                                             s
                                          
                                       
                                       )
                                    
                                    
                                    =
                                    
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       (
                                       
                                          ∑
                                          
                                             
                                                c
                                                ∈
                                                C
                                                |
                                                s
                                                ∈
                                             
                                             
                                                Ω
                                                c
                                             
                                          
                                       
                                       
                                          (
                                          
                                             
                                                x
                                                →
                                             
                                             i
                                             c
                                          
                                          
                                             
                                                T
                                                →
                                             
                                             i
                                             s
                                          
                                          
                                          +
                                          
                                          
                                             
                                                x
                                                ←
                                             
                                             i
                                             c
                                          
                                          
                                             
                                                T
                                                ←
                                             
                                             i
                                             s
                                          
                                          )
                                       
                                       )
                                    
                                 
                              . As 
                                 
                                    x
                                    ˜
                                 
                               is infeasible it can be concluded that LHSs > T × τs
                               for at least one section s ∈ S. The difference between the LHS and RHS is the level of the infeasibility. The LHS for the new solution 
                                 
                                    
                                       x
                                       ˜
                                    
                                    ′
                                 
                               is as follows:

                                 
                                    
                                       
                                          
                                             
                                                
                                                   LH
                                                   
                                                      
                                                         
                                                            S
                                                            ′
                                                         
                                                      
                                                      s
                                                   
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         I
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            
                                                               
                                                                  v
                                                               
                                                               →
                                                            
                                                            i
                                                            s
                                                         
                                                         
                                                            
                                                               
                                                                  T
                                                               
                                                               →
                                                            
                                                            i
                                                            s
                                                         
                                                         +
                                                         
                                                            
                                                               
                                                                  v
                                                               
                                                               ←
                                                            
                                                            i
                                                            s
                                                         
                                                         
                                                            
                                                               
                                                                  T
                                                               
                                                               ←
                                                            
                                                            i
                                                            s
                                                         
                                                      
                                                      )
                                                   
                                                   =
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         I
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         (
                                                         
                                                            
                                                               ∑
                                                               
                                                                  
                                                                     c
                                                                     ∈
                                                                     C
                                                                     |
                                                                     s
                                                                     ∈
                                                                  
                                                                  
                                                                     Ω
                                                                     c
                                                                  
                                                               
                                                            
                                                            
                                                               (
                                                               
                                                                  
                                                                     
                                                                        
                                                                           x
                                                                        
                                                                        →
                                                                     
                                                                     i
                                                                     c
                                                                  
                                                                  +
                                                                  
                                                                     
                                                                        δ
                                                                        →
                                                                     
                                                                     i
                                                                     c
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                      
                                                         
                                                            
                                                               T
                                                            
                                                            →
                                                         
                                                         i
                                                         s
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   +
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            ∑
                                                            
                                                               
                                                                  c
                                                                  ∈
                                                                  C
                                                                  |
                                                                  s
                                                                  ∈
                                                               
                                                               
                                                                  Ω
                                                                  c
                                                               
                                                            
                                                         
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               +
                                                               
                                                                  
                                                                     
                                                                        δ
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  c
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      
                                                         
                                                            T
                                                         
                                                         ←
                                                      
                                                      i
                                                      s
                                                   
                                                   )
                                                
                                             
                                          
                                          
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         I
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            ∑
                                                            
                                                               
                                                                  c
                                                                  ∈
                                                                  C
                                                                  |
                                                                  s
                                                                  ∈
                                                               
                                                               
                                                                  Ω
                                                                  c
                                                               
                                                            
                                                         
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     →
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     →
                                                                  
                                                                  i
                                                                  s
                                                               
                                                               +
                                                               
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  s
                                                               
                                                               +
                                                               
                                                                  
                                                                     δ
                                                                     →
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     →
                                                                  
                                                                  i
                                                                  s
                                                               
                                                               +
                                                               
                                                                  
                                                                     
                                                                        δ
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  s
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         I
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            ∑
                                                            
                                                               
                                                                  c
                                                                  ∈
                                                                  C
                                                                  |
                                                                  s
                                                                  ∈
                                                               
                                                               
                                                                  Ω
                                                                  c
                                                               
                                                            
                                                         
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     →
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     →
                                                                  
                                                                  i
                                                                  s
                                                               
                                                               +
                                                               
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  s
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   +
                                                   
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         I
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            ∑
                                                            
                                                               
                                                                  c
                                                                  ∈
                                                                  C
                                                                  |
                                                                  s
                                                                  ∈
                                                               
                                                               
                                                                  Ω
                                                                  c
                                                               
                                                            
                                                         
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     δ
                                                                     →
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     →
                                                                  
                                                                  i
                                                                  s
                                                               
                                                               +
                                                               
                                                                  
                                                                     
                                                                        δ
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  s
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   LH
                                                   
                                                      S
                                                      s
                                                   
                                                   +
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         I
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            ∑
                                                            
                                                               
                                                                  c
                                                                  ∈
                                                                  C
                                                                  |
                                                                  s
                                                                  ∈
                                                               
                                                               
                                                                  Ω
                                                                  c
                                                               
                                                            
                                                         
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     δ
                                                                     →
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     →
                                                                  
                                                                  i
                                                                  s
                                                               
                                                               +
                                                               
                                                                  
                                                                     
                                                                        δ
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  c
                                                               
                                                               
                                                                  
                                                                     
                                                                        T
                                                                     
                                                                     ←
                                                                  
                                                                  i
                                                                  s
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                ≥
                                             
                                             
                                                
                                                   LH
                                                   
                                                      S
                                                      s
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Hence LHS'
                           s
                         = LHS only if 
                           
                              
                                 
                                    δ
                                    →
                                 
                                 i
                                 c
                              
                              =
                              0
                           
                         and 
                           
                              
                                 
                                    δ
                                    ←
                                 
                                 i
                                 c
                              
                              =
                              0
                           
                         for all i ∈ I, c ∈ C. If a single additional train i was added (i.e. 
                           
                              
                                 
                                    x
                                    ˜
                                 
                                 ′
                              
                              =
                              
                                 x
                                 ˜
                              
                              +
                              
                                 
                                    Δ
                                    ˜
                                 
                                 i
                              
                           
                         where 
                           
                              
                                 
                                    Δ
                                    ˜
                                 
                                 i
                              
                              =
                              
                                 (
                                 
                                    0
                                    ,
                                    …
                                    ,
                                    
                                       δ
                                       i
                                    
                                    =
                                    
                                       ∑
                                       
                                          c
                                          ∈
                                          C
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                δ
                                                →
                                             
                                             i
                                             c
                                          
                                          +
                                          
                                             
                                                δ
                                                ←
                                             
                                             i
                                             c
                                          
                                       
                                       )
                                    
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    0
                                 
                                 )
                              
                           
                         where 1 ≤ i ≤ |I| ) then LHS'
                           s
                         > LHS > RHS. Hence 
                           
                              x
                              ˜
                           
                         is infeasible.

The adaptive ECM algorithm is shown below:


                        Algorithm 1. Adaptive_ECM
                        
                        
                           
                              
                                 
                                 
                                    
                                       
                                          Begin
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                Q
                                                =
                                                {
                                                
                                                   p
                                                   t
                                                   =
                                                   (
                                                   
                                                      0
                                                      ,
                                                      0
                                                      ,
                                                      …
                                                      ,
                                                      0
                                                   
                                                   )
                                                
                                                }
                                             
                                          ;
                                    
                                    
                                       
                                          
                                          
                                             
                                                (
                                                
                                                   j
                                                   ,
                                                   c
                                                   o
                                                   u
                                                   n
                                                   t
                                                
                                                )
                                                =
                                                (
                                                
                                                   1
                                                   ,
                                                   2
                                                
                                                )
                                             
                                          ;
                                    
                                    
                                       
                                          while
                                             
                                                (
                                                
                                                   j
                                                   <
                                                   c
                                                   o
                                                   u
                                                   n
                                                   t
                                                
                                                )
                                             
                                           begin
                                    
                                    
                                       
                                          if
                                             
                                                (
                                                
                                                   
                                                      S
                                                      o
                                                      l
                                                      v
                                                      e
                                                   
                                                   (
                                                   
                                                      Q
                                                      j
                                                   
                                                   )
                                                
                                                )
                                             
                                           begin [Solve the model. Generate new points if feasible]
                                    
                                    
                                       
                                          for 
                                             
                                                (
                                                
                                                   d
                                                   =
                                                   1
                                                   ,
                                                   …
                                                   ,
                                                   D
                                                
                                                )
                                             
                                           begin [For each defined direction]
                                    
                                    
                                       
                                          
                                          
                                             
                                                n
                                                e
                                                w
                                                p
                                                t
                                                =
                                                p
                                                t
                                             
                                          ; 
                                             
                                                n
                                                e
                                                w
                                                p
                                                
                                                   t
                                                   
                                                      d
                                                      +
                                                      1
                                                   
                                                
                                                +
                                                =
                                                
                                                   Δ
                                                   
                                                      d
                                                      +
                                                      1
                                                   
                                                
                                             
                                          ; [i.e. 
                                             
                                                n
                                                e
                                                w
                                                p
                                                t
                                                +
                                                =
                                                (
                                                
                                                   0
                                                   ,
                                                   
                                                      Δ
                                                      2
                                                   
                                                   
                                                      σ
                                                      
                                                         d
                                                         ,
                                                         1
                                                      
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      Δ
                                                      
                                                         K
                                                         ¯
                                                      
                                                   
                                                   
                                                      σ
                                                      
                                                         d
                                                         ,
                                                         
                                                            K
                                                            ¯
                                                         
                                                         −
                                                         1
                                                      
                                                   
                                                
                                                )
                                             
                                          ]
                                    
                                    
                                       
                                          if(
                                             
                                                n
                                                e
                                                w
                                                p
                                                
                                                   t
                                                   i
                                                
                                                ≤
                                                U
                                                
                                                   B
                                                   i
                                                
                                                
                                                ∀
                                                i
                                             
                                           and 
                                             
                                                n
                                                e
                                                w
                                                p
                                                t
                                                ∉
                                                Q
                                             
                                          ) begin
                                    
                                    
                                       
                                          
                                          
                                             
                                                Q
                                                =
                                                Q
                                                +
                                                {
                                                
                                                   n
                                                   e
                                                   w
                                                   p
                                                   t
                                                
                                                }
                                             
                                          ; [Record the new point]
                                    
                                    
                                       
                                          
                                          
                                             
                                                p
                                                r
                                                e
                                                v
                                                =
                                                p
                                                r
                                                e
                                                v
                                                +
                                                {
                                                j
                                                }
                                                ;
                                                
                                                
                                                
                                                [
                                                
                                                   Record
                                                   
                                                   its
                                                   
                                                   parent
                                                   
                                                   point
                                                
                                                ]
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                c
                                                o
                                                u
                                                n
                                                t
                                                +
                                                +
                                                ;
                                                
                                                
                                                
                                                
                                                
                                                [
                                                
                                                   Increment
                                                   
                                                   the
                                                   
                                                   number
                                                   
                                                   of
                                                   
                                                   recorded
                                                   
                                                   points
                                                
                                                ]
                                             
                                          
                                       
                                    
                                    
                                       
                                          End
                                    
                                    
                                       
                                          End
                                    
                                    
                                       
                                          End
                                    
                                    
                                       
                                          
                                          
                                             
                                                j
                                                +
                                                +
                                             
                                          ; [Go to next point on the mesh]
                                    
                                    
                                       
                                          End
                                    
                                    
                                       
                                          End
                                       
                                    
                                 
                              
                           
                        The generated mesh occurs in 
                           
                              
                                 K
                                 ¯
                              
                              −
                              1
                           
                         dimensions. The mesh is created by moving across each dimension one unit of distance, where Δk
                         = UB
                           k
                        /Nk
                        . Hence in 2D situations, σ = ((1, 0), (0, 1)) and in 3D situations, σ = ((1, 0, 0), (0, 1, 0), (0, 0, 1)). Therefore, 
                           
                              D
                              =
                              
                                 K
                                 ¯
                              
                              −
                              1
                              
                           
                         and σ
                        
                           d, k
                         = 1 if d = k else σ
                        
                           d, k
                         = 0. Other approaches are also possible. For example, in 2D scenarios, σ = ((0, 1), (1, 0), (1, 1)) and in 3D, σ = ((0, 0, 1), (0, 1, 0), (1, 0, 0), (0, 1, 1), (1, 0, 1), (1, 1, 0), (1, 1, 1)) are possibilities. The main issue with those approaches is that the same points are generated many more times, and more lookups are required to see whether points exist or not. The 
                           Solve
                         function refers to the solution of the model specified in Eqs. (22)–(24). The value of the first objective (i.e. in the first dimension) is determined by solving the model.

To compare the different objective functions, the values of φ
                           k
                        (x) are normalised in the following way: 
                           
                              
                                 
                                    φ
                                    ˜
                                 
                                 k
                              
                              
                                 (
                                 x
                                 )
                              
                              =
                              
                                 (
                                 
                                    
                                       φ
                                       k
                                    
                                    
                                       (
                                       x
                                       )
                                    
                                    −
                                    
                                       
                                          φ
                                          ̲
                                       
                                       k
                                    
                                 
                                 )
                              
                              /
                              
                                 (
                                 
                                    
                                       
                                          φ
                                          ¯
                                       
                                       k
                                    
                                    −
                                    
                                       
                                          φ
                                          ̲
                                       
                                       k
                                    
                                 
                                 )
                              
                           
                        . To judge the merit of solutions on the Pareto frontier the distance from the utopia point (i.e. the best possible solution) can then be computed. As the objectives in this article are all maximisation, the normalised utopia point is (1, 1, …, 1). In this article a prioritised Euclidean distance metric has been selected. For example if weights wk
                         are introduced to give priority to each objective, then 
                           
                              
                                 d
                                 n
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          ∑
                                          
                                             k
                                             ∈
                                             K
                                          
                                       
                                       
                                          (
                                          
                                             
                                                w
                                                k
                                                q
                                             
                                             .
                                             
                                                
                                                   (
                                                   
                                                      1
                                                      −
                                                      
                                                         
                                                            φ
                                                            ˜
                                                         
                                                         k
                                                      
                                                   
                                                   )
                                                
                                                p
                                             
                                          
                                          )
                                       
                                    
                                    )
                                 
                                 
                                    1
                                    /
                                    p
                                 
                              
                           
                         and (p, q) = (2, 1). The best solution is chosen such that 
                           
                              
                                 d
                                 *
                              
                              =
                              
                                 min
                                 
                                    n
                                    ∈
                                    [
                                    
                                       1
                                       ,
                                       N
                                    
                                    ]
                                 
                              
                              
                                 d
                                 n
                              
                           
                        . If 
                           
                              
                                 φ
                                 ˜
                              
                              k
                           
                         is small then the kth objective is far from the utopia point in the kth dimension, and hence 
                           
                              (
                              
                                 1
                                 −
                                 
                                    
                                       φ
                                       ˜
                                    
                                    k
                                 
                              
                              )
                           
                         will be larger and will contribute more to the distance. If that objective is also more important than other objectives, then the distance will be amplified further. In other words, wk
                         penalises solutions whose 
                           
                              
                                 φ
                                 ˜
                              
                              k
                           
                         is far from the utopia point, and the closer 
                           
                              
                                 φ
                                 ˜
                              
                              k
                           
                         is to one, the better. It should be noted that when p = 2 the standard Euclidean distance lies in the range 
                           
                              [
                              
                                 0
                                 ,
                                 
                                    
                                       K
                                       ¯
                                    
                                 
                              
                              ]
                           
                        . For example if the Pareto solution occurs at the utopia point, then there is no distance, and if the solution occurs at (0, 0, …., 0) then the distance is the square root of 
                           
                              K
                              ¯
                           
                         values of one. For the prioritised distance metric, the distance lies in the range [0, 1] if the weights are chosen so that ∑
                           k ∈ K
                        
                        wk
                         = 1. If the worst solution occurs at one of the 
                           
                              K
                              ¯
                           
                         upper bounds (i.e. 
                           
                              (
                              
                                 0
                                 ,
                                 0
                                 ,
                                 0
                                 ,
                                 
                                    
                                       φ
                                       ¯
                                    
                                    k
                                 
                                 ,
                                 0
                                 ,
                                 …
                                 ,
                                 0
                              
                              )
                           
                        ) then the distance lies in the interval 
                           
                              [
                              
                                 0
                                 ,
                                 
                                    d
                                    ¯
                                 
                              
                              ]
                           
                         where 
                           
                              
                                 d
                                 ¯
                              
                              =
                              
                                 max
                                 
                                    k
                                    ∈
                                    K
                                 
                              
                              
                                 (
                                 
                                    
                                       
                                          ∑
                                          
                                             j
                                             ∈
                                             K
                                             |
                                             j
                                             ≠
                                             k
                                          
                                       
                                       
                                          w
                                          j
                                       
                                    
                                 
                                 )
                              
                              .
                           
                        
                        
                           Proof
                           For the kth upper bound 
                                 
                                    
                                       φ
                                       ¯
                                    
                                    k
                                 
                               the normalised value is one and the distance component is zero. For all other objective functions the values are zero, and the distance component is one times the weight. Hence the total distance is 
                                 
                                    
                                       
                                          ∑
                                          
                                             j
                                             ∈
                                             K
                                             |
                                             j
                                             ≠
                                             k
                                          
                                       
                                       
                                          w
                                          j
                                       
                                    
                                 
                              .
                                 
                                    
                                    □
                                 
                              
                           

Not all Pareto solutions may be of interest to stakeholders and planners. An alternative strategy is to identify a sub set of those solutions that lie within a specified distance of the minimum d*. For example that have a distance between [d* − ε, d* + ε] where 
                           
                              ϵ
                              =
                              ρ
                              (
                              
                                 
                                    d
                                    ¯
                                 
                                 −
                                 
                                    d
                                    *
                                 
                              
                              )
                           
                         and ρ is a specified percentage in the range [0, 1].

It should also be noted that the proportional mix of trains (i.e. either η
                        
                           c, i
                         or κ
                        
                           c, i
                        ) can be identified for each solution on the Pareto frontier. This is in contrast to the standard capacity approach which required this information as input. The same can be said for the percentage flow across the different corridors.

The aforementioned multi-objective models and solution techniques (i.e. WSM, ECM, AECM) were implemented directly in IBM's ILOG CPLEX Optimisation Studio (i.e. OplStudio) software. An alternative approach that uses the concert technology functionality in C++ could also have been used but was avoided as the former option was generally sufficient for most tasks, and required less development time.

The mathematical models were encoded in “.mod” files and the models parameters were placed in an associated “.dat” file. In the .mod files, the solution techniques were also added. They were implemented using the OplStudio scripting functionality. The script allows an IloOplModel to be defined, altered and solved as many times as is necessary. Functions (i.e. traditional and recursive) can be programmed to do a variety of calculations. They must be placed within the main function, after which any other code may be placed:

                           
                              
                                 
                                 
                                    
                                       Main
                                    
                                    
                                       {
                                    
                                    
                                       
                                          function WSM(mod){ code omitted }
                                    
                                    
                                       
                                          function ECM(mod){ code omitted }
                                    
                                    
                                       
                                          function AECM(mod){ code omitted}
                                    
                                    
                                       
                                          function past_boundary(mod, pt) {code omitted }
                                    
                                    
                                       
                                          function same_pt(mod, pt, j) {code omitted }
                                    
                                    
                                       
                                          function in_queue(mod, pt, st, en) {code omitted }
                                    
                                    
                                       
                                          function solve(mod, k) { code omitted }
                                    
                                    
                                       
                                          for(o in mod.O)
                                    
                                    
                                       
                                          {
                                    
                                    
                                       
                                          def = mod.modelDefinition; // Extract current definitions
                                    
                                    
                                       
                                          data = mod.dataElements; // Extract current data
                                    
                                    
                                       
                                          data.flag[o] = 1; // Set objective as o
                                    
                                    
                                       
                                          mod = new IloOplModel(def, cplex); // Define a new model
                                    
                                    
                                       
                                          mod.addDataSource(data); // Add new data to model
                                    
                                    
                                       
                                          mod.generate(); // Generate the new model for solving
                                    
                                    
                                       
                                          if (cplex.solve())
                                    
                                    
                                       
                                          {
                                    
                                    
                                       
                                          writeln("o=",o,",UB=", mod.Z[o]);
                                    
                                    
                                       
                                          mod.UB[o] = mod.Z[o];
                                    
                                    
                                       
                                          }
                                    
                                    
                                       
                                          data.flag[o] = 0; // Reset flag
                                    
                                    
                                       
                                          }
                                    
                                    
                                       
                                          AECM(mod); // Other options: Call ECM(mod)or WSM(mod)
                                    
                                    
                                       }
                                    
                                 
                              
                           
                        The first step (as shown above) is to specify the model and to identify bounds on each of the objectives. These values are used for normalisation calculations. This step is required for each solution technique. As the ECM and AECM are superior the details of their implementation will be discussed. Apart from OplStudio syntax differences, the AECM code is for all intents and purposes the same as shown in Algorithm 1. The ECM code is also the same—only the feasibility check is removed. A different implementation of the ECM was however used and the reasons for this will be discussed in due course.

To solve the mathematical model at each step a “solve” function was defined. That function requires the model to be passed to it and its code is essentially the same as that within the above for loop. Two alterations however are needed. The first is the designation of the ɛ
                           j
                         values prior to the models solution:


                        for(o in mod.O) { if(o>1) data.LIM[o] = mod.queue[k][o]; }
                     

The index k describes which mesh point to evaluate. The other change is to compute the normalised objective values and to compute the Euclidean distance:

                           
                              
                                 
                                 
                                    
                                       for(o in mod.O)
                                    
                                    
                                       {
                                    
                                    
                                       
                                          
                                          mod.norm[o] = (mod.Z[o] – mod.LB[o]) / (mod.UB[o] – mod.LB[o]);
                                       
                                    
                                    
                                       
                                          
                                          tot = tot + mod.wght[o] * (1-mod.norm[o])*(1-mod.norm[o]);
                                       
                                    
                                    
                                       
                                          }
                                       
                                    
                                    
                                       
                                          dist = Math.sqrt(tot);
                                       
                                    
                                 
                              
                           
                        In the AECM a data structure is needed to store the set of generated points. This has been denoted as mod.queue. In OplStudio there are no dynamic data structures to our knowledge and hence a two dimensional static array was defined to record these points. The size of the first dimension is 
                           
                              
                                 (
                                 
                                    N
                                    +
                                    1
                                 
                                 )
                              
                              
                                 
                                    K
                                    ¯
                                 
                                 −
                                 1
                              
                           
                         and the size of the second is the number of objectives. For example, for N = 20, and four objectives, there are 9261 possible points on the mesh that might need to be stored.

As the entire mesh must be generated by the ECM, a different implementation was used. In that encoding mesh points are not explicitly recorded in a data structure because the possibility of the same points being created multiple times does not occur. Specifically the points are generated, evaluated and the results are output directly to the scripting window. Upon completion, those results are extracted into Excel for further manipulation and analysis.

To generate the mesh points the Cartesian product is input directly or else computed using recursive functions in OplStudio. The first option was found to be best because of memory issues in OplStudio.

The case study of Burdett and Kozan (2006) has been chosen to demonstrate the application of the different models. The network is shown in Fig. 2. OPLStudio (Version 12.4 and 12.6) were used to solve the different models on a quad core Dell personal computer (PC) with a 2.5 gigahertz processor and 4 gigabytes memory under Windows 7.

In this section four train types I = {1, 2, 3, 4} were considered in the numerical investigations. Their speeds in kilometer per hour are: V = [60, 80, 100, 120]. The directional mix was assumed to be 50–50 but this could also be analysed.

In this section the capacity of the network was analysed for the competing passenger and freight services scenario. The four train types were partitioned into freight and passenger services, I
                        F = {1, 2}, I
                        P = {3, 4}. Hence there are two objectives; objective one is the total number of passenger trains, and objective two is either the total number of freight trains or a measure of the total worth of freight trains. For this analysis the proportional mix of trains in each service type was defined as follows: 
                           
                              
                                 η
                                 c
                                 P
                              
                              =
                              
                                 [
                                 
                                    [
                                    
                                       0.25
                                       ,
                                       0.75
                                    
                                    ]
                                    ,
                                    [
                                    
                                       0.55
                                       ,
                                       0.45
                                    
                                    ]
                                    ,
                                    [
                                    
                                       0.4
                                       ,
                                       0.6
                                    
                                    ]
                                    ,
                                    [
                                    
                                       0.1
                                       ,
                                       0.9
                                    
                                    ]
                                    ,
                                    [
                                    
                                       0.8
                                       ,
                                       0.2
                                    
                                    ]
                                    ,
                                    [
                                    
                                       0.35
                                       ,
                                       0.65
                                    
                                    ]
                                 
                                 ]
                              
                           
                        , 
                           
                              
                                 η
                                 c
                                 F
                              
                              =
                              
                                 [
                                 
                                    [
                                    
                                       0.15
                                       ,
                                       0.85
                                    
                                    ]
                                 
                                 ,
                                 
                                 
                                    [
                                    
                                       0.69
                                       ,
                                       0.31
                                    
                                    ]
                                 
                                 ,
                                 
                                 
                                    [
                                    
                                       0.32
                                       ,
                                       0.68
                                    
                                    ]
                                 
                                 ,
                                 
                                 
                                    [
                                    
                                       0.9
                                       ,
                                       0.1
                                    
                                    ]
                                 
                                 ,
                                 
                                 
                                    [
                                    
                                       0.19
                                       ,
                                       0.81
                                    
                                    ]
                                 
                                 ,
                                 
                                    [
                                    
                                       0.72
                                       ,
                                       0.28
                                    
                                    ]
                                 
                                 ]
                              
                           
                        .


                        
                           ECM 
                           results: For the first possibility where the number of freight trains is important, the results are shown in Table 1 and Fig. 3
                        .

In summary the increase in passenger train numbers and the decrease in freight train numbers is quite constant. The Pareto frontier is quite linear however upon closer inspection (i.e. of Fig. 3c) it is apparent that it is piecewise linear as there are eight segments. It is interesting to note that the line for the total number of trains is not linear either. The difference in the total number of trains varies from 2.96 to 2 trains between adjacent solutions as shown in Fig. 3d. The corresponding difference in the number of passenger trains is also shown in that chart. The best solution on the Pareto frontier according to a Euclidean distance with weights (0.5, 0.5) is the 48th solution (319.7, 208.25), with an absolute capacity of 527.95 trains in total and a distance of 0.487 from the utopia point. The normalised objective function values are (0.505, 0.52). The other distances are shown in Fig. 3a. For the alternative distance metric with different values of p and q = p, the results are also shown in Fig. 3a. When p = 4 or greater, the minimum point is point 49 instead of point 48. That solution is (325.85, 204.24) and its absolute capacity is 530.1 trains, which is 2.15 trains better. The normalised objective values are (0.515, 0.51) which are somewhat better because they are more similar and closer to the ideal weights. For comparison purposes the capacity model was solved with the combined weighted sum objective given by Eq. (7) and the weights (0.5, 0.5). The obtained solution was 
                           
                              Z
                              =
                              0.514
                              ,
                              
                                 A
                                 P
                              
                              =
                              242.89
                              ,
                              
                                 A
                                 F
                              
                              =
                              258.21
                              ,
                              A
                              =
                              501.1
                           
                        . This solution has regulated competition in an equitable way however it is inferior to that obtained by the ECM method, by 27 trains.

When the second objective is total freight, the results are shown in Table 2 and Fig. 4
                        
                        . The Pareto frontier as shown in Fig. 4d is piece-wise linear as it has nine unique segments. The best solution according to the Euclidean distance metric with weights (0.5, 0.5) is the 50th, i.e. (321.76, 33,759.72). The associated distance is 0.496. The number of freight trains is 189.36 and hence the absolute capacity overall is 511.12 trains. The other distances are shown in Fig. 4a. In this situation, the alternative distance metrics also identify the same point as best. In Fig. 4c the ECM solutions are shown and the total number of trains. Both lines are not entirely straight; the differences between solutions are shown in Fig. 4e. That figure is quite unusual as for certain interval there is a constant difference but overall the difference is not decreasing as it was in the previous example. For example it deceases then increases.

For comparison purposes the capacity model was solved with the combined weighted sum objective given by Eq. (7) and the weights (0.5, 0.5). The obtained solution was 
                           
                              Z
                              =
                              0.50431
                              ,
                              
                                 A
                                 P
                              
                              =
                              303.66
                              ,
                              
                              
                                 A
                                 F
                              
                              =
                              199.77
                              ,
                              
                              A
                              =
                              503.43
                           
                        . This solution has regulated competition in an equitable way however it is slightly inferior to that obtained by the ECM method.


                        
                           WSM 
                           results: The WSM was applied for different values of the weight w and a different number of sub divisions were investigated, namely 100, 200, 400 and 1000. Hence the difference between values was 0.01, 0.005, 0.0025 and 0.001 respectively. The results for 1000 sub divisions are most accurate and hence these are summarised in Table 3
                         and Fig. 5.


                        Table 3 and Fig. 5a show that there were six unique solutions. Six were also obtained when 400 sub divisions were evaluated. Five unique solutions were otherwise obtained. The obtained solutions are not evenly distributed across the decision space. It should also be noted that no other Pareto optimal points can be identified using the standard WSM. These two issues have been reported previously as a weakness of the WSM. The normalised objective is mostly symmetrical, except when the weight takes values between 0.48 and 0.52.

For the situation where the second objective is total freight and not total freight train numbers, the results for 1000 subdivisions are shown in Fig. 6
                         and Table 4
                        . Six unique solutions were again obtained. Even fewer solutions were obtained when the number of sub divisions was smaller. For example for 100 and 200 sub divisions, the number of obtained solution points was 4 and 5 respectively. The normalised objective function values are symmetrical about w = 0.5.

For the WSM results shown above, the Pareto frontier is approximated by linking the obtained solutions. That action is acceptable here because the ECM results have already been computed and are the same when superimposed on top of the WSM results. The ECM however requires far less computational effort to achieve the same result. For this reason the WSM is not applied in later sections.

In this section the capacity of the network was analysed for the competing train type scenario. Each of the four train types competes for infrastructure and hence there are four objectives. The upper bound for absolute capacity for each train type is as follows: 
                           
                              
                                 φ
                                 ¯
                              
                              =
                              
                                 (
                                 
                                    337.6
                                    ,
                                    450.13
                                    ,
                                    562.66
                                    ,
                                    675.19
                                 
                                 )
                              
                           
                        .


                        
                           ECM 
                           results: In order to approximate the Pareto frontier a small number of divisions were first investigated. With five divisions along each dimension, there are 53 = 125 points to be evaluated. Each sub division in each dimension is as follows: δ = (67.52, 90.03, 112.53, 135.04). Of the 125 points only 53 resulted in feasible solutions. There are four solutions of minimal distance and these are shown in Table 5
                        .

Even though these solutions have the same distance (i.e. 0.755), there is a significant difference in absolute capacity. The other solution points have values in the range [337.6, 652.69] with (μ, σ) = (503.21, 73.87). They also have distances in the range [0.755, 0.866] with (μ, σ) = (0.7891, 0.0229).

As the plots of the results were too sparse a greater number of divisions were investigated. Due to the computational overhead of doing this analysis, 20 divisions were chosen next. The attributes of the solutions are shown in Fig. 7
                        .
                     

These charts have a very unique and clearly defined structure. With 20 divisions, there are 203 = 8000 points to be evaluated in order to approximate the Pareto frontier. Each sub division in each dimension is as follows: δ = (16.88, 22.51, 28.13, 33.76). The total CPU time for these 8000 runs was moderate and did not exceed 30 minutes. Of the 8000 points only 1768 resulted in feasible solutions. The best solution has a distance of 0.75. The other solution points have distances in the range [0.75, 0.866] with (μ, σ) = (0.779, 0.0198). With 20 divisions there is only one solution of minimal distance, instead of the four that were obtained for only five divisions. The best solution is [84.399, 112.53, 140.67, 168.8] and has an absolute capacity of 506.4 trains. It is solution 5895. The best solution is interesting because the number of each train type increases linearly; the increase starts from the slowest train type. The increase is also exactly the same, i.e. an amount 28.13. This leads to the conclusion that there might be a general theoretical result or conclusion here. The percentage mix of trains for that solution is (16.67, 22.22, 27.78, 33.33). The percentage for each train type is not equal because each train type has a different effect on capacity. If an equal percentage was enforced (i.e. for complete equity in the number of each train type) then the total absolute capacity is quite less (i.e. 363.57 trains, 60.35 per corridor) and inferior. The other solution points have values in the range [337.6, 669.56] with (μ, σ) = (506.3, 61.55). In summary the results obtained for 20 divisions is quite superior. Those results are not that dissimilar to the 5 division results, but it is far more fine-grained.

The adaptive ECM was also applied and the same results were obtained but at much reduced effort. For example the results were obtained in approximately five minutes instead of 30. The mesh was generated and evaluated in a different way and hence the obtained results (i.e. feasible points) are situated differently; this can be seen in Fig. 8. There appears to be 20 unique groupings (i.e. bands) and this equates to the 20 selected divisions.

In this section the capacity of the network was analysed for the competing corridors scenario. The full network has six corridors and hence six objectives occur. The upper bound for capacity on each corridor is as follows: 
                           
                              
                                 φ
                                 ¯
                              
                              =
                              
                                 (
                                 318.23
                                 ,
                                 241.41
                                 ,
                                 241.41
                                 ,
                                 
                                 241.41
                                 ,
                                 
                                 241.41
                                 ,
                                 
                                 250.43
                                 )
                              
                           
                        .


                        
                           ECM 
                           results: In order to approximate the Pareto frontier a small number of divisions were first investigated. With five divisions along each dimension, there are 55 = 3125 points to be evaluated. Each sub division in each dimension is as follows: δ = (63.65, 48.28, 48.28, 48.28, 48.28, 50.09). Of the 3125 points only 364 resulted in feasible solutions. The solution points have absolute capacity values in the range [318.23, 661.62] with (μ, σ) = (464.72, 74.87). Their Euclidean distance lies in the range [0.674, 0.912] with (μ, σ) = (0.771, 0.044). There are two best solutions, [221.67, 96.56, 48.28, 48.28, 48.28, 100.17] and [221.67, 48.28, 96.56, 48.28, 48.28, 100.17]. Both have the same absolute capacity of 563.25 and a distance of 0.674. A greater number of divisions were then investigated and the results are shown in Fig. 9
                        .

The charts shown in Fig. 9 have a very unique and clearly defined structure. Due to the computational overhead of doing this analysis, 10 divisions were chosen. With 10 divisions, there are 105 = 100, 000 points to be evaluated in order to approximate the Pareto frontier. As the model takes of the order of one second to solve, several days of computing time was required. Each sub division is as follows: δ = (31.82,  24.14,  24.14,  24.14,  24.14,  25.04). Of the 100,000 points only 5173 resulted in feasible solutions. The solution points have absolute capacity values in the range [318.22, 661.62] with (μ, σ) = (468.56, 67.56). Their Euclidean distance lies in the range [0.657, 0.91] with (μ, σ) = (0.762, 0.04). There were two best solutions, [245.81, 72.422, 96.563, 48.282, 24.141, 125.22] and [245.81, 96.563, 72.422, 24.141, 48.282, 125.22]. Both have the same absolute capacity of 612.44 and a distance of 0.6574. The normalised solutions are as follows: [0.77, 0.4, 0.3, 0.1, 0.2, 0.5] and [0.77, 0.3, 0.4, 0.2, 0.1, 0.5]. This is an improvement over the previously obtained values. There is very little difference between these two solutions. The most obvious characteristic is that a greater number of trains were assigned to the first and last corridor. Even though corridor 2–5 have the same absolute capacity, these solutions did not divide the trains equally amongst those corridors. Upon reflection that makes sense because those corridors do not have the same bottleneck sections. The number of trains assigned to 2 and 3 was comparable because those corridors have bottleneck sections located in the same region. The same can be said of corridor 4 and 5.

The adaptive ECM was also applied and the same results were obtained but at much reduced effort. For example the results were obtained in approximately one hour instead of 2 days. The mesh was generated and evaluated in a different way and hence the obtained results (i.e. feasible points) are situated differently; this can be seen in Fig. 10
                        . There appears to be 10 unique groupings (i.e. bands) and this equates to the 10 selected divisions. Of course the same can be said of the charts in Fig. 10.

The solution of the multi-objective model for the competing train and corridor pairing scenario was considered. For this case study the upper bound for each of the objectives is as follows (Table 6):

Since there are six corridors and four train types, there are 24 competing objectives. Even for a very modest number of divisions such as N = 5, the number of points is vast, i.e. 
                           
                              
                                 
                                    (
                                    
                                       N
                                       +
                                       1
                                    
                                    )
                                 
                                 
                                    
                                       K
                                       ¯
                                    
                                    −
                                    1
                                 
                              
                              =
                              
                                 6
                                 23
                              
                              =
                              7.897
                              ×
                              
                                 10
                                 17
                              
                           
                        . This number is too great for OplStudio. A C++ implementation that utilises a proper queue data structure is required but that task is outside the scope of this article. Consequently a meta-heuristic and a separable programing method were implemented to identify only the best solution. The objective is the minimisation of the Euclidean distance from the utopia point. As it is non-linear, those specialist techniques are required. The details of those approaches will be described in due course but first, the obtained solutions will be discussed. The best solution that was obtained during numerical investigations of the proposed meta-heuristic is shown in Table 7
                        .
                        
                     

The distance for the above solution was 0.90273. This solution gives priority to corridor 1, 2, 3 and 6 and to train types 2, 3, and 4. In other words the two longest corridors and the slowest train were not as well represented in the solution—but this makes sense intuitively. The order of the pairs from least to most importance is as follows.

(1,2), (1,3), (1,4), (2,4), (3,4), (1,5), (2,5), (3,5), (4,5), (1,6), (2,3), (3,2), (4,4), (2,2), (4,6), (1,1), (3,3), (3,6), (2,6), (4,2), (4,3), (2,1),
                        (3,1), (4,1)
                     

The underlined parts are those pairs that have non-zero values. Generally speaking, each underlined pair is well represented in the solution. Hence the trade-off between the 24 competing objectives can be said to have been regulated satisfactorily. The quality of the solution obtained by the meta-heuristic was comparable in each run. For example, each solution had a similar Euclidean distance. This is due to a special feature inbuilt into this implementation that will be later discussed. The CPU time for the meta-heuristic was of the order of 10 seconds, which is a fairly trivial amount of time. Hence other advanced features can be inbuilt to improve the search capability.

The meta-heuristic was also tested on the competing train scenario of Section 4.2 to verify its accuracy. The best solutions obtained during numerical investigations are as follows:

                           
                              Trains = [83.33, 90.73, 188.46, 145.28]. Capacity = 508.3. Distance = 0.751797

Trains = [100.525, 95.9348, 152.579, 145.746]. Capacity = 494.785. Distance = 0.751393.

The best solution obtained by the separable programming approach with 200 points in each piecewise linear approximation, is shown in Table 8. This solution is more appropriate because each train and corridor pairing is represented in the solution. The distance for this solution is 0.899, which is slightly smaller (and superior) than the solution of the meta-heuristic. The total capacity however of this solution is reduced, but that is irrelevant because capacity maximisation was not the objective here. The CPU time required to solve the separable programming model using CPLEX was 217.45 seconds (i.e. 3.6 minutes). This model however had 4800 binary decision variables. In comparison to the meta-heuristic this is a significantly greater amount of time, and optimality is not guaranteed either.

A different numbers of points were trialled to see what effect an increased or decreased level of accuracy has, for example on the Euclidean distance and the CPU times. The primary results are summarised in Table 9. In summary the total capacity decreases as the accuracy is reduced. Similarly the number of (train, corridor) pairing with a capacity of zero also increases. The solutions are subtly different in each of the instances shown in Table 9, but overall they are very similar. The model was unable to be solved when the number of points was 250 or greater. After 9100 seconds the solution process terminated due to a lack of memory. The optimality gap at that point was 0.08 percent.


                        
                           Details of the 
                           meta
                           -
                           heuristic
                           :
                         Simulated Annealing (SA) was the chosen meta-heuristic but a local search (LS) meta-heuristic was also tested too. The LS algorithm performed well and can be used after SA to “polish” the final solution. The LS algorithm searches through a defined set of candidate perturbations (i.e. the neighbourhood) and picks the best one (i.e. greedily). After this move, the process is repeated until a maximum number of steps have been taken.

SA was selected primarily because it is superior to LS, it is simple to implement and is very fast computationally. A traditional version of SA with a basic perturbation operator was tested first. However that variant performed poorly because of solution infeasibilities. For example, progress was minimal and no improvement was obtained soon after the algorithm was activated. Perturbing the solution can easily violate the section saturation constraints in the capacity model; hence too many trains can be assigned to travel over each section in the network. The solution infeasibilities were added to the objective function as a penalty, but other more sophisticated strategies can be taken.

To improve SA a dedicated improvement stage was added. For example at each step of SA, a random perturbation is first made. It is accepted or rejected in the traditional way. This allows the search space to be explored. After this operation, a dedicated improvement operation is performed to improve the current solution. It ensures that progress is always made. This approach was taken in Burdett and Kozan (2014) and was shown to be very successful if not essential. This improvement operator was also used in the LS algorithm. After this improvement, SA performed well every time.

The improvement operator individually perturbs each value in the solution by amt and evaluates the effect of that change. The random perturbation operation in comparison only considers one change and accepts or rejects it probabilistically. The perturbation amount was defined as 1.0, 0.1 or 0.01 trains. The most successful value was 0.01 as it allows the solution to be improved more precisely. However at earlier parts of the search it is too fine and too many steps need to be taken to move the solution across the search space. Hence the perturbation amount was changed in the following way:

                           
                              
                                 
                                    
                                       
                                          
                                             am
                                             
                                                t
                                                t
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             λ
                                             .
                                             randf
                                             (
                                             
                                                
                                                   t
                                                
                                                .
                                                
                                                   (
                                                   
                                                      
                                                         e
                                                         
                                                            t
                                                            /
                                                            
                                                               t
                                                               I
                                                            
                                                         
                                                      
                                                      −
                                                      1
                                                   
                                                   )
                                                
                                             
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             where
                                             
                                             λ
                                             =
                                             
                                                (
                                                
                                                   randf
                                                   
                                                      (
                                                      
                                                         1.0
                                                      
                                                      )
                                                   
                                                   <
                                                   0.5
                                                
                                                )
                                             
                                             ?
                                             1
                                             :
                                             −
                                             1
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Initially this value is sufficiently large but as the temperature is reduced, the amount is also decreased, and becomes very small. For example when t
                        I = 100, the range of amt is [17, 0.0003]. Both positive and negative changes have to be included. This is done randomly. The best results were obtained with the following parameters (t
                        I, t
                        F, t
                        R, maxEvals) = (100, 0.1, 0.99, 1000) which respectively are the initial and final temperature, the temperature reduction factor, and the number of evaluations at each temperature step. It should be noted that the starting temperature and the number of evaluations at each temperature step are set quite high. The initial solution was defined as (0, 0, …., 0) and this ensures that there is no penalty initially, however the capacity is low. Defining the initial solution as (50, 50, …., 50) was also successful because it gives a very high value of capacity, but the penalty value is large initially.


                        
                           Separable 
                           programming 
                           details
                           :
                         Assuming that all objectives k are maximization (where k = 1, …24), the Euclidean distance objective is as follows: Minimize 
                           
                              d
                              =
                              
                                 
                                    
                                       ∑
                                       k
                                    
                                    
                                       
                                          (
                                          
                                             1
                                             −
                                             
                                                
                                                   φ
                                                   ˜
                                                
                                                k
                                             
                                          
                                          )
                                       
                                       2
                                    
                                 
                              
                           
                         where 
                           
                              
                                 
                                    φ
                                    ˜
                                 
                                 k
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          φ
                                          k
                                       
                                       −
                                       
                                          
                                             φ
                                             ̲
                                          
                                          k
                                       
                                    
                                    )
                                 
                                 
                                    
                                       
                                          φ
                                          ¯
                                       
                                       k
                                    
                                    −
                                    
                                       
                                          φ
                                          ̲
                                       
                                       k
                                    
                                 
                              
                           
                        . This objective function however is non-linear and hence non-linear optimisation methods are required. To avoid issues of non-linearity, a separable programing approach can be used. The separable programming approach proposed in this article is different to the traditional separable programming formulation found in most Operations Research textbooks. A slightly different and more robust formulation has been provided in order to deal with the possibility of having both minimization and maximization objectives. The convexity of the problem is irrelevant. This alternative formulation does not rely upon an implied adjacency restriction (i.e. condition).

In this approach the objective function is first rewritten as: Minimize 
                           
                              
                                 d
                                 2
                              
                              =
                              
                                 ∑
                                 k
                              
                              
                                 ψ
                                 k
                                 2
                              
                           
                         where 
                           
                              
                                 ψ
                                 k
                              
                              =
                              1
                              −
                              
                                 
                                    φ
                                    ˜
                                 
                                 k
                              
                           
                        . A separable programming approach is well suited to this optimization problem as each of the squared terms 
                           
                              ψ
                              k
                              2
                           
                         in the objective function can be accurately modelled by a piecewise linear function if the number of points (i.e. linear segments) is sufficient. Additional variables and constraints should however be added to the mathematical model to facilitate this approach. In particular this approach requires a set of additional binary decision variables and some constraints for the product of that binary variable with another real valued decision variable. Fortunately that product can be linearized. The exact details can be found in Appendix A.

In this section the capacity expansion of the network was analysed. A cost of 30 million was chosen as the cost to duplicate a one kilometer section of rail. This value is quite indicative of real costs. The capacity of the system when there is no spending is 
                           
                              
                                 A
                                 LB
                              
                              =
                              675.19
                           
                         trains. The maximum spending varies upon the limit designated for track duplications. For example when the duplication limit is two additional tracks per section, the upper bound on total spending is $9367.2. The associated level of capacity for those duplications is 1978.6 trains.


                        
                           ECM 
                           results: In order to approximate the Pareto frontier 100 divisions were selected. The results are shown in Fig. 11 for a duplication limit of two. It is piecewise linear and has many segments, including flat ones. The flat segments show that the absolute capacity cannot be improved for certain increases in spending. Even though the values along the spending axis were incremented by the same amount, the actual solution points that the model identified are not equidistant.

It should be noted that the utopia point occurs at (0, 1978.6), i.e. maximum absolute capacity at no expense. The optimal solution is (1579.4, 3912) and has a Euclidean distance of 0.5179. The normalised objective function values are (0.694, 0.418). The optimal solution is quite interesting as it describes the best trade-off between minimal spending and increasing absolute capacity. This solution specifies that the absolute capacity should be increased from 675.19 trains to 1579.4 (i.e. 2.34 times) at a cost of 3912 million dollars. Further spending beyond this value is not advised because the benefit is not sufficiently great, i.e. spending starts to dominate capacity increase. This solution increases capacity 70 percent of the way, yet spending is only 42 percent of the way.

The Euclidean distances have been shown with regard to each solution point in Fig. 12a. They have also been shown in relation to the values of both metrics. These charts show where the optimal solution is found.

A sensitivity of the track duplication limit was performed next and the results are summarised in Table 10 and in Figs. 13
                         and 14
                        . It is interesting to note the presence of bifurcation points in Fig. 15
                        . When the duplication limit is relaxed then the capacity can be increased more greatly once spending reaches certain thresholds. These are roughly at the following values: $1194, $2523, $4069. The associated levels of capacity are: 940, 1332, 1737 trains. It is also interesting to note that once spending reaches other higher levels (i.e. 
                           
                              S
                              B
                           
                        ) no further increase in capacity is possible.

The normalised values are also shown in Fig. 14. As the track duplication limit is relaxed the front moves closer toward the utopia point in Fig. 14. There is some crossing (i.e. zigzagging) of the lines because the results are scaled with respect to different upper bounds for capacity and spending.

@&#CONCLUSIONS@&#

This article has focussed upon the development of improved capacity models for railways. The competition between different train services, train types, railway corridors and alternative capacity metrics has been comprehensively incorporated, for the first time. This feature is captured by the formulation of various multi-objective mathematical models. This article is necessary because the mix of trains that use railways is variable, and capacity determination and other planning activities should not be based purely upon a static mix. This multi-objective approach is very applicable to real life and is valuable as it performs a sensitivity analysis of capacity for a wide range of parametric values.

The proposed models may be solved to provide a set of candidate solutions (i.e. a Pareto frontier), or else they may be used to identify a single solution that optimizes all objectives as best it can. The proposed models identify the absolute capacity of the railway network and at the same time provide a “scheme” of how the railway network could be most utilised. The scheme is the number of trains of each (train type, corridor) pairing. These schemes can be translated into detailed schedules or else used for other planning purposes, like infrastructure expansion planning.

Several techniques were used to solve the multi-objective models. As the number of objectives can be quite large, an adaptive e-constraint method was implemented that requires less computational effort. It can be implemented easily in the ILOG OplStudio software. As the results form a surface in multiple dimensions, the visualisation of the results is quite problematic. A variety of different charts can be created and these were demonstrated in this article. It should be noted that the order in which the mesh is generated and evaluated has a dramatic effect on the charts.

To identify the optimal solution and not the entire Pareto frontier, a non-linear optimization problem must be solved. For this purpose a hybrid Simulated Annealing algorithm was first developed. This solution technique is quite necessary when the number of objectives is large, as it can be for railway scenarios. This meta-heuristic was shown to be successful as it can obtain high quality solutions that are comparable, if not exactly the same as those provided by OplStudio, in a very short period of time. An alternative, perhaps better approach however, is to use separable programming techniques to avoid issues of non-linearity. This article has shown how this can be done. Computational experiments have shown that it is successful and the additional binary decision variables in the model do not necessarily make the capacity models intractable when the number of points is chosen intelligently. For increased accuracy the number of points in each piecewise linear function could be increased, however this can increase the size of the problem significantly, thus making the model very time consuming to solve. For practical applications the Simulated Annealing approach is more than sufficient. The separable programming approach is however warranted when an optimal and more generic theoretical result is sought.

Let |P| be the number of points in each piecewise linear function and let P be the set of points where the function has been evaluated. Let x
                     
                        k, p
                      be used to describe values of 
                        
                           
                              φ
                              ˜
                           
                           k
                        
                      between [0,1]. If Δ = 1/|P| then the pth value is x
                     
                        k, p
                      = Δ.p. Similarly let y
                     
                        k, p
                      describe different values of 
                        
                           ψ
                           k
                           2
                        
                      where y
                     
                        k, p
                      = (1 − x
                     
                        k, p
                     )2  ∀p ∈ P. Let δ
                     
                        k, p
                      be a binary decision parameter that equals one for objective k if the value is chosen from within the pth interval. Let αk
                      be the relative position within the chosen interval.

Let γ
                     
                        k, p
                      and β
                     
                        k, p
                      respectively be the y and x value within interval p for objective k. It should be noted that γ
                     
                        k, p
                      = β
                     
                        k, p
                      = 0 if δ
                     
                        k, p
                      = 0. Otherwise the correct value should be Y
                     
                        k, p
                      and X
                     
                        k, p
                      respectively. The sum of the γ
                     
                        k, p
                      and β
                     
                        k, p
                      values define the correct 
                        
                           ψ
                           k
                           2
                        
                      and ψk
                      values. The following model can be defined:

                        
                           (28)
                           
                              
                                 Minimize
                                 
                                 
                                    ∑
                                    k
                                 
                                 
                                    ψ
                                    k
                                    2
                                 
                              
                           
                        
                     
                  

Subject to
                        
                           (29)
                           
                              
                                 
                                    δ
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 ∈
                                 
                                    {
                                    
                                       0
                                       ,
                                       1
                                    
                                    }
                                 
                                 ∀
                                 p
                                 ,
                                 k
                                 
                                 
                                 
                                 
                                    [
                                    
                                       Binary
                                       
                                       decisions
                                    
                                    ]
                                 
                              
                           
                        
                     
                     
                        
                           (30)
                           
                              
                                 
                                    ∑
                                    p
                                 
                                 
                                    δ
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 =
                                 1
                                 
                                 ∀
                                 k
                                 ∈
                                 K
                                 
                                 
                                 
                                 
                                    [
                                    
                                       Select
                                       
                                       value
                                       
                                       from
                                       
                                       within
                                       
                                       interval
                                    
                                    ]
                                 
                              
                           
                        
                     
                     
                        
                           (31)
                           
                              
                                 0
                                 ≤
                                 
                                    α
                                    k
                                 
                                 ≤
                                 1
                                 
                                 ∀
                                 k
                                 
                                 
                                 
                                 
                                 
                                    [
                                    
                                       Relative
                                       
                                       position
                                       
                                       within
                                       
                                       interval
                                    
                                    ]
                                 
                              
                           
                        
                     
                     
                        
                           (32)
                           
                              
                                 
                                    ψ
                                    k
                                    2
                                 
                                 =
                                 
                                    ∑
                                    p
                                 
                                 
                                    γ
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 
                                 ∀
                                 k
                                 
                                 
                                 
                                 
                                 
                                 
                                    [
                                    
                                       Define
                                       
                                       the
                                       
                                       correct
                                       
                                       value
                                    
                                    ]
                                 
                              
                           
                        
                     
                     
                        
                           (33)
                           
                              
                                 
                                    ψ
                                    k
                                 
                                 =
                                 1
                                 −
                                 
                                    ∑
                                    p
                                 
                                 
                                    β
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 
                                 ∀
                                 k
                                 
                                 
                                 
                                 
                                 
                                    [
                                    
                                       Define
                                       
                                       the
                                       
                                       correct
                                       
                                       value
                                    
                                    ]
                                 
                              
                           
                        
                     
                     
                        
                           (34)
                           
                              
                                 
                                    
                                       
                                          ψ
                                          k
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      φ
                                                      k
                                                   
                                                   −
                                                   
                                                      
                                                         φ
                                                         ̲
                                                      
                                                      k
                                                   
                                                
                                                )
                                             
                                             
                                                
                                                   
                                                      φ
                                                      ¯
                                                   
                                                   k
                                                
                                                −
                                                
                                                   
                                                      φ
                                                      ̲
                                                   
                                                   k
                                                
                                             
                                          
                                          
                                          ∀
                                          k
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          [
                                          
                                             
                                                Calculate
                                                
                                                the
                                                
                                             
                                             k
                                             
                                                th
                                                
                                                normalised
                                                
                                                objective
                                                
                                                function
                                                
                                                value
                                             
                                          
                                          ]
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (35)
                           
                              
                                 0
                                 ≤
                                 
                                    γ
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 ≤
                                 
                                    Y
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 
                                 ∀
                                 k
                                 ,
                                 p
                                 
                                 
                                 
                                 
                                 
                                 
                                    [Linearization
                                    
                                    for
                                 
                                 
                                 
                                    γ
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 =
                                 
                                    δ
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 
                                    Y
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 
                                    ]
                                 
                              
                           
                        
                     
                     
                        
                           (36)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             Y
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          −
                                          
                                             
                                                Y
                                                ¯
                                             
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   δ
                                                   
                                                      k
                                                      ,
                                                      p
                                                   
                                                
                                             
                                             )
                                          
                                          ≤
                                          
                                             γ
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          ≤
                                          
                                             δ
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          
                                             
                                                Y
                                                ¯
                                             
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          ∀
                                          k
                                          ,
                                          p
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          
                                          
                                          [
                                          
                                             Linearization
                                             
                                             for
                                          
                                          
                                          
                                             γ
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          =
                                          
                                             δ
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          
                                             Y
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          ]
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (37)
                           
                              
                                 0
                                 ≤
                                 
                                    β
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 ≤
                                 
                                    X
                                    
                                       k
                                       ,
                                       p
                                    
                                 
                                 
                                 ∀
                                 k
                                 ,
                                 p
                                 
                                 
                                 
                                 
                                 
                                    [
                                    
                                       Linearization
                                       
                                       for
                                    
                                    
                                    
                                       β
                                       
                                          k
                                          ,
                                          p
                                       
                                    
                                    =
                                    
                                       δ
                                       
                                          k
                                          ,
                                          p
                                       
                                    
                                    
                                       X
                                       
                                          k
                                          ,
                                          p
                                       
                                    
                                    ]
                                 
                              
                           
                        
                     
                     
                        
                           (38)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             X
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          −
                                          
                                             
                                                X
                                                ¯
                                             
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   δ
                                                   
                                                      k
                                                      ,
                                                      p
                                                   
                                                
                                             
                                             )
                                          
                                          ≤
                                          
                                             β
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          ≤
                                          
                                             δ
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          
                                             
                                                X
                                                ¯
                                             
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          
                                          ∀
                                          k
                                          ,
                                          p
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          
                                          
                                          [
                                          
                                             Linearization
                                             
                                             for
                                          
                                          
                                          
                                             β
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          =
                                          
                                             δ
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          
                                             X
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          ]
                                       
                                    
                                 
                              
                           
                        
                     
                  

Plus railway capacity constraints

Where

                        
                           
                              
                                 
                                    
                                       
                                          Y
                                          
                                             k
                                             ,
                                             p
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             α
                                             k
                                          
                                          
                                             y
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          +
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   α
                                                   k
                                                
                                             
                                             )
                                          
                                          
                                             y
                                             
                                                k
                                                ,
                                                p
                                                −
                                                1
                                             
                                          
                                          
                                          ∀
                                          p
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          
                                             [
                                             
                                                Calculate
                                                
                                                value
                                                
                                                within
                                                
                                                the
                                                
                                                chosen
                                                
                                                interval
                                             
                                             ]
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    
                                       
                                          X
                                          
                                             k
                                             ,
                                             p
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             α
                                             k
                                          
                                          
                                             x
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          +
                                          
                                             (
                                             
                                                1
                                                −
                                                
                                                   α
                                                   k
                                                
                                             
                                             )
                                          
                                          
                                             x
                                             
                                                k
                                                ,
                                                p
                                                −
                                                1
                                             
                                          
                                          
                                          ∀
                                          p
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          
                                             [
                                             
                                                Calculate
                                                
                                                value
                                                
                                                within
                                                
                                                the
                                                
                                                chosen
                                                
                                                interval
                                             
                                             ]
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    
                                       
                                          
                                             X
                                             ¯
                                          
                                          
                                             k
                                             ,
                                             p
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          max
                                          
                                             (
                                             
                                                
                                                   x
                                                   
                                                      k
                                                      ,
                                                      p
                                                      −
                                                      1
                                                   
                                                
                                                ,
                                                
                                                   x
                                                   
                                                      k
                                                      ,
                                                      p
                                                   
                                                
                                             
                                             )
                                          
                                          
                                          and
                                          
                                          
                                             
                                                Y
                                                ¯
                                             
                                             
                                                k
                                                ,
                                                p
                                             
                                          
                                          =
                                          max
                                          
                                             (
                                             
                                                
                                                   y
                                                   
                                                      k
                                                      ,
                                                      p
                                                      −
                                                      1
                                                   
                                                
                                                ,
                                                
                                                   y
                                                   
                                                      k
                                                      ,
                                                      p
                                                   
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             [
                                             
                                                Calculate
                                                
                                                upper
                                                
                                                bounds
                                             
                                             ]
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

The linearization of γ and β (i.e. Eqs. (35)–(38)) is from the AIMMS 3.13 (2014) integer programming tricks document in the product of variables section (i.e. product of a binary and a continuous variable). For more details that document should be consulted.

@&#REFERENCES@&#

