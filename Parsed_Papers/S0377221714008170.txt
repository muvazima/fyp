@&#MAIN-TITLE@&#Time-dependent MEXCLP with start-up and relocation cost

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We introduce a new time-dependent probabilistic location model for Emergency Medical Service (EMS) vehicles.


                        
                        
                           
                           We test the model on both random and real data.


                        
                        
                           
                           We compare time-independent and time-dependent input.


                        
                        
                           
                           We perform a sensitivity analysis.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Integer optimization models

Ambulance base locations

Case study

@&#ABSTRACT@&#


               
               
                  In this paper we introduce a time-dependent probabilistic location model for Emergency Medical Service (EMS) vehicles. The goal is to maximize the expected coverage throughout the day and at the same time minimize the number of opened facilities and the number of relocations. We apply our model to both a randomly generated test instance and to data from the city of Amsterdam, the Netherlands. We see that time-dependent models can result in better solutions than time-independent models. Furthermore, we see that the current set of base locations in Amsterdam is not optimal. We can obtain higher coverage with even less base locations.
               
            

@&#INTRODUCTION@&#

Emergency Medical Services (EMS) are concerned with providing adequate care to emergency patients. When a call arrives at the dispatch center, an ambulance is assigned to the call. The probability of survival of a patient that is involved in an accident is highly dependent on the time it takes before an ambulance arrives at the scene (Larsen et al., 1993). Consequently, it is of great importance that EMS vehicles respond as quickly as possible to the calls. In most countries, there is a certain target response time in which a minimum fraction of the calls must be reached. In the Netherlands, for example, 95 percent of all high priority calls must be reached within 15 minutes response time. In order to meet this requirement, it is important to determine good locations for the ambulances. The objective of this research is to maximize the expected number of calls that is reached within the target response time. To do so, it is important to take the availability of ambulances into account. If an ambulance is dispatched to a call, it is not available for other calls. This can result in lower coverage, in particular in the region that was covered by the dispatched ambulance. One way of taking this into account is by requiring back-up coverage. Another way is to use the expected coverage, which is calculated using the average fraction of time an ambulance is available. In this paper we will maximize the expected coverage. When we study the datacollected from the EMS system in the Netherlands we see that the characteristics of the system vary significantly over the day. Travel speeds, available ambulances, service times, and demand vary over the day. By ignoring these variations we miss certain aspects of reality, which can result in sub-optimal solutions. Therefore, we consider a time-dependent location model in this paper.

One of the first ambulance location models in the literature is the Location Set Covering Problem introduced by Toregas et al. (1971). This model minimizes the required number of ambulances to cover all demand with at least one ambulance. A demand point is said to be covered by an ambulance, if the ambulance can reach that demand point within the target response time. Another early model, introduced by Church and ReVelle (1974), is the Maximum Coverage Location Model. This model maximizes the covered demand given a limited number of ambulances. Both early models ignore the fact that ambulances are not available when they are dispatched to a call. One model that does take this unavailability into account is the Double Standard Model introduced by Gendreau et al. (1997). This model maximizes the demand that is covered by at least two ambulances. Although this model recognizes the unavailability of ambulances, there is no guarantee that an ambulance is available when a call arrives. To overcome this problem probabilistic models are required. Daskin (1983) introduced the Maximum Expected Coverage Location Model (MEXCLP). This model assumes that an ambulance is unavailable a fraction q of the time, q is called the busy fraction. The expected coverage of a demand point that is covered by k ambulances is then, Ek
                         = 1 − qk
                        , which is the probability of at least one success in k independent Bernoulli experiments. The marginal coverage of the kth ambulance is

                           
                              
                                 
                                    
                                       E
                                       k
                                    
                                    −
                                    
                                       E
                                       
                                          k
                                          −
                                          1
                                       
                                    
                                    =
                                    
                                       (
                                       1
                                       −
                                       
                                          q
                                          k
                                       
                                       )
                                    
                                    −
                                    
                                       (
                                       1
                                       −
                                       
                                          q
                                          
                                             k
                                             −
                                             1
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       (
                                       
                                          q
                                          
                                             k
                                             −
                                             1
                                          
                                       
                                       −
                                       
                                          q
                                          k
                                       
                                       )
                                    
                                    =
                                    
                                       (
                                       1
                                       −
                                       q
                                       )
                                    
                                    
                                       q
                                       
                                          k
                                          −
                                          1
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The model can be written as follows:

                           
                              (1)
                              
                                 
                                    max
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          V
                                       
                                    
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       p
                                    
                                    
                                       d
                                       i
                                    
                                    
                                       (
                                       1
                                       −
                                       q
                                       )
                                    
                                    
                                       q
                                       
                                          k
                                          −
                                          1
                                       
                                    
                                    
                                       y
                                       
                                          i
                                          k
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          
                                             W
                                             i
                                          
                                       
                                    
                                    
                                       x
                                       j
                                    
                                    ≥
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       p
                                    
                                    
                                       y
                                       
                                          i
                                          k
                                       
                                    
                                    
                                    i
                                    ∈
                                    V
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          W
                                       
                                    
                                    
                                       x
                                       j
                                    
                                    ≤
                                    p
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       x
                                       j
                                    
                                    ∈
                                    N
                                 
                              
                           
                        
                     

The decision variables in this model are xj
                         and yik
                        , where xj
                         is the number of ambulances located at location j and yik
                         is 1 if and only if demand point i is covered by at least k ambulances. The sets V and W are the sets of demand points and potential base locations, respectively. Wi
                        ⊆W is the set of locations that can cover demand point i ∈ V within a certain coverage standard r. The maximal number of ambulances that can be used is denoted by p.

The objective is to maximize the total expected coverage over all demand points. Therefore, the marginal coverage of the kth ambulance multiplied by the demand of demand point i, di
                        , is added to the objective if demand point i is covered by at least k ambulances. Constraints (2) make sure that a demand point is covered by at least k ambulances if at least k ambulances can reach this demand point within the coverage standard. Constraint (3) ensures that no more than p ambulances are used.

Most work in the literature assumes that the travel-times and the demand are stable during the day. In general this is not the case. Therefore, we consider a time-dependent location model in this paper. Two papers are of particular interest for our work.


                           Repede and Bernardo (1994) introduce the Time-dependent Maximum Expected Coverage Location Problem (TIMEXCLP), which is an extension of MEXCLP. They introduce multiple time periods and maximize the expected coverage over the day. Because there is no relation between the different time periods, the problem can be solved independently for each time period. As a result, there can be huge difference in the location of the ambulances between the different time periods, which can result in high costs for the EMS provider.

Another time-dependent model is introduced by Schmid and Doerner (2010). This model is an extension of the Double Standard Model and assumes time-dependent travel times. To overcome the above-mentioned problem they add a penalty for the number of relocations between time periods. A relocation means that an ambulance is located at different base locations in consecutive time periods. As a result, the ambulance must be relocated between the two time periods. In this paper we will allow relocations with a penalty cost.

We consider a time-dependent version of MEXCLP in which we define a set 
                        
                           T
                           =
                           {
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           T
                           }
                        
                      of T time periods. Compared to Schmid and Doerner we do not only assume time-dependent travel times, but also time-dependent demand and ambulance availability. As a consequence, we no longer have one demand di
                      for each demand point i, but we have dit
                      which is the demand generated from demand point i during time period t. The available number of ambulances during time period t is denoted by pt
                     . We also have to adjust the decision variables x and y. Variable xjt
                      will now denote the number of ambulances located at base location j during time period t, while yikt
                      will indicate whether demand point i is covered by at least k ambulances during time period t. As a result of the time-dependent demand, service time, and ambulance availability, we also have a time-dependent busy fraction, qt
                     . The set of base locations that can cover demand point i in time period t is denoted by 
                        
                           W
                           i
                           t
                        
                     . In the model, we take the relation between the different time periods into account by adding a penalty for the number of relocations between the time periods. Therefore, we introduce the binary variable rijt
                      which indicates whether an ambulance is relocated from location i to location j between time period t and t + 1. The penalty for a relocation is γ. In practice there are costs involved with making use of a base location. These costs occur when a base location is used during at least one time period. We add a penalty, β, for each location that is used. In practice these cost can vary per base location. For example, it might be cheaper to make use of an existing base location than to build a new one. This can be modeled by a location-dependent βj
                     . To keep track of the opened base locations we introduce the binary variable zj
                      indicating whether base location j is used during at least one time period. To ensure a correct value for these variables, we need so-called big-M constraints. These constraints make use of a constant M, which value is large.

The model can be formulated as follows:

                        
                           (5)
                           
                              
                                 
                                    
                                       
                                          max
                                          
                                             ∑
                                             
                                                t
                                                ∈
                                                T
                                             
                                          
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                V
                                             
                                          
                                          
                                             ∑
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                p
                                                t
                                             
                                          
                                          
                                             d
                                             
                                                i
                                                t
                                             
                                          
                                          
                                             (
                                             1
                                             −
                                             
                                                q
                                                t
                                             
                                             )
                                          
                                          
                                             
                                                
                                                   q
                                                   t
                                                
                                             
                                             
                                                k
                                                −
                                                1
                                             
                                          
                                          
                                             y
                                             
                                                i
                                                k
                                                t
                                             
                                          
                                          −
                                          β
                                          
                                             ∑
                                             
                                                j
                                                ∈
                                                W
                                             
                                          
                                          
                                             z
                                             j
                                          
                                          −
                                          γ
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                W
                                             
                                          
                                          
                                             ∑
                                             
                                                j
                                                ∈
                                                W
                                             
                                          
                                          
                                             ∑
                                             
                                                t
                                                ∈
                                                T
                                             
                                          
                                          
                                             r
                                             
                                                i
                                                j
                                                t
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       
                                          W
                                          
                                             i
                                          
                                          t
                                       
                                    
                                 
                                 
                                    x
                                    
                                       j
                                       t
                                    
                                 
                                 ≥
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       p
                                       t
                                    
                                 
                                 
                                    y
                                    
                                       i
                                       k
                                       t
                                    
                                 
                                 
                                 i
                                 ∈
                                 V
                                 ,
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       W
                                    
                                 
                                 
                                    x
                                    
                                       j
                                       t
                                    
                                 
                                 ≤
                                 
                                    p
                                    t
                                 
                                 
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    ∑
                                    
                                       t
                                       ∈
                                       T
                                    
                                 
                                 
                                    x
                                    
                                       j
                                       t
                                    
                                 
                                 ≤
                                 M
                                 
                                    z
                                    j
                                 
                                 
                                 j
                                 ∈
                                 W
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    x
                                    
                                       j
                                       t
                                    
                                 
                                 +
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       W
                                    
                                 
                                 
                                    r
                                    
                                       i
                                       j
                                       t
                                    
                                 
                                 −
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       W
                                    
                                 
                                 
                                    r
                                    
                                       j
                                       i
                                       t
                                    
                                 
                                 =
                                 
                                    x
                                    
                                       j
                                       (
                                       t
                                       +
                                       1
                                       )
                                    
                                 
                                 
                                    
                                    t
                                    ∈
                                    T
                                    ∖
                                    T
                                    ,
                                    j
                                    ∈
                                    W
                                 
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    x
                                    
                                       j
                                       T
                                    
                                 
                                 +
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       W
                                    
                                 
                                 
                                    r
                                    
                                       i
                                       j
                                       T
                                    
                                 
                                 −
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       W
                                    
                                 
                                 
                                    r
                                    
                                       j
                                       i
                                       T
                                    
                                 
                                 =
                                 
                                    x
                                    
                                       j
                                       1
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (11)
                           
                              
                                 
                                    x
                                    
                                       j
                                       t
                                    
                                 
                                 ,
                                 
                                    r
                                    
                                       i
                                       j
                                       t
                                    
                                 
                                 ∈
                                 N
                              
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    y
                                    
                                       i
                                       k
                                       t
                                    
                                 
                                 ,
                                 
                                    z
                                    j
                                 
                                 ∈
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                              
                           
                        
                     
                  

The objective function of this model consists of three terms. The first term calculates the expected coverage over all demand points and all time periods. The second term penalizes the number of opened locations. Finally, the third term subtracts a penalty for the number of relocations between time periods. Constraints (6) and (7) correspond to constraints (2) and (3) from MEXCLP. Constraints (8) state that the number of ambulances at a location can only be positive if the location is opened, i.e. zj
                      = 1. For these constraints to be valid, M should have at least the value of the left hand side. However, a too high value for M will result in a weak LP relaxation and an increase in computation time. In Section 4 we address how to determine appropriate values for M. Constraints (9) and (10) ensure that the rijt
                     ’s have the correct value. In case the number of ambulances is not constant over the day, we need a dummy base location to which off-duty ambulances can be assigned.

To test our model, we apply it to two different test instances. First, we will analyze the results for a randomly generated test instance with 500 demand points and 50 possible base locations. Afterward, we will apply the model to a real-life instance for the region of Amsterdam, the Netherlands. This instance consists of 161 demand points.

For this test instance we generate 500 demand points within a unit square. Both the x and the y coordinates are randomly generated between 0 and 1. One might argue that this is not realistic as everything is uniform. We partly solve this by generating different call rates for each demand point. For more realistic test instances we refer to the case study in Section 3.2. The first 50 demand points are considered available as a potential base location. We divide the day in 6 time periods of 4 hours. The characteristics of the different time periods are shown in Table 1
                           .

The call intensity of a time period is the deviation from the average demand during that time period. So, during period 1 the average number of calls per hour is only 60 percent of the average over the entire day. These fluctuations in the call rates correspond roughly with the fluctuations we see in the Netherlands. The travel times shown in column 3 show the deviation from the average travel time during a time period. In period 1 it takes on average 20 percent less time to travel from A to B. Schmid and Doerner (2010) state that the travel speed can vary up to 25 percent from the daily average. The daily average is determined by the Euclidean distance multiplied by a constant, which in this case is 35. The busy fractions are calculated using the demand, the number of ambulances, and the call duration. The call duration is the average time an ambulance is unavailable after being dispatched to a call. This time does not include the time to return to the base, since ambulances are available for dispatching during that time. In these instance, the call duration is considered to be constant at 50 minutes. This is close to the average call duration in the Netherlands. In the case study, we incorporate call durations that are time-dependent. Furthermore, for each demand point we generated the demand for the different time periods. Each demand point has a specific call rate which is the average number of calls per hour. The mean of the demand during a time period is equal to this call rate multiplied by the call intensity of the time period. Because the time-dependency is not necessarily the same for each demand point we generate the demand uniformly between 85 percent and 115 percent of the mean.

@&#RESULTS@&#

All computations were executed on a 2.9 GHz Intel(R) Core(TM) i7-3520M laptop with 8 GB of RAM. We used CPLEX 12.5 as our solver (ILOG, 2009). The penalty for opening a new facility is set to 0.5 percent of the total number of calls and the penalty for relocating an ambulance is set to 0.005 percent of the total number of calls. These values imply that a new base location is used only if the additional coverage of that base location is at least 0.5 percentage points. These values for the penalties turned out to correspond with good solutions in practice.

The results in Table 2
                            show that the coverage varies significantly over the day. The fifth column shows that in total we open six base locations and that in periods 1, 4 and 6 we use only five of these six locations. The last column shows that a few relocations are required to adjust for the changing characteristics over the day. The computation time for this specific instance was 168 seconds. We also computed the solution of different test instances that were generated in the same way. All these instances could be solved to optimality within our set time limit of 300 seconds.

In order to analyze the importance of the time-dependent aspects of the model, we conducted the following experiment. We first solve the MEXCLP problem assuming that the travel speed, the demand and the busy fractions are constant during the day. For all these characteristics, we take the average over all time periods in the time-dependent case. The optimal solution for this problem is analyzed in the time-dependent environment so that we get the solution value and the expected coverage. We compare this with the solution we get if we take the time-dependency into account in the optimization. Table 3
                            shows that by not taking into account the time-dependency of the system, we can lose the coverage of 1.35 percent of the calls. This solution requires less relocations, but still we obtain a better objective value by taking into account the time-dependency.

Another result of not taking into account the time-dependent aspects is that the expected coverage might be over- or underestimated. Fig. 1
                            shows that the coverage during the night hours is underestimated, while the coverage during the day is overestimated. The difference is up to 13 percentage points.

The previous results are based on a maximum travel time of 12 minutes. This is based on a response time of 15 minutes minus a pre-trip delay of 3 minutes. This pre-trip delay is the time between the moment that the call arrives at the dispatch center and the moment that the ambulance leaves the station. So, in the previous computations we obtain complete coverage if an ambulance is available within 12 minutes drive time, while we obtain zero coverage if the closest available ambulance is further away than 12 minutes drive time. Although this is not reflected in the objective, better service can be provided if an ambulance reaches the patient in less than the required 15 minutes. Therefore, it is interesting to know how many calls are still covered within 13 minutes response time. On the other hand, to see how badly the uncovered demand is served it is interesting to know how many calls can be reached within, for example, 17 minutes. To get insight in this we conducted the following experiment. We maximized the expected coverage within 15 minutes response time and evaluated that solution with a target response time of 13 and 17 minutes. The results are shown in Table 4
                           . We see that although our goal is to cover demand points within 15 minutes we can reach more than 80 percent of all calls within 13 minutes. Fig. 2
                            shows the coverage for all time thresholds between 1 and 30 minutes. When the performance on different response time targets is considered to be insufficient, one might consider a weighted objective between the coverage within different targets.

For our case study, we considered the region of Amsterdam, the Netherlands. The total population of the region Amsterdam is about 1.2 million. We derive 161 demand points based on 4-digit postal codes. We assume that each demand point is also available as a potential base location. For the average travel times between the different nodes, we use a travel time model developed by the RIVM
                              1
                           
                           
                              1
                              RIVM: Dutch National Institute for Public Health and the Environment.
                            
                           (Kommer and Zwakhals, 2008). In the model, the driving speed on different road types is estimated based on historical travel speeds of ambulances. Based on these estimations, the average travel times between the nodes are computed. We also have historical data regarding the number of calls per part of the day. For each 2-hour block, we have the number of calls per demand point in the years 2008–2011. The busy fraction is based on data about the average call duration, the available number of ambulances and the number of calls. All these components are considered to be time-dependent. Hence, also the busy fractions are time-dependent. We do not have a time-dependent travel time model yet and therefore we use the average drive time as an indication of the travel speed during a time period. By doing so, the travel time between two points varies between 97 percent and 108 percent of the average travel speed. The characteristics of the different time periods are shown in Table 5
                           .

@&#RESULTS@&#

To get insight in the possible improvement we can achieve, we evaluated the model twice. First, we solved the model to find the optimal set of base locations and the assignment of ambulances to the base locations. After that, we fixed the base locations to be the locations that are currently in use in the region of Amsterdam. Currently, nine different base locations are used in Amsterdam. We search for the optimal allocation of the ambulances over the existing base locations. Table 6
                            shows the results for the two experiments. We see that the current set of base locations is not optimal. We can obtain a higher expected coverage with even less base locations. Computing the optimal solution took CPLEX 43 seconds, while computing the optimal distribution of the ambulances given the current set of base locations required less than a second.

For further analysis of the solutions, we take a look at the geographical distribution of the base locations. Therefore, the selected base locations are plotted on a map of the region in Fig. 3
                           . Fig. 3(a) shows the location of the current base locations, while the optimal base locations are shown in Fig. 3(b). One observation we can make after having a look at the maps is that base locations tend to be located further from the border of the region. In fact, ambulance locations tend to be located as far away from the border as possible, while still covering the demand points at the border. The reason for that is that no value is added in the objective for the coverage of demand points of another region. As a result, the response time to a call at the border is in general longer than the response time to a call in the center of the region. Another observation that can be made is that not all demand points can be reached within the time limit. It appears that a better objective value can be obtained if some demand points are left uncovered in order to provide back-up coverage to others. In the next section, we have a closer look at this issue.

One of the characteristics of a probabilistic model is that a coverage of 95 percent does not mean that 5 percent of the demand points is not covered. In fact, a part of the 5 percent is not covered because of ambulance unavailability. For example, given a busy fraction of 0.5, a demand point that is covered by two ambulances is covered for 75 percent. From a fairness perspective it is better to have 100 percent of the demand covered for 95 percent than 95 percent of the demand covered for 100 percent. For that reason, it is interesting to investigate what fraction of demand is not covered at all. The second column of Table 7
                            shows the number of demand points without coverage during each time period. The fraction of all calls in that time period that is not covered at all is shown in column 3. In the last row we see that 18 demand points are uncovered during at least one time period and that only 0.62 percent of the calls is uncovered. The fraction of calls that is uncovered because of ambulance unavailability is 1.76 percent.

It may be considered as unfair that some demand points are uncovered in order to give back-up coverage to other demand points. From this point of view, it might be interesting to see what coverage can still be obtained if we require all demand points to be covered by at least one ambulance in each time period. Therefore, we conducted an experiment in which we added constraints (13) to the model.

                              
                                 (13)
                                 
                                    
                                       
                                          ∑
                                          
                                             j
                                             ∈
                                             
                                                W
                                                
                                                   i
                                                
                                                t
                                             
                                          
                                       
                                       
                                          x
                                          
                                             j
                                             t
                                          
                                       
                                       ≥
                                       1
                                       
                                       i
                                       ∈
                                       V
                                       ,
                                       t
                                       ∈
                                       T
                                    
                                 
                              
                           
                        

We see (Table 8
                           ) that by requiring each demand point to be covered at least once in each time period we lose about 0.5 percent of coverage and we need 4 additional base locations. Furthermore, we see that the number of relocations increases significantly.

The main difference between our model and the TIMEXCLP model introduced by Daskin (1983) is that we take the relationship between time periods into account. We do this by adding a penalty for opened locations and relocations. To examine the impact of these penalties we compare the results of our model with the result we get without the penalties. In Table 9
                        , we see that without the penalties we can increase coverage by 0.69 percentage points. However, we need 12 additional locations and 37 additional relocations. Clearly, this is not a good solution in practice.

In this section we address some issues related to the computations. In the implementation we made some adjustments to the mathematical formulation of the model in order to reduce the number of variables and decrease the upper bound obtained by the LP relaxation of the model. First, we replaced the variables rijt
                      by two variables r
                     
                        i1t
                      and r
                     
                        i2t
                      indicating the number of relocations to and from base location j after time period t, respectively. By doing so, we only obtain the number of relocations and not the specific relocations that are required. This can be done, because we assume the penalty for relocations to be independent of the base locations that are involved in the relocations. This implementation reduces the number of r-variables for the Amsterdam case from 311,052 to 3864.

To model the variables zj
                     , we need some big-M constraints. This type of constraints can result in a high integrality gap, especially when M is required to have high values. In our model, M can be bounded by the maximum number of ambulances that can be located at one base location. In practice this can be as big as the maximum number of ambulances available, but it is clear that it is not optimal to locate all ambulances at one location, we can do with a smaller M. In our experiments, we saw that the number of ambulances at one location in one time period never exceeds 5. To be on the safe side we bound that number by 7. As a consequence we can use 7*12 = 84 as value for M. However, we can change the formulation in order to get an even tighter value for M. Therefore, we will replace constraints (8) by constraints (14).

                        
                           (14)
                           
                              
                                 
                                    x
                                    
                                       j
                                       t
                                    
                                 
                                 ≤
                                 M
                                 
                                    z
                                    j
                                 
                                 
                                 j
                                 ∈
                                 W
                                 ,
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                  

In this formulation it is sufficient to set M to 7. So in the LP relaxation we will see no lower fractions for zj
                      than 1/7. In most cases, we see that multiple ambulances are located at each opened base location we get even better values for zj
                     . Replacing constraints (8) by (14) results in better LP relaxations when the number of ambulances at a base location varies over the day.

We might even consider to introduce a base location dependent value for M, say Mj
                     . This can be used to model practical limitations of specific base locations. For example, some base locations might not have enough capacity for more than a certain number of ambulances. Furthermore, we can use the base location dependent Mj
                      for purely computational reasons. For base locations in rural areas, for example, it is known in advance that no optimal solution will locate more than 2 or 3 ambulances there. We can improve the LP relaxation by using a lower value Mj
                      for these locations.

For our computations we used CPLEX 12.5 with a time limit of 5 minutes. It turned out that all instances could be solved to optimality within this time limit.

In this paper, we introduced a time-dependent probabilistic location model for Emergency Medical Service vehicles. We consider time-dependent travel times, demand and ambulance availability. In comparison with the original time-dependent MEXCLP we penalize the number of base locations and the number of relocations. By doing so, we make sure that the relationship between different time periods is taken into account. Computational results show that this is of great importance in order to get good solutions. Furthermore, we have seen that considering time-dependency can result in better solutions. For our test instance, the expected coverage increases from 90.15 percent to 91.50 percent. We also applied the model to the region of Amsterdam, the Netherlands. We see that the current location of the ambulances is not optimal with respect to our model and we can obtain a higher coverage with even less base locations by applying the solution from our model. If we want to ensure that each demand point is covered at least once in each time period we need more locations and relocations and obtain a lower expected coverage. The ambulance providers should make a trade-off between a fair solution and a solution with a higher total expected coverage.

For future research, we would like to take a closer look at what happens at the border of the considered region. We see that base locations tend to be located far away from the border, which result in longer travel times to calls at the border of the region. This problem does not only occur in our model, but in most models that use the concept of a target coverage standard. Furthermore, we would like to extend our case study with three aspects. First, it might be interesting to incorporate variations between days of the week or times of the year. These variations can be accounted for by the same model, where a time period has a different interpretation. Second, we would like to examine the effect of a location dependent penalty βj
                      to take into account the preferences of the EMS providers. For example, we could have a lower penalty for using the current base locations than we have for new base locations. Finally, we would like to improve our travel time model so that we can define more demand points and give better estimations for the time-dependency in the travel times.

@&#ACKNOWLEDGEMENT@&#

This research was financed in part by Technology Foundation STW under contract 11986, which we gratefully acknowledge. Furthermore, we thank Ambulance Amsterdam for providing the data used in the case study.

@&#REFERENCES@&#

