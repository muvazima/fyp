@&#MAIN-TITLE@&#An integrated approach for earthwork allocation, sequencing and routing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An integrated earthwork allocation, sequencing and routing problem was solved.


                        
                        
                           
                           The solution approach is graph theoretic. A digraph models the dynamically changing terrain.


                        
                        
                           
                           The digraph is continually altered and is evaluated to quantify the real cost and effort of haulage.


                        
                        
                           
                           Parallel processing of the digraph is very effective and greatly reduces computational time.


                        
                        
                           
                           Solutions are constructed by advanced constructive algorithms and meta-heuristic techniques.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Earthworks

Road design

Terrain modelling

Meta-heuristics

@&#ABSTRACT@&#


               
               
                  Planning techniques for large scale earthworks have been considered in this article. To improve these activities a “block theoretic” approach was developed that provides an integrated solution consisting of an allocation of cuts to fills and a sequence of cuts and fills over time. It considers the constantly changing terrain by computing haulage routes dynamically. Consequently more realistic haulage costs are used in the decision making process. A digraph is utilised to describe the terrain surface which has been partitioned into uniform grids. It reflects the true state of the terrain, and is altered after each cut and fill. A shortest path algorithm is successively applied to calculate the cost of each haul, and these costs are summed over the entire sequence, to provide a total cost of haulage. To solve this integrated optimisation problem a variety of solution techniques were applied, including constructive algorithms, meta-heuristics and parallel programming. The extensive numerical investigations have successfully shown the applicability of our approach to real sized earthwork problems.
               
            

@&#INTRODUCTION@&#

@&#BACKGROUND@&#

Numerous plans are needed to organise construction operations. These plans must include all facets of the construction process and can be for daily, weekly, or monthly time periods. A strategic plan of forthcoming earthworks is particularly necessary in linear infrastructure projects (such as road and rail construction), and its creation is focussed upon in this article. For background information concerning road construction and optimisation, we direct readers to Jha, Schonfeld, and Jong (2006).

A strategic plan of earthworks is a description of what earth goes where, and is otherwise characterised as an assignment of cuts to fills. Each assignment of this nature is known as a cut–fill pairing, and signifies a volume of material that must be excavated from a specified location (or area) and hauled to another. Without loss of generality there are N! cut–fill assignments to choose from, if N is the number of cut and fills, and no other technical constraints have been imposed. A sequence of these pairings can be used to describe when each location is cut or filled over time. There are similarly N! orderings of the cut–fill pairs.

In past research, cuts and fills occurred within predefined “sections”. The following articles are noteworthy for taking this approach: Hare, Koch, and Lucet (2011), Henderson, Vaughan, Jacobson, Wakefield, and Sewell (2003), Ji, Borrmann, and Wimmer (2011, 2010), Moselhi and Alshibani (2009), Shah and Dawood (2011), Son, Mattila, and Myers (2005). Though conceptually easy to grasp and use, these sections can be quite vague in terms of size, shape and location and can also be quite “coarse”. For a variety of reasons both practical and technical, the consideration of what occurs within sections has not often been included in the process of constructing an earthwork allocation plan (EAP). For example, once cutting and filling activities have started, the state of the terrain (i.e. the current elevations), within sections, are not often modelled. It should however be noted that in practice, contractors may perform very short moves with an excavator. These can be interpreted as free hauls to some extent as they do not involve trucks, and the cost is negligible compared to other “standard” hauls.

The objective of this article is to find high quality integrated earthwork solutions, consisting of an allocation of cuts to fills, a sequence of cuts and fills, and a path (route) for each haul. This problem is technically challenging as it is highly combinatorial and large problem instances occur in practice. For example this integrated decision problem has a search space of at least (N!)
                           N!. It should also be noted that there are many possible paths to choose from for each cut–fill pair. Hence the search space is vastly bigger again. In this article, in our largest test problem, N
                        ≅1500. This problem is NP-hard and the proof of this is given in Appendix A.

In this article a different approach to earthworks planning has been considered. The notion of sections has been discarded, and discrete 3D blocks are utilised. Each block is a container of earth. It has a specific location in 3D and has a common volume. After each cut or fill, the elevation within each block can be updated. Stacks of blocks also introduce inherent cutting and filling precedence, and these can be incorporated for improved realism. The concept of blocks has been motivated heavily by recent research outcomes in the field of mining and earthmoving. A recent study by Cheng and Jiang (2013) has shown the advantage of 3D modelling and computation of earthwork volumes, as opposed to simpler 2D approaches. The only justification for section based approaches is when survey precision is poor and GPS data is not provided.

The costs associated with earthworks are dynamic. This is because the terrain dictates fuel consumption, emissions and other cost metrics. Since it is constantly being altered by cutting and filling activities, the distances, gradients and surfaces between different points are constantly varying. In response to this feature, a dynamic objective function is proposed (in Section 2) for evaluating earthmoving decisions (i.e. hauls). This objective function provides the shortest path for each haul according to the current state of the terrain. The shortest paths are required in order to (i) optimise material haulage and (ii) to evaluate the real merit of moving material between any two cut and fill block locations. The shortest path approach determines the optimal path between two block locations on the surface according to a given metric like cost, distance, work, and time.

For modelling the terrain, and for evaluating alternative earthwork solutions, a graph model is presented in Section 2. That approach attempts to accurately evaluate the real cost of haulage. Issues of solution feasibility are considered as is routing between alternative “disconnected” project sites. An optimisation methodology and several solution approaches are then proposed in Section 3. These approaches are then applied to ten case studies of varying size, in Section 4, to show their applicability and to identify which settings and options are best.

@&#RELATED WORK@&#

Blocks have been used heavily in mining applications in recent years. Examples include: Bienstock and Zuckerberg (2010), Boland, Dumitrescu, Froyland, and Gleixner (2007), Caccetta and Hill (2003), Cullenbine, Wood, and Newman (2011), Lamghari and Dimitrakopoulos (2012), L’Heureux, Gamache, and Soumis (2013), Ramazan (2007), and Underwood and Tolwinski (1998).

This article is also related to our recent work on earthworks planning. However a very different approach is taken here that is more comprehensive. For example this article provides a full 3D model of earthworks and fully models the changing terrain that occurs during construction. In Burdett and Kozan (2014) mathematical (LP and MIP) models were developed to identify a more detailed assignment of cuts to fills. These models require the project site to be partitioned into blocks. This approach was shown to be superior to previous section based alternatives, as the position of earth at different elevations is more realistically and accurately modelled. These block models are generic and are suitable for both 2D and 3D scenarios. The physics concept “work” was also used as a proxy for fuel consumption. Two earthwork decision problems were introduced. The first considers the movement of whole blocks of material, whereas the second partial amounts. In this article we consider the first problem because from a practical perspective, it is more realistic to dig up a discrete block of earth, and to shift it to one specified place, instead of trying to accurately break it up into many smaller parts, and to transport them to many specific locations. In practice different soil types are also mixed up and cannot be easily divided on site. In Burdett and Kozan (2013a), 3D road construction problems were considered. A cross section replication approach, which solves a 2D variant of the earthwork allocation problem, and replicates the solution across the y-axis, was found to be a viable and effective approach in specific situations. An approach that partitions the domain into separate cross sections was also investigated.

Several other researchers have also considered integrated earthwork problems. Henderson et al. (2003) treated the earthworks planning problem as a symmetric travelling salesman problem. In particular the shortest route cut and fill problem (SRCFP) was defined. It seeks to find a route (i.e. an alternating path of cuts and fills, beginning and ending at the same cut location) for a single earthmoving vehicle that minimises the total distance travelled between cut and fill locations. It is a variant of this problem that we consider in the present article. Lim, Rodrigues, and Zhang (2005) also considered the SRCFP problem and developed a superior meta-heuristic approach that incorporates features from Simulated Annealing (SA) and Tabu Search (TS). They also added some important innovations such as multiple vehicles and a makespan objective.


                        Hare et al. (2011) considered earthworks planning to minimise construction costs. They extended MILP models for planning by incorporating time steps and the concept of “blocks”, which are obstacles or other topographical feature that need to be removed before earth can be moved across or over them. These blocks are different to the containers of earth that are used in this article. In that article costs are static and are independent of the time step. That article is noteworthy as it introduces an earthworks planning approach that, at least conceptually, and albeit in a lesser way, handles the changing terrain that occurs during the construction process.

The article by Nassar and Hosny (2012) considered an earthwork planning problem that is more similar to the one addressed in this article. That article is of particular note because they consider conceptually the changing state of the terrain and the sequence of cuts and fills. They define their problem as the least-cost route cut and fill sequencing problem (LCRCFP). It was formulated as a mixed binary optimisation problem and solved using a traditional branch-and-bound method and a particle swarm optimization (PSO) technique. Their model however demonstrated that a different decision making problem is solved to the one in this article, though the description is similar. They view work in a standard way, as the distance multiplied by the volume of earth moved, i.e. the tonne kilometres. In this article we view work as the physics concept, i.e. force multiplied by distance. Work is then multiplied by the number of trips made to transport a specific volume of earth. The advantages of our approach have been described in Burdett and Kozan (2014). Nassar and Hosny have however suggested that vehicle performance characteristics like, grade resistance, rolling resistance, and fuel consumption rates should be incorporated, and on the basis of time and effort available in practice. This is done in this article. Nassar and Hosny described terrain locations using stations and sections and areas by grids (cells). They appear to use static distances, and not actual Euclidean distances over the changing terrain, as they stated. They do not include changes in the elevation at each location or in each cell. Nassar and Hosny solved many test problems (1D and 2D) to demonstrate their approach. The problems considered however were relatively small, and most were randomly generated. In this article we solve real 3D problems of a larger nature.

The article by Tam, Tong, and Wong (2007) has addressed “path” planning in earthmoving operations and hence is also noteworthy. In that article a path finding algorithm was integrated with plant selection.

As stated earlier, what material is to be moved where is considered. This indirectly means a specified cost of haulage is minimised. However the movement of hauling vehicles, from places of fill, back to sources of cut, is not considered in our approach. Consequently there will be some loss of haulage costs and the computed cost of earthworks will be less than the real amount. This is unavoidable in a strategic plan of earthworks and can only be included if earthworks planning is explicitly integrated with vehicle selection and assignment. Vehicle selection has not been integrated because the problem is sufficiently complex and large as is, and current techniques are not sufficiently capable of solving this core decision making problem with the necessary realism, detail and efficiency. Vehicle selection and assignment is also a dynamic approach, as vehicle availabilities are constantly changing in practice (see Burdett & Kozan, 2014).

In general the selection of machines (i.e. for excavating, loading, and hauling) is an important feature of earthworks planning that significantly affects how earthworks are undertaken (i.e. in terms of efficiency and project duration) and their environmental impact. That complex issue has been considered in other articles and its integration with an approach such as ours is left as a source of future research. As dump trucks (i.e. the hauling units) have been found to be the greatest source of emissions (see Kim, Lee, Park, & Kim (2012)), it is reasonable to not include the other machines in our planning approach.

A block theoretic model of earthworks is described here. We assume that the terrain (i.e. the construction site) is partitioned into uniform 3D blocks of size (dx, dy, dz) where these physical dimensions are real valued. The earth within blocks is moved in “entirety” to other empty blocks, and the reason for this has been given in the introduction. Because we use an “integer mesh” (i.e. grid) to partition the terrain, the surface can be modelled by a directed graph. The directed graph may contain terrain inside and outside of the project site and is denoted as G
                        =(V, A). Each node v
                        ∈
                        V is associated with an (x, y) grid location. It has an associated weight equal to the current elevation at that grid location. Therefore, V
                        ={v
                        
                           i
                        
                        =((x
                        
                           i
                        , y
                        
                           i
                        ), z
                        
                           i
                        )∣∀
                        i}. The nodes of this graph can be constructed from block information in the following way: V
                        ={((x
                        
                           b
                        , y
                        
                           b
                        ), z
                        
                           b
                        )∣b
                        ∈
                        B, top(x
                        
                           b
                        , y
                        
                           b
                        )=
                        b} where B is the set of all blocks and top(x, y)=
                        b iff 
                           
                              ∄
                              
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              ∈
                              B
                              :
                              
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              
                              ≠
                              
                              b
                              ,
                              
                              
                                 
                                    x
                                 
                                 
                                    b
                                 
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          b
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              ,
                              
                              
                                 
                                    y
                                 
                                 
                                    b
                                 
                              
                              =
                              
                                 
                                    y
                                 
                                 
                                    
                                       
                                          b
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              ,
                              
                              
                                 
                                    z
                                 
                                 
                                    
                                       
                                          b
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              >
                              
                                 
                                    z
                                 
                                 
                                    b
                                 
                              
                           
                        . In simple terms, the top function finds the highest block in the “stack” at grid location (x, y). This means that it is unnecessary to have a node for each block. It should be noted that the definition of cut and fill blocks is not sufficient to model every grid location, as some locations have neither cutting or filling, and may be used as a path for transporting earth. Therefore a block is required for each (x, y) position where movement of material can be made. These other blocks, which are neither “cut” or “fill” must be introduced and are classified as “fixed” or “static” blocks.

Each arc in the graph represents a feasible link between 
                           adjacent
                         blocks on the terrain surface. This link signifies that earth may be hauled between the two grid locations at some point in time. Movement in the opposite direction is represented by another (reverse) directed arc. The arc weight is hence the “cost” of hauls between these locations. The term adjacent can be interpreted in many different ways. In this article two blocks are deemed adjacent if they are “directly adjacent” or “diagonally adjacent”. In other words, in the x–y plane they are within 
                           
                              
                                 
                                    2
                                 
                              
                           
                         grid units of each other according to a Euclidean distance (ED) metric. For instance, the grids adjacent to (x, y) are as follows: (x
                        −1, y
                        +1), (x, y
                        +1), (x
                        +1, y
                        +1), (x
                        −1, y), (x
                        +1y), (x
                        −1, y
                        −1), (x, y
                        −1), (x
                        +1, y
                        −1). An additional requirement is that a specified 
                           vertical tolerance
                         is not exceeded. For example block (x, y, 10) is not adjacent to (x
                        +1, y, 3) because a difference of 7 blocks in elevation is deemed too great for connectivity. Each pair of adjacent nodes can be connected by zero, one, or two arcs as the cost and feasibility of moving earth, from one to the other, and vice versa, may be different. The set of arcs is as follows 
                           
                              A
                              =
                              
                                 
                                    ⋃
                                 
                                 
                                    ∀
                                    
                                       
                                          v
                                       
                                       
                                          i
                                       
                                    
                                    ∈
                                    V
                                 
                              
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                           
                         where 
                           
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                              =
                              {
                              (
                              (
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    j
                                 
                              
                              )
                              ,
                              
                                 
                                    w
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              )
                              
                                 
                                    v
                                 
                                 
                                    j
                                 
                              
                              ∈
                              Adj
                              (
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                              }
                           
                         and 
                           
                              Adj
                              (
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                              =
                              
                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             j
                                          
                                       
                                       ∈
                                       V
                                       |
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       
                                       ≠
                                       
                                       
                                          
                                             v
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             F
                                          
                                          
                                             i
                                             ,
                                             j
                                          
                                          
                                             x
                                          
                                       
                                       ⩽
                                       1
                                       ,
                                       
                                          
                                             F
                                          
                                          
                                             i
                                             ,
                                             j
                                          
                                          
                                             y
                                          
                                       
                                       ⩽
                                       1
                                       ,
                                       
                                          
                                             F
                                          
                                          
                                             i
                                             ,
                                             j
                                          
                                          
                                             z
                                          
                                       
                                       ⩽
                                       ε
                                    
                                 
                              
                           
                        . It should be noted that 
                           
                              
                                 
                                    F
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    λ
                                    ∈
                                    {
                                    x
                                    ,
                                    y
                                    ,
                                    z
                                    }
                                 
                              
                           
                         is a notational shortcut for the absolute difference between two coordinate values, 
                           
                              
                                 
                                    F
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    λ
                                 
                              
                              =
                              |
                              
                                 
                                    λ
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    λ
                                 
                                 
                                    j
                                 
                              
                              |
                           
                        . The cost associated with each arc (v
                        
                           i
                        , v
                        
                           j
                        )∈
                        A is defined as w
                        
                           i,j
                         which is a function of (v
                        
                           i
                        , v
                        
                           j
                        ). A Euclidean “distance” and a “work” metric may be used to express the cost of hauling earth between two blocks. These are as follows:
                           
                              (1)
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 ED
                                 (
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       j
                                       ,
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 )
                                 ×
                                 FORCE
                                 (
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       j
                                       ,
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 )
                              
                           
                        
                        
                           
                              (2)
                              
                                 ED
                                 (
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       j
                                       ,
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             dx
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             
                                                
                                                   y
                                                
                                                
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   y
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             dy
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             
                                                
                                                   z
                                                
                                                
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   z
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             dz
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 FORCE
                                 (
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       j
                                       ,
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 )
                                 =
                                 Mg
                                 (
                                 sin
                                 θ
                                 +
                                 
                                    
                                       μ
                                    
                                    
                                       f
                                    
                                 
                                 cos
                                 θ
                                 )
                                 +
                                 0.5
                                 
                                    
                                       μ
                                    
                                    
                                       d
                                    
                                 
                                 ρ
                                 
                                    
                                       AV
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where
                           
                              (4)
                              
                                 θ
                                 =
                                 
                                    
                                       tan
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      j
                                                   
                                                
                                                -
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                dz
                                             
                                             
                                                dxy
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 dxy
                                 =
                                 
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             dx
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             (
                                             
                                                
                                                   y
                                                
                                                
                                                   j
                                                
                                             
                                             -
                                             
                                                
                                                   y
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             dy
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Eq. (3) is a function for computing the force retarding or enhancing motion on inclined planes of different angles. This resultant force consists of two parts. The first part is the sum of friction and resolved weight on an inclined plane of angle θ. The mass of the object is denoted by M, μ
                        
                           f
                         is a parameter for friction, and the acceleration due to gravity is g. The second part of (3) is the force of drag. Drag is proportional to the speed of travel V, the cross sectional area A of the object, a parameter μ
                        
                           d
                         for drag, and ρ the density of air. The derivation of (3) involves basic trigonometry and can be found in most Physics textbooks (for example see Walding, Rapkins, & Rossiter, 2010).

A formal mathematical specification for this integrated earthworks problem that utilises the aforementioned digraph is as follows:
                           
                              (5)
                              
                                 Minimise
                                 :
                                 
                                 Z
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          N
                                       
                                    
                                 
                                 ShortestPath
                                 
                                    
                                       
                                          
                                             
                                                G
                                             
                                             
                                                k
                                             
                                          
                                          ,
                                          
                                             
                                                v
                                             
                                             
                                                k
                                             
                                          
                                          ,
                                          
                                             
                                                v
                                             
                                             
                                                k
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 Subject
                                 
                                 to
                                 :
                                 
                                 Δ
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             
                                                v
                                             
                                             
                                                ′
                                             
                                          
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                -
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       H
                                    
                                    
                                       
                                          
                                             v
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       v
                                       ,
                                       k
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                                 ;
                                 ∀
                                 v
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       +
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 Δ
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             
                                                v
                                             
                                             
                                                ′
                                             
                                          
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                +
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       H
                                    
                                    
                                       v
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       k
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                                 ;
                                 ∀
                                 v
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       -
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 Δ
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 ⩽
                                 1
                                 
                                 ∀
                                 v
                                 ∈
                                 V
                                 ;
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                       -
                                       1
                                    
                                 
                                 +
                                 Δ
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                                 ;
                                 ∀
                                 v
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       +
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                       -
                                       1
                                    
                                 
                                 -
                                 Δ
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                                 ;
                                 ∀
                                 v
                                 ∈
                                 
                                    
                                       V
                                    
                                    
                                       -
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       w
                                    
                                    
                                       v
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       k
                                    
                                 
                                 =
                                 KPI
                                 
                                    
                                       
                                          
                                             
                                                e
                                             
                                             
                                                v
                                                ,
                                                k
                                             
                                          
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ,
                                                k
                                                -
                                                1
                                             
                                          
                                       
                                    
                                 
                                 
                                 ∀
                                 v
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       ′
                                    
                                 
                                 ∈
                                 V
                                 ;
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          ∀
                                          k
                                       
                                    
                                 
                                 Δ
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       δ
                                    
                                    
                                       v
                                    
                                 
                                 
                                 ∀
                                 v
                                 ∈
                                 V
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          ∀
                                          v
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                -
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          ∀
                                          
                                             
                                                v
                                             
                                             
                                                ′
                                             
                                          
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                +
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       H
                                    
                                    
                                       v
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       k
                                    
                                 
                                 =
                                 1
                                 
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          ∀
                                          v
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                -
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          v
                                          .
                                          Δ
                                          
                                             
                                                e
                                             
                                             
                                                v
                                                ,
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          ∀
                                          v
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                +
                                             
                                          
                                       
                                    
                                 
                                 (
                                 v
                                 .
                                 Δ
                                 
                                    
                                       e
                                    
                                    
                                       v
                                       ,
                                       k
                                    
                                 
                                 )
                                 
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       H
                                    
                                    
                                       v
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             ′
                                          
                                       
                                       ,
                                       k
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 
                                 ∀
                                 v
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       ′
                                    
                                 
                                 ∈
                                 V
                                 ,
                                 ∀
                                 k
                                 ∈
                                 {
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 }
                              
                           
                        In this model the number of stages in the sequence is synonymous with time steps. At the kth time step, the digraph to be evaluated is denoted as G
                        
                           k
                        . That graph depends on graph G
                        
                           k−1 and the decisions made previously. The decision variable for this model is 
                           
                              
                                 
                                    H
                                 
                                 
                                    v
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    k
                                 
                              
                           
                        . This binary variable equals one if the kth cut and fill occur respectively at node v and v′. In other words the kth haul is from node v to node v′. The number of binary decisions is ∣V
                        −∣∣ V
                        +∣N where the nodes have been partitioned into the following subsets: V
                        +
                        ={v
                        ∈
                        V∣δ
                        
                           v
                        
                        >0}, V
                        −
                        ={v
                        ∈
                        V∣δ
                        
                           v
                        
                        <0}. The change in elevation required at node v is denoted by δ
                        
                           v
                        . In this context it is integer valued, because blocks are of uniform size. In other words it describes the change in terms of unit blocks. Otherwise it would be real-valued. If δ
                        
                           v
                        
                        >0 then the terrain must be raised by filling and if δ
                        
                           v
                        
                        <0 then the terrain must be reduced by cutting. The elevation at node v after k cuts and fills have been made is denoted as e
                        
                           v,k
                         and is also integer valued. The starting elevation e
                        
                           v,0 is given. The change in elevation at time step k at node v is denoted as Δe
                        
                           v,k
                        . It is updated via Eqs. (6) and (7). Constraint (8) however is needed to enforce at most one haul to each fill node and from each cut node at each time. In other words only one block can be added or removed at each grid location. Eqs. (9) and (10) is then used to update the node elevations over time. Constraint (11) computes the new arc weight at the kth step using a specified performance metric (i.e. key performance indicator (kpi)) such as the Euclidean distance or the work metric as described in Eqs. (1)–(4). Constraint (12) ensures that the correct the number of cuts and fills are performed over time. In other words the terrain changes by δ
                        
                           v
                        . Constraint (13) ensures that there is only one haul at each time step. The location of the kth cut and fill are defined respectively as v
                        
                           k
                         and 
                           
                              
                                 
                                    v
                                 
                                 
                                    
                                       
                                          k
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                        . Constraint (14) and (15) define the nodes involved in the kth cut and fill by translating the binary decision variables. The last constraint (16) ensures that the decision variables are binary.

This section describes how a specified sequence of cuts and fills is evaluated. Determining optimal or near optimal sequences are deferred to Section 3. The sequence of cuts and fills can be defined in terms of blocks. If the set of blocks requiring excavation and fill respectively are denoted by 
                           
                              (
                              
                                 
                                    B
                                 
                                 
                                    -
                                 
                              
                              ,
                              
                                 
                                    B
                                 
                                 
                                    +
                                 
                              
                              )
                           
                        , then 
                           
                              S
                              =
                              {
                              (
                              b
                              ,
                              
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              )
                              |
                              b
                              ∈
                              
                                 
                                    B
                                 
                                 
                                    -
                                 
                              
                              ,
                              
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              ∈
                              
                                 
                                    B
                                 
                                 
                                    +
                                 
                              
                              }
                           
                        . In simple terms, it is a sequence of block pairs. For a given sequence, Algorithm 1 is proposed to efficiently determine the actual (or an approximate) cost of haulage over the changing terrain (which is modelled by the digraph G). Algorithm 1 iteratively evaluates the digraph G. At each stage of this algorithm, the shortest path between the current cut and fill blocks (see Fig. 1
                        ) is identified. The shortest path value is recorded and the graph is then updated to reflect the new terrain. This approach at first glance is inherently serial, as later evaluations are dependent on previous actions. Every time Algorithm 1 is applied for a specified sequence S, the surface graph must be re-instated to its original state. In other words, the node weights are reset to the original terrain elevations. A list of the original elevations must be recorded to facilitate this. Similarly, the original connections and associated arc weights must be re-instated.
                           Algorithm 1
                           
                              
                                 EvaluateSequence
                               (G, S, path) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Input: graph and cut–fill sequence
                                          
                                          
                                             
                                                Output: paths, cost of solution
                                          
                                          
                                             
                                                Begin
                                             
                                          
                                          
                                             
                                                
                                                
                                                   ResetSurface
                                                ();// Reset the node and arc weights
                                          
                                          
                                             
                                                
                                                Score
                                                =0;// Initialise score for the earthworks solution
                                          
                                          
                                             
                                                
                                                Foreach (b,
                                                b′)∈
                                                S:// For each cut and fill pairing
                                          
                                          
                                             
                                                
                                                begin
                                             
                                          
                                          
                                             
                                                
                                                
                                                if(haul_from_bottom) 
                                                   UpdateSurface
                                                 (G,
                                                b,cut);// Simulate cut
                                          
                                          
                                             
                                                
                                                
                                                Score
                                                += 
                                                   ShortestPath
                                                 
                                                
                                                   
                                                      (
                                                      G
                                                      ,
                                                      b
                                                      ,
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            path
                                                         
                                                         
                                                            b
                                                            ,
                                                            
                                                               
                                                                  b
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                ;// 
                                                Add cost of particular cut and fill
                                          
                                          
                                             
                                                
                                                
                                                if(haul_from_top) 
                                                   UpdateSurface
                                                 (G,
                                                b,cut);// Simulate cut
                                          
                                          
                                             
                                                
                                                
                                                
                                                   UpdateSurface
                                                 (G,
                                                b′,fill);// Simulate fill
                                          
                                          
                                             
                                                
                                                
                                                status
                                                
                                                   b
                                                
                                                =empty;// Change status of cut block
                                          
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                         
                                                            status
                                                         
                                                         
                                                            
                                                               
                                                                  b
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                      =
                                                      not
                                                      _
                                                      empty
                                                      ;
                                                      
                                                      /
                                                      /
                                                   
                                                 Change status of fill block
                                          
                                          
                                             
                                                
                                                end
                                             
                                          
                                          
                                             
                                                
                                                return 
                                                Score;
                                          
                                          
                                             
                                                End
                                             
                                          
                                       
                                    
                                 
                              
                           

Haulage from the bottom of each cut block is assumed by default, in Algorithm 1. Hence the elevation at the associated node must first be decremented and the associated arc weights must then be recomputed, before the shortest path algorithm is applied. In practice this is equivalent to excavating the whole block first, before haulage. Where the earth is placed (in the interim) has not been explicitly modelled in this article, but could be. Other possibilities also exist such as “haul-from-top” and “haul-from-middle” (see Burdett, 2013b). In practice earth may be placed into trucks as it is excavated, and moved from many different elevations. This is a “haul as you excavate” scenario. Although realistic, that approach has not been taken, as it would require even more applications of the shortest path algorithm, and would require excessive additional computational time. In retrospect a truck load of earth has very little impact on the terrain and modelling that level of detail may not provide ample benefit.

After each cut and fill, the elevation changes at those locations. Connections between adjacent block locations can then change. For example, existing ones can become invalid and new ones can become valid. In Algorithm 2, the status of cut and fill blocks is updated and the elevation at the associated node in the digraph is incremented or decremented. Once this has been completed, arc weights can be updated and new arcs can be added and others can be removed. The finer details of this approach are shown in Algorithms 3 and 4. In Algorithm 3, current connections are reviewed and removed if they are no longer valid. If they remain valid then they are re-evaluated so that up to date cost values are available. In Algorithm 4, all the nodes adjacent to v
                        
                           i
                         are reviewed. The latest costs of haulage are evaluated and if the connections do not currently exist, they are then added to the set of edges (i.e. edge list of the digraph). Connections that are already present are not re-evaluated as this is accomplished by Algorithm 3.
                           Algorithm 2
                           
                              
                                 UpdateSurface
                               (G,
                              b,
                              activity) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Begin
                                             
                                          
                                          
                                             
                                                
                                                v
                                                
                                                   α
                                                
                                                =
                                                FindNode(G,
                                                x
                                                
                                                   b
                                                ,
                                                y
                                                
                                                   b
                                                );// Find the node for the specified location, v
                                                
                                                   α
                                                
                                                ∈
                                                V
                                             
                                          
                                          
                                             
                                                
                                                if (activity
                                                =cut)
                                                z
                                                
                                                   α
                                                
                                                −−;// Update surface at cut location – decrement node weight
                                          
                                          
                                             
                                                
                                                else 
                                                z
                                                
                                                   α
                                                
                                                ++;// Update surface at fill location – increment node weight
                                          
                                          
                                             
                                                
                                                
                                                   UpdateConnections
                                                 (v
                                                
                                                   α
                                                );// Update arc weights of current connections
                                          
                                          
                                             
                                                
                                                
                                                   AddConnections
                                                 (v
                                                
                                                   α
                                                );// Add new connections
                                          
                                          
                                             
                                                End
                                             
                                          
                                       
                                    
                                 
                              
                           


                              
                                 UpdateConnections
                               (v
                              
                                 i
                              ) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Begin
                                             
                                          
                                          
                                             
                                                
                                                Foreach (v
                                                
                                                   i
                                                ,
                                                v
                                                
                                                   j
                                                )∈
                                                E:// Iterate through current edge list of node v
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             
                                                
                                                begin
                                             
                                          
                                          
                                             
                                                
                                                Δz
                                                =∣z
                                                
                                                   i
                                                
                                                −
                                                z
                                                
                                                   j
                                                ∣;// Change in elevation
                                          
                                          
                                             
                                                
                                                
                                                if (Δz
                                                >
                                                ε)
                                                E
                                                =
                                                E
                                                −{(v
                                                
                                                   i
                                                ,
                                                v
                                                
                                                   j
                                                ), (v
                                                
                                                   j
                                                ,
                                                v
                                                
                                                   i
                                                )};// Remove connections
                                          
                                          
                                             
                                                
                                                
                                                else begin
                                             
                                          
                                          
                                             
                                                
                                                
                                                w
                                                
                                                   i,j
                                                
                                                =
                                                EVAL(v
                                                
                                                   i
                                                ,
                                                v
                                                
                                                   j
                                                );// Update forward arc
                                          
                                          
                                             
                                                
                                                
                                                w
                                                
                                                   j,i
                                                
                                                =
                                                EVAL(v
                                                
                                                   j
                                                ,
                                                v
                                                
                                                   i
                                                );// Update backward arc
                                          
                                          
                                             
                                                
                                                
                                                end
                                             
                                          
                                          
                                             
                                                
                                                end
                                             
                                          
                                          
                                             
                                                End
                                             
                                          
                                       
                                    
                                 
                              
                           


                              
                                 AddConnections
                               (v
                              
                                 i
                              ) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Begin
                                             
                                          
                                          
                                             
                                                
                                                Foreach (v
                                                
                                                   j
                                                )∈
                                                Adj(v
                                                
                                                   i
                                                )// For each node adjacent to v
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             
                                                
                                                begin
                                             
                                          
                                          
                                             
                                                
                                                Δz
                                                =∣z
                                                
                                                   i
                                                
                                                −
                                                z
                                                
                                                   j
                                                ∣;// The change in elevation
                                          
                                          
                                             
                                                
                                                
                                                if (Δz
                                                ⩽
                                                ε)
                                          
                                          
                                             
                                                
                                                
                                                begin
                                             
                                          
                                          
                                             
                                                
                                                
                                                if (v
                                                
                                                   i
                                                ,
                                                v
                                                
                                                   j
                                                )∉
                                                E then E
                                                =
                                                E
                                                ∪{ (v
                                                
                                                   i
                                                ,
                                                v
                                                
                                                   j
                                                )};// Add arc
                                          
                                          
                                             
                                                
                                                
                                                w
                                                
                                                   i,j
                                                
                                                =
                                                EVAL(v
                                                
                                                   i
                                                ,v
                                                
                                                   j
                                                );// Evaluate cost and add as the arc weight
                                          
                                          
                                             
                                                
                                                
                                                if (v
                                                
                                                   j
                                                ,
                                                v
                                                
                                                   i
                                                )∉
                                                E then E
                                                =
                                                E
                                                ∪{v
                                                
                                                   j
                                                , v
                                                
                                                   i
                                                };// Add arc
                                          
                                          
                                             
                                                
                                                
                                                w
                                                
                                                   j,i
                                                
                                                =
                                                EVAL(v
                                                
                                                   j
                                                ,
                                                v
                                                
                                                   i
                                                );// Evaluate cost and add as the arc weight
                                          
                                          
                                             
                                                
                                                
                                                end
                                             
                                          
                                          
                                             
                                                
                                                end
                                             
                                          
                                          
                                             
                                                End
                                             
                                          
                                       
                                    
                                 
                              
                           

Since a number of different metrics may be important (i.e. distance, work, cost, time, etc.), the algorithms and digraph must be appropriately encoded to handle these options. Hence the appropriate function should be inserted for EVAL in Algorithms 3 and 4.

In this approach material is moved between blocks in whole amounts. Upon reflection it is fairly simple to move partial amounts between blocks. The current elevation within each block can be updated as follows: 
                           
                              
                                 
                                    z
                                 
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    z
                                 
                                 
                                    b
                                 
                              
                              ±
                              (
                              Q
                              /
                              dxdy
                              )
                           
                         where Q is the volume added/removed in cubic metres. The second term is the height of the new material when it is placed across the rectangular base of a block, with dimension (dx,dy). In other words, Q
                        =
                        dxdy
                        ×
                        height. In the event that Q is the total amount added, then 
                           
                              
                                 
                                    z
                                 
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              =
                              (
                              
                                 
                                    z
                                 
                                 
                                    b
                                 
                              
                              -
                              1
                              )
                              dz
                              +
                              (
                              Q
                              /
                              dxdy
                              )
                           
                        . The first part is the elevation at the bottom of the block, and dz is the height of a block. Similarly if Q is the total amount removed then 
                           
                              
                                 
                                    z
                                 
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              =
                              (
                              
                                 
                                    z
                                 
                                 
                                    b
                                 
                              
                              )
                              dz
                              -
                              (
                              Q
                              /
                              dxdy
                              )
                           
                        .

The graph model was extensively tested and preliminary results are reported in Burdett (2013b). It was found that diagonal movements between blocks result in superior solutions (i.e. reduced haulage costs). In addition current static calculations for haulage are perhaps too “good” and in reality haulage statistics (i.e. distances, work, etc.) could be significantly greater. However it is possible to improve upon the static haulage costs when modelling a changing terrain. This was shown in other examples. Work and distance metrics were also compared. Significant differences were observed. For instance, paths between cut and fill locations can be quite different.

Due to the inherent computational burden of evaluating a dynamic objective function, and the possibility of solving earthworks problems of very large size, improvements were sought involving parallel programming. Few opportunities exist for parallelisation due to the inherent nature of this problem, however, creating multiple surface graphs, and evaluating each part in parallel, was found to be effective. A temporal decomposition approach is hence proposed and is demonstrated in the following example.
                           Example
                           Consider a sequence of N
                              =100 cut fill pairs. Let the available number of computer processors be P
                              =4. The number of cut–fill pairs per processor is hence 25. This is also the number of shortest path problems solved by each processor. Create sub graphs for each processor. Let these be denoted by g
                              1, g
                              2, g
                              3, g
                              4. Therefore:
                                 
                                    
                                       g
                                       1 = initial terrain. Compute 
                                       score
                                       
                                          1
                                        
                                       (i.e. cost of first 25 cuts and fills)
                                    


                                       g
                                       2 = terrain after 1st 25 cuts and fills. Compute 
                                       score
                                       
                                          2
                                        
                                       (i.e. cost of second 25 cuts and fills)
                                    


                                       g
                                       3 = terrain after 1st 50 cuts and fills. Compute 
                                       score
                                       
                                          3
                                        
                                       (i.e. cost of third 25 cuts and fills)
                                    


                                       g
                                       4 = terrain after 1st 75 cuts and fills. Compute 
                                       score
                                       
                                          4
                                        
                                       (i.e. cost of fourth 25 cuts and fills)
                                    


                                       TotalScore
                                       =
                                       score
                                       1
                                       +
                                       score
                                       2
                                       +
                                       score
                                       3
                                       +
                                       score
                                       4
                                    

In order to partition the problem, each sub graph must be representative of the terrain at different points in time. This amounts to defining the correct elevation at each node and updating the arc weights. The correct elevations are computed “in parallel” via Algorithm 5. Note that “pfor” signifies a parallel for loop. Our code is implemented in C++ and utilises OpenMP for parallelisation. The cumulative updating of changes between stages is however done sequentially and is left till last. The following initialisations are required for performing the calculations in parallel:
                           
                              
                                 
                                 
                                 
                                    
                                       
                                          χ
                                          =
                                          N/P
                                       
                                       [Number of cut-fills per stage – raw value]
                                    
                                    
                                       
                                          st
                                          
                                             i
                                          
                                          =
                                          χ.i for i
                                          =0,…,χ
                                          −1
                                       [Index of first cut–fill pair in stage i]
                                    
                                    
                                       
                                          en
                                          
                                             i
                                          
                                          =
                                          χ. (i
                                          +1)−1 for i
                                          =0, …, χ
                                          −1
                                       [Index of last cut–fill pair in stage i]
                                    
                                    
                                       ΔE
                                          
                                             i,k
                                          
                                          =0 for i
                                          =1, …, P; for
                                          k
                                          =1, …, ∣V∣
                                       [Initialise changes in elevation]
                                    
                                    
                                       
                                          g
                                          
                                             i
                                          
                                          =
                                          G for i
                                          =1, …, P
                                       
                                       [Initialise P sub graphs – each a copy of G]
                                    
                                 
                              
                           
                        
                     

The number of processors available is specified. This is also the number of stages in the computation. These initialisations can be done in a pre-processing stage and do not need to be redone over and over again.
                           Algorithm 5
                           
                              
                                 ComputeChangesInElevation
                               (P, g, S, ΔE) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Begin
                                             
                                          
                                          
                                             
                                                
                                                pfor 
                                                i
                                                =2, …, P:
                                          
                                          
                                             
                                                
                                                begin
                                             
                                          
                                          
                                             
                                                
                                                for 
                                                k
                                                =1, …, ∣V∣: ΔE
                                                
                                                   i,k
                                                
                                                =0;// Reset change in elevation
                                          
                                          
                                             
                                                
                                                for 
                                                j
                                                =
                                                st
                                                
                                                   i−1, …, en
                                                
                                                   i−1:// Go through each cut–fill in ith sub-sequence
                                          
                                          
                                             
                                                
                                                begin
                                             
                                          
                                          
                                             
                                                
                                                (b,
                                                b′)=
                                                S
                                                
                                                   j
                                                ;// jth cut and fill block (blocks within ith sub-sequence)
                                          
                                          
                                             
                                                
                                                
                                                k
                                                =
                                                FindNode(g
                                                
                                                   i
                                                ,
                                                x
                                                
                                                   b
                                                ,
                                                y
                                                
                                                   b
                                                );// Associated surface node
                                          
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                         
                                                            k
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      =
                                                      FindNode
                                                      (
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            
                                                               
                                                                  b
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            
                                                               
                                                                  b
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                      ;
                                                      
                                                      /
                                                      /
                                                   
                                                 Associated surface node
                                          
                                          
                                             
                                                
                                                ΔE
                                                
                                                   i,k
                                                
                                                ++;// Record a decrease in elevation at the node
                                          
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      Δ
                                                      
                                                         
                                                            E
                                                         
                                                         
                                                            i
                                                            ,
                                                            
                                                               
                                                                  k
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                      -
                                                      -
                                                      ;
                                                      
                                                      /
                                                      /
                                                   
                                                 Record an increase in elevation at the node
                                          
                                          
                                             
                                                
                                                end
                                             
                                          
                                          
                                             
                                                
                                                end
                                             
                                          
                                          
                                             
                                                
                                                for 
                                                i
                                                =2, …, P; k
                                                =1, …, ∣V∣:ΔE
                                                
                                                   i,k
                                                 
                                                +=ΔE
                                                
                                                   i−1,k
                                                // Add changes from previous stage
                                          
                                          
                                             
                                                End
                                             
                                          
                                       
                                    
                                 
                              
                           


                        Algorithm 6 controls in parallel the evaluation of the sequence of cuts and fills, in order to obtain a significant speedup. Each processor evaluates one sub graph. Each sub graph however is first updated via Algorithm 7 that alters the original land elevation (denoted by 
                           
                              
                                 
                                    z
                                 
                                 
                                    j
                                 
                                 
                                    0
                                 
                              
                           
                         for surface node j) from its original state. In essence the algorithm 
                           EvaluateSubGraph
                         is the same as 
                           EvaluateSequence
                         except that the reset surface command is not required. Also, surface graph G is replaced with sub graph g
                        
                           i
                        , and the cuts and fills are performed from sub sequence S
                        
                           i
                         (i.e. Foreach (b,b′)∈
                        S
                        
                           i
                        ).
                           Algorithm 6
                           
                              
                                 EvaluateSequenceInParallel
                               (P,
                              g,
                              S,
                              path) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Begin
                                             
                                          
                                          
                                             
                                                
                                                
                                                   ComputeChangesInElevation
                                                 (P,S,ΔE);
                                          
                                          
                                             
                                                
                                                pfor 
                                                i
                                                =1, …, P:
                                          
                                          
                                             
                                                
                                                begin
                                             
                                          
                                          
                                             
                                                
                                                
                                                
                                                   ResetSubGraph
                                                (ΔE
                                                
                                                   i
                                                ,
                                                g
                                                
                                                   i
                                                ); // Reset elevations and arc weights
                                          
                                          
                                             
                                                
                                                
                                                score
                                                
                                                   i
                                                 = 
                                                   EvaluateSubGraph
                                                 (i,
                                                st
                                                
                                                   i
                                                ,
                                                en
                                                
                                                   i
                                                ,
                                                g
                                                
                                                   i
                                                ,
                                                S,
                                                path);// Do evaluations for stage i
                                          
                                          
                                             
                                                
                                                end
                                             
                                          
                                          
                                             
                                                
                                                
                                                   
                                                      kpi
                                                      =
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      
                                                         
                                                            score
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ;
                                                      
                                                      /
                                                      /
                                                   
                                                 Aggregate sub results to define total cost of earthworks
                                          
                                          
                                             
                                                End
                                             
                                          
                                       
                                    
                                 
                              
                           


                              
                                 ResetSubGraph
                               (g,ΔE) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Begin
                                             
                                          
                                          
                                             
                                                
                                                Foreach (v
                                                
                                                   j
                                                )∈
                                                g: 
                                                   
                                                      
                                                         
                                                            z
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            z
                                                         
                                                         
                                                            j
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                      +
                                                      Δ
                                                      
                                                         
                                                            E
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                   
                                                 // Reset elevation to required level
                                          
                                          
                                             
                                                
                                                Foreach (v
                                                
                                                   j
                                                )∈
                                                g: 
                                                   UpdateConnections
                                                 (g,
                                                v
                                                
                                                   j
                                                )
                                          
                                          
                                             
                                                End
                                             
                                          
                                       
                                    
                                 
                              
                           

Dijkstra’s algorithm with complexity O (∣A∣+∣A∣log∣A∣) or a superior algorithm like A-Star (i.e. A∗) can be used when arc weights are positive. However when arc weights are negative, as occurs when using a work based metric, then another algorithm like the Bellman–Ford approach with complexity O (∣V∣∣A∣) is typically warranted. Bellman–Ford however is computationally prohibitive in comparison to those algorithms (see Ahuja, Magnanti, & Orlin, 1993) and numerically this has been confirmed. Scaling the costs so that negative values do not occur was hence considered as an alternative. This would allow Dijkstra’s algorithm or A-Star to be used. However that approach is not valid in general (see Kleinberg & Tardos, 2006) as the minimum cost path may be altered inconsistently in some digraphs. For example scaling affects longer paths more greatly as the path length is scaled disproportionately. After scaling, paths with fewer arcs may be incorrectly identified as shorter, and paths with more arcs may be incorrectly identified as longer. Fortunately some of these scaling issues may not eventuate in practical situations. Furthermore if they do, the impact is not great necessarily. For example at worst, the inconsistencies of scaling arc weights will only cause higher cost paths to be chosen. The end result is that overall haulage costs will be reported as higher, when in fact the actual costs of haulage is less. Hence the obtained solution can be better in practice, and the obtained one is an upper bound. This situation is clearly better than the alternative of assuming a good solution, then finding out that it is poor. The advantages of scaling are worthwhile, either as an exact approach or as a fast heuristic. This is discussed in greater detail in the next few sections.

Arc weights are scaled by subtracting the minimum arc weight 
                              ω
                            from each arc. Un-scaling is similarly achieved by adding that value to each arc. If 
                              ω
                            is positive or zero, then no scaling is technically necessary. This is a possibility at all stages of the evaluation process. The scaling of arc weights also requires the objective function to be rescaled. For instance a value equal to the number of arcs in the path multiplied by 
                              ω
                            must be subtracted. Given the constantly changing arcs and arc weights in the digraph, the frequency of shortest path computations and the potential for the graph to become large, the added computational burden of scaling and un-scaling is undesirable as every arc must be constantly modified after every cut and fill.

In retrospect a superior approach that utilises a static minimum arc weight (SMAW) is viable. If the smallest arc weight can be identified for the current metric, for instance in a pre-processing stage, then this value can be used and other updating and rescaling stages can be removed. For the work metric the computation of the minimum value is now discussed. First it should be noted that force and work are calculated by Eqs. (1)–(4). Positive values of force imply that forward motion is impeded whereas negative values imply gradient assistance. Since all movements occur between adjacent surface nodes (i.e. (x,
                           y,
                           z) and 
                              
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 )
                              
                           ), there are three possible cases to consider. For example, move across the x-axis, across the y-axis, or across both x and y axis. It should be noted that x′−
                           x is dx or zero. Similarly y′−
                           y is dy or zero. Let the maximum difference in elevation be Δz
                           =
                           z′−
                           z where z
                           =max
                              b∈B
                           (z
                           
                              b
                           ) and z′=min
                              b∈B
                           (z
                           
                              b
                           ). The SMAW is therefore the largest negative value of the three possibilities, i.e. 
                              ω
                           
                           =
                           min(W
                           1,
                           W
                           2,
                           W
                           3) where W
                           
                              i
                           
                           =
                           F
                           
                              i
                           
                           ×
                           D
                           
                              i
                            for i
                           =1, 2, 3. The required distances and angles are as follows:
                              
                                 (17)
                                 
                                    (
                                    
                                       
                                          D
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          D
                                       
                                       
                                          3
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         dx
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   +
                                                   Δ
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             ,
                                             
                                                
                                                   
                                                      
                                                         dy
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   +
                                                   Δ
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         dx
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         dy
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   +
                                                   Δ
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (18)
                                 
                                    (
                                    
                                       
                                          θ
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          θ
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          θ
                                       
                                       
                                          3
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   tan
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            Δ
                                                            z
                                                         
                                                         
                                                            dx
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                             
                                                
                                                   tan
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            Δ
                                                            z
                                                         
                                                         
                                                            dy
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                             
                                                
                                                   tan
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            Δ
                                                            z
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        dx
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                                  +
                                                                  
                                                                     
                                                                        dy
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

In this section the conditions upon which scaling can be used to provide optimal path is examined. The term “score” is used to describe the quality of a path, and may refer to distance, work, cost or any other metric of performance.

For most earthworks problems, the terrain will be modelled by a grid/mesh. If the grid is linear, then there are no alternative paths to choose from and scaling is irrelevant. In many road projects, the grid will be long and narrow. In other scenarios, the grid is likely to be more rectangular.
                              Lemma 1
                              
                                 All paths of size N (i.e. there are N nodes and N
                                 −
                                 1
                                 
                                 arcs) are consistent when scaled by 
                                 
                                    
                                       
                                          
                                             ω
                                          
                                          
                                             ̲
                                          
                                       
                                    
                                 
                                 . That is the length of the shortest paths increase/decrease by the same amount. 
                                 Proof:
                                 There are (N
                                 −
                                 1) arcs in each path and each arc is altered by 
                                 
                                    ω
                                 
                                 . Therefore each path changes in length by the same amount, i.e. (N
                                 −
                                 1)
                                 
                                    ω
                                 
                                 .
                              


                                 When scaled, the shortest path, from a set of paths of the same length, remains unchanged.
                              


                                 After scaling, two paths differ by (S′−
                                 S)
                                 
                                 +
                                  
                                 (N′−
                                 N)
                                 
                                    ω
                                  
                                 where S and S′ respectively are the scores before scaling. 
                                 Proof: 
                                 The scaled scores for the two paths are S
                                 
                                 +
                                 
                                 (N
                                 −
                                 1)
                                 
                                    ω
                                  
                                 and S′
                                 +
                                 
                                 (N′−
                                 1)
                                 
                                    ω
                                 
                                 . The difference of these two values provides the result.
                              


                                 Scaling is consistent if for all pairs of paths say (u,
                                 
                                 v), such that S
                                 
                                    u
                                 
                                 <
                                 S
                                 
                                    v
                                 
                                 , then S
                                 
                                    u
                                 
                                 
                                 +
                                 
                                 (N
                                 
                                    u
                                 
                                 −
                                 1)
                                 
                                    ω
                                 
                                 <
                                 S
                                 
                                    v
                                 
                                 
                                 +
                                 
                                 (N
                                 
                                    v
                                 
                                 −
                                 1)
                                 
                                    ω
                                 
                                 . 
                                 Proof: 
                                 If the path that is shorter remains shorter after scaling then scaling is consistent for that pair. If this result is true for all pairs, then scaling is consistent overall.
                              


                                 Let 
                                 
                                    
                                       
                                          
                                             γ
                                          
                                          
                                             u
                                             ,
                                             v
                                          
                                       
                                       =
                                       
                                          
                                             (
                                             
                                                
                                                   S
                                                
                                                
                                                   u
                                                
                                             
                                             -
                                             
                                                
                                                   S
                                                
                                                
                                                   v
                                                
                                             
                                             )
                                          
                                          
                                             (
                                             
                                                
                                                   N
                                                
                                                
                                                   v
                                                
                                             
                                             -
                                             
                                                
                                                   N
                                                
                                                
                                                   u
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                                 . If N
                                 
                                    v
                                 
                                 −
                                 N
                                 
                                    u
                                 
                                 >
                                 0 then γ
                                 
                                    u,v
                                 
                                 <
                                 
                                    ω
                                 
                                 , otherwise if N
                                 
                                    v
                                 
                                 −
                                 N
                                 
                                    u
                                  
                                 <
                                 0 then γ
                                 
                                    u,v
                                 
                                 >
                                 
                                    ω
                                 
                                 . If N
                                 
                                    u
                                 
                                 
                                 =
                                 
                                 N
                                 
                                    v
                                  
                                 then scaling is automatically consistent and this expression need not be evaluated. Consistency is therefore proven if γ
                                 
                                    u,v
                                 
                                 /
                                 
                                    ω
                                 
                                 <
                                 1∀u,v∣N
                                 
                                    v
                                 
                                 >
                                 N
                                 
                                    u
                                  
                                 and γ
                                 
                                    u,v
                                 
                                 /
                                 
                                    ω
                                 
                                 >
                                 1∀u,v∣N
                                 
                                    v
                                 
                                 <
                                 N
                                 
                                    u
                                 
                                 . 
                                 Proof: 
                                 The ratio is obtained by rearranging the inequality. A negative sign in the denominator must be checked in order to define the correct inequality.
                              


                                 If the paths have the same score before scaling (i.e. S
                                 
                                 =
                                 
                                 S′), then they remain the same length after scaling iff N
                                 
                                 =
                                 
                                 N′. 
                                 Proof: 
                                 As S and S′ are static, (N
                                 −
                                 1)
                                 
                                    ω
                                 
                                 
                                 =
                                 
                                 (N′−
                                 1)
                                 
                                    ω
                                  
                                 and this is only true if N
                                 
                                    u
                                 
                                 
                                 =
                                 
                                 N
                                 
                                    v
                                 
                                 .
                              


                                 On a 2 by 2 grid, the work required to travel over a longer path, say (1,
                                 
                                 2,
                                 
                                 4) is always greater than a simpler path, say (1,4). Analytically W
                                 
                                    1,2
                                 
                                 
                                 +
                                 
                                 W
                                 
                                    2,4
                                 
                                 ⩾
                                 W
                                 
                                    1,4
                                  
                                 and W
                                 
                                    1,2
                                 
                                 
                                 +
                                 
                                 W
                                 
                                    2,4
                                 
                                 −
                                 W
                                 
                                    1,4
                                 
                                 
                                 =
                                 
                                 μ Mg(dx
                                 
                                 +
                                 
                                 dy
                                 −
                                 dxy). The difference in the work is always constant and is not based upon the elevations. 
                                 Proof: 
                                 See 
                                 Appendix B.


                                 Scaling is consistent on a grid structure for the work metric. 
                                 Proof: 
                                 For a simple two by two grid, we have shown that for different block sizes and node elevations, the work for a longer path cannot be made smaller than the work of a shorter path. The proof of this is given in 
                                 Theorem 2. In such a grid there are 4 nodes, 12 arcs and there are 5 alternative paths that can be defined between each pair of nodes. There is one path of size 2, two of size 3, and two of size 4. The work for the path of size 2 is always smaller than the other paths of greater length. In larger meshes, there are many simple grids like this. All the longer paths can be reduced to shorter paths using 
                                 Theorem 2.


                                 The shortest score paths are inherently linked to the shortest distance paths and properties of the triangle inequality. The shortest score path is generally one of the most direct paths linking the cut and fill locations. In other words it is chosen from the set of paths of minimal size. Scaling is always consistent and can be used to facilitate the use of algorithms like Dijkstra and A
                                 ∗
                                 .
                              

During the creation of an earthwork allocation and sequence, infeasibilities can occur. For example it is possible to violate top down cutting and bottom up filling requirements. Fortunately it has been found that the application of our graph approach always results in a feasible solution. In other words, an infeasible assignment and/or sequence can be made feasible by evaluating the terrain digraph “as is”, without any other modifications. Upon closer inspection this occurs because only the current elevation at each node is used and not the original block elevations in the cut–fill pairing. Hence the digraph will only allow cuts and fills from the current levels, whatever they may be. This then results in a different cut–fill pair. Recording these different cut–fill pairings then provides a complete, alternative and feasible solution. This is very fortunate as other considered approaches are more complex and less elegant. If (b,
                        b′)=
                        S
                        
                           i
                         (i.e. the ith cut–fill pair), then the steps required to fix the solution are as follows:
                           
                              
                                 v
                                 
                                    α
                                 
                                 =
                                 
                                    FindNode
                                 (G,
                                 x
                                 
                                    b
                                 ,
                                 y
                                 
                                    b
                                 );// Find the node at grid position of the next cut
                              


                                 if (z
                                 
                                    b
                                 
                                 ≠
                                 z
                                 
                                    α
                                 )
                                 b
                                 =
                                 FindBlock(x
                                 
                                    α
                                 ,
                                 y
                                 
                                    α
                                 ,
                                 z
                                 
                                    α
                                 ); // Assign another cut block
                              


                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             β
                                          
                                       
                                       =
                                       FindNode
                                       
                                          
                                             
                                                G
                                                ,
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                                ,
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       ;
                                       
                                       /
                                       /
                                    
                                  
                                 Find the node at grid position of the next fill
                              


                                 if 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                                -
                                                1
                                                
                                                ≠
                                                
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      β
                                                   
                                                
                                             
                                          
                                       
                                       
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       FindBlock
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             β
                                          
                                       
                                       ,
                                       
                                          
                                             y
                                          
                                          
                                             β
                                          
                                       
                                       ,
                                       
                                          
                                             z
                                          
                                          
                                             β
                                          
                                       
                                       +
                                       1
                                       )
                                    
                                 ; // Assign another fill block
                              


                                 S
                                 
                                    i
                                 
                                 =(b,
                                 b′);// Update the solution
                              

These steps must be added to Algorithm 1 as the first task performed within the “Foreach” loop. It should be noted that the “if” statements check whether the required elevation equals the actual elevation. The required elevation, if cut block b is next, is the top of block b. The required elevation, if fill block b′ is next, is the bottom of block b′. The z
                        
                           β
                        
                        +1 term reflects the grid index of the top of a fill block. To illustrate this scenario and our approach, consider the 2D scenario shown in Fig. 2
                        a.

It should first be noted that blocks are numbered by their position in the sequence. Some arrows have been drawn to explicitly show where material is hauled. This solution (Fig. 2a) is infeasible for a variety of reasons. For example, block (1, 9) is first in the sequence and must be moved to block (3, 10). However this is impossible because (3, 9) must first be filled by block (4, 8), that is to be cut later in the sequence. Similarly the assignment of block (1, 8) to block (2, 5) is also infeasible. This is infeasible because the block below, namely block (1, 7) is to be moved to block (2, 4). This assignment breaks the bottom up filling precedence required in the “x
                        =2” stack.

It should be noted that all earthwork sequences define in what stack, blocks are to be cut, and what stack, blocks are to be filled. An infeasible sequence will only have incorrect block elevations. All that is required is to fix the elevations but to leave the stack information as is. The graph evaluation algorithm automatically does this. The order in which blocks are cut is not altered, however the order in which blocks are filled is. Conceptually, a reverse process is also feasible, i.e. one that keeps the sequence of fills, but fixes the sequence of cuts. This reverse process starts from the final elevations. The sequence of cut–fill pairs is then reversed. The elevation of cut blocks is therefore incremented, and the elevation of fill blocks is decremented. This reverse process undoes cutting and filling, i.e. fill locations become the cut locations, and cut locations become the fill locations. This is the same as swapping the pairs: i.e. (cut =fill, fill =cut). Therefore the graph approach (i.e. encoding) remains unchanged and can accomplish both a forwards and a reverse process.

The size and shape of construction sites vary greatly (i.e. rectangular, convex, non-convex, disconnected) and some areas may not be accessible. Borrow and waste sites are examples of unconnected sites. Determining paths between blocks in different sites is difficult unless they are explicitly provided. In the absence of information to the contrary, a direct path can be taken. An alternative, that is more realistic, is to take direct paths between site boundary access points. Once material is “on-site” then dynamic routing through the site terrain can be performed. For the proposed graph approach, fixed arcs and fixed blocks are advocated:

Fixed arcs may be added (as in Fig. 3
                           ) in order to enforce fixed (unalterable) connections (routes) between different locations. Fixing the arc weights of these arcs also implies fixed costs for hauling material along these connections. Conceptually multiple arcs (with different arc weights) could be added between the same nodes to reflect alternative routings. The standard shortest path algorithm however relies upon single arcs between nodes.

Fixed blocks may be added (as in Fig. 4
                           ) in order to facilitate routes between different sites. These fixed blocks are manifested as nodes in the digraph with fixed weights (i.e. elevation information). This approach is elegant and allows alternative routings to be made. This approach is best as no change is actually necessary to current encodings. In other words, fixed blocks are a concept only, and no blocks need to actually be fixed and categorised as such. The blocks just need to be identified and added as nodes in a standard way.

Movement through some areas of the project site may also be restricted in practice. To stop movement through these forbidden areas the most obvious course of action is to simply remove nodes from the digraph at specific (x, y) locations. Part of this process may involve the categorisation of nodes as either valid or invalid at a pre-processing stage.

An optimisation framework is now presented that utilises the graph model of Section 2. The techniques of Section 2 have demonstrated how to evaluate earthwork solutions in terms of different metrics (like work, distance and cost), and how to correct solution infeasibilities. The earthworks solution consists of two things, (i) an assignment of cuts to fills, and (ii) a sequence of cut–fill assignments. Without loss of generality it will be assumed that there are N cut–fill pairs in the solution. The objective function has non-static costs and is therefore dynamic. It depends on the repeated evaluation of a directed graph. For this reason and the potential for N to be very large, constructive algorithms and meta-heuristics are considered rather than a conventional analytical approach. To place this choice in context, consider case study 10 in Section 4 of this article. That road construction project is 7km long and there are about 1500 cut–fill pairs. Hence the shortest path problem would have to be solved 1500 times just to provide one objective function value. Also consider that the block size is a modest (50, 5, 1) metres and a far greater level of “granularity” could be achieved by making the blocks much smaller, perhaps 20 metres long and 300mm high. In that scenario about six times as many blocks result, and 9000 shortest path problems would have to be solved. The terrain digraph in case study 10 also has 568 nodes and 3672 arcs.

Meta-heuristics are stochastic optimisation techniques that rely upon the arbitrary perturbation of a solution or a population of solutions until a termination criterion is met. Constructing an initial starting solution is necessary for their application. The two parts of our integrated solution can be constructed by a variety of different strategies or jointly. The size of the problem greatly affects the strategy selected, as the number of blocks can become quite prohibitive, and can make some strategies exceedingly slow computationally. Given that the role of meta-heuristics is (i.e. conceptually) to quickly refine and optimise the solution, there is significantly less motivation for using “slower” approaches.

We have implemented and tested two approaches for providing a starting solution: a greedy myopic approach and for comparative purposes, a simple random approach. The greedy approach iteratively considers cut blocks, in a “specified ordering”, and chooses a fill block from the current candidate list, according to the specified cost metric (such as distance, work or fuel consumption). After an assignment has been made, the fill block is removed from the candidate list, and the next cut block is considered. Consequently the number of required comparisons is successively reduced. It should be noted that the order in which cut blocks are considered, is the sequence. This is chosen randomly in order to obtain different solutions, but may also be constructed via another approach.

A direct measure of cost is most straightforward to evaluate. That is to say, the cost of the haulage is based upon the direct Euclidean path between the source and destination block locations. Such a path is indicative of the effort of haulage but in no ways reflects the true path that would be taken in practice. Consequently routing is incorporated and the real cost is computed. This version of our approach is described in Algorithm 8. It requires that some fill blocks are removed from the candidate list, as there is no path to them at different points in time.

To compute real costs, the surface graph must also be utilised and some other innovative encoding is necessary. For example, each node in the surface graph is assigned a fill requirement. This is an integer parameter that represents the number of blocks requiring fill at that grid location (i.e. over different elevations). Every time a fill block is assigned to a cut block, this parameter is decremented. When it reaches zero, the associated surface node need not be considered in further comparisons. At each step (i.e. for each cut block), a shortest path algorithm is applied from the surface node associated with the current cut block. In other words, all shortest paths between this source node and every other location on the terrain surface are computed. The reason for this is simple; material can only be cut and moved to current positions on the terrain surface. One of those surface positions is associated with a fill block.
                           Algorithm 8
                           
                              
                                 MakeAssignment
                              _
                                 Greedy
                              (S,
                              G,
                              c,
                              f) 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Begin
                                             
                                          
                                          
                                             
                                                
                                                
                                                   Jumble
                                                 (c);// Reorder randomly the list of cut blocks
                                          
                                          
                                             
                                                
                                                for 
                                                
                                                   
                                                      (
                                                      i
                                                      =
                                                      1
                                                      ,
                                                      .
                                                      .
                                                      ,
                                                      |
                                                      V
                                                      |
                                                      )
                                                      
                                                      
                                                         
                                                            req
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      |
                                                      {
                                                      b
                                                      |
                                                      b
                                                      ∈
                                                      
                                                         
                                                            B
                                                         
                                                         
                                                            +
                                                         
                                                      
                                                      ,
                                                      (
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            b
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            b
                                                         
                                                      
                                                      )
                                                      =
                                                      (
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      )
                                                      }
                                                      |
                                                   
                                                ;// Initialise fill requirements
                                          
                                          
                                             
                                                
                                                for (i
                                                =1,…,∣c∣)// For each source of cut, choose an accompanying fill location
                                          
                                          
                                             
                                                
                                                begin
                                             
                                          
                                          
                                             
                                                
                                                
                                                b
                                                =
                                                c
                                                
                                                   i
                                                ;
                                                v
                                                =
                                                
                                                   FindNode
                                                (G,
                                                x
                                                
                                                   b
                                                ,
                                                y
                                                
                                                   b
                                                );// Specify current cut block and associated node
                                          
                                          
                                             
                                                
                                                
                                                if(haul_from_bottom) 
                                                   UpdateSurface
                                                 (G,
                                                b,cut);// Simulate cut and update surface
                                          
                                          
                                             
                                                
                                                
                                                
                                                   ShortestPath
                                                 (G,
                                                v,
                                                score);// Evaluate candidate fills using shortest path algorithm
                                          
                                          
                                             
                                                
                                                
                                                best
                                                =∞;
                                                j
                                                =
                                                NULL;// Initialise for comparison
                                          
                                          
                                             
                                                
                                                
                                                for (i
                                                =1,..,∣V∣): if (req
                                                
                                                   i
                                                
                                                >0 and score
                                                
                                                   i
                                                
                                                <
                                                best)
                                                best
                                                =
                                                score
                                                
                                                   i
                                                ; j
                                                =
                                                i; // Choose best
                                          
                                          
                                             
                                                
                                                
                                                req
                                                
                                                   j
                                                
                                                −−;// Decrement fill requirement at chosen grid location b′=
                                                FindBlock(x
                                                
                                                   j
                                                ,
                                                y
                                                
                                                   j
                                                ,
                                                z
                                                
                                                   j
                                                
                                                +1);// Find correct block at specified grid location
                                          
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      =
                                                      (
                                                      b
                                                      ,
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      )
                                                      ;
                                                      
                                                      /
                                                      /
                                                   
                                                 Record ith allocation as (b,
                                                b′)
                                          
                                          
                                             
                                                
                                                
                                                f.remove(b′);// Remove fill block from list
                                          
                                          
                                             
                                                
                                                
                                                if (haul_from_top) 
                                                   UpdateSurface
                                                 (G,
                                                b,cut);// Simulate cut and update surface
                                          
                                          
                                             
                                                
                                                
                                                
                                                   UpdateSurface
                                                 (G,
                                                b′,fill);// Simulate fill and update surface
                                          
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                         
                                                            status
                                                         
                                                         
                                                            b
                                                         
                                                      
                                                      =
                                                      empty
                                                      ;
                                                      
                                                      
                                                         
                                                            status
                                                         
                                                         
                                                            
                                                               
                                                                  b
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                      =
                                                      not
                                                      _
                                                      empty
                                                      ;
                                                      
                                                      /
                                                      /
                                                   
                                                 Change status of blocks
                                          
                                          
                                             
                                                
                                                end
                                             
                                          
                                          
                                             
                                                End
                                             
                                          
                                       
                                    
                                 
                              
                           

In summary the above mentioned approaches are computationally fast, but there is no guarantee of solution quality, and the likelihood of those solutions being of “above average” quality is probabilistic.

Many excellent techniques have been developed over the last 15years or thereabouts. We have considered several techniques, namely Simulated Annealing and Evolutionary Algorithms, as the former operates upon a single solution and the later a population. These approaches were selected as they have been successfully applied to many decision problems and have a strong theoretical and empirical foundation.

Effective solution perturbation is an important mechanism of meta-heuristics (see Burdett & Kozan, 2010). In this earthworks problem the solution can be refined by changing the assignment, the sequence, or both. Algorithms that accomplish one of these tasks are classified respectively as block assignment perturbations (BAP) or block sequence perturbations (BSP). A basic BAP (namely BAP::swap) is to choose two cut–fill pairs and to swap either the cut blocks or the fill blocks (but not both). The number of moves of this type is 
                              
                                 
                                    
                                    
                                       N
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       2
                                    
                                 
                                 
                                 ≅
                                 
                                 O
                                 (
                                 
                                    
                                       N
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                           . In theory this strategy could be poor when cut–fill pairs are chosen arbitrarily, as the geographic position of the associated cut and fill blocks are ignored. An alternative is perhaps to choose cut–fill pairs that are in the vicinity of each other, either the cuts, the fills, or both. Mathematically this could mean within a specified distance of another position. A vicinity condition however may result in the rejection of too many refinements. It is also possible to also evaluate the complete neighbourhood of moves.

Reversions, shifts and swaps are three different BSP that can be used to alter the sequence of cut–fill pairs. The first BSP (namely BSP::rev) is to reverse a sub sequence of pairs, the second (namely BSP::shift) is to shift a pair one or more positions forwards or backwards, and the third (namely BSP::swap) is to swap two chosen pairs. There are N
                           −
                           z
                           +1 possible reversions of length z, 
                              
                                 
                                    
                                    
                                       N
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       2
                                    
                                 
                                 
                                 ≅
                                 
                                 O
                                 (
                                 
                                    
                                       N
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                            swaps, and 2(N
                           −
                           z) possible shifts of length z. Past experience has shown that it makes no sense to reverse sub sequences that are too large. Length two, three or four only should be considered. It should be noted that the sequence is a kind of topological ordering and the order of some cut–fill pairs can be altered without any effect.

A standard SA approach was first utilised and a variety of perturbation strategies were considered. They are as follows:


                           Single perturbation: Apply BAP or BSP.


                           Sequential perturbation: Apply separate BAP and BSP at each step and evaluate each separately. Two complete objective function evaluations are hence required.


                           Joint perturbation: Apply a BAP and a BSP and then evaluate the “combined” resulting solution. Only one objective function evaluation is required.

Preliminary testing has shown that the BSP operators were most effective at improving the solution. The sole application of BAP::shift was found to be ineffective. We also observed that BSP::shift and BSP::swap operators were more effective than BSP::rev. As solution correction involves the reassignment of some cut and fills, the BSP operators are really combined BAP-BSP approaches. In general the performance of these options was found to be unreliable, and convergence was slow. Only through repeated application of SA could near optimal solutions be reached. The reason for this poor performance is the multi-modal nature of the solution space that contains many solutions of equivalent “quality”. In other words, there is very little information to suggest where the optimal is and what path should be taken to get there. Since this is an integrated dynamic decision making problem the search space is more complex (see Section 1.2) than other difficult combinatorial decision problems. To improve SA, a dedicated improvement stage has been added. This stage searches through a neighbourhood of possible moves (i.e. BSP, BAP, BSP and BSP) and records the best one. Moving the current solution to that point is recommended, but is not essential. This SA variant is labelled SA_LS where LS is for Local Search. This approach is demonstrated graphically in Fig. 5
                           .

The main idea of SA_LS is that at each new point or once every temperature step, the best solution in the current neighbourhood is found before making decisions on where else to move next. Normally this locally optimal solution would be missed. Our complete neighbourhood is incredibly large as it involves all possible BAP and BSP (i.e. sub neighbourhoods). We choose one of these sub neighbourhoods in order to perturb the solution and then obtain a new solution. In some neighbourhoods the difference in solution quality is not great whereas in others, it is. In those neighbourhoods this approach is very effective. In the real “physical” world SA_LS is equivalent to scouting out your current position and moving your camp or base of operations to the “best” position. This strategy removes wasted computational effort “randomly” running around the current neighbourhood. More effort can then be made in exploring other neighbourhoods.

This approach is similar to Tabu Search (TS) that also performs a limited neighbourhood search at each step. However we are not directly moving from the optimal point in one neighbourhood to the optimal point in another neighbourhood. We can reject movements to new neighbourhoods. Only after we have accepted a move to a new neighbourhood do we expend additional computational effort to find the best point in that neighbourhood. In our approach a tabu list is not necessary because we have a random search element that ensures cycling does not happen in the same way that it occurs in TS. It is believed that the chance of moving back into the previous neighbourhood is very small in this problem.

In this problem each sub neighbourhood is of size N
                           −1 where N is the number of cut–fill pairs. For example consider a solution containing 6 cut–fill pairs: [(45, 4), (21, 2), (25, 3), (29, 7), (30, 8), (31, 12)]. Consider the selection of pair (29, 7). There are five BAP’s as follows:

BAP1: (45, 4) ⇆ (29, 7)=(45, 7), (29, 4).

BAP2: (21, 2) ⇆ (29, 7)=(21, 7), (29, 2).

BAP3: (25, 3) ⇆ (29, 7)=(25, 7), (29, 3).

BAP4: (30, 8) ⇆ (29, 7)=(30, 7), (29, 8).

BAP5: (31, 12) ⇆ (29, 7)=(31, 7), (29, 12).

Evolutionary algorithms (EAs) are developed in this section. They operate upon a population of solutions and involve crossover and mutation mechanisms within a simulated reproductive phase. A natural representation of the solution is utilised and this distinction typically differentiates it from Genetic Algorithms. In this article each population member is a sequence of cuts and fills of the following form, 
                              
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                p
                                             
                                             
                                                1
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          
                                             
                                                p
                                             
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                p
                                             
                                             
                                                Φ
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                            where 
                              
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                c
                                             
                                             
                                                k
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                k
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 |
                                 
                                    
                                       c
                                    
                                    
                                       k
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       B
                                    
                                    
                                       -
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       f
                                    
                                    
                                       k
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       B
                                    
                                    
                                       +
                                    
                                 
                              
                            and i
                           =1, …, Φ. An equivalent “decoupled” representation is as follows: 
                              
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         2
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         N
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         2
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         N
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           .

The reproduction phase utilised in this article involves each parent exactly once, hence there are Φ crossovers. Every child solution is compared with its “primary” parent. If of superior fitness it is accepted (i.e. replaces parent) otherwise it is rejected (i.e. discarded). An alternative reproductive approach that chooses the best Φ solutions from amongst the previous population members and the new child solutions could also be used. Several crossover strategies were investigated and form the basis of a variety of EA approaches. They are now discussed.

The first child solution (i.e. ch
                              1) maintains the order of cuts from the first parent (i.e. member i) but takes the order of fills from the second parent (i.e. member j). The second child solution (i.e. ch
                              2) is similarly created but the fills are taken from the second parent and the cuts are from the first parent. Therefore, 
                                 
                                    
                                       
                                          ch
                                       
                                       
                                          k
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             
                                                
                                                   f
                                                
                                                
                                                   k
                                                
                                                
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          ch
                                       
                                       
                                          k
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                
                                                
                                                   j
                                                
                                             
                                             ,
                                             
                                                
                                                   f
                                                
                                                
                                                   k
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                               for k
                              =1, …, N. An example is as follows:
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 1
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       2
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 2
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       3
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 3
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       4
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 4
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       5
                                                                                    
                                                                                    
                                                                                       i
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 5
                                                                              
                                                                              
                                                                                 i
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       1
                                                                                    
                                                                                    
                                                                                       j
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 1
                                                                              
                                                                              
                                                                                 j
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       2
                                                                                    
                                                                                    
                                                                                       j
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 2
                                                                              
                                                                              
                                                                                 j
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       3
                                                                                    
                                                                                    
                                                                                       j
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 3
                                                                              
                                                                              
                                                                                 j
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       4
                                                                                    
                                                                                    
                                                                                       j
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 4
                                                                              
                                                                              
                                                                                 j
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       c
                                                                                    
                                                                                    
                                                                                       5
                                                                                    
                                                                                    
                                                                                       j
                                                                                    
                                                                                 
                                                                              
                                                                              
                                                                                 ̲
                                                                              
                                                                           
                                                                           ,
                                                                           
                                                                              
                                                                                 f
                                                                              
                                                                              
                                                                                 5
                                                                              
                                                                              
                                                                                 j
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       ⇒
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        3
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        3
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        4
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        4
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        5
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        5
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        3
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        3
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        4
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        4
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        c
                                                                     
                                                                     
                                                                        5
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        f
                                                                     
                                                                     
                                                                        5
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

The application of a BAP or BSP afterward is necessary, as this type of crossover causes the population to lose diversity quite quickly as the cut and fill orderings are not perturbed within individuals.

This strategy involves the application of a sequence crossover operator. Both the cut and fill sequences can be altered at each step, using this technique, if desired. A subsequence (i.e. continuous) of the cut sequence or the fill sequence is first chosen. The elements are then swapped between the parents to create two new solutions. Note that elements already assigned are replaced arbitrarily from the set of those currently unassigned. This occurs after the first assignment stage and not at the time an assignment is first attempted. This allows all the feasible assignments to be made first. A variation that chooses swap positions arbitrarily is possible and was also investigated. Both these approached are demonstrated below:
                                 
                                    
                                       Continuous
                                       :
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  |
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              3
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        ,
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              4
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        ,
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              5
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        ̲
                                                                     
                                                                  
                                                                  |
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        6
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  |
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              3
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                        ,
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              4
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                        ,
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              5
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        ̲
                                                                     
                                                                  
                                                                  |
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        6
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       ⇒
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               3
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               4
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               5
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               6
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               3
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               4
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               5
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               6
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       Arbitrary
                                       :
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        ̲
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              2
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        ̲
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        3
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              4
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        ̲
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        5
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        6
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              1
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        ̲
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              2
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        ̲
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        3
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              σ
                                                                           
                                                                           
                                                                              4
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        ̲
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        5
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        σ
                                                                     
                                                                     
                                                                        6
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       ⇒
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               3
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               4
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               5
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               6
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               3
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               4
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               5
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               σ
                                                            
                                                            
                                                               6
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              In the above example σ refers to either the cut sequence or the fill sequence. In the SXO strategy a search through unselected elements to find multiply assigned blocks is required.

The sequence recombination operator (SRO) of Burdett and Kozan (2000) can be applied arbitrarily to either the cut or fill sequence. This operator was found to be superior to other “classical” operators, for example those involving paths and sequences. It constructs a new sequence solution from σ
                              
                                 i
                               and σ
                              
                                 j
                              . The main idea is to build up the sequence one element at a time. In this article each element is a block. The algorithm compares the elements in each parent sequence at the current position, namely 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          k
                                       
                                       
                                          i
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          k
                                       
                                       
                                          j
                                       
                                    
                                 
                              . The best one is selected if not already assigned earlier in the sequence. The set of assigned blocks is denoted as 
                                 
                                    A
                                 
                              . Otherwise a choice is made arbitrarily from those elements yet to be assigned. This random assignment can be performed straight away but this may remove later comparisons and assignments. An alternative is therefore to record the positions requiring a random assignment and to perform these once all other comparisons and assignments have been made, and from the remaining blocks yet to be assigned. At stage k, a comparison is made of 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          k
                                       
                                       
                                          i
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          k
                                       
                                       
                                          j
                                       
                                    
                                 
                              . The four cases are as follows:
                                 
                                    
                                       Case 1:
                                    
                                    
                                       
                                          
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   i
                                                
                                             
                                             
                                             ∉
                                             
                                             A
                                             ,
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   j
                                                
                                             
                                             
                                             ∉
                                             
                                             A
                                          
                                       . If Z
                                       
                                          i
                                       
                                       <
                                       Z
                                       
                                          j
                                        
                                       assign 
                                       
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                
                                             
                                             =
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   i
                                                
                                             
                                          
                                        
                                       else assign 
                                       
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                
                                             
                                             =
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   j
                                                
                                             
                                          
                                       .


                                       
                                          
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   i
                                                
                                             
                                             
                                             ∉
                                             
                                             A
                                             ,
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   j
                                                
                                             
                                             ∈
                                             A
                                          
                                       . Assign 
                                       
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                
                                             
                                             =
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       .


                                       
                                          
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   i
                                                
                                             
                                             ∈
                                             A
                                             ,
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   j
                                                
                                             
                                             
                                             ∉
                                             
                                             A
                                          
                                       . Assign 
                                       
                                          
                                             
                                                
                                                   c
                                                
                                                
                                                   k
                                                
                                             
                                             =
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   j
                                                
                                             
                                          
                                       .


                                       
                                          
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   i
                                                
                                             
                                             ∈
                                             A
                                             ,
                                             
                                                
                                                   σ
                                                
                                                
                                                   k
                                                
                                                
                                                   j
                                                
                                             
                                             ∈
                                             A
                                          
                                       . Choose from 
                                       R 
                                       the set of remaining blocks.

After each assignment, 
                                 
                                    A
                                    =
                                    A
                                    +
                                    {
                                    
                                       
                                          c
                                       
                                       
                                          k
                                       
                                    
                                    }
                                 
                               and R
                              =
                              R
                              −{c
                              
                                 k
                              }. The values Z
                              
                                 i
                               and Z
                              
                                 j
                               are computed as the shortest path from 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          k
                                       
                                       
                                          i
                                       
                                    
                                    →
                                    
                                       
                                          f
                                       
                                       
                                          k
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          k
                                       
                                       
                                          j
                                       
                                    
                                    →
                                    
                                       
                                          f
                                       
                                       
                                          k
                                       
                                    
                                 
                              . When applied to the fill sequence, the values Z
                              
                                 i
                               and Z
                              
                                 j
                               are computed as the shortest path from 
                                 
                                    
                                       
                                          c
                                       
                                       
                                          k
                                       
                                    
                                    →
                                    
                                       
                                          σ
                                       
                                       
                                          k
                                       
                                       
                                          i
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          c
                                       
                                       
                                          k
                                       
                                    
                                    →
                                    
                                       
                                          σ
                                       
                                       
                                          k
                                       
                                       
                                          j
                                       
                                    
                                 
                              . In order to evaluate Z
                              
                                 i
                               and Z
                              
                                 j
                               the surface graph must be initialised as the state that occurs after k
                              −1 cut and k
                              −1 fills. To speed up this algorithm the cost of the path between cut and fill blocks can be approximated. The application of the SRO is demonstrated below:
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         (
                                                         1
                                                         ,
                                                         3
                                                         ,
                                                         6
                                                         ,
                                                         2
                                                         ,
                                                         4
                                                         ,
                                                         5
                                                         )
                                                      
                                                   
                                                   
                                                      
                                                         (
                                                         1
                                                         ,
                                                         3
                                                         ,
                                                         2
                                                         ,
                                                         4
                                                         ,
                                                         6
                                                         ,
                                                         5
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       ⇒
                                       (
                                       1
                                       ,
                                       3
                                       ,
                                       6
                                       
                                       or
                                       
                                       2
                                       ,
                                       _
                                       ,
                                       _
                                       ,
                                       _
                                       )
                                       ⇒
                                       (
                                       1
                                       ,
                                       3
                                       ,
                                       6
                                       ,
                                       2
                                       
                                       or
                                       
                                       4
                                       ,
                                       _
                                       ,
                                       _
                                       )
                                       ⇒
                                       (
                                       1
                                       ,
                                       3
                                       ,
                                       6
                                       ,
                                       4
                                       ,
                                       2
                                       ,
                                       5
                                       )
                                    
                                 
                              In summary: 6 is chosen at Step 3, 4 is chosen at Step 4, an element is chosen randomly at step 5.

Preliminary testing of the aforementioned strategies resulted in inferior performance. In summary the crossover mechanisms were unreliable in constructing solutions of equal or superior quality and child solutions deviated too greatly from their parent solutions. Alternative strategies were consequently investigated. Improvement of individual population members via local search and a population annealing/cooling schedule were found to be successful. The addition of local search technically makes our approach a Memetic Algorithm (MA). Two options are most appropriate and were investigated. Option 1 performs a limited number of self-improvements (i.e. of population members) per generation and is justified when the population size is medium to large. Option 2 maintains a small to medium sized population and hence each individual in the population can be improved every generation. The local search strategy involves the enumeration of BAP, BSP, or both BSP and BAP at each generation.

The annealing schedule (process) successfully used in SA was added to EA. The impetus for doing this within EA is to accept child solutions that are not superior to their parent solutions at early stages of the search. This creates diversity in the population and allows alternative neighbourhoods to be searched. At later stages of the search only child solutions of improved fitness are accepted. This allows the search to concentrate on finding the best solution within the current neighbourhood. The initial and final temperature was designated as in SA (denoted respectively by tI, tF), as is the maximum number of iterations ϒ. Consequently the temperature reduction factor is 
                                 
                                    r
                                    =
                                    
                                       
                                          e
                                       
                                       
                                          
                                             
                                                1
                                             
                                             
                                                ϒ
                                             
                                          
                                          ln
                                          
                                             
                                                
                                                   
                                                      
                                                         tF
                                                      
                                                      
                                                         tI
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              . The current temperature at generation (iteration) g is hence T
                              
                                 g
                               
                              =
                              r·T
                              
                                 g−1
                              ≡
                              r
                              
                                 g
                              
                              tI and the probability of acceptance is 
                                 
                                    
                                       
                                          e
                                       
                                       
                                          -
                                          
                                             
                                                Δ
                                             
                                             
                                                
                                                   
                                                      T
                                                   
                                                   
                                                      g
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                               where Δ is the difference in fitness between child and parent solution.

As with SA, the potential for a “speedup” was investigated by using parallel computer programming. The parallel evaluation approach of Section 2.2 was first tested. However an anomaly occurred that causes that approach to fail. Upon closer inspection it was found that evaluating sub sequences in parallel can cause some cut–fill pairings to be evaluated at inappropriate times. Consequently they can be seen as infeasible when they are not, and hence corrected using the previously described corrective mechanism of Section 2.5. The result of this invalid correction is the replication of some cut blocks in the solution. This did not occur with SA because only a single basic perturbation of the solution occurs per iteration of that algorithm. EA is quite different. The crossover techniques can radically change the position of many cut–fill pairs and the contents of cut–fill pairs. To solve this problem, solution correction is done first (in a pre-processing stage) before Algorithm 5 is called within Algorithm 6. In other words solution correction is done before solution evaluation via the shortest path algorithm. This is quite sensible from a general point of view and hence should also be considered for the SA implementation.

Solution correction was achieved by inspecting each cut–fill pair in the sequence (i.e. one by one, from first to last) and applying the steps advocated in Section 2.5. However a call to Algorithm 2 must be made after each change. It should also be noted that this correction may be performed in parallel because changes to the cut and fills blocks can be done separately as they are not directly related. This task however is not computationally expensive, and significant benefit is not expected.

An alternative approach to parallel evaluation of the objective is parallel implementation of crossovers, i.e. to perform multiple crossovers simultaneously. In order to do this, copies of the surface graph must be available to each processor. Hence multiple copies of the surface graph need to be created and continuously updated. This avenue is however a task for future investigations and was outside the scope of this article.

The application of our approaches to different case studies of real-life size is presented here. The aim of these numerical investigations was to (i) identify the computational cost to solve integrated earthworks planning problems of various size, (ii) to identify whether the proposed techniques identify high quality solutions, and (iii) to identify the best parameters for optimisation. A summary of the test problems is shown in Table 1
                      and the control parameters for the optimisation algorithms are shown in Table 2
                     .

The block sizes shown in Table 1 are indicative of those likely to be used in practice. The ten test problems are roughly broken into three size categories, each larger than the previous. Two important cost metrics (kpi’s), namely distance and work were investigated. Both of these metrics are proxies for fuel consumption and physical effort.

To verify the quality of solutions obtained via the optimisation routines, bounds on the optimal solution are required. The following approach was proposed.
                        
                           (19)
                           
                              LB
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       b
                                       ∈
                                       
                                          
                                             B
                                          
                                          
                                             -
                                          
                                       
                                    
                                 
                              
                              (
                              MIN
                              (
                              b
                              ,
                              
                                 
                                    B
                                 
                                 
                                    +
                                 
                              
                              )
                              )
                              
                              where
                              
                              MIN
                              (
                              b
                              ,
                              
                                 
                                    B
                                 
                                 
                                    +
                                 
                              
                              )
                              =
                              
                                 
                                    
                                       min
                                    
                                    
                                       
                                          
                                             b
                                          
                                          
                                             ′
                                          
                                       
                                       ∈
                                       
                                          
                                             B
                                          
                                          
                                             +
                                          
                                       
                                    
                                 
                              
                              (
                              EVAL
                              (
                              b
                              ,
                              
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              )
                              )
                           
                        
                     
                     
                        
                           (20)
                           
                              UB
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       b
                                       ∈
                                       
                                          
                                             B
                                          
                                          
                                             -
                                          
                                       
                                    
                                 
                              
                              (
                              MAX
                              (
                              b
                              ,
                              
                                 
                                    B
                                 
                                 
                                    +
                                 
                              
                              )
                              )
                              
                              where
                              
                              MAX
                              (
                              b
                              ,
                              
                                 
                                    B
                                 
                                 
                                    +
                                 
                              
                              )
                              =
                              
                                 
                                    max
                                 
                                 
                                    
                                       
                                          b
                                       
                                       
                                          ′
                                       
                                    
                                    ∈
                                    
                                       
                                          B
                                       
                                       
                                          +
                                       
                                    
                                 
                              
                              (
                              EVAL
                              (
                              b
                              ,
                              
                                 
                                    b
                                 
                                 
                                    ′
                                 
                              
                              )
                              )
                           
                        
                     
                  

This approach finds the minimum cost fill block for each cut block, and then sums the associated costs of all cut blocks. The EVAL function is a direct “static” cost for hauling between two blocks. Experimentation however has shown this approach to be poor even though it is logically sound. In particular the bounds can be over inflated, and the optimal solution can be less than the LB. The main reason why this approach fails is the changing state of the terrain which is difficult (if not impossible) to predict.

Randomly created test problems have been generated due to the difficulty in obtaining real case studies of appropriate size and diversity. Test problems 1–9 were generated using the approach described below:


                        Step 1: Arbitrarily create a planned profile where nx is the number of blocks along the x-axis.
                           
                              (21)
                              
                                 
                                    
                                       z
                                    
                                    
                                       1
                                    
                                    
                                       plan
                                    
                                 
                                 =
                                 randi
                                 (
                                 lb
                                 ,
                                 ub
                                 )
                                 ;
                                 
                                 /
                                 /
                                 
                                 Where
                                 :
                                 
                                 lb
                                 =
                                 6
                                 ;
                                 ub
                                 =
                                 100
                                 ;
                                 ε
                                 =
                                 5
                              
                           
                        
                        
                           
                              (22)
                              
                                 for
                                 
                                 i
                                 =
                                 2
                                 ,
                                 …
                                 ,
                                 nx
                                 :
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                    
                                       plan
                                    
                                 
                                 =
                                 randi
                                 
                                    
                                       
                                          
                                             
                                                z
                                             
                                             
                                                i
                                                -
                                                1
                                             
                                             
                                                plan
                                             
                                          
                                          -
                                          ε
                                          ,
                                          
                                             
                                                z
                                             
                                             
                                                i
                                                -
                                                1
                                             
                                             
                                                plan
                                             
                                          
                                          +
                                          ε
                                       
                                    
                                 
                                 ;
                                 /
                                 /
                                 Generate
                                 
                                 random
                                 
                                 integer
                              
                           
                        
                     


                        Step 2: Arbitrarily generate land elevations where ny is the number of blocks along the y-axis.

for i
                        =1, …, nx : j
                        =1, …, ny:
                           
                              (23)
                              
                                 lb
                                 =
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                    
                                       plan
                                    
                                 
                                 -
                                 δ
                                 
                                    
                                       λ
                                    
                                    
                                       1
                                    
                                 
                                 ;
                                 
                                 ub
                                 =
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                    
                                       plan
                                    
                                 
                                 +
                                 δ
                                 
                                    
                                       λ
                                    
                                    
                                       2
                                    
                                 
                                 ;
                                 
                                 /
                                 /
                                 
                                 Where
                                 :
                                 
                                 δ
                                 =
                                 20
                                 ;
                                 
                                    
                                       λ
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       λ
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 0.5
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       z
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       land
                                    
                                 
                                 =
                                 randi
                                 (
                                 lb
                                 ,
                                 ub
                                 )
                                 ;
                              
                           
                        
                        
                           
                              (25)
                              
                                 nbC
                                 +
                                 =
                                 max
                                 
                                    
                                       
                                          
                                             
                                                z
                                             
                                             
                                                i
                                                ,
                                                j
                                             
                                             
                                                land
                                             
                                          
                                          -
                                          
                                             
                                                z
                                             
                                             
                                                i
                                             
                                             
                                                plan
                                             
                                          
                                          ,
                                          0
                                       
                                    
                                 
                                 ;
                                 
                                 nbF
                                 +
                                 =
                                 max
                                 
                                    
                                       
                                          
                                             
                                                z
                                             
                                             
                                                i
                                             
                                             
                                                plan
                                             
                                          
                                          -
                                          
                                             
                                                z
                                             
                                             
                                                i
                                                ,
                                                j
                                             
                                             
                                                land
                                             
                                          
                                          ,
                                          0
                                       
                                    
                                 
                                 ;
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                    
                                       λ
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 Pr
                                 (
                                 fill
                                 )
                                 =
                                 1
                                 -
                                 
                                    
                                       nbF
                                    
                                    
                                       nbF
                                       +
                                       nbC
                                    
                                 
                                 ;
                                 
                                 
                                    
                                       λ
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 Pr
                                 (
                                 cut
                                 )
                                 =
                                 1
                                 -
                                 
                                    
                                       nbC
                                    
                                    
                                       nbF
                                       +
                                       nbC
                                    
                                 
                                 ;
                              
                           
                        
                     

Parameters λ
                        1, λ
                        2 are used to regulate (balance) the number of cuts and fills. Every time a terrain elevation is generated, the number of cuts and fills is incremented, and the probabilities change.


                        Step 3: Balance cuts and fills.

If (nbC
                        <
                        nbF) then create more cuts: 
                           
                              ∀
                              (
                              i
                              ,
                              j
                              )
                              ∈
                              ψ
                              :
                              
                                 
                                    z
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    land
                                 
                              
                              =
                              
                                 
                                    z
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    land
                                 
                              
                              +
                              1
                           
                        ; where:
                           
                              (27)
                              
                                 ψ
                                 =
                                 
                                    
                                       
                                          (
                                          a
                                          ,
                                          b
                                          )
                                          |
                                          a
                                          =
                                          randi
                                          (
                                          0
                                          ,
                                          nx
                                          -
                                          1
                                          )
                                          ,
                                          b
                                          =
                                          randi
                                          (
                                          0
                                          ,
                                          ny
                                          -
                                          1
                                          )
                                          ,
                                          
                                             
                                                z
                                             
                                             
                                                a
                                                ,
                                                b
                                             
                                             
                                                land
                                             
                                          
                                          >
                                          
                                             
                                                z
                                             
                                             
                                                a
                                             
                                             
                                                plan
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

If (nbC
                        >
                        nbF) then create more fills: 
                           
                              ∀
                              (
                              i
                              ,
                              j
                              )
                              ∈
                              ψ
                              
                              
                                 
                                    z
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    land
                                 
                              
                              =
                              
                                 
                                    z
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    land
                                 
                              
                              -
                              1
                           
                        ; where:
                           
                              (28)
                              
                                 ψ
                                 =
                                 
                                    
                                       
                                          (
                                          a
                                          ,
                                          b
                                          )
                                          |
                                          a
                                          =
                                          randi
                                          (
                                          0
                                          ,
                                          nx
                                          -
                                          1
                                          )
                                          ,
                                          b
                                          =
                                          randi
                                          (
                                          0
                                          ,
                                          ny
                                          -
                                          1
                                          )
                                          ,
                                          
                                             
                                                z
                                             
                                             
                                                a
                                                ,
                                                b
                                             
                                             
                                                land
                                             
                                          
                                          <
                                          
                                             
                                                z
                                             
                                             
                                                a
                                             
                                             
                                                plan
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The number of elements in the set ∣ψ∣ is always ∣nbC
                        −
                        nbF∣.


                        Step 4: Explicitly define blocks.

for i
                        =1, …, nx : j
                        =1, …, ny:


                        
                           
                              Δ
                              =
                              
                                 
                                    
                                       
                                          
                                             z
                                          
                                          
                                             i
                                          
                                          
                                             plan
                                          
                                       
                                       -
                                       
                                          
                                             z
                                          
                                          
                                             i
                                             ,
                                             j
                                          
                                          
                                             land
                                          
                                       
                                    
                                 
                              
                              ;
                              
                              /
                              /
                           
                         Number of blocks required.

if (Δ=0) then create a fixed block at location 
                           
                              
                                 
                                    
                                       i
                                       ,
                                       j
                                       ,
                                       
                                          
                                             z
                                          
                                          
                                             i
                                          
                                          
                                             plan
                                          
                                       
                                    
                                 
                              
                           
                        ;

else create Δ blocks with the following positions: (i,
                        j,
                        z
                        ∗
                        +
                        k) k
                        =1, …, Δ

where
                           
                              (29)
                              
                                 
                                    
                                       z
                                    
                                    
                                       ∗
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                z
                                             
                                             
                                                i
                                                ,
                                                j
                                             
                                             
                                                land
                                             
                                          
                                          >
                                          
                                             
                                                z
                                             
                                             
                                                i
                                             
                                             
                                                plan
                                             
                                          
                                       
                                    
                                 
                                 ?
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                    
                                       plan
                                    
                                 
                                 :
                                 
                                    
                                       z
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       land
                                    
                                 
                                 ;
                                 /
                                 /
                                 
                                 If
                                 -
                                 Then
                                 -
                                 Else
                                 
                                 case
                              
                           
                        
                     

The case study of Burdett and Kozan (2014) has been re-examined. In this article a full 3D variant of that problem has been considered (see Fig. 6
                        ) and is labelled as test problem 10.

The width of the site has now been broken up into four different cross sections. The elevations in each are different. The original cross section is the first cross section. Cross Sections 2, 3 and 4 were generated by adding or subtracting a randomly generated value between −5 and 5metres. In order to use this case study, the data was modified to have full blocks. This involves an initial averaging (Step 1) and rounding stage (Step 2), followed by a cross section definition stage (Step 3). After this the imbalance in cuts and fills is corrected before the blocks are finalised and output. Details of Step 1–3 are as follows:


                        Step 1: Compute average elevation in each grid along x-axis.
                           
                              (30)
                              
                                 for
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 nx
                                 :
                                 
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                    
                                       plan
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                h
                                             
                                             
                                                i
                                             
                                             
                                                plan
                                             
                                          
                                          +
                                          
                                             
                                                h
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                             
                                                plan
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       z
                                    
                                    
                                       i
                                       ,
                                       1
                                    
                                    
                                       land
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                h
                                             
                                             
                                                i
                                             
                                             
                                                land
                                             
                                          
                                          +
                                          
                                             
                                                h
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                             
                                                land
                                             
                                          
                                       
                                    
                                 
                                 ;
                              
                           
                        where 
                           
                              
                                 
                                    h
                                 
                                 
                                    i
                                 
                                 
                                    land
                                 
                              
                           
                         and 
                           
                              
                                 
                                    h
                                 
                                 
                                    i
                                 
                                 
                                    plan
                                 
                              
                           
                         are the elevations at specified locations within the longitudinal profiles.


                        Step 2: Round elevations to nearest unit of elevation.
                           
                              (31)
                              
                                 for
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 nx
                                 :
                                 
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                    
                                       plan
                                    
                                 
                                 =
                                 dz
                                 .
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      plan
                                                   
                                                
                                             
                                             
                                                dz
                                             
                                          
                                       
                                    
                                 
                                 ;
                                 
                                 
                                    
                                       z
                                    
                                    
                                       i
                                       ,
                                       1
                                    
                                    
                                       land
                                    
                                 
                                 =
                                 dz
                                 .
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      i
                                                      ,
                                                      1
                                                   
                                                   
                                                      land
                                                   
                                                
                                             
                                             
                                                dz
                                             
                                          
                                       
                                    
                                 
                                 ;
                              
                           
                        
                     


                        Step 3: Generate cross section elevations.
                           
                              (32)
                              
                                 for
                                 =
                                 2
                                 ,
                                 …
                                 ,
                                 ny
                                 :
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 nx
                                 :
                                 
                                 
                                    
                                       z
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       land
                                    
                                 
                                 =
                                 
                                    
                                       z
                                    
                                    
                                       i
                                       ,
                                       j
                                       -
                                       1
                                    
                                    
                                       land
                                    
                                 
                                 +
                                 randi
                                 (
                                 lb
                                 ,
                                 ub
                                 )
                                 ;
                                 
                                 
                                    
                                       z
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       land
                                    
                                 
                                 =
                                 dz
                                 .
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                   
                                                      land
                                                   
                                                
                                             
                                             
                                                dz
                                             
                                          
                                       
                                    
                                 
                                 ;
                              
                           
                        
                     

@&#RESULTS@&#

The approaches developed in this article were implemented and compared. All the algorithms were implemented in C++ (i.e. in Visual Studio 2010) using object oriented programming. The code utilised OpenMP directives for parallel computation, and was also compiled for speed using the appropriate code optimisation setting. The algorithms were run under Windows 7 on a 64bits, quad core, Dell PC with a 2.5GHz processor and 4GB memory. The constructive algorithm was first tested and then the meta-heuristics. Each was run ten times on each of the ten problems, for both cost metrics. The constructive algorithm results are shown under the CA heading in Tables 3 and 4
                        
                        . The variation in the range of possible starting solutions is shown. The CPU times were minimal and are not displayed. At worst 15s was required for case 10.

The negative values in Table 4 occur because the net effect of movements is downhill. In summary Tables 3 and 4 shows a fairly consistent difference over all test problems. A difference of 200–500 metres for the distance metric was typical (not including case 10). This difference is not a great value in itself (i.e. for one haul per block), however when multiplied across all necessary truck hauls, the difference is more significant. Consider the situation where each cut block requires more than one haul. A 50×5×0.3 block is equivalent to 75m3 metres and a 50×5×1 block is equivalent to 250m3
                        metres. If a standard truck can haul ‘q’ m
                        3
                        metres, then the total number of hauls per block is 75/q or 250/q respectively. The total distance discrepancy is hence 75/q or 250/q respectively multiplied by the aforementioned difference, i.e. 200–500metres. If q
                        =20 then at best the difference is 800–2600metres (i.e. 4*200–13*200). At worst it is 2000–6500 metres (i.e. 4*500–13*500). On example 10, the difference in solution is 2082metres. Therefore the real difference is 26,000metres (i.e. 13 trips*2000).

The complete results for the meta-heuristics can be found in Appendix B for SA and Appendix C for EA. Our intention was to do ten runs on each test problem and for each parameter set. However given the excessive computation time required for case 10, only several runs were performed using SA. For EA the CPU times were much worse. This occurred from case 7, when the population size was 10. For the larger EA population of size 50, the CPU time became unacceptable from case 4, and hence further runs were cancelled. Poor solution quality was also a factor in cancelling those runs. The BSP and BAP neighbourhoods become particularly large as the size of the sequence increases. This caused excessive CPU time during the improvement stages within the SA and EA approaches. The only remedy was to perform less comparison, but reduced solution quality then resulted.

In summary the SA approach worked well for all the control parameters investigated. The solutions were marginally better with a higher starting temperature (i.e. of 100). Extra iterations per temperature step (i.e. 200 as opposed to 100) however failed to provide any benefit, and superior solutions were not obtained. Solution quality from one run to another was quite similar and consistent. The computation times were very good and for real life applications, those times were acceptable. Using the work metric however added additional CPU time.

The EA approach also worked well. After two hundred generations, the EA approach was still providing improved solutions. If not for the excessive computation time, further generations should have been allowed. The standard sequence crossover operator (SXO) provided solutions of the same quality as the more sophisticated SRO approach. It was also somewhat faster on the larger test problems. Therefore, unless the SRO can be coded more efficiently, and can be modified to provide superior solutions, there is insufficient motivation to use that approach. Attempts at effectively utilising a larger population were deemed unsuccessful. It was found that solution convergence was poor within the specified number of generations. In essence more generations and more CPU time are warranted. The CPU times observed were particularly excessive. For example, a population size of 50 required twice as much CPU time in comparison to a population size of 10 (with the prescribed levels of the self-improvement phase). This was not entirely unexpected as this is a difficult integrated decision making problem.

For comparison purposes the best solutions were extracted. These are summarised in Tables 3 and 4. Interestingly the best results were obtained using EA, and this was across case study 1–9. The difference however was not overwhelmingly great in the majority of cases, that is, assuming a one haul per block situation. Given the excessive computation time of EA though, SA could be reapplied many times, and further local improvement stages could be added. We are therefore quite confident that SA is a superior approach overall, particularly on the larger instances. It should be noted that on average EA required 15–20 times more time than SA. On case 10, SA required around 15h of CPU time. EA was not applied on that case and would have taken 225–300h (9–12days).Upon closer scrutiny of the results we also found that EA was far more consistent between runs. The standard deviations are significantly less than those of SA. Generally EA produced the same quality of solution each run. This can be seen on selected charts in Fig. 7
                        .

The evaluation of the objective function via parallel processing was also compared. The results are summarised in Table 5
                        .

In summary, a significant reduction has occurred across all test problems. The trend for greater reductions as the problem size increases is also visible. For instance on case 10 (and using SA), there is a remarkable reduction of 7h, i.e. from 15h to 8h. This occurs because as the terrain graph becomes bigger, there are a greater number of paths to evaluate (i.e. during the shortest path algorithm). Hence there is more work that can be split amongst the different processors. The reductions for EA were good, however disappointing when compared to SA. In summary, the parallel evaluations were successful in EA but much effort is also required during crossover, and this was not encoded in such a way as to be done in parallel. In order to perform crossovers in parallel, the non-parallel evaluation procedure must then be used in EA. However, all the child solutions could be created first before they are evaluated.

For the work objective, the optimality of the shortest paths was investigated to re-enforce previous theories regarding scaling. The obtained solutions were re-evaluated using the Bellman–Ford algorithm and then compared with the existing scores. They were exactly the same in every test problem. Scaling is therefore viable for producing optimal paths more quickly than using Bellman–Ford.

For practical purposes, visualisation tools are required to demonstrate and validate earthwork plans. Several tools were created for this and this section provides details of those tools so practitioners and researchers can duplicate them, or else obtain them from the authors. Both tools show all the cut–fill assignments and the paths taken to haul material between cut and fill locations. The tools are also able to animate the sequence of cutting and filling for both 2D and 3D scenarios. The first tool has been created in Microsoft Excel (see Fig. 8
                        a). Excel was used because cells elegantly represent stacks of blocks. The advantage of using Excel is that it is generic software, is widely available, and its cost is minimal. This chart is one way of visualising the 3D environment in a simpler 2D format. Otherwise a more sophisticated 3D drawing platform is required. The view is hence a top down perspective. The elevations at each (x, y) grid position is shown in each cell. Blocks that are fixed, and require no further cutting or filling are greyed. Blocks requiring cuts are in blue, and those requiring fill are in red. The animation shows chronologically each cut–fill pairing in the sequence (highlighted in pink), and the path taken to haul material (i.e. a sequence of arrows between cells). The current path and highlighted cells are removed prior to the next “step” in the solution. The colour of cells is also altered (i.e. from blue to grey, or red to grey). The algorithms behind this tool are written in Visual Basic (VBA). The data however is added in separate worksheets using dynamic ranges. In this way, the tool is generic and can easily be used for other scenarios. An origin block location however must be defined – all block positioning and drawings are based upon it.

The second tool utilises the Ruby programming language and Google SketchUp, a free 3D drawing software, like CAD (see Fig. 8b). This software is very simple to use, fully models the terrain in 3D and allows a full 360 degree rotation. Google SketchUp allows Ruby scripts to be activated from its Ruby Console and its “Plugins” Menu. The Ruby scripts can automate all necessary drawing tasks. Therefore all the 3D blocks in our problem can be drawn automatically. An animation that adds and removes blocks in sequence has been implemented. The path between blocks is shown as a series of connected rectangular planes (faces). Each face may be drawn vertically or horizontally. The current cut and fill blocks are temporarily highlighted in the animation. Those blocks requiring excavation are again coloured blue. New blocks when added are coloured red. Two procedures that draw stacks of blocks and surface blocks are also available to the user. Other more sophisticated and expensive software could also be used to accomplish the same ends, but we have found Google SketchUp to be enticingly simple, and powerful.

@&#CONCLUSIONS@&#

An earthwork planning problem, consisting of cut to fill allocation, routing and sequencing has been considered in this article, and a new modelling and solution approach has been developed. This planning problem is a necessary task in linear infrastructure projects due to their large size and their great cost. Additional motivation for this research also arises from current concerns over the environmental impact of earthworks. Our approach can reduce the environmental impact via the reduction of fuel consumption and emissions. This is accomplished by using a fuel consumption proxy in our objective function and by identifying shortest path/smallest cost routes. Our approach provides a significant improvement over previous approaches which are not as accurate or detailed. It can be extended easily, for example by incorporating additional technical conditions and constraints.

As this problem involves integrated decision making, sequencing, and has an objective function with non-static costs, a traditional analytical approach was avoided. Simulated Annealing and Evolutionary Search have therefore been exploited. The fact that more accurate fuel consumption metrics exist, that are quite non-linear and non-deterministic, has also contributed to our choice of approach. Furthermore we have taken into account the large number of blocks that could be present in an actual earthwork project and the intractability of the associated assignment and sequencing model.

This article is significant and innovative in a number of ways. The partitioning of the project site into discrete blocks (i.e. containers of earth) and the development of a block theoretic formulation for this integrated earthworks planning problem, is an approach yet to be reported in the literature. It differs greatly from the approaches proposed in our earlier articles. As most previous calculations for determining the cost of haulage are static and do not necessarily reflect the real terrain after cutting and filling activities have begun, our modelling and evaluation approach is also novel. The application of our approach has shown that the main computational difficulty is the necessity to evaluate the terrain graph repetitively and chronologically. The objective function however can be evaluated in parallel; this requires multiple surface graphs to be constructed and we have demonstrated how to do this. The additional computational effort to construct these graphs was shown to be acceptable and numerical investigations have shown a remarkable reduction when this parallel approach is used. This means that very large earthworks problems can now be solved.

Many further improvements are also possible and could vastly reduce computing times, and could vastly increase the size of problems, for example by considering much smaller blocks. In our implementation, and during the optimisations, a complete solution evaluation was always performed after each solution perturbation. Some perturbations however, alter the solution in a minimal fashion and in retrospect it makes no sense to re-evaluate the entire solution in those situations, but to only re-evaluate the affected parts. The benefit of an improved re-evaluation approach will be a huge reduction in the number of times the shortest path algorithm must be called. This could provide a significant reduction in computational time. Preliminary investigations have shown that the opportunity to do this is far greater for SA, as in EA too many parts of the solution are altered. The cost of each haul and the state of the terrain after each cut–fill should be recorded to facilitate a new approach for solution re-evaluation. The identification of the affected areas is a source of future research and the details will be different for each of the perturbation operators.

Another avenue is to use dynamic algorithms, that are compared in Demetrescu, Frigioni, Marchetti-Spaccamela, and Nanni (2001), that are able to update the shortest path information after arc insertions and deletions and weight updates of arcs. In theory this could also reduce the computational overhead. For objectives that introduce negative arc weights, a quicker single source shortest path algorithm is required as the overhead of the Bellman–Ford approach is prohibitive. The article of Cantone and Faro (2014) describes an approach. In this article the scaling of arc weights has been investigated, as an exact approach in the right circumstances, or as a fast heuristic in other situations. In our opinion scaling is sufficiently accurate for practical purposes and provides a strong measure of the real cost of haulage. In this article scaling is consistent for the work metric and standard grid structures.

In this article the integrated solution consisted of an assignment of cuts to fills and a sequence of cut–fill pairs. An additional requirement to select how much material is moved between blocks could also be included. This was outside the scope of the paper and is a source of future research and testing. It should however be pointed out that the solution representation for this situation would be as follows: 
                        
                           S
                           =
                           {
                           (
                           b
                           ,
                           
                              
                                 b
                              
                              
                                 ′
                              
                           
                           ,
                           q
                           )
                           |
                           b
                           ∈
                           
                              
                                 B
                              
                              
                                 -
                              
                           
                           ,
                           
                              
                                 b
                              
                              
                                 ′
                              
                           
                           ∈
                           
                              
                                 B
                              
                              
                                 +
                              
                           
                           ,
                           q
                           ⩾
                           0
                           }
                        
                     , where q is the amount shifted between block b and b′ in each cut–fill pair. As a consequence of this extension, cut to fills could occur multiple times within the sequence and each pairing “occurrence” could have a different haul amount. Solution infeasibility may also occur if the sum of the hauled amounts, over multiple occurrences of each cut–fill pair, is not satisfied. There are many ways to resolve these types of infeasibilities. Though straightforward, the added computational burden of applying these corrective measures, repeatedly within optimisation routines, is undesirable, but perhaps unavoidable.

It should also be noted that multiple cuts and fills can be performed concurrently in practice. An approach for haulage evaluation, in this situation, is relatively straightforward, given that the original sequence is divided into sub sequences in the following way: S
                     =⋃
                        k
                        =1,…,
                        K
                     
                     S
                     
                        k
                      where 
                        
                           
                              
                                 S
                              
                              
                                 k
                              
                           
                           =
                           {
                           (
                           b
                           ,
                           
                              
                                 b
                              
                              
                                 ′
                              
                           
                           )
                           |
                           b
                           ∈
                           Cut
                           ,
                           
                              
                                 b
                              
                              
                                 ′
                              
                           
                           ∈
                           Fill
                           }
                        
                     , and S
                     
                        k
                     
                     ≺
                     S
                     
                        k+1. In other words S
                     
                        k
                      is the set of cut–fills that occur concurrently. Each cut and fill block must occur in only one of the sets S
                     
                        k
                     . This approach requires that a specified number of shortest path problems be solved before each graph update. The required number is ∣S
                     
                        k
                     ∣ and each graph update would make the moves given in set S
                     
                        k
                     . Hence there will be K updates of the digraph. It should be pointed out that concurrency opportunities can be identified from a current sequence solution. Two cut–fill pairs (say (c
                     
                        i
                     ,
                     f
                     
                        i
                     ) and (c
                     
                        f
                     ,
                     f
                     
                        j
                     )) are concurrent if the shortest path between each cut and fill (i.e. path (c
                     
                        i
                     ,
                     f
                     
                        i
                     ) and path (c
                     
                        f
                     ,
                     f
                     
                        j
                     )) is not affected by the order in which the cuts and fills are performed. In other words the change in elevation at the cut and fill positions does not affect the shortest path or its value.

@&#ACKNOWLEDGEMENTS@&#

This work was performed as part of an ARC – Australian Research Council linkage Grant (LP110200314) in conjunction with Queensland University of Technology, Swinburne University and the Sustainable Built Environment National Research Centre (SBENRC). We would like to thank the anonymous referee for their instructive comments that has greatly improved the quality of this article.

Let each source of cut b
                     ∈
                     B
                     − and each source of fill b′∈
                     B
                     + have an equivalent node v
                     
                        b
                      in a directed graph G
                     =(V,
                     A). As ∣B
                     −∣=∣B
                     +∣=
                     N there will be 
                        
                           
                              
                                 N
                              
                              
                                 ‾
                              
                           
                           =
                           2
                           N
                        
                      nodes. Let V
                     −
                     ={v
                     
                        b
                     
                     ∈
                     V∣b
                     ∈
                     B
                     −} and V
                     +
                     ={v
                     
                        b
                     
                     ∈
                     V∣b
                     ∈
                     B
                     +}. Let d(v
                     
                        i
                     ,
                     v
                     
                        j
                     ) denote the distance between two nodes. This function describes for each cut and fill pairing, the associated cost of haulage. For brevity let us assume that d(v
                     
                        i
                     ,
                     v
                     
                        j
                     )≡
                     d(i,
                     j) and that this function is defined in the following way:
                        
                           
                              
                                 
                                    
                                    
                                       
                                          d
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          =
                                          ∞
                                          
                                          ∀
                                          i
                                          ,
                                          j
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                -
                                             
                                          
                                          ;
                                          
                                          d
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          =
                                          ∞
                                          
                                          ∀
                                          i
                                          ,
                                          j
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                +
                                             
                                          
                                          ;
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          d
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          
                                          ≠
                                          
                                          0
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                -
                                             
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                +
                                             
                                          
                                          ;
                                          
                                          d
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          =
                                          0
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                +
                                             
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          
                                             
                                                V
                                             
                                             
                                                -
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     For the earthworks problem d(σ
                     
                        k
                     ,
                     σ
                     
                        k+1)=
                     ShortestPath(G
                     
                        k
                     ,
                     σ
                     
                        k
                     ,
                     σ
                     
                        k+1) for all 
                        
                           k
                           =
                           1
                           ,
                           3
                           ,
                           …
                           ,
                           
                              
                                 N
                              
                              
                                 ‾
                              
                           
                           -
                           1
                        
                      where 
                        
                           
                              
                                 G
                              
                              
                                 k
                              
                           
                           =
                           F
                           (
                           
                              
                                 G
                              
                              
                                 k
                                 -
                                 1
                              
                           
                           ,
                           
                              
                                 σ
                              
                              
                                 k
                                 -
                                 1
                              
                           
                           ,
                           
                              
                                 σ
                              
                              
                                 k
                              
                           
                           )
                        
                     . Function F performs the following transformation F:G
                     
                        k−1 
                     →
                     G
                     
                        k
                      by performing a fill at 
                        
                           
                              
                                 v
                              
                              
                                 
                                    
                                       σ
                                    
                                    
                                       k
                                       -
                                       1
                                    
                                 
                              
                           
                        
                      and a cut at 
                        
                           
                              
                                 v
                              
                              
                                 
                                    
                                       σ
                                    
                                    
                                       k
                                    
                                 
                              
                           
                        
                     . The appropriate node and arc weights are updated by these actions.
                        Corollary 5
                        
                           An assignment and sequence of cuts and fills is a path through the aforementioned directed graph such that (i) each node is visited once (i.e. Hamiltonian path), and (ii) the nodes however must alternate between cut and fill. Let the path be denoted as S
                           
                           =
                           
                           (σ
                           
                              1
                           
                           ,
                           
                           σ
                           
                              2
                           
                           ,
                           …
                           ,
                           
                           σ
                           
                              2N
                           
                           ). Therefore σ
                           
                              k
                           
                           ∈
                           V
                           − 
                           for 
                           
                              
                                 k
                                 =
                                 1
                                 ,
                                 3
                                 ,
                                 5
                                 ,
                                 …
                                 ,
                                 
                                    
                                       N
                                    
                                    
                                       ‾
                                    
                                 
                                 -
                                 1
                              
                            
                           and σ
                           
                              k
                           
                           ∈
                           V
                           
                              +
                            
                           for all 
                           
                              
                                 k
                                 =
                                 2
                                 ,
                                 4
                                 ,
                                 6
                                 ,
                                 …
                                 ,
                                 
                                    
                                       N
                                    
                                    
                                       ‾
                                    
                                 
                              
                           
                           . The cost of the path is: 
                           
                              
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          
                                             N
                                          
                                          
                                             ‾
                                          
                                       
                                       -
                                       1
                                    
                                 
                                 d
                                 
                                    
                                       
                                          
                                             
                                                σ
                                             
                                             
                                                k
                                             
                                          
                                          ,
                                          
                                             
                                                σ
                                             
                                             
                                                k
                                                +
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                           .
                        


                           If the d(i,
                           
                           j) are static ∀i
                           ∈
                           B
                           −
                           , ∀j
                           ∈
                           B
                           
                              +
                            
                           then this problem is equivalent to a standard travelling salesman problem (TSP) with 
                           
                              
                                 
                                    
                                       N
                                    
                                    
                                       ‾
                                    
                                 
                              
                            
                           cities. If the aforementioned distances are sequence dependant (as they are in practice) then this problem is equivalent to a TSP with time dependant distances (Picard & Queyranne, 1978; Gouveia & Vos, 1995; Abeledo, Fukasawa, Pessoa, & Uchoa, 2013). The standard TSP is NP-hard as are more complex variants involving time dependent distances.
                        

Consider the following tour: S = (C1, F2, C3, F1, C2, F4, C4, F3, C1). It is equivalent to the following sequence of cut–fill pairs: ((C1, F2), (C3, F1), (C2, F4), (C4, F3)). The tour is shown in the following diagram. Dotted arcs signify a zero distance/cost (see Fig. A1
                           ).


                     Fig. B1
                     
                  

Let: 
                        
                           
                              
                                 H
                              
                              
                                 1
                                 ,
                                 2
                              
                           
                           =
                           
                              
                                 H
                              
                              
                                 2
                              
                           
                           -
                           
                              
                                 H
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 H
                              
                              
                                 2
                                 ,
                                 4
                              
                           
                           =
                           
                              
                                 H
                              
                              
                                 4
                              
                           
                           -
                           
                              
                                 H
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 H
                              
                              
                                 1
                                 ,
                                 4
                              
                           
                           =
                           
                              
                                 H
                              
                              
                                 4
                              
                           
                           -
                           
                              
                                 H
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 D
                              
                              
                                 1
                                 ,
                                 2
                              
                           
                           =
                           
                              
                                 
                                    
                                       (
                                       
                                          
                                             H
                                          
                                          
                                             2
                                          
                                       
                                       -
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       dx
                                    
                                    
                                       2
                                    
                                 
                              
                           
                           ,
                           
                              
                                 D
                              
                              
                                 2
                                 ,
                                 4
                              
                           
                           =
                           
                              
                                 
                                    
                                       (
                                       
                                          
                                             H
                                          
                                          
                                             4
                                          
                                       
                                       -
                                       
                                          
                                             H
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       dy
                                    
                                    
                                       2
                                    
                                 
                              
                           
                           ,
                           
                              
                                 D
                              
                              
                                 1
                                 ,
                                 4
                              
                           
                           =
                           
                              
                                 
                                    
                                       (
                                       
                                          
                                             H
                                          
                                          
                                             4
                                          
                                       
                                       -
                                       
                                          
                                             H
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       dxy
                                    
                                    
                                       2
                                    
                                 
                              
                           
                           ,
                           
                           dxy
                           =
                           
                              
                                 
                                    
                                       dx
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       dy
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        
                     . Therefore:
                        
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                W
                                             
                                             
                                                1
                                                ,
                                                2
                                             
                                          
                                          =
                                          
                                             
                                                D
                                             
                                             
                                                1
                                                ,
                                                2
                                             
                                          
                                          Mg
                                          
                                             
                                                
                                                   sin
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                         ,
                                                         2
                                                      
                                                   
                                                   +
                                                   μ
                                                   cos
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                         ,
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          where
                                          
                                          
                                             
                                                θ
                                             
                                             
                                                1
                                                ,
                                                2
                                             
                                          
                                          =
                                          
                                             
                                                tan
                                             
                                             
                                                -
                                                1
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               H
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               H
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                      
                                                      
                                                         dx
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                W
                                             
                                             
                                                2
                                                ,
                                                4
                                             
                                          
                                          =
                                          
                                             
                                                D
                                             
                                             
                                                2
                                                ,
                                                4
                                             
                                          
                                          ×
                                          Mg
                                          
                                             
                                                
                                                   sin
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         2
                                                         ,
                                                         4
                                                      
                                                   
                                                   +
                                                   μ
                                                   cos
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         2
                                                         ,
                                                         4
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          where
                                          
                                          
                                             
                                                θ
                                             
                                             
                                                2
                                                ,
                                                4
                                             
                                          
                                          =
                                          
                                             
                                                tan
                                             
                                             
                                                -
                                                1
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               H
                                                            
                                                            
                                                               4
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               H
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         dy
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                W
                                             
                                             
                                                1
                                                ,
                                                4
                                             
                                          
                                          =
                                          
                                             
                                                D
                                             
                                             
                                                1
                                                ,
                                                4
                                             
                                          
                                          ×
                                          Mg
                                          
                                             
                                                
                                                   sin
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                         ,
                                                         4
                                                      
                                                   
                                                   +
                                                   μ
                                                   cos
                                                   
                                                      
                                                         θ
                                                      
                                                      
                                                         1
                                                         ,
                                                         4
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          where
                                          
                                          
                                             
                                                θ
                                             
                                             
                                                1
                                                ,
                                                4
                                             
                                          
                                          =
                                          
                                             
                                                tan
                                             
                                             
                                                -
                                                1
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               H
                                                            
                                                            
                                                               4
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               H
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                      
                                                      
                                                         dxy
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

It is easy to verify that H
                     1,2
                     +
                     H
                     2,4
                     =
                     H
                     1,4. By virtue of the triangle inequality it is true that dx
                     +
                     dy
                     ⩾
                     dxy. Using trigonometry: D
                     1,2
                     sinθ
                     1,2
                     =
                     H
                     1,2 and D
                     1,2
                     cosθ
                     1,2
                     =
                     dx, D
                     2,4
                     sinθ
                     2,4
                     =
                     H
                     2,4 and D
                     2,4
                     cosθ
                     2,4
                     =
                     dy and D
                     1,4
                     sinθ
                     1,4
                     =
                     H
                     1,4 and D
                     1,4
                     cosθ
                     1,4
                     =
                     dxy. Therefore: 
                        
                           
                              
                                 W
                              
                              
                                 1
                                 ,
                                 2
                              
                           
                           +
                           
                              
                                 W
                              
                              
                                 2
                                 ,
                                 4
                              
                           
                           =
                           Mg
                           
                              
                                 
                                    
                                       
                                          H
                                       
                                       
                                          1
                                          ,
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          H
                                       
                                       
                                          2
                                          ,
                                          4
                                       
                                    
                                    +
                                    μ
                                    
                                       
                                          
                                             dx
                                             +
                                             dy
                                          
                                       
                                    
                                 
                              
                           
                        
                      and W
                     1,4
                     =
                     Mg(H
                     1,4
                     +
                     μdxy). The difference is: 
                        
                           δ
                           =
                           
                              
                                 W
                              
                              
                                 1
                                 ,
                                 2
                              
                           
                           +
                           
                              
                                 W
                              
                              
                                 2
                                 ,
                                 4
                              
                           
                           -
                           
                              
                                 W
                              
                              
                                 1
                                 ,
                                 4
                              
                           
                           =
                           Mg
                           (
                           
                              
                                 H
                              
                              
                                 1
                                 ,
                                 2
                              
                           
                           +
                           
                              
                                 H
                              
                              
                                 2
                                 ,
                                 4
                              
                           
                           -
                           
                              
                                 H
                              
                              
                                 1
                                 ,
                                 4
                              
                           
                           +
                           μ
                           (
                           dx
                           +
                           dy
                           -
                           dxy
                           )
                           )
                        
                     . Since H
                     1,2
                     +
                     H
                     2,4
                     =
                     H
                     1,4 then δ 
                     =
                     μMg(dx
                     +
                     dy
                     −
                     dxy). As dx
                     +
                     dy
                     ⩾
                     dxy, then δ
                     ⩾0.

See Tables C1–C3
                     
                     
                     .

See Tables D1–D3
                     
                     
                     .

@&#REFERENCES@&#

