@&#MAIN-TITLE@&#An efficient genetic algorithm with a corner space algorithm for a cutting stock problem in the TFT-LCD industry

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a two-dimensional cutting-stock problem using a mixed production method.


                        
                        
                           
                           This approach uses genetic algorithm that incorporates a corner space placement.


                        
                        
                           
                           This approach also employs a mixed integer programming model.


                        
                        
                           
                           We compare genetic algorithm with the bottom-left (and bottom-left fill) method.


                        
                        
                           
                           The results show that the proposed approach outperforms the current approaches.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Two-dimensional cutting

Mixed production

Genetic algorithm

TFT-LCD

Corner space algorithm

@&#ABSTRACT@&#


               
               
                  In this study, we investigate a two-dimensional cutting stock problem in the thin film transistor liquid crystal display industry. Given the lack of an efficient and effective mixed production method that can produce various sizes of liquid crystal display panels from a glass substrate sheet, thin film transistor liquid crystal display manufacturers have relied on the batch production method, which only produces one size of liquid crystal display panel from a single substrate. However, batch production is not an effective or flexible strategy because it increases production costs by using an excessive number of glass substrate sheets and causes wastage costs from unused liquid crystal display panels. A number of mixed production approaches or algorithms have been proposed. However, these approaches cannot solve industrial-scale two-dimensional cutting stock problem efficiently because of its computational complexity. We propose an efficient and effective genetic algorithm that incorporates a novel placement procedure, called a corner space algorithm, and a mixed integer programming model to resolve the problem. The key objectives are to reduce the total production costs and to satisfy the requirements of customers. Our computational results show that, in terms of solution quality and computation time, the proposed method significantly outperforms the existing approaches.
               
            

@&#INTRODUCTION@&#

The thin film transistor liquid crystal display (TFT-LCD) industry is a next-generation high-technology industry. Glass substrate is the basic raw material used in manufacturing LCD products. Basically, manufacturers attempt to cut large rectangular glass substrate sheets into various sizes of rectangular LCD panels (e.g., 15, 17, and 32 inch panels) in three production stages, which apply the array, cell, and module processes. However, determining the optimal production plan for cutting several different-sized LCD panels from a single glass substrate sheet to fulfill the orders of customers is a major challenge. Traditionally, TFT-LCD manufacturers have relied on the batch production method, which can produce only one size of LCD panel from a single glass substrate sheet, as shown in Fig. 1(a). The method is inefficient and inflexible because it increases production costs by using an excessive number of glass substrate sheets and causes wastage costs from unused LCD panels. Ideally, manufacturers should be able to produce different-sized LCD panels from a single sheet (Fig. 1(b)) to satisfy the orders of customers and minimize costs. However, an efficient mixed production strategy is lacking. In this study, we propose an efficient and effective genetic algorithm (GA) that incorporates a novel placement procedure, called a corner space algorithm (CSA), and a mixed integer programming model to implement a mixed production strategy. The method solves industrial-scale problems in the TFT-LCD industry by minimizing the number of glass substrate sheets required to satisfy the orders of customers.

Minimizing the number of rectangular stock sheets required to fulfill the orders of customers is a classic cutting stock problem (CSP) (Dyckhoff, 1990; Sweeney & Paternoster, 1992) that has many applications in various fields, such as manufacturing, electronics, and related engineering industries. The applications include crosscutting smaller rectangular products from wood stocks (Reinders, 1992), cutting TFT-LCD panels from glass substrate sheets (Tsai, Hsieh, & Huang, 2009), and overseas container shipping services (Chen, Lee, & Shen, 1995; Pisinger, 2002; Wang, Li, & Levy, 2008). Hinxman (1980) classified such problems as one-dimensional, 1½-dimensional, and two-dimensional (2D) problems. In this study, we focus on 2D cutting stock problems (2DCSPs).
                  

The approaches proposed to solve 2DCSPs can be divided into two classes, namely, exact methods and heuristic methods. In the exact class, Viswanathan and Bagchi (1993) designed the well-known exact algorithm to solve constrained 2DCSPs. They employed the best-first tree search algorithm based on Wang's bottom-up approach to guarantee optimal solutions. Hifi (1997) modified Viswanathan and Bagchi's algorithm to improve the computational performance. Subsequently, Cung, Hifi and, Cun (2000) extended Hifi's algorithm to solve some variants of weighted constrained 2DCSPs exactly. Degraeve and Schrage (1999) used the column generation technology within branch-and-bound to solve an integer linear programming model of 2DCSP. Pisinger and Sigurd (2007) developed a branch-and-price-and-cut algorithm based on Dantzig–Wolfe's decomposition and delayed column generation approach to solve 2DCSPs. The algorithm can solve several instances with up to 100 rectangles optimally.

In the heuristic class, Wang (1983) proposed two combinable methods that generate constrained cutting patterns by building successive horizontal and vertical layers of ordered rectangles. Beaslay (1985) introduced a heuristic algorithm integrated with an integer programming model to solve a 2DCSP in the guillotine industry. Jakobs (1996) designed the well-known bottom-left algorithm (BLA) integrated with GA to obtain the packing pattern for solving a packing problem. Leung, Chan, and Troutt (2003) also proposed a mixed simulated annealing algorithm integrated with GA to improve the solution time of the 2D packing problem. Umetani, Yagiura, and Ibaraki (2003) utilized metaheuristics and adaptive pattern generation techniques to minimize the amount of stock required to cut different patterns for a one-dimensional CSP. Gradisar and Trkman (2005) proposed a combined approach for the general one-dimensional CSP. Lin (2006) developed a novel encoding schema that employs BLA integrated with GA to enhance Jakobs’ (1996) algorithm. He, Huang, and Jin (2012) proposed a best-fit algorithm (BFA) to maximize the filling rate of a rectangular sheet to solve the 2D rectangular packing problem. For more related articles on the 2D packing problem, readers may refer to the studies of Wu, Huang, Lau, Wong, and Young Gilbert (2002), Bortfeldt (2006), Zhang, Kang, and Deng (2006), Huang, Chen, and Xu (2007), and Wei, Zhang, and Chen (2009). Additionally, the heuristic algorithms of Huang and He (2009), He and Huang (2011), and Zhang, Peng, and Stephen Leung (2012) were used to solve a related three-dimensional (3D) loading problem.

Although the aforementioned studies can solve the 2D packing problem, they do not consider satisfying the orders of customers. In our initial study, we attempt to use related heuristic algorithms, including BLA and BFA, directly to solve 2DCSP with customer orders. We determined that the algorithm convergence times exceeded a reasonable time (i.e., 3600 seconds). Thus, we propose an efficient GA that incorporates a novel placement procedure and a mixed integer programming model. For the key point, we utilize the same evolutionary algorithm to compare the performances of the traditional batch production method, the BLA method, the BFA method, and the proposed method to solve 2DCSP in the TFT-LCD industry.

All the deterministic/exact methods in the literature use the analytical properties of the problem to generate a sequence of points that converge to an optimal solution. The deterministic/exact methods are usually the well-defined algorithms or their variants, such as the simplex algorithm for linear programs and the branch-and-bound algorithm for mixed integer programs. According to Garey and Johnson (1979), the CSPs and their extensions and variants, which were solved by the branch-and-bound method, are NP-hard. Therefore, obtaining the global optimum of a large problem in a reasonable time is impossible. Several approaches use the column generation techniques and branch-and-price algorithms to deal with the difficulties of CSPs solved by mixed integer programs. However, obtaining an optimal solution when the size of CSPs reaches the industrial scale remains difficult. By contrast, all heuristic algorithms guarantee completion of the computation process within a reasonable time. However, the solution quality may not converge to the optimum. In practice, heuristic algorithms provide the only possible way to solve 2DCSPs on the industrial scale. For heuristic algorithms to be effective, the production plan needs an accurate set of cutting patterns to minimize the number of glass substrates required to fulfill the orders of customers. Most heuristic approaches use pre-generated cutting patterns to solve 2DCSPs. However, searching an accurate set of cutting patterns is the most difficult task in heuristic algorithms.


                     Tsai et al. (2009) first solved the 2DCSP for the mixed production strategy in the TFT-LCD industry by developing a mixed-integer linear programming (MILP) model to verify all possible cutting patterns. The computational results from the study show that a mixed production method indeed achieves better utilization of glass substrate sheets. However, Tsai et al. concluded that “the directions for further research are to take more production situations and factors into consideration and to integrate heuristic or distributed algorithms to enhance the computational efficiency.” We observed that the algorithm of Tsai et al. has two limitations, as follows:

                        
                           (i)
                           The algorithm only performs well on small-scale problems. However, the number of possible cutting patterns is large for several different-sized LCD panels. For example, we let the number of sizes of LCD panels be I and let the maximal cutting quantity of each LCD panel from a single glass substrate be qi
                               for 
                                 
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    I
                                 
                              . Then, the number of all possible cutting patterns is 
                                 
                                    
                                       ∏
                                       
                                          i
                                          =
                                          1
                                       
                                       I
                                    
                                    
                                       q
                                       i
                                    
                                    −
                                    1
                                 
                              .

The algorithm is unsuitable when a large glass substrate sheet is cut into small LCD panels because it must utilize an MILP model to verify the feasibility of all possible cutting patterns. If the number of cutting patterns is greater than 10, then the MILP model cannot verify the patterns in a reasonable time.

Given the computational complexity of 2DCSPs described previously, existing approaches cannot solve industrial-scale CSPs in the TFT-LCD industry efficiently. We propose an efficient GA that incorporates a novel placement procedure called CSA, to mine an accurate set of cutting patterns efficiently and solve such problems. The main contributions of this study are as follows:

                        
                           (i)
                           In contrast to the method of Tsai et al. (2009), the proposed approach works well with a mixed production strategy, irrespective of the size of the problem. The proposed approach provides an efficient and effective way to solve industrial-scale 2DCSPs in the TFT-LCD industry.

The severity of the 2DCSP depends largely on the quality of the derived cutting patterns. In contrast to existing methods, the proposed novel replacement procedure (CSA) integrated with the GA can derive an accurate set of cutting patterns in an acceptable computation time.

The rest of this paper is organized as follows. In Section 2, we define the 2DCSP in the TFT-LCD industry and formulate it as a mixed-integer programming model. In Section 3, we introduce an efficient GA, which is integrated with a novel placement procedure (CSA) and an MILP model in the fitness function to mine an accurate set of cutting patterns. In Section 4, we present the computational results and discuss the advantages of the proposed method. Then, we summarize our conclusions in Section 5.
                     
                  

In this section, we consider the 2DCSP in the TFT-LCD industry and formulate it as a mixed-integer programming model. We assume that the size of a glass substrate sheet is (W, L), where W is width and L is length, and that I different types of LCD panels can be produced, where the width and length are (wi, li
                     ) for 
                        
                           i
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           I
                        
                     . We let the demanded quantities of orders for the ith LCD panel be di
                     . The 2DCSP involves determining the minimum number of glass substrate sheets required to fulfill all customer orders. We assume that we have obtained J cutting patterns by using the mixed production strategy in advance and let 
                        
                           f
                           j
                           i
                        
                      be the number of ith LCD panels cut from a glass substrate sheet by the
jth cutting pattern. For example, 
                        
                           I
                           =
                           3
                        
                      represent three types of LCD panels and 
                        
                           
                              f
                              j
                              1
                           
                           =
                           3
                        
                     , 
                        
                           
                              f
                              j
                              2
                           
                           =
                           2
                        
                     , and 
                        
                           
                              f
                              j
                              3
                           
                           =
                           5
                        
                      represent the number of each LCD panel cut from a single sheet by the
jth cutting pattern. The notations used to describe the problem are listed in Table 1. The 2DCSP in the TFT-LCD industry can be solved by the P1 model (cutting stock MILP model) when J unique cutting patterns have been generated.


                     P1 model:

                        
                           
                              
                                 Min
                                 
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    J
                                 
                                 
                                    u
                                    j
                                 
                              
                           
                        
                     
                     
                        
                           (1)
                           
                              
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    J
                                 
                                 
                                    
                                       f
                                       j
                                       i
                                    
                                    
                                       u
                                       j
                                    
                                 
                                 ≥
                                 
                                    d
                                    i
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 I
                                 ,
                              
                           
                        
                     
                     
                        
                           (2)
                           
                              
                                 
                                    f
                                    j
                                    i
                                 
                                 ≤
                                 
                                    d
                                    i
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 I
                                 ,
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 J
                                 ,
                              
                           
                        
                     where uj
                      are the integer variables that determine how many times the cutting pattern j will be used. Constraint (1) satisfies the total demand for each product type, and Constraint (2) prevents the maximal value of parameter 
                        
                           f
                           j
                           i
                        
                      from becoming more than the total number of orders for the ith LCD panels.

Notably, the solution for 2DCSP depends on the quality of the cutting patterns. Therefore, deriving an accurate set of cutting patterns is the key to solving 2DCSP in the TFT-LCD industry. Assessing all potential cutting patterns to determine the global optimum is impossible because the number of patterns is large when the problem size reaches the industrial scale. However, metaheuristic methods are appropriate for deriving an accurate set of cutting patterns. Among such methods, the GA is the most widely used population-based metaheuristic to solve 2DCSPs (Gonçalves, 2007; Jakobs, 1996; Kroger, 1995; Lin, 2006; Wagner, 1999). We propose an efficient GA with a novel placement procedure, the CSA, which generates an accurate set of cutting patterns, to solve industrial-scale 2DCSPs in the TFT-LCD industry.

We developed an efficient GA with a CSA to generate an accurate set of cutting patterns through an evolutionary process because of the computational complexity of the proposed cutting stock model. The encoding schema, decoding chromosome procedure (also called the placement procedure), and fitness function are the core components of the GA-based approach. Decoding the chromosome is an important process that transfers the chromosome to a cutting pattern by a placement procedure. Therefore, we developed the CSA, which is one of the major contributions of this study, to implement the placement procedure. Table 2 shows the pseudocode of the combined GA and CSA, where P(t) represents the parents, M(t) represents the mating pool, Q(t)' represents the offspring from M(t) after the crossover operation, Q(t) represents the offspring from Q(t)' after the mutation operation, and t denotes the generation. The sizes of M(t), Q(t)', and Q(t) are set to be equal to 0.8* (the size of P(t)) to derive a sufficient number of possible offspring. In this study, we select the standard two-point crossover (TPX) and randomly swap position mutation (SPM) operators to diversify and produce new children for mating in the next generation. Based on our experimental experience with up to a hundred initial tests, the probabilities of standard TPX and randomly SPM of the GA are fixed at 0.95 and 0.5, respectively, and the population size is equal to the offspring size. In the following subsections, we describe the proposed approach in detail.

The placement procedure (CSA) in decoding is a critical process that transfers the chromosome to a cutting pattern. In the proposed algorithm, we use CSA as a placement procedure in the GA metaheuristic algorithm. In the reference methods, the placement procedure CSA is replaced by BLA or BFA to compare the performances of those methods. In Tournament Selection, a chromosome is selected from the population P(t) of the mating pool, where two chromosomes are first randomly selected from the population P(t). Then, the chromosome with the greater fitness value is selected as a parent and placed into the mating pool. Elitist Selection is a selection strategy where a limited number of chromosomes in P(t) with the best fitness values are selected to pass to the next generation 
                        
                           P
                           (
                           t
                           +
                           1
                           )
                        
                     .

A chromosome is composed of a permutation of small rectangular items cut from a single stock sheet. A chromosome also represents the rectangle cutting sequence. Thereafter, the chromosome is decoded as a feasible cutting pattern by the CSA. Initially, all the chromosomes in the population are generated by a random method. Therefore, some chromosomes may not have a sufficient sequence of small rectangular items to determine the minimal number of stock sheets required to solve the 2DCSP. However, the quality of the chromosomes is improved by the crossover and mutation operations in each generation because of the excellent evolutionary property of the GA. By utilizing the CSA and the fitness function, the algorithm can select the best chromosomes and keep them for the next generation. The last generation of the population yields an accurate set of cutting patterns. The notations used in the GA are shown in Table 3
                        .

The initial step of the GA decides the length of the chromosome. In Table 1, I types of different-sized LCD panels can be produced from a single glass substrate sheet in this 2DCSP. The length of the chromosome can be determined by calculating Eq. (3). Evidently, a chromosome must be sufficiently long to contain all the items in a cutting pattern.

                           
                              (3)
                              
                                 
                                    N
                                    =
                                    MAX
                                    
                                       {
                                       
                                          
                                             ⌊
                                             
                                                
                                                   W
                                                   L
                                                
                                                
                                                   
                                                      w
                                                      i
                                                   
                                                   
                                                      l
                                                      i
                                                   
                                                
                                             
                                             ⌋
                                          
                                          ,
                                          ∀
                                          i
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          I
                                       
                                       }
                                    
                                    .
                                 
                              
                           
                        
                     

We let πg
                         be the gthchromosome in the population and let 
                           
                              π
                              g
                              n
                           
                         be the nth gene in the gthchromosome. Based on the length N in Eq. (3), the structure of the chromosome is represented as follows:

                           
                              (4)
                              
                                 
                                    
                                       π
                                       g
                                    
                                    =
                                    
                                       (
                                       
                                          π
                                          g
                                          1
                                       
                                       ,
                                       
                                          π
                                          g
                                          2
                                       
                                       ,
                                       …
                                       ,
                                       
                                          π
                                          g
                                          N
                                       
                                       )
                                    
                                    ,
                                    
                                       π
                                       g
                                       n
                                    
                                    ∈
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       ⋯
                                       ,
                                       I
                                       }
                                    
                                    ,
                                    n
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    N
                                    .
                                 
                              
                           
                        
                     

The gene 
                           
                              π
                              g
                              n
                           
                         in Eq. (4) represents the specific small rectangular item cut from the stock sheet in this cutting pattern. Therefore, the value of 
                           
                              π
                              g
                              n
                           
                         can represent the indicator of the specific product types. The chromosome πg
                         consists of a permutation of all product types cut from a single glass substrate and represents the cutting sequence of small rectangular items related to the product types. The advantage of this encoding schema is the easy execution of the creation, duplication, crossover, and mutation operations in the GA. For example, randomly generating the initial population with 
                           
                              
                                 π
                                 g
                                 n
                              
                              ∈
                              
                                 {
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 I
                                 }
                              
                           
                         for 
                           
                              n
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              N
                           
                         is quite easy. This short encoding schema, which can be completely decoded as the cutting pattern by the proposed CSA, is efficient for all the operators in the GA.

After randomly generating the distinct G chromosomes 
                           
                              {
                              
                                 π
                                 1
                              
                              ,
                              …
                              ,
                              
                                 π
                                 G
                              
                              }
                           
                         for the first generation of the population, the fitness function needs a decoding process to convert the original chromosome into cutting patterns to measure the quality of each chromosome for the sorting and reproduction operators. Therefore, we propose an efficient placement procedure, called the CSA, which is incorporated into the decoding process and places the cut items one at a time in the order defined by the chromosomes πg
                        . The CSA can maximally extract the unused space of a single stock to cut the items based on the chromosome and avoid the unused fragment. The additional notations used in the CSA are listed in Table 4
                        . Note that (W, L) and (wi, li
                        ) are the same as in Table 1.

When attempting to cut a rectangular item from a stock sheet, the CSA only considers the available rectangular spaces that are tracked by a set of corner spaces. Each unused rectangular space is tracked by a corner space that contains bottom-left coordinate, width, and length. If a rectangular item (a gene) of the chromosome can be placed in a certain corner space, then the CSA aligns the bottom-left coordinates of the certain corner space and the item. Then, the CSA places the item in the certain corner space, divides the remaining space of the certain corner space into two new corner spaces that can contain other small rectangular items, and removes the placed item from the chromosome. The CSA also merges small corner spaces to form a larger space, if they can be merged. This merging step improves the utility of any unused space on the glass substrate sheet and reduces the number of fragmented corner spaces generated by the dividing step of the CSA. The aforementioned process continues until no other small rectangular items of the chromosome can be placed in the tracked corner spaces. The objective is to maximize the use of the unoccupied space of a single stock for cutting the rectangular items to possibly satisfy the demand of customers. The flowchart of the CSA is shown in Fig. 2
                        .

The Steps of the CSA:

                           
                              
                                 Step 1:
                              
                              Let 
                                    
                                       n
                                       =
                                       1
                                    
                                 , 
                                    
                                       
                                          n
                                          g
                                       
                                       =
                                       0
                                    
                                 , 
                                    
                                       
                                          C
                                          g
                                       
                                       =
                                       
                                          {
                                          
                                             c
                                             g
                                             1
                                          
                                          }
                                       
                                    
                                 , where 
                                    
                                       
                                          c
                                          g
                                          1
                                       
                                       =
                                       
                                          [
                                          
                                             x
                                             g
                                             1
                                          
                                          ,
                                          
                                             y
                                             g
                                             1
                                          
                                          ,
                                          
                                             w
                                             g
                                             1
                                          
                                          ,
                                          
                                             l
                                             g
                                             1
                                          
                                          ]
                                       
                                    
                                 
                                 
                                    
                                       =
                                       [
                                       0
                                       ,
                                       0
                                       ,
                                       W
                                       ,
                                       L
                                       ]
                                    
                                 ; and 
                                    
                                       
                                          Q
                                          g
                                       
                                       =
                                       ∅
                                    
                                  (∅ means the cutting pattern does not contain any cut rectangular item).

Let 
                                    
                                       k
                                       =
                                       1
                                    
                                 . Pick one gene 
                                    
                                       π
                                       g
                                       n
                                    
                                  from the current chromosome πg
                                  sequentially, and get the corresponding width and length (
                                    
                                       
                                          w
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ,
                                       
                                          l
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                    
                                 ) of the product type from the gene 
                                    
                                       π
                                       g
                                       n
                                    
                                 .

If the rectangle (
                                    
                                       
                                          w
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ,
                                       
                                          l
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                    
                                 ) can be placed in the corner space 
                                    
                                       c
                                       g
                                       k
                                    
                                  (
                                    
                                       
                                          w
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ≤
                                       
                                          w
                                          g
                                          k
                                       
                                    
                                  and 
                                    
                                       
                                          l
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ≤
                                       
                                          l
                                          g
                                          k
                                       
                                    
                                 , or 
                                    
                                       
                                          w
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ≤
                                       
                                          l
                                          g
                                          k
                                       
                                    
                                  and 
                                    
                                       
                                          l
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ≤
                                       
                                          w
                                          g
                                          k
                                       
                                    
                                 ), calculate the value of 
                                    
                                       
                                          F
                                          k
                                       
                                       =
                                       
                                          
                                             
                                                w
                                                
                                                   π
                                                   g
                                                   n
                                                
                                             
                                             ×
                                             
                                                l
                                                
                                                   π
                                                   g
                                                   n
                                                
                                             
                                          
                                          
                                             
                                                w
                                                g
                                                k
                                             
                                             ×
                                             
                                                l
                                                g
                                                k
                                             
                                          
                                       
                                    
                                 ; otherwise, let 
                                    
                                       
                                          F
                                          k
                                       
                                       =
                                       0
                                    
                                 .

Let 
                                    
                                       k
                                       =
                                       k
                                       +
                                       1
                                    
                                  and repeat Step 3 until all corner spaces in Cg
                                  have been checked.

Get the indicator k' with Max{Fk
                                 , ∀k}. If 
                                    
                                       
                                          F
                                          
                                             k
                                             ′
                                          
                                       
                                       =
                                       0
                                    
                                 , go to Step 7; otherwise (F
                                 
                                    k' ≠ 0), it means that (i) the rectangle (
                                    
                                       
                                          w
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ,
                                       
                                          l
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                    
                                 ) can be placed in the corner space 
                                    
                                       c
                                       g
                                       
                                          k
                                          ′
                                       
                                    
                                 , and (ii) among all the corner spaces in Cg
                                 , 
                                    
                                       c
                                       g
                                       
                                          k
                                          ′
                                       
                                    
                                  is the most suitable corner space to place the rectangle (
                                    
                                       
                                          w
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ,
                                       
                                          l
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                    
                                 ). Then, the following sub-steps (Step 5.1 to Step 5.3) are placing the rectangle (
                                    
                                       
                                          w
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                       ,
                                       
                                          l
                                          
                                             π
                                             g
                                             n
                                          
                                       
                                    
                                 ) into the corner space 
                                    
                                       c
                                       g
                                       
                                          k
                                          ′
                                       
                                    
                                  and dividing the corner space 
                                    
                                       c
                                       g
                                       
                                          k
                                          ′
                                       
                                    
                                  into two new sub-corner spaces.

                                    
                                       
                                          Step 5.1:
                                       
                                       
                                          
                                             
                                                
                                                   n
                                                   g
                                                
                                                ←
                                                
                                                   n
                                                   g
                                                
                                                +
                                                1
                                             
                                          .

If 
                                             
                                                
                                                   w
                                                   
                                                      π
                                                      g
                                                      n
                                                   
                                                
                                                ≤
                                                
                                                   w
                                                   g
                                                   
                                                      k
                                                      ′
                                                   
                                                
                                             
                                           and 
                                             
                                                
                                                   l
                                                   
                                                      π
                                                      g
                                                      n
                                                   
                                                
                                                ≤
                                                
                                                   l
                                                   g
                                                   
                                                      k
                                                      ′
                                                   
                                                
                                             
                                          , place the rectangular item in the corner space 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   ′
                                                
                                             
                                           with original direction as follows:

                                             
                                                (a)
                                                create 
                                                      
                                                         
                                                            q
                                                            g
                                                            
                                                               n
                                                               g
                                                            
                                                         
                                                         =
                                                         
                                                            [
                                                            
                                                               x
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               y
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               w
                                                               
                                                                  π
                                                                  g
                                                                  n
                                                               
                                                            
                                                            ,
                                                            
                                                               l
                                                               
                                                                  π
                                                                  g
                                                                  n
                                                               
                                                            
                                                            ]
                                                         
                                                      
                                                    and add 
                                                      
                                                         q
                                                         g
                                                         
                                                            n
                                                            g
                                                         
                                                      
                                                    to Qg
                                                   ;

if 
                                                      
                                                         
                                                            w
                                                            g
                                                            
                                                               k
                                                               ′
                                                            
                                                         
                                                         −
                                                         
                                                            w
                                                            
                                                               π
                                                               g
                                                               n
                                                            
                                                         
                                                         >
                                                         0
                                                      
                                                   , create a new corner space 
                                                      
                                                         
                                                            c
                                                            g
                                                            
                                                               k
                                                               2
                                                            
                                                         
                                                         =
                                                         
                                                            [
                                                            
                                                               x
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            +
                                                            
                                                               w
                                                               
                                                                  π
                                                                  g
                                                                  n
                                                               
                                                            
                                                            ,
                                                            
                                                               y
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               w
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            −
                                                            
                                                               w
                                                               
                                                                  π
                                                                  g
                                                                  n
                                                               
                                                            
                                                            ,
                                                            
                                                               l
                                                               
                                                                  π
                                                                  g
                                                                  n
                                                               
                                                            
                                                            ]
                                                         
                                                      
                                                    and insert it after the corner space 
                                                      
                                                         c
                                                         g
                                                         
                                                            k
                                                            ′
                                                         
                                                      
                                                    in Cg
                                                   ;

if 
                                                      
                                                         
                                                            l
                                                            g
                                                            
                                                               k
                                                               ′
                                                            
                                                         
                                                         −
                                                         
                                                            l
                                                            
                                                               π
                                                               g
                                                               n
                                                            
                                                         
                                                         >
                                                         0
                                                      
                                                   , create a new corner space 
                                                      
                                                         
                                                            c
                                                            g
                                                            
                                                               k
                                                               1
                                                            
                                                         
                                                         =
                                                         
                                                            [
                                                            
                                                               x
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               y
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            +
                                                            
                                                               l
                                                               
                                                                  π
                                                                  g
                                                                  n
                                                               
                                                            
                                                            ,
                                                            
                                                               w
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            
                                                               l
                                                               g
                                                               
                                                                  k
                                                                  ′
                                                               
                                                            
                                                            −
                                                            
                                                               l
                                                               
                                                                  π
                                                                  g
                                                                  n
                                                               
                                                            
                                                            ]
                                                         
                                                      
                                                    and insert it after the corner space 
                                                      
                                                         c
                                                         g
                                                         
                                                            k
                                                            ′
                                                         
                                                      
                                                    in Cg
                                                   ;

delete the corner space 
                                                      
                                                         c
                                                         g
                                                         
                                                            k
                                                            ′
                                                         
                                                      
                                                    from Cg
                                                   .

go to Step 6.

If 
                                             
                                                
                                                   l
                                                   
                                                      π
                                                      g
                                                      n
                                                   
                                                
                                                ≤
                                                
                                                   w
                                                   g
                                                   
                                                      k
                                                      ′
                                                   
                                                
                                             
                                           and 
                                             
                                                
                                                   w
                                                   
                                                      π
                                                      g
                                                      n
                                                   
                                                
                                                ≤
                                                
                                                   l
                                                   g
                                                   
                                                      k
                                                      ′
                                                   
                                                
                                             
                                          , place the small rectangular item in the corner space 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   ′
                                                
                                             
                                           with rotating direction as follows:

create 
                                             
                                                
                                                   q
                                                   g
                                                   
                                                      n
                                                      g
                                                   
                                                
                                                =
                                                
                                                   [
                                                   
                                                      x
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   ,
                                                   
                                                      y
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   ,
                                                   
                                                      l
                                                      
                                                         π
                                                         g
                                                         n
                                                      
                                                   
                                                   ,
                                                   
                                                      w
                                                      
                                                         π
                                                         g
                                                         n
                                                      
                                                   
                                                   ]
                                                
                                             
                                           and add 
                                             
                                                q
                                                g
                                                
                                                   n
                                                   g
                                                
                                             
                                           to Qg
                                          ;

if 
                                             
                                                
                                                   w
                                                   g
                                                   
                                                      k
                                                      ′
                                                   
                                                
                                                −
                                                
                                                   l
                                                   
                                                      π
                                                      g
                                                      n
                                                   
                                                
                                                >
                                                0
                                             
                                          , create a new corner space 
                                             
                                                
                                                   c
                                                   g
                                                   
                                                      k
                                                      2
                                                   
                                                
                                                =
                                                
                                                   [
                                                   
                                                      x
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   +
                                                   
                                                      l
                                                      
                                                         π
                                                         g
                                                         n
                                                      
                                                   
                                                   ,
                                                   
                                                      y
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   ,
                                                   
                                                      w
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   −
                                                   
                                                      l
                                                      
                                                         π
                                                         g
                                                         n
                                                      
                                                   
                                                   ,
                                                   
                                                      w
                                                      
                                                         π
                                                         g
                                                         n
                                                      
                                                   
                                                   ]
                                                
                                             
                                           and insert it after the corner space 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   ′
                                                
                                             
                                           in Cg
                                          ;

if 
                                             
                                                
                                                   l
                                                   g
                                                   
                                                      k
                                                      ′
                                                   
                                                
                                                −
                                                
                                                   w
                                                   
                                                      π
                                                      g
                                                      n
                                                   
                                                
                                                >
                                                0
                                             
                                          , create a new corner space 
                                             
                                                
                                                   c
                                                   g
                                                   
                                                      k
                                                      1
                                                   
                                                
                                                =
                                                
                                                   [
                                                   
                                                      x
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   ,
                                                   
                                                      y
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   +
                                                   
                                                      w
                                                      
                                                         π
                                                         g
                                                         n
                                                      
                                                   
                                                   ,
                                                   
                                                      w
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   ,
                                                   
                                                      l
                                                      g
                                                      
                                                         k
                                                         ′
                                                      
                                                   
                                                   −
                                                   
                                                      w
                                                      
                                                         π
                                                         g
                                                         n
                                                      
                                                   
                                                   ]
                                                
                                             
                                           and insert it after the corner space 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   ′
                                                
                                             
                                           in Cg
                                          ;

delete the corner space 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   ′
                                                
                                             
                                           from Cg
                                          .

If Step 5.2(b) (or Step 5.3(b)) created a new corner space 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   2
                                                
                                             
                                           that is not the last corner space in Cg
                                          , the step will check if 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   2
                                                
                                             
                                           can be merged with the next corner space 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   2
                                                   +
                                                   1
                                                
                                             
                                          , and merge them if they can be merged.

If 
                                             
                                                
                                                   x
                                                   g
                                                   
                                                      k
                                                      2
                                                   
                                                
                                                =
                                                
                                                   x
                                                   g
                                                   
                                                      k
                                                      2
                                                      +
                                                      1
                                                   
                                                
                                             
                                           and 
                                             
                                                
                                                   w
                                                   g
                                                   
                                                      k
                                                      2
                                                   
                                                
                                                =
                                                
                                                   w
                                                   g
                                                   
                                                      k
                                                      2
                                                      +
                                                      1
                                                   
                                                
                                             
                                          , then

create a new corner space 
                                             
                                                
                                                   c
                                                   g
                                                   
                                                      k
                                                      ′
                                                   
                                                
                                                =
                                                
                                                   [
                                                   
                                                      x
                                                      g
                                                      
                                                         k
                                                         2
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      y
                                                      g
                                                      
                                                         k
                                                         2
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      w
                                                      g
                                                      
                                                         k
                                                         2
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      l
                                                      g
                                                      
                                                         k
                                                         2
                                                      
                                                   
                                                   +
                                                   
                                                      l
                                                      g
                                                      
                                                         k
                                                         2
                                                         +
                                                         1
                                                      
                                                   
                                                   ]
                                                
                                             
                                           and insert it after the corner space 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   2
                                                   +
                                                   1
                                                
                                             
                                           in Cg
                                          ;

delete 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   2
                                                
                                             
                                           from Cg
                                          ;

delete 
                                             
                                                c
                                                g
                                                
                                                   k
                                                   2
                                                   +
                                                   1
                                                
                                             
                                           from Cg
                                          .

Let 
                                             
                                                n
                                                =
                                                n
                                                +
                                                1
                                             
                                           and go to Step 2 if n ≤ N.

Let 
                                             
                                                
                                                   f
                                                   g
                                                   i
                                                
                                                =
                                                0
                                             
                                           for all 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                I
                                             
                                          .

If the element 
                                             
                                                q
                                                g
                                                k
                                             
                                           in the cutting pattern Qg
                                           belongs to product type i, 
                                             
                                                
                                                   f
                                                   g
                                                   i
                                                
                                                ←
                                                
                                                   f
                                                   g
                                                   i
                                                
                                                +
                                                1
                                             
                                           for 
                                             
                                                k
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                
                                                   n
                                                   g
                                                
                                             
                                          , 
                                             
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                I
                                             
                                          .

We use the CSA to replace the rectangular items and the P1 model to calculate the total number of glass substrate sheets required to fulfill all customer orders and to determine the fitness value of each chromosome. In other words, measuring the fitness value requires information on chromosome πg
                         obtained by the CSA procedure and details of the entire population derived from the P1 model. In the P1 model, we assumed that (1) J cutting patterns have been prepared for use in advance and (2) the proposed GA method generates the set of cutting patterns. The number of cutting patterns is G because the proposed CSA decodes each chromosome as a cutting pattern. The J cutting patterns used in the P1 model are automatically mapped from the G cutting patterns generated by the GA with CSA. By integrating the P1 model with the proposed GA method, the values of parameters G and J are the same. Moreover, the fitness function is deduced based on the following rule:
                     

Fitness rule: The fitness function is used to measure the quality of each chromosome πg
                         (cutting pattern) in the population, as shown in Eq. (5). A smaller value of the fitness function is more effective in solving 2DCSPs in the TFT-LCD industry.

                           
                              (5)
                              
                                 
                                    F
                                    i
                                    t
                                    n
                                    e
                                    s
                                    s
                                    
                                       (
                                       
                                          π
                                          g
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            ∑
                                                            
                                                               g
                                                               =
                                                               1
                                                            
                                                            G
                                                         
                                                         
                                                            u
                                                            g
                                                         
                                                         )
                                                      
                                                      2
                                                   
                                                   /
                                                   
                                                      u
                                                      g
                                                   
                                                   ,
                                                
                                             
                                             
                                                
                                                   if
                                                   
                                                   
                                                      u
                                                      g
                                                   
                                                   ≠
                                                   0
                                                
                                             
                                          
                                          
                                             
                                          
                                          
                                             
                                                
                                                   M
                                                   ,
                                                
                                             
                                             
                                                
                                                   if
                                                   
                                                   
                                                      u
                                                      g
                                                   
                                                   =
                                                   0
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                    ,
                                    g
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    G
                                    ,
                                 
                              
                           
                        where ug
                         is the number of gth cutting patterns used in the P1 model and Mis an infinite constant.

The fitness function expressed in Eq. (5) is composed of the following two parts:

                           
                              (6)
                              
                                 
                                    F
                                    i
                                    t
                                    n
                                    e
                                    s
                                    s
                                    
                                       (
                                       
                                          π
                                          g
                                       
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          g
                                          =
                                          1
                                       
                                       G
                                    
                                    
                                       u
                                       g
                                    
                                    ·
                                    
                                       1
                                       
                                          
                                             u
                                             g
                                          
                                          
                                             
                                                ∑
                                                
                                                   g
                                                   =
                                                   1
                                                
                                                G
                                             
                                             
                                                u
                                                g
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                        
                           
                              (i)
                              The first part, 
                                    
                                       
                                          ∑
                                          
                                             g
                                             =
                                             1
                                          
                                          G
                                       
                                       
                                          u
                                          g
                                       
                                    
                                 , is the objective value of the P1 model and denotes the number of glass substrate sheets required to fulfill all customer orders. The first part is calculated by considering all the chromosomes that represent possible cutting patterns generated by the GA. Evidently, a smaller value in the first part is better because it reduces the fitness value.

The second part, 
                                    
                                       1
                                       /
                                       (
                                       
                                          
                                             
                                                u
                                                g
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      g
                                                      =
                                                      1
                                                   
                                                   G
                                                
                                                
                                                   u
                                                   g
                                                
                                             
                                          
                                       
                                       )
                                    
                                 , is the reciprocal of 
                                    
                                       
                                          u
                                          g
                                       
                                       /
                                       
                                          ∑
                                          
                                             g
                                             =
                                             1
                                          
                                          G
                                       
                                       
                                          u
                                          g
                                       
                                    
                                  and represents the contribution of the cutting pattern ug
                                  among all cutting patterns. The larger the value of ug
                                 , the more important the cutting pattern because of more frequent use by the P1 model. Given that the reciprocal of 
                                    
                                       
                                          u
                                          g
                                       
                                       /
                                       
                                          ∑
                                          
                                             g
                                             =
                                             1
                                          
                                          G
                                       
                                       
                                          u
                                          g
                                       
                                    
                                  is used, a smaller value in the second part is evidently better because it also reduces the fitness value.

Based on both parts, Eq. (6) can be used to measure the quality of chromosome πg
                         and help the GA select better chromosomes for the next generation.

We utilize TPX and SPM to generate the offspring because the encoding schema of the chromosome uses permutation-based representation. Then, we briefly describe the crossover and mutation operations in the GA.

Our initial tests include one-point, two-point, and a combination of one-point and two-point crossover operators. We determined that the TPX operator was more efficient than the other operators. Thus, the TPX operator is used in this study to create new offspring when the probability is greater than 0.95, where the probability is randomly generated at each time before creating a new offspring. A TPX operator calls for two points to be randomly selected on the chromosomes of two parents. Everything between the two points is swapped between the parents, rendering two offspring. Fig. 3 shows an example of a TPX operation.

In our initial tests, we determined that the SPM was more efficient than the randomly swapped mutation. Therefore, the SPM operator randomly selects two elements and swaps their positions if the probability is greater than 0.5 to produce new offspring with a randomly generated probability, as shown in Fig. 4
                           .

A repair mechanism is used to convert an infeasible chromosome into a feasible chromosome because the generated chromosomes may violate the constraint in Eq. (2), as shown by the example in Fig. 5
                        . The correction procedure for each chromosome is implemented as follows.

                           
                              
                                 Step 1:
                              
                              Let 
                                    
                                       F
                                       g
                                       i
                                    
                                  denote the number of genes with a value of i in chromosome g. The constraint in Eq. (2) may be violated if 
                                    
                                       
                                          F
                                          g
                                          i
                                       
                                       >
                                       
                                          d
                                          i
                                       
                                    
                                  for each product type i. If this is the case, let 
                                    
                                       
                                          F
                                          g
                                          i
                                       
                                       =
                                       
                                          d
                                          i
                                       
                                    
                                  so that the genes with the value of i from the chromosome g are removed and set their value as null.

For the genes with a null value, either randomly generate product types or keep some genes as null that do not violate the constraint in Eq. (2) to complete the genes.

The proposed algorithm was implemented in Java version 6.0 and embedded ILOG CPLEX 11 (ILOG, 2008) as the MILP solver to solve the cutting-stock MILP model (P1 model). The experiments were run on a personal computer equipped with an Intel Core 2 Duo central processing unit, 4 GB random access memory, and Windows 7 operating system. We implemented two sets of problems, namely, the benchmark problem sets of Burke, Kendall, and Whitwell (2004) and realistic problem sets collected from the 8th generation (8G) and 10th generation (10G) facilities in the TFT-LCD industry of Taiwan, to validate the effectiveness of the algorithm. The dimensions of the 8G and 10G glass substrates were 305 centimeters × 285 centimeters and 240 centimeters × 220 centimeters, respectively. We compared the proposed GA with the CSA placement procedure with the following approaches:

                        
                           (i)
                           
                              Batch production method—The production strategy currently used in the TFT-LCD industry. Only one size of TFT-LCD panel is cut from a glass substrate sheet.


                              Integer programming method—The mixed integer programming model of Tsai et al. (2009), which can support mixed production, is used to solve 2DCSPs in the TFT-LCD industry.


                              Bottom-left placement method—BLA is a well-known placement procedure for 2DCSPs (Hopper & Turton, 1999; Jakobs, 1996; Lin, 2006). Based on the pseudocode of GA in Table 2, the placement procedure (i.e., CSA) is replaced by the BLA placement procedure to decode P(t) for solving 2DCSP.


                              Best-fit placement method—BFA is a best-fit placement procedure used to determine the action space for the 2D rectangular packing problem (He et al., 2012). We also use the same evolutionary GA shown in Table 2. Meanwhile, the decoding step is replaced by the BFA placement procedure.

In Section 4.1, we use the benchmark problem sets of Burke et al. (2004) to compare the computation times required by the proposed method, integer programming method, GA with BLA, and GA with BFA to derive accurate cutting patterns. Then, in Section 4.2, we use real TFT-LCD cases to compare the solution quality of the proposed method with that of the batch production method, the GA with BLA method, and the GA with BFA method.

Mining a set of accurate cutting patterns is the most difficult step in solving 2D-CSP. The solution quality is highly dependent on the quality of the derived cutting patterns. Thus, deriving a set of accurate cutting patterns is the most critical task. However, the TFT-LCD industry has a time limitation for solving 2DCSP to obtain the optimal production plan rapidly. The first experiment compared the computation time required by the integer programming method, the GA with BLA, the GA with BFA, and the proposed GA with CSA to derive cutting patterns. The integer programming method was solved by ILOG CPLEX 11 (ILOG, 2008) using the default settings, and the other methods were implemented by Java programming language. Given that the efficiency of the GA depends largely on its control parameters, we need to tune the parameters by initial tests of up to a hundred times. The full factorial design of experiment (DOE) was conducted to determine the appropriate settings, which are listed in Table 5
                        . The experiment was run 30 times, and the average computation time for each problem was calculated.
                     

The benchmark problem sets (see Appendix A) from the smaller size (problem N1 in Table A1) to the larger size (problem N5 in Table A5) are all derived from the study of Burke et al. (2004). For each problem (N1–N5, Tables A1–A5), all the shapes/products are placed on one sheet without any unused areas. Therefore, the utilization rate of the sheet is 100 percent and the global optimum is obtained. However, achieving the global optimum for each problem is impractical when the number of shapes increases. For each benchmark problem, we set a threshold value for the utilization rate and record the average computation time (in seconds) when the compared methods achieve that value. For example, the threshold for the N2 problem is 95 percent, which indicates that the terminal condition for each compared method of the area covered by the shapes exceeds 95 percent, or the execution time has timeout.

Theoretically, the method of Tsai et al. guarantees that the best solution (the global optimum) will be determined. However, the computation time of the method is unacceptable. The results shown in Table 6 indicate that BLA, BFA, and the proposed CSA achieve the threshold for problem N1 within 3 seconds, whereas the method of Tsai et al. requires 2678.3 seconds. When the size of the test problem increases (problems N2 to N5), the method of Tsai et al. always terminates because of timeout (exceeding 10 hours), whereas the BLA, the BFA, and the proposed CSA still achieve the threshold within a short time. In the TFT-LCD industry, the number of shapes (panels) always exceeds 20,000. However, the method of Tsai et al. cannot solve such industrial-scale problems in an acceptable time. Table 6 and Fig. 6
                         show that the proposed method achieves the shortest solution time, which is 10 times faster than the GA with BLA method and 3 times faster than the GA with BFA method. Therefore, the proposed method outperforms the compared methods on all the benchmark problem sets. In the subsequent section, the more significant results of the proposed method are validated further by using real TFT-LCD cases.

To verify the effectiveness and efficiency of the proposed algorithm, we conducted an experiment on real-world 2DCSPs in the 8G and 10G facilities of the TFT-LCD industry of Taiwan. Related information is available from the following websites:

▪ STPI: http://cdnet.stpi.org.tw/techroom/market/eedisplay/eedisplay290.htm.

▪ Mobile: http://www.mobile01.com/topicdetail.php?f=350&t=874736&p=1.

In the 10G facility of the TFT-LCD industry, the dimensions of the glass substrate sheets are 305 centimeters × 285 centimeters. We assume that the factory produces 9 types of products to satisfy the 10 customer orders listed in Table 7
                           . For example, order 5 needs 1150 units of product 1 measuring 15 centimeters × 20 centimeters and 1500 units of product 2 measuring 90 centimeters × 56 centimeters.

The settings of the GA parameters are also important factors in the second set of experiments. The full factorial DOE is also conducted to determine the appropriate settings by initial tests of up to 100 times. Table 8
                            lists the best settings used in the experiments.

We also use the same evolutionary GA by referring to Table 2 in Section 3. The solutions for the customer orders shown in Table 7 were derived by using the batch production method, the GA with BLA placement, the GA with BFA placement, and the GA with the proposed CSA. For the GA with BLA, the GA with BFA, and the proposed method, the experiment was run 30 times and the average performance of each method was calculated.

(a) Batch production method

The batch production method is the current strategy used in the TFT-LCD industry. Given that the method can only cut one size of TFT-LCD panel from a glass substrate sheet and each order involves manufacturing nine different TFT-LCD products, the method must derive nine cutting patterns to fulfill the orders. Table 9
                            lists the nine possible cutting patterns generated by the aforementioned method, where j represents the index of the cutting patterns. For example, the numbers of LCD panels i cut from a glass substrate sheet with the first cutting pattern are 
                              
                                 (
                                 
                                    f
                                    1
                                    1
                                 
                              
                           , 
                              
                                 f
                                 1
                                 2
                              
                           , 
                              
                                 f
                                 1
                                 3
                              
                           , 
                              
                                 f
                                 1
                                 4
                              
                           , 
                              
                                 f
                                 1
                                 5
                              
                           , 
                              
                                 f
                                 1
                                 6
                              
                           , 
                              
                                 f
                                 1
                                 7
                              
                           , 
                              
                                 f
                                 1
                                 8
                              
                           , 
                              
                                 
                                    f
                                    1
                                    9
                                 
                                 
                                    )
                                 
                              
                            = (285, 0, 0, 0, 0, 0, 0, 0, 0). The objective value (total number of glass substrates used) of the P1 model is 1901, which corresponds to the nine generated cutting patterns shown in Table 9, and the solutions (i.e., the number of each cutting pattern used) are (u
                           1, u
                           2, u
                           3, u
                           4, u
                           5, u
                           6, u
                           7, u
                           8, u
                           9) = (5, 100, 84, 146, 209, 255, 355, 263, 484) to fulfill order 5. In other words, the batch production method requires 1901 glass substrates to fulfill order 5.

(b) GA with the bottom-left placement procedure (GA with BLA)

This method utilizes the proposed GA shown in Table 2 as the evolutionary algorithm and the well-known BLA as the placement procedure. Thus far, no researchers have been able to integrate the proposed GA with BLA to solve the 2DCSP in the TFT-LCD industry. Table 10
                           
                            shows the possible 50 cutting patterns derived by this method and the number of cutting patterns used for order 5. The objective value (total number of glass substrates used) of the P1 model with 50 cutting patterns is 1884 and the solutions (number of each cutting pattern used) are (u
                           1, u
                           3, u
                           4, u
                           5, u
                           6, u
                           7, u
                           11, u
                           20, u
                           22, u
                           29, u
                           47, u
                           48) = (279, 105, 106, 254, 354, 1, 4, 613, 3, 122, 1, 2) to fulfill order 5. The value of the other patterns is 0. With this method, 1884 glass substrates are needed to fulfill order 5.
                           
                           
                           
                           
                           
                           
                        

(c) GA with the best-fit placement procedure (GA with BFA)

This method also utilizes the proposed GA shown in Table 2 as the evolutionary algorithm and the BFA procedure as the placement procedure. Thus far, no researchers integrate the proposed GA with BFA to solve the 2DCSP in the TFT-LCD industry. Table 11 shows the possible 50 cutting patterns derived by this method and the number of cutting patterns used for order 5. This method uses 1714 glass substrates to fulfill order 5. The solutions (number of each cutting pattern used) are (u
                           8, u
                           19, u
                           20, u
                           22, u
                           23, u
                           29, u
                           36, u
                           39, u
                           43) = (133, 100, 1, 190, 691, 346, 48, 26, 179).

(d) GA with the proposed corner space placement procedure (GA with CSA)

The 50 possible cutting patterns derived by the proposed GA with CSA placement are listed in Table 12. The objective value of the P1 model for solving order 5 is 1684. The numbers of cutting patterns used are 
                              
                                 
                                    u
                                    2
                                 
                                 =
                                 619
                              
                           , 
                              
                                 
                                    u
                                    6
                                 
                                 =
                                 4
                              
                           , 
                              
                                 
                                    u
                                    9
                                 
                                 =
                                 188
                              
                           , 
                              
                                 
                                    u
                                    23
                                 
                                 =
                                 121
                              
                           , 
                              
                                 
                                    u
                                    38
                                 
                                 =
                                 262
                              
                           , 
                              
                                 
                                    u
                                    39
                                 
                                 =
                                 139
                              
                           , 
                              
                                 
                                    u
                                    44
                                 
                                 =
                                 38
                              
                           , 
                              
                                 
                                    u
                                    46
                                 
                                 =
                                 161
                              
                           , and 
                              
                                 
                                    u
                                    48
                                 
                                 =
                                 145
                              
                           . This approach only uses 1684 glass substrates to fulfill order 5.

Based on the aforementioned approaches, Table 13 lists the average-case solutions (number of used glass substrates) among 30 replications for all customer orders listed in Table 7. For order 5 in Table 13, the numbers of glass substrates used by the batch production method, the GA with BLA placement, the GA with BFA placement, and the GA with the proposed CSA placement are 1901; 1884; 1714; and 1595, respectively. Thus, the proposed method requires 306 fewer substrates than the batch production method, 289 fewer substrates than the GA with BLA placement method, and 119 fewer substrates than the GA with BFA placement method. For small orders (1–4), the proposed method requires at least 13 fewer substrates. For medium orders (5–7), the proposed method saves 100–200 glass substrates. The results for orders 8–10 are significant because the proposed method requires at least 300 fewer glass substrates than the compared methods. Among the compared methods, the batch production method yields the worst performance.

The evolution of the total number of glass substrates used is shown in Fig. B1 in Appendix B, where the x-axis is the computation time and the y-axis is the total number of glass substrates used. The green, dashed, and solid lines represent the total number of glass substrates used by the GA with BLA placement, the GA with BFA placement, and the proposed method, respectively. From the tendency of the evolution diagrams, we observe that the proposed approach outperforms the GA with BLA placement and the GA with BFA placement from the beginning point to the end point (the time equals 1000 seconds). We calculated and recorded the difference gaps (percent) between the GA with BLA placement and the proposed method and between the GA with BFA placement and the proposed method at various discrete time points, namely, 200, 400, 600, 800, and 1000 seconds, as shown in Tables 14 and 15, to validate the superior performance of the proposed method over the other two methods. We determined that the average difference at various time points was greater than 3 percent ( ≥ 3 percent) for all orders. Thus, the proposed approach yields the best solution for 2DCSPs in the TFT-LCD industry.

The dimensions of the glass substrate sheets used in the 8G facility of the TFT-LCD industry are 240 centimeters × 220 centimeters. The factory produced 8 types of products to complete the 20 orders listed in Table 16. The 2DCSP in the 8G facility is more complex and larger than the problem in the 10G facility because the 8G facility produces smaller products. Thus, more combinations of cutting patterns are required. We used the batch production method, the GA with BLA placement procedure, the GA with BFA placement procedure, and the proposed method to fulfill the 20 orders, where the same evolutionary GA shown in Table 2 is used.

The settings of the GA parameters are the same as those presented in Table 8. We ran the experiment 30 times and collected the computational results and the average-case solutions (number of glass substrates used) for each order, as shown in Table 17. Evidently, the GA with CSA placement uses the smallest number of glass substrates. In particular, for orders 16–20, the GA with CSA placement uses 800 fewer glass substrates than the other methods. The evolution of the total number of glass substrates used for the 20 orders is shown in Fig. B2 in Appendix B. We also calculated and recorded the difference gaps (percent) between the GA with BLA placement and the proposed method as well as between the GA with BFA placement and the proposed method at the discrete time points of 200, 500, and 1000 seconds, as shown in Table 18, to validate the superior performance of the proposed method over the other two methods. The results show that the proposed approach is capable of solving real-world 2DCSPs. Moreover, the proposed approach performs well on large-scale problems because the 2DCSP in the 8G facility is more complex than the problem in the 10G facility.

We let N denote the number of items (i.e., the length of chromosomes in GA). Based on the studies of Jakobs (1996) and Liu and Teng (1999), we determined that the computational complexity of the BLA placement procedure is O(N
                        2) in the worst case. The BFA and CSA placement procedures can use the k–d tree data structure (Rosenberg, 1985) to determine the possible locations. Therefore, the time complexities of the BFA and CSA placement procedures can be denoted as O(log N) in the calculation process. However, the BFA needs to implement additional 
                           
                              N
                              (
                              N
                              −
                              1
                              )
                              /
                              2
                           
                         steps for extending spaces and merging spaces, whereas the CSA has no extra steps. In the worst case, the time complexity of BFA is O(N
                        2). Notably, the time complexity of the CSA placement procedure is polynomial and relatively small compared with the BLA and BFA placement procedures.

In this study, the proposed approach is a GA combined with the CSA placement procedure and utilizes the MILP. However, GA naturally possesses the property of probability because of the crossover and mutation operators. Thus, estimating the required number of generations in GA is difficult. Therefore, we only calculate the complexities of the GAs in one generation. We denote G as the population size in GA. In the worst case, the time complexities of GA with CSA placement procedure, GA with BFA placement procedure, and GA with BLA placement procedure are O(Glog N), O(GN
                        2), and O(GN
                        2), respectively.

Additionally, the computation times of the GA with BLA placement procedure, GA with BFA placement procedure, and GA with CSA placement procedure are set within 1000 seconds in this study. The computation time needed to solve the P1 model is unaffected by the order quantities because the computation time of each order problem is within 2 seconds by the CPLEX software. The experimental results show that the proposed approach can efficiently solve the large-scale problems in the TFT-LCD industry.

@&#CONCLUSION@&#

In this study, we propose an efficient-and-effective mixed production approach that can produce various sizes of LCD panels from a glass substrate sheet. In this mixed production approach, a GA that incorporates a novel placement procedure, called CSA, is proposed for mining an accurate set of cutting patterns. The results of the computational experiments show that the mixed production approach can efficiently solve industrial-scale problems to fulfill customer orders in the TFT-LCD industry. The proposed algorithm also yields better solutions and is more efficient and effective than existing methods. Most importantly, the proposed algorithm can resolve real-world 2DCSPs in the TFT-LCD industry efficiently.

Future research on the development of enhanced heuristics to satisfy the requirements of customers directly could be conducted. Furthermore, other situations and factors should be considered, such as the delivery times, transportation costs, and setup costs. The proposed algorithm can also be extended to 3D packing problems in the air transport industry.

@&#ACKNOWLEDGMENTS@&#

The first author was supported by the National Science Council of Taiwan under grants NSC 102-2410-H-030-063-MY3, and the second author was supported by the Fundamental Research Funds for the Central Universities of China 268SWJTU15WCX01. The authors wish to thank the area editor, the associate editor, and the anonymous referees for providing insightful comments and suggestions, which have helped us improving the quality of the paper.


                     
                     
                     
                     
                     
                     
                  


                     
                  

The source codes included CSA, BLA and BFA placement procedures are available at the following URL.


                     https://drive.google.com/open?id=0B1Zbw_syhfSsZUdjbzJWQlc2aFE&authuser=0
                  

Supplementary material associated with this article can be found, in the online version, at doi:10.1016/j.ejor.2015.04.044.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

