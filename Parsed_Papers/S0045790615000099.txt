@&#MAIN-TITLE@&#The pseudo-distance technique for parallel lossless compression of color-mapped images

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A pseudo-distance technique (PDT2) for lossless compression of images is given.


                        
                        
                           
                           Parallelization of the technique is presented.


                        
                        
                           
                           The performance of the PDT2 in Hyper-Threading is evaluated.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Parallel image compression

Hyper-Threading

Color-mapped images

PDT

BWT

PNG

@&#ABSTRACT@&#


               
               
                  Data compression is a challenging process with important practical applications. Specialized techniques for lossy and lossless data compression have been the subject of numerous investigations during last several decades. Previously, we studied the use of the pseudo-distance technique (PDT) in lossless compression of color-mapped images and its parallel implementation. In this paper we present a new technique (PDT2) to improve compression gain of PDT. We also present a parallelized implementation of the new technique, which results in substantial gains in compression time while providing the desired compression efficiency. We demonstrate that on non-dithered images PDT2 outperforms PDT by 22.4% and PNG by 29.3%. On dithered images, PDT2 achieves compression gains of 7.1% over PDT and 23.8% over PNG. We also show that the parallel implementation of PDT2, while compromising compression less than 0.3%, achieves near linear speedup and utilization of Intel Hyper-Threading technology on supported systems improves speedup on average 18%.
               
            

@&#INTRODUCTION@&#

For long term storage and efficient transmission of data, use of data compression is necessary. The purpose of a data compression process is to reduce the file size while minimizing the deterioration of information on the data. Reducing redundant data in a file is one of the common approaches used by most compression algorithms. Data compression consists of two main parts: encoding and decoding. Encoding is the process of generating data to represent original data in a more compact form. Decoding process is the reverse of the encoding process. In decoding, using compressed data, the original data is reconstructed.

There are two main types in data compression: lossy and lossless. In lossy compression, some information of the data may be ignored in encoding. When the encoded data is decoded, the original file and the decompressed file may differ. When portions of the data are not completely essential and minor loss in data is acceptable, lossy compression algorithms may be preferred in order to maximize compression gain. However, in some cases, e.g. medical images, when the quality of the image is top priority and any loss on data is not tolerable, the use of lossless compression algorithm is the preferred practice. In lossless compression, while the quality of a file is preserved, the reduction in the file size may not be as good as in lossy compression.

Color image quantization [1,2] is a commonly used technique, especially for low-cost display devices. Such devices have certain limitations most notably the inability to display the full RGB color space. An image file that uses RGB color space may include 16.8million (
                        
                           
                              
                                 2
                              
                              
                                 24
                              
                           
                        
                     ) possible color combinations. To represent the whole spectrum, an RGB color image requires three bytes for each pixel; one byte for each color (red, blue, and green). The color quantization technique is applied to RGB images to map 24bits to 16, 8, or 4bits per pixel. In this technique, after creating a suitable palette to reduce number of colors, each pixel in the RGB image is replaced with the index of the closest color in the palette. When a palette size is 256 (
                        
                           
                              
                                 2
                              
                              
                                 8
                              
                           
                        
                     ) or less, each index can be represented with 8bits (a byte). Hence, the size of image can be reduced from three bytes to one byte per pixel by applying the quantization process.

During the quantization process, certain quantization errors, e.g. color distortion, may be introduced. To minimize quantization errors, utilization of dithering algorithms is an accepted practice. Many of the commonly used dithering algorithms employ some sort of a diffusion process where colors that are not available in the palette are approximated by a diffusion of colored pixels from within the available palette. Further information on dithering algorithms utilizing diffusion are available in, for example, [3,4].

Quantized images are stored and transmitted after they are compressed lossless with one of the standard image compressors, e.g. GIF, PNG, JPEG-LS, or JPEG2000. To improve compression gains, before using one of these compressors, re-indexing of the color table indices have been investigated by many researchers [5–8]. In the survey paper [5], Pinho and Neves compared various re-indexing schemes and concluded that “the pairwise merging heuristic proposed by Memon et al. is the most effective, but also the most computationally demanding.” They also “found that the second most effective method is a modified version of Zeng’s reordering technique, which was 3–5% worse than pairwise merging, but much faster.” In a more recent publication [8], Battiato et al. proposed a new re-indexing algorithm and showed that “by using the PNG codec, the values of bpps of the proposed approach are considerably lower than the other methods; in some cases, the differences are substantial”.

Instead of re-indexing color-table indices, Kuroki et al. in [9] proposed a different technique called the pseudo-distance technique (PDT) for lossless compression of non-dithered and dithered color-mapped images. PDT uses neighboring pixels to create a pseudo-distance table and transforms index values into pseudo-distance table values. In our earlier studies [10,11], we showed that better compression gains over other techniques are possible when PDT is applied to non-dithered color-mapped images along with an arithmetic coder. In [12], we examined the PDT for dithered color-mapped images and demonstrated that PDT is effective also on dithered images. Later, we investigated the use of a dynamic pseudo-distance table and in [13] showed that further improvement on compression gain is possible when the entries of the pseudo-distance table are updated based on the neighboring pixels.

The increased availability and lower prices of multi-core central processing units (CPU) for personal computers and mobile devices created an interest in parallelization of commonly used data compression algorithms. Howard and Vitter [14] proposed an efficient parallelization of Huffman and arithmetic coder for lossless image compression. Gilchrist [15] developed a parallel implementation of bzip2. In [16], Gilchrist and Cuhadar presented various parallel algorithms of block sorting technique, e.g., Burrows–Wheeler Transform (BWT) for lossless image compression. In [17], we showed that PDT is highly parallelizable and suitable for systems with multi-core CPUs. When we parallelized the PDT algorithm in [11], we obtained near linear speedup and showed that by using the parallel implementation of PDT, compression time can be reduced significantly for lossless compression of the non-dithered color-mapped images.

In this paper, first, we present a new pseudo-distance technique (PDT2) that improves the efficiency of our previous sequential PDT algorithm. The main improvements are: PDT uses three neighbors of a pixel to encode the pixel value but PDT2 uses up to five neighbors of the pixel; while the PDT algorithm updates one row of the pseudo-distance table for each pixel, PDT2 may update up to five rows based on the availability of neighbors of the pixel. In addition, PDT2 swaps the entries of a pseudo-distance values depending on neighboring pixels to better predict error values from the pseudo-distance table.

Second, we parallelize the PDT2 using the same technique that we utilized in [17] to parallelize PDT. Furthermore, we evaluate the performance of the parallel implementation of PDT2 along with the Hyper-Threading technology on the dithered and non-dithered color-mapped images. With PDT2, we improve the compression gain 22.4% over our previous study [11] on the non-dithered images, 7.13% on the dithered images [13]. The speedup with the parallelization of PDT2 agrees with the theoretical prediction form Amdahl’s Law [18], with only 0.3% compression loss, and in case of Hyper-Threading with Casey’s Law [19].

This paper is planned as follows: In Section 2, the description of the PDT2 is outlined. In Section 3, the description of the block-sorting transformation and the arithmetic coder used is presented. In Section 4, the experimental results are discussed, and finally, in Section 5, the conclusions of our paper are summarized.

In this section, we briefly describe the Euclidean distance, encoding and decoding algorithms of PDT2, and a parallel implementation of PDT2 algorithm.

This subsection defines the Euclidean distance and how the distance matrix uses the color-map table while creating the pseudo-distance matrix. A color-mapped image consists of two parts; a header and an image data. In the header part, a table of (
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                              
                                 
                                    G
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                              
                                 
                                    B
                                 
                                 
                                    i
                                 
                              
                           
                        ) values of the colors used in the image. The color table of image Music.bmp, from our set of test images, using 8 colors is displayed in Table 1
                        .

The Euclidean distance is defined between two color indices a and b (0⩽
                        a, b
                        ⩽255) from the color-mapped table of an image as follows:
                           
                              (1)
                              
                                 D
                                 [
                                 a
                                 ,
                                 b
                                 ]
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   (
                                                   dR
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   (
                                                   dG
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                             +
                                             
                                                
                                                   (
                                                   dB
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             3
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              D
                              [
                              a
                              ,
                              b
                              ]
                           
                         is the distance between index a and index b, dR
                        the difference between the R values of a and b, dG the difference between the G values of a and b, dB is the difference between the B values of a and b.

By calculating the Euclidean distance between every pair of indices, a distance matrix D can be constructed. The distance matrix D of Music.bmp is illustrated in Table 2
                        .

The values in a given row of the Euclidean distance matrix D may not be necessarily unique. This problem makes the encoding ambiguous. The problem can be solved by forming a new pseudo-distance matrix P, where each row element 
                           
                              P
                              [
                              a
                              ,
                              b
                              ]
                           
                         gets a unique integer value output, where 0⩽output⩽255, as follows. In each row, the smallest distance value is set to 0, the next distance value is set to 1, and so on, until the largest value is set to 255. In case of equal distance values, they are set to consecutive integer values bases on the location of the distance values in the row. The pseudo-distance matrix P of Music.bmp is given in Table 3
                        .

In this section we describe our new pseudo-distance encoding and decoding algorithms which we will call PDT2 and reverse PDT2. In encoding, we first form a distance matrix D by calculating Euclidean distance between every pair of indices from a color-map table and using the distance matrix D, we create a pseudo-distance matrix P. For simplicity, x, and its neighbors 
                           
                              a
                              ,
                              
                              b
                              ,
                              
                              c
                              ,
                              
                              d
                              ,
                              
                              e
                           
                         denote the pixel values and their locations shown in Table 4
                        . PDT2 works as described in Algorithm 1 below.
                           Algorithm 1
                           Pseudo Distance Transform (PDT2). 
                                 
                                    
                                       
                                       
                                          
                                             1: repeat
                                             
                                          
                                          
                                             2: 
                                                
                                                   
                                                      ac
                                                      ←
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      c
                                                      ]
                                                      ,
                                                      
                                                      bc
                                                      ←
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      c
                                                      ]
                                                      ,
                                                      
                                                      cc
                                                      ←
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      c
                                                      ]
                                                      ,
                                                      
                                                      dc
                                                      ←
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      c
                                                      ]
                                                      ,
                                                      
                                                      ec
                                                      ←
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      c
                                                      ]
                                                   
                                                
                                             
                                          
                                          
                                             3: 
                                                for 
                                                
                                                   
                                                      i
                                                      ←
                                                      1
                                                   
                                                 to 
                                                   
                                                      number
                                                      
                                                      of
                                                      
                                                      colors
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             4: 
                                                if 
                                                
                                                   
                                                      (
                                                      ac
                                                      >
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             5: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             6: 
                                                end if
                                             
                                          
                                          
                                             7: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      b
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      bc
                                                      >
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             8: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             9: 
                                                end if
                                             
                                          
                                          
                                             10: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      c
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      c
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      cc
                                                      >
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             11: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             12: 
                                                end if
                                             
                                          
                                          
                                             13: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      c
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      dc
                                                      >
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             14: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             15: 
                                                end if
                                             
                                          
                                          
                                             16: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      c
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      d
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      ec
                                                      >
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             17: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             18: 
                                                end if
                                             
                                          
                                          
                                             19: 
                                                end for
                                             
                                          
                                          
                                             20: 
                                                
                                                   
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                      ,
                                                      
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                      ,
                                                      
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                      ,
                                                      
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                      ,
                                                      
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             21: 
                                                
                                                   
                                                      output
                                                      ←
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      x
                                                      ]
                                                   
                                                
                                             
                                          
                                          
                                             22: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             23: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      b
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             24: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             25: 
                                                end if
                                             
                                          
                                          
                                             26: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      c
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      c
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             27: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             28: 
                                                end if
                                             
                                          
                                          
                                             29: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      c
                                                      !
                                                      =
                                                      d
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             30: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             31: 
                                                end if
                                             
                                          
                                          
                                             32: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      c
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      d
                                                      !
                                                      =
                                                      e
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             33: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             34: 
                                                end if
                                             
                                          
                                          
                                             35: 
                                                
                                                   
                                                      xx
                                                      ←
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      x
                                                      ]
                                                   
                                                
                                             
                                          
                                          
                                             36: 
                                                for 
                                                
                                                   
                                                      i
                                                      ←
                                                      1
                                                   
                                                 to 
                                                   
                                                      number
                                                      
                                                      of
                                                      
                                                      colors
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             37: 
                                                if 
                                                
                                                   
                                                      (
                                                      xx
                                                      >
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             38: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             39: 
                                                end if
                                             
                                          
                                          
                                             40: 
                                                end for
                                             
                                          
                                          
                                             41: 
                                                
                                                   
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      x
                                                      ]
                                                      ←
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             42: until all pixels processed
                                          
                                       
                                    
                                 
                              
                           

The final pseudo-distance matrix after applying the PDT2 transformation of Music.bmp is shown in Table 5
                        . It is evident in this table that the uniqueness of entries of each row is preserved under the PDT2 transformation, which is central to successful decoding. We state and prove the following theorem:
                           Theorem 2.1
                           
                              The PDT2 transformation preserves the uniqueness of the entries of each row of the pseudo-distance matrix P.
                           

We consider the five neighbors 
                                 
                                    a
                                    ,
                                    
                                    b
                                    ,
                                    
                                    c
                                    ,
                                    
                                    d
                                    ,
                                    
                                    e
                                 
                               of pixel x, as shown in Table 4. We look up the values of these five neighbors and select the distinct values only so that no row gets updated more than once. We update a row as follows. We consider, for example, the row determined by the value of a and let the value at the entry 
                                 
                                    (
                                    a
                                    ,
                                    
                                    c
                                    )
                                 
                               be y. We then increase by 1 the entries of this row that are less then y. The values less then y are 
                                 
                                    0
                                    ,
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    y
                                    -
                                    1
                                 
                              . After the increment they become 
                                 
                                    1
                                    ,
                                    2
                                    ,
                                    3
                                    ,
                                    …
                                    ,
                                    y
                                 
                              . Next, we set the value y at 
                                 
                                    (
                                    a
                                    ,
                                    
                                    c
                                    )
                                 
                               to 0. Thus the updated entries of the row that are less than y remain unique. Since we did not modify the entries that are greater than y, and the entries were unique before the update, all entries of the row given by the value of a remain unique. Next, we observe that each swap operation swaps two elements of the same row and thus uniqueness of rows remains intact. Finally, the row determined by the value of x is subjected to the same increment process as prescribed previously which preserves uniqueness. This shows that entries of each row of the pseudo-distance matrix P remain unique under PDT2 transformation. □

In predicting x, the rows are updated. Since the same colors may occur again as neighbors, usage of a dynamic pseudo-distance matrix results in more 0s, and hence in smaller compressed files. In Fig. 1
                        , the effects of described PDT2 algorithm can be seen on Frymire.bmp.

In decoding, steps similar to the ones used in the encoding algorithm are employed to obtain original image file. The encoded image file includes the color-map table of the original image and error values. By using the color-map table, the Euclidean distance and the pseudo-distance matrices D and P can be easily reconstructed. The recovery of the original image file starts with copying the first pixel from the encoded image. Then, the steps in Algorithm 2 below need to be followed.
                           Algorithm 2
                           Reverse Pseudo Distance Transform (PDT2) 
                                 
                                    
                                       
                                       
                                          
                                             1: repeat
                                             
                                          
                                          
                                             2: 
                                                
                                                   
                                                      ac
                                                      ←
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      c
                                                      ]
                                                      ,
                                                      
                                                      bc
                                                      ←
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      c
                                                      ]
                                                      ,
                                                      
                                                      cc
                                                      ←
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      c
                                                      ]
                                                      ,
                                                      
                                                      dc
                                                      ←
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      c
                                                      ]
                                                      ,
                                                      
                                                      ec
                                                      ←
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      c
                                                      ]
                                                   
                                                
                                             
                                          
                                          
                                             3: 
                                                for 
                                                
                                                   
                                                      i
                                                      ←
                                                      1
                                                   
                                                 to 
                                                   
                                                      number
                                                      
                                                      of
                                                      
                                                      colors
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             4: 
                                                if 
                                                
                                                   
                                                      (
                                                      ac
                                                      >
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             5: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             6: 
                                                end if
                                             
                                          
                                          
                                             7: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      b
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      bc
                                                      >
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             8: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             9: 
                                                end if
                                             
                                          
                                          
                                             10: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      c
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      c
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      cc
                                                      >
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             11: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             12: 
                                                end if
                                             
                                          
                                          
                                             13: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      c
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      dc
                                                      >
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             14: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             15: 
                                                end if
                                             
                                          
                                          
                                             16: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      c
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      d
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      ec
                                                      >
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             17: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             18: 
                                                end if
                                             
                                          
                                          
                                             19: 
                                                end for
                                             
                                          
                                          
                                             20: 
                                                
                                                   
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                      ,
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                      ,
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                      ,
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                      ,
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      c
                                                      ]
                                                      ←
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             21: 
                                                for 
                                                
                                                   
                                                      i
                                                      ←
                                                      1
                                                   
                                                 to 
                                                   
                                                      number
                                                      
                                                      of
                                                      
                                                      colors
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             22: 
                                                if 
                                                
                                                   
                                                      (
                                                      input
                                                      =
                                                      =
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             23: 
                                                
                                                
                                                   
                                                      x
                                                      ←
                                                      i
                                                   
                                                
                                             
                                          
                                          
                                             24: 
                                                end if
                                             
                                          
                                          
                                             25: 
                                                end for
                                             
                                          
                                          
                                             26: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      a
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             27: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      b
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             28: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      b
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             29: 
                                                end if
                                             
                                          
                                          
                                             30: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      c
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      c
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             31: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      c
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             32: 
                                                end if
                                             
                                          
                                          
                                             33: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      d
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      c
                                                      !
                                                      =
                                                      d
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             34: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      d
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             35: 
                                                end if
                                             
                                          
                                          
                                             36: 
                                                if 
                                                
                                                   
                                                      (
                                                      a
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      b
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      c
                                                      !
                                                      =
                                                      e
                                                      )
                                                      
                                                      and
                                                      
                                                      (
                                                      d
                                                      !
                                                      =
                                                      e
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             37: 
                                                
                                                   
                                                      swap
                                                      (
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      x
                                                      ]
                                                      ,
                                                      P
                                                      [
                                                      e
                                                      ,
                                                      c
                                                      ]
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             38: 
                                                end if
                                             
                                          
                                          
                                             39: 
                                                
                                                   
                                                      xx
                                                      ←
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      x
                                                      ]
                                                   
                                                
                                             
                                          
                                          
                                             40: 
                                                for 
                                                
                                                   
                                                      i
                                                      ←
                                                      1
                                                   
                                                 to 
                                                   
                                                      number
                                                      
                                                      of
                                                      
                                                      colors
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             41: 
                                                if 
                                                
                                                   
                                                      (
                                                      xx
                                                      >
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      i
                                                      ]
                                                      )
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             42: 
                                                
                                                
                                                   
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      i
                                                      ]
                                                      ←
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      i
                                                      ]
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             43: 
                                                end if
                                             
                                          
                                          
                                             44: 
                                                end for
                                             
                                          
                                          
                                             45: 
                                                
                                                   
                                                      P
                                                      [
                                                      x
                                                      ,
                                                      x
                                                      ]
                                                      ←
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             46: until all pixels processed
                                          
                                       
                                    
                                 
                              
                           

After constructing a pseudo-distance matrix P, the copies of matrix P are assigned to available threads. The use of multiple copies of matrix P instead of a single matrix is required to avoid thread synchronization issue since the PDT2 algorithm updates the matrix P after each pixel processed. The row apportionments to available threads are equal number of rows, a possible exception of last thread, as shown in Table 6
                        . After the pseudo-distance transform, each thread simultaneously starts the data compression process and produces an output file as shown in Fig. 2
                        . Similar to the parallel encoding phase, decoding transform can be completed using only single thread or multiple threads.

In this section, we briefly explain the utilized data compression tools that are used after applying the PDT2. These tools include Burrows–Wheeler Transformation (BWT), the run-length encoder (RLE), and the binary arithmetic coder (BAC).

Given a data string, for example, 
                           
                              ω
                              =
                              [
                              γ
                              ,
                              α
                              ,
                              γ
                              ,
                              α
                              ,
                              β
                              ]
                           
                        , a matrix M is constructed by simply cyclically shifting each row after the first row of ω:
                           
                              
                                 M
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   β
                                                
                                             
                                             
                                                
                                                   α
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   β
                                                
                                                
                                                   γ
                                                
                                             
                                             
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   β
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                             
                                             
                                                
                                                   α
                                                
                                                
                                                   β
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   γ
                                                
                                             
                                             
                                                
                                                   β
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

After constructing M, by sorting the rows of M in lexical order, we transform M to 
                           
                              
                                 
                                    M
                                 
                                 
                                    ′
                                 
                              
                           
                         as
                           
                              
                                 
                                    
                                       M
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   α
                                                
                                                
                                                   β
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   γ
                                                
                                             
                                             
                                                
                                                   α
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   β
                                                
                                                
                                                   γ
                                                
                                             
                                             
                                                
                                                   β
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                             
                                             
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   β
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                             
                                             
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   γ
                                                
                                                
                                                   α
                                                
                                                
                                                   β
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Burrows and Wheeler in [20] showed that by using the last column of 
                           
                              
                                 
                                    M
                                 
                                 
                                    ′
                                 
                              
                           
                         and the length of ω, the original data string ω can be recovered. This transformation is called Burrows–Wheeler Transformation (BWT) and its utility resides in the fact that “the transformation tends to group characters together so that the probability of finding a character close to another instance of the same character is increased substantially. Text of this kind can easily be compressed with fast locally-adaptive algorithms,” such as a run-length encoder.

Run-length encoder (RLE) takes the output of the pseudo-distance transformation as input data. It detects long run sequences and regroups the repetitive sequences with the information of the current symbol and the number of repetitions. Use of RLE provides two main advantages. By reducing the number of zeros on input data, RLE increases the efficiency of entropy coder. A context-model arithmetic coder calculates non-zero symbol probabilities more precisely and uses less data to represent the input. This is one of the reasons why we usually get better compression gain when we utilize a RLE before applying an arithmetic coder. RLE also helps to decrease the length of the data sequences since number of zeros is represented in more compact form. This feature of RLE increases the efficiency and decreases computation time of the entropy coder. In [21], a run-length encoding algorithm is used on 0 and 1, while in [22] only 0 run-length transformed encoder is utilized. In this study, we used a RLE similar to one in [22].

Binary arithmetic coders work with a limited source alphabet. This limitation overcomes some drawbacks of a structured arithmetic coder because it helps to solve complexity problems on the data. In binary arithmetic coder, only 0s and 1s are used which makes the cumulative distribution task in encoding and decoding simpler. Most data can be represented in binary system and a binary arithmetic coder can be used to encode them.

In this study, we used a context-adaptive binary arithmetic coder similar to one in [22]. It has wide range of probability modes for different contexts. Basically, in the first stage, the encoder takes the input and converts the non-binary data to binary data. After that, the encoder determines which probability model is suitable by using information acquired from neighboring elements. Later, data is encoded. Context-modeling helps the probability estimation and is beneficial in compression.

@&#EXPERIMENTAL RESULTS@&#

In this section, we present quantitative results on the performance of the PDT2, Algorithm 1 in Section 2.2, using a collection of non-dithered and dithered color-mapped images. Compression gains of the PDT2 are compared with older versions of PDT. The test results of parallel implementation of PDT2 algorithm on several CPUs with varying number of processors are presented. Finally, the performance of the PDT2 in Hyper-Threading at various frequencies is evaluated.

The test images were obtained from [23] in portable pixel map (PPM) format and converted to color-mapped bitmap (BMP) format using Gimp (ver. 2.6.11). The color-mapped image set included a collection of images with a wide spectrum of sizes, number of colors, and patterns. The dithered images were converted from PPM format to dithered color-mapped BMP format. During the image conversion process, we used the following dithering techniques: Floyd–Steinberg (normal), Floyd–Steinberg (reduced color bleeding), and positioned dithering.

The performance of compressors on test images are given in bits per pixel (bpp). BPP is calculated as follows:
                        
                           (2)
                           
                              bpp
                              =
                              8
                              ∗
                              (
                              Compressed
                              
                              File
                              
                              Size
                              /
                              Uncompressed
                              
                              File
                              
                              Size
                              )
                              .
                           
                        
                     
                  

The compression results of the sequential implementation of the PDT2 for non-dithered and dithered color-mapped images are given in Tables 7–10
                     
                     
                     
                      under the columns of PDT2. For the purposes of comparison, included in the same tables are the results of the well-known lossless image compressors such as GIF, PNG, and our previously proposed techniques in [11] for non-dithered and in [13] for dithered color-mapped images. With the PDT2, we achieved compression gain of 88.7% over GIF, 29.3% over PNG and 22.4% over our previously proposed technique in [11] on lossless compression of non-dithered color-mapped images. On lossless compression of dithered color-mapped images, we improved the compression gain on average 57.2% over GIF, 23.8% over PNG and 7.1% over our previously proposed technique in [13].

Interested readers may consult the survey paper [5] of Pinho and Neves for compression results of various other compression techniques, including JPEG-LS and JPEG2000, on lossless compression of color-mapped images. When we utilized the PDT2 along with the BWT, RLE, and BAC on the images converted to color-mapped BMP format using Gimp (ver. 1.2.3) as in [5], we obtained better compression gain on average 32.4% over Memon’s reindexing [7], 36.2% over Zeng’s reordering [6], and 34.1% over Battiato’s reindexing [8] techniques along with JPEG-LS.

The parallel implementation of PDT2 as diagrammed in Fig. 2 is tested with Intel Core Processors i7-940 [24] and i7-2670QM [25]. These processors have 4 cores and 8 threads. Speedup 
                        
                           
                              
                                 S
                              
                              
                                 p
                              
                           
                        
                      of the parallel implementation of PDT2 is calculated with the following formula:
                        
                           (3)
                           
                              
                                 
                                    S
                                 
                                 
                                    p
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          T
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          p
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              
                                 T
                              
                              
                                 s
                              
                           
                        
                      is the running time of sequential algorithm and 
                        
                           
                              
                                 T
                              
                              
                                 p
                              
                           
                        
                      is the running time of parallel algorithm using p threads.

We benchmarked the performance of parallel implementation of PDT2 algorithm using different number of threads to show the compression loss and achieved speedup 
                        
                           
                              
                                 S
                              
                              
                                 p
                              
                           
                        
                     . First, we addressed the loss of compression results when different numbers of threads are utilized as shown in Table 11
                      for non-dithered and in Tables 12–14
                     
                     
                      for dithered images with three different dithering techniques. In Fig. 3
                     , normalized compressed file sizes are plotted and Dith1, Diht2, and Dith3 refer to images dithered with Floyd–Steinberg (normal), with Floyd–Steinberg (reduced color bleeding), and with positioned dithering images, respectively. Our experimental results showed that when we increased the number of threads used for compression task, the required bpp to encode an image file was slightly increased. The main reason of the loss of compression gains in parallel implementation is the weak performance of BWT on smaller data sizes; BWT performs better when the data size gets bigger. It is evident from Table 11 that the loss of compression gains are on average 0.1%, 0.4%, and 1% when we utilize 2, 4, and 8 threads, respectively. In [17], when we parallelized an earlier version of PDT [11], we observed that the loss of compression gains on average were 0.1%, 0.3%, and 0.7% when we utilized 2, 4, and 8 threads, respectively. These losses are statistically insignificant when compared with the reduction in compression time.

Second, to evaluate our obtained speedup results, we begin by recalling Amdahl’s Law. In [18], Amdahl proposed that when the serial and parallelizable parts of an algorithm are known, theoretical speedup can be calculated as follows:
                        
                           (4)
                           
                              T
                              (
                              n
                              )
                              =
                              T
                              (
                              1
                              )
                              
                                 
                                    
                                       B
                                       +
                                       
                                          
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             
                                                1
                                                -
                                                B
                                             
                                          
                                       
                                    
                                 
                              
                              ,
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    S
                                 
                                 
                                    p
                                 
                              
                              (
                              n
                              )
                              =
                              
                                 
                                    T
                                    
                                       
                                          
                                             1
                                          
                                       
                                    
                                 
                                 
                                    T
                                    
                                       
                                          
                                             n
                                          
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    T
                                    
                                       
                                          
                                             1
                                          
                                       
                                    
                                 
                                 
                                    T
                                    
                                       
                                          
                                             1
                                          
                                       
                                    
                                    
                                       
                                          
                                             B
                                             +
                                             
                                                
                                                   1
                                                
                                                
                                                   n
                                                
                                             
                                             
                                                
                                                   
                                                      1
                                                      -
                                                      B
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    B
                                    +
                                    
                                       
                                          1
                                       
                                       
                                          n
                                       
                                    
                                    
                                       
                                          
                                             1
                                             -
                                             B
                                          
                                       
                                    
                                 
                              
                              ,
                           
                        
                     where n is the number of threads, B is the serial part of the algorithm, 
                        
                           T
                           (
                           1
                           )
                        
                      is the execution time using 1 thread, and 
                        
                           T
                           (
                           n
                           )
                        
                      is the execution time using n threads; 
                        
                           
                              
                                 S
                              
                              
                                 p
                              
                           
                           (
                           n
                           )
                        
                      gives the theoretical speedup. This formula is known as Amdahl’s Law. Parallel algorithms that require no communication between threads are called embarrassingly parallel algorithms. In an embarrassingly parallel algorithm, the serial section of the algorithm is insignificant when compared with its parallel section. In parallel implementation of PDT2, the serial part of the algorithm consists of opening an image file, the computation of the distance matrix, and the pseudo-distance matrix. After that, each thread runs independently and compresses a part of the image file. This fact makes the PDT2 an embarrassingly parallel algorithm. Up to 4 threads, we obtained near linear speedup as expected from Amdahl’s Law theoretical speedup results.

Intel Core i7-940 and i7-2670QM that we used in our experiments feature Intel Hyper-Threading (HT) technology. While the older processor i7-940 allows the programmer to control HT usage, the HT feature of i7-2670QM is controlled automatically by the system. HT technology allows a single physical processor to act as two logical processors. This technology helps to increase CPU utilization and improve overall system efficiency by decreasing multi-threaded applications run time and increasing system multi-tasking capabilities. Intel started using this technology in early 2002 for the server processors and later in high-end desktop and mobile processors.

Amdahl’s Law as stated above cannot be applied to Hyper-Threading enabled CPUs. In [19], Casey showed that the Hyper-Threading feature provides up to 30% better parallelization gain than a similar CPU without HT. The average performance of parallel PDT2 on these processors with or without HT are summarized in Fig. 4
                     . It is evident from these graphs that average speedup results on our test image sets of dithered and non-dithered color-mapped images are comparable. Experimental results on non-dithered images showed that when 8 threads are utilized during the compression process, enabling Intel HT feature helps to improve speedup on average 18% with the i7-940, as shown in Tables 15 and 16
                     
                      under the columns of 8T. Moreover, the speedup results obtained with the i7-2670QM mobile CPU, in Table 17
                     , shows that the automated HT feature is controlled by the system effectively. The compression results of the parallel implementation of PDT2 prove that on average, while compromising less than 0.3% in compression gain, the compression time can be reduced significantly.

@&#CONCLUSION@&#

In this paper, we demonstrated that our new pseudo-distance algorithm (PDT2) achieved 22.4% better compression over our previous study and 29.3% over PNG on lossless compression of non-dithered color-mapped images. For dithered color-mapped images, with PDT2 on average 7.13% compression gain over our earlier algorithm and 23.8% over PNG is possible. We also showed that the parallel implementation of PDT2, while compromising compression less than 0.3%, it achieved near linear speedup. Finally, we demonstrated that utilization of Intel Hyper-Threading technology on supported systems improved speedup on average 18%.

@&#REFERENCES@&#

