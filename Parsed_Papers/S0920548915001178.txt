@&#MAIN-TITLE@&#A methodology for structured ontology construction applied to intelligent transportation systems

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a methodology to build ontology's in the domain of ITS (Intelligent Transportation Systems).


                        
                        
                           
                           We have proposed: DPK (Discrimination of Paragraphs with Keywords) and IRWDP (Retrieval with Weighted Data in Paragraphs).


                        
                        
                           
                           The two new methods proposed, allow reducing the sample size of the study.


                        
                        
                           
                           Much information irrelevant has been discarded, achieving greater performance in the ontology construction.


                        
                        
                           
                           The methodologies proposed can be used to build ontologies in any domains.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Intelligent transportation systems

Ontology

Collaboration

Distributed systems

Statistical data analysis

@&#ABSTRACT@&#


               
               
                  The number of computers installed in urban and transport networks has grown tremendously in recent years, also the local processing capabilities and digital networking currently available. However, the heterogeneity of existing equipment in the field of ITS (Intelligent Transportation Systems) and the large volume of information they handle, greatly hinder the interoperability of the equipment and the design of cooperative applications between devices currently installed in urban networks. While the dynamic discovery of information, composition and invocation of services through intelligent agents are a potential solution to these problems, all these technologies require intelligent management of information flows. In particular, it is necessary to wean these information flows of the technologies used, enabling universal interoperability between computers, regardless of the context in which they are located. The main objective of this paper is to propose a systematic methodology to create ontologies, using methods such as a semantic clustering algorithms for retrieval and representation of information. Using the proposed methodology, an ontology will be developed in the ITS domain. This ontology will serve as the basis of semantic information to a SS (Semantic Service) that allows the connection of new equipment to an urban network. The SS uses the CORBA standard as distributed communication architecture.
               
            

@&#INTRODUCTION@&#

The real-time estimation of traffic parameters and the control operations constitute a challenge for control of urban traffic systems [4]. Until now, the equipments installed in urban networks usually work in a centralized way, providing information to the traffic control center through the urban data network and performing actions according to the decisions of an operator at the control center. However, the enhancements of transport equipments due to the evolution of electronics and data networks allow them to share information and work cooperatively. The main challenge in the design and operation of ITS is information exchange, which is a difficult task in highly distributed systems. From a technical standpoint, there are difficulties in integrating information using compliant standards and connecting multiple systems, especially when considering the complexity and volume of information flows involved in the field of ITS, where both, the hardware as the data generated are highly heterogeneous [49]. Therefore it is necessary to optimize the interoperability, security and efficiency of processes and devices which are part of the ITS by developing new technologies. More specifically, it is necessary to analyze the needs of the transport and logistics from a multimodal perspective, and to design new systems and tools able to provide “higher intelligence” in the process of information exchange and interoperability between devices. Distributed systems are well known for their difficulty of interoperation among agents, which justifies the interest in unified software platforms [51]. SOA (Service-Oriented Architecture) is presented as an attractive alternative to enable interoperability of systems and the reuse of resources. But SOA applications face many security problems during design and development [37]. In SOA architectures, the WS (Web Services) are a commonly used technology. WS use SOAP (Simple Object Access Protocol) as the communication protocol between various services. SOAP is an XML-based protocol. However, processing large SOAP messages significantly reduces system performance, causing bottlenecks in comparison with other technologies like CORBA [46]. This represents a problem in wireless communication networks [35] and in the ITS field, where the number of connected devices is growing over time. In practice, SOA-based applications are not always successful as most of them are done on an ad-hoc basis, and primarily based on personal experiences [23]. Although companies are increasing their dependence towards SOA, these systems are still in an immature early stage with important security problems [25]. The common problem in all the mentioned technologies is the interoperability between services and devices that are part of ITS, due to the differences in the information representation and semantics. The use of ontologies in this field would be a solution to enable reuse of domain knowledge and to generate smart clients. Agents that share semantic information could use this ontological information to respond to requests DD (Device–Device), serve as input to other services, enable reuse of domain knowledge or work cooperatively with other existing ontologies.

A methodology to define an ontology in the field of ITS is proposed. The ontology will be used in a CORBA-compliant Semantic Service, which allows finding services in a distributed environment. The developed ontology will serve as initial DataBase to the intelligent system of semantic management, where the hardware devices can exchange information through a communication system and work cooperatively. Section 2 provides an overview of previous related work. In Section 3, the proposed methodology is introduced, using as a starting point Systematic Literature Review (SLR) techniques, and then applying semantic analysis techniques and statistical data analysis to build the ITS ontology. Section 4 details the obtained results with the proposed methodology, testing the resulting ontology in a CORBA distributed environment. Finally, Section 5 shows the conclusions and future work.

@&#RELATED WORK@&#

One of the main challenges in the ITS is the cooperative traffic. The idea of cooperation within ITS was initiated by the concept of cooperative in automated highways where vehicles receive input signals from the road environment. The first ideas documented on automated highways were presented in 1960 by the research laboratory of the General Motors [19]. A cooperative traffic system makes use of data as soon as they are collected, automating decision making in situations that require the intelligent intervention of ITS environment. Soares et al. [44] present a strategy in data dissemination for cooperative systems, defending that diffusion policies plays a determining role in the spread of ITS for the efficient information propagation. Indeed, the main objective of the cooperative driving is to focus on prevention and early detection of risks. However, this study does not specify how to find or maintain information. Rockl and Robertson [41] argue that the success of cooperative ITS applications is mainly affected by the exchange of information between distributed nodes. According to authors, the transmission of large amount of information contrasts to the limited bandwidth of the channels that tend to be shared by all nodes participating in the ITS. But the extraction and interpretation of the information is out of the scope of the study. Therefore, it is necessary to develop efficient heterogeneous alternatives to increase the effective capacity of the ITS and to improve the efficiency of the transport systems. The solution lies mainly in the cooperative commitment to select relevant pieces of information for dissemination according to their value.

With the increasing development of electronics and the possibility of using embedded systems with increasing processing capabilities, the concept of cooperation has been extended from the original idea of cooperative driving to the current ITS distributed systems. The main idea of cooperation in ITS distributed systems is based on the collaboration of vehicle driving with available services in urban, suburban, metropolitan and rural areas, where vehicles interact with the environment, and the environment itself acts intelligently based on traffic events. Mitropoulos et al. [33] presented a system called WILLWARN (Wireless Local Danger Warning) based on recent and future trends in cooperative driving allowing electronic security to prevent risks through “Vehicle-Hazard” detection applications on-board, V2V (Vehicle to Vehicle) and V2I (Vehicle to Infrastructure) communications. One of the main causes of road accidents is the excessive and slow reaction of the driver in critical situations. However, the system proposed by Mitropoulos is exclusively focused on managing messages alerting the driver of the danger in ad-hoc basis, ignoring the quality and presentation of information.

Thomas and van Berkum [48] proposed a prediction scheme for recurring traffic events based on data collected at urban intersections. They argue that it is necessary the management of events on demand in case of possible incidents, but they do not validate the results of the analysis with real data of incident detection, and they do not define how the information is collected, shown or stored. The main challenges in current ITS distributed architectures, where information plays an important role, are the heterogeneity of software, hardware devices, and communication networks. In the case of hardware devices it is usual the incompatibility in the data representation, the problems of synchronization and the wide variety of controllers and processors. Software applications and services have problems caused by the existence of multiple programming languages, different versions of the same application or service, the competition between proprietary and free/open source software as well as problems of understanding and distributed DataBases complexity. Finally, heterogeneity in communication networks is mainly due to the wide variety of network protocols, and the deployment of distributed networks, in some cases incompatible with traditional networks.

To overcome these drawbacks, ontologies can be an important issue in the future of ITS. One of the main advantages of the integration of ontologies in ITS is the intelligent and secure semantic location of services with certain characteristics and properties. From the point of view of interoperability between devices from different vendors and platforms, the most striking advantage is the intelligent information retrieval. Services can be published in descriptive ontologies and devices can make use of data and metadata from different kinds of runtime traffic events. While more structured is the services information, more accurate, fast and smart they can be found. Metadata can provide some semantics to this problem since ontologies provide a conceptual framework to exploit through metadata exchange schemes. Numerous previous studies have made use of metadata to improve implementation of collaborative applications in different scenarios. García et al. [18] present a context model based on an ontology which takes a combined approach to model the context information used by transport services.

The modeled distributed information is related to a primary context about the location, time, identity and quality of services, but applied only to a service for location of parking spaces. Thanks to the proposed scenario, they demonstrate that context information generated from autonomous distributed sources can be represented using a common data model and can be structured according to a common ontology. The resulting data can be shared, associated, fused, or reasoned. Chen et al. [5] proposed the design and implementation of a framework for public transport. They include a mechanism for data collection through WS which are specifically used for planning routes. However, the use of WS usually based on SOAP and XML may cause excessive bandwidth consumption for more complex systems where there is a big demand for services. Fernandez and Ossowski [13] support the assumption that the use of MAS (Multi Agent Systems) enables a decoupled design and the implementation of different modules (agents), encouraging reuse of similar ontological domains, reducing the development effort and increasing system reliability (reuse of existing services). They focus the study on a service oriented multi-agent architecture for constructing advanced DSSs (Decision Support Systems) in transport management. However, they do not specify how to use the information as a tool or how to work cooperatively with other existing ontologies. Terziyan et al. [47] detail the requirements and the necessary architecture for traffic management systems, showing how such a system can be beneficial from the semantic point of view through technologic agents but questioning how this system can be combined with data processing and automated tools. A system for information retrieval based on a fuzzy ontological framework was proposed by Zhai et al. [53]. The proposed framework is composed of three elements: concepts, properties of concepts and values of properties, being the property value any standard data type or linguistic values of fuzzy concepts. The main drawback of this framework is that the information retrieval system is primarily focused on information about traffic accidents, leaving aside other key issues such as interoperability between devices or heterogeneity of information. A cooperative traffic system should be able to solve complex problems using environmental data and metadata. The ITS equipments should be prepared to learn from the environment and change their characteristics based on events. Additionally, they must be able to interact with each other, forming multi-agent systems to achieve objectives. In this paper it is proposed an intelligent solution in the recovery and management of heterogeneous information in order to build an ontology using a taxonomy as the starting point of the study. The ontology will serve to organize and offer a metadata based service spread across the traffic network.

One of the first steps in the ontology construction is undoubtedly the IR (Information Recovery). Due to the large amount of available information, building ontologies from scratch and manually would require a lot of time and effort. Therefore, it is necessary to incorporate scientific techniques in the analysis and dynamic selection of information to provide a logical structure. Scientific Systematic Literature Review (SLR) is the field of study that tries to analyze and integrate essential information of the primary research studies on particular topic, in a perspective of set unitary synthesis. SLR has become an important research methodology for the recovery and collection of information [24]. The aim of SLR is the identification, evaluation and interpretation of all relevant research studies about a particular research question using rigorous methods and specific algorithms. Zhang et al. [54] argue that the accuracy and preciseness in the information search process is actually a critical point that distinguishes systematic reviews from the traditional ad-hoc literature reviews. They have developed a systematic approach based on evidence for the development and implementation of optimal search strategies on digital literature. The proposed approach incorporates the concept of “quasi-gold standard” (QGS), which is the collection of known studies, and the corresponding “quasi-sensitivity” in the search process to evaluate its performance. There are several works about methodologies for developing ontologies. Gruninger and Fox [22] proposed a methodology to design and evaluate an ontology that first intuitively identifies the possible applications where the ontology can be used. They use a set of questions called “competency questions” to determine the scope of the ontology and to extract key concepts, properties, relations and axioms. A more systematic approach for the construction of an ontology from scratch is the so called Methontology [14]. This is perhaps one of the most complete proposed methods and considers the development of ontologies as a computer project. It includes activities for project planning, quality results, documentation, etc., and allows the building of new ontologies or reusing existing ones. Chandrasegaran et al. [3] applied a formal concept analysis methodology to develop a domain-specific ontology. They used a formal concept analysis to identify similarities among a finite set of objects based on their properties, providing a conceptual hierarchical clustering. However, the above methods lack of tools for IR and SLR. It is necessary to consider IR and SLR as part of the methodology for ontology creation in order to avoid bias in the resulting ontology, as the methodology proposed in this paper.

@&#METHODOLOGY@&#


                     Fig. 1
                      shows a block diagram of the proposed methodology for developing the ontology. The main objective of the proposed methodology is to discover ITS services based on common patterns among the data, with the final aim of obtaining class hierarchies in the “Building the Ontology” block.

The proposed methodology includes several automated methods for developing meta-analysis techniques on documents. The starting point is a taxonomy that summarizes the main topics of a domain field and a collection of documents representing the major research trends in the ITS area. Based on the proposed methods, a complete ontology of services and service containers in the domain of ITS can be built. The results are a conceptual scheme that can be exploited through metadata exchange among devices and embedded applications in distributed urban systems. The following subsections describe in detail each block listed in the general scheme of the proposed methodology.

The first step for developing an ontology consists of obtaining a set of basic concepts or classes that define a specific domain, the ITS field in this case. Typically, this step involves the search of a set of keywords covering all the topics and issues related to the target domain. However, in the case of the ITS field, several organizations like U.S. DOT (United States Departments of Transportation) have previously explored this field in detail [40]. More specifically, the Research and Innovative Technology Administration (RITA) coordinates the U.S. Department of Transportation's research programs and it is in charge of the advances in the deployment of cross-cutting technologies to improve the transportation system [39,50]. As part of their activities, they have developed a taxonomy of the ITS field considering several Levels of Detail (LoD), as shown in Fig. 2
                        , which represents a part of the RITA U.S. DoT taxonomy. In this study, it has been considered this taxonomy until the LoD 4, which provides a collection of 77 containers of services. This level of detail has been chosen because it is an intermediate point between previous too generic and subsequent too detailed containers of services.

The next step is the selection of the relevant information to apply semantic techniques. The 10 journals with the highest Impact Factors (IF) in the field of the ITS and, for each one, the 30 most important publications for the last 10years (2005 to 2015) has been collected, giving as a result 300 publications, as shown in Table 1
                        .

Notice that the selected information is grouped in collections of 30 papers. One of the drawbacks of using a collection of documents is that the weight of each keyword in each paper is different. One possible solution to overcome this issue is the IR feedback technique for relevance [42]. The main idea in this technique is that once certain retrieved documents have been considered as relevant or irrelevant by the user, the provided information is used to adapt the query so more relevant documents are retrieved in a subsequent search. However, the process of altering a query in the direction to relevant documents is an effective technique in information retrieval of an entire document, but not of specific parts of it. This paper proposes a novel method for the identification of paragraphs in the collection of documents as an alternative to the basic unit of analysis.

The main objective of the proposed Discrimination of Paragraphs with Keywords (DPK) is to retrieve only the most relevant information in the document collections in the form of paragraphs. The DPK is a method for selecting and discriminating paragraphs, filtering results according to the selected containers of services and providing the 150 most frequent words for each container of services. The main steps of the DPK method are illustrated in Fig. 3
                        .

Basically, the method stores only paragraphs that meet a search criteria (those paragraphs that contain exactly the keywordsToSearch()). The user is responsible for selecting the keywords, which are the previously considered containers of services. For each of the 77 containers of services, the DPK method analyzes the collection of documents and parses them, line by line, storing the related paragraphs in a temporary variable.

A paragraph is a component of the text that begins with a capital letter and ends with a full stop. All the words and characters are transformed to lowercase to facilitate the information management. When the search criteria of the DPK method is not satisfied, the entire paragraph is discriminated and discarded. Once the set of paragraphs related to a certain container of services is extracted and stored, they are sent to the function removing the stopwords, who must return the plain text. The last step of the DPK method is to find the absolute frequency of the 150 most frequent words within the pieces of texts associated to the container of services, and store them in a repository, which is then used by the subsequent Information Retrieval with Weighted Data in Paragraphs (IRWDP method).

The next step of the proposed methodology is the IRWDP method, which acts as a discriminating feedback system to obtain the weighted relative frequencies based on a specific search. Fig. 4
                         details how it is working. The IRWDP method work again with each of the container services of Fig. 2, and search their associated pieces of texts and 150 words in the stored repository by the DPK method. The aim of IRWDP is obtaining for each container of services the relative frequencies of the 150 words per collection of documents.


                        Table 2
                         shows an example of the obtained results in the case of “Surveillance” as the selected container of services. The first column lists its associated 150 words and the rest of the matrix is the relative frequency of these keywords in the selected paragraphs by the DPK method for this specific container.

The previous obtained matrices for each container of services represent the extraction of unstructured knowledge. This is known as a vector space model, where information is summarized by column vectors in a term/collection of documents matrix. Mathematically, given a term/collection matrix m
                        ×
                        n A
                        =(aij
                        ) the nth term aij
                         represents a weighted frequency term i in the collection j. The cosine of the rows of matrix A is a measure of the similarities among words. This value relies on the idea that the similarity of words depends on how many times they appear together, that is, their co-occurrence. However, the interpretation of the obtained results is difficult due to the high dimensionality of the model space. Nevertheless, one advantage of using the vector space model is that once a document collection is represented by columns in a high-dimensional space matrix, its algebraic structure can be exploited to reduce its dimensionality, always preserving the original vector space structure [52]. The interpretation in this new space model is easier due to the reduction in the dimensionality of the space. Next methods apply different techniques to obtain a structured representation of knowledge.

LSI (Latent Semantic Indexing) is a well known semantic technique for building a semantic space [9,16,17,15]. LSI, also known as LSA [28,27] (Latent Semantic Analysis) is an indexing and retrieval method which examines the similarity of the contexts in which the words appear, creating a reduced dimension where the characteristics of the more similar words are those that are closer to each other. This technique is based on the principle that the words or terms that are used in the same context tend to have certain similarity. LSA is used to predict textual coherence, understanding, contextual disambiguation of homonyms and the generation of the inferred core meaning of a paragraph. LSA assumes that the dimensionality, wherein all relations of local context words are represented simultaneously, can be of great importance and reducing the dimensionality of the matrix of the observed data and the initial context number to one much smaller could produce better approximations to human cognitive relations [26]. There are different techniques and algorithms to reduce the matrix dimensionality. Some of the most popular are SVD (Singular Value Decomposition), PCA (Principal Component Analysis), LDA (Linear Discriminant Analysis), among others. In this paper we use the SVD technique, mainly because the focus of the paper is to propose a technique for create ontologies, and not to compare the dimensionality reduction techniques. LSA/LSI uses SVD as a method based on a linear algebra theorem [29,1] to reduce the data matrix and to identify patterns in the relationship between the terms and concepts contained in a collection of unstructured text. It is no necessary to use any external dictionary, thesaurus or knowledge bases to determine these associations between words as they are derived from a numerical analysis of existing texts. SVD decomposes the rectangular matrix A into the product of three orthogonal matrices, an orthogonal matrix U, a diagonal matrix S and the transpose of an orthogonal matrix V. The theorem is usually expressed by:
                           
                              (1)
                              
                                 
                                    A
                                    
                                       m
                                       n
                                    
                                 
                                 =
                                 
                                    U
                                    
                                       m
                                       n
                                    
                                 
                                 
                                    S
                                    
                                       n
                                       n
                                    
                                 
                                 
                                    V
                                    
                                       n
                                       n
                                    
                                    T
                                 
                                 ,
                              
                           
                        where U is an orthogonal matrix of m
                        ×
                        n elements, S
                        
                           nn
                        
                        =
                        diag(σ
                        1,⋯,
                        σ
                        
                           n
                        ) is an n
                        ×
                        n diagonal matrix containing the singular values σ
                        
                           i
                         of A, and V
                        
                           nn
                        
                        
                           T
                         is an n
                        ×
                        n orthogonal matrix. SVD is closely related to standard eigenvalue-eigenvector decomposition of a square symmetric matrix. LSA uses the 150×10 term/collection matrix of Table 2, to construct the semantic space. In the matrix, each row corresponds to a single word in the corpus of publications and each column represents the collection of relevant documents in Table 1.

From the dimensionality reduction, can be drawn characterizations to predict or derive useful relationships between words, using clustering techniques and obtain a data structure of them.
                           Step 1
                           
                              Application of hierarchical agglomerative clustering
                           

Clustering algorithms allow to group a series of vectors according to a proximity criteria defined in terms of a given distance function. Generally the vectors of the same cluster share common properties. Using these groups, it can describe and build services within the multidimensional data set and express them as dendrograms or ultrametric trees, where pairs and triples of words can be visualized using simple and intuitive graphics.

Clustering algorithms have been applied to a large number of problems in a wide variety of research areas with the aim of identifying relevant distribution patterns that remain hidden. The hierarchical clustering builds a cluster hierarchy top-down (divisive) or bottom-up (agglomerative), by recursively splitting or merging clusters using some similarity metric. The split/merge process continues until a stopping criterion is met (i.e., number of clusters) [43]. The typical methods for hierarchical agglomerative clustering are: single-linkage, complete-linkage, average-linkage [31] and the wards methods [11]. The Ward and the average-linkage methods are the most popular ones [12]. In this paper, the average-linkage algorithm has been chosen because of its robusticity [12], its higher performance [31] and the quality of provided clusters [43].

In the average-linkage, the distance between two clusters is defined as the average distance between pairs of observations, one in each cluster. The average-linkage commonly joins clusters with small variations and tends slightly to produce clusters with the same variance. The hierarchical clustering results can be graphically represented as a tree-diagram or a dendrogram.
                           Step 2
                           
                              Application of the UPGMA method to build the ultrametric tree and to extract pairs/triple words
                           

One of the computational challenges of this study is to obtain a data structure to help in the final representation of an ontology. One solution proposed by Gibas and Jambeck [20] was the implementation of phylogenetic trees. In computer science, there is a data structure that possesses the properties of phylogenetic trees called ultrametric trees.

The distance between two arbitraries vertices x and y of T, disT(x,y), is the sum of the weights of the edges composing the path from x to y 
                        [2]. Given a matrix of taxa (subjects or objects), two simple methods for building ultrametric trees can be used. The first one is called Unweighted Pair Group Method with Arithmetic Mean (UPGMA) and the second is Weighted Pair Group Method with Arithmetic Mean (WPGMA). Both of them are agglomerative hierarchical methods using average-linkage technique. The UPGMA is widely used in bioinformatics to develop taxonomies with numerical data obtained from a set of taxa [45]. This method constructs the bottom-up phylogenetic tree from the leaves (set of taxa). In the UPGMA method, distances are calculated using an arithmetic average depending on the number of elements in each cluster. Basically both methods, UPGMA and WPGMA, work in the same way. The only difference is the function of distance used in the last step. WPGMA makes use of the weighted average, which ensures that each taxon is equally participating in the final result. With the distance function used by WPGMA, each taxon contributes equally to the final result. UPGMA and WPGMA differ in the final result but not in the mathematical mechanism to achieve it. For the methodologies proposed in this paper, the UPGMA method is used because it is simpler, faster and have been widely used in the literature.

The taxonomy proposed by the U.S. DOT and RITA, Fig. 2, consists of two major groups, one of them focused on the Intelligent Infrastructures and the other one on Intelligent Vehicles. The total sample consisted of 34,738 paragraphs. In the case of Intelligent Infrastructure, the discriminated sample using the DPK method was of 1519, discarding the rest of paragraphs because of their low relevance according to the considered containers of services.


                        Fig. 5
                         details the number of paragraphs associated to the different containers of services included under the general group of Intelligent Infrastructures. It can be noticed a clear trend of research on Traffic Control. These results can be clearly explained by the increasing investment of public authorities in the improvement of Road Infrastructure and Security. Fig. 6
                         details the same result but for the case of Intelligent Vehicles. A total of 843 paragraphs were discriminated from the initial sample using the proposed tools. Obtained research trends are more balanced among the different containers of services, but with more emphasis on Route Guidance. This is also a expected result since route guidance tools have become an important way of alleviating congestion in urban transport network and they are closely related to Traffic Control in the Intelligent Infrastructures.


                        Table 3
                         details the size reduction after applying DPK methods measured in paragraphs and MB. The reduction for IIwas 95.63% while the reduction in Intelligent Vehicles was 97.6%. After applying IRWDP method and the dimensionality reduction of LSA, it is possible to locate keywords of each container of services in a cartesian coordinate space. Table 4
                         shows a reduction to three dimensions for the particular case of “Surveillance” container using the predictive analytics tool, RapidMiner 5 [38,30].

The main problem of a three dimensional representation, is that results are more difficult to be interpreted. For this reason, it is preferable to consider only two dimensions and assume the loose of information in order to benefit the interpretability of results. Table 5
                         and Fig. 7
                         detail the dimensionality reduction and the graphical representation considering only two dimensions for the same particular case of “Surveillance” container. In this graph, the diameter of each bubble represents the similarity between target words and color of these, represent each of the 150 terms. Then, the average-linkage model of agglomerative hierarchical clustering is applied to represent keywords of each container as a dendrogram or ultrametric tree using the UPGMA method. This way data is organized into subcategories that will be in turn divided in others until reaching the desired level of detail. The ultrametric distances are then those that meet the criteria of three points (the three-point condition) [10] which say: d is an ultrametric tree in Q, if the elements in each three-element-subset of Q can be labeled by x, y, z such that:
                           
                              (2)
                              
                                 d
                                 
                                    x
                                    y
                                 
                                 ≤
                                 d
                                 
                                    x
                                    z
                                 
                                 =
                                 d
                                 
                                    y
                                    z
                                 
                                 .
                              
                           
                        
                     

According to the ultrametric trees, pairs and triple of words have been extracted to build the ontology. Using pairs and triples of nearest words, it is possible to extract the information that later it is used to build the ontology. Fig. 9
                        
                         shows the particular result for the case of “Surveillance” container. Following the same procedure with the rest of containers extracted from LoD4 taxonomy, the whole ontology is completed. Due to space limitations, it is not possible to include the complete ITS ontology or the tree diagrams. Using the open source ontology editor Protégé [36], the developed ITS ontology can be modeled in OWL format or ported to others such as RDF and RDFS.

@&#RESULTS@&#

In this section the results have been divided in two subsections. In the first one, it is a validation of the ontology built. In the second, it is conducted several experiments to evaluate the performance and scalability of the flow of information on embedded systems typically used in real urban and distributed environments.

The taxonomy defined by the U.S. DOT and RITA addresses the classification of ITS applications. They provide a systematic organization of the ITS field, giving names to groups of elements and final applications. A hierarchical structural model connects all terms in the taxonomy. Basically, this taxonomy considers two big categories: “Intelligent Infrastructures” with 14 applications and “Intelligent Vehicles” with 3 applications. Each of these 17 applications is divided into sub-applications with a brief summary of their benefits and information related to the area of interest. However, the taxonomy is only a simple classification that offers the costs and benefits of each application, without any semantic or logical structure in the data exchange.

As a difference, the developed ontology “ITS.rdfs” adds a descriptive logic. The data and metadata are stored in repositories, which provide access to all information on ITS applications and services discovered. The ontology is able to cope with the problems that RITA taxonomy cannot solve, such homonymy. Fig. 10
                         shows an example of homonymy problem in the case of Surveillance, both sub-classes of Arterial Management and Freeway Management within the category of Intelligent Infrastructure. Any system seeking a Traffic service about Surveillance within the taxonomy would receive both services, because it would be unable to distinguish one of them. Although the taxonomy contributes to the semantics of a term in the vocabulary, they do not define attributes between concepts and thus may cause confusion and conflicts. As a difference, the ITS.rdfs ontology is richer in terms of relations between terms. These relations allow to express the information within the domain without the need of duplicating terms; avoiding homonyms.


                        Fig. 11
                         shows that in the proposed ontology, Traffic and Infrastructure can be service containers, applications or services, belonging to the Surveillance class. Similarly, Surveillance is a sub-class of Arterial_Management as well as Freeway_Management and these are themselves sub-classes of Intelligent_Infrastructure. As a difference to the taxonomy case, here there is not homonymy because they have different meanings and the nodes are in different semantic spaces. Thanks to namespaces, it is possible to avoid ambiguities in the result. Next figures compare the quantity (Qty.) of containers/services proposed by the U.S. DOT and RITA with the one obtained by the developed ITS.rdfs ontology, for Intelligent Infrastructures, Fig. 8 and for Intelligent Vehicles, Fig. 12
                        . The quantity of services discovered about Intelligent Infrastructures in the developed ontology is 866, while the RITA taxonomy offers a maximum of 144 services/applications. In the case of Intelligent Vehicles, the total amount of discovered services is 449, against the 6 services/applications offered by the RITA taxonomy. The discovered services may be used as the basis for developing new applications/services in the field of ITS. The ontology developed will serve as a reference tool for information acquisition and construction of knowledge base systems that provide consistency, reliability and accuracy when retrieving information. The ITS.rdfs ontology enable sharing the knowledge and enable the collaborative work to function as common medium of knowledge between different actors involved in a urban, metropolitan and rural infrastructure.

The created ontology ITS.rdfs with the proposed methods is used as a descriptive semantic service container, and the flow of information is treated as triplets SPO (Subject, Predicate, Object) for an Semantic Service [21] (Semantic Communication Service ontology-based) capable of managing the flow of client/server requests in distributed urban environments. An important measure to check the performance is the throughput method as follows:
                           
                              (3)
                              
                                 TputkB
                                 =
                                 
                                    
                                       
                                          size
                                          
                                             
                                                k
                                                B
                                             
                                          
                                       
                                       
                                          R
                                          T
                                          T
                                          
                                             
                                                sec
                                                .
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where RTT is the “Round Trip Time” in seconds. However, this measure is not useful because the ontological data are expressed in triplets. Thus, the previous metric can be extended as follows:
                           
                              (4)
                              
                                 TputkT
                                 =
                                 
                                    
                                       
                                          no
                                          .
                                          triples
                                          /
                                          1000
                                       
                                       
                                          R
                                          T
                                          T
                                          
                                             
                                                sec
                                                .
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        which represents the total calculation on kiloTriplets of the ontology, over the RTT in seconds. To check, the overall performance has been tested storing the obtained ontology in a Berkeley DataBase [34] on a PC-AMD Athlon (TM) 1200MHz. The Semantic Service is capable of providing the communication support on distributed environments in conjunction with a set of base libraries like Redland [8] (RDF Language Bindings) to interact with ontologies written in RDF and RDFS formats. A Raptor parser [6] (RDF Syntax Library) is used to analyze the sequences of symbols, determine the grammatical structure and as a query language, Rasqal [7] and (RDF Query Library) to build and run queries. Both, Rasqal and Raptor are designed to work with the Redland library. The goal of the distributed communication technology used in these tests is to manage the ontological information and interoperate with services discovered by the proposed methodologies in the previous sections. First, it is measured the performance parsing and storing the main ITS.rdfs scheme in a DataBase hosted on the PC-AMD. The performance was quite stable during the experiment, Table 6
                        .

In urban environments, the different traffic services are mostly implemented in embedded devices. The next step was to estimate the system performance by adding new statements of a service in the stored ontology, Table 6. This service operates and runs on a device with ARM926EJ-S platform and the main function is to export the information that should be added to the ITS.rdfs ontology. The server (exporter) creates a RDF file that contains 14 statements (triples). This RDF is marshaled in a string and contains all the information that will be useful, in a client/server distributed environment, so that the client can access it. With the new 14 statements added, the ITS.rdfs ontology has now 2896 triplets (added to the original 2882 triplets). Moreover, the client (importer) that is deployed on another device with ARM926EJ-S platform performs a query to the SS. The SS manages the DataBase containing the ontology, looking for an outcome that satisfies a SPARQL [32] request, Code 1. The delay resolving the query and building the response to be sent to the client is 26ms. The weight of marshaling data that will be returned to the client is 1.05kB, and this data contains all information in RDF format that the client needs to initiate the communication with the server in another device. The client obtain this response marshaled in 41ms, Table 6.
                           Algorithm 1
                           SPARQL query from the client (importer)
                                 
                                    (1)
                                    PREFIX kb: <http://edsplab.us.es/kb#>

CONSTRUCT {? Car_Counter kb: ior ?ior.

?x kb:serv_creator ?serv_creator}

WHERE{

?Car_Counter kb:ior ?ior.

?x kb: serv_creator ? serv_creator}

LIMIT 1

In this section the obtained results from the analysis of information flow performance is presented. On one side was measured the performance parsing and stored the ITS.rdfs ontology in a Berkeley DataBase, obtaining an average TputkT of 3.57kT/s in 806ms. It is measured the transfer speed reading and analyzing the received temporal model from the semantic server, reaching 176.40kB/s with a delay of 16ms. Finally, it is measured the delay resolving semantic query from the client, which reaches 26ms. The SS marshall the result of the query and sends it to the client, this data packet weighs 1.05kB. The client receives these results in 41ms. The results demonstrate the feasibility of involving semantics implementation and the flexibility of representig metadata on ITS environments. Incorporating ontologies greatly favor the communication between devices and applications, achieving a common understanding between them.

@&#CONCLUSION@&#

This paper details a methodology for building ontologies considering IR and SLR as key steps. Technical proposals were applied in the construction of an ontology in the ITS domain and provides a guidance to develop ontologies in other areas. The field of study can be extended using as samples a greater amount of journals. Two new innovative methods have been proposed: DPK and IRWDP, which allows reducing the sample size of the study and assembling the terms/collection matrix with the relative frequencies of the words. The 150 most important words were taken on the outcome of the DPK technique. 150 words are more than enough for an average of 20 to 50 pairs/triples of words. LSA has some limitations in the order of the words as well as syntactical or logical relationships between them. The word order follows a consistent meaning for human understanding. To form pairs/triples of words, human intervention and control to maximize consistency was needed. The proposed methodologies, solve the major limitations, building ontologies from scientific articles, due to the lack of standardization for building ontologies. Using matrices, a dimensionality reduction, a hierarchical clustering and ultrametric trees were applied to extract pairs/triples of words for developing the ontology with the most relevant ITS services. With the addition of these techniques, it is possible to extract the information, collect, cut, sort and largely automate the creation of an ontology. One of the most important contributions of this paper is the proposed techniques for discriminating and classifying paragraphs according to their similarity. Using these techniques, between 95% and 98% of the total information was discarded. The discrimination of irrelevant data is extremely important for building ontologies to obtain subjects, predicates and objects with semantic meanings. Several performance tests were conducted on the obtained ontology using a Semantic Service, obtaining an average of 3.57kT/s and 806ms on a total weight of 625.58kB, parsing and storing the full ontological scheme. Using a distributed client/server system implemented in an ARM9 embedded platforms, the performance of the data flow between them and the stored ontology in a Berkeley DataBase managed by the Semantic Service was measured. The experimental results demonstrate the feasibility and effectiveness of the approach. For future works, the proposed techniques could be extended, implementing different techniques and testing the feasibility of applying different algorithms to reduce dimensionality, clustering and also creating ultrametric trees, in order to optimize the results. It could be also considered a bigger size of samples and then make comparisons with the results obtained in this paper. In the IRWDP technique, the length of the words could be limited with a minimum of 4 characters and a maximum of 15 because sometimes, some unwanted characters may be part of the collection. Furthermore, it can be considered WPGMA method and then compare the results obtained in this research work with the UPGMA method.

@&#REFERENCES@&#

