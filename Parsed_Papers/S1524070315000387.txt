@&#MAIN-TITLE@&#Exploration of multi-material surfaces as weighted shapes

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We explore the use of weights to model material properties in shape computation.


                        
                        
                           
                           Three weight definitions model properties that result from combining materials.


                        
                        
                           
                           Approach is used to model multi-material surfaces for additive manufacture.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Additive manufacturing

Shape computation

Design

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           Image, graphical abstract
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Additive manufacturing is rapidly becoming an essential and ubiquitous process in creative design, and has introduced new possibilities with respect to the types of shapes that can be realised. The technology continues to evolve, and over recent years has introduced variability in material properties alongside variability in form. This is achieved either by colouring material as it is extruded or by combining different materials within one fabricated object. The result is a greater range in the types of objects that can be fabricated, but these advances are not reflected in computational methods used in design. As discussed by Oxman and Rosenberg [9], computational methods are typically restricted to defining and exploring the structure and geometry of design models, and do not incorporate material properties or behaviour. This research explores how these can be incorporated into shape computations, which have been shown to formalise creative design processes [10, 12], and support generative design [15]. In this paper, the focus is on identifying how the material properties of a surface can be formally modelled. The paper explores mechanisms necessary to support computation with weighted shapes, building on theoretical developments presented by Stiny [14]. Ultimately, the aim of the research is to enable the generation and exploration of design models, with reference to material properties and expected behaviour.

In additive manufacturing, multi-material fabrication is made possible via technologies such as the Objet Connex,
                        1
                     
                     
                        1
                        
                           http://www.sys-uk.com/Connex.
                      which combine different materials in a single fabricated object. Materials with various transparencies, colours and material properties, are combined as parts of the object, and can be defined as composites that simulate the properties of common materials such as plastic or rubber. For example, using the Objet Connex a hard white plastic material called VeroWhitePlus, can be mixed in different proportions with a soft rubber-like black material called TangoBlackPlus to produce a range of composite materials, as illustrated in Fig. 1
                     . These composite materials vary in colour, from opaque white through to opaque black. They also vary in material properties
                        2
                     
                     
                        2
                        
                           http://www.stratasys.com/materials/polyjet/rubber-like.
                     : as the proportion of TangoBlackPlus increases the shore rating (a measure of resistance to permanent indentation) decreases, the tensile strength decreases, and the elongation at break increases. Consequently, composite materials become softer and more flexible as the proportion of TangoBlackPlus increases.

Fabrication processes that combine materials as parts of an object make it possible to produce objects that have variable material properties. The result is objects which exhibit different physical behaviours. For example, Fig. 2
                     a illustrates a flat surface composed of composite materials that are a mix of VeroWhitePlus and TangoBlackPlus. In the surface the composite materials are arranged in stripes, where the darkness of a stripe reflects the amount of TangoBlackPlus included in the mix: the darker the stripe, the higher the proportion of TangoBlackPlus and the higher the flexibility of that segment of the surface. The result is a flat surface that has stripes of varying flexibility that are arranged to give a gradient of flexibility, starting from a very flexible stripe and ending with a very stiff stripe. The result is that the flat surface can be deformed into a curved surface, as illustrated in Fig. 2b and c.

The curved surface in Fig. 2b was generated using the Kangaroo Physics tools for Grasshopper
                        3
                     
                     
                        3
                        
                           http://www.grasshopper3d.com/group/kangaroo.
                      by modelling the stripes as springs, in a method similar to that described in Oxman and Rosenberg [9]. A bending resistance force is applied to each stripe, which corresponds to the weight applied to the stripe; as the proportion of TangoBlackPlus increases the resistance force decreases and the stripe allows a greater flexibility. Each corner point is modelled as an ‘anchor’ point, initially ‘anchored’ to the xy plane. Kangaroo allows anchor points to be moved in real time during the simulation, allowing the user to interact and explore the kinetic properties of a spring system, and so the potential flexibility of a weighted surface. This provides a simulation of the flexible behaviour of the multi-material plane, determined based on the weights applied to the plane in combination with the geometry of the plane. For comparison, the bending behaviour of the physical realisation of the model is illustrated in Fig. 2c.The simulation presents an interactive approach to designing material properties and behaviour: material properties are incorporated in representations used in shape computation, so that they, and the resulting behaviour, can be defined and explored during creative design processes.

Studies suggest that creative design involves creation, exploration and evaluation of design alternatives [1,12]. Sketching plays an important role in this, because sketches are more than just static representations of imagined concepts; they externalise designers’ cognitive activity and are used as devices to support exploration of an emerging design [4]. Sketching supports creative design, because it enables designers to rapidly produce large numbers of concepts that are open to interpretation. Schön and Wiggins [13] describe this as a ‘seeing-moving-seeing’ process where seeing a sketch can result in its interpretation according to newly recognised forms or structures, and this in turn informs the development of future sketches. Such reinterpretation is a vital element in the exploration of designs and is believed to be a decisive component of innovative design [16]. But, sketching is not only a paper based activity; conceptually, a sketch is an informal representation, which is incomplete and is ambiguous [3]. In many creative industries, such as architecture and product design, physical models, e.g. of card or foam, play the role of the sketch in informing the development of a design. Provisional models are created, explored and evaluated, much in the same way that drawings are used [10]. And in recent years, additive manufacture has become a popular method for fabricating models for design exploration, to visualise and physically explore concepts.

Shape computation [15] provides a formal model of this exploration process, with a focus on representations, and the transformations applied to representations during the process [12]. In shape computation, design representations are formalised as shapes, and transformations of these shapes are formalised in shape rules. An example of a simple shape rule and its application is illustrated in Fig. 3
                     . Shape rules enable the perceived structure of a shape to be freely recognised and manipulated without adherence to a predefined geometric structure, and application of a shape rule acknowledges the ‘seeing-moving-seeing’ process described by Schön and Wiggins [13]. In ‘seeing’, a rule formalises the perception of a shape by recognising an embedded part, and in ‘moving’, the rule manipulates the shape according to replacement of the recognised part. Shape computations formalise the interpretations and transformations of shapes that emerge during design exploration; they describe the process as a formal protocol of rule applications, and a set of rules formalises a potential design space according to a shape grammar [11]. When implemented in a computational system, such as Jowers and Earl [5] and Jowers et al. [6], shape grammars enable designers to actively explore a design space by generating designs via rule applications.

In shape computation [15], design representations are formalised as shapes composed of finite numbers of geometric elements (points, lines, planes, etc.) of finite extent. Shapes are described according to their parts and these are ordered by a part relation, are combined by shape operations of sum, product and difference, and manipulated according to Euclidean transformations. For example, a shape rule A → B, with A and B both shapes, applied to a shape C, results in the new shape (C − A) + B. Shapes have no inherent parts and do not have a unique decomposition. Instead, decompositions arise through use; through processes of enquiry and description, such as analysis or communication. Shapes present a more design-orientated approach to design representation and generation than the point-set formalism commonly used in computer-aided design [2]. This is because they can be freely interpreted, even according to parts which are not apparent in the initial construction of a shape.

The ordering of the parts of a shape by the part relation gives rise to a formal structure corresponding to a Boolean algebra [15]. This algebra is partially ordered by the part relation, closed over operations of sum and product, with the complete shape as unit, the empty shape as zero, and complements defined accordingly. The algebra enumerates all potential decompositions of a given shape according to all possible parts. For example, Fig. 4
                      presents a lattice that is equivalent to a sub-algebra of a shape, defined according to triangular parts. In the lattice, the sum of parts is given by the supemum (join) and the product by the infimum (meet). The grey lines represent missing lines, and are included for legibility.

Similarly, shapes in general define generalised Boolean algebras ordered by the part relation, closed over operations of sum and product, with the empty shape as zero, but lacking a unit, because an infinite shape is not defined. These are equivalent to Boolean rings [15], and denoted Uij
                     , where i is the dimension of the geometric element, and j is the dimension of the embedding space. For example, designs represented in 2D sketches are in the algebra U12
                     , 3D wire frame models are in U13
                     , and solid models are in U33
                     . More interesting design representations, composed of combinations of different types of shapes give rise to composite algebras defined by the Cartesian products of these shape algebras. Shape computations formally define manipulations and transformations of shapes within shape algebras. Shape grammars exemplify such computations which formalise creative design processes [10,12].

In addition to the spatial information captured in shapes, shape computation takes into account non-spatial information, such as colour and function and these are formalised in algebras of labelled shapes, Vij
                      and weighted shapes, Wij
                      
                     [14]. In a shape computation, labels are defined according to a given vocabulary and serve to distinguish shapes from each other: overlapping geometric elements with different labels are distinct, and cannot be merged, as illustrated in Fig. 5.
                     
                  

Weights represent properties of a shape, e.g. in W12
                      weights may represent thickness of line elements, in W23
                      weights may represent the texture of plane elements, and in W33
                      weights may represent physical properties of a solid. Weights also change the way that geometric elements interact, but this is not as straight-forward as with labels. This is because weights, like shapes, can be embedded as parts of each other, whereas labels are always distinct. In weighted shapes, overlapping geometric elements may or may not merge; it depends how a weight is defined.

Knight [7] presents a formalism for representing qualities of form, such as colour, shading and texture, in shape grammars. This work pre-dates the weight formalism of Stiny [14], and introduces the issues that arise when considering non-spatial properties in shape computations. It is identified that when non-spatial properties are combined in computations, they do not follow the same logic as shape computations; instead concepts of opacity, transparency, layering and weaving play a role. How non-spatial properties combine depends on the relation between the properties, i.e. which is dominant, and on the specific operations used to combine them. Consequently, to include a weight in a shape computation, such as a shape grammar, it is necessary to define a relation between different weight-values, i.e. an order over the weights, which specifies how they are embedded in each other as parts. It is also necessary to define operations of sum, product and difference, which specify how weights combine in shape computations. The relation and operations should complement the equivalent shape relation and operations, and should reflect the properties being modelled. For example, in Stiny [14], a weight in W12
                      is defined which models line thickness and reflects the use of lines in drawing. In this example, a part relation is defined where thin lines are embedded in, and subsumed, by thick lines; the sum of two weights is defined to be the maximum of the two; the product of two weights is defined to be the minimum of the two; and the difference between two weights is the arithmetic difference of the two, with a minimum value of zero. Note that geometric elements with zero weights are not defined, so when a weight of zero is applied to a geometric element, the result is its removal from the shape. This is illustrated in Fig. 5, where examples of sum, product and difference of two weighted lines are presented. Details of shape computations with weighted shapes in algebras Wij
                      are presented in Stiny [14]. As illustrated in Fig. 6
                     , these incorporate both shape and weight operations, with weights interacting only on overlapping geometric elements. The relation between weights informs the part relation over weighted shapes, and the operations over weights inform the shape operations on weighted shapes.

Weights can be defined in many ways, e.g. as values, vectors or matrices, and can be used to model any properties of a shape, e.g. physical properties such as mass, or intentional properties such as function. In this research, the aim is to model the material properties of multi-material objects, which are fabricated from composite materials. How weights can be used to do this will be illustrated by considering the combination of materials in the Objet Connex. VeroWhitePlus and TangoBlackPlus are combined in composite materials which vary in shade, hardness and flexibility: as the proportion of TangoBlackPlus increases the composite materials become darker, softer and more flexible. In practice, the composite materials that are produced by combining VeroWhitePlus and TangoBlackPlus are limited to the fourteen discrete examples illustrated in Fig. 1. But, in this paper a more theoretical approach is followed, where any proportion of the base materials can be used. It is anticipated that this approach can be generalised to model other material properties defined according to combinations of materials. For example, if we are interested in exploring shapes which incorporate varying amounts of flexibility, then we could define a weight w that models the flexibility of composite materials. In the combination of VeroWhitePlus and TangoBlackPlus, the most flexible material is made only from TangoBlackPlus, and flexibility is reduced as the amount of TangoBlackPlus is reduced. To reflect this w is assigned a value from 1 to 100 to reflect the percentage of TangoBlackPlus in the composite, with a value of 0 omitted because zero-weights are not included in Stiny's formulation of weighted shapes [14]. Formally, w is defined as

                        
                           
                              
                                 {
                                 w
                                 ∈
                                 N
                                 :
                                 0
                                 <
                                 w
                                 ≤
                                 100
                                 }
                              
                           
                        
                     
                  

This means that when w = 100, the material is black, very soft and very flexible; when w = 50, the material is grey, semi-soft and semi-flexible; and when w = 1, the material is near-white, very hard and very rigid.

To include w in a shape computation it is necessary to define a relation between different weight-values (<), as well as operations of sum (+), product (∙), and difference (−), as illustrated for weighted lines in Fig. 6. There is currently little guidance on how these should be defined, nor any limitations on what is acceptable. But, definitions should reflect the material properties that are being modelled, and intuition about the context-specific meaning of a relation and operations. Generally, the operations of sum, product and difference can be defined similarly to the Boolean operations of union, intersection and complementation, as illustrated in Fig. 7
                     . For weights u and v, the result of a sum operation, u + v is something that subsumes both u and v; the result of a product operation u ∙ v is what u and v have in common; and the result of a difference operation u – v is what remains of A after B is removed.

The weight w models the flexibility of a composite material, and the relation and operations defined over the weight should reflect this. Fig. 8
                      illustrates possible definitions for these, with the relation and operations applied to weighted planes in a W
                     22 algebra. Here, the relation is defined as a linear total order, so that stiffer materials are embedded in, and subsumed by, flexible materials. So, given two weights w and u, the relation between the weights can be defined as

                        
                           
                              
                                 w
                                 <
                                 u
                                 
                                 i
                                 f
                                 
                                 
                                    |
                                    w
                                    |
                                 
                                 <
                                 
                                    |
                                    u
                                    |
                                 
                              
                           
                        
                     Here, absolute values are used to distinguish between the weight and the numerical value assigned to the weight. So this states that w is a part of u if the numerical value of w is less than the numerical value of u.

Intuitively, applying the sum operation should give a material that is of a flexibility that subsumes both w and u, and the result could be the more flexible of the two. So in Fig. 8, the sum operation is defined as

                        
                           
                              
                                 w
                                 +
                                 u
                                 =
                                 max
                                 
                                    (
                                    
                                       w
                                       ,
                                       u
                                    
                                    )
                                 
                              
                           
                        
                     
                  

For product and difference, intuition gives little guidance, but the Boolean operations illustrated in Fig. 7 suggest how these operations could be defined. The product operation should give a material that has a flexibility that is common in both w and u, and the result could be the more rigid of the two. So in Fig. 8 the product operation is defined as

                        
                           
                              
                                 w
                                 ·
                                 u
                                 =
                                 min
                                 
                                    (
                                    
                                       w
                                       ,
                                       u
                                    
                                    )
                                 
                              
                           
                        
                     
                  

The difference operation should give a material that has the flexibility that remains in w after u is removed, so the result is a material more rigid than both w and u. In Fig. 8, the result is given by the arithmetic difference with a minimum value of zero, and is defined as

                        
                           
                              
                                 w
                                 −
                                 u
                                 =
                                 max
                                 
                                    (
                                    
                                       
                                          |
                                          w
                                          |
                                       
                                       −
                                       
                                          |
                                          u
                                          |
                                       
                                       ,
                                       0
                                    
                                    )
                                 
                              
                           
                        
                     
                  


                     Fig. 8 illustrates the relations and shape operations applied to plane segments associated with single weight values in a W22
                      algebra, and the results are plane segments with different parts identified according to different associated weights. These are simplistic examples, and in practice weights can be applied to more complicated shapes to formalise and explore designs in any Wij
                      algebra. For example, the shape illustrated in Fig. 2a formalises a multi-material surface as a weighted shape in W23
                      with appropriate weight values assigned to the stripes of different composite materials. The bending behaviour of this shape has been identified via simulation and prototyping in Fig. 2b and c. Similarly, the shape in Fig. 9
                     a formalises a second multi-material surface as a weighted shape in W23
                     , and the bending behaviour of the shape has been identified via simulation and prototyping in Fig. 9b and c.

More complicated weighted shapes can be generated via shape computations. For example, the shapes in Figs. 2a and 9a can be combined using the shape operations defined in the previous section. The two surfaces are equal in size, but have weighted stripes running orthogonally, so that when they are overlaid the stripes create a checker-board pattern. Examples of shape computations with the surfaces are presented in Fig. 10
                     . In Fig. 10a the sum operation is applied, and the result is a more complicated arrangement of weights, with the more flexible stripes dominating the rigid stripes. In Fig. 10b the product operation is applied, and the result is a more complicated arrangement of weights, with the more rigid stripes dominating the flexible stripes. In Fig. 10c the difference operation is applied, and the result is a checkerboard of weights, but with segments missing where the result of arithmetic subtraction is zero or less.

Working from these shape computations the flexible behaviours of the resulting surfaces can be simulated. For example, Fig. 11
                      presents a simulation of the result of the sum operation. The resulting W23
                      surface is doubly curved, combining the orthogonal curving of the two original surfaces in an interesting way.

Similarly, Fig. 12
                      presents a simulation of the result of the product operation. The resulting W23
                      surface is again doubly curved, but it combines the curving of the two original surfaces in a very different way. These two surfaces are simple examples that illustrate the explorative potential of shape computation, with respect to material properties and resulting behaviour.

More interesting explorations of weighted shapes can be carried out by defining shape rules that describe how a shape can be transformed. For example, the rule in Fig. 13
                     a applies weights to planar shapes according to a specific schema: the planar shape is bisected, and one half retains the original weight value, while the second half is assigned a proportionally higher weight value. An example application of the rule is illustrated in Fig. 13b. The rule can be applied to any planar parts of the shape, and in this example a red rectangular border is used to identify which part has been selected at each step of the process. The result is the weighted surface in Fig. 2, but this is just one example of how the rule can be applied. Despite its simplicity the rule defines a design space of infinite extent, containing planar shapes with a plethora of different configurations of weighted parts, and consequently, different bending behaviour. Alternative applications of the rule can be used to generate the surface in Fig. 9, as well as the surfaces in Fig. 10, that result from application of the shape operations.

The infinite extent of the design space defined by the rule in Fig. 13a has been identified as a consequence of being able to freely interpret the planar parts of the shapes. But, the rule does not only take into consideration the spatial elements of a shape, it also takes into consideration the material properties, as formalised by the weights, and these too can be interpreted in different ways. Interpreting the spatial elements of shapes means interpreting the shape according to different forms and structures, but for material properties it means being able to conceptualise the properties in different ways. Changing how material properties are conceptualised can change the design space being explored, potentially suggesting new avenues of discovery. As identified in Section 2, in a design exploration process, being able to interpret and reinterpret shapes leads to creativity, and this can be as true for non-spatial properties of the shape as it has been shown to be true for the spatial properties [16].

The weight w, defined in Section 5, is just one example of how the properties of composite materials, produced by combining VeroWhitePlus and TangoBlackPlus, might be formalised as weighted shapes. But this is not the only way. In Section 5, w models the flexibility of composite materials, but conceptualising the properties in different ways can lead to alternative weights, with w defined to model other properties, such as the hardness of the materials or the mixture of the base materials.

If we are interested in exploring shapes which incorporate varying amounts of hardness, then we could define w so that it models the hardness of composite materials. In the combination of VeroWhitePlus and TangoBlackPlus, the hardest material is made only from VeroWhitePlus, and flexibility is reduced as the amount of VeroWhitePlus is reduced. To reflect this w is assigned a value from 1 to 100 to reflect the percentage of VeroWhitePlus in the composite, with a value of 0 omitted because zero-weights are not included in Stiny's formulation of weighted shapes [14]. Formally, w is defined as

                        
                           
                              
                                 {
                                 w
                                 ∈
                                 N
                                 :
                                 0
                                 <
                                 w
                                 ≤
                                 100
                                 }
                              
                           
                        
                     
                  

The result is a weight that is almost the inverse of the weight defined in Section 5, so that when w = 100, the material is white, very hard and very rigid; when w = 50, the material is grey, semi-hard and semi-rigid; and when w = 1, the material is near-black, very soft and very flexible.

Now, w models the hardness of a composite material, and the relation and operations defined over the weight should reflect this. Because the weight is essentially an inverse of the weight defined in Section 5 the relation and operations could be defined in a similar manner. But this is not necessary, and alternative definitions for the sum and product operations have been chosen. Fig. 14
                      illustrates the relation and operations applied to weighted planes in a W22
                      algebra.

Here, the relation is defined as a linear total order, so that soft materials are embedded in, and subsumed by, hard materials. So, given two weights w and u, the relation between the weights can be defined as

                        
                           
                              
                                 w
                                 <
                                 u
                                 
                                 if
                                 
                                 
                                    |
                                    w
                                    |
                                 
                                 <
                                 
                                    |
                                    u
                                    |
                                 
                              
                           
                        
                     
                  

Intuitively, applying the sum operation should give a material of hardness greater than w and u, and here the result is their arithmetic sum, with a maximum value of 100. So in Fig. 14, the sum operation is defined as

                        
                           
                              
                                 w
                                 +
                                 u
                                 =
                                 min
                                 
                                    (
                                    
                                       
                                          |
                                          w
                                          |
                                       
                                       +
                                       
                                          |
                                          u
                                          |
                                       
                                       ,
                                       100
                                    
                                    )
                                 
                              
                           
                        
                     
                  

The product operation results in a material that has a hardness that is between both w and u, and is defined as the arithmetic mean of the two. So in Fig. 14 the product operation is defined as

                        
                           
                              
                                 w
                                 ·
                                 u
                                 =
                                 1
                                 /
                                 2
                                 
                                    (
                                    
                                       |
                                       w
                                       |
                                       +
                                       |
                                       u
                                       |
                                    
                                    )
                                 
                              
                           
                        
                     
                  

The difference operation should give a material that has the hardness of w after u is removed, and the result is a material softer than both w and u, given by their arithmetic difference with a minimum value of zero. In Fig. 14, the difference operation is defined as

                        
                           
                              
                                 w
                                 −
                                 u
                                 =
                                 max
                                 
                                    (
                                    
                                       
                                          |
                                          w
                                          |
                                       
                                       −
                                       
                                          |
                                          u
                                          |
                                       
                                       ,
                                       0
                                    
                                    )
                                 
                              
                           
                        
                     
                  

Alternatively, if we are interested in the mixture of VeroWhitePlus and TangoBlackPlus, then we could define w as a vector (w1, w2
                     ) with w1
                      and w2
                     , representing independent values for VeroWhitePlus and TangoBlackPlus, respectively. Formally, w is defined as

                        
                           
                              
                                 {
                                 w
                                 =
                                 
                                    (
                                    
                                       
                                          w
                                          1
                                       
                                       ,
                                       
                                          w
                                          2
                                       
                                    
                                    )
                                 
                                 :
                                 
                                    w
                                    1
                                 
                                 ,
                                 
                                    w
                                    2
                                 
                                 ∈
                                 
                                    N
                                    0
                                 
                                 }
                              
                           
                        
                     
                  

The material property described by w is defined by the proportion of the vector coordinates, given by the ratio w1:w2
                     . For example, the vector w = (x, 0), for some integer value x, gives a material that is white, very hard and very rigid, while the vector w = (x, x), gives a material that is grey, semi-soft and semi-flexible, and the vector w = (0, x), gives a material that is black, very soft and very flexible.

Now w models the mixture of VeroWhitePlus and TangoBlackPlus in a composite material, and the relation and operations defined over the weight should reflect this. This third weight is different from the previous two, because it is defined as a vector instead of a single value. A consequence of this is that the proportions of base material in a composite are not uniquely defined. For example, the vectors (10, 10), (30, 30) and (60, 60) all correspond to mixtures where the ratio of VeroWhitePlus to TangoBlackPlus is the same, so the three weights correspond to composite materials with the same properties. The relation and operations have been defined by considering both coordinates of the vectors, and Fig. 15
                      illustrates definitions for these, with the relation and operations applied to weighted planes in a W22
                      algebra.

The relation can be defined as a partial order, so that both light and dark materials may be subsumed by grey materials. Given two weights w and u
                     
                        
                           
                              
                                 w
                                 <
                                 u
                                 
                                 if
                                 
                                 
                                    |
                                    
                                       w
                                       1
                                    
                                    |
                                 
                                 <
                                 
                                    |
                                    
                                       u
                                       1
                                    
                                    |
                                 
                                 
                                 and
                                 
                                 
                                    |
                                    
                                       w
                                       2
                                    
                                    |
                                 
                                 <
                                 
                                    |
                                    
                                       u
                                       2
                                    
                                    |
                                 
                              
                           
                        
                     
                  

For this conceptualisation of the material properties, applying the sum operation is analogous to mixing paint of different shades of grey, giving a material with a shade that is a mixture of the w and u. The result can be defined by adding the coordinates of the vectors, to a maximum value of 100. So in Fig. 15 the sum operation is defined as

                        
                           
                              
                                 w
                                 +
                                 u
                                 =
                                 
                                    (
                                    
                                       min
                                       
                                          (
                                          
                                             
                                                w
                                                1
                                             
                                             +
                                             
                                                u
                                                1
                                             
                                             ,
                                             100
                                          
                                          )
                                       
                                       ,
                                       min
                                       
                                          (
                                          
                                             
                                                w
                                                2
                                             
                                             +
                                             
                                                u
                                                2
                                             
                                             ,
                                             100
                                          
                                          )
                                       
                                    
                                    )
                                 
                              
                           
                        
                     
                  

The product operation results in a material that has a shade that is common to both w and u, and in this case is defined by the minimum coordinates of the two. So in Fig. 15 the product operation is defined as

                        
                           
                              
                                 w
                                 ·
                                 u
                                 =
                                 
                                    (
                                    
                                       min
                                       
                                          (
                                          
                                             
                                                w
                                                1
                                             
                                             ,
                                             
                                                u
                                                1
                                             
                                          
                                          )
                                       
                                       ,
                                       min
                                       
                                          (
                                          
                                             
                                                w
                                                2
                                             
                                             ,
                                             
                                                u
                                                2
                                             
                                          
                                          )
                                       
                                    
                                    )
                                 
                              
                           
                        
                     
                  

The difference operation is analogous to removing paint of a given shade from a mixture, and the result can be defined by the arithmetic difference of the coordinates, with a minimum value of 0. So in Fig. 15 the difference operation is defined as

                        
                           
                              
                                 w
                                 −
                                 u
                                 =
                                 
                                    (
                                    
                                       max
                                       
                                          (
                                          
                                             
                                                w
                                                1
                                             
                                             −
                                             
                                                u
                                                2
                                             
                                             ,
                                             0
                                          
                                          )
                                       
                                       ,
                                       max
                                       
                                          (
                                          
                                             
                                                w
                                                1
                                             
                                             −
                                             
                                                u
                                                2
                                             
                                             ,
                                             0
                                          
                                          )
                                       
                                    
                                    )
                                 
                              
                           
                        
                     
                  

Three different definitions for the weight w have been now been specified, and for each of these, the relation between weights, and operations on weights have been defined differently. These weights provide different models for the same material properties. For example, a weight value of w = 50 for the flexibility weight in Section 5, gives the same material properties as a weight value of w = 50 for the hardness weight in this section, and both of these give the same material properties as the coordinate weight w = (x, x), for some integer x. The three weights all describe the mixing of the materials VeroWhitePlus and TangoBlackPlus, but according to different conceptual models that have different strengths and limitations. For example, the first weight intuitively models the flexibility of a composite material but cannot model material that is 100% VeroWhitePlus. Similarly, the second weight intuitively models the hardness of a composite material but cannot model material that is 100% TangoBlackPlus. The third weight intuitively models the mixture of materials and can model all variations, but does not provide a unique description of these.

Choosing which weight to use, and which definitions of relations and operations to use depends on what is appropriate for the task at hand, and during an exploration process a designer may find it useful to change the way the properties are conceptualised and modelled, to foster creativity. Experimentation with different shape computations, for example by applying shape operations as in Fig. 10 or by applying shape rules as in Fig. 13, will give some insight into how the different weights, relations and operations behave, and how they reflect different contexts. With weights formally defined, including a definition for the weight relation and the operations of sum, product and difference, it is possible to explore material properties in a shape computation, according to a process that supports reinterpretation of form and function that will lead to creative design solutions.

@&#DISCUSSION@&#

In this paper, weights have been used to model the material properties of multi-material surfaces. The research has focussed on composite materials that are defined as combinations of two base materials, VeroWhitePlus and TangoBlackPlus. The surfaces in Figs. 2 and 9 are composed of stripes of different composites which are mixtures of the base materials. In different proportions, these mixtures give rise to different properties, in terms of shade, flexibility and hardness, and when combined in layers in multi-material surfaces in a W23
                      algebra, they result in flexible behaviours. Even for such a simple example, there is wide variability in how to model the materials, as exhibited by the three different definitions for weights and the range of definitions for the relations and operations over the weights. Currently, there is little theoretical guidance to suggest what makes a good definition of a weight, and other material properties may be defined in different ways, in different Wij
                      algebras. For example, combinations of three or more base materials might be used, such as weights that model colour which may be defined according to combinations of materials following specific colour-models, e.g. RGB or CMYK, building on Knight [7]. Introducing more materials may increase the variability and complexity of the modelling process, but the same steps of defining a weight, and defining the relation between weight-values and the operations on weights, should be followed.

When weights are fully defined they can be applied to shapes and incorporated in shape computations, to support creative design exploration. Simple examples of such computations were illustrated according to weighted planes in a W23
                      algebra. The results of the computations were also planes, but with more complicated structures, as defined by the weights. The structure imposed on a shape by applying weights is more restrictive than the visual structure associated with un-weighted shapes in a U23
                      algebra, which is defined according to embedded parts, as illustrated in Fig. 4. Weights force a decomposition of geometric elements into segments with different weights, as illustrated in Fig. 6. This is analogous to the use of labels in Fig. 5 where co-linear lines cannot be merged because their assigned labels keep them distinct. A consequence of this is that visually recognised parts may not be embedded in a given weighted shape. For example, the shape in Fig. 16
                     a is weighted according to line thickness (as illustrated in Fig. 6). It has a different structure to the un-weighted shape in Fig. 4 and, because of this structure, the weighted triangle illustrated in Fig. 16b is not a part of the shape. The weighted triangle illustrated in Fig. 16c is part of the shape, but recognising the triangular parts does not decompose the shape according to the lattice in Fig. 4. Applying the weights has fundamentally changed the shape according to its parts and its structure. This raises questions about the types of shape structures in Wij
                      algebras concerning different definitions of weights, and different definitions of the relation and operations. For example, the relations over the first and second weights define a linear order, whereas the third weight defines a partial order. As a consequence the algebraic structures defined by shapes assigned these different weights will be different. In Stiny [14], it is suggested that weights can be freely chosen to meet the situation being modelled. But, there may be more formal constraints that need to be considered when selecting the definition of a weight.

Operations in weighted shape computations, in Wij
                      algebras, work within and retain the structure defined by weights. Indeed, often they impose more structure, because different weights interact to further decompose a shape into different-weighted segments, as illustrated in Fig. 10. It is this structure, in combination with the material properties modelled by the weights that gives rise to the behaviours of the surfaces. And, potentially it is this structure that can inform the design of material properties and behaviour in more complicated computations, for example using shape grammars, as described in Stiny [14].

Building on this research, it is possible to define a shape grammar that supports the generative design of weighted surfaces, based on an exploration of shape and material properties, similar to the grammar presented by Knight [8], where colours are included in the generation of designs. Moving beyond the visual properties, weighted shape computations could be directed so that they decompose shapes into weighted parts with material properties that give rise to desired behaviours, and that recognise and explore emergent behaviours. The surfaces explored in this paper, are geometrically simple, but the complicated arrangements of weights give rise to complicated flexible behaviours. The computational nature of systems of weights allows them to be easily applied in physical simulation packages, as the initial examples in the paper have demonstrated. Weighted surfaces could be subjected to relevant forces according to the intended design objectives, such as pressure forces or draping, informing the design process. These have potentially interesting applications in design. For example, flat surfaces are cheaper to manufacture than curved surfaces but the introduction of flexible behaviours through multi-material fabrication makes it possible to manufacture flat surfaces that deform into desirable curved shapes. Also, it is possible to fabricate one-piece objects which have rigid structural elements, embedded in flexible, malleable materials. These could be applied in a range of innovative contexts, for example they could be used to develop adjustable canopies, sporting clothing, or safety equipment. Fundamentally, weighted shapes allow computational methods to extend beyond the spatial aspects of designs, so that designers can also creatively explore and develop material properties and behaviour. This paper has explored the mechanisms to make such exploration possible, but further research is needed to investigate how these can be employed in computational methods for creative design.

@&#REFERENCES@&#

