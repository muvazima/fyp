@&#MAIN-TITLE@&#Analysis and enhancement of pair-wise code assignment scheme used in Code Division Multiple Access protocol


@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Two pair-wise code assignment schemes are proposed for CDMA based MAC protocol.


                        
                        
                           
                           A co-channel secondary interference is detected in the existing code assignment schemes.


                        
                        
                           
                           The proposed schemes deals with the minimum code requirement, spatial reuse of codes and avoidance of secondary interference.


                        
                        
                           
                           Improves the network performance.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Wireless ad hoc networks

Code Division Multiple Access

PCA

Co-channel interference

Blocking probability

Code requirement

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           Image, graphical abstract
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Wireless ad hoc network refers to an infrastructure-less system that consists of wireless devices with dynamically changing topology. Since the devices have the capability to communicate in ad hoc mode, protocol design for such networks is under the prime focus and several research articles are published in the literature. This type of networks, which operate as stand-alone or as an attachment to cellular/Internet, has extensive applications in different type of communications like personal networking, campus networking, battle fields, emergency and rescue operations etc. [1,2]. Since the network topology changes dynamically, it is difficult to design protocols that can address Quality of Service (QoS) issues. One important QoS is to design an efficient technique for Medium Access Control (MAC) [2,3], and the present paper designs a CDMA based MAC protocol that outperforms others. Below we give a brief overview of some of the important MAC protocols before presenting the proposed technique.

The standard IEEE 802.11 MAC, which is designed on the basis of CSMA/CA technique, is widely used for Wireless LAN (WLAN) implementation [4,5]. However, due to its demerits like exposed terminal problem, RTS collision etc., the network bandwidth is consumed unreasonably causing degradation of throughput, especially in denser networks. A MAC protocol must consider an efficient use of network resources for collision-free channel allocation in dynamic environment and channelization is one of the techniques that provides multiple access in the network without compromising the network resources [5,6]. It emphasizes on the channel allocation based on frequency, time or spreading codes. MAC protocols based on Frequency or Time Division Multiple Access (FDMA/TDMA) have incapability of simultaneous data transmission in all frequency bands or time slots respectively and thus, they have low channel utilization [7,8]. In CDMA based MAC, multiple users are allowed to transmit simultaneously using orthogonal spreading codes over the same allocated spectrum. It results in high channel utilization and better throughput than FDMA/TDMA based MAC and hence, gained high interest for wireless networks [9]. In CDMA, the users’ data is spread with locally generated high rate spreading codes called chip sequence, and the intended receiver de-spreads the received signal with a specific spreading code for decoding data treating the remaining data as noise. As a result, it has been the choice of medium access technology in cellular systems, including the recently adopted 3G and 4G systems [10,11]. Spreading code protocol and code assignment govern the implementation of CDMA in spread-spectrum wireless networks. Although the spread spectrum protocols enhance the network performance by many folds, there is always a possibility of multiple access interference which can be reduced by efficient code assignment [12].

For an efficient CDMA based MAC, it is desired to have interference free simultaneous communication with less number of codes. In this paper, we tried to increase the efficiency of existing code assignment by maintaining the uniqueness and spatial reuse of the assigned codes, thereby minimizing the code requirement. We also observed a secondary co-channel interference in the existing code assignment techniques and modified the assignment procedure to avoid such interference and thus, enhanced the network performance.

The remainder of the paper is structured in following manner. Section 2 includes some preliminaries for different code assignment schemes and discusses the probable interferences. The related works are presented in Section 3. Section 4 presents the system model considered for the implementation of schemes. An efficient PCA based code assignment algorithm with lesser code requirement for the CDMA networks is proposed in Section 5. A modification of the existing PCA scheme is proposed in Section 6 for avoidance of secondary interference and presented an interference-free code assignment scheme. Both the algorithms have been simulated on some synthesized and benchmark networks, compared with the existing schemes and the results are given in Section 7. Finally, Section 8 concludes the paper.

Since all the users share common spectrum in CDMA, the number of codes, which must not exceed a given bound, should be minimized [13]. The code assignment in CDMA network must be efficient and free from interference. Some of the common code assignment schemes and related interferences are discussed below.

The aim of code assignment is to avoid frame collisions during simultaneous transmissions and reuse the assigned codes spatially. There are four different code assignment schemes:

                           
                              (1)
                              
                                 Common Code Assignment (CCA): all transmissions are done over a common spreading code.


                                 Transmitter based Code Assignment (TCA): each terminal is assigned a code such that no two neighbouring terminals have same code and the transmission will be done over transmitter's code.


                                 Receiver based Code Assignment (RCA): each terminal is assigned a code such that no two neighbouring terminals have same code and the transmission will be done over receiver's code.


                                 Pairwise Code Assignment (PCA): each pair of reachable neighbouring terminals is assigned a code with which the transmission is done.

TCA and RCA are considered as equivalent as they have same restrictions in the code assignment process and possess high code requirement. According to the Vizing theorem, the number of codes required in a network graph are at most 
                           min
                        [∆(∆-1)+1, V] and ∆+1 in TCA/RCA and PCA schemes respectively, where V is the total number of nodes and ∆ represents the maximum degree of a graph [13].

Due to incorrect code assignment, interference may occur in a network causing degradation in performance. The basic interferences in CDMA based communication are summarized below [13]:

                           
                              (1)
                              Direct or primary interference- It occurs when two neighbouring nodes transmit simultaneously to each other using same code, as shown in Fig. 1
                                 (a). This may happen in TCA/RCA and PCA schemes.

Indirect or secondary interference- When two transmissions are such that an interference at any of the participating receiver may occur. It comprises of two different types:
                                    
                                       (a)
                                       Two transmissions, which are unaware of the existence of each other, can transmit to the same receiver at the same time. As shown in Fig. 1(b), it occurs at node C and this type of interference occurs in TCA/RCA scheme. Similar interference as shown in Fig. 1(c) may occur at node C.

Interference similar to Fig. 1(c) may occur in PCA, when same code is assigned to two edges which are one-hop apart. It is shown in Fig. 1(d).

Since, code assignment can be viewed as a graphical problem, it is still a standing question that whether ∆ codes are sufficient for assigning codes to the edges of a network modelled graph using PCA scheme. In this paper, the main focus is given to the PCA scheme as it requires fewer codes than the TCA/RCA scheme. The aim is to assign unique and minimum codes to the edges of a CDMA graph and complete the code assignment with ∆ codes over the existing PCA scheme. Further, it is observed that PCA based code assignment leads to the occurrence of co-channel secondary interference between two on-going communications with similar codes. In order to mitigate this problem, PCA must be modified such that it avoids interference within the interference range of the node (assumed as 2) and uniquely assign codes in a network graph.

@&#RELATED WORKS@&#

Due to the high data rate and soft capacity, CDMA is favourable for simultaneous communication in the wireless network. With the help of CDMA, it is possible to have simultaneous successful transmissions within the limits of multiple access interference and thus increases the network capacity. Hence, different MAC protocols are proposed in the literature that supports CDMA for simultaneous communication. For wireless communications, CDMA implementation at MAC level primarily focuses on the following aspects:

                        
                           (1)
                           Code assignment in CDMA based ad hoc networks.

Channel assignment in CDMA based cellular networks.

Code assignment in 4G & beyond networks.

For any CDMA based MAC protocol, it is necessary to have an efficient code assignment. Hu proposed a two phase algorithm for code assignment and presented a novel pair-wise code assignment scheme [13]. In the first phase, the codes are assigned to the nodes in a randomized manner with the ordering resulted from the sink-tree application. On the other hand, the sequential colouring approach either based on the token passing scheme or the deadlock-free orientation approach is followed in the second phase. Authors further raised a question whether ∆ codes are sufficient for assigning codes to the edges of network graph using PCA scheme. Bertossi and Bonuccelli [14] summarized that TCA scheme provide better throughput than RCA scheme. Also, hidden terminal problem cannot be avoided in RCA scheme, but it can totally be eliminated by TCA scheme and is proven to be NP complete. The paper presents heuristic and optimal algorithms for general and special networks like rings and trees, where all the vertices at distance two-hop have different codes. But the code assignment in dynamic topological conditions was not considered in this paper. Garcia-Luna-Aceves and Raju have formulated a distributed algorithm for code assignment in dynamic, multi-hop wireless radio networks [15]. The algorithm was used for both transmitter based and receiver based code assignment schemes. A dynamic, distributed code assignment algorithm for dynamic networks is presented for general network topologies [16], where authors developed some heuristic algorithms but were inefficient in code assignment. A dynamic and distributed CDMA code assignment protocol is proposed for ad hoc networks [17], where a combination of RTS/CTS dialogue, busy tone signaling and power control mechanisms, assignment of codes is done under designed CDMA code selection rules. The protocol provides high code reusability feature with minimum battery power consumption. A token circulation scheme is proposed in [18], to conduct functions required at the medium access control layer including neighbour detection, code assignment and transmission scheduling for CDMA-based unmanned aerial vehicle ad hoc networks. Further, a novel low complexity algorithm is proposed based on the Ant Colony Optimization (ACO) technique for assigning spreading codes to its users such that the mutual interference is minimized [19].

CDMA implementation is popular and efficient in the cellular environment. Haas and McLaughlin [20] designed a centralized dynamic channel assignment (DCA) algorithm for a hybrid TDMA/CDMA with TDD interface which assigns channels to the different neighbouring cells with different symmetry. An adaptive channel assignment scheme has been proposed to maintain the QoS for the wireless networks [21], which divides the channels into two categories, the guard channels and shared channels and assigns channels according to the incoming call and handoff rates. A dynamic channel assignment (DCA) strategy called Hybrid-DCA is proposed for a clustered ad hoc network with CDMA/TDMA structure where codes are divided into time slots called channels [22]. The scheme increases spatial reuse of channels with some control overhead. A joint channel and power allocation scheme is used in the downlink transmission of multi-user multi-carrier-CDMA systems where a novel Adaptive Channel Allocation (ACA) algorithm is used for assignment and considers the throughput of the system during implementation [23]. To include QoS in mobile networks, a channel assignment scheme for CDMA/TDMA mobile networks is presented that guarantees successful transmission of voice and data traffic [24]. In order to provide congestion avoidance in wireless network, a novel channel assignment technique is used which minimizes the interference and route scheduling to maximize the throughput of the network [25].

On demand of higher internet related and optimized data services, 4G network systems evolved which overcomes the demerits of 3G and 2G networks in terms of bandwidth, quality of service, data transfer rate, etc. Worldwide Interoperability for Microwave Access (WiMAX) and Long Term Evolution (LTE) are the two standard 4G networks which provide high data transfer rate, better spectrum flexibility, low handover latency, etc. [26]. In WiMAX, downlink uses variable spreading factor orthogonal frequency and code division multiplexing (VSF-OFCDM) principle for multiple access, whereas for uplink, it uses multi-carrier direct-spectrum code division multiple access (MC-DS-CDMA) for simultaneous transmissions [27]. The problem of high bit error rate (BER) and low signal to noise ratio (SNR) was highlighted and discussed for WiMAX networks [28]. Here, MC-CDMA is used as transmission technique and uses low-density parity-check (LDPC) coding mechanism for analysing the performance of WiMAX network in order to increase the SNR value of improved communication. Nowadays, instead of using conventional pseudo-random spreading sequence for multiple accesses, Zadoff-Chu (ZC) sequences are practiced as synchronization sequences in modern wireless communication systems like LTE, etc. [29]. Moreover, constant amplitude zero auto correlation (CAZAC) sequence is also used in LTE, which is a poly-phase code with good correlation properties and has many applications in channel estimation and time synchronization [30].

A wireless ad hoc network is a self-controlled network, consisting of mobile nodes having logical connectivity among them to control proper transmission between the peers. Each node is independently placed on a two–dimensional simulation area A, by following a uniform random distribution. The neighbourhood information of all nodes can collectively be modelled as a network topology by using a graph, G = {V, E}, where V is the set of vertices representing the nodes in a network and E is the set of edges called links between the nodes. The logical links are assumed to be bidirectional and used for half-duplex transmission. To model the wireless transmission between the nodes, a radio link model is assumed in which each node has a certain transmission range, refer Fig. 2
                     . Each node with fixed transceiver power and omni-directional antenna, periodically discover neighbours by sending/responding hello-like short messages and records in a table. Two links are considered adjacent if they have a node v∈V in the network as common end.

However, the network topology thus made is dynamic in nature as the nodes are mobile and are free to move in the system area based on the random way point mobility model [31]. In our algorithm, we consider nodes with constant slow mobility and have consistent network graph at any time. A new topology is generated as the nodes discover their neighbours periodically.

The following terminologies are used in the proposed algorithm for code assignment in CDMA networks:

                           
                              (1)
                              The set of nodes in the network is denoted by V = {v
                                 1, v
                                 2, ….vN
                                 }, where N is the total number of nodes.

Tr represents the fixed transmission range of the node.

(xi, yi
                                 ): The position coordinates of node vi
                                 .

Link in the network is the logical connection between two nodes with an overlapping transmission range. The set of links in the network is denoted by E = {eij
                                  | vi
                                  and vj
                                  are reachable}.

The degree of a node vi
                                 , denoted as d(vi
                                 ), is the number of neighbours of node vi
                                 , that is, its number of adjacent links at node vi
                                 .

Minimum degree of the network, δ is given by Eq. (1),
                                    
                                       (1)
                                       
                                          
                                             δ
                                             =
                                             
                                                min
                                                
                                                   ∀
                                                   
                                                      v
                                                      i
                                                   
                                                   ∈
                                                   V
                                                
                                             
                                             d
                                             
                                                (
                                                
                                                   v
                                                   i
                                                
                                                )
                                             
                                             
                                             f
                                             o
                                             r
                                             
                                             i
                                             =
                                             1
                                             ,
                                             
                                             2
                                             ,
                                             …
                                             ,
                                             
                                             N
                                          
                                       
                                    
                                 
                              

Maximum degree of the network, Δ is given by Eq. (2),
                                    
                                       (2)
                                       
                                          
                                             Δ
                                             =
                                             
                                                max
                                                
                                                   ∀
                                                   
                                                      v
                                                      i
                                                   
                                                   ∈
                                                   V
                                                
                                             
                                             d
                                             
                                                (
                                                
                                                   v
                                                   i
                                                
                                                )
                                             
                                             
                                             f
                                             o
                                             r
                                             
                                             i
                                             =
                                             1
                                             ,
                                             
                                             2
                                             ,
                                             …
                                             .
                                             ,
                                             
                                             N
                                          
                                       
                                    
                                 
                              

The neighbouring table stores the information of direct neighbours of any node in the network.

The code-assign table stores the information of the assigned code and its adjoining peers.

A Boolean variable flag determines the validity of the node's code-assign table. An updated and valid code-assign table is indicated by true value and vice-versa.

A Boolean variable, adj flag (initialized as false) is used to temporarily defer the code assignment at the node till the consistency check is completed, indicated by true value.

Consider the wireless ad hoc network with N nodes distributed in an area L × M. Let the node degree is denoted by DN
                        
                        , 
                        E[DN
                        ] represents the expected node degree and the maximum node degree in the network is denoted by DM
                        . The mean, E[DN
                        ] = λ = mp where m is the number of nodes and p is the probability. If m is very large and p is adequately small, then mean can be approximated as λ = α log m with α (a constant)> 0 [32]. The maximum node degree in a wireless ad hoc network which is 1-connected with a transmission range Tr
                         in the network is given by Eq. (3),

                           
                              (3)
                              
                                 
                                    
                                       D
                                       M
                                    
                                    =
                                    
                                       (
                                       
                                          
                                             3
                                             2
                                          
                                          +
                                          
                                             1
                                             
                                                2
                                                α
                                             
                                          
                                       
                                       )
                                    
                                    ×
                                    E
                                    
                                       [
                                       
                                          D
                                          N
                                       
                                       ]
                                    
                                    −
                                    
                                       1
                                       4
                                    
                                    log
                                    
                                    E
                                    
                                       [
                                       
                                          D
                                          N
                                       
                                       ]
                                    
                                    −
                                    0.170
                                 
                              
                           
                        where,

                           
                              (4)
                              
                                 
                                    E
                                    
                                       [
                                       
                                          D
                                          N
                                       
                                       ]
                                    
                                    =
                                    
                                       (
                                       N
                                       −
                                       1
                                       )
                                    
                                    ×
                                    
                                       
                                          π
                                          
                                             T
                                             r
                                             2
                                          
                                          L
                                          M
                                          +
                                          
                                             1
                                             2
                                          
                                          
                                             T
                                             r
                                             4
                                          
                                          −
                                          
                                             4
                                             3
                                          
                                          L
                                          
                                             T
                                             r
                                             3
                                          
                                          −
                                          
                                             4
                                             3
                                          
                                          M
                                          
                                             T
                                             r
                                             3
                                          
                                       
                                       
                                          
                                             L
                                             2
                                          
                                          
                                             M
                                             2
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In this section, a heuristic algorithm is proposed to reduce the code requirement in PCA for the CDMA implementation in the real time networks.

The codes used for assignment are perfectly orthogonal in nature. Initially, the proposed algorithm uses breadth first search (BFS) graph traversal with maximum degree node as the starting node. During traversal, each node based on its type as given below, performs one of the following three operations:

                           
                              (1)
                              The starting node, from which BFS start, assigns codes to all the incident edges serially and prepares a code-assign table as per the format given in Fig. 3
                                 (c). It then broadcasts the code-assign table to the neighbouring nodes.

The intermediate nodes, whose edges are partially assigned, assign codes to the remaining edges with respect to the code-assign tables received from neighbours. It prepares the code-assign table and broadcast to the neighbouring nodes.

The remaining nodes, whose all incident edges have been assigned with codes, prepares their code-assign tables with respect to the tables received from the neighbouring nodes.


                        Fig. 3(a) and (b) shows the graphs with min-pca scheme. However, there may exist code inconsistency problem during the assignment process where two or more neighbouring edges of a node may be assigned with the same code and cause interference during transmission, refer Fig. 4
                        (a). The fan re-numbering of codes can remove this problem and will give a consistent code assignment as shown in Fig. 4(b).


                        Table 1
                         provides a detailed algorithm for min-pca scheme which starts as a new session with ∆ codes and sets flag as false for each node. The output at each node will be an updated code-assign table and flag set to true. All the nodes are traversed in BFS order. Each node periodically updates its neighbouring-table and prepares the code-assign table by assigning codes with respect to the code-assign tables received from the neighbours. To remove code inconsistency, adjust-code-inconsistency is called before code assignment. The adjust-code-inconsistency algorithm is executed only once by any node and is governed by adj flag, initialized as false.


                        
                           Lemma 1
                           Algorithm min-pca assigns codes to the edges of CDMA network consistently.


                        
                           Proof
                           The min-pca is a modification of PCA scheme with minimized code requirement. For consistent code assignment, a node assigns codes to its edges only after knowing the consistent code-assignment information from the neighbouring nodes. Hence, the final code-assign table is prepared only after receiving and resolving the code-adjust message if generated. Thus, the code assignment done using min-pca will be consistent.

Consider Fig. 5
                               with the maximum degree in a graph, Δ considered as 4. Node 1 checks for code inconsistency before the assignment process and sends Adjust message to node 2, since it is the one which has assigned the codes currently. To solve the inconsistency, node 2 initially renumbers the fan by considering the codes assigned to its neighbours with the help of received code-assign tables. In Fig. 5(i) and (iii), if fan renumbering doesn't solve the problem, an extra code will have no disturbing results as ∆ = 4. In Fig. 5(ii) and (iv), node 2 have the maximum degree, fan renumbering of codes will solve the inconsistency as node 1 has not assigned codes to all other edges. If the inconsistency is not resolved, the conflicting link has to be made unavailable.

Since the algorithm adjust-code-inconsistency resolves the code assignment inconsistency, its capability and feasibility in solving multiple code-assignment inconsistencies at a node has been analysed. If a code inconsistency at two neighbouring edges occurs, it results in single code inconsistency and it can be trivially solved by using one adjust-code-inconsistency operation. Hence, the lemma follows.


                        
                           Theorem 1
                           Algorithm min-pca requires ∆ codes for assigning the edges uniquely in a wireless ad hoc network.


                        
                           Proof
                           The proof comprises of two aspects (i) Number of codes required per node and (ii) Number of codes required per graph. Since the maximum degree of the graph is ∆, any node with the maximum degree must require ∆ codes to assign its edges. As shown in Lemma 1 that min-pca consistently assigns codes to the edges of a graph, thus, if an inconsistency with multiplicity m is occurred at a node, then exactly m codes, which remain unused out of ∆ codes, are used to resolve the inconsistency. Theorem 6.1 in [33] regarding graph-edge colouring states that the edge-chromatic number of a bipartite graph is ∆, however it is not necessarily ∆ for a non-bipartite graph. Thus, we consider the following two cases for a non-bipartite graph:


                              Case 1: If the given CDMA network is a non-bipartite graph, even then it is possible in some cases to use ∆ codes to have a consistent code assignment to the edges. For instance, consider Fig. 2(a) where the graph is non-bipartite and uses ∆ codes for assigning to its edges in a consistent manner. Since, min-pca exercises the possibility of using ∆ codes without knowing graph types, it can be concluded that the consistent code assignment to a non-bipartite graph with ∆ would be possible in some cases using min-pca algorithm.


                              Case 2: If a non-bipartite graph is not assigned with ∆ codes then it will require exactly ∆+1 codes. In the min-pca code assignment, such situation is indicated during code consistency check. If the node has already adjusted the code for a link, indicated by adj flag being true, the node will not perform adjustment again and makes the link with inconsistent code unavailable. For the network graph in Fig. 6
                              (b), the code assignment using existing PCA and min-pca will always result in Δ+1 codes. To implement min-pca code assignment using Δ codes, the link (2,
4) with extra code will be removed. Since the target network is a wireless CDMA with dynamic nature and neighbour discovery is performed through bi-directional links, case 2 does not continue for a longer time. Otherwise, one or a few edges may be assumed as non-existent. Note that the network performance as such is not reduced if one or a few links are not considered for communications.

To support the case of non-bipartite graph, we now relate the code assignment in the network with matching in graphs. For edge-colouring of a graph, no two adjacent edges must have the same colour. Thus the edges of any given colour, form a matching. That is, a proper edge colouring is equivalent to partition of the graph into disjoint matching [34]. Let M denotes the possible set of disjoint matching for the graph such that-

                                 
                                    (i)
                                    
                                       
                                          
                                             M
                                             =
                                             {
                                             
                                                M
                                                1
                                             
                                             ,
                                             
                                             
                                                M
                                                2
                                             
                                             ,
                                             .
                                             .
                                             .
                                             .
                                             .
                                             .
                                             ,
                                             
                                             
                                                M
                                                n
                                             
                                             }
                                             ,
                                          
                                        where Mi
                                        is a matching set of the graph, 1 < i < n and n = | M |


                                       
                                          
                                             
                                                |
                                             
                                             
                                                M
                                                1
                                             
                                             
                                                |
                                                +
                                                |
                                             
                                             
                                                M
                                                2
                                             
                                             
                                                ∥
                                                
                                                   +
                                                   …
                                                   …
                                                   …
                                                   +
                                                
                                                ∥
                                             
                                             
                                                M
                                                n
                                             
                                             
                                                |
                                                =
                                                |
                                                E
                                                |
                                                ,
                                             
                                          
                                        total number of edges in the graph.

Let χ(G) denotes the edge chromatic number of the graph using min-pca and ∆ is the maximum degree of the node in the graph. If such M exists in the graph then, it is observed that |M| = χ(G).
                           

The graph GA presented in Fig. 3(a) is a non-bipartite graph and there exists M, given by Eq. (5),

                                 
                                    (5)
                                    
                                       
                                          M
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         1
                                                         ,
                                                         2
                                                         )
                                                         ,
                                                         (
                                                         3
                                                         ,
                                                         5
                                                         )
                                                         ,
                                                         (
                                                         4
                                                         ,
                                                         6
                                                         )
                                                         }
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         2
                                                         ,
                                                         3
                                                         )
                                                         ,
                                                         (
                                                         4
                                                         ,
                                                         5
                                                         )
                                                         }
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         1
                                                         ,
                                                         3
                                                         )
                                                         ,
                                                         (
                                                         2
                                                         ,
                                                         4
                                                         )
                                                         ,
                                                         (
                                                         5
                                                         ,
                                                         6
                                                         )
                                                         }
                                                      
                                                   
                                                
                                             
                                             }
                                          
                                          
                                          and
                                          
                                          
                                             |
                                             M
                                             |
                                          
                                          =
                                          Δ
                                          =
                                          3
                                       
                                    
                                 
                              
                           

We extend the graph in Fig. 3(a) by incorporating edge 1-6 in the graph such that ∆ is maintained as 3, shown in Fig. 6(a), which is also non-bipartite. There exists M, given by Eq. (6),

                                 
                                    (6)
                                    
                                       
                                          M
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         1
                                                         ,
                                                         2
                                                         )
                                                         ,
                                                         (
                                                         3
                                                         ,
                                                         5
                                                         )
                                                         ,
                                                         (
                                                         4
                                                         ,
                                                         6
                                                         )
                                                         }
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         1
                                                         ,
                                                         3
                                                         )
                                                         ,
                                                         (
                                                         2
                                                         ,
                                                         4
                                                         )
                                                         ,
                                                         (
                                                         5
                                                         ,
                                                         6
                                                         )
                                                         }
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         1
                                                         ,
                                                         6
                                                         )
                                                         ,
                                                         (
                                                         2
                                                         ,
                                                         3
                                                         )
                                                         ,
                                                         (
                                                         4
                                                         ,
                                                         5
                                                         )
                                                         }
                                                      
                                                   
                                                
                                             
                                             }
                                          
                                          
                                          and
                                          
                                          
                                             |
                                             M
                                             |
                                          
                                          =
                                          Δ
                                          =
                                          3
                                       
                                    
                                 
                              
                           

Graph GB in Fig. 3(b) is a bipartite graph. We extended the same in Fig. 6(b) by incorporating another edge 2-4, making the graph non-bipartite with ∆ = 3 and M is given by Eq. (7),

                                 
                                    (7)
                                    
                                       
                                          M
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         1
                                                         ,
                                                         2
                                                         )
                                                         ,
                                                         (
                                                         3
                                                         ,
                                                         5
                                                         )
                                                         }
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         1
                                                         ,
                                                         3
                                                         )
                                                         ,
                                                         (
                                                         4
                                                         ,
                                                         5
                                                         )
                                                         }
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         1
                                                         ,
                                                         4
                                                         )
                                                         ,
                                                         (
                                                         2
                                                         ,
                                                         5
                                                         )
                                                         }
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         {
                                                         (
                                                         2
                                                         ,
                                                         4
                                                         )
                                                         }
                                                      
                                                   
                                                
                                             
                                             }
                                          
                                          
                                          and
                                          
                                          
                                             |
                                             M
                                             |
                                          
                                          =
                                          Δ
                                          +
                                          1
                                          =
                                          4
                                       
                                    
                                 
                              
                           


                              Figs. 3(a) and 6(a) resembles case 1 and successfully assigns ∆ codes. Fig. 6(b) gives an example of case 2 where ∆+1 codes will be required. Since, the considered graphs are representing the real time CDMA networks, it is unfeasible to have a geographical connection between nodes (1, 6) in Fig. 6(a) and between nodes (2, 4) in Fig. 6(b). However, if the situation arises for code assignment with more than ∆ codes, the conflicting link will be made unavailable, leading to the code assignment with ∆ codes in a CDMA network.

The min-pca scheme can easily be deployed for the implementation of CDMA protocol. However, the secondary interference problem still exists, even if the code assignment is done correctly. The next section addresses this issue and presents an efficient heuristic algorithm to avoid such interference.

In this section, the scenario of secondary interference in the existing PCA and min-pca scheme is discussed and proposed an efficient interference-free-pca code assignment scheme which avoids secondary interference in the network.

In Fig. 7
                        , the code assignment using min-pca is shown by green codes without braces. A secondary interference at node 2 is possible if node 1 and node 5 transmit simultaneously to node 2 and node 3 respectively using code 1 as assigned to the edges (1, 2) and (3, 5). Such interference is also observed in the existing PCA scheme. Thus, in order to avoid the secondary interference, a modified assignment is presented by red codes within braces in Fig. 7. In this regard, a definition given below may be followed:


                        
                           Definition 1
                           Modified PCA scheme aims to assign codes to a CDMA network such that all the links within interference range of a node has unique codes.


                        Table 2
                        .


                        
                           Lemma 2
                           The interference-free-pca is an improved code assignment over existing PCA.


                        
                           Proof
                           In [33], it is mentioned that a k-edge colouring, ℓ’ is an improvement over k-edge colouring ℓ if,

                                 
                                    (8)
                                    
                                       
                                          
                                             ∑
                                             
                                                v
                                                ∈
                                                V
                                             
                                          
                                          
                                             
                                                c
                                                ′
                                             
                                             
                                                (
                                                v
                                                )
                                             
                                          
                                          >
                                          
                                             ∑
                                             
                                                v
                                                ∈
                                                V
                                             
                                          
                                          
                                             c
                                             (
                                             v
                                             )
                                          
                                       
                                    
                                 
                              where c(v) is the number of distinct colours present at node v in the colouring ℓ and c’(v) is the number of distinct colours present at node v in the colouring ℓ’. To prove the improvement in the interference-free-pca code assignment, we define a new objective function, 
                                 
                                    f
                                    
                                       i
                                       _
                                       p
                                       c
                                       a
                                    
                                 
                               or fpca
                               depicted by Eq. (9).

                                 
                                    (9)
                                    
                                       
                                          
                                             f
                                             
                                                i
                                                _
                                                p
                                                c
                                                a
                                             
                                          
                                          
                                          or
                                          
                                          
                                             f
                                             
                                                p
                                                c
                                                a
                                             
                                          
                                          =
                                          
                                             ∑
                                             v
                                          
                                          
                                             c
                                             
                                                
                                                   N
                                                   2
                                                   v
                                                
                                                
                                                   (
                                                   e
                                                   )
                                                
                                             
                                          
                                          
                                             (
                                             v
                                             )
                                          
                                          ,
                                          
                                          v
                                          ∈
                                          V
                                       
                                    
                                 
                              where, 
                                 
                                    
                                       N
                                       2
                                       v
                                    
                                    
                                       (
                                       e
                                       )
                                    
                                 
                               refers to the edges within 2-hop distance from a node v and 
                                 
                                    
                                       c
                                       
                                          
                                             N
                                             2
                                             v
                                          
                                          
                                             (
                                             e
                                             )
                                          
                                       
                                    
                                    
                                       (
                                       v
                                       )
                                    
                                 
                               refers to the number of distinct assigned codes within the 2-hop distance from node v.


                              Figs. 8
                              (a) and 8(b) presents a segment of a network which is edge-assigned by codes using PCA and interference-free-pca, respectively and the uniqueness of codes at node 1 is represented. The value of objective function for node 1 is higher in case of interference-free-pca than in PCA. Since, the objective function for the graph will be the summation of all the nodes, hence 
                                 
                                    
                                       f
                                       
                                          i
                                          _
                                          p
                                          c
                                          a
                                       
                                    
                                    >
                                    
                                       f
                                       
                                          p
                                          c
                                          a
                                       
                                    
                                 
                               and the said claim is proved.


                        
                           Theorem 2
                           Algorithm interference-free-pca requires at most ∆
                              2 – c codes for assigning codes to a CDMA network, where ∆ is the maximum degree of the graph.


                        
                           Proof
                           Consider the graph-segment shown in Fig. 9
                              , where the variation in code requirement is focussed on the basis of connectivity between the nodes of a network with Δ as maximum degree. Let node 1 has the maximum degree and each of which may have at most ∆-1 neighbouring edges. So, node 1 and a neighbour require ∆ and (∆-1) codes, respectively. Now consider the following two cases:

                                 
                                    (1)
                                    
                                       
                                          
                                             (a)
                                             If none of two adjacent nodes of node 1 are connected directly, then the edges of all adjacent nodes are two-hop away via node 1 and thus allow to repeat same subset of (∆-1) codes to assign all edges outside the interference range of node 1. Thus, the number of codes required is 2∆ - 1, as shown in Fig. 9(a).

Otherwise they require 3(∆ - 1) codes, as a new subset of ∆-2 codes are required (for instance, if nodes 3 and 4 are connected as shown in Fig. 9(b)).

If all the adjacent nodes of node 1 are connected to each other, which forms highly dense network based graph leads to the worst case, will require ∆2 number of codes, Fig. 9(c). This case occurs when the network based graph is a complete bipartite graph.


                        Fig. 9(c) represents enough denser graphs than actual CDMA based network graphs, thus based on this assumption and simulation results, the total number of codes required by proposed interference-free-pca algorithm is at most ∆2
                         – c where,

                           
                              (10)
                              
                                 
                                    c
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                0
                                             
                                             
                                                
                                                   i
                                                   f
                                                   
                                                   n
                                                   e
                                                   t
                                                   w
                                                   o
                                                   r
                                                   k
                                                   
                                                   i
                                                   s
                                                   
                                                   a
                                                   
                                                   c
                                                   o
                                                   m
                                                   p
                                                   l
                                                   e
                                                   t
                                                   e
                                                   
                                                   b
                                                   i
                                                   p
                                                   a
                                                   r
                                                   t
                                                   i
                                                   t
                                                   e
                                                   
                                                   g
                                                   r
                                                   a
                                                   p
                                                   h
                                                
                                             
                                          
                                          
                                             
                                                k
                                             
                                             
                                                
                                                   
                                                      o
                                                      t
                                                      h
                                                      e
                                                      r
                                                      w
                                                      i
                                                      s
                                                      e
                                                   
                                                   
                                                   w
                                                   h
                                                   e
                                                   r
                                                   e
                                                   
                                                   0
                                                   <
                                                   k
                                                   <
                                                   Δ
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In this section, extensive simulations over different synthesized, actual and random graphs with varying node numbers and connectivity patterns are carried out, where different code assignment schemes like TCA (RCA), existing PCA, min-pca and interference-free-pca schemes are considered. In our experimentations, we have used MATLAB R2013a and C language, and the different CDMA network graphs considered having following parameters as shown in Table 3.
                     
                  


                     Fig. 10
                      shows the comparison between different code assignment schemes and the proposed schemes in respect of number of codes required with varying number of network nodes for four different values of ∆. The code requirement for the existing TCA and PCA schemes depends on the Vizing theorem as stated in [13]. For instance, the TCA, PCA, min-pca and interference-free-pca requires 7, 4, 3 and 8 codes, respectively for a network having 150 nodes with ∆ = 3. It is observed that the proposed min-pca algorithm requires only ∆ codes that is, it requires 3, 4, 5 and 6 codes for the CDMA networks having ∆ = {3, 4, 5, 6}, respectively. For denser networks, interference-free-pca scheme performs better than TCA. However, it requires more codes than the existing and proposed PCA schemes, it fruitfully overcomes the secondary interference problem occurred in the existing PCA and provides more applicability of CDMA networks in the implementation of MAC protocol.

With pre-assumed 16 codes and the environments as considered in [17], the simulation results for the estimation of the successful transmission rate using min-pca and existing code assignment schemes are shown in Fig. 11
                     . The blocking probability of min-pca is compared with the existing schemes in Fig. 12
                      for a limited number of codes, C = {30, 32} as considered in [35]. It is observed that code assignment using min-pca performs better than existing schemes in terms of successful transmission rate and blocking probability.

We also present the simulation results of the proposed algorithms on some real life benchmark graphs used in [16], referred from Knuth's Stanford GraphBase [36] and DIMACS [37]. The results obtained are given in Tables 4
                      and 5
                     , respectively.

From Table 4, it was observed that the proposed min-pca algorithm completes the assignment using ∆ codes with an average graph density reduction of 13.71%, where the graph density is defined as the ratio of the number of edges to the number of vertices of a graph. The test results of the interference-free-pca algorithm are given in Table 5, which illustrates the successful code assignment with less than or equal to ∆2−c codes, where an average graph density reduction of 1.04% is required. Since these random benchmark graphs represent the instances of CDMA networks and a minor reduction in graph density still remains denser than actual CDMA networks, the proposed algorithms are well applicable to the actual CDMA networks.

The min-pca scheme requires a static code requirement based on the maximum degree of the network. However, interference-free-pca involves a dynamic code requirement which depends on the maximum degree, interference range and density of the graph. In order to depict the variation in the code requirement using interference-free-pca, we assume 95% confidence interval with varying number of nodes and maximum degree, Δ assumed as {3, 4, 5, 6}. The results are averaged over 50 independent random scenarios of the network and are presented in Table 6
                     . It was observed that the standard deviation of code requirement is affected by the density of the network and variation in code requirement for a small network is lesser than the larger networks. However, the code requirement of interference-free-pca scheme fulfils the estimated upper bound, shown in Eq. (9), which validates the theoretical analysis.

@&#CONCLUSION@&#

In this paper, we discussed various interference aspects of the code assignment schemes for CDMA-based MAC protocol and proposed two new algorithms for the efficient assignment of codes to the network edges. The first algorithm called as min-pca assigns any CDMA network with at most ∆ codes, where minor modification without any network performance degradation in some cases is necessary. This paper also identified a co-channel secondary interference in existing (and proposed min-pca) schemes, and a modified code assignment algorithm called interference-free-pca to avoid such interference is developed. The algorithm requires more codes over the existing ones including min-pca with an upper bound of ∆2−c codes, however, increases the network performance. Both the algorithms have been simulated on different synthesized, benchmark and random networks, and found to be satisfactory in terms of code requirements. On simulation, we found that the proposed min-pca increases the successful transmission rate by 17% and reduces blocking probability by 12.5%.

@&#REFERENCES@&#

