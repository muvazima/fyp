@&#MAIN-TITLE@&#A spatial optimisation model for multi-period landscape level fuel management to mitigate wildfire impacts

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present an integer programming model for multi-period fuel treatment planning.


                        
                        
                           
                           The model schedules treatments to generate fire-resistant spatial fuel patterns.


                        
                        
                           
                           The model provides a flexible framework for managing heterogeneous landscapes.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

OR in natural resources

Spatial optimization

Wildfire

Wildland fire

Fuel management

Integer programming

@&#ABSTRACT@&#


               
               
                  Elevated fuel loads are contributing to an increase in the occurrence of, and area burned by, severe wildfires in many regions across the globe. In an attempt to reverse this trend, fire and land management agencies are investing in extensive fuel management programs. However, the planning of fuel treatment activities poses complicated decision-making problems with spatial and temporal dimensions. Here, we present a mixed integer programming model for spatially explicit multi-period scheduling of fuel treatments. The model provides a flexible framework that allows for landscape heterogeneity and a range of ecological and operational considerations and constraints. The model’s functionality is demonstrated on a series of hypothetical test landscapes and a number of implementation issues are discussed.
               
            

@&#INTRODUCTION@&#

In this paper we consider the scheduling of fuel treatment activities to reduce the destructive potential of wildfires. In practice, these scheduling problems are usually solved subjectively by managers, but the fact that fuel treatments and fires can interact with each other across both time and space render them particularly difficult to solve manually. As an alternate solution approach, we present a mixed integer programming model for selecting fuel treatment locations in a multi-period setting. In this model, fuel treatments are scheduled to produce a fragmented landscape fuel complex with a view to inhibiting fire spread. We also present model extensions to account for various ecological and operational considerations. The major contribution of this paper is that it takes a complicated management problem of societal importance and formulates it into a coherent and solvable model. A number of similarly structured problems, involving dynamic natural systems with spatially explicit management objectives, appear in the forestry operations research literature (Bjørndal, Herrero, Newman, Romero, & Weintraub, 2012; Martell, Gunn, & Weintraub, 1998; Weintraub, Church, Murray, & Guignard, 2000; Weintraub & Romero, 2006). While our model employs some concepts that feature in this earlier work (i.e., adjacency, connectivity and inter-temporality), on the whole, fuel management problems tend to differ significantly from other well-studied forestry problems such as harvest scheduling. For example a key point of difference arising from our application, is that our model’s objective is to generate and maintain ‘disconnected’ landscape patterns.

Fire is a natural component of many terrestrial ecosystems. However, uncontrolled wildfires can cause loss of human life and destruction of property and natural resources (King, Bradstock, Cary, Chapman, & Marsden-Smedley, 2008). This is of special concern in localities such as southern Australia, California and Mediterranean Europe where major cities are situated in close proximity to highly flammable vegetation (Bradstock et al., 2012). Wildfire incidence requires the co-occurrence in time and space of three factors: fire-conducive weather, an ignition source and fuel (i.e., flammable vegetation). In recent decades an increase in wildfire extent and severity has been observed in many countries including the USA, Canada, Australia and southern Europe (Boer, Sadler, Wittkuhn, McCaw, & Grierson, 2009; McCaw, 2013). This is due in part to uncharacteristically high fuel loads (i.e., large amounts of combustible vegetation per unit area) arising from suppression-focussed 20th century fire management practices (Hessburg, Reynolds, Keane, James, & Salter, 2007; Loehle, 2004; Reinhardt, Keane, Calkin, & Cohen, 2008; Schmidt, Taylor, & Skinner, 2008).

In an attempt to reduce the risk posed by wildfires, land management agencies in Australia and the USA have implemented extensive fuel management programs (Ager, Vaillant, & Finney, 2010; Boer et al., 2009; Collins, Stephens, Moghaddas, & Battles, 2010; McCaw, 2013). Fuel management is defined as the process of altering the amount and structure of fuels through the application of treatments such as prescribed fire or mechanical thinning (Finney, 2001; King et al., 2008). Fuel management programs typically aim to reduce risk in two ways: (1) by forming fuel-breaks adjacent to communities to facilitate the establishment of fire-lines by suppression forces such as fire crews or air tankers, or (2) by altering fuels in the surrounding landscape to modify fire behaviour and lessen the potential for severe fires (Bevers, Omi, & Hof, 2004). Large destructive wildfires typically occur in hot, dry and windy weather conditions and tend to be resistant to suppression efforts due to their rapid growth, sheer size, and crown fire and spotting behaviours. The term “crown fire” refers to fires that spread through the crown or canopy of trees. Crown fires are typically high in intensity and can spread incredibly quickly. “Spotting” refers to the process by which intense fires sometimes emit burning firebrands (e.g., pieces of burning bark) that are lofted into the air by the convection column above the fire and carried by the wind to land some distance ahead of the main fire front where they ignite new “spot fires” that contribute to fire spread. Under such conditions a program of the second type that manages fuel in the wider landscape is thought to offer the best possible means for resisting fire growth (Finney, 2007; Reinhardt et al., 2008).

Large wildfires cover an area greater than a treated forest stand, meaning a single large fire could encounter several fuel treatment sites before extinguishment. Hence, a landscape-level fuel management strategy that considers the layout of all fuel treatments in relation to one another is likely to be more effective than a ‘greedy’ selection of treatment locations (Rytwinski & Crowe, 2010). The potential benefits of landscape-level fuel treatment has been recognised in wilderness areas of the western United States where free-burning fires have generated mosaics of differing fuel ages and such historic burn patterns have been seen to inhibit the growth and therefore effect the shape and size of large fires in subsequent years (Finney, 2007). This type of landscape-level effect was observed in a study of two large Arizona wildfires, where the fires circumvented treated areas resulting in unburned areas referred to as fire-shadows on the lee-side of fuel treatments, and an overall reduction in fire severity (Finney, McHugh, & Grenfell, 2005). In the eucalypt forests of south-western Australia, prescribed burning has been practiced at large spatial scales over the past five decades. Analysis of historic data in this region has revealed that the connectedness of ‘old’ untreated fuel patches is the strongest contributing variable to wildfire extent, highlighting the need to consider spatial arrangement of fuels when planning fuel treatment regimes (Boer et al., 2009). This finding is consistent with observations made in the USA’s Sierra Nevada forests that indicate spatial fragmentation of fuels can modify wildfire size and behaviour (Parsons & van Wagtendonk, 1996; van Wagtendonk, 1995).

Despite this small but growing body of field evidence, current understanding of fire behaviour responses to landscape-level fuel treatment is largely based upon simulation studies. Probabilistic models based on percolation theory and cellular automata have demonstrated the importance of fuel connectivity for landscape-level fire spread dynamics (Miller & Urban, 2000), with fragmentation of the fuel complex by treatment resulting in a reduction in average fire size (Loehle, 2004). Simulation studies indicate that fire spread is affected by the amount of fuel treatments as a proportion of the landscape and their spatial configuration (Gonzalez, Palahi, & Pukkala, 2005; King et al., 2008; Parisien, Junor, & Kafka, 2007; Schmidt et al., 2008). Nonlinear relationships have been identified between area treated and fire behaviour outputs (Ager et al., 2010), including ‘threshold’ effects where – if fuel treatment exceeds some critical level – a marked reduction in fire propagation is realised (King et al., 2008). Geometrically derived fuel treatment patterns have been shown to reduce fire spread rate and fire-line intensity (Finney, 2001). However, real-life application of such patterns is complicated by the heterogeneity of landscapes with respect to fuels, weather and topography (Finney, 2007).

While findings from empirical and simulation studies can inform strategies for spatial fuel treatment configurations, in practice the performance of such strategies can be significantly degraded by operational constraints that restrict treatment extent and location (Ager et al., 2010). These restrictions arise due to factors such as: land ownership, funding limitations, inadequate road access, habitat preservation regulations and prescribed burning weather requirements (Collins et al., 2010; Fernandes & Botelho, 2003; Finney, 2001; McCaw, 2013). Such constraints make fuel management a problem amenable to optimisation methods (Finney, 2007) and accordingly a number of models for spatial allocation of treatment effort have been proposed. Hof, Omi, Bevers, and Laven (2000) formulated a linear programming model to delay a defined target fire’s spread to nominated “protection areas”. Finney (2007) developed an iterative procedure incorporating the minimum travel time algorithm for locating fuel treatments in major fire flow paths using. Palma, Cui, Martell, Robak, and Weintraub (2007) proposed a heuristic approach using shortest path methods to select individual harvest blocks to disrupt critical paths between potential ignition points and values at risk. Wei, Rideout, and Kirsch (2008) formulated a mixed integer programming model for locating fuel treatments that reduce fire intensity so as to minimize the expected loss incurred on a flammable landscape. Rytwinski and Crowe (2010) used an iterative procedure that paired a fire spread simulator with a metaheuristic scatter-search algorithm to select fuel break location. Wei (2012) developed a mixed integer programming model to locate fuel treatments to serve as potential control locations for future fires. Minas, Hearne, and Martell (in press) presented a mixed integer programming model for locating fuel treatments and suppression resources in an integrated manner to maximise initial attack coverage.

A limitation of the models described above is that they handle spatial allocation of fuel treatments as a single period problem. However, in practice treatment effects are transient because most vegetation eventually recovers and begins to re-grow after it has been treated. This means that the generation and maintenance of desirable landscape-level fuel configurations requires a multi-period schedule that takes longevity of individual treatments into account (Finney, 2001; Reinhardt et al., 2008). Spatially explicit multi-period fuel treatment scheduling is a complicated problem and most of the modelling efforts to date have either employed heuristic approaches or considered very small landscapes.


                     Gonzalez et al. (2005) used a heuristic procedure to schedule harvesting activities to optimise a number of landscape metrics and combinations thereof. Konoshima, Montgomery, Albers, and Arthur (2008) and Konoshima, Albers, Montgomery, and Arthur (2010) formulated a stochastic dynamic programming model to explore optimal fuel treatment and timber harvesting spatial patterns across a small hypothetical landscape. Kim, Bettinger, and Finney (2009) explored the use of a heuristic for multi-period scheduling of fuel management activities across a large landscape in north-eastern Oregon. Their model was used to generate both dispersed and clustered fuel treatment patterns in an attempt to mitigate the effects of wildfires whilst maintaining evenly distributed annual harvest volumes. A follow-up paper examined the effects of these spatial fuel treatment patterns on simulated, human-caused fires in the same study area in north-eastern Oregon (Kim & Bettinger 2008). Acuna, Palma, Cui, Martell, and Weintraub (2010) incorporated Palma et al.’s (2007) heuristic for identifying critical fire paths into a multi-period model that can used to determine what forest stands to harvest to both provide industrial fibre and reduce the flammability of the residual landscape. González-Olabarria and Pukkala (2011) developed an iterative procedure that used a simulated annealing algorithm and a fire spread simulator to generate fuel treatment schedules with a view to stabilising fire risk over time. Longer term fuel management planning often involves the consideration of a number of ecological considerations (Ager et al., 2010). These can include burn frequency constraints based on vital attributes of ecosystems and species and requirements to maintain post-fire seral stage heterogeneity to support biodiversity (Burrows, 2008). Calkin, Hummel, and Agee (2005) used a simulated annealing algorithm to solve a goal programming model for reducing wildfire threat while maintaining late seral forest for faunal habitat. Lehmkuhl et al. (2007) used fire spread models and an evolutionary algorithm to simultaneously minimize potential fire behaviour and loss of faunal habitat.

In this paper we present a spatially explicit mixed integer programming model for fuel treatment scheduling. The model accounts for the transient nature of fuel by keeping track of the age of both treated and untreated patches of fuel or vegetation. It is, we believe, the first multi-period landscape-level fuel treatment model to be formulated and solved using exact optimisation methods. The model provides a flexible framework that allows for incorporation of landscape heterogeneity, as well as a range of ecological and operational constraints. The remainder of the paper is structured as follows. The mathematical formulation of the model is presented and explained. The model’s functionality is then demonstrated on a series of hypothetical test landscapes. This is followed by some computational testing and discussion of implementation issues.

@&#METHOD@&#

Our formulation of a mixed integer programming model for multi-year landscape level fuel treatment planning appears below. We consider a landscape divided into a number of cells representing candidate locations for fuel treatment. In Section 3 the model is implemented on a series of landscapes composed of regular grid cells. However, cells need not be uniform in shape or size and in practice this partitioning would be done based on what constitutes suitable management units for the specific landscape in question. In practical implementations these cells are likely to be irregular polygons of various sizes. This is illustrated below in Fig. 1
                        , where we see a landscape from south-western Victoria, Australia that has been divided into numbered management units for fuel treatment purposes.

The key decision to be made is – which cells should be treated during each time period (i.e., each year). In order to account for the transience of fuel treatment effect, fuel age (years) or time since treatment is tracked. Each cell’s fuel age is a discrete-time step function, where at annual intervals a cell’s fuel age increases by one year if untreated and resets to zero if treated. It is assumed that fuel treatment has an inhibitory effect that lasts for a defined period of time. A cell is classified as an ‘old fuel cell’ if its fuel age exceeds this inhibition period (Boer et al., 2009). Since it is difficult to predict where fires might ignite and how they might spread we have not tried to explicitly capture fire dynamics within our model. We have instead, chosen to focus our efforts on generating desirable spatial fuel patterns (Hof & Omi, 2003). Our model therefore schedules fuel treatments so as to reduce the connectivity of ‘old fuel cells’ in the belief that fragmentation of the landscape fuel complex will inhibit fire spread. The model is formulated with the following notation:

Sets:
                           
                              
                                 
                                 
                                 
                                    
                                       
                                          I
                                       
                                       is the set of all cells on the landscape;
                                    
                                    
                                       
                                          Ψ
                                          ⊂
                                          I
                                       
                                       is the set of cells where fuel treatment is not permitted;
                                    
                                    
                                       
                                          Λ
                                          ⊂
                                          I
                                       
                                       is the set of cells where fuel treatment is permitted (where Λ
                                          =
                                          I
                                          −
                                          Ψ);
                                    
                                    
                                       
                                          Φi
                                          
                                          ⊂
                                          I
                                       
                                       is the set of cells connected to cell i;
                                    
                                    
                                       
                                          T
                                       
                                       is the number of time periods in the planning horizon;
                                    
                                 
                              
                           
                        Parameters:


                        
                           
                              
                                 
                                 
                                 
                                    
                                       
                                          ai
                                          
                                       
                                       initial fuel age of cell i;
                                    
                                    
                                       
                                          bt
                                          
                                       
                                       fuel treatment budget for time period t;
                                    
                                    
                                       
                                          cti
                                          
                                       
                                       cost of treating cell i in time period t;
                                    
                                    
                                       
                                          uti
                                          
                                       
                                       fuel age upper bound of cell i at time period t (where uti
                                          
                                          =
                                          ai
                                          
                                          +
                                          t);
                                    
                                    
                                       
                                          oi
                                          
                                       
                                       fuel age threshold for ‘old fuel cell’ classification of cell i;
                                    
                                 
                              
                           
                        Variables:


                        
                           
                              
                                 
                                 
                                 
                                    
                                       
                                          Xti
                                          
                                       
                                       1 if cell i is treated in time period t, 0 otherwise;
                                    
                                    
                                       
                                          Ati
                                          
                                       
                                       fuel age of cell i in time period t;
                                    
                                    
                                       
                                          Oti
                                          
                                       
                                       1 if cell i is classified as an ‘old fuel cell’ in time period t, 0 otherwise;
                                    
                                    
                                       
                                          Qtij
                                          
                                       
                                       1 if cell i and connected cell j are both classified as ‘old fuel cells’ in time period t, 0 otherwise;
                                    
                                 
                              
                           
                        
                        
                           
                              (1)
                              
                                 Minimize
                                 
                                 
                                    
                                       z
                                    
                                    
                                       ∗
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          t
                                          =
                                          1
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          
                                             
                                                Φ
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       Q
                                    
                                    
                                       tij
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 Subject to
                                 :
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          Λ
                                       
                                    
                                 
                                 
                                    
                                       c
                                    
                                    
                                       ti
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       ti
                                    
                                 
                                 ⩽
                                 
                                    
                                       b
                                    
                                    
                                       t
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 =
                                 
                                    
                                       a
                                    
                                    
                                       i
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 0
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 =
                                 
                                    
                                       A
                                    
                                    
                                       (
                                       t
                                       -
                                       1
                                       )
                                       i
                                    
                                 
                                 +
                                 1
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 Ψ
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 >
                                 =
                                 
                                    
                                       A
                                    
                                    
                                       (
                                       t
                                       -
                                       1
                                       )
                                       i
                                    
                                 
                                 +
                                 1
                                 -
                                 
                                    
                                       u
                                    
                                    
                                       ti
                                    
                                 
                                 ∗
                                 
                                    
                                       X
                                    
                                    
                                       ti
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 Λ
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 -
                                 
                                    
                                       u
                                    
                                    
                                       ti
                                    
                                 
                                 ∗
                                 
                                    
                                       O
                                    
                                    
                                       ti
                                    
                                 
                                 ⩽
                                 
                                    
                                       o
                                    
                                    
                                       i
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       O
                                    
                                    
                                       ti
                                    
                                 
                                 +
                                 
                                    
                                       O
                                    
                                    
                                       tj
                                    
                                 
                                 -
                                 
                                    
                                       Q
                                    
                                    
                                       tij
                                    
                                 
                                 ⩽
                                 1
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                                 
                                 ∀
                                 j
                                 ∈
                                 
                                    
                                       Φ
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       X
                                    
                                    
                                       ti
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       O
                                    
                                    
                                       ti
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       Q
                                    
                                    
                                       tij
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                                 
                                 ∀
                                 j
                                 ∈
                                 
                                    
                                       Φ
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 ⩾
                                 0
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        The objective function (1) minimises the number of connected pairs of ‘old fuel cells’ across all time periods. A set of connected cells is defined for each cell in the landscape. In the simplest case each set would be composed of all immediately adjacent cells. An alternative case is where these sets are constructed to take into account heterogeneous landscape features such as the prevailing wind direction associated with severe burning conditions. Examples of these two cases are illustrated in Fig. 2
                         below.

In addition to prevailing wind direction, other considerations in defining connectivity sets in practical implementations may include topographic features and anticipation of spotting behaviour. If a cell contains a fuel type conducive to spotting, it may be considered functionally connected to other cells with which it does not share a common boundary. At any rate, the specification of connectivity sets on a cell-by-cell basis provides a flexible means for these various locality specific connectivity requirements to be included in the model as required.

Constraint (2) imposes a fuel treatment budget for each time period. The model allows fuel treatment costs to vary on a cell-by-cell basis. In practice this cost variability could be due to a range of factors such as site accessibility, fuel type and proximity to the wildland urban interface.

Constraints (3)–(5) track the fuel age of each cell. Constraint (3) initialises each cell’s fuel age. Constraint (4) applies to the set of cells where fuel treatment is not permitted and ensures that the fuel age of these cells increments by one each year. This treatment restriction could apply for a range of reasons for example: the land may be privately owned by individuals that do not wish their land to be treated or proximity to an airport or busy highway may preclude prescribed burning due to smoke hazard. It should be noted that these cells can still be classified as ‘old fuel cells’ and as such can contribute to the connectivity of the fuel complex. Constraint (5) applies to the set of cells where fuel treatment is permitted. Here the choice between treating and not treating a cell in a given time period and the resultant fuel age is modelled as a disjunctive constraint (Hooker, 2009). In the absence of fuel treatment this constraint ensures that a cell’s fuel age increments by one. The fuel age upper bound (uti
                        ) acts as a Big-M and has a sufficiently large value so that when a cell is treated the disjunct is not constraining and consequently the cell’s fuel age resets to zero. A fuel age upper bound (uti
                        ), calculated for each cell i at each time periodt, is used rather than an arbitrarily large Big-M in the interests of formulation strength and pursuant solvability (Williams, 2013).

Constraint (6) uses a binary indicator variable (Oti
                        ) to classify a cell as an ‘old fuel cell’ if its fuel age exceeds a threshold value based on the fuel treatment inhibition period (Williams, 2013). The model allows this threshold to vary on a cell-by-cell basis to take into account, different fuel types. Fuel types with a shorter inhibition period will regain their fuel load more quickly.

When two connected cells i and j are both are classified as ‘old fuel cells’ we can express this as the product of two binary variables (i.e. Oti
                        
                        ∗
                        Otj
                        ). In constraint (7) we replace this product with a new binary variable (Qtij
                        ) that takes the value one when a connected pair of cells i and j are both classified as ‘old fuel cells’ in time period t (Williams, 2009). As mentioned earlier, the specification of a connectivity set on a cell-by-cell basis allows for directional connectivity to be included in the model as required.

Constraints (8)–(10) restrict ‘fuel treatment’, ‘old fuel cell’ and ‘connected old fuel cell’ variables to binary values. Constraint (11) restricts ‘fuel age’ to positive values.

In the preceding section the model was presented in its basic form but, this formulation can be extended to include a number of ecological considerations. One such consideration is treatment frequency or tolerable fire interval (TFI) (Burrows, 2008; Cheal, 2010). Minimum and maximum TFIs are assigned to treatment units according to ecological vegetation classes. The minimum TFI refers to the minimum time required between successive fire events at a site and is often based upon the juvenile period(s) of sensitive species in the vegetation class. The maximum TFI is the maximum time required between fire events and takes into account the requisite fire interval for rejuvenation of fire adapted species. Tolerable fire interval restrictions can be incorporated into the model with the following constraints.
                           
                              (12)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 ⩾
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                                 ∗
                                 
                                    
                                       X
                                    
                                    
                                       ti
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 ≤
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       u
                                    
                                    
                                       ti
                                    
                                 
                                 ∗
                                 
                                    
                                       X
                                    
                                    
                                       ti
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        Constraint (12) precludes a cell from being treated if its fuel age is less than the minimum TFI (ri
                        ). Constraint (13) ensures that all cells are treated before their fuel age exceeds the maximum TFI (si
                        ). Both minimum TFI and maximum TFI are specified on a cell specific basis, thus allowing the modelling of landscapes with multiple vegetation classes or even site specific TFI requirements.

Another ecological consideration is the desire to maintain the correct proportion of vegetation in different stages of maturity so as to support biodiversity (Burrows, 2008; Cheal, 2010). Distinct ‘habitat growth’ or ‘seral’ stages are identified for each ecological vegetation class based on fuel age. Cells can be classified into ecological vegetation classes in the following manner. A set (Π) of all ecological vegetation classes (k) is specified, with any cell i permitted to be a member of strictly one vegetation class (i.e. i
                        ∊
                        Πk
                         for some k). Constraints (14)–(21) classify individual cells into one of three seral stages based on fuel age using binary indicator variables and thresholds (Williams, 2013). In this case three indicator variables are required, one for each seral stage: ‘early’ (Eti
                        ), ‘mid’ (Fti
                        ) and ‘late’ (Gti
                        ). With seral stage classification based on two thresholds, one used to indicate the upper limit of the ‘early’ (ei
                        ) stage and one used to indicate the upper limit of the ‘mid’ (fi
                        ) stage.
                           
                              (14)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 +
                                 
                                    
                                       e
                                    
                                    
                                       k
                                    
                                 
                                 ∗
                                 
                                    
                                       E
                                    
                                    
                                       ti
                                    
                                 
                                 >
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       k
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 
                                    
                                       Π
                                    
                                    
                                       k
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 Π
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 -
                                 
                                    
                                       u
                                    
                                    
                                       ti
                                    
                                 
                                 ∗
                                 (
                                 
                                    
                                       F
                                    
                                    
                                       ti
                                    
                                 
                                 +
                                 
                                    
                                       G
                                    
                                    
                                       ti
                                    
                                 
                                 )
                                 ⩽
                                 
                                    
                                       e
                                    
                                    
                                       k
                                    
                                 
                                 +
                                 1
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 
                                    
                                       Π
                                    
                                    
                                       k
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 Π
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 +
                                 
                                    
                                       f
                                    
                                    
                                       k
                                    
                                 
                                 ∗
                                 (
                                 
                                    
                                       E
                                    
                                    
                                       ti
                                    
                                 
                                 +
                                 
                                    
                                       F
                                    
                                    
                                       ti
                                    
                                 
                                 )
                                 >
                                 =
                                 
                                    
                                       f
                                    
                                    
                                       k
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 
                                    
                                       Π
                                    
                                    
                                       k
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 Π
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 -
                                 
                                    
                                       u
                                    
                                    
                                       ti
                                    
                                 
                                 ∗
                                 (
                                 
                                    
                                       G
                                    
                                    
                                       ti
                                    
                                 
                                 )
                                 ⩽
                                 
                                    
                                       f
                                    
                                    
                                       k
                                    
                                 
                                 +
                                 1
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 ∀
                                 i
                                 ∈
                                 
                                    
                                       Π
                                    
                                    
                                       k
                                    
                                 
                                 
                                 ∀
                                 k
                                 ∈
                                 Π
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       E
                                    
                                    
                                       ti
                                    
                                 
                                 +
                                 
                                    
                                       F
                                    
                                    
                                       ti
                                    
                                 
                                 +
                                 
                                    
                                       G
                                    
                                    
                                       ti
                                    
                                 
                                 =
                                 1
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    
                                       E
                                    
                                    
                                       ti
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       F
                                    
                                    
                                       ti
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       G
                                    
                                    
                                       ti
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                              
                           
                        The following numerical example illustrates how these constraints function. Consider a set of cells belonging to an ecological vegetation class that has an ‘early’ seral stage threshold of five years and a ‘mid’ seral stage threshold of ten years. In this case, cells with a fuel age between zero and five years will be classified as ‘early’ seral stage, cells with a fuel age between six and ten years will be classified as ‘mid’ seral stage, and cells with a fuel age of eleven years or greater will be classified as ‘late’ seral stage. While three ‘seral stages’ have been defined here, the same approach can be used to formulate constraints to define any number of ‘seral stage’ categories.

With a mechanism for classifying individual cells into seral stages we can now formulate constraints to maintain a desired proportion of the landscape in any of the various seral stages.
                           
                              (22)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                Π
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       G
                                    
                                    
                                       ti
                                    
                                 
                                 *
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 ⩾
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                 
                                 *
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                Π
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 k
                                 ∈
                                 Π
                              
                           
                        Constraint (22) ensures that for a given ecological vegetation class (k) the summation of the area of each cell (zi
                        ) of ‘late seral stage’ classification (Gti
                        ) is greater than some target proportion (pk
                        ).

In some instances it may be preferable to formulate desired ‘seral stage’ proportions as goal constraints. If, for example initial landscape conditions are such that ‘late seral stage’ vegetation is well below the desired proportion. In this case, a hard ‘late seral stage’ constraint could not be satisfied and would result in infeasibility. A goal constraint, on the other hand, would guide subsequent treatment decisions and over time redress this shortage of ‘late seral stage’ vegetation.
                           
                              (23)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                Π
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       G
                                    
                                    
                                       ti
                                    
                                 
                                 *
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 
                                    
                                       D
                                    
                                    
                                       t
                                    
                                 
                                 ⩾
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                 
                                 *
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          
                                             
                                                Π
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 k
                                 ∈
                                 Π
                              
                           
                        In constraint (23) the ‘late seral stage’ proportion requirement has been reformulated as a goal constraint with the inclusion of a deficit variable (Dt
                        ). A penalty function composed of the weighted sum of this deficit variable over all time periods would then be added to the objective function (Tamiz, Jones, & Romero, 1998).

In addition to the ecological considerations discussed in the preceding section, there are a number of other straightforward extensions to the basic formulation that can augment the model’s flexibility and usefulness. One such extension relates to the concept of leverage, which is the idea that a single hectare of fuel treatment can protect additional hectares of land. In heterogeneous landscapes fire may spread farther than usual due to spotting in locations with topographic features such as ridge lines or canyons, or those with fuel types with loose, combustible bark. These locations can be described as high leverage points and there is likely to be a benefit in focusing fuel treatment here (Loehle, 2004). Leverage can be incorporated into the model formulation through the application of a weight (wi
                        ) to each cell based on relative leverage values.
                           
                              (24)
                              
                                 Minimize
                                 
                                 
                                    
                                       z
                                    
                                    
                                       ∗
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          t
                                          =
                                          1
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          
                                             
                                                Φ
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 *
                                 
                                    
                                       Q
                                    
                                    
                                       tij
                                    
                                 
                              
                           
                        The objective function (24) has been reformulated so that it now minimises the weighted number of ‘connected old fuel cells’ across all time periods. This will result in high leverage cells being prioritised for treatment.

It is possible to partition a landscape into a number of zones with differing treatment emphases. In wildland urban interface areas the priority may be reduction and fragmentation of the fuel complex for asset protection purposes and, as such, ecological constraints may be relaxed. In wilderness areas the primary concern may be satisfaction of ecological constraints and it may be appropriate for cells in those zones to be given a lower weighting or excluded from the objective function. This partitioning into zones is done by defining a number of disjoint sets such that each cell is an element of one such set.
                           
                              (25)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 ⩾
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       Θ
                                    
                                 
                                 *
                                 
                                    
                                       X
                                    
                                    
                                       ti
                                    
                                 
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 Θ
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                    
                                       A
                                    
                                    
                                       ti
                                    
                                 
                                 ⩾
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                    
                                       Ω
                                    
                                 
                                 *
                                 
                                    
                                       X
                                    
                                    
                                       ti
                                    
                                 
                                 
                                 
                                 
                                 
                                 t
                                 =
                                 1
                                 …
                                 T
                                 
                                 ∀
                                 i
                                 ∈
                                 Ω
                              
                           
                        In constraints (25) and (26) the minimum TFI constraint has been split so that there are different TFI requirements for the urban interface zone (Θ) and the wilderness zone (Ω).

There can be significant benefits in incorporating non-flammable features such as lakes into landscape-level patterns (Parisien et al., 2007). This can be done by considering these features as cells and ascribing to them an ‘old fuel cell’ threshold (oi
                        ) greater than the maximum possible fuel age upper bound.

@&#RESULTS AND DISCUSSION@&#

In order to demonstrate its functionality, we applied the model to a number of hypothetical landscapes with different attributes. We first consider a homogenous 100 cell landscape. The landscape is composed of a single fuel type with an ‘old fuel cell’ classification threshold of four years. The initial fuel age of all cells is greater than this threshold, meaning all 100 cells are classified as ‘old’. For every cell the ‘set of connected cells’ is defined as the neighbourhood of immediately adjacent cells. For simplicity the treatment cost is set at a constant value of one unit per cell across the entire landscape and the annual treatment budget is set at fifteen units. No treatment restrictions or ecological constraints are imposed. As can be seen in Fig. 3
                         below, after five years 75 cells have been treated and the landscape has been completely fragmented with all old fuel cells disconnected. In the sixth year, the cells treated in the first year have exceeded the treatment inhibition period and are reselected for treatment. Similarly the cells treated in the second year are retreated in the seventh year and so forth. Thus in this homogenous landscape with no ecological constraints or treatment restrictions the optimal solution amounts to the creation of an initial pattern and then the maintenance of this pattern through a recurring treatment cycle.

In practice most landscapes will have some degree of heterogeneity. To demonstrate how the model handles this, we introduce a second fuel type with an ‘old fuel cell’ classification threshold of five years. One of the two fuel types is randomly assigned to each cell in our next landscape. We also introduce a maximum tolerable fire interval (TFI) constraint, the maximum TFI for the first fuel type is seven years and for second fuel type is nine years. The initial fuel age of each cell is a randomly assigned value between two and six, meaning at time period zero not all cells are classified as ‘old’. The treatment costs, annual budget and ‘set of connected cells’ definition remain the same as in the previous example. With the homogenous landscape we were able to generate and then maintain a static landscape pattern by treating cells in a five year cycle. However, when we consider more complex heterogeneous landscapes instead of a static pattern we tend to see a dynamic mosaic, this is illustrated in Fig. 4
                         below. Indeed, it appears that as the landscapes under consideration become increasingly complicated, determining optimal treatment schedules becomes less intuitive and the potential benefits of using a model like ours start to become apparent.

In the next example we take the initial heterogeneous landscape from the previous example and partition it into two zones. The bottom half of the landscape is designated an urban interface zone and the maximum TFI constraint is specified such that it does not apply here. The top half of the landscape is designated a wilderness zone and the objective function is formulated to exclude cells from this zone. All other parameters remain the same as in the previous example. As can be seen in Fig. 5
                        , from the third year onward the lower half of the landscape is completely fragmented with all old fuel cells disconnected. While in the upper half of the landscape treatment is only undertaken when required to satisfy the maximum TFI constraint. This example provides an illustration of how the model might be used to manage a single budget to simultaneously achieve various management aims that vary spatially across a landscape.

Some computational testing was undertaken on a series of randomly generated test landscapes with a couple of aims in mind. The first of these aims being, to provide some indication of the size of problems that the model can solve. The second aim being, to gain some insight into the ease (or difficulty) of implementing the ecological and other model extensions detailed in Sections 2.2 and 2.3.

In our initial testing, the model was implemented in its ‘basic’ form including expressions (1)–(11) from Section 2. The model was run on a series of test landscapes of six sizes (25, 100, 225, 400, 900 and 1225 cells). In each landscape, cells were randomly assigned to one of three fuel types with differing ‘old fuel cell’ classification thresholds of four, eight and twelve years, with the initial fuel age of each cell an independent random integer value between one and twelve years. Connectivity was defined based on a north-westerly prevailing wind direction, with each cell connected to three neighbouring cells. The ‘set of cells where fuel treatment is not permitted’ was defined as the empty set, meaning no restrictions were placed on permissible fuel treatment locations. The budget was adjusted to allow for three different annual treatment levels (5%, 10% and 15%) across a ten year time horizon. The model was solved for ten instances for each of the six landscape sizes and three treatment levels, meaning there were 180 model runs in this phase of testing.

The model was implemented in the OPL modelling language and solved with CPLEX 12.5. All tests were performed on a Lenovo E530 notebook with a single quad-core Intel i7-3612QM processor at 2.10gigahertz and with 16gigabytes RAM memory. Computation results appear below in Table 1
                         these are reported as either solution time to optimality in wall-clock time (based on a relative MIP gap tolerance of 0.01%) or optimality gap at 1800seconds.

The results in Table 1 indicate that as landscape size increases and the percentage of landscape treated decreases the model becomes more difficult to solve. For all landscapes up to 400 cells in size, solutions within 2% of optimal were obtained within 1800seconds. For landscapes larger than 900 cells there were typically sizable optimality gaps at 1800seconds at the 5% treatment level. A small number of these larger landscape instances were allotted a longer run time of 6hours and in all cases solutions within 1% of optimal were obtained. In discussions held during model development, fire agency personnel indicated that landscapes divided into several hundred to a thousand management units were of practical interest. The indicative computational testing undertaken here suggests that with modest computing power it is possible to model landscapes in this size range.

In our next phase of testing, we wished to consider the ecological and other model extensions detailed in Sections 2.2 and 2.3 and their effect on model tractability and computation times. Pursuant to this aim, the model was implemented in three different configurations. In the first configuration, the ‘basic’ formulation was implemented including expressions (1)–(11) from Section 2. In the second ‘TFI’ configuration, minimum and maximum tolerable fire interval constraints were added using expressions (12) and (13). With minimum (3, 7 and 11 years) and maximum (18, 22 and 26 years) tolerable fire intervals defined according to fuel type. In the third ‘PFSS’ configuration, cells were classified into three post fire seral stages (early, mid and late) using expressions (14)–(21). With ‘early’ (4, 8 and 12 years) and ‘mid’ (9, 13 and 17 years) seral stage thresholds defined according to fuel type. Expressions (23), (25), and (26) were then used to partition the landscape into two zones with differing objectives. In the upper half of each landscape the objective was to maintain target ‘mid’ (20%) and ‘late’ (20%) seral stage proportions. While in the lower half of each landscape the objective was to minimise the number of ‘connected old fuel’ with no heed paid to ecological considerations.

The three model configurations were implemented for 5% annual treatment levels on the 900 and 1225 cell test landscapes used in the first phase of testing. Computation results appear above in Table 2
                        , with either solution time to optimality or optimality gap at 1800seconds reported. The results in Table 2 suggest that the additional expressions that appear in the ‘TFI’ and ‘PFSS’ configurations have served to strengthen the model and accordingly have led to reduced solution times when compared to the ‘basic’ formulation.

@&#CONCLUSIONS@&#

Scheduling fuel treatment activities to maintain the landscape in a fire resistant state is a difficult problem with important societal implications. In this paper, we have presented a spatially explicit optimisation model for multi-period scheduling of fuel treatments. The model tracks treatment decisions and fuel age over time and thus is able to capture the transience of treatment effect due to vegetation regrowth. The mixed integer programming formulation allows for heterogeneity of landscape features such as: fuel type, topography and prevalent wind direction. The model also allows for the incorporation of ecological considerations such as: tolerable fire intervals and seral stage landscape composition required to support biodiversity. A number of mechanisms for adapting the model to specific features of a given implementation environment have been presented. These include the use of zones to accommodate spatially variable land uses and management aims, as well as the use of weights to prioritise treatment of high leverage locations. Some of these model’s features were demonstrated in the previous section and computational testing suggests that the model is able to handle problem sizes of practical interest.

It is important to note that though we have formulated this problem deterministically there are in fact a number of stochastic elements, the most important of these being area burned due to wildfire. While wildfires can have undesirable destructive effects in the immediate term, they also result in additional ‘unscheduled’ fuel reduction that can be beneficial in future periods. So in the advent of a significant wildfire it would be necessary to re-run the model to take the resultant fuel reduction effect into account when scheduling treatments for subsequent years. Indeed even scheduled fuel treatment is stochastic since more or less than the planned amount may be achieved in a given year due to weather and various operational issues. Thus in a practical setting, fuel treatment scheduling would be treated as a rolling horizon problem with the model re-run annually with updated information on the current state of the landscape. More problematic is the effect that ‘unplanned’ wildfire can have on the proportion of late seral stage vegetation in the landscape. A straightforward way to deal with this is to strengthen the late seral stage constraint by adjusting the right hand side based on predicted or historic burn fractions (Savage, Martell, & Wotton, 2011).

It has been noted that scientists and managers often overlook the need to translate complex science into practical fire management prescriptions and that this can result in a gap between the state of knowledge and current management practices (Burrows, 2008). In this research we have applied integer programming methods to the combinatorially complex problem of fuel treatment scheduling. Our hope is that the modelling approach developed here can assist in closing this knowledge-practice gap.

@&#ACKNOWLEDGEMENTS@&#

This work was supported by funding from the Bushfire Cooperative Research Centre in the form of scholarship funding to James Minas. We would like to thank Liam Fogarty, Andy Ackland and Al Beaver from the Department of Sustainability and Environment, Victoria for providing valuable insight into operational fuel treatment planning considerations. This paper has benefitted greatly from the comments and suggestions of anonymous reviewers on an earlier version of the paper.

@&#REFERENCES@&#

