@&#MAIN-TITLE@&#Finite element based tracking of deforming surfaces

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present a method to robustly track the geometry of an object that deforms over time.


                        
                        
                           
                           We fit a FEM-based model to the data leading to physically plausible results.


                        
                        
                           
                           We evaluate the performance of our method using synthetic and scanned data.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Geometry processing

Surface tracking

Template deformation

Linear finite element deformation

@&#ABSTRACT@&#


               
               
                  We present an approach to robustly track the geometry of an object that deforms over time from a set of input point clouds captured from a single viewpoint. The deformations we consider are caused by applying forces to known locations on the object’s surface. Our method combines the use of prior information on the geometry of the object modeled by a smooth template and the use of a linear finite element method to predict the deformation. This allows the accurate reconstruction of both the observed and the unobserved sides of the object. We present tracking results for noisy low-quality point clouds acquired by either a stereo camera or a depth camera, and simulations with point clouds corrupted by different error terms. We show that our method is also applicable to large non-linear deformations.
               
            

@&#INTRODUCTION@&#

The accurate acquisition of physical objects has numerous applications, especially in the entertainment industry. While there exist commercial systems for digitizing rigid objects, the acquisition of deforming objects remains a challenge due to the complex changes in geometry over time. A rigid object can be scanned sequentially from multiple viewpoints to accurately capture the complete surface, whereas scanning the entire surface of a deforming object would require a complex and expensive physical setup involving multiple synchronized sensors, which may still be subject to occlusions.

Recently, several techniques were proposed that solve this problem by using a template shape as a geometric and topological prior for the reconstruction and by deforming the template to fit to the observed data [10,38,21,7]. In some of these methods, the observed data comes from a set of single-view scans. The single viewpoint assumption greatly simplifies the acquisition process. Template-based tracking approaches are shown to lead to visually pleasing results for numerous examples. However, the deformation of the unobserved side of the object is generally only guided by a smoothness function.

We combine a tracking-based approach with fitting a volumetric elastic model to improve the estimation of the unobserved side of the object. We employ a linear finite element method (FEM) to solve for physical deformations when a given force is applied. Our method proceeds in two steps: First, we use a tracking approach to deform the template model. Second, we use the displacements of the observed vertices of the template mesh found using the tracking step in a FEM to predict the displacements of the unobserved vertices. Hence, rather than smoothly deforming the unobserved side of the model, we deform the unobserved side through the volumetric mesh of the FEM model. We repeatedly linearize the deformation in the FEM at its current deformation state. Note that our method allows for tracking data acquired using single, multiple, or moving viewpoints.

While deformable models have been introduced to computer vision and computer graphics 30years ago [34], here we combine modern non-rigid template-based tracking with a volumetric elastic model for completion of the deformation at the unobserved side only. Our major contributions are therefore:
                        
                           •
                           The combination of a non-rigid template-based tracking approach with a linear finite element model to robustly track the complete geometry of an object whose deformation is captured from a single viewpoint only.

The use of a FEM-based model to deform the unseen side leading to more physically plausible results than by using a smoothness cost in the template-based tracking.

Tracking linear and non-linear deformations by repeatedly linearizing the FEM model at its current deformation state.

This paper presents the following three major improvements over the preliminary version of this work [40]. First, we present a computationally more efficient energy formulation to track the deformable object using a non-rigid iterative closest point framework. Second, we propose an iterative method for the FEM estimation that considers forces at supporting surfaces of the model. Our method does not require the measurement of forces but estimates the forces up to a scale factor from the FEM model and the deformation. Third, we evaluate the performance of our method extensively using numerous synthetic and scanned data sequences and compare our results to our preliminary findings. Special attention is paid to the influence of both synthetic and real scanner noise, as well as to the influence of the FEM step on the result.

@&#RELATED WORK@&#

This section reviews work related to tracking surfaces and predicting shape deformations using finite element models.

Computing the correspondence between deformed shapes has received considerable attention in recent years and the surveys of van Kaick et al. [37] and Tam et al. [33] give a comprehensive overview of existing methods. The review in this paper focuses on techniques that do not employ a priori skeletal models or manually placed marker positions, as we aim to minimize assumptions about the structure of the surface. None of the following approaches combine physics-based models with tracking approaches.

The following techniques solve the tracking problem using a template as shape prior. De Aguiar et al. [10] tracked multi-view stereo data of a human subject that is acquired using a set of cameras. The algorithm uses a template of the human subject that was acquired in a similar posture as the first frame. The approach used for tracking first uses Laplace deformations of a volumetric mesh to find the rough shape deformation and refines the shape using a surface deformation. The deformation makes use of automatically computed features that are found based on color information. Vlasic et al. [38] developed a similar system to track multi-view stereo data of human subjects. Tung and Marsuyama [36] extended de Aguiar et al.’s approach by using 3D shape rather than color information to find the features.

Li et al. [23,21] proposed a generic data-driven technique for mesh tracking. A template is used to model the rough geometry of the deformed object, and the algorithm deforms this template to each observed frame. A deformation graph is used to derive a coarse-to-fine strategy that decouples the complexity of the original mesh geometry from the representation of the deformation. Cagniart et al. [7] proposed an alternative where the template is decomposed into a set of patches to which vertices are attached. The template is then deformed to each observed frame using a data term that encourages inter-patch rigidity. Cagniart et al. [8] extended this technique to allow for outliers by using a probabilistic framework.

In this work, we combine a template fitting method with a finite element step.

The following techniques solve the tracking problem without using a shape prior. However, the methods assume prior information on the deformation of the object. Mitra et al. [26] modeled the surface tracking problem as a problem of finding a smooth space–time surface in four-dimensional space. To achieve this, they exploited the temporal coherence in the densely sampled data with respect to both time and space. Sharf et al. [31] used a similar concept to find a volumetric space–time solid. Their approach assumes that each cell of the discretized four-dimensional space contains the amount of material that flowed into it.

Wand et al. [39] used a probabilistic model based on Bayesian statistics to track a deformable model. The surface is modeled as a graph of oriented particles that move in time. The position and orientation of the particles are controlled by statistical potentials that trade off data fitting and surface smoothness. Tevs et al. [35] extended this approach by first tracking a few stable landmarks and by subsequently computing a dense matching.

Furukawa and Ponce [13] proposed a technique to track data from a multi-camera setup. Instead of using a template of the shape as prior information, their technique computes the polyhedral mesh that captures the first frame and deforms this mesh to the data in subsequent frames.

Liao et al. [24] took images acquired using a single depth camera from different viewpoints while the object deforms and assembled them into a complete deformable model over time. Popa et al. [28] used a similar approach that is tailored to allow for topological consistency across the motion.

Li et al. [22] avoid the use of a template model by initializing the tracking procedure with the visual hull of the object. Zheng et al. [41] track a deformable model using a skeleton-based approach, where the skeleton is computed using the data.

Several authors suggested learning the parameters of linear finite element models from a set of observations. We use such a method in combination with a tracking method to find an accurate tracking result of the observed and the unobserved side of the model. For a summary of linear finite element methods for elastic deformations, refer to Bro-Nielsen [6].

Lang and Pai [19] used a surface displacement and contact force at one point along with range-flow data to estimate elastic constants of homogeneous isotropic materials using numerical optimization. Becker and Teschner [3] presented an approach to estimate the elasticity parameters for isotropic materials using a linear finite element method. The approach takes as input a set of displacement and force measurements and uses them to compute the Young’s modulus and Poisson’s ratio (see Bro-Nielsen [6]) with the help of an efficient quadratic programming technique. Eskandari et al. [12] presented a similar approach to estimate both the elasticity and viscosity parameters for viscoelastic materials using a linear finite element method. This approach reduces the problem to solving a linear system of equations and has been shown to run in real-time.

Syllebranque and Boivin [32] estimated the parameters of a quasi-static finite element simulation of a deformable solid object from a video sequence. The problems of optimizing the Young’s modulus and the Poisson ratio were solved sequentially. Schnabel et al. [30] used finite element models to validate the non-rigid image registration of magnetic resonance images. Nguyen and Boyce [27] presented an approach to estimate the anisotropic material properties of the cornea.

Bickel et al. [5] proposed a physics-based approach to predict shape deformations. First, a set of deformations is measured by recording both the force applied to an object and the resulting shape of the object. This information is used to learn a relationship between the applied force and the shape deformation, which allows to predict the shape deformation for new force inputs. The technique assumes the object material to have linear elasticity properties. Bickel et al. [4] extended this approach to allow the modeling and fabrication of materials with a desired deformation behavior using stacked layers of homogeneous materials.

Recently, Choi and Szymczak [9] used FEM to predict a consistent set of deformations from a sequence of coarse watertight meshes but their method does not apply to single-view tracking, which is the focus of our method.

Finite element models are used in medical applications to estimate the material parameters of different tissues because the stiffness of a particular tissue can be used to detect anomalies [17,42,14]. For instance, elasticity information can help to segment medical data [17] or to detect cancerous tissues [42] or malignant lesions [14]. In this context, Lee et al. [20] proposed a method to estimate material parameters and forces of tissue deformations based on two given frames of observations. This method, which is similar in spirit to our approach, assumes that for both frames, the segmented boundaries of the organ (which are 3D surfaces) are given. The approach proceeds by repeatedly simulating a deformation from the start frame for a set of material parameters and input forces, and by measuring the distance of the simulated deformation to the given target surface. The distance to the target surface is then used to improve the estimated material parameters and input forces using a gradient descent technique. Unlike our method, this approach operates exclusively on a tetrahedral volumetric mesh and therefore has limited resolution. A more serious limitation of the approach is the need for good initial material parameters and force directions. While good initial estimates are known for many organic tissues, we do not have access to good initial estimates in our application. Hence, our approach takes a different strategy to optimize the material parameters that does not require initial estimates.

@&#OVERVIEW@&#

The input to our method consists of a closed template T, a set of contact points on T along with force directions that lead to the deformation of the model, and a set of observed 3D video frames (point clouds) 
                        
                           
                              
                                 F
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 F
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 F
                              
                              
                                 n
                              
                           
                        
                      capturing the deformation. We assume that the template has roughly the shape of the object before the deformation, and is approximately aligned to the first frame.

The main idea of our approach is to combine tracking the observed point cloud data using a template deformation approach and predicting the deformation on the unobserved side of the model using a linear FEM. To track the data, we use an energy optimization approach that aims to find deformation parameters that deform T to be close to the observed data and that maintain the geometric features of T. Let 
                        
                           
                              
                                 T
                              
                              
                                 
                                    
                                       F
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                      denote the template that was deformed to fit to 
                        
                           
                              
                                 F
                              
                              
                                 j
                              
                           
                        
                     . Afterwards, we displace the vertices of 
                        
                           
                              
                                 T
                              
                              
                                 
                                    
                                       F
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                      that are not observed in the data with a linear FEM using the given contact point and force direction. To compute the FEM deformation, we use a down sampled version of T that is tetrahedralized, which is denoted by 
                        
                           
                              
                                 T
                              
                              
                                 tet
                              
                           
                        
                      in the following. Let 
                        
                           
                              
                                 T
                              
                              
                                 
                                    
                                       F
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 tet
                              
                           
                        
                      denote the deformed tetrahedral mesh. Finally, we readjust the shape of the unobserved side of 
                        
                           
                              
                                 T
                              
                              
                                 
                                    
                                       F
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                      to take this displacement into account. When multiple frames are recorded, we start the tracking and FEM deformation for frame 
                        
                           
                              
                                 F
                              
                              
                                 j
                                 +
                                 1
                              
                           
                        
                      from 
                        
                           
                              
                                 T
                              
                              
                                 
                                    
                                       F
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                      and 
                        
                           
                              
                                 T
                              
                              
                                 
                                    
                                       F
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 tet
                              
                           
                        
                     , respectively. 
                     Fig. 2
                      gives a visual overview of the proposed method.

We use the following representation for the deformation of T. Let 
                        
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        
                      denote the vertices of 
                        
                           T
                           ,
                           
                              
                                 
                                    
                                       p
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 i
                              
                           
                        
                      denote their position vectors, and 
                        
                           
                              
                                 
                                    
                                       p
                                    
                                    
                                       ̃
                                    
                                 
                              
                              
                                 i
                              
                           
                        
                      denote their homogeneous coordinates. Furthermore, let 
                        
                           
                              
                                 
                                    
                                       n
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        
                      denote the unit outer normal at 
                        
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        
                     . We deform T by applying a 
                        
                           3
                           ×
                           4
                        
                      transformation matrix 
                        
                           
                              
                                 A
                              
                              
                                 i
                              
                           
                        
                      to each 
                        
                           
                              
                                 
                                    
                                       p
                                    
                                    
                                       ̃
                                    
                                 
                              
                              
                                 i
                              
                           
                        
                      of T. The transformation matrix 
                        
                           
                              
                                 A
                              
                              
                                 i
                              
                           
                        
                      depends on six parameters: three parameters 
                        
                           
                              
                                 
                                    
                                       t
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 i
                              
                           
                        
                      describing a translation, two parameters 
                        
                           
                              
                                 
                                    
                                       r
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 i
                              
                           
                        
                      describing a unit rotation axis, and one parameter 
                        
                           
                              
                                 ϕ
                              
                              
                                 i
                              
                           
                        
                      describing a rotation angle. That is, 
                        
                           
                              
                                 A
                              
                              
                                 i
                              
                           
                        
                      describes a rigid transformation as
                        
                           (1)
                           
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    A
                                 
                                 
                                    trans
                                 
                              
                              (
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              )
                              
                                 
                                    A
                                 
                                 
                                    rot
                                 
                              
                              (
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    ϕ
                                 
                                 
                                    i
                                 
                              
                              )
                              
                                 
                                    A
                                 
                                 
                                    trans
                                 
                              
                              (
                              
                                 
                                    
                                       
                                          t
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              )
                              
                                 
                                    A
                                 
                                 
                                    trans
                                 
                              
                              (
                              -
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              )
                              ,
                           
                        
                     where 
                        
                           
                              
                                 A
                              
                              
                                 trans
                              
                           
                           (
                           -
                           
                              
                                 
                                    
                                       p
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 i
                              
                           
                           )
                        
                      is a coordinate transformation that expresses a point in a coordinate frame centered at 
                        
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        
                      and 
                        
                           
                              
                                 A
                              
                              
                                 rot
                              
                           
                           (
                           
                              
                                 
                                    
                                       r
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 i
                              
                           
                           ,
                           -
                           
                              
                                 ϕ
                              
                              
                                 i
                              
                           
                           )
                        
                      is a coordinate transformation that expresses a point in a coordinate frame rotated by angle 
                        
                           
                              
                                 ϕ
                              
                              
                                 i
                              
                           
                        
                      around axis 
                        
                           
                              
                                 
                                    
                                       r
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 i
                              
                           
                        
                     . Expressing the transformation in a coordinate system centered at 
                        
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        
                      has the advantage that differences between the transformations of neighboring vertices can be measured directly.

This section presents our energy optimization approach to find the transformation parameters 
                        
                           
                              
                                 
                                    
                                       t
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 
                                    
                                       r
                                    
                                    
                                       →
                                    
                                 
                              
                              
                                 i
                              
                           
                        
                     , and 
                        
                           
                              
                                 ϕ
                              
                              
                                 i
                              
                           
                        
                      that lead to a mesh that is close to the point cloud data.

We aim to deform the template T to the observed data. When fitting T to the first frame, we start by deforming T using a global rigid transformation A to fit the observed data as much as possible. We consider all vertices 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         of T and compute the nearest neighbor 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         of the deformed point 
                           
                              A
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         in the point cloud data. Let 
                           
                              
                                 
                                    
                                       
                                          n
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    N
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                              
                           
                         denote the unit outer normal at 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         in the point cloud.

To rigidly align T to F, we find A by minimizing
                           
                              (2)
                              
                                 
                                    
                                       E
                                    
                                    
                                       initial
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    
                                       ω
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       
                                          
                                             A
                                             
                                                
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         ̃
                                                      
                                                   
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             N
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                             ,
                                             
                                                
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         →
                                                      
                                                   
                                                
                                                
                                                   N
                                                   (
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        with respect to seven degrees of freedom (one for scaling, three for rotation, three for translation), where 
                           
                              
                                 
                                    ω
                                 
                                 
                                    i
                                 
                              
                           
                         is a weight term and 
                           
                              
                                 
                                    
                                       ·
                                       ,
                                       ·
                                    
                                 
                              
                           
                         denotes the scalar product. Note that the term 
                           
                              
                                 
                                    
                                       A
                                       
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   ̃
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       N
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                       
                                       )
                                       ,
                                       
                                          
                                             
                                                
                                                   n
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             N
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   i
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                         measures the distance of the transformed point 
                           
                              A
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         to the supporting plane of its nearest data point 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        , which leads to a faster convergence rate of the algorithm than using the distance from 
                           
                              A
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         to 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         
                        [29]. Note that we fix the associated point 
                           
                              N
                              
                                 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                           
                         of 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         for this step to obtain a differentiable energy function. The scaling term accommodates slight errors in the calibration of the 3D scanner used to acquire the template shape and/or the calibration of the camera system used to acquire the frames.

The weight 
                           
                              
                                 
                                    ω
                                 
                                 
                                    i
                                 
                              
                           
                         is used to distinguish valid data observations from invalid ones, and should be one for vertices that have a valid data observation and zero for all other vertices. To exclude data points that are inconsistent with 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    ω
                                 
                                 
                                    i
                                 
                              
                           
                         is set to zero if the distance between 
                           
                              A
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is above dr or if the angle between 
                           
                              
                                 
                                    
                                       
                                          n
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          n
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    N
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                              
                           
                         is above α, where r is the average edge length of the undeformed template T and d and α are parameters. Setting all of the remaining 
                           
                              
                                 
                                    ω
                                 
                                 
                                    i
                                 
                              
                           
                         to one has the problem that many vertices of T that are close to the acquisition boundary of F may pick the same nearest neighbor, which leads to poor assignments. To remedy this problem, we wish to set 
                           
                              
                                 
                                    ω
                                 
                                 
                                    i
                                 
                              
                           
                         to zero if 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is located on the acquisition boundary of F. It is not straight forward to define a “boundary” on a noisy point cloud. We use a heuristic that considers points 
                           
                              
                                 
                                    q
                                 
                                 
                                    j
                                 
                              
                           
                         of F to be part of the boundary if many vertices of T choose 
                           
                              
                                 
                                    q
                                 
                                 
                                    j
                                 
                              
                           
                         as nearest neighbor. To find the boundary points in a way that is independent to global resolution changes of both T and F, we count for each point of F the number of vertices of T that chose it as nearest neighbor and average this count over all points of F that were chosen by at least one point of T. A point of F is then considered a boundary point if its count exceeds twice the average count. In all remaining cases, 
                           
                              
                                 
                                    ω
                                 
                                 
                                    i
                                 
                              
                           
                         is set to one.

To fit T to any frame, we deform T in a non-rigid fashion by changing 
                           
                              
                                 
                                    
                                       
                                          t
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    ϕ
                                 
                                 
                                    i
                                 
                              
                           
                         to minimize the energy
                           
                              (3)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   E
                                                
                                                
                                                   track
                                                
                                             
                                             =
                                             
                                                
                                                   w
                                                
                                                
                                                   data
                                                
                                             
                                             
                                                
                                                   E
                                                
                                                
                                                   data
                                                
                                             
                                             +
                                             
                                                
                                                   w
                                                
                                                
                                                   sm
                                                
                                             
                                             
                                                
                                                   E
                                                
                                                
                                                   sm
                                                
                                             
                                             
                                             with
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   E
                                                
                                                
                                                   data
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                             
                                                
                                                   ω
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               A
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     p
                                                                  
                                                                  
                                                                     ̃
                                                                  
                                                               
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         -
                                                         N
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        p
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               
                                                                  
                                                                     n
                                                                  
                                                                  
                                                                     →
                                                                  
                                                               
                                                            
                                                            
                                                               N
                                                               (
                                                               
                                                                  
                                                                     p
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   E
                                                
                                                
                                                   sm
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                             
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  R
                                                               
                                                               
                                                                  sm
                                                               
                                                            
                                                            (
                                                            
                                                               
                                                                  p
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      ∈
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            sm
                                                         
                                                      
                                                      (
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              t
                                                                           
                                                                           
                                                                              →
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        i
                                                                     
                                                                  
                                                                  -
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              t
                                                                           
                                                                           
                                                                              →
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        j
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             +
                                             
                                                min
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     (
                                                                     
                                                                        
                                                                           ϕ
                                                                        
                                                                        
                                                                           i
                                                                        
                                                                     
                                                                     -
                                                                     
                                                                        
                                                                           ϕ
                                                                        
                                                                        
                                                                           j
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     2
                                                                  
                                                               
                                                               ,
                                                               
                                                                  
                                                                     (
                                                                     2
                                                                     π
                                                                     -
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    ϕ
                                                                                 
                                                                                 
                                                                                    i
                                                                                 
                                                                              
                                                                              -
                                                                              
                                                                                 
                                                                                    ϕ
                                                                                 
                                                                                 
                                                                                    j
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                     )
                                                                  
                                                                  
                                                                     2
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    w
                                 
                                 
                                    data
                                 
                              
                           
                         and 
                           
                              
                                 
                                    w
                                 
                                 
                                    sm
                                 
                              
                           
                         are weights for the individual energy terms, 
                           
                              
                                 
                                    R
                                 
                                 
                                    sm
                                 
                              
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is the set of indices corresponding to points 
                           
                              
                                 
                                    A
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    j
                                 
                              
                           
                         that have geodesic distance at most 
                           
                              
                                 
                                    s
                                 
                                 
                                    sm
                                 
                              
                              r
                           
                         of 
                           
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                        , and 
                           
                              |
                              ·
                              |
                           
                         denotes the cardinality of a set. As before, r is the average edge length of T and 
                           
                              
                                 
                                    s
                                 
                                 
                                    sm
                                 
                              
                           
                         is a parameter. As above, 
                           
                              
                                 
                                    ω
                                 
                                 
                                    i
                                 
                              
                           
                         is set to zero if the angle between 
                           
                              
                                 
                                    
                                       
                                          n
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          n
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    N
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                              
                           
                         is above α, if the distance between 
                           
                              A
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is above dr, or if 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is a boundary point, and to one otherwise. The transformation matrices 
                           
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                           
                         are computed according to Eq. (1).

The data term 
                           
                              
                                 
                                    E
                                 
                                 
                                    data
                                 
                              
                           
                         drives the template mesh to the observed data. However, using only this term results in an ill-posed problem. We therefore add the smoothness term 
                           
                              
                                 
                                    E
                                 
                                 
                                    sm
                                 
                              
                           
                         to act as a regularization term that encourages smooth transformations. Unlike previously used regularization terms [2,21] that measure the difference between the transformations 
                           
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    E
                                 
                                 
                                    sm
                                 
                              
                           
                         measures the differences in translations and rotation angles in a local coordinate system centered at 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                        . To obtain results that are invariant under rigid transformations, it is important to initialize the transformation parameters in a way that is invariant to rigid transformations of the scene. Initializing 
                           
                              
                                 
                                    
                                       
                                          t
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    ϕ
                                 
                                 
                                    i
                                 
                              
                           
                         to zero yields the initial identity transformation 
                           
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                           
                         regardless of how 
                           
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         is initialized. A natural rotation-invariant choice to initialize 
                           
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         is 
                           
                              
                                 
                                    
                                       
                                          n
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                        . If 
                           
                              
                                 
                                    E
                                 
                                 
                                    sm
                                 
                              
                           
                         were to depend on the difference in rotation axes with this initialization, 
                           
                              
                                 
                                    E
                                 
                                 
                                    sm
                                 
                              
                           
                         would not be zero in the rest state. Hence, the difference in 
                           
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         does not increase 
                           
                              
                                 
                                    E
                                 
                                 
                                    sm
                                 
                              
                           
                        . We found that in practice, 
                           
                              
                                 
                                    E
                                 
                                 
                                    sm
                                 
                              
                           
                         helps to avoid self-intersections during the deformation, which is important as self-intersections might cause problems in the FEM step.

To minimize 
                           
                              
                                 
                                    E
                                 
                                 
                                    track
                                 
                              
                           
                        , we start by encouraging smooth transformations by setting 
                           
                              
                                 
                                    w
                                 
                                 
                                    data
                                 
                              
                              =
                              1
                           
                         and 
                           
                              
                                 
                                    w
                                 
                                 
                                    sm
                                 
                              
                              =
                              100
                           
                        . Similar to Li et al. [21], whenever the energy does not change by much, we relax the smoothness weight as 
                           
                              
                                 
                                    w
                                 
                                 
                                    sm
                                 
                              
                              =
                              
                                 
                                    w
                                 
                                 
                                    sm
                                 
                              
                              /
                              2
                           
                         to give more weight to the data term. We stop when the relative change in energy.


                        
                           
                              
                                 
                                    
                                       
                                          
                                             E
                                          
                                          
                                             track
                                          
                                          
                                             (
                                             i
                                             -
                                             1
                                             )
                                          
                                       
                                       -
                                       
                                          
                                             E
                                          
                                          
                                             track
                                          
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                 
                              
                              /
                              
                                 
                                    E
                                 
                                 
                                    track
                                 
                                 
                                    (
                                    i
                                    -
                                    1
                                    )
                                 
                              
                           
                        , where i is the iteration number, is less than 0.0001 or when 
                           
                              
                                 
                                    w
                                 
                                 
                                    sm
                                 
                              
                           
                         is smaller than 20. To obtain a differentiable energy function, we do not update the associated point 
                           
                              N
                              
                                 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                           
                         of 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         for a fixed set of weights. That is, 
                           
                              N
                              
                                 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              
                           
                         is updated every time the weight 
                           
                              
                                 
                                    w
                                 
                                 
                                    sm
                                 
                              
                           
                         is changed.

Recall that the distance to the nearest neighbor used in 
                           
                              
                                 
                                    E
                                 
                                 
                                    data
                                 
                              
                           
                         is limited by the template resolution. To allow for larger deformations, we use a multi-resolution approach as follows. We compute a multi-resolution hierarchy of T by collapsing edges of the mesh according to Garland and Heckbert’s geometry criterion [15]. We do not collapse edges if this would lead to a self-intersecting mesh. We perform the test whether an edge collapse leads to self-intersections greedily by performing the collapse and testing if self-intersections occur. In each resolution step, we halve the number of vertices. We stop the collapse when the base mesh contains about 1000 vertices or when no more valid edges can be found for the edge collapse operation.

Once 
                           
                              
                                 
                                    E
                                 
                                 
                                    track
                                 
                              
                           
                         is minimized for resolution level l, we consider the mesh of the next higher resolution level 
                           
                              l
                              +
                              1
                           
                        . For the vertices of level 
                           
                              l
                              +
                              1
                           
                         that are present in level l, we initialize the transformation parameters to the result of the previous resolution. For the remaining vertices, 
                           
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         is initialized to 
                           
                              
                                 
                                    
                                       
                                          n
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    
                                       
                                          t
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    ϕ
                                 
                                 
                                    i
                                 
                              
                           
                         are found by minimizing 
                           
                              
                                 
                                    E
                                 
                                 
                                    sm
                                 
                              
                           
                         with respect to the indices i that are not present in resolution level l.

This multi-resolution framework works well when the geometric complexity is approximately linked to the amount of deformation. However, in cases where most of the deformation occurs in feature-less regions of the surface, some deformation detail may be lost by this multi-resolution framework. A possible remedy is to use a deformation graph to compute a multi-resolution framework [21].

While the solution yields a globally smooth deformation field by design, it is not guaranteed to give a deformation field that is locally smooth at every vertex 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                        . Instead, it may happen that a single vertex is transformed by a significantly different deformation than its neighbors, thereby generating a new feature in the geometry.

If this happens, we can optionally post-process the result as follows. For every vertex 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         of T, we consider the minimum of 
                           
                              
                                 
                                    
                                       
                                          
                                             A
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       
                                          
                                             A
                                          
                                          
                                             j
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                              
                              /
                              
                                 
                                    
                                       
                                          
                                             p
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       
                                          
                                             p
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                              
                           
                         over all 
                           
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                           
                         in the one-ring neighborhood of 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                        . If this minimum is larger than two, which means that the distance of 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         to each of its neighbors has at least doubled during the deformation, we set the transformation parameters of 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         to the average of the transformation parameters of the one-ring neighbors of 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                        . The average rotation axis is computed using spherical linear interpolation.

In our experiments, we observed that the post-processing step was usually only required because of the FEM step in the previous frame. That is, the FEM step caused some vertices 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         to move relatively far from their neighbors when updating the unobserved side of the previous frame. This in turn led to a lack of smoothing as 
                           
                              
                                 
                                    R
                                 
                                 
                                    sm
                                 
                              
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         contained few points. A possible remedy to this problem is to use a more complex multi-resolution framework, as discussed above. We chose not to implement this solution, because in practice, we found that this post-processing was usually not crucial in most examples. In our experiments, less than 1% of the frames were influenced by this post-processing.

Our preliminary work used a data energy based on a point-to-point distance, a smoothness energy that varied depending on the differences in rotation axes, and an energy designed to discourage self-intersections by repelling close-by vertices that are not neighbors [40]. If we let M denote the complexity to find 
                           
                              N
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        , and assume 
                           
                              
                                 
                                    R
                                 
                                 
                                    sm
                                 
                              
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         to have constant complexity (which holds for regularly sampled templates), a single evaluation of the energy used by Wuhrer et al. has a complexity of 
                           
                              O
                              (
                              mM
                              +
                              
                                 
                                    m
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         for a template mesh with m vertices as their energy requires the computation of all distances between pairs of vertices on the mesh. In contrast, evaluating 
                           
                              
                                 
                                    E
                                 
                                 
                                    track
                                 
                              
                           
                         has a complexity of 
                           
                              O
                              (
                              mM
                              )
                           
                        . Furthermore, it is known that using a point-to-plane distance instead of a point-to-point distance leads to faster convergence rates [29]. Hence, we reduced the computational complexity of our method.

Furthermore, as will be shown in Section 7, using 
                           
                              
                                 
                                    E
                                 
                                 
                                    track
                                 
                              
                           
                         results in less self-intersections and higher data accuracy than using the energy by Wuhrer et al.

Consider the situation after T was deformed to frame 
                        
                           
                              
                                 F
                              
                              
                                 j
                              
                           
                        
                      using the approach outlined in the previous section, and denote the deformation of T by 
                        
                           
                              
                                 T
                              
                              
                                 
                                    
                                       F
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                     . We call the vertices 
                        
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        
                      in 
                        
                           
                              
                                 T
                              
                              
                                 
                                    
                                       F
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                      that were deformed using valid data observations observed vertices, and we call the remaining vertices unobserved vertices. Unobserved vertices were deformed using smoothness assumptions on the deformation field only. This section describes how to displace the unobserved vertices using a linear FEM.

We aim to reposition the unobserved vertices of 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         using a finite element model. We use 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                          -
                                          1
                                       
                                    
                                 
                              
                           
                         with 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              =
                              T
                           
                         as start position for the FEM step. A tetrahedral mesh is used to compute the FEM. The initial tetrahedral mesh of T is obtained by tetrahedralizing a simplified version of T. This simplification is necessary to make the algorithm more time and space efficient. The tetrahedral mesh contains vertices on the surface of the model (these vertices are a subset of the vertices of 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                          -
                                          1
                                       
                                    
                                 
                              
                           
                        ) and vertices that are internal to the model. In the following, let 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                          -
                                          1
                                       
                                    
                                 
                                 
                                    tet
                                 
                              
                           
                         denote this tetrahedral mesh.

The FEM linearly relates the displacements of the vertices and the forces applied to the tetrahedral mesh using a stiffness matrix 
                           
                              K
                              (
                              E
                              ,
                              ν
                              )
                           
                         that depends on the geometry of the tetrahedral mesh and on two elasticity parameters, the Young’s modulus E and the Poisson ratio ν. Let 
                           
                              
                                 
                                    f
                                 
                                 
                                    →
                                 
                              
                           
                         denote the vector of forces applied to the vertices of the tetrahedral mesh and let 
                           
                              
                                 
                                    u
                                 
                                 
                                    →
                                 
                              
                           
                         denote the vector of displacements of the vertices of the tetrahedral mesh. Both 
                           
                              
                                 
                                    f
                                 
                                 
                                    →
                                 
                              
                           
                         and 
                           
                              
                                 
                                    u
                                 
                                 
                                    →
                                 
                              
                           
                         have dimension 
                           
                              3
                              m
                           
                        , where m is the number of vertices of the tetrahedral mesh. Furthermore, let 
                           
                              
                                 
                                    
                                       
                                          f
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    
                                       
                                          u
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         denote the force and displacement vectors of vertex i. Then,
                           
                              (4)
                              
                                 K
                                 (
                                 E
                                 ,
                                 ν
                                 )
                                 
                                    
                                       u
                                    
                                    
                                       →
                                    
                                 
                                 =
                                 
                                    
                                       f
                                    
                                    
                                       →
                                    
                                 
                                 .
                              
                           
                        This equation can be used in three ways.
                           
                              (A1)
                              Given all displacements and forces, E and ν can be estimated by solving a linear system of equations, as shown by Becker and Teschner [3]. In principle, if the displacements and forces at all vertices of a single tetrahedron are known, the approach by Becker and Teschner can estimate E and ν. However, due to numerical instabilities when using a single tetrahedron, in practice, redundant observations are commonly used to estimate the material parameters.

Given 
                                    
                                       E
                                       ,
                                       ν
                                    
                                 , and 
                                    
                                       
                                          
                                             u
                                          
                                          
                                             →
                                          
                                       
                                    
                                 , we can compute 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             →
                                          
                                       
                                    
                                  by a matrix multiplication.

Given E and ν along with at least three fixed displacements, Eq. (4) can be modified such that 
                                    
                                       K
                                       (
                                       E
                                       ,
                                       ν
                                       )
                                    
                                  is invertible. If for each vertex with non-fixed displacement either the force or the displacement are provided, we can compute the missing displacements and force vectors by rearranging the linear system of equations [6].

We rely on forces in addition to displacements in the estimation of unobserved vertices because overspecified boundary conditions are required to estimate material parameters.

Note that this simple linear FEM is only suitable to model small deformations, as large rotations may cause artifacts. However, this problem does not occur in our case as we linearize the deformation locally at each frame by modeling deformations between consecutive frames, which ensures that only small deformations are considered. Because of using the deformed tetrahedral template from the previous tracking frame as the rest state, the material parameters estimated by our method are not expected to be physically meaningful.

It is easy to see that we do not have enough constraints to use Eq. (4) directly to solve for all missing information. From the tracking step, we computed displacements 
                           
                              
                                 
                                    
                                       
                                          u
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         for all surface vertices, but not for the internal vertices. These displacements are reliable for observed vertices only, and we aim to use the FEM model to find reliable displacements for the unobserved ones.

Furthermore, we are given the direction of the force at the contact point. Note that we can normalize the length of the force direction at the contact point, since changing the length of 
                           
                              
                                 
                                    f
                                 
                                 
                                    →
                                 
                              
                           
                         only scales E (see e.g. Becker and Teschner [3, Eq. (17)]). The forces 
                           
                              
                                 
                                    
                                       
                                          f
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         at internal vertices can be assumed to be zero as no external forces can act on the interior of the model. Note that other contact surfaces of the model, such as the table the model rests on, are not modeled explicitly in our framework. Instead, we rely on the observed surface points to model these additional constraints.

This leaves us with the following unknown or unreliable quantities: 
                           
                              E
                              ,
                              ν
                           
                        , the displacements at internal and unobserved vertices, and the forces at surface vertices that are not contact points.

Prior work assumed all forces to be zero, solved for E and ν by only considering the points with known displacements and forces, and used the estimated E and ν to solve for the displacements of unobserved vertices [40]. This approach does not model all physical constraints as forces from the contact with supporting surface are being set to zero. Hence we did not adopt this approach.

We propose an iterative method to find reliable displacements at unobserved vertices and demonstrate in Section 7 that this change leads to an improvement of the tracking results.

The method starts by using the displacements 
                           
                              
                                 
                                    
                                       
                                          u
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         at surface vertices computed using the tracking step as an initial estimate. That is, 
                           
                              
                                 
                                    
                                       
                                          u
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         is computed as the difference between the vertex coordinate of 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         on 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         and its corresponding point on 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                          -
                                          1
                                       
                                    
                                 
                                 
                                    tet
                                 
                              
                           
                        . This estimate is diffused to internal vertices using a thin-plate spline (TPS) deformation.

The following description of TPS closely follows the description by Dryden and Mardia [11, Chapter 10.3]. Let 
                           
                              P
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             m
                                          
                                       
                                    
                                 
                              
                           
                         denote the 
                           
                              3
                              ×
                              m
                           
                         matrix of the coordinate vectors of the vertices of 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                          -
                                          1
                                       
                                    
                                 
                              
                           
                        , and let 
                           
                              U
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             m
                                          
                                       
                                    
                                 
                              
                           
                         denote the 
                           
                              3
                              ×
                              m
                           
                         matrix of displacement vectors sorted in the same order as in P. The TPS deformation is 
                           
                              Φ
                              (
                              
                                 
                                    p
                                 
                                 
                                    →
                                 
                              
                              )
                              =
                              
                                 
                                    c
                                 
                                 
                                    →
                                 
                              
                              +
                              X
                              
                                 
                                    p
                                 
                                 
                                    →
                                 
                              
                              +
                              
                                 
                                    Y
                                 
                                 
                                    T
                                 
                              
                              s
                              (
                              
                                 
                                    p
                                 
                                 
                                    →
                                 
                              
                              )
                           
                        , where 
                           
                              
                                 
                                    c
                                 
                                 
                                    →
                                 
                              
                           
                         is a 3-dimensional vector, X is a 
                           
                              3
                              ×
                              3
                           
                         matrix, Y is a 
                           
                              m
                              ×
                              3
                           
                         matrix, and 
                           
                              s
                              (
                              
                                 
                                    p
                                 
                                 
                                    →
                                 
                              
                              )
                              =
                              
                                 
                                    
                                       
                                          ϕ
                                          (
                                          
                                             
                                                p
                                             
                                             
                                                →
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      →
                                                   
                                                
                                             
                                             
                                                1
                                             
                                          
                                          )
                                          …
                                          ϕ
                                          (
                                          
                                             
                                                p
                                             
                                             
                                                →
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      →
                                                   
                                                
                                             
                                             
                                                m
                                             
                                          
                                          )
                                       
                                    
                                 
                                 
                                    T
                                 
                              
                           
                         is a m-dimensional vector with
                           
                              (5)
                              
                                 ϕ
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     p
                                                                  
                                                                  
                                                                     →
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   log
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  p
                                                               
                                                               
                                                                  →
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  p
                                                               
                                                               
                                                                  →
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   >
                                                   0
                                                   ,
                                                
                                             
                                             
                                                
                                                   0
                                                   ,
                                                
                                                
                                                   otherwise.
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        We find 
                           
                              Φ
                              (
                              
                                 
                                    p
                                 
                                 
                                    →
                                 
                              
                              )
                           
                         by solving the linear system of equations
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   S
                                                
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                                
                                                   0
                                                
                                                
                                                   0
                                                
                                             
                                             
                                                
                                                   P
                                                
                                                
                                                   0
                                                
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   Y
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         U
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                             
                                             
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              1
                           
                         is a 
                           
                              m
                              ×
                              1
                           
                         vector containing 1 at each position, and S is a matrix containing the vectors 
                           
                              s
                              (
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         as its rows.

We then evaluate 
                           
                              Φ
                              (
                              
                                 
                                    p
                                 
                                 
                                    →
                                 
                              
                              )
                           
                         at the internal nodes of 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                          -
                                          1
                                       
                                    
                                 
                                 
                                    tet
                                 
                              
                           
                         to obtain an initial estimate for the displacements.

Let 
                           
                              
                                 
                                    
                                       
                                          u
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    init
                                 
                              
                           
                         denote the vector of length 
                           
                              3
                              m
                           
                         containing all initially estimated displacements. These displacements are used to iteratively update the material parameters using (A1) and the estimated forces using (A2). Finally, the estimated 
                           
                              E
                              ,
                              ν
                           
                         and 
                           
                              
                                 
                                    f
                                 
                                 
                                    →
                                 
                              
                           
                         along with fixed displacements at observed vertices are used to estimate 
                           
                              
                                 
                                    
                                       
                                          u
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         at unobserved vertices using (A3). Algorithm 1 summarizes this approach.
                           Algorithm 1
                           Using FEM to displace unobserved vertices 
                                 
                                    
                                 
                              
                           

After the FEM step, the tetrahedral mesh of 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                         is obtained by simply updating the vertex positions of 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                          -
                                          1
                                       
                                    
                                 
                              
                           
                         using 
                           
                              
                                 
                                    
                                       
                                          u
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                        .

In our experiments, we set 
                           
                              ℓ
                              =
                              3
                           
                         (since we found this to be sufficient in our experiments).

Once the FEM step is completed for frame 
                           
                              
                                 
                                    F
                                 
                                 
                                    j
                                 
                              
                           
                        , it remains to adjust the transformation parameters 
                           
                              
                                 
                                    
                                       
                                          t
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    ϕ
                                 
                                 
                                    i
                                 
                              
                           
                         to capture the new deformation. We achieve this by minimizing
                           
                              (7)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   E
                                                
                                                
                                                   def
                                                
                                             
                                             =
                                             
                                                
                                                   w
                                                
                                                
                                                   data
                                                
                                             
                                             
                                                
                                                   E
                                                
                                                
                                                   target
                                                
                                             
                                             +
                                             
                                                
                                                   w
                                                
                                                
                                                   sm
                                                
                                             
                                             
                                                
                                                   E
                                                
                                                
                                                   sm
                                                
                                             
                                             
                                             with
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   E
                                                
                                                
                                                   target
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               A
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     p
                                                                  
                                                                  
                                                                     ̃
                                                                  
                                                               
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         -
                                                         TP
                                                         (
                                                         
                                                            
                                                               p
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              TP
                              (
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is the position of the point corresponding to vertex 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         on the deformed tetrahedral mesh 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                          -
                                          1
                                       
                                    
                                 
                                 
                                    tet
                                 
                              
                           
                        . Note that we only optimize the energy with respect to parameters that influence unobserved vertices of 
                           
                              
                                 
                                    T
                                 
                                 
                                    
                                       
                                          F
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           
                        . In our experiments, we set 
                           
                              
                                 
                                    w
                                 
                                 
                                    data
                                 
                              
                              =
                              1
                           
                         and 
                           
                              
                                 
                                    w
                                 
                                 
                                    sm
                                 
                              
                              =
                              20
                           
                        .

@&#IMPLEMENTATION DETAILS@&#

The implementation of the algorithm is in C++ and uses a quasi-Newton method [25] for all of the optimization steps. For each optimization step, at most 1000 iterations are used. The tetrahedralization is computed using tetgen (http://tetgen.berlios.de). When tetrahedralizing the model, we find a high quality tetrahedralization by restricting the radius-edge ratio of each tetrahedron to be at most two.

This section discusses implementation details, and in particular the parameter settings used in the experiments. The parameters 
                        
                           
                              
                                 w
                              
                              
                                 data
                              
                           
                        
                      and 
                        
                           
                              
                                 w
                              
                              
                                 sm
                              
                           
                        
                      used during tracking give the relative weights between the different energy terms, the parameters d and α control which data points influence the data term, and the parameter 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                        
                      influences the neighborhoods considered for the smoothing term. Finally, the parameter 
                        
                           ℓ
                        
                      controls how many iterations are performed during the FEM estimation.

To make the relative influence of the weights 
                        
                           
                              
                                 w
                              
                              
                                 data
                              
                           
                        
                      and 
                        
                           
                              
                                 w
                              
                              
                                 sm
                              
                           
                        
                      invariant with respect to scaling, we pre-scale all of the input models, such that the length of the diagonal of the bounding box of the template model is one. This allows to set most of the parameters to one constant value for all experiments. The weight schedule used for 
                        
                           
                              
                                 w
                              
                              
                                 data
                              
                           
                        
                      and 
                        
                           
                              
                                 w
                              
                              
                                 sm
                              
                           
                        
                      as well as the choice of 
                        
                           ℓ
                        
                      has been discussed in Sections 4 and 5. Furthermore, we set 
                        
                           
                              
                                 w
                              
                              
                                 data
                              
                           
                           =
                           1
                           ,
                           
                           d
                           =
                           5
                           ,
                           
                           α
                           =
                           60
                           °
                        
                     .

The parameter 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                        
                      is the only parameter that is varied. This parameter gives the smoothing radius with respect to the resolution of the template mesh. It needs to be adjusted depending on the ratio between the mesh resolution and the mesh size. If the mesh resolution (measured as average edge length) is high compared to the size of the model, then 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                        
                      can be set relatively low. If the mesh resolution is low compared to the size of the model, then 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                        
                      needs to be set to a higher value.


                     Fig. 3
                      shows the influence of 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                        
                      on the result of tracking scan data of an ear model. The larger the parameter 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                        
                     , the more localized shape deformations are penalized by the tracking energy. This has the effect that for small 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                        
                     , the template can accurately follow the data at the cost of being influenced by data noise and for large 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                        
                     , the template is not significantly affected by noise but cannot follow localized shape deformations. In our experiments, we set 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                           =
                           1.5
                        
                      for synthetic data, 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                           =
                           3
                        
                      for the ear model, and 
                        
                           
                              
                                 s
                              
                              
                                 sm
                              
                           
                           =
                           5
                        
                      for the dinosaur model.

@&#EVALUATION@&#

This section discusses the datasets used in the experiments and shows a synthetic evaluation of the method as well as experiments based on real data. Furthermore, we compare the proposed method to its predecessor [40], denoted by Wuhrer et al. [40] in the following. More detailed visualizations of some experiments are available in the Supplementary material. For all the experiments, the input models are pre-scaled, such that the length of the bounding box diagonal of the template model is one. This information on the scale of the models serves as reference for the numerical evaluations below.


                        Synthetic data. The synthetic datasets (shown in Fig. 4
                        ) are created using the bust, hand, and bulldog models from the AIM@Shape repository [1]. We create synthetic deformations of the models by applying different finite element deformations to the models with GetFEM [16]. First, the shapes are deformed using a linear FEM, and second, the shapes are deformed using the incompressible non-linear Saint Venant–Kirchhoff model (StVK). The back sides of the deformed models are removed and the remaining front sides (shown in Fig. 4) are used as input to the algorithm. In our simulations, the head of the bust is pushed to the left, the middle finger of the hand is pushed to the left, and the head of the bulldog is pushed to the side. For all deformations, the Lagrange multiplier was set to 
                           
                              1
                              e
                              4
                           
                        . Refer to Table 1
                         for more information on the models and the parameters used to generate these deformations, and to Fig. 5
                         for the start and end poses of the deformations.


                        Stereo data. We acquire the stereo observations of each frame using a commercial machine vision stereo camera (Point Grey Bumblebee 2) with the window-based matching software of the manufacturer. Typically, we use a matching window of size 
                           
                              15
                              ×
                              15
                           
                         for subpixel matching with edge filtering based on 
                           
                              11
                              ×
                              11
                           
                         window in images of size 
                           
                              1024
                              ×
                              768
                           
                         and a disparity range of 115 pixels. We filter the matching result with back-and-forth verification and a size constraint on the matches in a neighborhood of 200 pixels to give us an incomplete point cloud with mainly reliable matches. We segment the point cloud based on the color image of the reference camera. We adapted the code of Horprasert et al. [18] for background subtraction in our controlled lighting environment, for which we capture a series of background images without the deformable object to be captured. After extracting the foreground object, we estimate normals based on the point cloud in the image domain. We slide a window of 
                           
                              5
                              ×
                              5
                           
                         pixels over the image and fit a least-squares plane to the 
                           
                              {
                              x
                              ,
                              y
                              ,
                              z
                              }
                           
                        -coordinates using singular value decomposition. If the singular values indicate that the plane approximation is poor or if less than 50% plus 1 depth values are available in the current window, we discard the current stereo match as an outlier. This gives us a filtered 3D point cloud with normal vectors at every point.

Our experiments use two datasets acquired using this setup. The first dataset is a silicon ear used for acupuncture training that is acquired while the helix of the ear is being pushed down. Fig. 6
                         shows one of the input frames and the template mesh (containing 19,993 vertices). The second dataset is a dinosaur plush toy that is acquired in two sequences: first while a flap of the model is being pushed towards the spine and second while the neck of the model is being pushed towards the floor. Fig. 6 shows one of the input frames and the template mesh (containing 25,315 vertices). Note that all of these datasets contain noise that is typical for data acquired using stereo algorithms, such as noise along the viewing direction and missing data due to occlusions. Occlusions are especially visible in the areas of the helix of the ear model and the flaps of the dinosaur model. Furthermore, the input data of the dinosaur model contains points located on a tag attached to the tail of the model. This tag is not part of the template model, and handling this discrepancy is challenging.


                        Range data. We acquire range data using a Kinect sensor and the point cloud library. With this setup, we acquire a deformation of the dinosaur plush toy that is similar to one of the sequences acquired using the stereo camera. Furthermore, we acquire a deformation where the tail of the dinosaur toy is pushed to the side. The resolution of this type of data is low compared to our stereo data, as shown in Fig. 6.


                        Force probe. The position and orientation of the force sensor probe can be tracked by fixing a checkerboard pattern to the probe handle, and by tracking the corners of the checkerboard. The resulting position and orientation of the force sensor can be used to remove the data caused by the sensor from the point cloud. We take advantage of this option for the ear model, where the probe has a similar scale as the small-scale geometry of the helix. For all remaining datasets, the information on the location of the force sensor is not used.


                        Template model. For all synthetic datasets, we use the complete undeformed model as template. For the ear and dinosaur models, we generate a template by acquiring the geometry of the model in a rest pose using a 3D scanner. The different views of the scans are merged and processed manually to lead to a watertight mesh.

Our first set of experiments aims to show that our approach is robust with respect to noise. To start, consider the synthetic bust data generated with a linear FEM. For this data, the complete ground truth model is known, and can therefore be used to quantitatively evaluate the robustness of our approach with respect to noise. In this experiment, we consider three types of noise. First, we aim to model outliers in a way that simulates the outliers commonly present in stereo data. To model these outliers, we pick a viewpoint for the model. A vertex 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         is perturbed as 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              +
                              x
                              
                                 
                                    
                                       
                                          v
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    
                                       
                                          v
                                       
                                       
                                          →
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         is the unit vector pointing from 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         to the viewpoint and x is a uniformly distributed random number in the range 
                           
                              
                                 
                                    
                                       -
                                       r
                                       ,
                                       4
                                       r
                                    
                                 
                              
                           
                        , and r is the resolution of the model. Each vertex of the model is perturbed with probability 1/10. Second, we perturb the vertices of the input data by adding Gaussian noise in the vertices normal direction. The variance of the Gaussian is 2% of the bounding ball radius of the model. Third, we evaluate the influence of the resolution of the input data on the results by subdividing the input data using one step of Loop subdivision.


                        Fig. 7
                         shows that the results obtained by our method are not visually affected by noise. As the per-vertex distance for a frame can be computed as the distance between the vertex position in the tracking result and its corresponding point in the ground truth model, the error for a frame can then be computed as the average or maximum over all per-vertex distances of this frame. The resulting errors are given in Fig. 8
                        . The average distances are small compared to the size of the model and the increase in the distances caused by the presence of outliers, Gaussian noise, and an increase in resolution is insignificant. In our template-based tracking, distances increase linearly over time.

Second, we qualitatively evaluate the results of tracking noisy stereo and range datasets. Fig. 9
                         shows the observed sides of four sequences acquired using either a stereo or a range camera. The figure shows the data, the deformed template, and the signed distance between the deformed template and the data. In the visualization of the signed distance, points that do not have a valid nearest neighbor in the data are shown in red. Note that the tracking result captures the overall deformation of the models in spite of large noise, high levels of occlusion, and additional data. Furthermore, it is noteworthy that results of similar quality are obtained for stereo and range data, which have significantly different resolution and noise levels. An additional result for a deformation of the dinosaur model, where the tail is pushed to the side, is shown in the Supplementary material.

To quantitatively evaluate how well the shape of the models is preserved during the deformation, we measure the volume and the surface area of the template models and of the deformed template at the last frames of the deformation sequences. Fig. 10
                         shows that volume and surface area are preserved well throughout the deformation sequences for all four real-world datasets. Since all of these deformations are approximately volume- and area-preserving in reality, this result gives supporting evidence that the method performs well.

Our second set of experiments shows that the FEM step improves the shape of the unseen side of the model. We show that displacing the unobserved vertices using a linear FEM in every deformation step yields satisfactory results even for synthetic deformations that were generated using a non-linear FEM and for real-world deformation sequences.

We consider the synthetic deformation sequences of the bust and hand models generated using linear FEM and the StVK model. For each deformation sequence, tracking is computed using our algorithm. We then evaluate the errors as above. However, instead of considering all vertices of the model for the error computation, we only consider vertices on the unseen side. The bust dataset exhibits a deformation that affects the global shape of the model, while the hand dataset exhibits the strongest deformation locally on one finger. Fig. 11
                            shows that linear and non-linear deformations as well as deformations that affect the global shape and deformations that affect the local shape are tracked equally well.

For the models generated using linear FEM, we can also compare the estimated material parameters to the ground truth. In our experiments, the estimated Young’s modulus is stable across the deformation sequence and can be obtained from the ground truth by a scaling. This is to be expected, as we normalize the lengths of the force directions. The estimated Poisson ratio varies across the input frames and on average, the true Poisson ratio is underestimated by approximately 0.25.

We compare the result of our method to a deformation computed by a global linear FEM. This experiment uses the synthetic bulldog data and is shown in Fig. 12
                           . The figure shows the result of applying a linear FEM deformation to the bulldog model and our result. The global linear FEM aims to linearize the global deformation that is observed when applying a non-linear FEM to the model. Observe that applying a linear FEM leads to unrealistic artifacts at the right front leg and the head of the bulldog because the applied force causes a rotation. Recall that our method uses a linear FEM to predict the unobserved side of the model. However, since our method linearizes the deformation locally at each frame, no unrealistic artifacts occur. Furthermore, our approach is significantly closer to the ground truth than using a global linear FEM in terms of mesh volume and area.

We compare the results of our method to the results of only using the surface-based template deformation method outlined in Section 4. Choosing this surface-based deformation technique results in deformations that predict the unobserved side using a term that aims to preserve a smooth deformation field. Comparing to this technique directly evaluates the influence of the FEM step on the result. In the following, we refer to the surface-based template deformation as our method without FEM.

We evaluate the influence of the FEM correction for tracking noisy scans. Consider the neck sequence acquired using the stereo setup. Fig. 13
                         shows the template (yellow) and the results at the end of the sequence with (green) and without (blue) the FEM correction. Note how the surface-based deformation finds a solution that deforms the template smoothly, which leads to a translation of the leg rather than a bending. Furthermore, the tail is merely translated upwards. Using our method, the legs slide and bend realistically, and the models tail lifts up, as in reality.


                        Fig. 1 (third from left) shows that the FEM correction also leads to a more physically plausible result for the ear model acquired using the stereo setup. In this case, using the FEM correction prevents a fattening of the object, which is mostly visible at the base and the helix.

Finally, we compare the proposed method to its predecessor [40] and demonstrate that the proposed changes yield a significant improvement in the performance of the algorithm. To start, consider the synthetic bust model generated with linear FEM. We track this sequence using both the method by Wuhrer et al. [40] and our method, and measure the mean and maximum distances over all vertices to the ground truth. Fig. 14
                         shows the tracking results and the measured distances. Note that the mean and maximum distances of our method are less than a third of the corresponding distances of the method by Wuhrer et al. [40]. As can be seen in the left of the figure, this improvement is obtained because our method tracks the rotation of the head better than the method by Wuhrer et al. [40] and because the back side of the bust is not flattened by our method.

The improvement of our method over the method by Wuhrer et al. [40] is especially noticeable for tracking noisy scan data. Fig. 1 shows a comparison of the result obtained using the method by Wuhrer et al. [40] (blue) to our result (green) for the last frame of the ear dataset acquired using a stereo setup. Note that while the method Wuhrer et al. [40] does not track the local deformation of the helix, our method tracks the data correctly without resulting in a noisy output. Fig. 15
                         shows the results of the two methods for different frames of datasets acquired using stereo or range cameras. Note that our method results in less noise and self-intersections of the model (especially visible in the areas of the flaps of the dinosaur models), while at the same time yielding a higher data accuracy. This significant improvement is a consequence of the improvements of both the tracking step and the FEM prediction.

@&#LIMITATIONS@&#

The proposed method is currently designed to deform models of homogeneous isotropic material that are deformed by applying external forces on a small number of points. Modeling complex force fields or force fields acting on heterogeneous material, such as deformations of tissue caused by muscle movements, would require a segmentation of the model into regions of homogeneous materials and the input of a full force field. This is too tedious to acquire to be of practical use. However, by combining template-based tracking with simple physical simulation models, we make a first step in the direction of acquiring the geometry and material properties of an object jointly.

We have demonstrated that our method, which uses a linear FEM model, allows to track both linear and non-linear material deformations accurately. This flexibility comes at the cost of material parameter estimates that vary over time and are not expected to be physically meaningful. In the future, we plan to explore modeling non-linear material behavior explicitly, and to find stable and physically meaningful material parameters for this scenario by considering all available frames for material parameter estimation.

As our approach employs a non-rigid iterative closest point algorithm to fit the template to the data, tracking large deformations may lead to drift. An example of this problem is included in the Supplementary material. Furthermore, due to the non-rigid iterative closest point algorithm, our method cannot deform the template accurately if the initial alignment is poor or if there is significant deformation between consecutive frames. Hence, in cases of extreme deformations that are sampled sparsely in time, our tracking may get lost. This is shown in Fig. 16
                        . Here, we simulated the same hand deformation twice; once sampled sparsely in time using 50 frames, and once sampled densely in time using 350 frames. For a particular frame (frame 20 in the sparsely sampled simulation, which corresponds to frame 140 in the densely sampled simulation), the ground truth deformation is shown in yellow, the result for tracking using the sparse sequence is shown in blue, and the result for tracking using the dense sequence is shown in green. Note that by using more frames, the tracking is able to follow the data more closely at the cost of additional drift.

@&#CONCLUSIONS@&#

We proposed an approach to track the geometry of a surface over time from a set of input point clouds captured from a single viewpoint. We combine the use of a template and the use of a linear finite element method to track the model. By linearizing the deformation at each frame, we show that we can accurately track surfaces that deform in a non-linear fashion. We demonstrate the robustness of our approach with respect to noise using a synthetic evaluation and using real data captured with a stereo setup and with a depth camera.

We leave the following ideas for future work. The tracking is lost when the distance between consecutive frames is large. This could potentially be addressed by tracking feature points on the model and by using these features to guide the non-rigid motion of the template during tracking. Furthermore, our approach assumes that a template is known a priori. While this assumption is commonly used in 3D tracking approaches, it will be interesting to relax this requirement in the future. One way to relax this requirement would be to assume that the undeformed object is observed from a single moving viewpoint before the deformation, which allows to fuse these views into a template shape automatically.

@&#ACKNOWLEDGMENTS@&#

This work has partially been funded by NSERC, Canada, Networks of Centres of Excellence GRAND, Canada, and the Cluster of Excellence on Multimodal Computing and Interaction within the Excellence Initiative of the German Federal Government.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.gmod.2014.10.002.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

