@&#MAIN-TITLE@&#PSTG-based multi-label optimization for multi-target tracking

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A paratactic–serial tracklet graph (PSTG) is introduced for tracklet analysis.


                        
                        
                           
                           A PSTG-based framework is proposed for multi-target tracking.


                        
                        
                           
                           It helps improve tracking performance with group information and integrity.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Group

Paratactic–serial tracklet graph (PSTG)

Multi-label

Multi-target tracking

@&#ABSTRACT@&#


               
               
                  Many recent advances in multi-target tracking have grown concern over latent corresponding relation among observations, e.g. social relationship. To handle long-term occlusion within group and tracking failure caused by interaction of targets, various correlations among tracklets need to be exploited. In this paper, a paratactic–serial tracklet graph (PSTG) theory is proposed for inter-tracklet analysis in multi-target tracking to avoid tracking failure caused by long-term occlusion within group or crossing trajectories. Contrary to recent approaches, a novel PSTG is defined to describe the correlation among all tracklets in spatio-temporal domain to model the mutual influence among trajectories. Paratactic–tracklet graph extends the potential relationship among tracklets which show similar motion patterns in spatio-temporal neighbor. Serial–tracklet graph enhances the integrity and continuity of trajectories which represent two trajectory fragments of a certain target in different periods. Furthermore, a PSTG-based multi-label optimization algorithm is presented to make the trajectory estimation more accurate. A PSTG energy is minimized by multi-label optimization, including group, integrity and spatio-temporal constraints. Experiments demonstrate the anti-occlusion performance of the proposed approach on several public datasets and actual surveillance sequences, and achieve competitive results by quantitative evaluation.
               
            

@&#INTRODUCTION@&#

Tracking of multiple targets from a video sequence is a challenging problem and a research hot spot in computer vision. The aim of the task is to automatically locate targets, give a certain label to each, and recover their trajectories which mean the continuous position sequences for all targets in the camera scenes. In many applications, such as motion analysis and video content understanding, one of the key technologies is recovering the spatio-temporal trajectories accurately. Though there has been significant progress in tracking technology in recent years, current state-of-the-art multi-target tracking algorithms are no match for human abilities of tracking, both in terms of accuracy and precision. Invisible correlation among observations and unknown number of targets lead to more complicated problem in real scenario. Besides image evidence given by a target detector, direction, appearance, moving group, spatio-temporal continuity and interaction among targets should also be taken into consideration in tracking task.

Many of the perfect tracking approaches adopt the tracking-by-detection framework, in which detections are the target hypotheses extracted from the background by the detector (e.g. 
                     [1]) in all frames and then associate them into trajectories. Using a target detector can help to reduce the number of model drift when a target has been lost and convert tracking problem into association problem. Association based approaches are powerful at dealing with extended occlusions between targets. The detector produces the per-frame image evidence for each target. Hence, when tracking a single target, the problem is to estimate a trajectory which can fit those evidences well. Obviously, the task is significantly more difficult in the multi-target tracking, since all these data associations must be settled at the same time. Intuitively speaking, one has to establish a unique label for each target, and then simultaneously estimate the motion patterns of all targets and the assignment of detections to the targets.

Andriyenko et al. [2] follow the tracking-by-detection framework. a label cost based energy minimization is used to get local optimum for multi-target tracking. The energy in [2] falls into two categories: continuous part and discrete part. Continuous energy is used to illustrate the goodness of trajectories and discrete energy is mainly to describe the data association among image evidences. Because the optimization with two kinds of energy uses local terms, the tracking problem becomes more challenging. As a result, the consequences of detection errors caused by interaction among targets, such as ID switch, trajectory fragment, etc., become more obvious when optimized with label cost only using these local terms.

A paratactic–serial tracklet graph (PSTG)-based multi-label optimization method for multi-target tracking is proposed in this work. Unlike other current approaches, PSTG optimization is proposed to exploit various correlations among tracklets and minimize the energy of PSTG. The correlation among tracklets describing in PSTG optimization algorithm can be paratactic or serial. Moving group, integrity and spatio-temporal constraints are reflected in the correlation among tracklets (track fragments, usually short [3]). Moving group constraint mainly illustrates the group relations of moving targets, which means the targets in same group should have similar trajectories. Using our paratactic–tracklet graph (PTG), such paratactic tracklet group information can be effectively found, which can partly settle detection errors or trajectory fragments caused by occlusion. Integrity constraint means any trajectory that is continuous and has only one pair of endpoints (start point and end point), which can be implemented by our serial–tracklet graph (STG). The relationship of tracklets in temporal and spatial domain is reflected in spatio-temporal constraint, e.g., two concurrence tracklets respectively express two distinct targets at the same time. To solve the above problems, a PSTG-based multi-label optimization algorithm is presented to express the energy function including all these constraints (group, integrity and spatio-temporal). We run extensive experiments on various datasets and achieve very competitive results to demonstrate our PSTG optimization algorithm.

The main contribution of this work is a PSTG-based model for multi-target tracking that

                        
                           (i)
                           defines a novel PSTG-based describe method which can embody the correlation among all tracklets in spatio-temporal domain;

includes direction, appearance, moving group, spatio-temporal continuity and interaction among targets;

explicitly handles long-term partial or full occlusion within group;

can effectively avoid the tracking failures caused by close or crossing trajectories.

Furthermore, (v) a multi-label optimization framework for multi-target tracking is also proposed. And multi-label consists of proposal labeling, group labeling, track ID labeling in this paper. Through the multi-label optimization, correlation among trajectories is introduced to make multi-target tracking more accurate.

The rest of the paper is organized as follows: related work is discussed in Section 2; graph approach for inter-tracklet analysis is given in Section 3; Section 4 describes the multi-label optimization for multi-target tracking framework; experiments are shown in Section 5, followed by conclusion in Section 6.

@&#RELATED WORKS@&#

Visual tracking has been a research hot spot in computer vision field, and these are abundant related literature. In the presence of a single target, the task is to calculate the target location in every frame and recovery the trajectory for a certain target [4]. In the presence of multiple targets, the challenges become significatively complex. In this research, we concentrate on recent advances related mainly to visual multi-target tracking.

Visual multiple target tracking approaches can usually fall into two categories [5]: online approaches [6–9] and offline approaches [10–13]. Online approaches are used in time-critical scene and it uses the information from the past frames to estimate the current state recursively. For example, an agent-based behavior model is proposed in Yamaguchi et al. [14]. Breitenstein et al. [15] adopt particle filtering to approximate more complex multi-modal posteriors. The approach uses the information of social and environmental factors to predict endpoints of targets and recovery the trajectories. In [16], Danelljan et al. propose an adaptive low-dimensional variant of color attributes to improve tracking performance. Wu et al. compare current online tracking approaches in [17].

In contrast with online approaches, offline approaches are used in accurate tracking scene. In recent years, offline approaches have become more and more popular. A certain latency and globally estimates all trajectories within a given time window are allowed in offline approaches. The offline approaches usually convert the tracking problem into a data association problem, and link image evidences into long trajectories. Min-cost network flow algorithms [18,19] are used to reformulate the task as a network flow problem, which can be solved in polynomial time. Berclaz et al. [20] capture the dependencies between video through network using Markovian dependencies. Pirsiavash et al. [21] propose a greedy optimization scheme globally by inserting target hypotheses for tracking a variable number of objects. However, the targets in the scene need global data association. To avoid ID switches, an online CRF model is proposed to learn appearance features that discriminate among close targets for tracklet association [22]. Similarly, a more effective dynamic model leveraging nearby target positions is proposed in [23]. Label cost based tracker [2] addresses both data association and trajectory estimation by minimizing energy, which is composed of two categories of energy—discrete energy and continuous energy. The discrete energy is used to solve data association problem and the continuous energy to estimate trajectory. However, the correlation among targets which is important in visual tracking is not modeled into the framework. To overcome the drawback, Milan et al. [24] propose a mixed discrete-continuous CRF to fix the weakness. The above approaches still have some limitations. Interaction of targets, integrity of a trajectory and spatio-temporal constraints are overlooked.


                     Interaction of targets illustrates the mutual influence caused by close moving targets, so it is more important in pedestrian tracking. As shown in Fig. 1
                     , when two pedestrians are close, detection errors (false alarms or multiple targets combined into one detection) occur frequently.


                     Integrity of trajectories refers to a trajectory with unique start and end points. While a trajectory with more than one pair of endpoints, the trajectory is not a good result regard to integrity. Without integrity, trajectories would outnumber targets and the problem of trajectory fragment occurs.


                     Spatio-temporal constraint embodies the tracklet association among different targets, e.g. paratactic or serial relation between two trajectories. The paratactic tracklets may have similar motion patterns and the serial tracklets may represent the same target. In labeling based tracker, the constraints are ignored, due to overlapping errors (one object has more than one trajectory at the same time) and combination errors (multiple objects have one trajectory).

Interaction of close moving targets and the influences of scene to trajectories are always handled ineffectively or ignored, and ID switch, trajectory fragment caused by mutual occlusion, and the position estimation of false negatives have not been settled effectively. Therefore we introduce PSTG to describe the paratactic or serial relation among tracklets to solve interaction problem and integrity problem. Through constructing paratactic–tracklet graph(PTG) and serial–tracklet graph(STG), the potential relationship can be exploited among tracklets as well as between tracklets and outlier points (detections do not belong to any tracklets) around, resulting in a more accurate and integral tracking.


                        Paratactic–tracklet. Two tracklets which have similar motion patterns in spatio-temporal neighbor are defined as paratactic tracklets. If tracklet a and tracklet b are paratactic tracklets, tracklet a and tracklet b cannot represent the same target. Paratactic–tracklet graph is used to illustrate this kind of relation between two paratactic tracklets.

A undirected graph 
                           
                              
                                 G
                                 pa
                              
                              =
                              
                                 (
                                 
                                    V
                                    pa
                                 
                                 ,
                                 
                                    E
                                    pa
                                 
                                 )
                              
                           
                         is generated as shown in Fig. 2
                        . Node set V
                        pa represents tracklet set 
                           T
                        . Edge set E
                        pa in G
                        pa is defined as

                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             E
                                             pa
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             {
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                ,
                                                
                                                   T
                                                   j
                                                
                                                )
                                             
                                             |
                                             s
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                )
                                             
                                             ∩
                                             s
                                             
                                                (
                                                
                                                   T
                                                   j
                                                
                                                )
                                             
                                             ≠
                                             ∅
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∥
                                             
                                             
                                                p
                                                t
                                             
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                )
                                             
                                             −
                                             
                                                p
                                                t
                                             
                                             
                                                (
                                                
                                                   T
                                                   j
                                                
                                                )
                                             
                                             
                                                ∥
                                                <
                                                α
                                                ,
                                                cos
                                                
                                                   (
                                                   
                                                      T
                                                      i
                                                   
                                                   ,
                                                   
                                                      T
                                                      j
                                                   
                                                   )
                                                
                                                >
                                                0
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              s
                              
                                 (
                                 T
                                 )
                              
                              ,
                              
                                 p
                                 t
                              
                              
                                 (
                                 T
                                 )
                              
                              ,
                              α
                              ,
                              cos
                              
                                 (
                                 
                                    T
                                    1
                                 
                                 ,
                                 
                                    T
                                    2
                                 
                                 )
                              
                           
                         are respectively the time span of tracklet 
                           
                              T
                              ,
                           
                         the position of tracklet 
                           T
                         at time t, the threshold of distance and the cosine of angle between 
                           
                              T
                              1
                           
                         and 
                           
                              T
                              2
                           
                        .


                        Eq. (1) embodies that two paratactic tracklets should satisfy the following conditions: in temporal domain, two paratactic tracklets should have some overlaps, e.g. in Fig. 2b, tracklet a and tracklet b fulfil Sa
                         ∩ Sb
                         ≠ ∅, but tracklet c does not; in spatio domain, the distance between two paratactic tracklets should be less than the threshold α, e.g. in Fig. 2a, tracklet a and tracklet b fulfil dt
                         < α, but tracklet d does not; in spatio-temporal domain, the velocity directions of two paratactic tracklets should be similar, e.g. in Fig. 2a, tracklet a and tracklet b fulfil cos(θ) > 0, but tracklet e does not. Paratactic–tracklet graph of this case is constructed as Fig. 2c.


                        Serial–tracklet. Two tracklets which may represent two trajectory fragments of a certain target in different periods are defined as serial tracklets. If tracklet a and tracklet b are serial tracklets, tracklet a and tracklet b can be either a trajectory fragments or two close tracklets. Serial–tracklet graph is used to show this kind of relation between two serial tracklets.

A directed graph 
                           
                              
                                 G
                                 ser
                              
                              =
                              
                                 (
                                 
                                    V
                                    ser
                                 
                                 ,
                                 
                                    E
                                    ser
                                 
                                 )
                              
                           
                         is generated as shown in Fig. 3
                        . Node set V
                        ser represents tracklet set 
                           T
                        . Edge set E
                        ser is defined as

                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             E
                                             ser
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             {
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                ,
                                                
                                                   T
                                                   j
                                                
                                                )
                                             
                                             |
                                             s
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                )
                                             
                                             ∩
                                             s
                                             
                                                (
                                                
                                                   T
                                                   j
                                                
                                                )
                                             
                                             =
                                             ∅
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∥
                                             
                                             
                                                p
                                                en
                                             
                                             
                                                (
                                                
                                                   T
                                                   i
                                                
                                                )
                                             
                                             −
                                             
                                                p
                                                st
                                             
                                             
                                                (
                                                
                                                   T
                                                   j
                                                
                                                )
                                             
                                             
                                                ∥
                                                <
                                                α
                                                ,
                                                ∥
                                                v
                                                ∥
                                                <
                                                β
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              s
                              
                                 (
                                 T
                                 )
                              
                              ,
                              
                                 p
                                 st
                              
                              
                                 (
                                 T
                                 )
                              
                              ,
                              
                                 p
                                 en
                              
                              
                                 (
                                 T
                                 )
                              
                              ,
                              α
                              ,
                              v
                              ,
                              β
                           
                         are respectively the time span of tracklet 
                           
                              T
                              ,
                           
                         the start point position of tracklet 
                           
                              T
                              ,
                           
                         the end point position of tracklet 
                           
                              T
                              ,
                           
                         the threshold of distance, the estimated velocity of the target over two tracklets’ gap and the threshold of velocity.


                        Eq. (2) embodies that two serial tracklets should satisfy the following conditions: in temporal domain, two serial tracklets should have no intersection, e.g. in Fig. 3b, tracklet a and tracklet b fulfil 
                           
                              
                                 S
                                 a
                              
                              ∩
                              
                                 S
                                 b
                              
                              =
                              ∅
                              ,
                           
                         but tracklet c does not; in spatio domain, the distance between two serial tracklets’ endpoints should be less than the threshold α, e.g. in Fig. 3a, tracklet a and tracklet b fulfil Δdab
                         < α, but tracklet d does not; in spatio-temporal domain, the estimated velocity over the gap between two serial tracklets should be reasonable, e.g. in Fig. 3a, tracklet a and tracklet b fulfil vab
                         < β, but tracklet e does not. It is obvious that the relation between tracklet f and tracklet a satisfies all these conditions. Therefore serial–tracklet graph is constructed as shown in Fig. 3c.

Approaches [23,25,26] prove that integrity of correlation information among the tracklets has a significantly influence on the quality of multiple target tracking. In our PSTG-based tracking approach, tracklet group is introduced to improve correlation information and solve the problem of locating individual targets position in the case of missing image evidences. Tracklet group can help to solve ID switch and fragment in the situation of targets moving within groups effectively. Tracklet group analysis divides targets into paratactic groups and reestimate group tracklets in each group. As a result, it increase recall rate in multiple target tracking.

Group energy 
                           
                              
                                 E
                                 gr
                              
                              ,
                           
                         indicating how well the labeling result 
                           
                              L
                              gr
                           
                         satisfies paratactic–tracklet graph, spatio-temporal proximity and motion similarity, is defined as

                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             E
                                             gr
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                i
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   <
                                                   j
                                                
                                             
                                             
                                                (
                                             
                                             
                                                c
                                                1
                                             
                                             δ
                                             
                                                (
                                                
                                                   l
                                                   
                                                      gr
                                                   
                                                   
                                                      T
                                                      i
                                                   
                                                
                                                =
                                                
                                                   l
                                                   
                                                      gr
                                                   
                                                   
                                                      T
                                                      j
                                                   
                                                
                                                &
                                                
                                                   (
                                                   
                                                      T
                                                      i
                                                   
                                                   ,
                                                   
                                                      T
                                                      j
                                                   
                                                   )
                                                
                                                ∈
                                                
                                                   E
                                                   pa
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             +
                                             
                                                c
                                                2
                                             
                                             
                                                (
                                                1
                                                −
                                                δ
                                                
                                                   (
                                                   
                                                      l
                                                      
                                                         gr
                                                      
                                                      
                                                         T
                                                         i
                                                      
                                                   
                                                   =
                                                   
                                                      l
                                                      
                                                         gr
                                                      
                                                      
                                                         T
                                                         j
                                                      
                                                   
                                                   &
                                                   
                                                      (
                                                      
                                                         T
                                                         i
                                                      
                                                      ,
                                                      
                                                         T
                                                         j
                                                      
                                                      )
                                                   
                                                   ∈
                                                   
                                                      E
                                                      pa
                                                   
                                                   )
                                                
                                                )
                                             
                                             
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                         where c
                        1 is the weight of edges in paratactic–tracklet graph between two endpoints with the same label, otherwise c
                        2. δ is an indicator function.

Group energy 
                           
                              E
                              gr
                           
                         is minimized to obtain the best labeling result 
                           
                              L
                              gr
                           
                         based on paratactic–tracklet graph. Tracklets are grouped according to their labels, and tracklets with the same label i are grouped as 
                           
                              K
                              i
                           
                        . Asift appearance feature algorithm [27] is applied in each group 
                           
                              K
                              i
                           
                         to calculate the number of targets in 
                           
                              K
                              i
                           
                         marked as Mi
                        , where i ∈ N
                        gr.

In traditional data association based trackers [2,24], correlation information is formulated based on only tracklets with spatio-temporal proximity. To gain more correlation information to recover tracklets, unlike traditional approaches we extend tracklets’ correlation through paratactic–tracklet graph. With tracklet graph, we enlarge propagation range of tracklet correlative information in time dimension. The workflow of group tracklet reestimation is shown in Fig. 4
                        . Fig. 4a shows intermediate state of iteration. As shown in Fig. 4b, there is a propagation field around tracklet b. In this propagation field, tracklets with the similar direction can be propagated by tracklet b. Therefore, tracklet a satisfies the conditions. In other words, tracklet b can propagate correlation information through tracklet a, and vice versa (symmetry). Likewise, tracklet c can be propagated by tracklet b, so the information is propagated from tracklet a to tracklet c through tracklet b. That is an instance of enlarging propagation range in time dimension. Then tracklets a, b and c belong to the same group. Fig. 4c illustrates the tracklet recovery process with close outlier points using group information 
                           K
                        . As a result, tracklets a and c have been combined into a more integral tracklet as shown in Fig. 4d.

The actual tracklet of a single object in continuous tracking should have only one pair of endpoints (one start point and one end point), but in actual tracking result, a certain target usually has multiple tracklets because of detection errors or tracklet fragments. In our graph approach, we introduce integrity to measure continuity of trajectory.

We propose trajectory energy 
                           
                              E
                              tr
                           
                         to describe the integrity of trajectories. It is composed of three parts of energy—start energy, end energy and connection energy.

A graph 
                           
                              
                                 G
                                 tr
                              
                              =
                              
                                 (
                                 
                                    V
                                    tr
                                 
                                 ,
                                 
                                    E
                                    tr
                                 
                                 )
                              
                           
                        is generated as shown in Fig. 5
                        , after serial–tracklet graph of 
                           T
                         is available. Node set V
                        tr in addition to tracklet set 
                           
                              T
                              ,
                           
                         also contains two virtual nodes—source node s and target node t. Edge set E
                        tr is defined as

                           
                              (4)
                              
                                 
                                    
                                       E
                                       tr
                                    
                                    =
                                    
                                       {
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       |
                                       i
                                       ∈
                                       V
                                       ,
                                       j
                                       ∈
                                       follow
                                       
                                          (
                                          
                                             V
                                             i
                                          
                                          )
                                       
                                       }
                                    
                                 
                              
                           
                        where follow(Vi
                        ) is the node set in which tracklet 
                           T
                         may be the subsequent tracklet of Vi
                        . It is defined as

                           
                              (5)
                              
                                 
                                    follow
                                    
                                       (
                                       
                                          v
                                          i
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      {
                                                      v
                                                      ∈
                                                      V
                                                      |
                                                      
                                                         (
                                                         
                                                            v
                                                            i
                                                         
                                                         ,
                                                         v
                                                         )
                                                      
                                                      ∈
                                                      
                                                         E
                                                         ser
                                                      
                                                      }
                                                   
                                                   ∪
                                                   
                                                      {
                                                      t
                                                      }
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      v
                                                      i
                                                   
                                                   ∈
                                                   V
                                                   −
                                                   
                                                      {
                                                      s
                                                      ,
                                                      t
                                                      }
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   V
                                                   −
                                                   {
                                                   s
                                                   ,
                                                   t
                                                   }
                                                
                                             
                                             
                                                
                                                   
                                                      v
                                                      i
                                                   
                                                   =
                                                   s
                                                
                                             
                                          
                                          
                                             
                                                ∅
                                             
                                             
                                                
                                                   
                                                      v
                                                      i
                                                   
                                                   =
                                                   t
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Fig. 5 is defined as tracklet integrity graph. The edges of the graph can be divided into three categories: s connected edge set Es
                         (green), t connected edge set Et
                         (red) and all the other edges set Ec
                         (purple). The weight of each edge is defined as

                           
                              (6)
                              
                                 
                                    w
                                    
                                       (
                                       
                                          (
                                          
                                             v
                                             i
                                          
                                          ,
                                          
                                             v
                                             j
                                          
                                          )
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   w
                                                   
                                                      st
                                                   
                                                   j
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      
                                                         v
                                                         i
                                                      
                                                      ,
                                                      
                                                         v
                                                         i
                                                      
                                                      )
                                                   
                                                   ∈
                                                   
                                                      E
                                                      s
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   w
                                                   
                                                      en
                                                   
                                                   i
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      
                                                         v
                                                         i
                                                      
                                                      ,
                                                      
                                                         v
                                                         j
                                                      
                                                      )
                                                   
                                                   ∈
                                                   
                                                      E
                                                      t
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   w
                                                   
                                                      co
                                                   
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                   
                                                
                                             
                                             
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where w
                        st, w
                        en, w
                        co are respectively the weights of edges in Es, Et
                         and Ec
                        .

From all the above, tracklet energy is defined as Eq. (7).

                           
                              (7)
                              
                                 
                                    
                                       E
                                       tr
                                    
                                    =
                                    
                                       ∑
                                       
                                          
                                             (
                                             m
                                             ,
                                             n
                                             )
                                          
                                          ∈
                                          
                                             E
                                             tr
                                          
                                       
                                    
                                    
                                       (
                                       w
                                       
                                          (
                                          m
                                          ,
                                          n
                                          )
                                       
                                       )
                                    
                                    ·
                                    active
                                    
                                       (
                                       
                                          (
                                          m
                                          ,
                                          n
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                        where 
                        w(m, n) is the weight of edge (m, n) and active(e) is the active indicator function of edge e. When e is active(cf. 
                        Section 4.5), its value is 1, and otherwise is 0. When one edge is active, it means the two tracklets connected by the edge represent the same target.

We propose a novel framework called PSTG-based tracking, shown in Fig. 6 to solve the above problems – interaction of targets, integrity of trajectories and spatio-temporal constraint. In our approach, paratactic–tracklet graph is generated to model the interaction among targets and serial–tracklet graph reflects the integrity of tracklets. Both two graphs embody spatio-temporal constraints.

In preprocessing, detections of a video sequence are given by a target detector, and tracklet proposals are generated in proposal generation. Then there is an iteration optimization which consist of proposal labeling, group labeling and track ID labeling. Proposal labeling produces simple tracklets. Group labeling and track ID labeling are respectively used to handle interaction of targets and integrity of trajectories.

The process of proposal labeling in this framework can be replaced by any approach which can achieve tracklet proposals. In the paper, we apply a label cost approach [2] to generate tracklet proposals and compare our approach with original ones [2,24] to show the effect of PSTG analysis.

We propose a tracking framework of multi-label optimization to show the effectiveness of graph approach. As we pursue tracking by detection, it is assumed that detection set D has been given. We denote the ith detection at frame t as 
                           
                              d
                              t
                              i
                           
                        .

We settle tracking problem by solving multi-label optimization iteratively. As shown in Fig. 6, in each iteration, proposal labeling, group labeling and track ID labeling are applied respectively. Proposal labeling is used to produce low confidence tracklets. Group labeling reestimates the trajectory fragments in each group and track ID labeling enhances the integrity of trajectories generated by group labeling.


                        Proposal labeling. Given proposal set

                           
                              (8)
                              
                                 
                                    H
                                    =
                                    {
                                    
                                       H
                                       1
                                    
                                    ,
                                    
                                       H
                                       2
                                    
                                    ,
                                    ⋯
                                    ,
                                    
                                       H
                                       
                                          N
                                          h
                                       
                                    
                                    ,
                                    
                                       H
                                       0
                                    
                                    }
                                    ,
                                 
                              
                           
                        where 
                           
                              H
                              0
                           
                         is for outlier detections, e.g. false alarms. Proposal is a short track for further process which is generated in Section 4.2. The goal of proposal labeling is to label each 
                           
                              d
                              t
                              i
                           
                         by a label

                           
                              (9)
                              
                                 
                                    
                                       l
                                       
                                          pr
                                       
                                       
                                          d
                                          t
                                          i
                                       
                                    
                                    ∈
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       ⋯
                                       ,
                                       
                                          N
                                          h
                                       
                                       ,
                                       0
                                       }
                                    
                                    ,
                                 
                              
                           
                        which indicates 
                           
                              d
                              t
                              i
                           
                         corresponds to detection in 
                           
                              H
                              
                                 l
                                 
                                    pr
                                 
                                 
                                    d
                                    t
                                    i
                                 
                              
                           
                        . Detection 
                           
                              d
                              t
                              i
                           
                         with 
                           
                              
                                 l
                                 
                                    pr
                                 
                                 
                                    d
                                    t
                                    i
                                 
                              
                              =
                              0
                           
                         is an outlier detection. Proposal energy 
                           
                              E
                              pr
                           
                         is minimized to obtain a suitable proposal labeling result 
                           
                              L
                              pr
                           
                        . Detections with the same label are put into one set, and B-splines are used to fit the detections in one group to tracklets. B-splines are piecewise polynomial functions which can represent complex tracklets. The spline set with N
                        pr elements is denoted as 
                           
                              
                                 T
                                 pr
                              
                              =
                              
                                 {
                                 
                                    T
                                    
                                       pr
                                    
                                    1
                                 
                                 ,
                                 
                                    T
                                    
                                       pr
                                    
                                    2
                                 
                                 ,
                                 ⋯
                                 ,
                                 
                                    T
                                    
                                       pr
                                    
                                    
                                       N
                                       pr
                                    
                                 
                                 }
                              
                           
                        .


                        Group labeling. The goal of group labeling is to label each 
                           
                              T
                              
                                 pr
                              
                              i
                           
                         by a label

                           
                              (10)
                              
                                 
                                    
                                       l
                                       
                                          gr
                                       
                                       i
                                    
                                    ∈
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       ⋯
                                       ,
                                       
                                          N
                                          gr
                                       
                                       }
                                    
                                    ,
                                 
                              
                           
                        which indicates 
                           
                              T
                              
                                 pr
                              
                              i
                           
                         belongs to group 
                           
                              l
                              
                                 gr
                              
                              i
                           
                        . Group is a target set in which every element has a similar motion pattern. Group energy 
                           
                              E
                              gr
                           
                         is minimized to obtain a suitable group labeling result 
                           
                              L
                              gr
                           
                        . Trajectories with the same label is put into one group. 
                           
                              
                                 T
                                 gr
                              
                              =
                              
                                 {
                                 
                                    T
                                    
                                       gr
                                    
                                    1
                                 
                                 ,
                                 
                                    T
                                    
                                       gr
                                    
                                    2
                                 
                                 ,
                                 ⋯
                                 ,
                                 
                                    T
                                    
                                       gr
                                    
                                    
                                       N
                                       gr
                                    
                                 
                                 }
                              
                           
                         is generated by reestimating trajectories in one group.


                        Track ID labeling. The goal of track ID labeling is to label each 
                           
                              T
                              
                                 gr
                              
                              i
                           
                         by a label

                           
                              (11)
                              
                                 
                                    
                                       l
                                       
                                          in
                                       
                                       i
                                    
                                    ∈
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       ⋯
                                       ,
                                       
                                          N
                                          in
                                       
                                       }
                                    
                                    ,
                                 
                              
                           
                        which indicates tracklet 
                           
                              T
                              
                                 gr
                              
                              i
                           
                         is a trajectory fragment of target 
                           
                              l
                              
                                 in
                              
                              i
                           
                        . Tracklet energy 
                           
                              E
                              in
                           
                         is minimized to obtain a suitable tracklet labeling result 
                           
                              L
                              in
                           
                        . The integrity of tracking improves through trajectory optimization with 
                           
                              L
                              in
                           
                        .

Then, energy of multi-label framework 
                           E
                         is defined as

                           
                              (12)
                              
                                 
                                    E
                                    =
                                    
                                       E
                                       pr
                                    
                                    +
                                    
                                       E
                                       gr
                                    
                                    +
                                    
                                       E
                                       in
                                    
                                 
                              
                           
                        where 
                           
                              
                                 E
                                 pr
                              
                              ,
                              
                                 E
                                 gr
                              
                              ,
                              
                                 E
                                 in
                              
                           
                         are introduced in Sections 4.3, 4.4, 4.5 respectively.

The algorithm of PSTG tracking is shown in Algorithm 1
                        . Line 1 generates proposal set according to Section 4.2. The implements of line 3, line 6 and line 8 are respectively given in Algorithms 2
                        , 3
                         and 4
                        . More details about line 4 are introduced in Section 3.1. New proposals produced by line 3, line 6 and line 8 are added to 
                           H
                         in line 9. Meanwhile, proposals which are unused for several iterations (three iterations in our experiments) are removed from 
                           H
                        .

As shown in Fig. 6, the first step of the approach is proposal generation. In our experiment, the proposals fall into two categories—proposals generated through RANSAC (RANdom SAmple Consensus) and proposals generated through the method described below. The former are short tracklets considering spatio-temporal proximity, and the latter are tracklets considering motion model 
                           
                              m
                              =
                              (
                              p
                              ,
                              v
                              )
                           
                         which describes motion status of a certain target with position p and velocity v.

Given detection set D, we associate each detection 
                           
                              d
                              
                                 t
                              
                              i
                           
                         with a certain motion model 
                           
                              m
                              
                                 t
                              
                              i
                           
                        . The motion model set 
                           M
                         in frame t is described as 
                           
                              
                                 M
                                 t
                              
                              =
                              
                                 {
                                 
                                    m
                                    
                                       t
                                    
                                    1
                                 
                                 ,
                                 
                                    m
                                    
                                       t
                                    
                                    2
                                 
                                 ,
                                 ⋯
                                 ,
                                 
                                    m
                                    
                                       t
                                    
                                    
                                       N
                                       t
                                    
                                 
                                 }
                              
                              ,
                           
                         where Nt
                         is the number of detections in frame t.

A Kalman filter based binary optimization approach is proposed for producing proposals. We convert the model-detection association problem between adjacent frames into a bipartite graph mapping problem. Let

                           
                              (13)
                              
                                 
                                    
                                       V
                                       1
                                    
                                    =
                                    
                                       {
                                       
                                          m
                                          
                                             t
                                          
                                          1
                                       
                                       ,
                                       
                                          m
                                          
                                             t
                                          
                                          2
                                       
                                       ,
                                       ⋯
                                       ,
                                       
                                          m
                                          
                                             t
                                          
                                          
                                             N
                                             t
                                          
                                       
                                       }
                                    
                                 
                              
                           
                        be the set of motion models in frame t and

                           
                              (14)
                              
                                 
                                    
                                       V
                                       2
                                    
                                    =
                                    
                                       {
                                       
                                          d
                                          
                                             t
                                             +
                                             1
                                          
                                          1
                                       
                                       ,
                                       
                                          d
                                          
                                             t
                                             +
                                             1
                                          
                                          2
                                       
                                       ,
                                       ⋯
                                       ,
                                       
                                          d
                                          
                                             t
                                             +
                                             1
                                          
                                          
                                             N
                                             
                                                t
                                                +
                                                1
                                             
                                          
                                       
                                       ,
                                       
                                          d
                                          out
                                       
                                       }
                                    
                                 
                              
                           
                        be the set of detections in frame 
                           
                              t
                              +
                              1
                              ,
                           
                         where d
                        out is a virtual node used to link with motion models which have no suitable detections to link with, e.g. false alarms. The edge set Ebi
                         is defined as

                           
                              (15)
                              
                                 
                                    
                                       
                                          
                                             E
                                             
                                                b
                                                i
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             {
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             |
                                             i
                                             ∈
                                             
                                                V
                                                1
                                             
                                             ,
                                             j
                                             ∈
                                             
                                                V
                                                2
                                             
                                             ,
                                             w
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             <
                                             τ
                                             }
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             ⋃
                                             {
                                             
                                                (
                                                i
                                                ,
                                                
                                                   d
                                                   out
                                                
                                                )
                                             
                                             |
                                             i
                                             ∈
                                             
                                                V
                                                1
                                             
                                             }
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where w(i, j) and τ are respectively the weight of edge between two nodes and the threshold of linking weight.

We generate a bipartite graph 
                           
                              
                                 G
                                 
                                    b
                                    i
                                 
                              
                              =
                              
                                 (
                                 
                                    V
                                    1
                                 
                                 ,
                                 
                                    V
                                    2
                                 
                                 ,
                                 
                                    E
                                    
                                       b
                                       i
                                    
                                 
                                 )
                              
                           
                         to solve the matching problem. A binary variable l
                        
                           i, j
                         is used to indicate whether motion model i ∈ V
                        1 links with detection j ∈ V
                        2 in current frame. Our matching problem can be written as the following binary optimization

                           
                              (16)
                              
                                 
                                    
                                       
                                          
                                             
                                                min
                                                
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                   
                                                   ∈
                                                   
                                                      E
                                                      
                                                         b
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                             y
                                             =
                                             ∑
                                             
                                                w
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                
                                                   l
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       
                                          
                                             
                                             s.t.
                                             
                                             
                                             
                                                l
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             
                                             
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             ∈
                                             
                                                E
                                                
                                                   b
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       
                                          
                                             
                                             
                                             
                                             
                                             
                                             
                                                ∑
                                                i
                                             
                                             
                                                l
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             =
                                             1
                                             
                                             
                                             
                                             
                                             i
                                             ∈
                                             
                                                V
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    
                                       
                                          
                                             
                                             
                                             
                                             
                                             
                                             
                                                ∑
                                                j
                                             
                                             
                                                l
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ≤
                                             1
                                             
                                             j
                                             ∈
                                             
                                                V
                                                2
                                             
                                             −
                                             
                                                {
                                                
                                                   d
                                                   out
                                                
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The objective function Eq. (16) is minimized with respect to three sets of constraints. Eq. (17) converts the optimization problem into a binary optimization problem, and l
                        
                           i, j
                         can be either 0 or 1. Eq. (18) shows each motion model must match a certain detection, including virtual detection d
                        out. Eq. (19) reflects that each detection in the current frame should be associated with one motion model at most.

With the optimization problem solved, proposal set is generated as

                           
                              (20)
                              
                                 
                                    H
                                    =
                                    {
                                    
                                       H
                                       1
                                    
                                    ,
                                    ⋯
                                    ,
                                    
                                       H
                                       
                                          N
                                          h
                                       
                                    
                                    }
                                 
                              
                           
                        where Nh
                         is the number of proposals.

In proposal labeling, tracker maps elements in detection set D with elements in proposal set 
                           H
                        . Proposal energy 
                           
                              E
                              pr
                           
                         which is used to measure the performance of the proposal labeling 
                           
                              
                                 L
                                 pr
                              
                              ,
                           
                         is defined as

                           
                              (21)
                              
                                 
                                    
                                       E
                                       pr
                                    
                                    =
                                    
                                       E
                                       det
                                    
                                    +
                                    
                                       E
                                       tra
                                    
                                 
                              
                           
                        where 
                           
                              E
                              det
                           
                         is defined as

                           
                              (22)
                              
                                 
                                    
                                       E
                                       det
                                    
                                    
                                       (
                                       
                                          h
                                          l
                                       
                                       ,
                                       
                                          d
                                          t
                                          i
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      s
                                                      
                                                         d
                                                         t
                                                         i
                                                      
                                                   
                                                   ·
                                                   
                                                      
                                                         
                                                            ∥
                                                         
                                                         
                                                            h
                                                            l
                                                         
                                                         
                                                            (
                                                            t
                                                            )
                                                         
                                                         −
                                                         
                                                            p
                                                            t
                                                            i
                                                         
                                                         
                                                            ∥
                                                         
                                                      
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   l
                                                   ∈
                                                   
                                                      N
                                                      h
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      s
                                                      
                                                         d
                                                         t
                                                         i
                                                      
                                                   
                                                   ·
                                                   O
                                                
                                             
                                             
                                                
                                                   l
                                                   =
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 s
                                 
                                    d
                                    t
                                    i
                                 
                              
                              ,
                              O
                           
                         are respectively the detection confidence of detection 
                           
                              d
                              t
                              i
                           
                         and the constant cost of the outlier point.

And 
                           
                              E
                              tra
                           
                         is defined as

                           
                              (23)
                              
                                 
                                    
                                       E
                                       tra
                                    
                                    
                                       (
                                       
                                          h
                                          l
                                       
                                       )
                                    
                                    =
                                    γ
                                    +
                                    score
                                    
                                       (
                                       
                                          h
                                          l
                                       
                                       )
                                    
                                 
                              
                           
                        where γ is the punishment for the number of trajectories, and score(hl
                        ) is the goodness of proposal 
                           
                              H
                              l
                           
                         including punishment for occlusion, persistence, speed and length.

Proposal energy 
                           
                              E
                              pr
                           
                         is minimized to obtain a suitable proposal labeling result 
                           
                              L
                              pr
                           
                        . To apply fitting method to these detections in different groups, we can gain tracklet set 
                           
                              T
                              pr
                           
                        . Algorithm 2 shows the process of proposal labeling. Label cost optimization(lines 6) is based on [28].

In group labeling, tracker maps elements in 
                           
                              T
                              pr
                           
                         with elements in group set 
                           K
                        . A trajectory reestimation method (see below) is applied in each group in order to improve the quality of tracklets. Paratactic–tracklet graph is generated with the information of 
                           
                              T
                              pr
                           
                        . Then group set 
                           
                              K
                              =
                              {
                              
                                 K
                                 1
                              
                              ,
                              
                                 K
                                 2
                              
                              ,
                              ⋯
                              ,
                              
                                 K
                                 
                                    N
                                    k
                                 
                              
                              }
                           
                         and number set 
                           
                              M
                              =
                              {
                              
                                 m
                                 1
                              
                              ,
                              
                                 m
                                 2
                              
                              ,
                              ⋯
                              ,
                              
                                 m
                                 
                                    N
                                    k
                                 
                              
                              }
                           
                         are calculated by the method described in Section 3.3.

In the process of trajectory reestimation, two strong constraints are considered: the number of targets in a certain spatio-temporal area and motion similarity. In addition, the outlier points in proposal labeling are taken into. The trajectory reestimation in a group is shown as Algorithm 3, then tracklet set 
                           
                              T
                              gr
                           
                         is gained through the algorithm. Due to the same time interval of video sampling frequency, speed in Algorithm 3 can be represented by the distance between target positions in two adjacent frames.

In track ID labeling, tracker maps elements in 
                           
                              T
                              gr
                           
                         with elements in track ID set 
                           
                              T
                              in
                           
                        . Serial–tracklet graph 
                           
                              
                                 G
                                 in
                              
                              =
                              
                                 (
                                 
                                    V
                                    in
                                 
                                 ,
                                 
                                    E
                                    in
                                 
                                 )
                              
                           
                         is generated with the information of 
                           
                              T
                              gr
                           
                        . 
                           
                              w
                              
                                 st
                              
                              i
                           
                         and 
                           
                              w
                              
                                 en
                              
                              i
                           
                         are defined as

                           
                              (24)
                              
                                 
                                    
                                       w
                                       
                                          st
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                    =
                                    
                                       min
                                       
                                          p
                                          ∈
                                          
                                             P
                                             ex
                                          
                                       
                                    
                                    
                                       ∥
                                       
                                          p
                                          
                                             st
                                          
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                       −
                                       p
                                       ∥
                                    
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    
                                       w
                                       
                                          en
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                    =
                                    
                                       min
                                       
                                          p
                                          ∈
                                          
                                             P
                                             ex
                                          
                                       
                                    
                                    
                                       ∥
                                       
                                          p
                                          
                                             en
                                          
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                       −
                                       p
                                       ∥
                                    
                                 
                              
                           
                        where P
                        ex is the set of exit positions in tracking area. 
                           
                              p
                              
                                 st
                              
                              
                                 (
                                 i
                                 )
                              
                           
                         and 
                           
                              p
                              
                                 en
                              
                              
                                 (
                                 i
                                 )
                              
                           
                         are respectively the positions of start point and end point of tracklet 
                           
                              T
                              i
                           
                        .


                        
                           
                              w
                              
                                 co
                              
                              
                                 (
                                 i
                                 ,
                                 j
                                 )
                              
                           
                         in serial–tracklet graph is defined as

                           
                              (26)
                              
                                 
                                    
                                       w
                                       
                                          co
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      ∥
                                                   
                                                   
                                                      p
                                                      
                                                         st
                                                      
                                                      
                                                         (
                                                         j
                                                         )
                                                      
                                                   
                                                   −
                                                   
                                                      p
                                                      
                                                         en
                                                      
                                                      
                                                         (
                                                         i
                                                         )
                                                      
                                                   
                                                   
                                                      ∥
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                   
                                                   ∈
                                                   
                                                      E
                                                      ser
                                                   
                                                
                                             
                                          
                                          
                                             
                                                λ
                                             
                                             
                                                
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                   
                                                   ∉
                                                   
                                                      E
                                                      ser
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where λ is the constant cost between two unlinked nodes.

As shown in Section 3.4, track ID energy 
                           
                              E
                              in
                           
                         is defined as

                           
                              (27)
                              
                                 
                                    
                                       
                                          
                                             
                                                E
                                                in
                                             
                                             =
                                             
                                                ∑
                                                
                                                   L
                                                   ∈
                                                   L
                                                
                                             
                                             
                                                (
                                                
                                                   w
                                                   
                                                      st
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            (
                                                            1
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                                +
                                                
                                                   w
                                                   
                                                      en
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            (
                                                            end
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                
                                                +
                                                
                                                   ∑
                                                   
                                                      
                                                         (
                                                         i
                                                         ,
                                                         j
                                                         )
                                                      
                                                      ∈
                                                      
                                                         (
                                                         
                                                            L
                                                            
                                                               (
                                                               t
                                                               )
                                                            
                                                         
                                                         ,
                                                         
                                                            L
                                                            
                                                               (
                                                               t
                                                               +
                                                               1
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                                
                                                   w
                                                   
                                                      con
                                                   
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              L
                              =
                              {
                              
                                 L
                                 
                                    (
                                    1
                                    )
                                 
                              
                              ,
                              
                                 L
                                 
                                    (
                                    2
                                    )
                                 
                              
                              ,
                              ⋯
                              ,
                              
                                 L
                                 
                                    (
                                    end
                                    )
                                 
                              
                              }
                           
                         is an active trail (as defined after two paragraphs).

Because tracklets in 
                           
                              T
                              gr
                           
                         are highly confident, we assume that each node should be in an active trail. We can formulate the problem as

                           
                              (28)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                       
                                          
                                             y
                                             =
                                             
                                                ∑
                                                
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                   
                                                   ∈
                                                   
                                                      E
                                                      in
                                                   
                                                
                                             
                                             
                                                c
                                                
                                                   (
                                                   
                                                      v
                                                      i
                                                   
                                                   ,
                                                   
                                                      v
                                                      j
                                                   
                                                   )
                                                
                                                
                                                   l
                                                   
                                                      in
                                                   
                                                   
                                                      (
                                                      i
                                                      ,
                                                      j
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (29)
                              
                                 
                                    
                                       
                                          s.t.
                                       
                                       
                                       
                                          
                                             
                                                l
                                                
                                                   in
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                          
                                       
                                       
                                       
                                          
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             ∈
                                             
                                                E
                                                in
                                             
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (30)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                v
                                             
                                             
                                                l
                                                
                                                   in
                                                
                                                
                                                   (
                                                   v
                                                   ,
                                                   w
                                                   )
                                                
                                             
                                             =
                                             1
                                          
                                       
                                       
                                       
                                          
                                             w
                                             ∈
                                             V
                                             −
                                             {
                                             s
                                             }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (31)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                v
                                             
                                             
                                                l
                                                
                                                   in
                                                
                                                
                                                   (
                                                   w
                                                   ,
                                                   v
                                                   )
                                                
                                             
                                             =
                                             1
                                          
                                       
                                       
                                       
                                          
                                             w
                                             ∈
                                             V
                                             −
                                             {
                                             t
                                             }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Binary linear programming is applied to solve the optimization problem. As a result, we can gain 
                           
                              
                                 L
                                 in
                              
                              =
                              
                                 {
                                 
                                    l
                                    in
                                 
                                 
                                    (
                                    i
                                    ,
                                    j
                                    )
                                 
                                 ,
                                 i
                                 ∈
                                 
                                    V
                                    in
                                 
                                 ,
                                 j
                                 ∈
                                 
                                    V
                                    in
                                 
                                 }
                              
                           
                        . Active edge set E
                        active is defined as

                           
                              (32)
                              
                                 
                                    
                                       E
                                       active
                                    
                                    =
                                    
                                       {
                                       
                                          (
                                          
                                             v
                                             i
                                          
                                          ,
                                          
                                             v
                                             j
                                          
                                          )
                                       
                                       ∈
                                       
                                          E
                                          in
                                       
                                       |
                                       
                                          l
                                          
                                             in
                                          
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                       
                                       =
                                       1
                                       }
                                    
                                 
                              
                           
                        
                     

The active trail 
                           
                              
                                 Trail
                                 i
                              
                              =
                              
                                 {
                                 s
                                 ,
                                 
                                    v
                                    i
                                    
                                       (
                                       1
                                       )
                                    
                                 
                                 ,
                                 
                                    v
                                    i
                                    
                                       (
                                       2
                                       )
                                    
                                 
                                 ,
                                 ⋯
                                 ,
                                 
                                    v
                                    i
                                    
                                       (
                                       n
                                       )
                                    
                                 
                                 ,
                                 t
                                 }
                              
                           
                         from start node s to target node t can be gained through E
                        active.

The tracklets in an active trail Trail(i) are considered the trajectory fragments of target i. Trajectory set 
                           
                              T
                              in
                           
                         is gained by applying B-splines method to these tracklets. Algorithm 4 shows the process of track ID labeling.

@&#EXPERIMENTS@&#


                     Dataset. We have tested our approach on various datasets (both public datasets and actual surveillance sequences) and achieved very competitive results. Here we demonstrate the evaluation results on two public datasets and three surveillance sequences of kindergarten, crossing and school gate. Two public datasets are used to compare our approach with [2] and [24]. The two public sequences are the View_001 (795 frames) of PETS2009-S2L1 and Stadtmitte (179 frames) of TUD dataset. For a fair comparison, we use the same detection set as [2] and [24]. So all tracking approaches are based on the same image evidence input.

To further verify the effectiveness, we evaluate our approach on the several surveillance sequence—kindergarten, crossing and school gate. The scene of kindergarten has two main characteristics: 1) It is very common that children and adults walk in groups. 2) Children are easily blocked by adults due to their height gaps. In addition, the targets in the scene are sometimes blocked by the tree and motorbikes. Then experiments on sequences of crossing and school gate are given. In the scene of crossing, with the camera installed in a low position, target far from the camera is easily blocked by the target near the camera and even the light near the camera. There is also mutual occlusion situation in the scene of school gate.


                     Implementation details. To make this comparison as fair as possible, we use public ground truths, and the detector based on SVM classification of histograms of oriented gradients (HOG) [29] evidence. And we have marked the ground truth of kindergarten, crossing and school by hand.


                     Parameters. The weights α and β are respectively set to the average width and the average height of detections in PTG and STG. Proposal labeling works with parameter 
                        
                           γ
                           =
                           0.1
                        
                      and group labeling does with 
                        
                           
                              C
                              1
                           
                           =
                           0.35
                        
                      and 
                        
                           
                              C
                              2
                           
                           =
                           1.0
                        
                     . Finally, we set λ in track ID labeling to the length of frame diagonal. Parameters are set empirically in our experiment.


                     Evaluation metrics. We use CLEAR MOT
                      to measure tracking result. The multiple object tracking precision (MOTP ↑), multiple object tracking accuracy (MOTA ↑), recall(Rcll ↑), precision(Prcn ↑), the number of false alarms per frame(FAR ↑), the number of mostly(≥ 80%) tracked trajectories (MT ↑), the number of partially (20–80%) tracked trajectories(PT), the number of mostly lost trajectories(ML ↓), the number of false positives (FP ↓), the number of false negatives (FN ↓), identity switching (IDs ↓) and the number of trajectory fragments (FM ↓) are used. ↑ is a positive indicator meaning the higher the value, the better, while ↓ means the lower the value, the better.

Two intermediate results(only using proposal labeling and adding only group labeling) and final result on PETS2009-S2L1 are shown in Table 1. From the tracking results, we find that the partial method (proposal labeling only) can generate low confidence tracklets, while one of the trajectories is tracked partially, due to the detector errors caused by two people close to each other. After adding group labeling, MT increases from 17 to 18, so the problem caused by close people is solved. The missing detections of targets in groups are recovered by group analysis and reestimation, so FN plunges from 405 to 268. Compared with the result of proposal labeling, MOTA and MOTP both increase. Then track ID labeling is also added. Compared with results above, the number of fragments falls from 27 to 20, as a result of improving trajectory integrity. The indicators – MOTA, FN and IDs are all better than before. However, MOTP decreases slightly from 79.3 to 79.1, because the position estimation of missing detections in the gap between two trajectory fragments is not the actual value. For the same reason, Rcll and Prcn both grow.

The results of energy optimization processing in S2L1 and Stadtmitte are shown in Fig. 7, and the solid lines in Fig. 7 represent the relationship between iteration loop processing and the energy optimization. In the S2L1 dataset, our approach only uses 42 iterations to find the optimal result while [24] needs near 400 iterations. In the Stadtmitte dataset, only 12 iterations are needed in our approach while near 40 iterations are needed in [24]. Moreover, our approach outperforms [24] in both two datasets and it shows that group labeling (PTG analysis) and track ID (STG analysis) make the approach more effective.

We implemented our approach in Matlab without code optimization or parallelization and tested it on a PC with 3.0 GHz CPU and 8 GB memory. The computation efficiency of our approach is shown in Fig. 7. As a result, our approach (
                           
                              0.08
                              −
                              0.26
                           
                         s per frame) works faster than that in [2,24] (1–2 s per frame). Therefore, the framework of PSTG improves performance of energy function optimization.


                        PETS2009-S2L1. 
                        Table 2
                         illustrates the results compared with some state-of-the-art approaches on PETS2009-S2L1. Andriyenko et al. [2] convert data association into labeling problem as we do. And Milan et al. [24] are an improvement of Andriyenko et al. [2]. The multiple object tracking precision (MOTA) combines all errors (false positives, false negatives, ID switches) into a percentage, and multiple object tracking precision (MOTP) measures the precision of tracking result. In terms of MOTA and MOTP we have performed the best, so it has proven that our tracking is the best in both error measurement and precision measurement. At the same time, precision as well as FP is improved significatively. However, compared with [24], FN increases, because short tracklets have not formed for some missing detections behind the billboard and tracklet graphs cannot embody isolated outlier points.


                        TUD-Stadtmitte. Comparison with [24] on TUD-Stadtmitte is shown in Table 2. The results are similar with PETS2009-S2L1. Fig. 8
                         illustrates our tracking results on PETS2009-S2L1 and TUD-Stadtmitte.


                        Kindergarten. Tracking results on kindergarten are shown in Table 2. There are eight trajectories in the ground truth, and with our approach, six of them are mostly (≥ 80%) tracked. The rest two trajectories are those of a woman in blue and a man appearing only in the last four frames. The woman in blue is not complete after 70 frames in the video, so that detector cannot detect her successfully. The trajectory of the man is recovered in three of four frames (75%), so it is not mostly (≥ 80%) tracked trajectory. All these indicators compared with [2] are improved significantly. In the video, there is target–block occlusion (as shown in Fig. 9
                        , the woman in light green rectangle and the boy in cyan rectangle are both blocked by the tree) and target–target occlusion (as shown in Fig. 9, the boy in dark green rectangle is blocked by the woman in the magenta rectangle, the woman magenta rectangle is blocked by the woman in black rectangle). Our approach works well in all these situations, and it proves that our approach is effective. Fig. 9 illustrates the results of [2] and our tracking results on kindergarten.


                        Crossing. 
                        Table 2 shows the results on crossing. There are six trajectories in the ground truth. All of them are mostly (≥ 80%) tracked with our approach, while only four are mostly (≥ 80%) tracked with [2]. Compared with [2], most of indicators (MOTA, Rcll, MT, PT, FN, IDs and FM) are improved significantly, and MOTP increases at the same time. In the video, there is target–block occlusion (e.g., as shown in Fig. 10
                        , the two man in right side are both blocked by the light) and target–target occlusion (as shown in Fig. 10, the woman in blue rectangle is blocked by the woman in the light green rectangle). Our approach works well in all these situations, and it proves that our approach is effective. Fig. 10 illustrates the results of [2] and our tracking results on crossing.


                        School gate. Tracking results on school gate are shown in Table 2. There are seven trajectories in the ground truth. Six of them are mostly (≥ 80%) tracked with our approach, but five of them are mostly (≥ 80%) tracked with [2]. MOTA, Rcll, MT, PT, FN and IDs are improved significantly compared with [2]. In the video, there is target–target occlusion (as shown in Fig. 11
                        , the woman in light green rectangle is blocked by the man in the red rectangle). Our approach works well in the situation, and it proves that our approach is effective. Fig. 11 illustrates the results of [2] and our tracking results on school gate.

@&#CONCLUSION@&#

In this paper, a PSTG-based framework for multi-target tracking is proposed to handle long-term occlusion within group and tracking failure caused by interaction of targets. The thesis achieves breakthrough on the paratactic–serial tracklet graph approach describing the correlation among tracklets and a multi-label optimization method for trajectory estimation. Contrary to label cost tracking methods, we avoid the tracking failure caused by interaction of targets through modeling the mutual influence among trajectories. All components of the correlation among tracklets are considered including motion, appearance, group similarity, trajectory integrity and spatio-temporal continuity. In addition, this paper puts forward a multi-label optimization method which embody proposal labeling, group labeling and track ID labeling. And the PSTG energy which can be minimized by multi-label optimization is presented to make the trajectory estimation more accurate. Our experiments demonstrate the validity of our approach on various public datasets and actual surveillance sequences, achieving very competitive results, both visually and in terms of quantitative evaluation with respect to ground truth are also given. Besides improving the tracking accuracy especially with long-term occlusion caused by interaction of targets, the PSTG-based model presents the multi-target association in a social group which is concerned in various applications.

In future work, we plan to integrate more outlier points into our framework to achieve a higher recall rate, thereby further raising the tracking performance. Moreover, the graph-based algorithm we proposed enhance the correlation among tracklets in time domain and it can also be designed to improve the relation in space domain, therefore multi-target tracking in multi-view scene even cross camera tracking can be implemented using our tracklet graph-based approach.

@&#ACKNOWLEDGMENTS@&#

This study was partially supported by the National Natural Science Foundation of China (no. 61272350), the National High Technology Research and Development Program of China (no. 2013AA01A603) and the National Aerospace Science Foundation of China (no. 2013ZC51). Supported by the Programme of Introducing Talents of Discipline to Universities and the Fundamental Research Funds for the Central Universities.

Supplementary material associated with this article can be found, in the online version, at 10.1016/j.cviu.2015.06.002
.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

