@&#MAIN-TITLE@&#APL: An angle probability list to improve knowledge-based metaheuristics for the three-dimensional protein structure prediction

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           Angle probability lists improve knowledge-based protein structure prediction methods.


                        
                        
                           
                           Development of knowledge-based methaheuristics for protein tertiary structure prediction.


                        
                        
                           
                           First principle methods with database information.


                        
                        
                           
                           Amino acid and secondary structure conformational preferences.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Three-dimensional protein structure prediction

Amino acid conformational preferences

Metaheuristics

@&#ABSTRACT@&#


               
               
                  Tertiary protein structure prediction is one of the most challenging problems in structural bioinformatics. Despite the advances in algorithm development and computational strategies, predicting the folded structure of a protein only from its amino acid sequence remains as an unsolved problem. We present a new computational approach to predict the native-like three-dimensional structure of proteins. Conformational preferences of amino acid residues and secondary structure information were obtained from protein templates stored in the Protein Data Bank and represented as an Angle Probability List. Two knowledge-based prediction methods based on Genetic Algorithms and Particle Swarm Optimization were developed using this information. The proposed method has been tested with twenty-six case studies selected to validate our approach with different classes of proteins and folding patterns. Stereochemical and structural analysis were performed for each predicted three-dimensional structure. Results achieved suggest that the Angle Probability List can improve the effectiveness of metaheuristics used to predicted the three-dimensional structure of protein molecules by reducing its conformational search space.
               
            

@&#INTRODUCTION@&#

Proteins are biological macromolecules responsible for the execution of different and important functions in living systems (Lesk, 2002; Tramontano, 2006). From a structural perspective, protein is an ordered linear chain of building blocks known as amino acid residues. Each protein is defined by its unique sequence of amino acid residues that causes the protein to fold into a particular three-dimensional (3-D) shape. The biochemical function of a protein is close related with its three-dimensional structure (Lehninger et al., 2005). Predicting the folded structure of a protein (PSP problem) only from its amino acid sequence, remains a challenging problem in Computer Science, Mathematics, Physics, Biology and Chemistry (Lander and Waterman, 1999; Wooley and Ye, 2010; Dorn et al., 2014). The challenge arises due to the combinatorial explosion of plausible shapes that a protein sequence can assume (Levinthal, 1968).

Determining the 3-D structure of a protein is both experimentally expensive (due to the costs associated) and time consuming (Guntert, 2004). The difficulty in determining and finding out the 3-D structure of proteins has generated a significant discrepancy between the volume of sequences of amino acid residues produced by Genome Projects
                        1
                     
                     
                        1
                        
                           http://genomics.energy.gov.
                      and the number of 3-D structures of proteins determined by experimental methods (X-Ray, NMR, etc). Even though, this small proportion represents a rich source of information to be explored by computational methods for the PSP problem (Greer, 1990; Johnson et al., 1994; Turcotte et al., 2001; Dorn et al., 2011). Conformational preferences are acquired from protein templates stored in the Protein Data Bank (PDB) (Berman et al., 2000) and used in prediction tasks (Hovmoller and Ohlson, 2002; Dorn et al., 2013, 2014a).

The 3-D PSP problem in computational complexity appears to be a NP-complete problem (Guyeux et al., 2014). Several computational strategies and algorithms have been proposed as a solution to the PSP problem. These methods can be classified in four classes (Floudas et al., 2006; Dorn et al., 2014): (i) first principle methods without database information (Osguthorpe, 2000); (ii) first principle methods with database information (Srinivasan and Rose, 1995; Rohl et al., 2004); (iii) threading or fold recognition methods (Bowie et al., 1991; Jones et al., 1992; Bryant and Altschul, 1995; Turcotte et al., 1998) and (iv) comparative modeling methods (Sánchez and Sali, 1997; Martí-Renom et al., 2000). Group ii, iii and iv are often referenced as knowledge-based methods. These methods are able to perform fast and effective prediction of protein 3-D structures when template structures and fold libraries are available (Kolinski, 2004). Analysis of the last Critical Assessment of protein Structure Prediction (CASP10)
                        2
                     
                     
                        2
                        
                           http://predictioncenter.org.
                      experiments reveals that the best results are achieved by methods that use some knowledge from experimental databases (Kryshtafovych et al., 2014a).

A knowledge-based prediction method is fully dependent on the quality of structural models and how they are represented and used (Dorn et al., 2014). In this article, we propose a strategy to obtain and represent conformational preferences of amino acid residues from experimentally determined protein structures. Conformational preferences of amino acid residues in protein and its secondary structure are obtained from PDB and represented as an Angle Probability List (APL) (Dorn et al., 2013). This information represents a rich source of data and can be used in knowledge-based prediction methods. In this paper, we analyze the impact of using APL in metaheuristics.

The paper is organized as follows: Section 2 presents fundamental concepts of protein structure; conformational preferences of amino acid residues of proteins; and metaheuristics. Section 3 shows the developed Angle Probability List and the standard implementation of two metaheuristics applied to evaluate our method. In Section 4 we discuss the results using our approach in different metaheuristics. Finally, the last section concludes the paper and points out some future works.

Proteins are composed of ordered linear chains of amino acid residues linked by peptide bonds (Fig. 1
                        ) (Liljas et al., 2009; Lehninger et al., 2005; Lesk, 2010). An amino acid residue is a small molecule containing an amino group (H
                        3
                        N
                        +), a carboxyl group (COO
                        −), and a hydrogen atom attached to a central α carbon (C
                        
                           α
                        ). In addition, each amino acid also has a R organic group (also called side-chain) attached to the C
                        
                           α
                        . The side-chain gives to the amino acid its propriety. A peptide bond is formed when the carboxyl group of one residue reacts with the amino group of other residue, thereby releasing a water molecule (Lehninger et al., 2005).

The linear sequence of amino acid residues is known as the protein's primary structure. Frequently, a fragment of amino acid residues adopts the same conformation (Tramontano, 2006). Local segments of the protein main-chain conformation define the secondary structure. These structures are defined by the presence of hydrogen bonds between the amino and carboxyl groups of the polypeptide chain. There are preferred conformations like α-helices, β-sheets, β-turns, among others (Lehninger et al., 2005). In different proteins, helices and sheets are combined in many ways to create different spatial arrangements of the polypeptide chain. (Lesk, 2010). This is called the protein tertiary structure (3-D) and represents the functional/native state of the protein (Lesk, 2002; Tramontano, 2006).

There are different ways to represent a polypeptide structure (Dorn et al., 2014): all-atom model (Osguthorpe, 2000), united atom model (Khalili et al., 2005), rotamers (Shapovalov and Dunbrack, 2011), and torsion angles (Cutello et al., 2006; Dorn et al., 2011, 2013). Due to the planarity of the peptide bond, the conformation of a peptide backbone is mainly described by two torsion angles per amino acid residue (Lehninger et al., 2005): ϕ (phi) and ψ (psi). In this work, we represent a polypeptide chain by its set of main-chain and side-chain torsion angles (ϕ, ψ and χ angles). The main advantage of this representation is the reduced number of variables to control and optimize when predicting the polypeptide structure. The set of consecutive main-chain torsion angles describes the internal rotation of the protein (Lesk, 2002; Scheef and Fink, 2003) and causes the polypeptide to fold into a particular three-dimensional shape.

The peptide bond (C–N bond – Fig. 1 
                        ω angle) is not involved in the molecular rotation, due to its double-bond character. The rotation is only allowed around the N–C
                        
                           α
                         and C
                        
                           α
                        –C bonds. The angles of these bonds are known as phi (ϕ) and psi (ψ) angles, respectively (Lodish et al., 1990; Lesk, 2002). The possible conformation of a given polypeptide depends on the amino acid chemical properties. The side-chains of amino acid residues also plays important roles in the conformation of a protein molecule. The number of χ angles in these side-chain depends on the amino acid residue (Liljas et al., 2009) (more details can be found in Section 2.3).

Metaheuristics are often used to deal with hard optimization problems (Glover and Kochenberg, 2003; Resende et al., 2010), because of their ability to find satisfactory solutions with less computational effort than exact methods. Metaheuristics designates a class of approximate computational methods that optimizes a problem by an iterative generation process (Goldberg, 1989; Blum and Roli, 2003; Glover and Kochenberg, 2003; Battiti et al., 2008; Talbi, 2009; Mucherino and Seref, 2009; Luke, 2009). This process guides a subordinate heuristic by intelligently combining different concepts for exploring and exploiting the search space (Osman and Kelly, 1996; Osman and Laporte, 1996). Metaheuristics make few or no assumptions about the problem being optimized and can search vast spaces of candidate solutions and apply two strategies of intensification and diversification in the effective exploration of the search space. The first one (intensification) eliminates the search space by examining neighbors of elite solutions, while the last one (diversification) is a stochastic component that explores unvisited regions. Metaheuristics do not guarantee an optimal solution, and they are used to deal with combinatorial optimization problems in which an optimal solution is sought over a discrete search-space (Luke, 2009).

Examples of metaheuristics are: Simulated Annealing (SA) (Kirkpatrick et al., 1983; Granville et al., 1994), Particle Swarm Optimization (PSO) (Kennedy, 2003; Trelea, 2003), Genetic Algorithms (GAs) (Goldberg, 1989), etc. Two of the most popular metaheuristics applied in the field of 3-D protein structure prediction are the Genetic Algorithms (Dandekar and Argos, 1992; Le Grand and Merz, 1993; Sun, 1995; Pedersen and Moult, 1997; Hoque et al., 2006) and Particle Swarm Optimization (PSO)(Meissner and Schneider, 2007; Kondov, 2013). GAs are adaptive heuristic search algorithms based on the evolutionary ideas of natural selection and genetics (Luke, 2009). GAs are modeled through the use of a population of individuals representing solutions, which undergo selection in the presence of variation-inducing operators such as mutation and recombination. For every individual is calculated a fitness value that indicates how good is the solution. For each iteration of the algorithm, called a generation, different individuals are combined by chance and the new solution formed by this operation is used in the new population. It is also common to use some mechanism to maintain the variability of the individuals, decreasing the chances of being trapped in a local minimum (Kirkpatrick et al., 1983). Dorn et al. (2013), for example, combines a Genetic Algorithm, structural information from PDB and a Local Search operator for the 3-D protein structure prediction problem. In Dorn et al. (2011) a Genetic Algorithm is combined with a structured population, and it is hybridized with a path-relinking procedure that helps the algorithm to escape from the local minimum. Cutello et al. (2006) use a Genetic Algorithm to solve a multi-objective representation of protein structure. Park (2005) uses a Genetic Algorithm for fragment assembly to find low-energy conformations. Hoque et al. (2009) present a comprehensive review of the application of GA in the protein folding problem.

In a Particle Swarm Optimization algorithm, the potential solutions, called particles, fly through the problem space by following the current optimum solutions. Meissner and Schneider (2007) built a PSO algorithm to optimize backbone geometries of proteins considering secondary structure information in the optimization process. In Kondov (2013), a distributed parallel Particle Swarm Optimization algorithm was developed for protein structure prediction problem. Lin and Hsieh (2009) presents a hybrid PSO/GA algorithm to search for the native structure of a protein molecule in a hydrophobic-hydrophilic lattice model representation.

Despite the advances, metaheuristics still have to deal with the challenge of vast conformational search spaces caused by the different combination of amino acid residues. To address this challenge, we developed an approach to obtain conformational preferences of amino acid residues in protein templates based on its secondary structure. This information represented as an Angle Probability List was used to reduce the protein conformational search space. Section 3 describes the developed knowledge-based metaheuristics for 3-D protein structure prediction.

The ϕ and ψ torsion angles of a protein molecule (Fig. 1) can assume, theoretically, any value between −180∘ and +180∘. However, some combinations are prohibited by steric interferences between atoms from the main-chain and atoms from the side-chain (Hovmoller and Ohlson, 2002). The allowed and prohibited values for the torsion angles ϕ (x-axis) and ψ (y-axis) are graphically demonstrated by the Ramachandran plot (Ramachandran and Sasisekharan, 1968). Despite these prohibited combinations of the phi and psi torsion angles, proteins can still assume several conformations. The stable arrangement of segments of amino acid residues of the polypeptide shape structural patterns (Lehninger et al., 2005) and represents the secondary structure of a polypeptide (Branden and Tooze, 1998; Scheef and Fink, 2003; Andersen and Rost, 2003). Regularity in the spatial conformation is maintained through these intermolecular interactions. Identical conformations have similar torsion angles values. The two most common secondary structures are α-helices (Pauling et al., 1951) and β-sheets (Pauling and Corey, 1951). There are other periodic conformations (coils and turns), but the α-helix and β-sheets are the most stable and can be considered as the main elements in 3-D structures (Liljas et al., 2009; Andersen and Rost, 2003; Tramontano, 2006).

Amino acid residues in a secondary structure usually adopt a particular set of backbone torsion angles (ϕ and ψ) (Hovmoller and Ohlson, 2002). In this article, we analyze the conformational preferences of amino acid in proteins according to its secondary structure. Fig. 2
                         shows the Ramachandran plot of six most abundant secondary structure conformational states present in 6650 proteins obtained from PDB (for more details, see Section 3.1).

Knowledge-based protein structure prediction methods are reasoned on the observation that when a new fold is discovered, it is composed of common structural motifs or fragments from super-secondary structures of proteins with known templates (Lesk, 2002; Tramontano, 2006). Conformational preferences (phi and psi) and secondary structure propensities obtained from experimentally determined proteins can be taken into account by knowledge-based metaheuristics (Dorn et al., 2013, 2014) developed for the PSP problem. In following sections we described how we combine the conformational preferences of amino acid residues with its secondary structure information to build the Angle Probability List (APL), and to apply this into a knowledge-based metaheuristics for the PSP problem.

@&#MATERIAL AND METHODS@&#

The success of a knowledge-based three-dimensional protein structure prediction approach depends heavily on the quality of the structural protein templates obtained from PDB and how this information is represented and used (Dorn et al., 2014). We combine the conformational preferences of amino acid residues (AA, torsion angles) in proteins with their secondary structure information (SS). To that end, we selected a set of 6,650 protein structures from PDB. All 3-D protein structures were experimentally determined by X-ray diffraction with resolution ≤ 2.0Å and stored in PDB until December 2014. We remove all structures with R-factor greater than 0.2. If homologous protein chains with sequence identity at most 30% were found, only one of them was retained. From these protein 3-D structures there was a set of 2,670,182 amino acid residues. Another filter was applied for atoms from the backbone, selecting residues with b-factor ≤ 30Å2 and occupancy equal to 1, which leaves us with 2,225,475 amino acids to further analysis. Similar parameters to filter PDB data were used before by Hovmoller and Ohlson (2002).

We used STRIDE (Frishman and Argos, 1995; Heinig and Frishman, 2004) to assign the secondary structure of each amino acid residue. STRIDE implements an eight secondary structure model: B, E, H, G, I, b, C and T. STRIDE assigns the shortest α-helix (H) if it contains at least two consecutive i → i + 4 hydrogen bonds. The hydrogen bond patterns may be ignored if the ϕ and ψ angles are unfavorable. This definition is also used for 3
                        10-helices (state G with i → i + 3 hydrogen bonds) and for π-helices (state I with i → i + 5 hydrogen bonds), with the empirical hydrogen bond criterion (Andersen and Rost, 2003). The sheet category does not distinguish between parallel and anti-parallel sheets. The β-sheet (E) is composed by a minimum of two residues in each one of five possible hydrogen bond conformations. Single residue sheets, that is, β-bridges are labeled as B for the three hydrogen bond conformations and as b for the remaining two (Andersen and Rost, 2003). Turns T are assigned according to the ϕ and ψ angles of residue i + 1 and i + 2. The C symbol is used whenever none of the above structure requirements is satisfied. We observe a small number of experimental data, less than 1%, with amino acid residues in I (π-helix) and b (isolated bridge) conformational states. Thus, we only consider six conformational states for further analysis: H (α-helix), G (310-helix), E (β-sheet), B (β-bridge), T (Turn) and C (Coil).


                        Table 1
                         summarizes the conformational pattern of the amino acid residues obtained from the 6650 selected protein structures. As can be observed, the most common secondary structures in protein are α-helix (≈34%) and β-sheet (≈25%). Turn and coils represent ≈35% of the secondary structures. Leucine (LEU – 9.3%), Alanine (ALA – 8.7%), Valine (VAL – 7.5%) and Glycine (GLY – 7.5%) are the most common amino acid residues presented in protein templates and together represent more than 33.0% of the total amino acid residues. Cystine (CYS – 1.2%), Triptophane (TRP – 1.6%), Methionine (MET – 1.7%) and Histidine (HIS – 2.4%) are the amino acid residues with lowest occurrence.

For each amino acid residue we compute the dihedral angles ϕ and ψ. We developed a database schema to store all achieved structural information from PDB: torsion angles and secondary structure. We analyzed the conformational preference (dihedral angles) according with the amino acid residue and its secondary structure. From the AASS dataset, we compute Ramachandran plots for each set of amino acid residues belonging to a secondary structure and analyze its conformational preferences. For a given secondary structure we can have different conformational preferences (ϕ and ψ) depending on the amino acid residue. This can be clearly observed when we inspect the conformational preference of amino acid residues in coil and turn. Fig. 3
                         shows the conformational preferences of amino acid residues in turn secondary structure.

As can be observed, amino acid residues in the same secondary structure have their particular conformational preferences (ϕ and ψ). Fig. 4
                         shows the conformational preferences of amino acid residues in coil secondary structure. We observed that in the same secondary structure exists different preferences for ϕ and ψ torsion angles when we analyzed its occurrence in each one of the 20 amino acid residues. Conformational preferences are crucial to the development of knowledge-based protein structure prediction methods. There are many studies in the literature indicating the presence of conformational patterns in protein sequences and its secondary structure (Xia and Xie, 2002; Moelbert et al., 2004; Ting et al., 2010). This structural information can be used to reduce the protein conformational search space. The conformational preferences of amino acid residues in other secondary structures (α-helix, 3
                        10-helix, β-sheet and β-bridge), can be found in supplementary materials.

To use this information in a knowledge-based approach we built an Angle Probability List (APL) H
                        
                           aa,s
                         of [−180, 180]×[−180, 180] cells for each amino acid residue (aa) and secondary structure (s). Each cell (i,j) has the number of times that a given amino acid residue aa in secondary structure s has a pair of torsion angles (i≤ϕ<i+1, j≤ψ<j+1). Then, for each amino acid residue and secondary structure we compute the APL
                        
                           aa,s
                         (Eq. (1)) that represents the normalized frequency of each pair. Each list was sorted from the highest to the lowest frequency. A higher frequency associated with a pair ϕ and ψ indicates that this combination is more common in nature and should have a higher chance of be selected by a metaheuristic.


                        
                           
                              (1)
                              
                                 
                                    APL
                                    
                                       aa
                                       ,
                                       s
                                    
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 =
                                 
                                    
                                       
                                          H
                                          
                                             aa
                                             ,
                                             s
                                          
                                       
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    
                                       ∑
                                       (
                                       
                                          H
                                          
                                             aa
                                             ,
                                             s
                                          
                                       
                                       )
                                    
                                 
                                 ,
                              
                           
                        
                     

When we associate these information (type of amino acid residue, secondary structure state and frequency) a valuable information that can be used to predicted new 3-D protein structures is obtained. We computed 120 APLs (20 amino acid residues × 6 secondary structures) and used this information in two different metaheuristics, Genetic Algorithm (Section 3.2) and Particle Swarm Optimization (Section 3.3), to generate more accurate solutions. Fig. 5
                         schematizes the construction of the Angle Probability List (APL) from experimental-determined three-dimensional protein structures. APL are used in metaheuristics with the purpose of reducing the conformational search space of proteins. Sections 3.2 and 3.3 describe the implementation of two standard metaheuristics used in our experiments to test the effectiveness of APL.

We developed a knowledge-based Genetic Algorithm to search the protein conformational space. APLs are used to speed up the search and prediction of the three-dimensional structure of proteins. A standard implementation of a Genetic Algorithm was combined with a structured population (Ericsson et al., 2002), the APL of each amino acid and the secondary structure obtained from PDB were incorporated and used to generate candidate solutions. Algorithm 3.1 shows the general structure of the proposed method. We represent an individual as a vector of size n belonging to the domain of real numbers (using their floating point representation). Each position of this vector represents a residue's main-chain and side-chain set of torsion angles (Fig. 1).


                        
                           
                              
                           
                         
                        Algorithm 1: GA for the 3-D PSP Problem.

For each amino acid residue aa of the target protein sequence, torsion angles (ϕ and ψ) are obtained from the APL using the steps described in Algorithm 3.2. Each pair of values for (ϕ, ψ) has an associated probability of being selected.


                        
                           
                              
                           
                         
                        Algorithm 2: Getting ϕ and ψ for new individual.

Torsion angle pairs with greater probability are more likely to be selected. Once we have a pair, we add a random real value between − radius and + radius to each torsion angle ϕ and ψ to reach surrounding regions in the Ramachandran plot (Algorithm 3.2, lines 5–10). We consider a radius = 1° to create the initial population. Side-chain torsion angles (χ angles) are generated using our AASS dataset, and the angles are selected with amino acid residue dependency, secondary structure dependency and the backbone angles (ϕ and ψ angles) dependency. Population size was fixed on 100 individuals and was structured in classes (Ericsson et al., 2002). The fittest 10% of the individuals are in class A, the 50% next fit ones are in class B, and the remaining 40% are in class C.

The crossover operation, showed in Algorithm 3.1, creates a new individual called offspring using information from two selected parents, Algorithm 3.1 – line 8). Parent
                        1 and parent
                        2 are chosen at random from classes A and B+C, respectively (Algorithm 3.1 – lines 6 and 7). The offspring is composed by 50–70% amino acids residues from Parent
                        1. The remaining amino acid residues are obtained from parent
                        2. Then, the offspring is added to the population of the next generation.

If the population of a GA simulation has lost most of its diversity, the fitness values may not grow further or may take a lot of generations to display some improvement. Taking this in mind, each offspring is submitted to a Diversity Control (DC) operator (Algorithm 3.1 - line 9). The DC operator compares the set of dihedral angles of the current offspring against the individual solutions from the current population. The offspring is maintained if there is no repeated individual; otherwise a new offspring is generated.

For the next generation, all individuals from class A are automatically promoted. The class B is composed of individuals from the crossover function. A new class C is entirely created in the same way as the initial population, but with a 2.0° radius. When the new population is complete, the individuals are sorted by their energy value (Section 3.4) in a way that, at the end of each generation, the current best solution is always in the top of the population.

We implemented a standard Particle Swarm Optimization algorithm that incorporates APL. The PSO algorithm (Algorithm 3.3) (Eberhart and Kennedy, 1995; Ebenhart, 1995) was inspired by the social behavior of groups of animals such as flocking of birds and a swarm of insects. The algorithm works with a population (swarm) of candidate solutions (particles) generated by the Angle Probability List. These particles move in the search space in accordance with a score function (Section 3.4). The movement of the particles is guided by their best position in the search universe, and the best position of the entire swarm. When improved positions are discovered, they will then guide the movements of the swarm. The process is repeated and it is expected that a satisfactory solution will eventually be found. To carry out global optimization of the energy function of proteins the PSO was performed as described by Kondov and Berlich (2011). When calculating the velocity, the algorithm takes into account an inertia parameter (constant and equal to 0.4) that along with the previous velocity form the inertial term, which is deterministic. There are two other terms in the equation of particle velocity, both stochastic, which relate to cognitive and social terms. Cognitive term takes into consideration the best position of the particle and a cognitive coefficient (c1), while social term takes into consideration the best position of the swarm and a social coefficient (c2), both coefficients are constant and equal to 2.0. The particle new position is updated by adding the current position and the velocity.


                        
                           
                              
                           
                         
                        Algorithm 3: PSO for the 3-D PSP Problem.

We use a potential energy function to evaluate the candidate solutions of both metaheuristics. This function describes, for the structure of each solution, the internal energy value related to the native/functional state of the protein. The goal for the three-dimensional protein structure prediction problem is to find a conformation with the minimum of potential energy. The energy function incorporates two types of terms: bonded and non-bonded (MacKerrel, 2010). The Rosetta scoring function implemented by PyRosetta (Chaudhury et al., 2010) was used. PyRosetta is a Python-based implementation of the Rosetta (Rohl et al., 2004) molecular modeling suite
                           3
                        
                        
                           3
                           
                              https://www.rosettacommons.org.
                        .

Rosetta energy function considers over than 20 energy terms, most of them are derived from knowledge-based potentials (Combs et al., 2013). The function count with Newtonian physics-based terms, including a 6–12 Lennard–Jones potential and a solvation potential. The 6–12 Lennard–Jones potential is split into two terms, an attractive term and a repulsive term, for all van der Walls interactions. The Lazaridis-Karplus model (Lazaridis and Karplus, 1999) for implicit solvation is used and penalizes the burial of polar atoms. Interatomic electrostatic interactions are captured through a pair potential and an orientation-dependent hydrogen bond potential for long-range and short-range hydrogen bonding. In addition to the electrostatic terms, Rosetta all-atom scoring function contains terms that dictate side chain conformations according to the Dunbrack rotamer library (Shapovalov and Dunbrack, 2011) for a particular amino acid given a pair of phi/psi angles, and preference for the phi/psi angles in a Ramachandran plot (Combs et al., 2013). The final energy value is the sum of all weighted energy terms. These weights were assigned by talaris2013 (Rohl et al., 2004; Song et al., 2011; Leaver-Fay et al., 2013; O’Meara et al., 2015), which is currently the default weights for scoring full-atom structure in Rosetta.

We performed two different experiments to test the effectiveness of the Angle Probability Lists. The first experiment (Section 4.1) aims to test the APL with the two different metaheuristics described in Section 3.2 and 3.3. For the second experiment (Section 4.2) we select a larger set of protein sequences to test APL with the metaheuristic that achieves better results in the first experiment. All algorithms were implemented in Python Language, and tests were executed in a Linux x86_64 environment of a SuperWorkstation with Intel Xeon CPU E5-2650 2.00GHz with 32GB of RAM. The results were analysed in terms of structural and stereochemical quality.

For the first experiment, a set of 6 target protein sequences were selected from PDB to test the proposed computational strategy. Table 2
                         presents details of the target protein sequences. Column 2 shows the reference of protein structure, column 3 shows its size and column 4 represents the Secondary Structure Content of each protein. We select these study cases to test our method with different classes of polypeptides with different folding patterns. Due to the complexity of the problem, increasing the size of a selected protein also implies increasing the minimum time to achieve a suitable structure, in light of this limitation, larger proteins were not selected.

Protein sequences of Table 2 were submitted to the metaheuristics described in Sections 3.2 and 3.3, with the objective of validate the APL approach. We also tested both algorithms with angles randomly chosen from an [+180.0°, −180.0°] interval. For each target sequence, the algorithm ran for 15 cycles of 12h.

For stereochemical and structural analysis, we selected the solutions that at the last simulation presents the result with the lowest potential energy. The quality of the predicted structures were evaluated by similarity comparisons with the structures of the experimental proteins obtained from PDB (Eq. (2)).

Quality measurements have been made in terms of the root mean square deviation (RMSD) between the position of the C
                           
                              α
                            atoms of the predicted and the experimental structures. The amino acid residues in the extremity of structure (N-terminal and C-terminal) were not considered due its high flexibility. The RMSD measure was calculated using PROFIT available in (http://www.bioinf.org.uk/software/profit).


                           
                              
                                 (2)
                                 
                                    
                                       
                                          RMSD
                                       
                                    
                                    (
                                    a
                                    ,
                                    b
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      n
                                                   
                                                   ∥
                                                   
                                                      r
                                                      ai
                                                   
                                                   −
                                                   
                                                      r
                                                      bi
                                                   
                                                   
                                                      ∥
                                                      2
                                                   
                                                
                                             
                                          
                                          /
                                          n
                                       
                                    
                                    ,
                                 
                              
                           where r
                           
                              ai
                            and r
                           
                              bi
                            are vectors representing the positions of the same atom i in each of two structures, a and b respectively, and where the structures a and b are optimally superimposed.


                           Fig. 6
                           , shows the best results for the GA and PSO algorithms with and without using APL. RMSD values of the predicted structure with the lowest energy observed among the 15 runs are shown below of each Cartoon representation in Fig. 6. We also report the lowest RMSD value (between parenthesis) found at the final generation of each metaheuristic. Through visual inspection, it is possible to notice that predicted structures using the APL are well-formed and has similar fold to the experimental-determined structure. Analysing the RMSD values, is possible to observe that the use of APL contributes to finding better solutions. Predicted structures without using APL present, in some cases, RMSD values close to the predicted structures using APL, nevertheless, when we analyze the structural quality of these structures we note that they are not well-formed.


                           Table 3
                            (columns 2–3), presents the energy value of the structures in the Fig. 6. In these columns, between parenthesis, it is the energy of the structure with lowest RMSD. Columns 4–5 shows the average energy of all 15 runs. The highlighted results (boldface) represent the best energy found between the two metaheuristics. Observing Table 3, it is possible to affirm that the use of APL in both metaheuristics converged to lower energy values, however, this energy does not always correspond to the lowest RMSD value presented in Fig. 6. In terms of energy (Table 3), the Genetic Algorithm using the APL achieved the lowest values in each one of the 6 target protein sequences. In terms of lowest RMSD (Fig. 6), only the structure with PDB ID 2M7T achieved better results without using the APL, all the other cases the GA solution using the APL reached lowest RMSD values. Table 3 demonstrates that the standard deviation (STD) of the average energy in the both metaheuristics presents lower values when APL was used.

Secondary structure analysis of the predicted structure with lowest energy using APL were performed with STRIDE (Heinig and Frishman, 2004). In this analysis we compare the secondary structure contents of the predicted structures against the secondary structure of the experimental structures. We calculate the percentage of correctly classified secondary structure of residues using Q-index (Eq. (3)). The secondary structure states from STRIDE was reduced to four states using the following schema: T; H and G to H; E, B to E; and all other states to C. Table 4
                            shows the Q-index values for each final state computed by Eq. (4).


                           
                              
                                 (3)
                                 
                                    
                                       Q
                                       i
                                    
                                    (
                                    %
                                    )
                                    =
                                    
                                       
                                          #
                                             
                                          of
                                             
                                          AA
                                             
                                          correctly
                                             
                                          
                                             predicted
                                             i
                                          
                                       
                                       
                                          #
                                             
                                          of
                                             
                                          AA
                                             
                                          in
                                             
                                          
                                             class
                                             i
                                          
                                       
                                    
                                    ×
                                    100
                                 
                              
                           
                           
                              
                                 (4)
                                 
                                    Q
                                    4
                                    (
                                    %
                                    )
                                    =
                                    
                                       
                                          ∑
                                          #
                                             
                                          of
                                             
                                          AA
                                             
                                          correctly
                                             
                                          
                                             predicted
                                             i
                                          
                                       
                                       
                                          ∑
                                          #
                                             
                                          of
                                          AA
                                             
                                          in
                                             
                                          
                                             class
                                             i
                                          
                                       
                                    
                                    ×
                                    100
                                 
                              
                           where i ϵ{H, E, T, C}.

As can be observed in Table 4, helices secondary structures was well predicted by both metaheuristics using APL (98.96%), however, sheets secondary structure proved to be difficult to perform in our method. These sheets structures are not well formed due to the coils and turns regions that have a huge search space, even with knowledge from APL. Structures without the APL information, both metaheuristics failed to predict any regular secondary structure (helix or sheet) (Fig. 6).

Distribution of the amino acid residues in the Ramachandran plot and the stereochemical quality of the 3-D structures predicted by our method were analyzed by MolProbity (Davis et al., 2007; Chen et al., 2009). For this analysis, we consider the structure with the lowest energy obtained with and without the APL in both metaheuristics. Table 5
                            summarizes the achieved results for the stereochemical analysis. Column 2 represents the percentage of poor χ angles, column 3 and 4 show, respectively, the percentage of backbone angles considered outliers and the percentage of angles in the Favorable region of Ramachandran Plot. Column 5 shows the number of steric clashes (clash scores) and column 6 represents the MolProbity general score, which combines the clash score, evaluation of poor χ angles, and Ramachandran plot. The first value of each column represents the structure with the lowest energy using APL and the second value (between parenthesis) represents the structure with the lowest energy computed without the APL. Analysis of the MolProbity general score reveals that better solutions were found when the APL was used. It is also noticeable that the metaheuristic PSO, implemented using the APL, achieved a little higher accuracy in the scope of Ramachandran plots; otherwise the GA using APL produced 0% of Poor Rotamers and Ramachandran Outliers, and a better MolProbity score in all tests.

With the first experiment, we observed that among the two standard implementations of metaheuristics, the Genetic Algorithm obtained better results. Thus, we selected the GA to validate our knowledge-based approach with a larger set of proteins sequences. The results obtained with the second experiment is described in Section 4.2.

To evaluate the effectiveness of the use of the APL we select a larger set of proteins to test our method with different classes of polypeptides with distinct folding patterns and sizes. These structures were tested for the Knowledge-based Genetic Algorithm (GA) and executed for 15 cycles of 24h. Table 6
                         shows the set of 20 target protein sequences used to test our knowledge-based approach with the GA. In order to validate the APL approach, we also tested the GA with torsion angles randomly chosen from an [+180.0°, −180.0°] interval. Predicted structures were analyzed in terms of stereochemical and structural quality.

We calculate the root mean square deviation between the position of experimental and predicted three-dimensional structures. Table 7
                           , column 3, 4 and 7 shows respectively the RMSD value of the predicted structure among the 15 runs with the lowest energy, the lowest RMSD and the average RMSD with its standard deviation. The results were organized into two groups P1 to represent solutions using the APL and P2 to represent predicted solutions without the APL.

Columns 2, 5 and 6 show, respectively, the lowest energy found by our method among the 15 runs, the energy of the solution with the lowest RMSD and the average energy with its standard deviation. As can be observed, the use of APL contributes to obtaining the best RMSD and energy values. In average, the APL approach achieved better results in all cases. Structures with simpler fold, like 3P7K and 2MTW, and structures with small size, such as 1K43 and 1L2Y, presents the best results in terms of RMSD. Moreover, structures with a complex folding, such as 2P5K and 1AB1, and structures with larger size, like 2PMR and 1AIL, resulted in higher RMSD, however always presents better folding when using the APL. Highlighted results in Table 7, show the better score between P1 and P2.

Our primary goal in this work was to validate the use of the APL approach in metaheuristics developed for the PSP problem. We implemented a standard version of GA to test the effect of using APL in these methods. Even though the difficult to compare our method with other predictors, column Ref. of Table 7 shows the RMSD values achieved by other prediction methods. All these methods implement more sophisticated metaheuristics. Although, our method achieved comparable results in terms of secondary structure content and RMSD.

Predicted three-dimensional structures were analysed in terms of secondary structure content. We ran STRIDE (Heinig and Frishman, 2004) for the lowest energy predicted structure. We calculated the percentage of the correctly classified secondary structure of residues using Q-index described in Equation 3. Table 8
                            summarizes the achieved results which reveals similar conclusion as Table 4 (Section 4.1.1). As can be observed APL provides good results for helix prediction (97.01%), and regular results in the prediction of irregular secondary structure such as coil (72.57%).

Visual inspection of predicted structures presented in Fig. 7
                            reveals that helix structures are well formed. When comparing the topology of the protein backbone of the predicted structures against the experimental ones it is possible to observe that the topologies are similar. We observed that the APL approach combined with the standard implementation of GA did not present good results for turn secondary structure, which affect directly the formation of β-sheet secondary structures. Fig. 7 shows the predicted structures with the lowest energy (green), the predicted structure with the lowest RMSD (blue) and the experimental structural (red). We observed that for tests without APL there was no formation of any regular secondary structures. Thus, we can affirm that the APL approach corroborates for the prediction of native-like structures.

We also analyzed the stereochemical quality of predicted structures using MolProbity (Davis et al., 2007). Table 9
                            summarizes the stereochemical results for Clash and MolProbity score. Predicted structures with APL have a small number of bad contacts. As can be noticed, structures using APL (highlighted in boldface) achieved better results when compared against predicted structures without the APL (between parenthesis). It is also noticeable that our method produced 0% of Poor Rotamers and Ramachandran Outliers for all tests using the APL, and great values of Ramachandran Favorable region. The MolProbity score corroborate to conclude that using the APL generate better structures if compared to results without the Angle Probability List.

Predicting the correct 3-D structure of a protein molecule only from its sequence of amino acid residues is an arduous task. There is an increasing need for new strategies to identify, extract, represent and use structural data from experimentally determined 3-D protein structures. In this paper, we introduce the concept of Angle Probability Lists (APL) to represent structural information from the Protein Data Bank. We observed that a given secondary structure can have different conformational patterns depending on the type of amino acid residue. APL contains the conformational preference of each amino acid residue according to the amino acid type and its secondary structure. These patterns are crucial to the development of better knowledge-based protein structure prediction methods. We validate the proposed method incorporating the APL into two different metaheuristics. As corroborated by experiments, the use of the Angle Probability List produced good structures, in terms of structural and stereochemical analysis, when compared with results without using the APL approach. All tests without the use of APL showed bad non-bonded contacts, which suggests that their absence do not produce conditions for correct folding. Structural quality measurements have been made in terms of RMSD for predicted structures achieved with/without the use of APL. As can be observed, in average, the APL approach produced better results in all cases. In the same way, RMSD values of predicted structures achieved without APL reveals ineffectiveness of both metaheuristics when the APL was not used. Despite the fact that not all secondary structures are well formed, we can observe that the topologies of predicted structures are similar to the experimental structure.

The overall contributions of our work are the following: (a) the use of computational techniques and concepts to develop a new algorithm for a relevant biological problem. Determining experimentally the three-dimensional structure of a protein molecule is both expensive and time consuming, this difficulty has generated a significant discrepancy between the number of sequences (Genome Projects) and known 3-D protein structures. Proteins do most of the work in cells and the knowledge of its structure can give us valuable information about its functions (structure→function); (b) the development of a computational strategy to extract and represent structural information from experimentally determined protein structures. As can be observed, the APL reduces the conformational protein search space enabling metaheuristics to find better solutions. The Protein Data Bank represents a rich source of information to be explored by computational methods for the PSP problem; (c) the analysis of conformational preferences of amino acid residues in proteins and its use to 3-D protein structure prediction methods. We observed that when we associate the type of amino acid residue and secondary structure we obtain valuable information about the preferences of this amino acid residues; and finally (d) the development and use of two metaheuristic based on Genetic Algorithms and Particle Swarm Optimization to search the three-dimensional protein conformational space using APL. Metaheuristics presents the ability to find satisfactory solutions with less computational effort than exact methods. The search process guides a subordinate heuristic by intelligently combining different concepts for exploring and exploiting the search space. The APL improves the process of exploring the protein search space allowing to find good solutions in shorter time.

There are several research opportunities to be explored in this field, with relevant multidisciplinary applications in Computer Science, Bioinformatics, Biochemistry, and the Medical Sciences. This work also raises interesting research topics, with a range of applications in Computational Biology and Bioinformatics. For instance, one could apply machine learning techniques to learn about different structural information from the structural database and use it to refine mainly coil and turn regions of the predicted structures. The APL model could be improved by using other structural information from the Protein Data Bank considering the accessibility of solvent in the protein templates, using the concept of segments of amino acid residues to construct the probability list, improve the selection of protein templates based on the homology of the target sequence with template candidates, etc. Another one could be development and application of parallel metaheuristics to search the three-dimensional protein search space aims to explore in finer details the roughness of the protein energy landscape.

APL is freely available on the web at http://sbcb.inf.ufrgs.br/apl
                  

@&#ACKNOWLEDGMENTS@&#

This work was supported by grants from FAPERGS (002021-25.51/13) and MCT/CNPq (473692/2013-9), Brazil. M.I.P. was partially funded by Fondecyt Iniciación 
                  11121288 from Conicyt-Chile.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.compbiolchem.2015.08.006.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

