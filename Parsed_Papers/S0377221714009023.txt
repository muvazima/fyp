@&#MAIN-TITLE@&#A Jackson network model and threshold policy for joint optimization of energy and delay in multi-hop wireless networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Decentralized optimization of energy and delay in wireless networks.


                        
                        
                           
                           Semi-open Jackson network model for problem formulation.


                        
                        
                           
                           Performance is monotonic w.r.t. transmission rates.


                        
                        
                           
                           Optimal policy has a threshold form.


                        
                        
                           
                           Iterative algorithm to find the optimal threshold.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Queueing

Markov processes

Energy and delay optimization

Threshold-type policy

Power control

@&#ABSTRACT@&#


               
               
                  This paper studies the joint optimization problem of energy and delay in a multi-hop wireless network. The optimization variables are the transmission rates, which are adjustable according to the packet queueing length in the buffer. The optimization goal is to minimize the energy consumption of energy-critical nodes and the packet transmission delay throughout the network. In this paper, we aim at understanding the well-known decentralized algorithms which are threshold based from a different research angle. By using a simplified network model, we show that we can adopt the semi-open Jackson network model and study this optimization problem in closed form. This simplified network model further allows us to establish some significant optimality properties. We prove that the system performance is monotonic with respect to (w.r.t.) the transmission rate. We also prove that the threshold-type policy is optimal, i.e., when the number of packets in the buffer is larger than a threshold, transmit with the maximal rate (power); otherwise, no transmission. With these optimality properties, we develop a heuristic algorithm to iteratively find the optimal threshold. Finally, we conduct some simulation experiments to demonstrate the main idea of this paper.
               
            

@&#INTRODUCTION@&#

Energy efficiency is one of the most important requirements of wireless networks since most of the mobile end users are powered by battery (Montemanni, Leggieri, and Triki, 2008; Shakkottai, Rappaport, and Karlsson, 2003). On the other hand, low latency of data transmission is another important requirement for many real-time applications. Here, the data delay includes only the transmission delay and the queueing delay, the propagation delay and the precessing delay are omitted since they are very small in our scenario. High transmission rate can reduce the end-to-end delay with the cost of consuming more energy. Therefore, it is a fundamental problem that how to schedule the packet transmission to optimize the transmission delay and the energy consumption in a wireless network (Berry and Gallager, 2002; Ren and Meng, 2009).

Ad-hoc is a preferred communication mode for wireless networks when the end users are mobile. The decentralized control scheme is suitable for ad-hoc networks since it has a good scalability and flexibility. In this paper, we study a hybrid network. That is, the network consists of two types of communication nodes, one with adequate energy supply and the other with limited energy. We call it partial energy-critical wireless network. This partial energy-critical wireless network exists in the real world. For example, the hybrid ad-hoc network deployed in desert may have some nodes with infrastructure and power supply, and other nodes have neither infrastructure nor power supply (Ben Salem, Buttyan, Hubaux, and Jakobsson, 2006). Another example is that a heterogeneous wireless sensor network may have some sensor nodes whose remaining energy is relatively low (Mhatre, Rosenberg, Kofman, Mazumdar, and Shroff, 2005). The goal is to optimize the energy consumption of these nodes in order to extend their life times without largely increasing the data delay of the entire network. Fig. 1
                      is an example of the network topology of a partial energy-critical wireless network.


The energy and delay optimization problem in wireless networks has been studied in the literature. Some of the studies discuss the optimization of energy consumption with a delay constraint (Chen, Neely, and Mitra, 2007; Qiu, Bai, and Xue, 2014; Zhong and Xu, 2008). As a comparison, some other studies propose to minimize the delay under a constraint of energy consumption (Goyal, Kumar, and Sharma, 2008; Yang and Ulukus, 2010). However, all of the studies above consider only a single node as the optimization target. In a multi-hop wireless network, communication nodes are interconnected and the dynamics of nodes have mutual influences. Therefore, it is necessary to consider the mutual influence of nodes during the energy and delay optimization (Neely, 2007; Rajan, 2007). Cross-layer optimization is a widely adopted way to study this kind of problems (Cruz and Santhanam, 2003; Cui, Madan, Goldsmith, and Lall, 2007; Lin, Shroff, and Srikant, 2006; Liu, Xia, Shroff, and Sherali, 2013; Xiong, Li, Eryilmaz, and Ekici, 2011) and different approaches are used to optimize the scheduling policy, such as the gradient based approach (Liu et al., 2013), stability analysis approach (Neely, 2007), or other queueing model based analytical approaches (Xiong et al., 2011). With a queueing network model, Xia and Shihada (2014) study the joint optimization of energy and delay in a multi-hop wireless network with the full observation of system buffer status and channel status. However, all these studies are based on a centralized control scheme. The network needs a central controller to acquire the full system information and to determine the node’s scheduling policy. Such a centralized control scheme does not have a good scalability and flexibility.

As a comparison, decentralized control is a preferred regime for wireless networks, and it has the advantages on scalability and flexibility (Abouei, Ebrahimi, and Khandani, 1969; Kho, Rogers, and Jennings, 2009). How to develop a decentralized optimization approach under a multi-hop network scenario is an important topic in the research field of wireless networks (Lin, Lin, and Shroff, 2010; Shakkottai et al., 2003). Moreover, there are some other works studying the rate control and scheduling problem in networking systems from other viewpoints. The work by Xia and Shihada (2013a) studies the optimality properties of service rate control problem in a closed Jackson network. But this paper does not discuss the optimization algorithm to find the optimal policy. The works by Eryilmaz and Srikant (2007) and Lin and Shroff (2004) conducted good studies on jointly considering the congestion control and the resource scheduling problem. But these studies do not take the energy efficiency as their first optimization target in a multi-hop network scenario.

In this paper, we aim at using a closed-form analysis to study the decentralized optimization problem of energy and delay in multi-hop wireless networks, with the cost of a simplified network model. The transmission rates of nodes are adjustable and the optimization goal is to minimize the average energy consumption and the data delay of the entire network. Every node observes only their own local information including the buffer status and the system reward to determine their own transmission strategy. The network model is simplified under some assumptions. For example, we assume that the channel is stable and the interference is not considered since this issue is not severe after adopting proper physical or data-link layer techniques (such as the synchronization and TDMA).

With proper assumptions, we use a simplified network model, semi-open Jackson network, to formulate this multi-hop wireless network. The associated optimization problem of energy and delay is formulated as a Markov decision process (MDP) (Guo and Hernandez-Lerma, 2009; Puterman, 1994). We utilize the special structure of product-form solution of Jackson networks to study this problem in closed form. Some interesting optimality properties are derived as follows. The system performance is monotonic w.r.t. the transmission rate. The optimal scheduling strategy has a threshold form. That is, when the queue length in the buffer is larger than a threshold, the optimal transmission rate is maximal; otherwise, it is minimal. This indicates that a “bang-bang” control (Artstein, 1980; Bellman, Glicksberg, and Gross, 1956) is an optimal control for this problem. The optimality of threshold-type policy greatly reduces the optimization complexity. We further develop a heuristic iterative algorithm to find the optimal threshold-type policy. This algorithm does not require the full system information and it can be implemented in an online manner. This paper is substantially extended based on our previous conference paper (Xia and Shihada, 2013b) and the new contents include the online estimation algorithm, the detailed proofs of optimality properties, the analysis of numerical experiments, etc. The limitation of this paper mainly exists in the simplification of the network model. Since our emphasis is the closed-form analysis of the threshold-type policy, some assumptions are required to simplify the network model. If we consider more practical issues, such as the interference and the fading channel, we need more sophisticated investigations in the future.

The remainder of the paper is organized as follows. In Section 2, we give a detailed description of our problem and formulate it with a simplified network model. In Section 3, we utilize the special structure of Jackson network to obtain the performance difference formula of this optimization problem. We also derive some optimality properties in this section. In Section 4, we propose a heuristic and iterative algorithm to distributely optimize the threshold-type policy. The detailed algorithm and its online implementation are also discussed. In Section 5, we discuss some limitations of our simplified network model and the optimization approach. In Section 6, we conduct some numerical experiments to demonstrate the effectiveness of our approach. Finally, we conclude the paper in Section 7.

Consider a partial energy-critical wireless network. The network consists of M communication nodes. The number of energy-critical nodes is denoted as M
                     1 and the number of energy-noncritical nodes is M − M
                     1. Without loss of generality, we assume that the first M
                     1 indexed nodes are energy-critical. That is, server i is energy-critical and server j is energy-noncritical, i = 1, 2, …, M
                     1, j = M
                     1 + 1, …, M. We assume that the data packet to be transmitted is independently generated at each node. The data generation process is assumed as a Poisson process and its rate at node i is denoted as λi, i = 1, 2, …, M. The network usually has different types of data packets (packets for HTTP, FTP, video, audio, control protocols, etc.) and different types of packets have different packet sizes. We assume that the packet size is exponentially distributed with a unit mean. Thus, the transmission time of each packet obeys an exponential distribution. Since the network has multi-hop transmission routes, the generated packet will be relayed among nodes according to a routing protocol. We assume that the routing table is relatively stable and the statistics of the routing traffic has the following distribution. When a packet arrives at node i, this packet will be relayed to adjacent node j with routing probability qij, i, j = 1, 2, …, M. On the other hand, a packet may arrive at its final destination, say node i, with probability q
                     
                        i0 and disappear from the network, i = 1, 2, …, M. Obviously, we have 
                        
                           
                              ∑
                              
                                 j
                                 =
                                 0
                              
                              M
                           
                           
                              q
                              
                                 i
                                 j
                              
                           
                           =
                           1
                        
                      for all i = 1, 2, …, M. This assumption of routing probability is reasonable in multi-hop wireless networks, especially for a network adopting the probabilistic forwarding scheme (Chen, Ho, Zhang, and Bai, 2006; Liu and Wu, 2009).

The interference effect of radio channel is a common issue in wireless communication and it has been intensively studied in the literature (Berry and Gallager, 2002; Neely, 2007; Rajan, 2007). However, in some literature, interference-free links are studied for simplicity (Cui et al., 2007). It is reasonable for radio channel which is highly synchronized by certain schemes, such as TDMA (Time Division Multiple Access), where each node is assigned a separate time slot to communicate and there is no interference among nodes. In this paper, we also assume that the links are interference-free and the radio channels are statistically stable. All the issues of radio media are handled well by the techniques on the physical or data-link layers. This assumption allows us more feasibility to analytically study this optimization problem in a closed form.

When a node is busy in transmitting packets, newly arriving packets will be queued in the buffer. For simplicity, we assume that the total buffer size of all the nodes in the network has an upper limit denoted as N. That is, when the total number of packets in the network reaches N, any newly generated packets will be rejected by the network instantly. This assumption is reasonable since the buffer is always finite.

As the packet size is exponentially distributed, the transmission time of data packet is also exponentially distributed. The transmission rates of energy-noncritical nodes are fixed and denoted as μi, i = M
                     1 + 1, …, M. The transmission rates of energy-critical nodes are varied according to the number of queueing packets in the buffer. We call it load-dependent transmission rates and denote it as 
                        
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                           ,
                        
                      where ni
                      is the number of packets at node i (including the packet being transmitted), i = 1, 2, …, M, ni
                      = 0, 1, …, N. Obviously, μ
                     
                        i, 0 = 0.

Energy-critical nodes can adjust their transmission rates in an interval 
                        
                           [
                           0
                           ,
                           
                              μ
                              
                                 i
                              
                              
                                 m
                                 a
                                 x
                              
                           
                           ]
                           ,
                        
                      
                     i = 1, 2, …, M
                     1. It is known that the energy consumption in wireless communication heavily depends on the transmission rate. In this paper, we assume that the transmission power is linear to the transmission rate, which is true for certain situations. For example, in the M-ary orthogonal modulation, it is known that when 
                        
                           
                              
                                 E
                                 /
                                 
                                    N
                                    0
                                 
                              
                           
                           ≥
                           3
                           ,
                        
                      we have

                        
                           (1)
                           
                              
                                 
                                    P
                                    w
                                 
                                 =
                                 
                                    
                                       2
                                       
                                          N
                                          0
                                       
                                    
                                    
                                       
                                          log
                                          2
                                       
                                       M
                                    
                                 
                                 ln
                                 
                                    M
                                    
                                       4
                                       
                                          P
                                          b
                                       
                                    
                                 
                                 ·
                                 μ
                                 ,
                              
                           
                        
                     where Pw
                      is the transmission power, N
                     0 is the spectrum density of the channel noise after including the channel gain, M denotes the M-ary modulation with a little abuse of notation, Pb
                      is a given bit-error-probability. Therefore, to maintain a certain transmission rate 
                        
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                           ,
                        
                      a node has an energy consumption rate 
                        
                           b
                           ·
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                        
                      per unit time, where b is a coefficient given in (1). In order to save energy, nodes may adopt a lower transmission rate. However, low transmission rates will decrease the throughput of the network and increase the end-to-end delay. We assume that each node has to pay a cost rate c per unit time for each packet in the buffer. Our target is to find the optimal transmission rates of energy-critical nodes, which minimizes the average system cost including the energy consumption of energy-critical nodes and the cost of the packet delay in the entire network. The diagram about the decision logic of an energy-critical node is illustrated in Fig. 2
                     .


As we know, queueing model is widely used to formulate and analyze the performance of many computer systems (Gross, Shortle, Thompson, and Harris, 2008). In this paper, with the aforementioned problem descriptions and assumptions, we use a semi-open Jackson network model to formulate our problem. We define a virtual node 0 to model the external data generation (see page 21 in Chen and Yao, 2001). The service rate of node 0 is 
                        
                           
                              μ
                              0
                           
                           :
                           =
                           
                              ∑
                              
                                 i
                                 =
                                 1
                              
                              M
                           
                           
                              λ
                              i
                           
                        
                     . The routing probabilities from node 0 to other nodes are q
                     0i
                      ≔ λi
                     /μ
                     0, i = 1, 2, …, M. The queue length of node 0 is defined as 
                        
                           
                              n
                              0
                           
                           :
                           =
                           N
                           −
                           
                              ∑
                              
                                 i
                                 =
                                 1
                              
                              M
                           
                           
                              n
                              i
                           
                        
                     . Therefore, this multi-hop wireless network can be modeled as a closed Jackson network with M + 1 servers and N customers. The system state is denoted as 
                        n
                      ≔ (n
                     0, n
                     1, …, nM
                     ). The state space is denoted as 
                        
                           S
                           =
                           {
                           all
                           
                           n
                           :
                           
                              ∑
                              
                                 i
                                 =
                                 0
                              
                              M
                           
                           
                              n
                              i
                           
                           =
                           N
                           }
                        
                     . The cost function 
                        f
                      is a column vector and its element f(
                        n
                     ) is defined as follows.

                        
                           (2)
                           
                              
                                 
                                    f
                                    
                                       
                                          μ
                                       
                                       n
                                    
                                 
                                 
                                    (
                                    n
                                    )
                                 
                                 =
                                 c
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    M
                                 
                                 
                                    n
                                    i
                                 
                                 +
                                 b
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       M
                                       1
                                    
                                 
                                 
                                    1
                                    
                                       
                                          n
                                          i
                                       
                                       >
                                       0
                                    
                                 
                                 
                                    μ
                                    
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                    
                                 
                                 ,
                                 
                                 n
                                 ∈
                                 S
                                 ,
                              
                           
                        
                     where 
                        μ
                     
                     
                        
                           n
                        
                      is a vector of service rates of all nodes at state 
                        n
                     , i.e., 
                        
                           
                              
                                 μ
                              
                              n
                           
                           :
                           =
                           
                              (
                              
                                 μ
                                 
                                    1
                                    ,
                                    
                                       n
                                       1
                                    
                                 
                              
                              ,
                              
                                 μ
                                 
                                    2
                                    ,
                                    
                                       n
                                       2
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 μ
                                 
                                    M
                                    ,
                                    
                                       n
                                       M
                                    
                                 
                              
                              )
                           
                           ,
                        
                     
                     
                        
                           1
                           
                              
                                 n
                                 i
                              
                              >
                              0
                           
                        
                      is an indicator function which is defined as 
                        
                           
                              1
                              
                                 
                                    n
                                    i
                                 
                                 >
                                 0
                              
                           
                           =
                           1
                        
                      when ni
                      > 0, otherwise 
                        
                           
                              1
                              
                                 
                                    n
                                    i
                                 
                                 >
                                 0
                              
                           
                           =
                           0
                        
                     . The first term in the right-hand-side of (2) is the cost rate for the delay of all the packets in the network and the second term is the cost rate for the energy consumption of all the energy-critical nodes based on (1).

As we know, a Jackson network is a continuous time Markov process. The state transition rate matrix of this Markov process is denoted as matrix 
                        B
                      and the values of its elements are as follows. For any state 
                        
                           n
                           ∈
                           S
                           ,
                        
                      the value of the row vector B(
                        n
                     , : ) is determined as: 
                        
                           B
                           
                              (
                              n
                              ,
                              n
                              )
                           
                           =
                           −
                           
                              ∑
                              
                                 i
                                 =
                                 0
                              
                              M
                           
                           
                              1
                              
                                 
                                    n
                                    i
                                 
                                 >
                                 0
                              
                           
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                        
                     ; 
                        
                           B
                           
                              (
                              n
                              ,
                              
                                 n
                                 
                                    −
                                    i
                                    +
                                    j
                                 
                              
                              )
                           
                           =
                           
                              1
                              
                                 
                                    n
                                    i
                                 
                                 >
                                 0
                              
                           
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                           
                              q
                              
                                 i
                                 j
                              
                           
                           ,
                        
                      where 
                        n
                     
                     −i + j
                      is the neighboring state of 
                        n
                      and defined as 
                        n
                     
                     −i + j
                      ≔ (n
                     0, …, ni
                      − 1, …, nj
                      + 1, …, nM
                     ) for ni
                      > 0, i, j = 0, 1, …, M; B(
                        n, n
                     ′) = 0 for all the other states 
                        n
                     ′. Note that for the energy-noncritical nodes and node 0, their service rates 
                        
                           μ
                           
                              i
                              ,
                              
                                 n
                                 i
                              
                           
                        
                      are fixed as μi, i = 0, M
                     1 + 1, …, M for all ni
                     .

The steady state distribution of the system is denoted as a row vector 
                        π
                      and its element π(
                        n
                     ) is the probability that the steady system stays at state 
                        n
                     . The long-run average cost of the system is η = 
                        π
                        f
                     . From the structure of 
                        B
                     , we see that different 
                        
                           μ
                           
                              i
                              ,
                              
                                 n
                                 i
                              
                           
                        
                      will induce different 
                        B
                     . We define the system policy as a set of transmission rates 
                        
                           L
                           :
                           =
                           {
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                           ,
                           
                           for
                           
                           all
                           
                           i
                           =
                           1
                           ,
                           …
                           ,
                           
                              M
                              1
                           
                           ,
                           
                              n
                              i
                           
                           =
                           1
                           ,
                           …
                           ,
                           N
                           }
                        
                     . The policy space is defined as 
                        
                           Ψ
                           :
                           =
                           {
                           all
                           
                           L
                           }
                        
                     . Different policy 
                        L
                      has different 
                        π
                     , different 
                        f
                     , and different η. The optimization goal is to find the optimal 
                        
                           L
                           *
                        
                      which minimizes the long-run average cost η.

                        
                           (3)
                           
                              
                                 
                                    L
                                    *
                                 
                                 =
                                 
                                    arg
                                    
                                       L
                                       ∈
                                       Ψ
                                    
                                 
                                 min
                                 
                                    {
                                    
                                       η
                                       L
                                    
                                    }
                                 
                                 =
                                 
                                    arg
                                    
                                       L
                                       ∈
                                       Ψ
                                    
                                 
                                 min
                                 
                                    {
                                    
                                       
                                          
                                             π
                                          
                                       
                                       L
                                    
                                    
                                       
                                          f
                                       
                                       L
                                    
                                    }
                                 
                                 ,
                              
                           
                        
                     where 
                        
                           
                              η
                              L
                           
                           ,
                        
                     
                     
                        
                           
                              
                                 
                                    π
                                 
                              
                              L
                           
                           ,
                        
                      and 
                        
                           
                              f
                           
                           L
                        
                      are the system average cost, the steady state distribution, and the cost function, when the system adopts policy 
                        
                           L
                           ,
                        
                      respectively.

We have formulated this problem as an optimization problem above. Although our system is a Markov system, this optimization problem is not a standard MDP. This is because this problem violates a fundamental requirement of MDP that actions should be chosen independently at different states 
                     (Puterman, 1994). In our problem, the action is the load-dependent transmission rate 
                        
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                           ,
                        
                      
                     i = 1, 2, …, M
                     1, ni
                      = 1, 2, …, N. For example, if one node has the same queue length under two system states 
                        n
                     
                     1 and 
                        n
                     
                     2, such as 
                        n
                     
                     1 = (1, 3, 2, 4) and 
                        n
                     
                     2 = (1, 3, 4, 2) for a network with three nodes and finite buffer size N = 10, the queue lengths of node 1 at these two states are both 3. Thus, the transmission rates of node 1 at these two states 
                        n
                     
                     1 and 
                        n
                     
                     2 should be the same as μ
                     1, 3. The actions (values of μ
                     1, 3) at these two states should be identical and they cannot be chosen independently. Therefore, we cannot use the standard approach of MDP, such as policy iteration or value iteration, to solve this problem. In the next section, we will discuss how to utilize the special structure of Jackson networks to handle this problem.

In this section, we utilize the property of product-form solution of Jackson networks to derive a performance difference formula for our problem, which describes the change of system performance when the transmission rates are changed. Based on the difference formula, we study our optimization problem and derive some special properties of the optimal policy.

Based on the product-form solution, we discuss a special property of conditional probability in Jackson networks. This special property can help us derive a difference formula to analyze our optimization problem.

Consider a closed Jackson network with M servers and N customers (Gordon and Newell, 1967; Gross et al., 2008). The service rates are load-dependent. The normalized visit ratio vi
                         is determined by the following traffic equations

                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                v
                                                i
                                             
                                             =
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                M
                                             
                                             
                                                v
                                                j
                                             
                                             
                                                q
                                                
                                                   j
                                                   i
                                                
                                             
                                             ,
                                             
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             M
                                             ;
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                M
                                             
                                             
                                                v
                                                i
                                             
                                             =
                                             1
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        Define Ai
                        (0) = 1 and

                           
                              (5)
                              
                                 
                                    
                                       A
                                       i
                                    
                                    
                                       (
                                       k
                                       )
                                    
                                    =
                                    
                                       ∏
                                       
                                          j
                                          =
                                          1
                                       
                                       k
                                    
                                    
                                       μ
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    ,
                                    
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    M
                                    ,
                                    
                                    k
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    N
                                    .
                                 
                              
                           
                        Further define a normalization constant as below.

                           
                              (6)
                              
                                 
                                    
                                       G
                                       M
                                    
                                    
                                       (
                                       N
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          
                                             n
                                             1
                                          
                                          +
                                          ⋯
                                          +
                                          
                                             n
                                             M
                                          
                                          =
                                          N
                                       
                                    
                                    
                                       ∏
                                       
                                          i
                                          =
                                          1
                                       
                                       M
                                    
                                    
                                       
                                          v
                                          i
                                          
                                             n
                                             i
                                          
                                       
                                       
                                          
                                             A
                                             i
                                          
                                          
                                             (
                                             
                                                n
                                                i
                                             
                                             )
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

It is well known that the steady-state distribution of closed Jackson networks has the following product-form solution (Gross et al., 2008).

                           
                              (7)
                              
                                 
                                    π
                                    
                                       (
                                       n
                                       )
                                    
                                    =
                                    
                                       1
                                       
                                          
                                             G
                                             M
                                          
                                          
                                             (
                                             N
                                             )
                                          
                                       
                                    
                                    
                                       ∏
                                       
                                          i
                                          =
                                          1
                                       
                                       M
                                    
                                    
                                       
                                          v
                                          i
                                          
                                             n
                                             i
                                          
                                       
                                       
                                          
                                             A
                                             i
                                          
                                          
                                             (
                                             
                                                n
                                                i
                                             
                                             )
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Now, we consider the conditional probability of the system state when the queue length of server i is fixed as ni
                        . This conditional probability is denoted as π(
                           n
                        |ni
                        ), where 
                           
                              n
                              ∈
                              
                                 S
                                 
                                    n
                                    i
                                 
                              
                           
                         and 
                           
                              S
                              
                                 n
                                 i
                              
                           
                         is the set of states, where the queue length of server i equals ni
                        . We have

                           
                              (8)
                              
                                 
                                    π
                                    
                                       (
                                       n
                                       |
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          π
                                          (
                                          n
                                          )
                                       
                                       
                                          π
                                          (
                                          
                                             n
                                             i
                                          
                                          )
                                       
                                    
                                    =
                                    
                                       
                                          π
                                          (
                                          n
                                          )
                                       
                                       
                                          
                                             ∑
                                             
                                                n
                                                ∈
                                                
                                                   S
                                                   
                                                      n
                                                      i
                                                   
                                                
                                             
                                          
                                          π
                                          
                                             (
                                             n
                                             )
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where π(ni
                        ) is the marginal probability that the queue length of server i equals ni
                        . Substituting (7) into (8), we obtain

                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             π
                                             (
                                             n
                                             |
                                             
                                                n
                                                i
                                             
                                             )
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∏
                                                      
                                                         j
                                                         =
                                                         1
                                                      
                                                      M
                                                   
                                                   
                                                      
                                                         v
                                                         j
                                                         
                                                            n
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            A
                                                            j
                                                         
                                                         
                                                            (
                                                            
                                                               n
                                                               j
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      ∑
                                                      
                                                         n
                                                         ∈
                                                         
                                                            S
                                                            
                                                               n
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      ∏
                                                      
                                                         j
                                                         =
                                                         1
                                                      
                                                      M
                                                   
                                                   
                                                      
                                                         v
                                                         j
                                                         
                                                            n
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            A
                                                            j
                                                         
                                                         
                                                            (
                                                            
                                                               n
                                                               j
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      
                                                         v
                                                         i
                                                         
                                                            n
                                                            i
                                                         
                                                      
                                                      
                                                         
                                                            A
                                                            i
                                                         
                                                         
                                                            (
                                                            
                                                               n
                                                               i
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      ∏
                                                      
                                                         j
                                                         ≠
                                                         i
                                                      
                                                      M
                                                   
                                                   
                                                      
                                                         v
                                                         j
                                                         
                                                            n
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            A
                                                            j
                                                         
                                                         
                                                            (
                                                            
                                                               n
                                                               j
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         v
                                                         i
                                                         
                                                            n
                                                            i
                                                         
                                                      
                                                      
                                                         
                                                            A
                                                            i
                                                         
                                                         
                                                            (
                                                            
                                                               n
                                                               i
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         n
                                                         ∈
                                                         
                                                            S
                                                            
                                                               n
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      ∏
                                                      
                                                         j
                                                         ≠
                                                         i
                                                      
                                                      M
                                                   
                                                   
                                                      
                                                         v
                                                         j
                                                         
                                                            n
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            A
                                                            j
                                                         
                                                         
                                                            (
                                                            
                                                               n
                                                               j
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∏
                                                      
                                                         j
                                                         ≠
                                                         i
                                                      
                                                      M
                                                   
                                                   
                                                      
                                                         v
                                                         j
                                                         
                                                            n
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            A
                                                            j
                                                         
                                                         
                                                            (
                                                            
                                                               n
                                                               j
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      ∑
                                                      
                                                         n
                                                         ∈
                                                         
                                                            S
                                                            
                                                               n
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      ∏
                                                      
                                                         j
                                                         ≠
                                                         i
                                                      
                                                      M
                                                   
                                                   
                                                      
                                                         v
                                                         j
                                                         
                                                            n
                                                            j
                                                         
                                                      
                                                      
                                                         
                                                            A
                                                            j
                                                         
                                                         
                                                            (
                                                            
                                                               n
                                                               j
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

From (9) we observe that π(
                           n
                        |ni
                        ) has no relation to the value of 
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                        . Therefore, for a particular server i, if we change 
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                         to 
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                              ′
                           
                         and fix other servers’ service rates, the conditional probability π(
                           n
                        |ni
                        ) has the following property

                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             π
                                             (
                                             n
                                             |
                                             
                                                n
                                                i
                                             
                                             )
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                π
                                                ′
                                             
                                             
                                                (
                                                n
                                                |
                                                
                                                   n
                                                   i
                                                
                                                )
                                             
                                             ,
                                             when
                                             
                                             
                                                μ
                                                
                                                   i
                                                   ,
                                                   
                                                      n
                                                      i
                                                   
                                                
                                             
                                             
                                             is
                                             
                                             changed
                                             
                                             at
                                             
                                             a
                                             
                                             particular
                                             
                                             server
                                             
                                             i
                                             ,
                                          
                                       
                                    
                                    
                                       
                                          
                                             n
                                             i
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             N
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The above property means that the conditional probability π(
                           n
                        |ni
                        ) remains unchanged when only server i’s service rate is changed. In the next subsection, we further utilize this property to analyze the system performance of our optimization problem.

First we give a brief introduction of the direct-comparison theory, which can be viewed as an extension of the theory of perturbation analysis (Cao, 2007; Cao and Chen, 1997; Xia and Cao, 2012; Xia, Chen, and Cao, 2009). The performance difference formula is the key part in the direct-comparison theory and it describes the performance difference of a Markov system under any two different sets of system parameters or policies. We apply this theory to analyze the performance change of our optimization problem when the transmission rates are changed.

Consider a continuous-time Markov process {Xt, t ≥ 0}, where Xt
                         is the system state at time t. When the policy of Markov system is changed from 
                           L
                         to 
                           
                              
                                 L
                                 ′
                              
                              ,
                           
                         the corresponding state transition rate matrix will be changed from 
                           B
                         to 
                           B
                        ′ and the cost function will be changed from 
                           f
                         to 
                           f
                        ′. We have the following difference formula to quantify the change of the system long-run average performance (Cao and Chen, 1997).

                           
                              (11)
                              
                                 
                                    
                                       η
                                       ′
                                    
                                    −
                                    η
                                    =
                                    
                                       
                                          
                                             π
                                          
                                       
                                       ′
                                    
                                    
                                       [
                                       
                                          (
                                          
                                             
                                                B
                                             
                                             ′
                                          
                                          −
                                          B
                                          )
                                       
                                       g
                                       +
                                       
                                          (
                                          
                                             
                                                f
                                             
                                             ′
                                          
                                          −
                                          f
                                          )
                                       
                                       ]
                                    
                                    ,
                                 
                              
                           
                        where the column vector 
                           g
                         is called performance potential and its associated element g(
                           n
                        ), 
                           
                              n
                              ∈
                              S
                              ,
                           
                         is defined as below.

                           
                              (12)
                              
                                 
                                    g
                                    
                                       (
                                       n
                                       )
                                    
                                    =
                                    
                                       lim
                                       
                                          T
                                          →
                                          ∞
                                       
                                    
                                    E
                                    
                                       {
                                       
                                          ∫
                                          
                                             0
                                          
                                          T
                                       
                                       
                                          [
                                          f
                                          
                                             (
                                             
                                                X
                                                t
                                             
                                             )
                                          
                                          −
                                          η
                                          ]
                                       
                                       d
                                       t
                                       
                                          |
                                          
                                             
                                                X
                                                0
                                             
                                             =
                                             n
                                          
                                       
                                       }
                                    
                                    .
                                 
                              
                           
                        From (12), we find that g(
                           n
                        ) can be obtained from the sample path of the current system and it has no relation to the perturbed system under new policy 
                           
                              L
                              ′
                           
                        .

As we described in Section 2, our system to be optimized is a Markov process. We apply the difference formula (11) to analyze this problem. When the transmission rates of an energy-critical node i are changed from 
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                         to 
                           
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                                 ′
                              
                              ,
                           
                         
                        ni
                         = 1, 2, …, N, the transition rate matrix 
                           B
                         and the cost function 
                           f
                         will be changed to 
                           B
                        ′ and 
                           f
                        ′. Substituting the value of 
                           B
                         and the cost function (2) into (11), we have

                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             
                                                η
                                                ′
                                             
                                             −
                                             η
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      n
                                                      i
                                                   
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                ∑
                                                
                                                   n
                                                   ∈
                                                   
                                                      S
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                π
                                                ′
                                             
                                             
                                                (
                                                n
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             ×
                                             
                                                {
                                                
                                                
                                                   (
                                                   
                                                      μ
                                                      
                                                         i
                                                         ,
                                                         
                                                            n
                                                            i
                                                         
                                                      
                                                      ′
                                                   
                                                   
                                                   −
                                                   
                                                   
                                                      μ
                                                      
                                                         i
                                                         ,
                                                         
                                                            n
                                                            i
                                                         
                                                      
                                                   
                                                   )
                                                
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      0
                                                   
                                                   M
                                                
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                
                                                   [
                                                   g
                                                   
                                                      (
                                                      
                                                         n
                                                         
                                                            −
                                                            i
                                                            +
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                   −
                                                   
                                                   g
                                                   
                                                      (
                                                      n
                                                      )
                                                   
                                                   ]
                                                
                                                
                                                +
                                                
                                                b
                                                
                                                   (
                                                   
                                                      μ
                                                      
                                                         i
                                                         ,
                                                         
                                                            n
                                                            i
                                                         
                                                      
                                                      ′
                                                   
                                                   
                                                   −
                                                   
                                                   
                                                      μ
                                                      
                                                         i
                                                         ,
                                                         
                                                            n
                                                            i
                                                         
                                                      
                                                   
                                                   )
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                         
                                                            j
                                                            =
                                                            0
                                                         
                                                         M
                                                      
                                                   
                                                
                                                
                                                }
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      n
                                                      i
                                                   
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                π
                                                ′
                                             
                                             
                                                (
                                                
                                                   n
                                                   i
                                                
                                                )
                                             
                                             
                                                ∑
                                                
                                                   n
                                                   ∈
                                                   
                                                      S
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                π
                                                ′
                                             
                                             
                                                (
                                                n
                                                |
                                                
                                                   n
                                                   i
                                                
                                                )
                                             
                                             
                                                (
                                                
                                                   μ
                                                   
                                                      i
                                                      ,
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                   ′
                                                
                                                −
                                                
                                                   μ
                                                   
                                                      i
                                                      ,
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             ×
                                             
                                                {
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      0
                                                   
                                                   M
                                                
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                
                                                   [
                                                   g
                                                   
                                                      (
                                                      
                                                         n
                                                         
                                                            −
                                                            i
                                                            +
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                   −
                                                   g
                                                   
                                                      (
                                                      n
                                                      )
                                                   
                                                   ]
                                                
                                                +
                                                b
                                                }
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Since we only change the transmission rates of node i and keep other nodes’ rates unchanged, we can apply the property (10)–(13) and obtain

                           
                              (14)
                              
                                 
                                    
                                       
                                          
                                             
                                                η
                                                ′
                                             
                                             −
                                             η
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      n
                                                      i
                                                   
                                                   =
                                                   1
                                                
                                                N
                                             
                                             
                                                π
                                                ′
                                             
                                             
                                                (
                                                
                                                   n
                                                   i
                                                
                                                )
                                             
                                             
                                                (
                                                
                                                   μ
                                                   
                                                      i
                                                      ,
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                   ′
                                                
                                                −
                                                
                                                   μ
                                                   
                                                      i
                                                      ,
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                
                                                )
                                             
                                             
                                                ∑
                                                
                                                   n
                                                   ∈
                                                   
                                                      S
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                
                                             
                                             π
                                             
                                                (
                                                n
                                                |
                                                
                                                   n
                                                   i
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             ×
                                             
                                                {
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      0
                                                   
                                                   M
                                                
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                
                                                   [
                                                   g
                                                   
                                                      (
                                                      
                                                         n
                                                         
                                                            −
                                                            i
                                                            +
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                   −
                                                   g
                                                   
                                                      (
                                                      n
                                                      )
                                                   
                                                   ]
                                                
                                                +
                                                b
                                                }
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        We further define an aggregated parameter α(i, ni
                        ) as follows.

                           
                              (15)
                              
                                 
                                    
                                       
                                          
                                             α
                                             (
                                             i
                                             ,
                                             
                                                n
                                                i
                                             
                                             )
                                          
                                       
                                       
                                          
                                             :
                                             =
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   n
                                                   ∈
                                                   
                                                      S
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                
                                             
                                             π
                                             
                                                (
                                                n
                                                |
                                                
                                                   n
                                                   i
                                                
                                                )
                                             
                                             
                                                {
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      0
                                                   
                                                   M
                                                
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                
                                                   [
                                                   g
                                                   
                                                      (
                                                      
                                                         n
                                                         
                                                            −
                                                            i
                                                            +
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                   −
                                                   g
                                                   
                                                      (
                                                      n
                                                      )
                                                   
                                                   ]
                                                
                                                +
                                                b
                                                }
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                          
                                             n
                                             i
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             N
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        Difference formula (14) can be rewritten as below.

                           
                              (16)
                              
                                 
                                    
                                       η
                                       ′
                                    
                                    −
                                    η
                                    =
                                    
                                       ∑
                                       
                                          
                                             n
                                             i
                                          
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       π
                                       ′
                                    
                                    
                                       (
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    
                                       (
                                       
                                          μ
                                          
                                             i
                                             ,
                                             
                                                n
                                                i
                                             
                                          
                                          ′
                                       
                                       −
                                       
                                          μ
                                          
                                             i
                                             ,
                                             
                                                n
                                                i
                                             
                                          
                                       
                                       )
                                    
                                    α
                                    
                                       (
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        From the definition (15), we see that α(i, ni
                        ) is uniquely determined by the current system and it has no relation to the perturbed system with 
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                              ′
                           
                        ’s. Therefore, we can calculate or estimate the value of α(i, ni
                        )’s based on the sample path of the system with the current parameters 
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                        ’s. With (16), we observe that π′(ni
                        ) is always positive, although we do not know its exact value (it is computationally exhaustive to enumeratively calculate the value of π′(ni
                        ) under very possible policies). Therefore, if α(i, ni
                        ) < 0, we choose 
                           
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                                 ′
                              
                              >
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                              
                           
                         which induces η′ < η; otherwise if α(i, ni
                        ) > 0, we choose 
                           
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                                 ′
                              
                              <
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                              
                           
                         which induces η′ < η. With the above scheme, we can find a better setting of parameters which make the system average cost smaller. Repeating this process, we can iteratively reduce the system average cost.

Difference formula (16) gives a very clear picture about the relation of the system average cost and the transmission rates. Based on (16), we can thoroughly study the structure of this optimization problem and obtain some optimality properties as follows.

                           Theorem 1
                           
                              The system average cost η is monotonic w.r.t. the transmission rate
                              
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          
                                             n
                                             i
                                          
                                       
                                    
                                    ,
                                 
                               
                              i = 1, 2, …, M
                              1, ni
                               = 1, 2, …, N.
                           

We consider a special scenario, where only one service rate, say μ
                              
                                 i, k
                              , is changed to 
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          k
                                       
                                       ′
                                    
                                    ,
                                 
                               and all the other service rates 
                                 
                                    μ
                                    
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                    
                                 
                               are fixed, ni
                               = 1, 2, …, N and ni
                               ≠ k. Therefore, the difference formula (16) can be rewritten as below.

                                 
                                    (17)
                                    
                                       
                                          
                                             η
                                             ′
                                          
                                          −
                                          η
                                          =
                                          
                                             π
                                             ′
                                          
                                          
                                             (
                                             k
                                             )
                                          
                                          
                                             (
                                             
                                                μ
                                                
                                                   i
                                                   ,
                                                   k
                                                
                                                ′
                                             
                                             −
                                             
                                                μ
                                                
                                                   i
                                                   ,
                                                   k
                                                
                                             
                                             )
                                          
                                          α
                                          
                                             (
                                             i
                                             ,
                                             k
                                             )
                                          
                                          .
                                       
                                    
                                 
                              On the other hand, we consider a reverse scenario, where the original value of this transmission rate is 
                                 
                                    μ
                                    
                                       i
                                       ,
                                       k
                                    
                                    ′
                                 
                               and other transmission rates are 
                                 
                                    μ
                                    
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                    
                                 
                              ’s, ni
                               ≠ k. Suppose 
                                 
                                    μ
                                    
                                       i
                                       ,
                                       k
                                    
                                    ′
                                 
                               is changed to μ
                              
                                 i, k
                               and all the other rates remain as 
                                 
                                    μ
                                    
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                    
                                 
                              ’s. Similarly, with (16), we have the following difference formula

                                 
                                    (18)
                                    
                                       
                                          η
                                          −
                                          
                                             η
                                             ′
                                          
                                          =
                                          π
                                          
                                             (
                                             k
                                             )
                                          
                                          
                                             (
                                             
                                                μ
                                                
                                                   i
                                                   ,
                                                   k
                                                
                                             
                                             −
                                             
                                                μ
                                                
                                                   i
                                                   ,
                                                   k
                                                
                                                ′
                                             
                                             )
                                          
                                          
                                             α
                                             ′
                                          
                                          
                                             (
                                             i
                                             ,
                                             k
                                             )
                                          
                                          .
                                       
                                    
                                 
                              Comparing (17) and (18), we have

                                 
                                    (19)
                                    
                                       
                                          
                                             
                                                
                                                   α
                                                   ′
                                                
                                                
                                                   (
                                                   i
                                                   ,
                                                   k
                                                   )
                                                
                                             
                                             
                                                α
                                                (
                                                i
                                                ,
                                                k
                                                )
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   π
                                                   ′
                                                
                                                
                                                   (
                                                   k
                                                   )
                                                
                                             
                                             
                                                π
                                                (
                                                k
                                                )
                                             
                                          
                                          >
                                          0
                                          ,
                                       
                                    
                                 
                              since π′(k) and π(k) are always positive. Therefore, the sign of α(i, k) remains unvaried if we only change a particular transmission rate μ
                              
                                 i, k
                              . From (17), we can obtain the following derivative formula by letting 
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          k
                                       
                                       ′
                                    
                                    →
                                    
                                       μ
                                       
                                          i
                                          ,
                                          k
                                       
                                    
                                 
                              
                              
                                 
                                    (20)
                                    
                                       
                                          
                                             
                                                
                                                   d
                                                
                                                η
                                             
                                             
                                                
                                                   d
                                                
                                                
                                                   μ
                                                   
                                                      i
                                                      ,
                                                      k
                                                   
                                                
                                             
                                          
                                          =
                                          π
                                          
                                             (
                                             k
                                             )
                                          
                                          α
                                          
                                             (
                                             i
                                             ,
                                             k
                                             )
                                          
                                          .
                                       
                                    
                                 
                              Since the sign of α(i, k) remains unvaried and π(k) is always positive, the sign of the derivative 
                                 
                                    
                                       
                                          d
                                       
                                       η
                                    
                                    
                                       
                                          d
                                       
                                       
                                          μ
                                          
                                             i
                                             ,
                                             k
                                          
                                       
                                    
                                 
                               also remains unvaried when μ
                              
                                 i, k
                               is changed. Since k is a general symbol and it can be any value from 1, 2, …, N, we obtain that η is monotonic w.r.t. 
                                 
                                    μ
                                    
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                    
                                 
                               for any i = 1, 2, …, M
                              1 and ni
                               = 1, 2, …, N. The theorem is proved.□

With Theorem 1, we derive the following corollary

                           Corollary 1
                           
                              The optimal transmission rate
                              
                                 
                                    μ
                                    
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                    
                                    *
                                 
                               
                              is either 0 or
                              
                                 
                                    
                                       μ
                                       
                                          i
                                       
                                       
                                          m
                                          a
                                          x
                                       
                                    
                                    ,
                                 
                               
                              i = 1, 2, …, M
                              1, ni
                               = 1, 2, …, N.
                           

This is a direct conclusion from Theorem 1. The proof is neglected for simplicity.

With Corollary 1, we see that a “bang-bang” control is optimal for this optimization problem (Artstein, 1980; Bellman et al., 1956). We only have to search the optimal value from 0 and 
                           
                              μ
                              
                                 i
                              
                              
                                 m
                                 a
                                 x
                              
                           
                         for every parameter 
                           
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                              
                              ,
                           
                         without considering the intermediate values between 0 and 
                           
                              μ
                              
                                 i
                              
                              
                                 m
                                 a
                                 x
                              
                           
                        . This greatly reduces the optimization complexity.

With (16) and Theorem 1, we further prove that the optimal transmission rates of this problem has a threshold form, which is described by the following theorem.

                           Theorem 2
                           
                              The optimal transmission rates of our problem have a threshold form. That is, there exists a threshold θi for each energy-critical node i, i = 1, 2, …, M
                              1, which has
                              
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          
                                             n
                                             i
                                          
                                       
                                       *
                                    
                                    =
                                    0
                                    ,
                                 
                               
                              if ni
                               < θi;
                              
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          
                                             n
                                             i
                                          
                                       
                                       *
                                    
                                    =
                                    
                                       μ
                                       
                                          i
                                       
                                       
                                          m
                                          a
                                          x
                                       
                                    
                                    ,
                                 
                               
                              if ni
                               ≥ θi, where θi
                               ∈ {1, 2, …, N + 1}.
                           

With Theorem 1, we know that the optimal transmission rate can be either 0 or 
                                 
                                    μ
                                    
                                       i
                                    
                                    
                                       m
                                       a
                                       x
                                    
                                 
                              . We assume that 
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          k
                                       
                                       *
                                    
                                    =
                                    0
                                 
                               for a particular node i and ni
                               = k. We observe that when the queue length of node i reaches k, the transmission rate of node i becomes 0 and the customers at node i will always accumulate. Thus, ni
                               will increase to k + 1 and it will never drop below k. Since this problem is a Markov process, this phenomena means that the states in 
                                 
                                    
                                       ⋃
                                       
                                          
                                             n
                                             i
                                          
                                          <
                                          k
                                       
                                    
                                    
                                       S
                                       
                                          n
                                          i
                                       
                                    
                                 
                               are transient. Because the transient states have no effect on the long-run average performance of the system, the optimal transmission rates at these states can be chosen as 0. That is, 
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          
                                             n
                                             i
                                          
                                       
                                       *
                                    
                                    =
                                    0
                                 
                               when ni
                               ≤ k. Therefore, we have proved that if there exists 
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          k
                                       
                                       *
                                    
                                    =
                                    0
                                    ,
                                 
                               then 
                                 
                                    
                                       μ
                                       
                                          i
                                          ,
                                          
                                             n
                                             i
                                          
                                       
                                       *
                                    
                                    =
                                    0
                                 
                               for all ni
                               ≤ k. It is straightforward that the optimal transmission rates have a threshold form.□

Threshold-type policy is a commonly used policy in practice because its form is simple and it is easy to be adopted by practitioners. It is significant to prove the optimality of a threshold-type policy, such as the famous (s, S) policy in the inventory problem and other cases in the literature (Chen and Yao, 2001; Iglehart, 1963; Puterman, 1994; Xia, 2014). In the transmission scheduling problem in wireless networks, the threshold-type policy is also commonly used. However, the optimality of such type policy is rarely proved in the literature. For our formulated problem (3) with the simplified network model, Theorem 2 rigorously guarantees the optimality of the threshold-type policy and significantly reduces the optimization complexity. The original scheduling policy is 
                           
                              L
                              :
                              =
                              {
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                              
                              ,
                              i
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              
                                 M
                                 1
                              
                              ,
                              
                                 n
                                 i
                              
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              N
                              }
                              ,
                           
                         where 
                           
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                              
                              ∈
                              
                                 [
                                 0
                                 ,
                                 
                                    μ
                                    
                                       i
                                    
                                    
                                       m
                                       a
                                       x
                                    
                                 
                                 ]
                              
                           
                        . It has an NM
                        1-dimensional continuous search space. With Theorem 2, the policy is simplified as a threshold-type policy which is defined as a vector as below.

                           
                              (21)
                              
                                 
                                    
                                       θ
                                    
                                    :
                                    =
                                    (
                                    
                                       θ
                                       1
                                    
                                    ,
                                    
                                       θ
                                       2
                                    
                                    ,
                                    …
                                    ,
                                    
                                       θ
                                       
                                          M
                                          1
                                       
                                    
                                    )
                                    .
                                 
                              
                           
                        The search space of the threshold-type policy is further denoted as 
                           Θ
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       Θ
                                    
                                    :
                                    =
                                    {
                                    all
                                    
                                    
                                       θ
                                    
                                    
                                    |
                                    
                                    
                                       θ
                                       i
                                    
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    N
                                    +
                                    1
                                    
                                    and
                                    
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    
                                       M
                                       1
                                    
                                    }
                                    .
                                 
                              
                           
                        Compared with the original NM
                        1-dimensional continuous search space, the threshold-type policy space 
                           Θ
                         is a finite space with size 
                           
                              
                                 (
                                 N
                                 +
                                 1
                                 )
                              
                              
                                 M
                                 1
                              
                           
                        . This is a significant reduction. Therefore, the original optimization problem (3) can be further rewritten as the following simplified problem

                           
                              (23)
                              
                                 
                                    
                                       
                                          
                                             θ
                                          
                                       
                                       *
                                    
                                    =
                                    
                                       arg
                                       
                                          
                                             θ
                                          
                                          ∈
                                          
                                             Θ
                                          
                                       
                                    
                                    min
                                    
                                       {
                                       
                                          η
                                          
                                             θ
                                          
                                       
                                       }
                                    
                                    .
                                 
                              
                           
                        
                     

Therefore, we can focus our computation resource on the optimization of threshold-type policy, as described by (23). Please note, this threshold-type policy is not a standard one in MDP theory, because it violates the assumption of state-independent action selection, as we discussed in the last part of Section 2. We cannot directly use the classical approach of MDP, such as policy iteration, to solve this problem. However, the direct-comparison theory is still valid to analyze this problem. Below, we discuss the change in the system average cost when the threshold-type policy 
                           θ
                         is changed.

Suppose the threshold of node i is changed from θi
                         to 
                           
                              θ
                              i
                              ′
                           
                        . Without loss of generality, we assume 
                           
                              
                                 θ
                                 i
                              
                              <
                              
                                 θ
                                 i
                                 ′
                              
                           
                        . This change of threshold means that the transmission rates are changed from 
                           
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                              
                              =
                              
                                 μ
                                 
                                    i
                                 
                                 
                                    m
                                    a
                                    x
                                 
                              
                           
                         to 
                           
                              
                                 μ
                                 
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                 
                                 ′
                              
                              =
                              0
                              ,
                           
                         for 
                           
                              
                                 n
                                 i
                              
                              =
                              
                                 θ
                                 i
                              
                              ,
                              …
                              ,
                              
                                 θ
                                 i
                                 ′
                              
                              −
                              1
                           
                        . Therefore, the difference formula (16) can be rewritten as follows.

                           
                              (24)
                              
                                 
                                    
                                       η
                                       ′
                                    
                                    −
                                    η
                                    =
                                    
                                       ∑
                                       
                                          
                                             n
                                             i
                                          
                                          =
                                          
                                             θ
                                             i
                                          
                                       
                                       
                                          
                                             θ
                                             i
                                             ′
                                          
                                          −
                                          1
                                       
                                    
                                    
                                       π
                                       ′
                                    
                                    
                                       (
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    
                                       (
                                       0
                                       −
                                       
                                          μ
                                          
                                             i
                                          
                                          
                                             m
                                             a
                                             x
                                          
                                       
                                       )
                                    
                                    α
                                    
                                       (
                                       i
                                       ,
                                       
                                          n
                                          i
                                       
                                       )
                                    
                                    .
                                 
                              
                           
                        The system with threshold 
                           
                              θ
                              i
                              ′
                           
                         has two types of states, the transient states 
                           
                              S
                              
                                 
                                    n
                                    i
                                 
                                 <
                                 
                                    θ
                                    i
                                    ′
                                 
                                 −
                                 1
                              
                           
                         and the positive recurrent states 
                           
                              S
                              
                                 
                                    n
                                    i
                                 
                                 ≥
                                 
                                    θ
                                    i
                                    ′
                                 
                                 −
                                 1
                              
                           
                        . Therefore, the marginal probability π′(ni
                        ) has the following property, π′(ni
                        ) = 0, for 
                           
                              
                                 n
                                 i
                              
                              =
                              0
                              ,
                              …
                              ,
                              
                                 θ
                                 i
                                 ′
                              
                              −
                              2
                           
                        ; π′(ni
                        ) > 0, for 
                           
                              
                                 n
                                 i
                              
                              =
                              
                                 θ
                                 i
                                 ′
                              
                              −
                              1
                              ,
                              …
                              ,
                              N
                           
                        . The difference formula (24) is rewritten as

                           
                              (25)
                              
                                 
                                    
                                       η
                                       ′
                                    
                                    −
                                    η
                                    =
                                    −
                                    
                                       π
                                       ′
                                    
                                    
                                       (
                                       
                                          θ
                                          i
                                          ′
                                       
                                       −
                                       1
                                       )
                                    
                                    
                                       μ
                                       
                                          i
                                       
                                       
                                          m
                                          a
                                          x
                                       
                                    
                                    α
                                    
                                       (
                                       i
                                       ,
                                       
                                          θ
                                          i
                                          ′
                                       
                                       −
                                       1
                                       )
                                    
                                    ,
                                 
                              
                           
                        where the threshold of a particular server i is changed from θi
                         to 
                           
                              
                                 θ
                                 i
                                 ′
                              
                              ,
                           
                        
                        
                           
                              
                                 θ
                                 i
                              
                              <
                              
                                 θ
                                 i
                                 ′
                              
                              ,
                           
                         and 
                           
                              
                                 θ
                                 i
                              
                              ,
                              
                                 θ
                                 i
                                 ′
                              
                              ∈
                              
                                 {
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 N
                                 +
                                 1
                                 }
                              
                           
                        .

Comparing difference formulas (16), (24), and (25), we observe that (25) is the simplest one. When the threshold of a server, say server i, is increased from θi
                         to 
                           
                              
                                 θ
                                 i
                                 ′
                              
                              ,
                           
                         the performance difference only involves three terms, 
                           
                              
                                 π
                                 ′
                              
                              
                                 (
                                 
                                    θ
                                    i
                                    ′
                                 
                                 −
                                 1
                                 )
                              
                           
                         which is always positive, 
                           
                              μ
                              
                                 i
                              
                              
                                 m
                                 a
                                 x
                              
                           
                         which is a known parameter, and 
                           
                              α
                              (
                              i
                              ,
                              
                                 θ
                                 i
                                 ′
                              
                              −
                              1
                              )
                           
                         which can be calculated or estimated based on the sample path of the system under the current parameters 
                           
                              μ
                              
                                 i
                                 ,
                                 
                                    n
                                    i
                                 
                              
                           
                        ’s. There is no need to consider the terms π′(ni
                        ) and α(i, ni
                        ), 
                           
                              
                                 n
                                 i
                              
                              =
                              
                                 θ
                                 i
                              
                              ,
                              …
                              ,
                              
                                 θ
                                 i
                                 ′
                              
                              −
                              2
                              ,
                           
                         which appear in (24). Since 
                           
                              
                                 π
                                 ′
                              
                              
                                 (
                                 
                                    θ
                                    i
                                    ′
                                 
                                 −
                                 1
                                 )
                              
                           
                         is always positive, we do not calculate or estimate its exact value. We only calculate or estimate the value of 
                           
                              α
                              (
                              i
                              ,
                              
                                 θ
                                 i
                                 ′
                              
                              −
                              1
                              )
                           
                        . Then, we can compare the performance of the new system as follows. If 
                           
                              α
                              (
                              i
                              ,
                              
                                 θ
                                 i
                                 ′
                              
                              −
                              1
                              )
                           
                         is positive, η′ < η and the system average cost is reduced by increasing the threshold to 
                           
                              θ
                              i
                              ′
                           
                        . Otherwise, η′ > η and the new system is worse than the current system and we have to try other thresholds 
                           
                              θ
                              i
                              ′
                           
                        . This is the key idea to develop an iterative algorithm for our optimization problem (23). More details will be discussed in the next section.

In a network scenario, the decentralized control is preferred to the centralized control since it has a better scalability and flexibility. After we derive the concise difference formula (25), we further discuss how to develop an optimization algorithm which can be distributed on every node to find their optimal thresholds. The difference formula (25) clearly quantifies how the system performance will be changed when the threshold-type policy is changed. Based on (25), we directly develop the following algorithm to find the optimal threshold for a particular energy-critical node.

In Step 3, the thresholds with a worse system performance are identified based on (25) and removed from the feasible search space Θ. Every element of the refined set Θ has a dominant performance over that of the current threshold θ
                     (k). In Step 4, we choose the minimal element of Θ as the new threshold. Thus, the system average cost will be reduced through the update in Step 4. The system performance will be strictly improved after each iteration. Since the size of the search space Θ is finite (the maximal size of the space is N + 1), Algorithm 1
                      can converge to the optimal threshold after a finite number of iterations.

From the above discussion, we can observe that Algorithm 1 is very similar to the policy iteration in the classical MDP theory. That is, it can decompose the combination optimization problem (23) into a series of subproblems in Step 2 and 3, which can great improve the algorithm efficiency.

                        Remark 1
                        We have two tiers of complexity reductions for our problem. The first one is the optimality of threshold-type policy which simplifies the original problem (3) as (23). The second one is the policy iteration type algorithm which decomposes the combination problem into a series of subproblems.

With Algorithm 1, we can find the optimal threshold for a particular energy-critical node i. However, the optimization problem (23) is to find the optimal thresholds for all the energy-critical nodes i, i = 1, …, M
                     1. We have to consider how to distribute Algorithm 1 to all the energy-critical nodes. Thus, we propose a heuristic scheme as follows.


                     Algorithm 2
                      describes a rotation procedure to distribute Algorithm 1 among all the energy-critical nodes. The performance of the total network will be repeatedly improved at every iteration. When the rotation procedure stops, the system performance cannot be further improved under the current optimization framework.

From the description of Algorithm 2, we can see that this rotation optimization process looks like a scenario in game theory. Each node adjusts their own strategy (threshold) by observing and analyzing the system behavior and the payoff obtained. The decisions of nodes have mutual effects. Such mutual effects make the nodes dynamically adjust their strategies, according to other nodes’ response. When Algorithm 2 stops, we can verify that the algorithm finds a stable solution, which is called Nash equilibrium in game theory. Thus, we directly have the following theorem.

                        Theorem 3
                        
                           The heuristic and decentralized Algorithm 2 can converge to the Nash equilibrium of our optimization problem.
                        

This theorem is very straightforward as we observe the fact that Algorithm 1 can strictly improve the system performance. When Algorithm 2 stops, according to the stopping rule in Step 3, we know that every node has no incentive to change their strategy since their optimal threshold remains unvaried by using Algorithm 1. This exactly satisfies the definition of Nash equilibrium in game theory. Therefore, our algorithm provides an effective way to find the equilibrium of this decentralized optimization problem. Compared with a standard game theoretic problem, every node in our problem has the same payoff function (2), which is also the social welfare function of the entire network. Therefore, it is easy to verify that the equilibrium is also a local optimum of our optimization problem. For some special cases, such as the convex problem, this local optimum obtained by Algorithm 2 is also the global optimum.

                        Remark 2
                        The Nash equilibrium and the local optimum are unified in our optimization problem since the payoff function of each node is identical to the social welfare function. This is a special scenario in game theoretic model.

To perform Algorithm 1, we have to know the values of α(i, ni
                     ) in Step 2, where ni
                      = θ
                     (k), …, N. Obviously, α(i, ni
                     ) can be numerically calculated according to its definition (15). Below, we discuss how to online estimate α(i, ni
                     ) from the system sample path. From (15), we observe that we have to know the value of π(
                        n
                     |ni
                     ) and g(
                        n
                     ) in order to calculate α(i, ni
                     ). π(
                        n
                     |ni
                     ) and g(
                        n
                     ) only depend on the current system and can be estimated based on the sample path of the current system. First, we introduce how to estimate the difference of potentials of any two states, g(
                        n
                     ) − g(
                        n
                     ′), 
                        
                           n
                           ,
                           
                              
                                 n
                              
                              ′
                           
                           ∈
                           S
                        
                     . With the definition of performance potential (12), g(
                        n
                     ) − g(
                        n
                     ′) can be written as follows (Cao, 2007).

                        
                           (26)
                           
                              
                                 g
                                 
                                    (
                                    n
                                    )
                                 
                                 −
                                 g
                                 
                                    (
                                    
                                       
                                          n
                                       
                                       ′
                                    
                                    )
                                 
                                 =
                                 E
                                 
                                    {
                                    
                                       ∫
                                       
                                          0
                                       
                                       
                                          T
                                          (
                                          
                                             
                                                n
                                             
                                             ′
                                          
                                          ,
                                          0
                                          )
                                       
                                    
                                    
                                       [
                                       f
                                       
                                          (
                                          
                                             X
                                             t
                                          
                                          )
                                       
                                       −
                                       η
                                       ]
                                    
                                    d
                                    t
                                    
                                       |
                                       
                                          
                                             X
                                             t
                                          
                                          =
                                          n
                                       
                                    
                                    }
                                 
                                 ,
                              
                           
                        
                     where Xt
                      is the system state at time t and T(
                        n
                     ′, 0) is the time when the system state Xt
                      first reaches 
                        n
                     ′. T(
                        n
                     ′, t
                     0) is further defined as T(
                        n
                     ′, t
                     0) ≔ min {t: Xt
                      = 
                        n
                     ′, t > t
                     0}, which indicates the time that Xt
                      first reaches 
                        n
                     ′ after t
                     0. Define 
                        
                           
                              r
                              0
                              n
                           
                           :
                           =
                           0
                        
                      and 
                        
                           
                              r
                              
                                 k
                              
                              n
                           
                           :
                           =
                           min
                           
                              {
                              t
                              :
                              
                                 X
                                 t
                              
                              =
                              n
                              ,
                              t
                              >
                              
                                 r
                                 
                                    k
                                    −
                                    1
                                 
                                 n
                              
                              }
                           
                           ,
                        
                      
                     k = 1, 2, …. We know that 
                        
                           r
                           
                              k
                           
                           n
                        
                      is called the regenerative point of state 
                        n
                      in a Markov process. For an ergodic Markov process, (26) can be further rewritten as follows.

                        
                           (27)
                           
                              
                                 g
                                 
                                    (
                                    n
                                    )
                                 
                                 −
                                 g
                                 
                                    (
                                    
                                       
                                          n
                                       
                                       ′
                                    
                                    )
                                 
                                 =
                                 
                                    lim
                                    
                                       K
                                       →
                                       ∞
                                    
                                 
                                 
                                    1
                                    K
                                 
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    K
                                 
                                 
                                    ∫
                                    
                                       
                                          r
                                          k
                                          n
                                       
                                    
                                    
                                       T
                                       (
                                       
                                          
                                             n
                                          
                                          ′
                                       
                                       ,
                                       
                                          r
                                          k
                                          n
                                       
                                       )
                                    
                                 
                                 
                                    [
                                    f
                                    
                                       (
                                       
                                          X
                                          t
                                       
                                       )
                                    
                                    −
                                    η
                                    ]
                                 
                                 d
                                 t
                                 ,
                              
                           
                        
                     where the system average performance η can be estimated as

                        
                           (28)
                           
                              
                                 η
                                 =
                                 
                                    lim
                                    
                                       T
                                       →
                                       ∞
                                    
                                 
                                 
                                    1
                                    T
                                 
                                 
                                    ∫
                                    
                                       0
                                    
                                    T
                                 
                                 f
                                 
                                    (
                                    
                                       X
                                       t
                                    
                                    )
                                 
                                 d
                                 t
                                 .
                              
                           
                        
                     Below, we apply (27) to estimate α(i, ni
                     ). (15) can be rewritten as

                        
                           (29)
                           
                              
                                 α
                                 
                                    (
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                    )
                                 
                                 =
                                 b
                                 −
                                 
                                    ∑
                                    
                                       n
                                       ∈
                                       
                                          S
                                          
                                             n
                                             i
                                          
                                       
                                    
                                 
                                 π
                                 
                                    (
                                    n
                                    |
                                    
                                       n
                                       i
                                    
                                    )
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       0
                                    
                                    M
                                 
                                 
                                    q
                                    
                                       i
                                       j
                                    
                                 
                                 
                                    [
                                    g
                                    
                                       (
                                       n
                                       )
                                    
                                    −
                                    g
                                    
                                       (
                                       
                                          n
                                          
                                             −
                                             i
                                             +
                                             j
                                          
                                       
                                       )
                                    
                                    ]
                                 
                                 .
                              
                           
                        
                     We only have to estimate the second term of the right-hand side of the above equation. Define 
                        
                           T
                           
                              (
                              
                                 n
                                 i
                              
                              ,
                              i
                              ,
                              
                                 t
                                 0
                              
                              )
                           
                           :
                           =
                           min
                           
                              {
                              t
                              :
                              
                                 X
                                 
                                    t
                                    −
                                 
                              
                              ∈
                              
                                 S
                                 
                                    n
                                    i
                                 
                              
                              ,
                              
                                 X
                                 t
                              
                              ∈
                              
                                 S
                                 
                                    
                                       n
                                       i
                                    
                                    −
                                    1
                                 
                              
                              ,
                              t
                              >
                              
                                 t
                                 0
                              
                              }
                           
                           ,
                        
                      which indicates the first time after t
                     0 when node i finishes a packet transmission and makes the queue length of node i decreased to ni
                      − 1. Similarly, define 
                        
                           
                              r
                              0
                              
                                 S
                                 
                                    n
                                    i
                                 
                              
                           
                           :
                           =
                           0
                        
                      and 
                        
                           
                              r
                              
                                 k
                              
                              
                                 S
                                 
                                    n
                                    i
                                 
                              
                           
                           :
                           =
                           min
                           
                              {
                              t
                              :
                              
                                 X
                                 t
                              
                              ∈
                              
                                 S
                                 
                                    n
                                    i
                                 
                              
                              ,
                              t
                              >
                              
                                 r
                                 
                                    k
                                    −
                                    1
                                 
                                 
                                    S
                                    
                                       n
                                       i
                                    
                                 
                              
                              }
                           
                           ,
                        
                      
                     k = 1, 2, …, which indicates the kth time when the system state reaches the subset 
                        
                           S
                           
                              n
                              i
                           
                        
                     . To simplify the notations, we denote the time series of 
                        
                           r
                           
                              k
                           
                           
                              S
                              
                                 n
                                 i
                              
                           
                        
                      as tk, k = 0, 1, …. By applying (27), we can estimate α(i, ni
                     ) as follows.

                        
                           (30)
                           
                              
                                 α
                                 
                                    (
                                    i
                                    ,
                                    
                                       n
                                       i
                                    
                                    )
                                 
                                 =
                                 b
                                 −
                                 
                                    lim
                                    
                                       K
                                       →
                                       ∞
                                    
                                 
                                 
                                    1
                                    K
                                 
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    K
                                 
                                 
                                    ∫
                                    
                                       
                                          t
                                          k
                                       
                                    
                                    
                                       T
                                       (
                                       
                                          n
                                          i
                                       
                                       ,
                                       i
                                       ,
                                       
                                          t
                                          k
                                       
                                       )
                                    
                                 
                                 
                                    [
                                    f
                                    
                                       (
                                       
                                          X
                                          t
                                       
                                       )
                                    
                                    −
                                    η
                                    ]
                                 
                                 d
                                 t
                                 .
                              
                           
                        
                     
                  

Therefore, with (28) and (30), we can obtain an estimate of α(i, ni
                     ) based on the sample path of the current system. Integrating the above estimation with Algorithm 2, every energy-critical node can optimize their own scheduling policy (threshold) with a rotation scheme. Each node only needs their own local information (queue length) and the feedback of the system cost to make decision.

From the estimation formula (30), we find that the conditional probability π(
                        n
                     |ni
                     ) and the routing probability qij
                      in (29) disappear. This is because such information can be obtained from the sample path when we estimate g(
                        n
                     ) − g(
                        n
                     
                     −i + j
                     ) with (30). Our Algorithm 2 is online implementable. We can complete the estimation and optimization procedure almost simultaneously, without disturbing the normal operation of the system. The online implementation makes our optimization approach more applicable in practice. For more details about the online estimation of performance potentials and sensitivities, please refer to Cao (2007) and Li and Cao (2013).

In this section, we discuss the limitations of our approach, especially the side effects of the assumptions which simplify our network model in Section 2.

The first issue is the assumption of the linear relation between the transmission power and rate. Although this assumption is reasonable as we explained it in (1) when the M-array modulation is adopted, there truly exist other forms of relations which are adopted in the literature. One of the typical forms is that the transmission power is exponential w.r.t. the transmission rate from the theoretical viewpoint of Shannon channel. With the Shannon–Hartley Theorem, the relationship between the transmission power and the transmission rate is (Berry and Gallager, 2002)
                     
                        
                           (31)
                           
                              
                                 
                                    P
                                    w
                                 
                                 =
                                 
                                    
                                       σ
                                       2
                                    
                                    
                                       
                                          |
                                          ℏ
                                          |
                                       
                                       2
                                    
                                 
                                 
                                    (
                                    
                                       2
                                       
                                          μ
                                          /
                                          B
                                       
                                    
                                    −
                                    1
                                    )
                                 
                                 ,
                              
                           
                        
                     where σ
                     2 is the variance of the channel noise, |ℏ|2 is the channel gain, B is the theoretical channel bandwidth. Therefore, the cost function (2) should be modified as below.

                        
                           (32)
                           
                              
                                 
                                    f
                                    
                                       
                                          μ
                                       
                                       n
                                    
                                 
                                 
                                    (
                                    n
                                    )
                                 
                                 =
                                 c
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    M
                                 
                                 
                                    n
                                    i
                                 
                                 +
                                 
                                    b
                                    ′
                                 
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       M
                                       1
                                    
                                 
                                 
                                    1
                                    
                                       
                                          n
                                          i
                                       
                                       >
                                       0
                                    
                                 
                                 
                                    2
                                    
                                       
                                          μ
                                          
                                             i
                                             ,
                                             
                                                n
                                                i
                                             
                                          
                                       
                                       /
                                       B
                                    
                                 
                                 ,
                              
                           
                        
                     where the constant term 
                        
                           −
                           
                              
                                 σ
                                 2
                              
                              
                                 
                                    |
                                    ℏ
                                    |
                                 
                                 2
                              
                           
                        
                      in (31) is ignored in the above cost function. With the above cost function, we can also obtain a difference formula which is similar to (14) but with a more complicated form. Other following analysis is similar. However, the monotonicity and the optimality of threshold-type policy might not hold for this cost function. Therefore, our approach might be applicable for different cost functions, but the algorithm complexity may increase significantly in some situations.


The second issue is the physical affecting factors of wireless channel on our simplified network model. One of the primary factors is the interference and the fading of wireless channels. As we explained previously, the issue of channel interference can be handled by the physical and data-link layers of the network. However, if we want to model this optimization problem from a cross-layer viewpoint, it is necessary to consider the interference of channels. This issue will significantly increase the complexity of our optimization problem, because the interference makes the states of neighboring nodes heavily joint. This makes the complexity reduction discussed in Remark 1 infeasible. Therefore, we need further investigations to study this problem as a future research topic. Other factors, such as the buffer limit of individual nodes and the physical constraint of the total limited power, are also important for us to consider during the problem formulation procedure. These will certainly increase the model complexity of the problem. The optimality properties and the complexity reduction techniques proposed in this paper might not be valid for these new formulations.

In summary, our simplified network model has limitations since we made some assumptions and simplifications to formulate this model. However, this simplified model gives us opportunity to thoroughly study this joint optimization problem. The meaningful results obtained in this paper, such as the monotonicity, the optimality of threshold-type policy, and the iterative optimization algorithm, can provide some theoretical insights for the practical and complicated model, even these are obtained based on a simplified model.

For the purpose of illustration, we conduct numerical experiments on a small-scale network. Consider a network with three nodes. Node 1 and 2 are energy-critical, while node 3 is energy-noncritical. That is, M = 3 and M
                     1 = 2. The total buffer size of the network is N = 6 (e.g., N = 6 may mean that the total buffer size of the network is 6K(kilo) packets and we use 1K packets as a basic unit). The data generation rates at the node are λ
                     1 = 15, λ
                     2 = 20, λ
                     3 = 15, respectively. The routing probabilities of the node are q
                     10 = 0.3, q
                     12 = 0.5, q
                     13 = 0.2, q
                     20 = 0.3, q
                     21 = 0.3, q
                     23 = 0.4, q
                     30 = 0.2, q
                     31 = 0.4, q
                     32 = 0.4. Since the external data generation process can be treated as a virtual node 0, the transmission rate of node 0 is μ
                     0 = λ
                     1 + λ
                     2 + λ
                     3 = 50 and q
                     01 = 0.3, q
                     02 = 0.4, q
                     03 = 0.3. The transmission rate of node 3 is fixed as μ
                     3 = 100. The transmission rates of node i are adjustable within 
                        
                           [
                           0
                           ,
                           
                              μ
                              i
                              
                                 m
                                 a
                                 x
                              
                           
                           ]
                        
                      and 
                        
                           
                              μ
                              i
                              
                                 m
                                 a
                                 x
                              
                           
                           =
                           100
                           ,
                        
                      
                     i = 1, 2. The coefficients in cost function (2) are b = 0.2 and c = 10.

We apply Algorithm 2 to optimize the thresholds of energy-critical nodes. The optimization procedure is illustrated in Fig. 3
                     . During the first round of optimization, Algorithm 2 selects node 1 as the target node and uses Algorithm 1 to find the optimal threshold of node 1. The aggregated performance potentials α(1, n
                     1), n
                     1 = 1, 2, …, 6, can be obtained under the current system setting. We find that the signs of α(1, n
                     1) are all negative, which are illustrated by “–” on the first row of the middle table in Fig. 3. Therefore, all the candidate thresholds for θ
                     1 = 2, 3, …, 7 are removed according to Step 3 of Algorithm 1. These removed candidate thresholds are marked with “ × ” on the middle table of Fig. 3. Therefore, with the system sample path under the current threshold, we can simultaneously compare 6 candidate solutions with the current solution at the same time. However, in our common sense, we usually have to run the system under every candidate solution to obtain their comparisons. This is a great improvement which is discussed in Remark 1. This benefit comes from the difference formula (25) which clearly describes the change of the system performance w.r.t. thresholds.

Since θ
                     1 = 1 cannot be improved anymore at the current situation, we fix θ
                     1 = 1 and optimize the threshold of node 2. This is the second round of the optimization in Algorithm 2. We run the system under the current threshold setting and obtain α(2, n
                     2), n
                     2 = 1, 2, …, 6. We find that all the signs of α(2, n
                     2) are negative, which are illustrated by the first column of the right table in Fig. 3. According to Step 3 of Algorithm 1, all these candidate thresholds θ
                     2 with negative α(2, θ
                     2 − 1) can be removed as they have worse performance than that of the current threshold, θ
                     2 = 2, 3, …, 7. Therefore, θ
                     2 = 1 is also optimal for node 2 at the current situation. Algorithm 2 stops at the current thresholds since it cannot be improved anymore according to the heuristic scheme. That is, 
                        θ
                     * = (1, 1) is the output of Algorithm 2.

We conduct some enumerative calculations to verify the main results of this paper. First, we verify the monotonicity described in Theorem 1. We choose arbitrary rates for node 1 and 2, e.g., all the transmission rates of node 1 and 2 are set as 50. Then we enumeratively calculate the system average cost when the transmission rates of node 2 are changed within the value domain [0, 100]. The curves of the system average cost w.r.t. different transmission rates of node 2 are illustrated in Fig. 4
                     . From Fig. 4, we see that the average cost η is monotonic w.r.t. the transmission rate μ
                     2, n
                     , n = 1, 2, …, 6. Some of the curves are monotonically decreasing and others are monotonically increasing. Therefore, Theorem 1 is verified in this experiment.


Second, we conduct an experiment to verify the optimality of threshold-type policy described in Theorem 2. The transmission rates of node 1 are set as 100. Since the monotonicity is already verified, we enumerate all the possible rates μ
                     2, n
                      from the 2-element set {0, 100} to do verification, n = 1, 2, …, 6. Thus, the total number of enumerations is 26 = 64. We sort the index of enumerations in a binary order of μ
                     2, n
                     ’s, i.e., in an order of (0, 0, 0, 0, 0, 0), (0, 0, 0, 0, 0, 100), …, (100, 100, 100, 100, 100, 100). Fig. 5
                      is the enumeration result. We observe that the last index achieves the minimum, i.e., μ
                     2, n
                      = 100 is the optimal rate for all n = 1, 2, …, 6. Therefore, the optimal rates of node 2 have a threshold-type policy with θ
                     2 = 1 and Theorem 2 is verified in this experiment. Please note, many points in Fig. 5 with value 60 indicate a special situation, where the system state is absorbed to 
                        n
                      = (0, 0, 6, 0) and all the other states are transient.


To demonstrate the efficiency of our approach, we conduct a comparison experiment as a baseline. The baseline experiment uses brute-force enumeration to search from the NM
                     1-dimensional continuous space (i.e., 12-dimensional space and each dimension in domain [0, 100]). The continuous space needs to be discretized. For example, we can discretize at each integer in [0, 100] and the total number of candidate solutions is 10112 ≈ 1024, which is infeasible to enumerate. For simplicity, we utilize Corollary 1 to reduce the complexity and the number of candidate solutions becomes 212 = 4096. The system performance under every candidate solution is numerically calculated. All the numerical experiments are programmed with MATLAB (R2009b) and are executed on a DELL computer with 2.92 GHz Intel Core2 CPU, 4 GB RAM, 32-bit Win7 OS. The running-time of our approach with Algorithm 2 is 1.217 second, while the running-time of the baseline experiment is 1438.729 seconds. Therefore, we observe that even with the great simplification of Corollary 1, the computation time of the baseline experiment is still 1000 times more than that of our approach with Algorithm 2. In general, the computation complexity of our approach is 
                        
                           
                              (
                              N
                              +
                              1
                              )
                           
                           
                              M
                              1
                           
                        
                      in the worst case, which is significantly smaller than that of an NM
                     1-dimensional continuous search space in the baseline situation.

To verify the effectiveness of our approach, we enumerate the system performance under all of the possible thresholds, θ
                     1, θ
                     2 = 1, 2, …, 7. The curve plane of the system performance under different thresholds is illustrated in Fig. 6
                     . We find that 
                        θ
                     * = (1, 1) is truly the optimal threshold. Consider the edge of the curve plane. For example, we study the left side of the edge curve depicting η w.r.t. θ
                     2 when θ
                     1 is fixed as 1, which is highlighted by the curve of red dashed line in Fig. 6. We find that this curve is an unimodal function and θ
                     2 = 1 is truly optimal. This also demonstrates the effectiveness of Algorithm 1.


It is worth pointing out that Algorithm 2 can only find the local optimum, not the global optimum. The above experiment is a special example, where the output of Algorithm 2 is exactly the global optimum.

From the above experiments, we find that Algorithm 2 has a good searching capability to find the optimal threshold-type policy. Based on the difference formula (25), the algorithm can efficiently utilize the performance sensitivity information from the system sample path. We only need to run the system under the current threshold and observe the system information from the sample path. Based on the sample path, we can estimate or calculate α(i, ni
                     )’s and directly find the better solutions which are indicated by the signs of the corresponding α(i, ni
                     )’s. It is commonly observed that the sign of an estimate is much more robust than the exact value of an estimate. Thus, our estimation or calculation of α(i, ni
                     )’s does not require a very high accuracy. This makes our optimization approach more stable in practice.

The values of parameter b and c have effects on the optimal threshold 
                        θ
                     *. When b is larger, it means that the price of energy is higher and the importance of the power consumption is increased. Therefore, nodes are more willing to save energy, with the cost of having more data delay even losses. Thus, the optimal threshold will become larger. Otherwise, when b is smaller, the optimal threshold will become smaller. That is, the change direction of optimal threshold is the same as that of the parameter b. Please note, the optimal thresholds of different nodes are generally different and they are affected by the value of routing probabilities qij
                     ’s. If the routing probabilities make some nodes’ traffic intensity larger (through the traffic equation (4)), the optimal thresholds of these nodes will be smaller than those of other nodes.

@&#CONCLUSION@&#

In this paper, we present a decentralized optimization framework for the energy and delay optimization problem in multi-hop wireless networks. We formulate this problem as an MDP and prove that the optimal policy has a threshold form. This optimality lets the algorithm focus on only searching the optimal thresholds, which significantly reduces the optimization complexity. Based on the performance difference formula under any different threshold-type policies, we develop an iterative and decentralized algorithm to find the optimal thresholds. This algorithm is rotatively executed on every node and it will converge to the Nash equilibrium or the local optimum. We further implement this algorithm in an online manner based on the system sample path.

Although our approach provides some insights to handle the decentralized optimization of energy and delay in wireless networks, we take some assumptions to simplify the physical issues, such as the interference of radio channels. These assumptions let us concentrate our analysis on a simplified network model and make it possible to derive some significant results, such as the optimality of threshold-type policy and the iterative optimization algorithm to find the optimal thresholds. It is a future research topic that how to extend this simplified network model to a more complicated case by considering the practical factors, such as the channel interference and the buffer limit of individual node. Moreover, the relation between our decentralized optimization problem and the game theory deserves further investigations, such as the existence of equilibrium and the convergence analysis of the optimization algorithm.

@&#ACKNOWLEDGEMENTS@&#

The authors would like to thank the anonymous referees and the editor, Dr. Immanuel Bomze, for their valuable comments which are very helpful to improve the quality of this paper.

@&#REFERENCES@&#

