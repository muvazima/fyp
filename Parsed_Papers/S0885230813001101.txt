@&#MAIN-TITLE@&#Speech energy redistribution for intelligibility improvement in noise based on a perceptual distortion measure

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           An algorithm is presented to improve speech intelligibility for the near-end listener.


                        
                        
                           
                           Speech energy is redistributed optimally for a perceptual distortion measure.


                        
                        
                           
                           An intelligibility listening test is performed to evaluate the proposed method.


                        
                        
                           
                           The algorithm leads to significant intelligibility gains, while preserving quality.


                        
                        
                           
                           A reference method obtained higher intelligibility gains, with a decrease in quality.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Near-end speech enhancement

Intelligibility improvement

Transients

@&#ABSTRACT@&#


               
               
                  A speech pre-processing algorithm is presented that improves the speech intelligibility in noise for the near-end listener. The algorithm improves intelligibility by optimally redistributing the speech energy over time and frequency according to a perceptual distortion measure, which is based on a spectro-temporal auditory model. Since this auditory model takes into account short-time information, transients will receive more amplification than stationary vowels, which has been shown to be beneficial for intelligibility of speech in noise. The proposed method is compared to unprocessed speech and two reference methods using an intelligibility listening test. Results show that the proposed method leads to significant intelligibility gains while still preserving quality. Although one of the methods used as a reference obtained higher intelligibility gains, this happened at the cost of decreased quality. Matlab code is provided.
               
            

@&#INTRODUCTION@&#

Speech intelligibility for the near-end listener can be affected by background noise from both sides of the communication channel (see Fig. 1
                     ). That is, the noise can come from both the far-end and the near-end. In order to eliminate the negative impact of the far-end noise, one would typically apply a single-channel noise-reduction algorithm (see, for example, Hendriks et al., 2013; Loizou, 2007 for an overview). However, the speech can also be pre-processed before playback in order to become more intelligible in presence of the near-end background noise, which is the focus of this work. Here we assume that a clean recording of the speech is available and that the far-end noise is successfully removed with noise-reduction. A relevant application would be a train-station where the intelligibility of an announcement is degraded by a passing train. To improve the speech intelligibility in a noisy environment, one obvious solution would be to increase the level of the speech. However, at a certain point increasing the playback level may not be possible anymore due to loudspeaker limitations. Moreover, unpleasant playback levels may be reached which are close to the threshold of pain. An alternative approach would be to fix the speech energy and redistribute energy within the speech signal over time and/or frequency.

One straightforward and effective approach for improving intelligibility of speech in noise is by boosting high frequencies at a cost of lower frequencies. For example, Griffiths (1968) concluded already in 1968 that the long-term average speech spectrum should be ‘whitened’, which effectively results in a strong amplification of high frequencies. Positive effects of high-pass-filtering were also found in Griffiths (1968), Niederjohn and Grotelueschen (1976), Hall and Flanagan (2010), Skowronski and Harris (2006). To further gain intelligibility improvements, linear filtering was combined with dynamic range compression by Niederjohn and Grotelueschen (1976). Also dynamic range compression without any form of high-pass filtering was found to improve speech intelligibility in noise (Rhebergen et al., 2009).

Other approaches are based on the fact that transient-like parts of speech signals, e.g., consonants, play an important role in speech intelligibility. For example, Strange et al. (1983) showed that the center vowel in CVC words is almost fully understandable based on the preceding and succeeding consonant only. Unfortunately, the energy of consonants is relatively low compared to vowels and therefore, despite their importance, more vulnerable to noise. In line with these findings are the experiments from Gordon-Salant (1986) and Hazan and Simpson (1998), which found significant intelligibility improvements in noise for normal-hearing listeners by amplifying hand-annotated consonants. Similar results were found with hearing-impaired listeners (Kennedy et al., 1998). To use these principles in a practical application several methods are also available that automatically modify the vowel-consonant energy ratio, e.g., (Skowronski and Harris, 2006; Huang et al., 2009; Jayan et al., 2008; Yoo et al., 2007).

Most of the high-frequency boosting and transient-detection methods are noise-independent, while noise-statistics maybe available in an application scenario as illustrated in Fig. 1. Sauert and Vary therefore proposed several algorithms, which do take into account the noise statistics (e.g. Sauert et al., 2006; Sauert and Vary, 2010a), to further improve intelligibility. These methods improve objective speech intelligibility as predicted by the speech intelligibility index (SII) (ANSI, 1997). Similar work based on the SII has been done more recently by Taal et al. (2013). Other methods exploiting noise statistics are, for example, based on the masking effects of the auditory system (Brouckxon et al., 2008) or a loudness perception model (Shin and Kim, 2007). Tang and Cooke investigated several strategies where energy is relocated based on local SNRs (Tang and Cooke, 2010, 2011). Best results were obtained with a strategy where only the high frequency regions (1800–7500) were amplified, when a local SNR <5dB was observed.

In this work we propose a new method where speech energy is redistributed over time and/or frequency as a function of the near-end noise statistics, based on a perceptual distortion measure. The time-span over which energy is redistributed is flexible, such that the method can be used in both low-delay applications and applications where a higher delay is tolerated. As we will show, speech intelligibility can be further improved when more delay is allowed in the system. The results we present in this article extend existing work due to several reasons: (1) the considered perceptual distortion measure (Taal and Heusdens, 2009; Taal et al., 2012) (see Section 2.1) takes into account short-time information, which results in a higher sensitivity to transient regions compared to spectral-only models as in Brouckxon et al. (2008), Shin and Kim (2007), Sauert et al. (2006), Sauert and Vary (2010a). When a delay is tolerated in the system, the proposed method will therefore automatically distribute energy from vowels to transients as a function of the noise statistics. (2) An analytic solution is provided to optimally redistribute speech energy relevant for the perceptual distortion measure subject to a power constraint. This is different from the majority of algorithms (with the exception of Griffiths, 1968; Sauert and Vary, 2010b), which instead normalize the speech signal heuristically after processing which may result in suboptimal solutions. (3) Some algorithms are very effective in improving intelligibility of speech in noise, while they may have poor speech quality (pleasantness or naturalness of speech). For example, aggressive amplitude compression (Niederjohn and Grotelueschen, 1976) results in very unnatural speech but the SNR can be lowered down to 15dB while preserving intelligibility. The proposed method improves speech intelligibility while preserving speech quality.

The remainder of this article is organized as follows. First, we will explain the proposed algorithm and the used perceptual distortion measure in Section 2, followed by an evaluation and comparison of other reference methods in Section 3. Finally, in Section 4, a discussion is provided followed by conclusions.

Let x denote a time-domain speech signal and x
                     +
                     ɛ a noisy version, where ɛ represents the far-end background noise. We assume that in isolation, x is fully intelligible and that far-end noise is either absent or successfully removed by a single-channel noise reduction algorithm. The distortion measure considered in this work, denoted by 
                        D
                        
                           
                              
                                 x
                                 ,
                                 ɛ
                              
                           
                        
                     , will inform us about the audibility of ɛ in the presence of x. Hence, a lower D value implies less audible noise and therefore more audible speech. Our goal is to adjust the speech signal x such that 
                        D
                        
                           
                              
                                 x
                                 ,
                                 ɛ
                              
                           
                        
                      is minimized subject to the constraint that the energy of the modified speech remains unchanged. First, in Section 2.1, more details will be given about the considered distortion measure, after which in Section 2.2 we will formalize and solve the constrained optimization problem. Section 2.3 will describe several implementation details, where in Section 2.4 some properties of the algorithm are revealed.

The perceptual distortion measure is based on the work from Taal and Heusdens (2009), Taal et al. (2012). There are three important motivations why this particular distortion measure is used. (1) The measure takes into account a spectro-temporal auditory model and therefore also considers the temporal envelope within a short-time frame (20–40ms). As a consequence, the distortion measure is more sensitive to transients than spectral-only models, e.g., as used in (Sauert et al., 2006; Sauert and Vary, 2010a). (2) The measure fulfills certain mathematical properties, which makes it possible to derive an analytic solution in the eventual constrained optimization problem (see Section 2.2) and (3) the measure correlates well with the intelligibility of speech in noise (Taal et al., 2009).

To guide the reader, we give a brief summary of the perceptual distortion measure presented in Taal et al. (2012). The basic structure for the distortion measure is shown in Fig. 2
                        . First, a time–frequency (TF) decomposition is performed on the speech and noise by segmentation into short-time (32ms), 50% overlapping square-root Hann-windowed frames. Then, a simple auditory model is applied to each short-time frame, which consists of an auditory filter bank followed by the absolute squared and low-pass filtering per band, in order to extract a temporal envelope. Here, the filter bank resembles the properties of the basilar membrane in the cochlea, while the envelope extraction stage is used as a crude model of the hair-cell transduction in the auditory system.

Let h
                        
                           i
                         denote the impulse response of the ith auditory filter and x
                        
                           m
                         the mth short-time frame of the clean speech. The output of their linear convolution at time sample n is denoted by x
                        
                           i,m
                        (n)=(x
                        
                           m
                        
                        *
                        h
                        
                           i
                        )(n). Subsequently, the temporal envelope is defined by (|x
                        
                           m,i
                        |2
                        *
                        h
                        
                           s
                        )(n), where h
                        
                           s
                         represents the smoothing low-pass filter. Similar definitions hold for (|ɛ
                        
                           m,i
                        |2
                        *
                        h
                        
                           s
                        )(n). The audibility of the noise in presence of the speech, within one TF-unit, is determined by a per-sample noise-to-signal ratio (Taal and Heusdens, 2009). By summing these ratios over time, an intermediate distortion measure for one TF-unit is obtained denoted by lower-case d. That is,


                        
                           
                              (1)
                              
                                 d
                                 (
                                 
                                    x
                                    
                                       m
                                       ,
                                       i
                                    
                                 
                                 ,
                                 
                                    ɛ
                                    
                                       m
                                       ,
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    ∑
                                    n
                                 
                                 
                                    
                                       
                                          (
                                          
                                             |
                                             
                                                
                                                   ɛ
                                                   
                                                      m
                                                      ,
                                                      i
                                                   
                                                
                                             
                                             
                                                |
                                                2
                                             
                                             *
                                             
                                                h
                                                s
                                             
                                          
                                          )
                                          (
                                          n
                                          )
                                       
                                       
                                          (
                                          
                                             |
                                             
                                                
                                                   x
                                                   
                                                      m
                                                      ,
                                                      i
                                                   
                                                
                                             
                                             
                                                |
                                                2
                                             
                                             *
                                             
                                                h
                                                s
                                             
                                          
                                          )
                                          (
                                          n
                                          )
                                       
                                    
                                 
                                 ,
                              
                           
                        where n denotes the time index running over all samples within one short-time frame. To prevent divisions by very small numbers only speech-active regions are considered in the eventual algorithm (see Section 2.2 for more details). As an example, internal representations within one auditory filter are shown in Fig. 2 for a windowed noise realization ɛ
                        
                           m
                         and a speech transient x
                        
                           m
                        . Also, the point-wise division in Eq. (1) of the internal representations before summation over n is shown in the figure. Due to the fact that the measure uses a per-sample (16kHz) rather than a frame-based noise-to-signal ratio, the measure is sensitive to the short-temporal structure. Note that the cutoff frequency of the low-pass filter h
                        
                           s
                         determines the sensitivity of the model toward temporal fluctuations within a short-time frame.

The distortion measure for the complete signal is then obtained by summing all the individual distortion outcomes over time and frequency, which gives,


                        
                           
                              (2)
                              
                                 D
                                 (
                                 
                                    x
                                    ,
                                    ɛ
                                 
                                 )
                                 =
                                 
                                    ∑
                                    
                                       m
                                       ,
                                       i
                                    
                                 
                                 
                                    d
                                    (
                                    
                                       x
                                       
                                          m
                                          ,
                                          i
                                       
                                    
                                    ,
                                    
                                       ɛ
                                       
                                          m
                                          ,
                                          i
                                       
                                    
                                    )
                                 
                                 .
                              
                           
                        
                     

To improve the speech audibility in noise, we minimize Eq. (2) by applying a TF-dependent gain function α which redistributes the speech energy by scaling of the individual (perceptually) filtered frames, i.e., α
                        
                           m,i
                        
                        x
                        
                           m,i
                        , where α
                        
                           m,i
                        
                        ≥0. Only TF-units are modified where speech is present. This is done in order to prevent that a large amount of energy would be redistributed to speech-absent regions. We consider a TF-unit to be speech-active when its energy is within a 25dB range of the TF-unit with maximum energy within that particular frequency band. Note that with the near-end speech enhancement application the clean speech is available and voice activity detection is a relatively easy process (in contrast to the detection of speech already corrupted by noise). The TF-description of the noise is assumed to be a stochastic process denoted by 
                           
                              E
                              
                                 m
                                 ,
                                 i
                              
                           
                         and the speech deterministic (recall that the speech signal is known in the near-end enhancement application). Hence, we minimize for the expected value of the distortion measure. Let 
                           L
                         denote the set of speech-active TF-units and 
                           
                              ·
                           
                         the ℓ2-norm, the problem can then be formalized as follows, which has to be solved for 
                           ∀
                           
                              
                                 
                                    α
                                    
                                       m
                                       ,
                                       i
                                    
                                 
                              
                              ,
                              {
                              m
                              ,
                              i
                              }
                              ∈
                              L
                           
                        ,


                        
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             
                                                α
                                                
                                                   m
                                                   ,
                                                   i
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   
                                                      argmin
                                                   
                                                   
                                                      
                                                         
                                                            α
                                                            
                                                               m
                                                               ,
                                                               i
                                                            
                                                         
                                                      
                                                      ,
                                                      {
                                                      m
                                                      ,
                                                      i
                                                      }
                                                      ∈
                                                      L
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      {
                                                      m
                                                      ,
                                                      i
                                                      }
                                                      ∈
                                                      L
                                                   
                                                
                                                
                                                   E
                                                   
                                                      
                                                         
                                                            d
                                                            (
                                                            
                                                               
                                                                  
                                                                     α
                                                                     
                                                                        m
                                                                        ,
                                                                        i
                                                                     
                                                                  
                                                               
                                                               
                                                                  
                                                                     x
                                                                     
                                                                        m
                                                                        ,
                                                                        i
                                                                     
                                                                  
                                                               
                                                               ,
                                                               
                                                                  
                                                                     ɛ
                                                                     
                                                                        m
                                                                        ,
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                s
                                                
                                                   .
                                                   t
                                                
                                                .
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      {
                                                      m
                                                      ,
                                                      i
                                                      }
                                                      ∈
                                                      L
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        α
                                                                        
                                                                           m
                                                                           ,
                                                                           i
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        x
                                                                        
                                                                           m
                                                                           ,
                                                                           i
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         2
                                                      
                                                   
                                                   =
                                                   r
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           r
                           =
                           
                              ∑
                              
                                 
                                    
                                       
                                          m
                                          ,
                                          i
                                       
                                    
                                 
                                 ∈
                                 L
                              
                           
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   m
                                                   ,
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                                 2
                              
                           
                         is the total power measured at the output of the auditory filters and E denotes the expected value. Two important reasons exist for fixing the speech energy r rather than any other constraint, for example, based on loudness: (1) typically, algorithms are compared with a listening test by fixing the SNR for which the used global energy constraint is optimal.
                           1
                        
                        
                           1
                           Since the gammatone filters are not perfectly orthogonal (e.g., as in a Fourier transform), the energy of the signal waveform is not mathematically equal to the energy measured at the output of the auditory filters. However, these differences due to the non-orthogonal gammatone filters are relatively small and are a good approximation of the actual energies used in determining the SNR at the waveform level.
                         (2) The used constraint is mathematical tractable in contrast to complex loudness models for which closed-form solutions may not exist, resulting in suboptimal and computational demanding methods, e.g., as in Shin and Kim (2007).

Let λ denote a Lagrangian multiplier such that we can introduce the following cost function,


                        
                           
                              (4)
                              
                                 J
                                 =
                                 
                                    ∑
                                    
                                       
                                          
                                             
                                                m
                                                ,
                                                i
                                             
                                          
                                       
                                       ∈
                                       L
                                    
                                 
                                 E
                                 
                                    
                                       
                                          d
                                          (
                                          
                                             α
                                             
                                                m
                                                ,
                                                i
                                             
                                          
                                          
                                             x
                                             
                                                m
                                                ,
                                                i
                                             
                                          
                                          ,
                                          
                                             E
                                             
                                                m
                                                ,
                                                i
                                             
                                          
                                          )
                                       
                                    
                                 
                                 +
                                 λ
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                {
                                                m
                                                ,
                                                i
                                                }
                                                ∈
                                                L
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            α
                                                            
                                                               m
                                                               ,
                                                               i
                                                            
                                                         
                                                         
                                                            x
                                                            
                                                               m
                                                               ,
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                                2
                                             
                                          
                                          −
                                          r
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Due to the linearity of the convolution in Eq. (1) and the assumption that α
                        ≥0 we have that 
                           d
                           
                              
                                 
                                    α
                                    x
                                    ,
                                    y
                                 
                              
                           
                           =
                           d
                           
                              
                                 
                                    x
                                    ,
                                    y
                                 
                              
                           
                           /
                           
                              α
                              2
                           
                        . Therefore, in order to minimize Eq. (4), we have to solve the following set of equations for α,


                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∂
                                                   J
                                                
                                                
                                                   ∂
                                                   
                                                      α
                                                      
                                                         m
                                                         ,
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             −
                                             2
                                             
                                                
                                                   E
                                                   [
                                                   
                                                      d
                                                      (
                                                      
                                                         x
                                                         
                                                            m
                                                            ,
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         E
                                                         
                                                            m
                                                            ,
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                   ]
                                                
                                                
                                                   
                                                      α
                                                      
                                                         m
                                                         ,
                                                         i
                                                      
                                                      3
                                                   
                                                
                                             
                                             +
                                             λ
                                             2
                                             
                                                α
                                                
                                                   m
                                                   ,
                                                   i
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            x
                                                            
                                                               m
                                                               ,
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                                2
                                             
                                             =
                                             0
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∂
                                                   J
                                                
                                                
                                                   ∂
                                                   λ
                                                
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            m
                                                            ,
                                                            i
                                                         
                                                      
                                                   
                                                   ∈
                                                   L
                                                
                                             
                                             
                                                
                                                   α
                                                   
                                                      m
                                                      ,
                                                      i
                                                   
                                                   2
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                               
                                                                  m
                                                                  ,
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   2
                                                
                                             
                                             −
                                             r
                                             =
                                             0
                                          
                                       
                                    
                                    
                                       
                                    
                                 
                              
                           
                        
                     

The solution is given by,


                        
                           
                              (6)
                              
                                 
                                    α
                                    
                                       m
                                       ,
                                       i
                                    
                                    2
                                 
                                 =
                                 
                                    
                                       r
                                       
                                          β
                                          
                                             m
                                             ,
                                             i
                                          
                                          2
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             
                                                
                                                   
                                                      
                                                         m
                                                         ′
                                                      
                                                      ,
                                                      
                                                         i
                                                         ′
                                                      
                                                   
                                                
                                             
                                             ∈
                                             L
                                          
                                       
                                       
                                          
                                             β
                                             
                                                
                                                   m
                                                   ′
                                                
                                                ,
                                                
                                                   i
                                                   ′
                                                
                                             
                                             2
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                         
                                                            
                                                               m
                                                               ′
                                                            
                                                            ,
                                                            
                                                               i
                                                               ′
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             2
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where,


                        
                           
                              (7)
                              
                                 
                                    β
                                    
                                       m
                                       ,
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   E
                                                   [
                                                   
                                                      d
                                                      (
                                                      
                                                         x
                                                         
                                                            m
                                                            ,
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         E
                                                         
                                                            m
                                                            ,
                                                            i
                                                         
                                                      
                                                      )
                                                   
                                                   ]
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  x
                                                                  
                                                                     m
                                                                     ,
                                                                     i
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       1
                                       /
                                       4
                                    
                                 
                                 .
                              
                           
                        
                     

In order to determine α, we have to compute the expected value 
                           E
                           [
                           
                              d
                              (
                              
                                 x
                                 
                                    m
                                    ,
                                    i
                                 
                              
                              ,
                              
                                 E
                                 
                                    m
                                    ,
                                    i
                                 
                              
                              )
                           
                           ]
                        , which can be expressed as follows,


                        
                           
                              (8)
                              
                                 E
                                 [
                                 
                                    d
                                    (
                                    
                                       
                                          
                                             x
                                             
                                                m
                                                ,
                                                i
                                             
                                          
                                       
                                       ,
                                       
                                          
                                             E
                                             
                                                m
                                                ,
                                                i
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ]
                                 =
                                 
                                    ∑
                                    n
                                    
                                 
                                 
                                    
                                       
                                          (
                                          
                                             E
                                             [
                                             
                                                
                                                   
                                                      |
                                                      
                                                         
                                                            
                                                               E
                                                               
                                                                  m
                                                                  ,
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      |
                                                   
                                                   2
                                                
                                             
                                             ]
                                             *
                                             
                                                
                                                   h
                                                   s
                                                
                                             
                                          
                                          )
                                          (
                                          n
                                          )
                                       
                                       
                                          (
                                          
                                             
                                                
                                                   
                                                      |
                                                      
                                                         
                                                            
                                                               x
                                                               
                                                                  m
                                                                  ,
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                      |
                                                   
                                                   2
                                                
                                             
                                             *
                                             
                                                
                                                   h
                                                   s
                                                
                                             
                                          
                                          )
                                          (
                                          n
                                          )
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     

Here we used the linearity of the convolution and the summation in order to move the expected value operator inside the distortion measure. To simplify, we assume that the power-spectral density of the noise within the frequency range of an (relatively narrow) auditory band is constant, i.e., has a ‘flat’ spectrum. As a consequence, the noise within an auditory band can be modeled by 
                           
                              
                                 E
                                 
                                    m
                                    ,
                                    i
                                 
                              
                           
                           =
                           (
                           
                              
                                 
                                    w
                                    m
                                 
                              
                              
                                 
                                    N
                                    
                                       m
                                       ,
                                       i
                                    
                                 
                              
                           
                           )
                           *
                           
                              
                                 h
                                 i
                              
                           
                        , where 
                           
                              w
                              m
                           
                         denotes the window function and N
                        
                           m,i
                         represents a zero mean, i.i.d. stochastic process with variance 
                           E
                           [
                           
                              N
                              
                                 m
                                 ,
                                 i
                              
                              2
                           
                           (
                           n
                           )
                           ]
                           =
                           
                              σ
                              
                                 m
                                 ,
                                 i
                              
                              2
                           
                           ,
                           ∀
                           n
                        . By combining this statistical model and the numerator of Eq. (8) we have,


                        
                           
                              (9)
                              
                                 
                                    E
                                    [
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   E
                                                   
                                                      m
                                                      ,
                                                      i
                                                   
                                                
                                             
                                             |
                                          
                                          2
                                       
                                    
                                    (
                                    n
                                    )
                                    ]
                                 
                                 =
                                 
                                    E
                                    [
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   ∑
                                                   k
                                                
                                                
                                                   
                                                      
                                                         h
                                                         i
                                                      
                                                   
                                                   (
                                                   k
                                                   )
                                                   
                                                      
                                                         w
                                                         m
                                                      
                                                   
                                                   (
                                                   
                                                      n
                                                      −
                                                      k
                                                   
                                                   )
                                                   
                                                      N
                                                      
                                                         m
                                                         ,
                                                         i
                                                      
                                                   
                                                   (
                                                   
                                                      n
                                                      −
                                                      k
                                                   
                                                   )
                                                
                                             
                                             |
                                          
                                          2
                                       
                                    
                                    ]
                                 
                                 =
                                 
                                    
                                       ∑
                                       k
                                    
                                    
                                       
                                          h
                                          i
                                          2
                                       
                                       (
                                       k
                                       )
                                       
                                          w
                                          m
                                          2
                                       
                                       (
                                       
                                          n
                                          −
                                          k
                                       
                                       )
                                       E
                                       [
                                       
                                          
                                             
                                                N
                                                
                                                   m
                                                   ,
                                                   i
                                                
                                                2
                                             
                                          
                                          (
                                          
                                             n
                                             −
                                             k
                                          
                                          )
                                       
                                       ]
                                    
                                 
                                 =
                                 
                                    (
                                    
                                       
                                          h
                                          i
                                          2
                                       
                                       *
                                       
                                          w
                                          m
                                          2
                                       
                                    
                                    )
                                    (
                                    n
                                    )
                                    
                                       σ
                                       
                                          m
                                          ,
                                          i
                                       
                                       2
                                    
                                 
                                 .
                              
                           
                        where 
                           
                              h
                              i
                              2
                           
                           *
                           
                              w
                              m
                              2
                           
                         can be calculated offline and reused, and 
                           
                              σ
                              
                                 m
                                 ,
                                 i
                              
                              2
                           
                         can be estimated with any noise power spectral density (PSD) estimator from the field of single-channel speech enhancement (Loizou, 2007) (see next section for more details). Here we use the method from Hendriks et al. (2010).

@&#IMPLEMENTATION DETAILS@&#

An exponential smoother is applied to α
                           
                              m,i
                            in order to reduce variations which may negatively effect the speech quality, that is,


                           
                              
                                 (10)
                                 
                                    
                                       
                                          
                                             α
                                             ˆ
                                          
                                       
                                       
                                          m
                                          ,
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          
                                             1
                                             −
                                             γ
                                          
                                       
                                    
                                    
                                       α
                                       
                                          m
                                          ,
                                          i
                                       
                                    
                                    +
                                    γ
                                    
                                       
                                          
                                             α
                                             ˆ
                                          
                                       
                                       
                                          m
                                          −
                                          1
                                          ,
                                          i
                                       
                                    
                                    ,
                                 
                              
                           where good results were obtained with γ
                           =0.9. Note that the applied smoothing in Eq. (10) will also prevent that too much energy is distributed to specific TF-units. Hence, large energy differences between TF-units, which may violate some of the motivations for including the power constraint (loudspeaker limitations, unpleasant playback level), are reduced significantly. In rare cases where specific TF-units receive too much amplification, the processed signal is clipped within the available dynamic range.

The filter bank and the low-pass filter are applied by means of a point-wise multiplication in the DFT-domain with real-valued, even-symmetric frequency responses. For the filter bank the approach as presented in van de Par et al. (2005) is used and for the low-pass filter the magnitude response of a one-pole low-pass filter is used. A total amount of 40 filters are considered spaced according the equivalent rectangular bandwidth (ERB) (Glasberg and Moore, 1990) between 150 and 8000Hz. Furthermore, the speech signal is reconstructed by addition of the scaled TF-units where a square-root Hann-window is used for analysis/synthesis.

As mentioned, a noise-tracker from the field of single-channel speech enhancement (i.e., estimating the underlying clean speech given a noisy observation) is used for estimation of the noise PSD. However, three important differences apply when using such a traditional noise-tracker in the field of near-end enhancement:
                              
                                 1.
                                 The noise realization which degrades the TF-units in the set 
                                       L
                                     is a future event. Therefore only the noise PSD from the last known time-frame can be used, which is estimated from previous time-frames. We assume that the noise is stationary during the duration of 
                                       L
                                    .

From Fig. 1 it is clear that the noise PSD tracker is applied on the processed speech plus noise rather than on the clean unprocessed speech plus noise, where the latter equals the situation in single-channel noise reduction.

The transfer function from microphone to loudspeaker should be known in order to compensate for any introduced delay and coloration of the signal. In our experiments this is ignored, however, this transfer function can be easily measured offline and included in the algorithm.

Finally it is important to add that noise PSD estimation is significantly easier in the field of near-end enhancement than in single-channel noise reduction, since we have access to the clean speech. Hence, a perfect voice activity detector could also be used where noise statistics are estimated during speech pauses.

The performance of the method depends on the amount of TF-units available in the set 
                              L
                           . When this set contains a larger span over time and/or frequency, a better redistribution of energy is possible and a lower final distortion as defined in Eq. (2) can be expected. The delay of the proposed algorithm is directly related to the amount of future time-frames in the set 
                              L
                            with respect to the current time-frame. Increasing the lookahead in the set 
                              L
                            will result in a larger delay. Although the delay of the proposed method can be adjusted, depending on the application, we will analyze the following two extreme situations in the remaining of the article: (1) 
                              L
                            contains all speech-active TF-units in one entire sentence (say approximately 3s) (PROP1) and (2) 
                              L
                            only contains the set of TF-units in one short-time frame (32ms) (PROP2). PROP1 is relevant in situations where the speech is pre-recorded and the noise is stationary. Think of safety announcements in an airplane, traffic information in a train or navigation instructions in a car. Note that the noise here is assumed to be stationary for the considered time-span, as would be the typically the case, e.g., on board of a plane. For real-time applications and situations where the noise is non-stationary the PROP2 algorithm can be used, for example, as in mobile telephony, or public address systems. For PROP1 the noise PSD is based on averaging estimated noise PSDs over several frames and sentences offline. The delay can be adjusted to anything in between these extreme cases, for example, for mobile telephony where a limited amount of delay is not necessarily an issue (ITU, 2003).

The cutoff frequency of the auditory model low-pass filter h
                        
                           s
                         (see Section 2.1) determines the temporal sensitivity of the distortion measure. A higher cutoff frequency will result in a larger intermediate distortion value for transient signals, and therefore the algorithm will distribute more energy to these regions. We investigated the amount of amplification received by transients as a function of the cutoff frequency. One example is shown in Fig. 3
                         for PROP1 with speech shaped (SSN) noise at −5dB SNR, where processed clean speech signals are shown for three different cutoff frequencies (0, 125 and 250Hz). Here, a cutoff frequency of 0 Hz means that the short-time envelope is constant and equals its average value. The bottom plot indicates how the energy is redistributed over time where energy differences are calculated within individual short-time frames independently of frequency. Note that only 0.8s of the entire 2.5s long speech signal is shown. Although transients are also amplified with a cutoff frequency of 0Hz, (i.e., when using no short-time information), this only results in small amplifications in the range of 3–6dBs. In contrast, when we use a cutoff frequency of 125Hz, transients are amplified in the order of 6–12dB. This is more in line with results based on earlier research which found better results in this range (Gordon-Salant, 1986; Hazan and Simpson, 1998; Kennedy et al., 1998; Skowronski and Harris, 2006). In the remainder of this article 125Hz is therefore used for the cutoff frequency.

As an example in Fig. 4
                        , the time-domain signals are plotted together with spectograms for the clean and noisy speech and the proposed algorithms PROP1 and PROP2. All spectrograms show the same dynamic range of around 45dB where the energy of all speech signals (before noise addition) is equal. For this particular example one sentence of speech is used with a length of around 2.5s which is degraded with white noise at 5dB SNR. From the noisy speech spectrograms we can conclude that the high frequencies are almost fully masked by the noise. For example, the transients at approximately 0.7 and 1.8s are hardly visible anymore and can be expected to be inaudible due to the negative effects of the noise. For PROP1 it can be observed that the transients are almost fully recovered, both in the time domain and spectogram plots. Beside transient regions, the plots also reveal that PROP1 increases the high frequencies of the vowel sounds at, e.g., 0.2 and 1s. For PROP2, this amplification of high frequency vowel sounds is also observed. However, the amplification of transient regions is not present with PROP2, since only energy could be redistributed within one short-time frame. For both PROP1 and PROP2 low frequency regions (around 100–250Hz) are attenuated in order to accomplish the amplification of high frequencies.

The proposed methods PROP1 and PROP2 are compared with two reference methods in terms of speech intelligibility and speech quality. This includes the method as proposed by (Skowronski and Harris, 2006) based on changing the vowel-consonant ratio referred to as energy redistribution voiced/unvoiced (ERVU). This particular method detects transients based on the spectral flatness measure where the transient part is amplified by 7.4dB. After transient amplification the signal is normalized such that it has the same energy as the original speech signal. This method is independent of the noise statistics.

Secondly, the ‘maximal power transfer’ method is included as proposed by Sauert et al. (2006) (SAU). This method is based on the assumption that the human brain acts at least as intelligent as a Wiener filter. Let 
                        
                           
                              
                                 x
                                 ˆ
                              
                           
                           
                              m
                              ,
                              k
                           
                        
                      denote the kth DFT-bin of the mth short-time frame for the clean speech and 
                        
                           σ
                           n
                           2
                        
                        
                           
                              
                                 m
                                 ,
                                 k
                              
                           
                        
                      the noise PSD. The gain function applied to each DFT-bin is then given as follows,


                     
                        
                           (11)
                           
                              
                                 α
                                 
                                    m
                                    ,
                                    k
                                 
                                 2
                              
                              =
                              
                                 
                                    
                                       
                                          K
                                          1
                                       
                                    
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   
                                                      
                                                         x
                                                         ˆ
                                                      
                                                   
                                                   
                                                      m
                                                      ,
                                                      k
                                                   
                                                
                                             
                                             |
                                          
                                          2
                                       
                                    
                                 
                                 
                                    
                                       
                                          K
                                          1
                                       
                                    
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   
                                                      
                                                         x
                                                         ˆ
                                                      
                                                   
                                                   
                                                      m
                                                      ,
                                                      k
                                                   
                                                
                                             
                                             |
                                          
                                          2
                                       
                                    
                                    +
                                    
                                       σ
                                       n
                                       2
                                    
                                    
                                       
                                          
                                             
                                                m
                                                ,
                                                k
                                             
                                          
                                       
                                    
                                 
                              
                              ,
                           
                        
                     where K
                     1
                     =0.01 to deliver the best possible speech intelligibility. The power-constraint is included by normalizing the processed speech per short-time frame such that it equals the energy of the unprocessed speech per short-time frame. For SAU we use the noise-tracker as proposed in Sauert et al. (2006) which equals a recursive average of the noise periodogram with an adaptively chosen noise floor. Hence SAU assumes access to the noise realization. In order to make a fair comparison the noise tracker in the proposed method is therefore also applied on the noise only rather than the speech plus noise.

Ten Dutch-speaking listeners were asked to judge the intelligibility of the unprocessed noisy signals and processed speech signals plus noise. The speech signals were taken from the Dutch Matrix-test (Koopman et al., 2007), which consists of 5-word sentences spoken by a female speaker. The sentences are of the grammatical form name-verb-numeral-adjective-noun (e.g., Ingrid owns six old jackets) as proposed by Hagerman (1982), where each word in the sentence is picked randomly from a list of 10 possible words. This means that there is a probability of 10% that the correct word is chosen in the case that the speech unintelligible. The subject had access to the closed set of words by means of a 10-by-5 matrix on a computer screen, such that the ith column contains exactly the 10 possible alternatives for the ith word. The task of the listener is to select via a graphical user interface the understood words. For each test sentence, one word from each column must be selected where the sentence was played once only. Signals are sampled at 16kHz and degraded with SSN at the SNRs of −12.5, −10, −7.5 and −5dB and processed with PROP1, PROP2, ERVU and SAU. The unprocessed noisy speech is also included in the test (UN). For each condition the listener is presented with five sentences through headphones (Sennheiser HD 280 pro) where each sentence was used only once. As a consequence, each subject listened to a total of 5 sentences×5 algorithms×4 SNRs=100 sentences in total. The order of presenting the different algorithms and SNRs was randomized. The score per user and for one condition was consequently obtained by the average percentage of correct words.

@&#RESULTS@&#

The average user scores together with standard errors for all conditions are shown in Fig. 5
                           . We found that the differences between subject responses were small, where between-subject correlations were found in the range of 0.76–0.95. Statistical analysis is performed per SNR condition by means of multiple paired one-sided t-tests, where in total p-values are determined for ten hypotheses. All four algorithms are tested whether they significantly improved intelligibility compared to UN. Furthermore, we compared whether PROP1 performed better than ERVU, PROP2 better than ERVU and PROP1, and SAU better than PROP2, PROP1 and ERVU. A statistical significance level of α
                           =0.05 is used with Holm–Bonferroni correction for testing multiple hypotheses (Holm, 1979). Significant differences are denoted in Fig. 5 by a connection with asterisk marker between the two corresponding bars. The p-values can be found in Table 1
                           .

From the results we can conclude that for the lowest three SNRs, the algorithms have the same ranking in performance. That is, all algorithms improve speech intelligibility compared to UN where SAU showed the best performance followed by PROP1, PROP2 and ERVU. For the highest SNR of −5dB results were slightly different, which is probably due to ceiling effects, i.e., most of the listeners had scores close to 100 percent. For the SNRs of −12.5 and −10dB all algorithms significantly improve speech intelligibility compared to UN, except for ERVU where the improvements where not statistically significant. The fact that ERVU has a smaller effect on intelligibility compared to the other three methods is expected, since it is only limited to changing the consonant-vowel ratio and not the spectrum of the speech as a function of the noise, which is case with the other methods. Furthermore, as hypothesized in Section 2.2, we found that in general PROP1 performs better than PROP2, where a significant improvement was found for −12.5dB SNR. This is a direct consequence of the fact that the energy can be distributed over the complete signal in PROP1 rather than only within one short-time frame as with PROP2. Best performance was obtained with SAU which showed better performance than all methods for the lowest three SNRs.

From the listening test results we can conclude that the proposed methods PROP1 and PROP2 both lead to intelligibility improvements of the speech, when corrupted by SSN. However, we also found that one of the reference methods (SAU) performed better than the proposed methods in terms of speech intelligibility. This result is remarkable since SAU includes a power constraint within one short-time frame which implies a much lower algorithmic delay than PROP1, which distributes energy over a complete sentence. One would expect better results with PROP1 since the energy could be redistributed more efficiently over the complete signal rather than only one short-time frame.

Some of the subjects reported that specific conditions in the listening test contained speech which sounded very unnatural. Motivated by this we also performed an initial evaluation in terms of subjective and objective predictions of speech quality. It was hypothesized that the aggressive filtering of the SAU algorithm may come with a cost in terms of speech quality.

Additional tests are performed to investigate the speech quality of the different methods. Speech quality is predicted by PESQ (ITU, 2001; Rix et al., 2002) at SNRS within the range of −15 and 25dB. The wideband version of PESQ is used, which is standardized as ITU-T recommendation P.862.2 (ITU, 2005) and is suitable many different degradations as typically encountered in telephony applications. This includes (non-)linear degradations which share similar properties as the proposed algorithm, e.g., the addition of background noise, filtering (Beerends et al., 2002) and applying TF-varying gain functions as used in noise reduction (Hu and Loizou, 2008) and source separation algorithms (Mowlaee et al., 2012). The speech quality is predicted for UN, PROP1, PROP2, ERVU and SAU degraded with SSN, where an average PESQ score is calculated based on 100 random sentences from the Timit database (Garofolo, 1993). The Timit database is used rather than the Dutch matrix test for the following two reasons. (1) Every word in the Dutch matrix database is normalized independently such that the slope of the psychometric function is steepened. As a consequence, level differences between words may sound very unnatural, which may affect the listening test results somehow. (2) The Dutch test is only based on one female speaker, while the Timit database contains many different male and female speakers, which makes the results more general.

The scores are shown in Fig. 6
                           . For lower SNRs around −10dB the results show that a lower bound for speech quality is reached, which is in line with the findings reported in Liu et al. (2008). For higher SNRs it can be observed that the proposed methods PROP1, PROP2 and ERVU have a similar speech quality as UN. However, PESQ predicts that SAU has a negative effect on speech quality.

As an initial step to see whether these PESQ predictions are in line with real listening tests, the methods PROP1, SAU and UN are compared with each other by means of an AB-preference test. Ten subjects listened to two versions of the same speech sentence and were asked which sentence they preferred in terms of speech quality, e.g., pleasantness and/or naturalness of speech. These subjects were different than from the first experiment. We compared UN with PROP1, UN with SAU and PROP1 with SAU. The order of the two sentences was randomized where the subject listened to five different sentences per algorithm comparison. Thus, each subject listened to a total of 3 algorithm pairs×2 sentences per comparison×5 sentences=30 sentences. Random sentences were taken from the Timit database (Garofolo, 1993) at a sample rate of 16kHz and corrupted by SSN at an SNR of 5 dB. Note that this SNR is somewhat higher than the SNR range in the intelligibility listening test, due to different the SNR range between speech quality and intelligibility where ceiling effects occur (see, for example, Liu et al., 2008).

From the results of the listening test, as shown in Fig. 7
                           , we can see that the ranking is similar as with the PESQ predictions. That is, SAU actually decreases speech quality compared to UN, and PROP1 has better speech quality than SAU. Statistical analysis by means of a Wilcoxon rank sum test (significance level of α
                           =0.05) indicates that the comparisons of PROP1>SAU and UN>SAU are statistically significant with p
                           <0.0005. The speech quality of PROP1 was better than UN, however, this was not significant with p
                           =0.08.

@&#DISCUSSION@&#

One possible explanation for the difference in speech quality and speech intelligibility for SAU in the SSN case, is its strong amplification of higher frequencies. The amplification of high frequencies is also present with PROP1; however, to a less extent. To get a better insight in these properties, the average spectra are plotted in Fig. 8
                         for the unprocessed speech, the processed speech for SAU and PROP1 and the noise. The noise types consist of SSN (as used in the experiments), white noise and noise from a bottling factory hall. Signals are mixed at −10dB where 50 sentences are used for estimating the spectrum.

For SSN it is indeed observed that the average spectrum of PROP1 is closer to the original speech and therefore may sound more natural. However, these high frequencies with SAU are probably responsible for the good performance in terms of intelligibility. From the remaining two spectra (white noise and bottling factory hall noise) we can clearly see that SAU tends to give the speech spectrum the shape of the inverse noise spectrum. This is indeed in line with Eq. (11) where for low SNRs the gain function will be dominated by the inverse of the noise PSD. This is most visible for the bottling factory noise where the strong high frequencies present in the noise (1000–2000Hz) are attenuated in the speech. From the spectra we also observe that SAU does not change the spectrum for the white noise, since the inverse of this noise spectrum results in a flat gain function. Therefore, the benefits of SAU with SSN are not expected with white noise. With PROP1 we observe a different effect for white noise, where the high frequencies of speech are amplified instead. We know that amplifying high frequencies in the case of white noise improves speech intelligibility (Griffiths, 1968; Niederjohn and Grotelueschen, 1976; Skowronski and Harris, 2006), therefore it is expected that PROP1 will also improve intelligibility and therefore will show better performance than SAU for this particular noise type. In the future, additional tests will be performed to test the algorithms for other noise types.

The PESQ scores in Fig. 6 show a lower-bound convergence around −10dB. Here, the speech quality is probably dominated by the low SNRs and the added noise, rather than the applied speech pre-processing algorithms. Moreover, a ceiling effect can be observed with respect to speech intelligibility in Fig. 5 around −5dB, where most of the conditions result in almost fully intelligible speech. We would like to add that this SNR is relatively low because the speech material is based on a closed set of words and is therefore more easy to understand. In the case of more realistic sentence-based material the intelligibility can still be harmed at 5dB (Hu and Loizou, 2007) and in the case of non-native talkers this could even go up to 15dB (van Wijngaarden et al., 2002) when perceived by native listeners. Note that announcements by non-native talkers are very likely to happen at (international) airports and train stations.

In many applications a large range of SNRs can be expected. In a train station, for example, speech can become unintelligible due to a passing train, while little far-end noise will be present outside rush hour. As a consequence, the algorithm should have good performance in both quality and intelligibility over a wide range of SNRs like the proposed method. For applications where speech is only presented at lower SNRs, or where speech quality is of minor importance like military applications, one could argue that SAU should be preferred over the proposed methods. However, as previously explained, this argument may not be valid for all noise types since it is expected that the proposed method will result in higher intelligibility than SAU in the case of white noise.

In the experiments performed in this article we included two extreme cases of the algorithm that is PROP1 and PROP2, referring to a low and high algorithmic delay, respectively. As hypothesized, we found that increasing the lookahead, and therefore the delay, leads to more intelligible speech in noise. An interesting question is how much lookahead is needed in order to reach maximum intelligibility. To answer this question, an initial experiment is performed where the speech intelligibility is predicted with STOI (Taal et al., 2011) as a function of algorithmic delay. STOI is used for prediction since it gave high correlation for the conditions PROP1, PROP2 and UN in isolation (ρ
                        =0.96) as shown in the left plot in Fig. 9
                        . Here a scatter plot is shown between the STOI predictions and the actual intelligibility scores of the listening test. A logistic function is fitted which will be used to map the STOI predictions to intelligibility scores for other algorithmic delays.

In total 50 sentences of the Dutch matrix test (Koopman et al., 2007) are used, which are degraded with SSN at an SNR of −12.5dB, where we found the largest difference in intelligibility between PROP1 and PROP2 in the listening test. We considered the following block lengths in which energy could be redistributed by the proposed method: 125, 250, 500, 750, and 1000ms. Furthermore, the versions PROP1 (32ms) and PROP2 (approximately 2–3s) were also included in the experiment. To prevent fast changing fluctuations between consecutive blocks, a 50% block overlap together with a Hann window is used. The results are shown in the right plot in Fig. 9, from which we can conclude that from around 500ms the predicted intelligibility tends to converge to the performance of PROP1. These predictions indicate that almost maximum intelligibility can be achieved for certain voice applications, e.g., international telephone connection, when taking into account the maximum tolerated network delay of around 400ms (ITU, 2003).

@&#CONCLUSIONS@&#

A speech pre-processing algorithm is presented to improve the speech intelligibility in noise for the near-end listener without modifying the speech energy. This was accomplished by optimally redistributing the speech energy over time and frequency based on a perceptual distortion measure. Due to the fact that the distortion measure takes into account short-time information, transient signals, which are more important for speech intelligibility than vowels, receive more amplification. The lookahead of the algorithm can be adjusted to the specific application. To verify the effect of this, two extreme versions of the proposed method were considered: one with maximum lookahead, where energy is distributed over time and frequency jointly for a complete sentence (PROP1), and one with minimum lookahead where energy is redistributed over frequency within a short-time frame (PROP2). From the results we can conclude that the proposed methods result in a large intelligibility improvement compared to the noisy unprocessed speech. PROP1 performed better than PROP2 due to the fact that PROP1 contains a larger time-span, where a better redistribution of energy is possible. However, this results in a larger algorithmic delay. The proposed methods were compared with a method where transients were amplified (ERVU) and a method that redistributes energy over frequency within one short-time frame (SAU). PROP1 and PROP2 resulted in higher intelligibility scores than ERVU. Best performance in terms of speech intelligibility was obtained with SAU. However, additional tests reveal that the good performance of SAU comes with a decrease in speech quality. PROP1 did not have a negative effect on speech quality. Matlab code of PROP1 and PROP2 is provided at http://www.ceestaal.nl/.

@&#ACKNOWLEDGEMENTS@&#

The research is supported by the Oticon foundation, the Dutch Technology Foundation STW and the European Commission within the Marie Curie ITN AUDIS, grant PITNGA-2008-214699.

@&#REFERENCES@&#

