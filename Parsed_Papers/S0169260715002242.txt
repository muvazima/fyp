@&#MAIN-TITLE@&#Supervised recursive segmentation of volumetric CT images for 3D reconstruction of lung and vessel tree

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           This manuscript proposes a novel recursive strategy based on geometric active contour model to extract lung tissues from the volumetric CT slices accurately.


                        
                        
                           
                           The proposed method could settle the challenging task of separating left and right lungs.


                        
                        
                           
                           Non-sheltered 3D models of lung and vessels tree are constructed based on the extracted datasets.


                        
                        
                           
                           The proposed method is validated by fifteen scans with good performance.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Lung

Supervised semi-3D segmentation

Volumetric CT images

Three dimensional reconstruction

Isosurface method

@&#ABSTRACT@&#


               
               
                  Three dimensional reconstruction of lung and vessel tree has great significance to 3D observation and quantitative analysis for lung diseases. This paper presents non-sheltered 3D models of lung and vessel tree based on a supervised semi-3D lung tissues segmentation method. A recursive strategy based on geometric active contour is proposed instead of the “coarse-to-fine” framework in existing literature to extract lung tissues from the volumetric CT slices. In this model, the segmentation of the current slice is supervised by the result of the previous one slice due to the slight changes between adjacent slice of lung tissues. Through this mechanism, lung tissues in all the slices are segmented fast and accurately. The serious problems of left and right lungs fusion, caused by partial volume effects, and segmentation of pleural nodules can be settled meanwhile during the semi-3D process. The proposed scheme is evaluated by fifteen scans, from eight healthy participants and seven participants suffering from early-stage lung tumors. The results validate the good performance of the proposed method compared with the “coarse-to-fine” framework. The segmented datasets are utilized to reconstruct the non-sheltered 3D models of lung and vessel tree.
               
            

@&#INTRODUCTION@&#

Lung settles the exchange of oxygen and carbon dioxide and is one of the most important organs for human beings. However, it is vulnerable to many deadly diseases such as lung cancer, tuberculosis and pneumonia. Among them, lung cancer which represents the first death cause in men and the second in women, has an impressive rate of about five million deadly cases per year [1]. Air pollution, smoking and occupational hazard make a great contribution to those events.

Generally, X-ray computed tomography (CT) image is regarded as the gold standard in the non-invasive diagnosis [2] and treatment for pulmonary diseases [3]. However, basing on two dimensional (2D) slices, radiologists and surgeons must view hundreds of CT slices in front of a screen or films, which is boring and time consuming. What's more, they have to imagine the three dimensional (3D) features and the spatial relationships between different structures according to their experience. It is not accurate and varies among different radiologists. 3D reconstruction is a powerful medical data visualization technology for physicians and medical researchers. 3D reconstruction could manage all the slices of one patient in a single vision. It has the potential to simplify the radiologic study and could be widely used in clinical surgical treatment planning [4,5], radiation therapy [6], plasty [7,8], etc.

3D reconstruction of lung, vessel tree and tumors is an essential reference for lung cancer and other diseases decisions in clinical diagnosis. Because of the lower density compared with the surrounding high-density bones, muscles and vessels, lung will be sheltered by peripheral tissues in the 3D model of whole body. For example, to view the right side of the lung vessels, chest wall in the right side should be cut away. The sheltered lung models will affect the observation, localization and 3D measurement of lung lesions [9]. In order to realize non-sheltered lung and vessel tree, pre-segmentation of lung tissues from volumetric images is necessary. However, the intensities of parenchyma, vessels, bronchus and tumors differ greatly [2,10]. It brings difficulties to realize a global segmentation of all the pulmonary structures [11]. Lung segmentation from the CT volumetric dataset is still one of the challenges in medical image analysis [12]. With the segmented subdatasets, non-sheltered 3D lung models could be realized using 3D reconstruction method. The spatial relationship between different structures will be obvious and radiologists can get the anatomical knowledge of 3D structures [13]. What's more, the segmented dataset could be used in quantitative analysis, for example vital capacity measurement [14], non-invasive pulmonary function tests[15] etc.

@&#RELATED WORKS@&#

Because of the complex structures in human lung, a single algorithm is not enough to segment all the pulmonary structures, for example thresholding, region growing or cluster analysis methods. Integrated methods have been proposed by many authors. Those methods are divided into two groups: two dimensional (2D) methods [10–13,16,17] and 3D methods [1–3,18–21].

In 2D methods, chest CT datasets are segmented slices by slices. Pu et al. developed an adaptive border marching (ABM) algorithm [10] to segment lung tissues with smooth border and extract all juxta-pleural nodules reliably. The proposed method contains three main steps namely preprocessing, lung border tracking and ABM. First, lung tissues including parenchyma and vessels are extracted with thresholding and flood operation method. Then, lung boundaries are computed with inner border tracing algorithm. In the last, a smoothed border which includes the juxta-pleural nodules is extracted by the ABM algorithm. This method is effective to correct the segmentation defects caused by juxta-pleural nodules.

Zhou et al. introduced a sequential region-splitting process [11] based on normal anatomical structure of the human chest and statistical intensity distributions. The proposed method utilizes the spatial and density relations of the structures within the lung and can segment different structures simultaneously. The segmented slices are used to reconstruct the 3D anatomical lung model. This approach is too complicated, and many technologies are combined together, including threshold, 3D connectivity analysis, surface detection, regions filling, region growing method etc. And the typical computation time of this scheme is about 105min for one dataset (512×512×400−600).

Darmanayagam et al. proposed a supervised approach [12] for lung tissues segmentation in chest CT slices which suffer from lung disorders. If one of the two lungs (left and right) is in disorder, another one will be regarded as a template to segment the disordered one. This approach has four main steps: firstly segment the lung with thresholding and morphological operations; secondly, extract the features of left and right lung; third, evaluate whether there is severe pathology attached to the chest borders by a multilayer feed forward neural network method based on the extracted features in the second step. If it happens, this lung suffers from diseases; finally, the left lung is used as template to extract the right lung if the right lung suffers from disorders according to the reflective and translational properties, vice versa. This method is suitable for both normal and diseased lungs. While, it would lead to serious errors where the reflective and translational properties of left and right lungs are not so well. And this method is not suitable for segmentation of volumetric dataset.

Rosell et al. presented a relay method [16] to extract airway tree from the chest CT scans. The relay method contains three stages: a gross segmentation of the main airway tree using adaptive region growing algorithm, a finer segmentation of the smaller bronchi based on the local information, and a final process to merge the segmentation results of the two first stages using a morphological reconstruction process and a path planning technique.

In [17], Sluimer et al. proposed a segmentation-by-registration method. In this method, a segmentation result of a healthy slice is registered elastically to a slice suffering from pathology. And the results are refined with voxel classification. However, not all the cases could be handled successfully [17], and the computation time needs to be reduced from 3h to a clinically acceptable level.

Li et al. [13] integrated manual and automatic methods together to extract cerebrum tissues. The results are used to construct the 3D digitized Chinese human. If there is distinct difference between adjacent structures, target tissues are segmented using automatic methods and then adjusted manually slice by slice. Otherwise, the target tissues are segmented using magic stick tool in Photoshop software.

A large amount of sequential chest CT slices compose a volumetric dataset and pulmonary tissues in all the slices can be segmented simultaneously by 3D segmentation methods.

Wei et al. proposed a fully automatic segmentation and repairing method for lung parenchyma [18]. This method comprehensively use several methods including optimal iterative thresholding, 3D connectivity labeling, 3D region growing and center position locating method to extract lung tissues, remove the main trachea and separate the left and right lungs. Then repair the segmentation results with a method based on improved chain code and Bresenham algorithm.

Choi et al. [2] introduced a method to extract lung tissues for further automatic pulmonary nodule detection. First, thresholding and 3D connected component labeling methods are utilized to extract lung tissues. Then, fill the holes in the lung tissues using a hole-filling method. And finally, refine the coarse results with a contour correction method to include juxta-pleural nodules. The segmentation of juxta-pleural nodules make a great contribution to the accuracy of pulmonary nodules detection. Rikxoort et al. [20] adopted a similar framework, but different sophisticated methods (multiatlas algorithm and manual interaction) to refine the coarse results.

Yu et al. introduced a 3D lung tissues extraction method for pulmonary fissures segmentation [19]. Otsu thresholding [22] and connected component method are utilized to extract lung parenchyma roughly. Then, smooth the irregular pleurae and enclose the trachea regions within the lung tissues with morphologic rolling ball technique [23] and the boundary identification bridge method [24] respectively. The issue that the left and right lungs might connect together would not affect the final results, thus the authors did not discuss this problem in their approach.

Giorgio et al. introduced a typical “coarse-to-fine” framework based on 3D region growing and 3D binary morphological operations [1] to segment lung structures inclusion of all nodules (internal and pleural). Similar frameworks are proposed in [3,21]. First, lung and trachea excluding the main pulmonary vessels are extracted. Then main bronchi extraction and left and right lungs separation are realized in the fine procedure. Finally, fill the cavities and holes in the left and right lungs separately with a morphological closing procedure, which would include the pulmonary vessels and small nodules. This framework is an efficient approach to segment the lung tissues from the volumetric dataset. However, this method may encounter some problems which will be described in details in Section 4.2.

From the literature discussed above on lung structures segmentation, essentially the majority of them (including 2D [10,12,16] and 3D approaches [1–3,18–21]) adopt the “coarse-to-fine” framework, which integrates different algorithms together in a single framework and take the advantage of each algorithm to extract the target tissues. The main steps of the “coarse-to-fine” methods are as follows:
                           
                              1)
                              extract pulmonary parenchyma excluding vessels and tumors using region growing or thresholding methods roughly.

separate the left and right lungs;

fill cavities and holes representing vessels and lung nodules in the left and right lungs separately using morphological closing methods or other methods;

the 3D binary mask of the pulmonary tissues is obtained and then it is used to extract the lung tissues from the volumetric dataset.

In this paper, we try to construct a novel strategy instead of the “coarse-to-fine” framework. In our proposal, a simple and accurate pulmonary segmentation method using only a single algorithm is introduced, as described in the following subsection.

Inspired by the idea of automated segmentation with manual intervention in [13] and the targets segmentation strategy that take the priori information into account according to the nature of already segmented structures in [25], a supervised semi-3D pulmonary tissues segmentation method is proposed. In the chest X-ray CT slices, there are two properties: first, the contrast between low-density lung tissues and the surrounding high-density chest wall is large and the lung boundaries are obvious; second, the borders of lung tissues change slightly in successive slices when the distance between two slices is small. Based on these two natural properties, our strategy is constructed.

The geometric active contour (GAC) model [26–30] based on curve evaluation theory and level set method is a powerful object segmentation method for images with obvious edges. GAC model based semi-3D method is proposed as follows: first, segment the lung tissues of the first slice in the volumetric dataset by GAC model in which zero level set function (LSF) is initialized manually. Then, segment the next slice by GAC model while the zero LSF is initialized with the shrunken boundary of the previous one slice. Since the boundaries of lung tissues change slightly in successive slices, the automatically initialized zero LSF would converge to true boundary fast and stably. As the cycle repeats, lung tissues in all the slices could be segmented. This leads to the first contribution of this paper. The separating line between the left and right lungs locates in the region between the initial and stable zero LSFs. Because the CT values of the separating line is obviously larger than other region between the initial and stable zero LSFs, the separating line could be extracted simply. Thus, left and right lungs could be separated automatically during the semi-3D segmentation. This is another contribution of this paper. Different from the popular “coarse-to-fine” framework, our strategy is simple and accurate as only a single algorithm is utilized. The supervised semi-3D method has been validated on fifteen volumetric datasets.

Non-sheltered 3D models of lung and inner structures could be reconstructed with the segmented 3D volumetric datasets. Many reconstruction algorithms have been introduced which can be divided into two classes: surface rendering methods [31,32] and volume rendering methods [33]. Generally, surface rendering tries to connect all the vertexes that have the same CT values with triangle patches which form the 3D surface model. In volume rendering 2D imaging is obtained by casting the volumetric data to the screen. To display the relationship between different structures within human lungs, 3D surface rendering is utilized to reconstruct the 3D models of the human lung, pulmonary vascular system and lesions.

The reminder of this paper is organized as follows. Section 2 proposes the semi-3D lung tissues segmentation method in details. Section 3 describes the 3D isosurface rendering method briefly. Experimental results and relevant discussions are reported in Section 4. Section 5 summarizes the advantages and limitation of the proposal, and makes a brief conclusion.

The goal of this step is to segment the lung tissues (including parenchyma, tumors, vessels and bronchus) from the volumetric datasets. The intensities of pulmonary tissues vary in a wide range. The attenuation of air is −1000Hounsfield Units (Hu). The range of most lung tissues is −910Hu to −500Hu [2]. While the CT value of lung vessels and tumors, similar with that of the chest wall and bones, is larger (above −500Hu) [2,10,34]. Thus, the range of lung tissues overlaps with that of peripheral tissues. It is difficult to extract both low-density tissues and high-density tissues by only region based methods. For example if thresholding methods are used, a low thresholding value is not sufficient to extract high-density tissues (lung vessels and tumors), while a large thresholding value will partition chest wall etc. into the target tissues. In this paper, an edge based method is proposed.

The geometric active contour model (GAC) is proposed in recent years, and has been widely used in medical image segmentation and visualization. The basic idea of GAC is to define an energy functional on the level set function (LSF) and the energy functional can drive the zero LSF to the boundaries of the desired object. When the energy functional is minimized, the zero level set functional will stabilize at the target boundaries. GAC model can be divided into two categories: edge based GAC [26–30] and region based GAC [35,36]. The former can segment targets with obvious boundaries and ignore the intensities inhomogeneity inside of the targets, while the latter is suitable for images with noise. Therefore, edge based geometric active contour model is utilized for lung tissues segmentation in this paper. Energy functional of edge based GAC model is defined as follows:
                           
                              (1)
                              
                                 
                                    
                                       E
                                       m
                                    
                                 
                                 (
                                 ϕ
                                 )
                                 =
                                 λ
                                 
                                    
                                       L
                                       g
                                    
                                 
                                 (
                                 ϕ
                                 )
                                 +
                                 v
                                 
                                    
                                       A
                                       g
                                    
                                 
                                 (
                                 ϕ
                                 )
                                 =
                                 λ
                                 
                                    ∫
                                    Ω
                                 
                                 
                                    g
                                    δ
                                    (
                                    ϕ
                                    )
                                    
                                       
                                          
                                             ∇
                                             ϕ
                                          
                                       
                                    
                                    dxdy
                                 
                                 +
                                 v
                                 
                                    ∫
                                    Ω
                                 
                                 
                                    gH
                                    (
                                    −
                                    ϕ
                                    )
                                    dxdy
                                 
                              
                           
                        where λ
                        >0 and ν are constants. Ω is the image domain. ϕ is the abbreviation of ϕ(x, y), which is the LSF of the point (x, y). δ(x) and H(x) is Dirac delta function and Heaviside function respectively. I(x, y) represents the gray value. g is an edge indicator function which is used to reduce the adverse impact of image noise. g is defined as, g
                        ≜(1/1+|∇
                        G
                        
                           σ
                        
                        *
                        I|2). G
                        
                           σ
                         is the Gaussian kernel with a standard deviation σ 
                        [27,29].

The energy term L
                        
                           g
                        (ϕ) computes the line integral of the function g along the zero LSF [37]. This energy term restricts the zero LSF to be a smooth curve. When the zero LSF converges to the desired object boundaries, L
                        
                           g
                        (ϕ) will be minimized. The energy term A
                        
                           g
                        (ϕ) represents the weighted area of the region 
                           
                              Ω
                              ϕ
                              −
                           
                           =
                           {
                           (
                           x
                           ,
                           y
                           )
                           :
                           ϕ
                           (
                           x
                           ,
                           y
                           )
                           <
                           0
                           }
                        . This energy term is introduced to speed up the convergence of deformable curve to the boundaries of the target, especially when the initial curve is far away from the desired object boundaries. If the initial curve is placed outside of the object, the parameter ν should be positive, thus the deformable curve will shrink to the desired target boundaries. If the initial curve locates inside of the target the parameter, ν should be negative value and the deformable curve will expand to the boundaries [29].

In the evolution of traditional GAC model, level set function develops irregularities, which will affect numerical stability and lead to failures. To overcome this instability, researchers proposed a numerical remedy. Level set functions are initialized and re-initialized periodically as signed distance functions [38]. While the re-initialization of level set function methods have side effects of moving the zero level set function away from its original position [39]. What's more, the frequency and timing of re-initialization are still issues to be settled [40,41]. Recently, Li et al. [29,41] proposed a distance regularization energy term to penalize the deviation of level set function which has improved the efficiency and usability of the GAC model. Re-initialization is eliminated since level set function is restricted as an approximate signed distance function automatically. The distance regularization energy term is defined as:
                           
                              (2)
                              
                                 P
                                 (
                                 ϕ
                                 )
                                 =
                                 
                                    1
                                    2
                                 
                                 
                                    ∫
                                    Ω
                                 
                                 
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   
                                                      ∇
                                                      ϕ
                                                   
                                                
                                             
                                             −
                                             1
                                             )
                                          
                                          2
                                       
                                    
                                    dxdy
                                 
                              
                           
                        
                     

The regularization energy term represents the degree that level set function deviates from signed distance function. When 
                           
                              
                                 
                                    ∇
                                    ϕ
                                 
                              
                           
                           =
                           1
                        , P(ϕ) will get the minimum value. During the evolution of energy functional, the distance regularization energy term is restricted to be a small value, thus level set function will be an approximate signed distance function. Energy functional with distance regularization energy term is defined as follows:
                           
                              (3)
                              
                                 E
                                 (
                                 ϕ
                                 )
                                 =
                                 μ
                                 P
                                 (
                                 ϕ
                                 )
                                 +
                                 
                                    
                                       E
                                       m
                                    
                                 
                                 (
                                 ϕ
                                 )
                                 =
                                 μ
                                 
                                    ∫
                                    Ω
                                 
                                 
                                    
                                       1
                                       2
                                    
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   
                                                      ∇
                                                      ϕ
                                                   
                                                
                                             
                                             −
                                             1
                                             )
                                          
                                          2
                                       
                                    
                                    dxdy
                                 
                                 +
                                 λ
                                 
                                    ∫
                                    Ω
                                 
                                 
                                    g
                                    δ
                                    (
                                    ϕ
                                    )
                                    
                                       
                                          
                                             ∇
                                             ϕ
                                          
                                       
                                    
                                    dxdy
                                 
                                 +
                                 v
                                 
                                    ∫
                                    Ω
                                 
                                 
                                    gH
                                    (
                                    −
                                    ϕ
                                    )
                                    dxdy
                                 
                              
                           
                        where μ
                        >0 is the weight of distance regularization energy term. According to Euler-Lagrange theorem, minimizing the energy functional is equal to solve the Partial Differential Equation (PDE) which is derived from the energy functional (3).
                           
                              (4)
                              
                                 
                                    
                                       ∂
                                       ϕ
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 =
                                 μ
                                 
                                    
                                       
                                          Δ
                                          ϕ
                                          −
                                          div
                                          
                                             
                                                
                                                   
                                                      
                                                         ∇
                                                         ϕ
                                                      
                                                      
                                                         
                                                            
                                                               ∇
                                                               ϕ
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 +
                                 λ
                                 δ
                                 (
                                 ϕ
                                 )
                                 div
                                 
                                    
                                       
                                          g
                                          
                                             
                                                ∇
                                                ϕ
                                             
                                             
                                                
                                                   
                                                      ∇
                                                      ϕ
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 +
                                 vg
                                 δ
                                 (
                                 ϕ
                                 )
                              
                           
                        
                        δ(x) is the derivation of H(x), δ(x)=
                        H(x)′. In numerical implementation, δ(x) and H(x) are replaced by smoothed functions δ
                        
                           ɛ
                        (x) and H
                        
                           ɛ
                        (x), which are defined as below,
                           
                              (5)
                              
                                 
                                    
                                       δ
                                       ɛ
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      1
                                                      
                                                         2
                                                         ɛ
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            1
                                                            +
                                                            cos
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           π
                                                                           x
                                                                        
                                                                        ɛ
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                   
                                                   ≤
                                                   ɛ
                                                
                                             
                                             
                                                
                                                   0
                                                   ,
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                   
                                                   ≥
                                                   ɛ
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       H
                                       ɛ
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      1
                                                      2
                                                   
                                                   
                                                      
                                                         
                                                            1
                                                            +
                                                            
                                                               x
                                                               ɛ
                                                            
                                                            +
                                                            
                                                               1
                                                               π
                                                            
                                                            sin
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           π
                                                                           x
                                                                        
                                                                        ɛ
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                   
                                                   ≤
                                                   ɛ
                                                
                                             
                                             
                                                
                                                   1
                                                   ,
                                                
                                                
                                                   x
                                                   >
                                                   ɛ
                                                
                                             
                                             
                                                
                                                   0
                                                   ,
                                                
                                                
                                                   x
                                                   <
                                                   −
                                                   ɛ
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        ɛ is a constant, and usually it is set to 1.5 [29]. Re-initialization is not needed when the distance regularization energy term is added to the energy functional. What's more, the initial level set function could be configured as binary function instead of signed distance function. The initial level set function is defined as,


                        
                           
                              (7)
                              
                                 
                                    
                                       ϕ
                                       0
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   −
                                                   ρ
                                                   ,
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   ∈
                                                   
                                                      
                                                         R
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   ρ
                                                   ,
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   ∈
                                                   Ω
                                                   −
                                                   
                                                      
                                                         R
                                                         0
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where ρ
                        >0 is a constant and it is set ρ
                        =2.0 in this paper [29]. R
                        0 defined with the initial zero LSF, is a sub-region of the image domain.

The GAC model is sensitive to the initial zero level set function [29,41]. The initial zero LSF will expand or shrink according to the parameter ν in the energy functional. As described in Section 2.1, if the initial deformable curve locates inside of the target and ν
                        <0, the deformable curve will expand to the target boundary. If the initial deformable curve locates outside of the target and the ν
                        >0, the initial deformable curve will shrink to the target boundary. However, the initial curve should not across both the target and the background; otherwise neither shrinking nor expanding can drive the initial zero LSF to the target boundary. Thus, to segment pulmonary tissues, zero LSF should be initialized carefully and in most cases manual methods are utilized to initialize the LSF. However, there are hundreds of CT slices that contain lung tissues. Manual initialization method means amount of work.

In this section, a semi-3D segmentation method for human lung is provided. According to anatomy, the size of human lung in cross section increases approximately from the apex pulmonis to the dome of the diaphragm, and then it decreases approximately from the dome of the diaphragm to the basis pulmonis. And the size of cross section becomes the largest near the dome of the diaphragm, as in Fig. 1
                        . In this section, the semi-3D segmentation method is proposed according to this characteristic. First, the first CT slice is segmented with GAC model initialized manually. Then the zero LSF of GAC model in the next slice is configured under the supervision of the segmentation result in the previous one slice. As the domino effect, lung tissues in all slices could be extracted. Manual initialization is not needed in every slice and the result is accurate with manual intervention in the processing of the first slice.

The initial LSFs locate inside the lung tissues and the deformable curves are driven by the energy functional to expend to the true boundaries. CT slices in one dataset are partitioned into two groups (G1 and G2), as shown in Fig. 1. Slices between the apex pulmonis and the dome of the diaphragm (G1) are segmented from the top to bottom. While slices between the dome of the diaphragm and the basis pulmonis (G2) are segmented from the bottom to the top. Thus, the boundaries of the previous one slice locates inside of the boundaries of the current slice approximately, as Fig. 2
                        .

The lung tissues segmented by GAC model in the nth slice is described with R
                        
                           n
                         and it can be defined as,
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             
                                                R
                                                n
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   |
                                                   
                                                      ϕ
                                                      
                                                         t
                                                         =
                                                         ∞
                                                      
                                                      n
                                                   
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   <
                                                   0
                                                
                                             
                                          
                                       
                                       
                                    
                                 
                              
                           
                        where 
                           
                              ϕ
                              
                                 t
                                 =
                                 ∞
                              
                              n
                           
                           (
                           x
                           ,
                           y
                           )
                         is the stable LSF of the nth slice. And 
                           
                              ϕ
                              
                                 t
                                 =
                                 0
                              
                              n
                           
                           (
                           x
                           ,
                           y
                           )
                         is the corresponding initial LSF.

Actually human lung is significantly complex. The boundaries of the former slice may across the boundaries of next slice in some cases as in Fig. 2(b) and (d). If the boundary of the segmentation result R
                        
                           n
                         in the previous one slice is used to configure the initial zero LSF in the current slice directly, boundary leakage may happen as described above. To ensure that the initial zero LSF of 
                           
                              ϕ
                              
                                 t
                                 =
                                 0
                              
                              
                                 n
                                 +
                                 1
                              
                           
                           (
                           x
                           ,
                           y
                           )
                         locates inside of lung tissues in the (n
                        +1)th slice, a shrunken region 
                           
                              R
                              shrunken
                              n
                           
                         of the segmentation result in the nth slice is utilized instead of R
                        
                           n
                        .
                           
                              (9)
                              
                                 
                                    R
                                    shrunken
                                    n
                                 
                                 =
                                 
                                    
                                       
                                          (
                                          x
                                          ,
                                          y
                                          )
                                          |
                                          
                                             ϕ
                                             
                                                t
                                                =
                                                ∞
                                             
                                             n
                                          
                                          (
                                          x
                                          ,
                                          y
                                          )
                                          <
                                          Δ
                                          ϕ
                                       
                                    
                                 
                                 ,
                                 
                                 Δ
                                 ϕ
                                 <
                                 0
                              
                           
                        where Δϕ is constant (−ρ
                        <Δϕ
                        <0). According to the property of LSF, 
                           
                              R
                              shrunken
                              n
                           
                         is a subset of R
                        
                           n
                         as in Fig. 3
                        . And the optimized initial LSF 
                           
                              ϕ
                              
                                 
                                    
                                       t
                                       =
                                       0
                                    
                                    shrunken
                                 
                              
                              
                                 n
                                 +
                                 1
                              
                           
                           (
                           x
                           ,
                           y
                           )
                         is defined as,
                           
                              (10)
                              
                                 
                                    ϕ
                                    
                                       
                                          
                                             t
                                             =
                                             0
                                          
                                          shrunken
                                       
                                    
                                    
                                       n
                                       +
                                       1
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   −
                                                   ρ
                                                   ,
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   ∈
                                                   
                                                      R
                                                      shrunken
                                                      n
                                                   
                                                
                                             
                                             
                                                
                                                   ρ
                                                   ,
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   ∈
                                                   Ω
                                                   −
                                                   
                                                      R
                                                      shrunken
                                                      n
                                                   
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

As in Fig. 4
                         the shrunken boundaries of slice 54 locates inside of the boundaries of slice 55, and it is same with slice 177 and 176. The initial LSF supervised by the segmentation result of the previous one slice is close to the true boundary. Thus, it is easy and fast for the zero LSFs to converge to the true boundaries.

In fact after dozens of automatic segmentation, the deformable curves might deteriorate and deviate from the true boundaries. There is a possibility that segmentation errors of the slices in front are transferred to all the segmentation results in subsequent slices. To prevent these incidents, the initial level set functions are re-initialized manually after Δn slices.

The left and right lungs separation is important for the detection and evaluation of pulmonary diseases through the accurate quantitative global and local lung function measurement [3,21,42]. If the patient make a deep inspiration during the CT scanning, the anterior and posterior junction regions between two lungs can be thin. In these slices, the separating line between two lungs are narrow and in low contrast because of partial volume effects (PVE). They are likely to connect together, which makes two lungs separation still a challenging task in lung tissues segmentation. To settle this issue, researchers have proposed several methods [21,43]. In the “coarse-to-fine” framework, morphological operation is one of the most popular methods [44]. Unfortunately, the times of the morphological operations varies with the area of the connected region. If the area is large, more morphological operations and computational time are needed. Users must choose an appropriate iteration number for each slice. What's more, morphology closing and opening operations may introduce artificial errors [1].

In the proposed semi-3D approach, two lungs may also connect together, as in Fig. 5
                        (c). To overcome this problem, an effective step is proposed according to the continuity of the adjacent slices. Suppose the stable deformable curves of two lungs do not merge together in slice n (Fig. 5(a)), while it happens in slice n+1 (Fig. 5(c)). That means the pixels of the separating line (R
                        
                           SL
                        ) must be located in the region between the initial zero LSF and stable zero LSF (
                           
                              R
                              initial
                              stable
                           
                        ) as in Fig. 5(e). 
                           
                              R
                              initial
                              stable
                           
                         can be defined as (11).
                           
                              (11)
                              
                                 
                                    R
                                    initial
                                    stable
                                 
                                 =
                                 
                                    
                                       ∁
                                       Ω
                                    
                                 
                                 
                                    R
                                    shrunken
                                    n
                                 
                                 ⋂
                                 
                                    
                                       R
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       R
                                       SL
                                    
                                 
                                 ⊊
                                 
                                    R
                                    initial
                                    stable
                                 
                              
                           
                        where 
                           
                              R
                              shrunken
                              n
                           
                         and R
                        
                           n+1 are defined in (9) and (8) respectively. 
                           
                              
                                 ∁
                                 Ω
                              
                           
                           
                              R
                              shrunken
                              n
                           
                         represents the complement of 
                           
                              R
                              shrunken
                              n
                           
                         in the image domain Ω. 
                           
                              R
                              initial
                              stable
                           
                         is the region between the initial curves and the stable curves in slice n+1. R
                        
                           SL
                         represents the pixels in the separating line. In the region 
                           
                              R
                              initial
                              stable
                           
                        , the CT value of the separating line is obviously larger than other area and it can be extracted by thresholding method. Hence, the fusion problem could be settled easily and effectively according the stable LSFs of consecutive slices.

The working flow of supervised GAC based semi-3D lung tissues segmentation from the volumetric datasets is listed as follows:
                           
                              Step 1
                              Configure the parameters of geometric active contour model.

Extract lung tissues in the nth slice in which the LSF is initialized manually.

Extract lung tissues from the slice (n
                                 +1) to the slice (n
                                 +Δn) automatically, in which the LSF are initialized under the supervision of the stable LSF in the previous one slice as (9) and (10).

Detect whether the left and right lungs connect together according to the number of connected components. If it does, separate the two lungs with the proposed approaches in Section 2.3.

Repeat the step 2–step 4 until that lung tissues are extracted from all volumetric images.

After the segmentation of the target tissues from volumetric data, 3D reconstruction methods are utilized to realize 3D visualization of human lung. There are many 3D reconstruction methods which can be classified into two classes: surface rendering and volume rendering. To display the spatial relationship of different structures clearly in the lung tissues, surface rendering is chosen in our research.

Isosurface methods are indirect volume rendering (IVR) [31–33] techniques, and they are widely used in computer graphics and 3D volumetric data visualization. Generally, CT values which reflect the densities of tissues are the same in the same structures. 3D surface models are reconstructed according to CT values. The 3D volumetric dataset is regarded as a scalar field F(V), where F is a scalar function on R
                     3. The surface can be defined as


                     
                        
                           (13)
                           
                              F
                              (
                              V
                              )
                              =
                              α
                           
                        
                     where α is called isovalue which present the CT value of the target.

In the volumetric datasets, the voxels are regarded as points and eight neighboring points compose a cubic. Vertex of the cubic that has a larger value than or equal to the isovalue, is considered to be inside or on the surface, otherwise it is considered to be outside of the surface. By detecting the cubic edges that are intersected with the isosurface and calculating the corresponding coordinates of the intersections with interpolation methods, the vertices of the isosurface will be calculated. Connecting the vertices with Delaunay triangulation, the isosurface will be obtained.

In this paper, the lung structure is displayed using some MATLAB commands [45,46], including isosurface, patch, set and isonurmals. To display a surface graphically in three dimensions, the surface must be defined as a sequence of connected polygons. Thus, firstly isosurface is used to calculate the vertices of the polygons and these polygons are specified in a proper format meanwhile. Secondly, patch command reconstructs the 3D surface model according to the sequence of polygons. Thirdly, 3D visual effect is enhanced with lighting and shading configuration based on the mesh normals which are calculated with the isonormals command. Using suitable isovalues, 3D model of different structures can be reconstructed.

@&#EXPERIMENTAL RESULTS@&#

The proposed methods are implemented and test on fifteen datasets of high-resolution CT images. The datasets are acquired on a 64-slice CT scanner (Philips Medical Systems) using a spiral mode. Axial images were reconstructed at 2.0mm thickness and 1.0mm increment. Slices are 512×512 pixel, 12-bit grey level matrices. The datasets are in DICOM format (http://medical.nema.org/). The proposed methods are implemented with MATLAB 2010a. The experiments were run on a computer with 4 CPU 2.8GHz and 3GB RAM.

As described in Section 2.2, the proposed method takes fully advantage of the characteristic of the slight changes of lung tissues between consecutive slices. And the segmentation result of one slice is used during the process of the next slice until all the lung tissues are extracted. To eliminate the danger that segmentation errors are transferred to the subsequent slices during the automatically segmentation of lung tissues, the initial zero LSFs are initialized manually every Δn
                        =10 slices.

There are several parameters in the GAC model, including λ, ν, μ and time step Δt. This GAC model is not sensitive to λ and μ. They are set λ
                        =5.0 and μ
                        =0.1 respectively as discussed in [29]. A large |ν| may cause boundary leakage for images with weak object boundaries [29], i.e., the deformable curve may pass through the desired target boundary. To avoid the possibility of boundary leakage, a relative small 
                           
                              ν
                           
                         (ν
                        =−1.0) is chosen in the experiments. As for Δt, there is a constraint for Δt and μ, Δt
                        ×
                        μ
                        <1/4 [29,47]. A large time step will reduce the iteration times and computation time. It is set as Δt
                        =1.0 considering the sufficient numerical accuracy and the efficiency.

As the initial curves will expand to the true boundaries driven by the forces in (3). If the initial curves across both the foreground and the background, boundary leakage will occurs. Thus the shrunken curves in the previous one slice is used to configure the initial deformable curve in the current slice. To insure that the initial curve locates inside of the lung tissues, a relative large 
                           
                              
                                 Δ
                                 ϕ
                              
                           
                         is suggested. However, if the initial zero LSF is far away from the true boundary, it would be time-consuming. An empirical value (Δϕ
                        =−1.4) is chosen in the experiments.


                        Figs. 6 and 7
                         
                        show two instances of the semi-3D segmentation process of the tenth scan which suffers from lung tumors. Fig. 6 shows the semi-3D lung tissues segmentation of CT slices (slice 55–slice 65) in G1. Fig. 7 illustrates that of slices (slice 192–slice 182) in G2. Initial zero LSFs are defined manually in slice 55 (Fig. 6(a)) and slice 192 (Fig. 7(a)). From slice 56 to 65 (Fig. 6(b)–(k)) and slice 191 to 182 (Fig. 7(b)–(k)), initial LSFs are configured automatically with the supervision of the results in the previous one slices, as defined (9) and (10). In Fig. 6 and Fig. 7, column (l) displays the initial zero LSFs. The initial zero LSFs are located inside of the lung tissues and close to the true boundaries. Column (m) and column (n) display the segmentation results which contain all the structures in human lung.

In the following subsection, the performance of the proposed method is carefully evaluated compared with the “coarse-to-fine” lung tissues segmentation framework.

As described in Section 1, in the third step of the 2D and 3D “coarse-to-fine” methods, the vessels and tumors are filled by morphological closing methods. However, the morphological closing methods are vulnerable to the size of structural element. This issue is ignored in much literature. A small structural element is not enough to fill the cavities and holes, while a large structural element may introduce unexpected errors [10]. In [1], a spherical structural element (SSE) is used in 3D morphological closing operations. As in Fig. 8
                        , morphological closing process might not fill the cavity (a lung tumor) if the diameter of the SSE is smaller than 25 pixels. That is to say the diameter of SSE should not be smaller than 25 pixels in this dataset (ninth scan) during the 3D morphological closing. While in Fig. 9
                        , there is an obvious boundary leakage even with a smaller SSE (the diameter of the SSE is 20 pixels) in a slice from the same dataset with Fig. 8. In this case, there is no suitable SSE to choose. In fact, there are few mature methods existed to select a suitable SSE for each stack of volumetric slices. In our proposed strategy, this issue is no longer a problem.

In the lung tissues segmentation, it is significantly important to extract both the inner nodules and pleural nodules. In the proposed semi-3D method, the inner nodules can be extracted directly similar with lung vessels. And the segmentation of the pleural nodules could be settled easily because of the continuity in successive slices, as shown in Fig. 10
                        .

To quantitatively evaluate the accuracy of the proposed semi-3D segmentation method, a volume overlap indicator (the famous Jaccard similarity coefficient) is introduced as in [1,18,20].


                        
                           
                              (14)
                              
                                 
                                    
                                       
                                          Volumeoverlap
                                          =
                                          
                                             
                                                V
                                                (
                                                Groundtruth
                                                &
                                                Proposed
                                                )
                                             
                                             
                                                V
                                                (
                                                Groundtruth
                                                
                                                   
                                                      Proposed
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       
                                    
                                 
                              
                           
                        where Groundtruth is volumetric binary mask which is segmented manually according to medical knowledge. Proposed is that of the semi-3D method proposed in this paper. V is a function to calculate the volume by counting numbers. And & and | are two kinds of logical operations. The numerical value of Volumeoverlap varies from 0 to 1. If Proposed overlap Groundtruth completely, Volumeoverlap will be the largest (Volumeoverlap
                        =1). Otherwise, if the segmentation result is far away from the groundtruth, Volumeoverlap will be small. The volume overlap of fifteen scans with our proposed method is shown in Fig. 11
                        
                     


                        Table 1
                         compares the performance of the proposed method with four typical “coarse-to-fine” methods [1,18,20,21] which were introduced previously to chest CT scans in the similar condition with our experiments. From Table 1, it can be observed that the volume overlap of the proposed method achieves an average value 0.98 with the standard deviation 0.01 (0.98±0.01). The “coarse-to-fine” methods achieve reasonable segmentation accuracy. However, only the method in [21] can realize similar segmentation accuracy with the proposed method. Unfortunately, the standard deviation in [21] is a little large. Compared with these methods, the performance of the proposed method is more accurate and stable.

With only 2D slices, radiologists will try to imagine the structures and the relationships according to their experience, which may cause some mistakes as it varies for different radiologists and doctors. In this section, 3D models of lung and vessels are reconstructed to provide doctors more reliable vision. And the 3D volumetric datasets segmented by the proposed semi-3D method in Section 2 are used. The isovalues (α) of lung and vessel tree are set to be −1000Hu and −500Hu respectively in the experiments.

The left and right lungs are reconstructed individually in the 3D surface models of lung. Figs. 12 and 14
                         
                        show the 3D surface models of two of the fifteen scans (the ninth and second scans), and reveal the information about the surface shape in different view angles. The ninth scan (Fig. 12) suffers from lung tumors and the second is a healthy scan (Fig. 14). Figs. 13 and 15
                         
                        show the 3D models of lung vessel tree of the ninth and second scans respectively. In Fig. 13, lung vessels and tumors are displayed together because the CT values of these two structures are similar. The lung tumor in the ninth scan is marked with blue circular ring in the 3D lung model (Fig. 12) and in the 3D vessel tree model (Fig. 13). The spatial relationship between different structures are clear, which will be useful in surgical operations and stereotactic radiotherapy.

In summary, this paper realizes non-sheltered 3D models of lung structures basing on a supervised recursive semi-3D segmentation method. The proposed semi-3D segmentation method takes fully advantages of the two properties: (1) the CT values in the lung tissues are less than the surrounding tissues. And the boundary between lung and surrounding tissues is obvious; (2) the boundaries of lung tissues change slightly between successive slices. Thus, the initial zero level set function could be configured automatically with the shrunken stable curve in the previous one slice. The initial deformable curve is close to the true boundary and will converge to the true boundary steadily and fast. As the domino effect, all the lung tissues could be extracted from the volumetric CT slices. During the semi-3D segmentation process, the left and right lungs are separated automatically according to the continuity of the adjacent slices. In addition, our strategy could settle some unexpected problems in the “coarse-to-fine” framework described in Section 4.2. In the last, the segmented volumetric datasets are used to realize non-sheltered 3D model of human lung structures, which verifies the proposed semi-3D lung tissues segmentation method in turn.

Firstly, our proposed method could accurately segment all the structures in human lung including pulmonary parenchyma, vessels, bronchus and lesions. This is because the geometric active contour model used in the proposed semi-3D segmentation method is sensitive to edges and the density distribution inside of the deformable curves has no effect on the segmentation results. Combining with periodical manual intervention, the proposed method is capable of obtaining accurate results. Secondly, in the “coarse-to-fine” framework, morphological erosion which is a popular method for separating the left and right lungs, would introduce artificial errors. And morphological closing which is essential to fill the holes and cavities (vessels and tumors), is vulnerable to the selection of the size of structural element. In our proposed method, these issues are no longer problems. The left and right lungs are separated effectively based on the continuity of adjacent slice during the semi-3D procedure. Thirdly, our proposed method is easy to implement since only one algorithm is utilized. While the methods using a “coarse-to-fine” framework integrate many different algorithms. In the experiments, the 3D lung models are reconstructed with segmented dataset deriving from our method. The clear inner structures of these 3D models validate the effectiveness of proposed method.

There are still some limitations in our method. The main limitation is that our method is a semi-3D method with manual intervention. During the volumetric slices segmentation, zero LSF is initialized manually every Δn slices. Secondly, the time consumption is a little large because of the large amount of datasets and manual intervention. Typically 30min are needed for one dataset in the proposed method implemented with MATLAB. The executing time of Giorgio's “coarse-to-fine” 3D method [1] implemented with C++ is about 7min for the datasets that are similar with the datasets in our experiments. In Rikxoort's “coarse-to-fine” method [20], 18.6min per scan is needed on average. However, if segmentation errors are detected, it will take 120min on average to refine the results with a multiatlas method. The computation time of the 2D schemes in [11] and [17] is 105min and 3h for one dataset respectively. By manual segmentation method, 12–15h is needed for one dataset. However, the limitation could be settled by improving the hardware platform with GPU and optimizing our source code from MATLAB into C or C++ in the future.

In the future research, the semi-3D segmentation method will be used in quantitative analysis of the vital capacity and global and local lung function measurements. Additionally, we intend to investigate the performance of the proposed method for other organs with obvious edges, for example human bones, which can be used in 3D patient-specific modeling.

The authors declare that there is no conflict of interest.

@&#ACKNOWLEDGEMENTS@&#

This paper is supported by National Natural Science Foundation of China under Grant #61472216 and #61272428, by PhD Programs Foundation of Ministry of Education of China under Grant #20120002110067.

@&#REFERENCES@&#

