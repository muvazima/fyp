@&#MAIN-TITLE@&#Automatic mesh generation and transformation for topology optimization methods

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Towards the integration of topology optimization methods with CAD.


                        
                        
                           
                           Automatic transformation of topology optimization results into 3D shapes.


                        
                        
                           
                           New mesh generation and transformation algorithms for heterogeneous geometry.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Mesh generation

Advancing front

Multiple domains

Conforming boundaries

B-Rep

CAD/FEA integration

Topology optimization

@&#ABSTRACT@&#


               
               
                  This paper presents automatic tools aimed at the generation and adaptation of unstructured tetrahedral meshes in the context of composite or heterogeneous geometry. These tools are primarily intended for applications in the domain of topology optimization methods but the approach introduced presents great potential in a wider context. Indeed, various fields of application can be foreseen for which meshing heterogeneous geometry is required, such as finite element simulations (in the case of heterogeneous materials and assemblies, for example), animation and visualization (medical imaging, for example). Using B-Rep concepts as well as specific adaptations of advancing front mesh generation algorithms, the mesh generation approach presented guarantees, in a simple and natural way, mesh continuity and conformity across interior boundaries when trying to mesh a composite domain. When applied in the context of topology optimization methods, this approach guarantees that design and non-design sub-domains are meshed so that finite elements are tagged as design and non-design elements and so that continuity and conformity are guaranteed at the interface between design and non-design sub-domains. The paper also presents how mesh transformation and mesh smoothing tools can be successfully used when trying to derive a functional shape from raw topology optimization results.
               
            

@&#INTRODUCTION@&#

The increasingly intensive use of numerical methods in general, such as finite element analysis (FEA), in the context of product development with computer aided design (CAD) tools has stimulated research work towards automatic, fast and efficient mesh generation methods and algorithms  [1] for the past 25 years. During this time, a significant effort has been made on developing reliable and versatile geometric modelling tools and on integrating these tools with mesh generation tools and consequently with FEA tools. More recently, the use of numerical methods (such as FEA) and geometric modelling tools has been extended to many other fields of activity and for many different types of applications (games, animation, virtual reality, architecture, medical imaging, etc.). Consequently, there is an emerging need for the adaptation of automatic mesh generation and geometric modelling tools in a wide variety of contexts. In general, there is an increasing need for automatically modelling various types of domains with respect to various types of constraints and generating high quality meshes over these domains. An example of these constraints is automatically generating FEA meshes over multiple domains  [2–5], while satisfying size, quality and continuity requirements. This type of constraint is encountered in many fields of activity, such as numerical simulations (topology optimization methods, multi-physics or multi-phases, multiple parts and multi-materials, etc.), virtual reality or imaging.

Among the fields of activity mentioned above, topology optimization methods   [6–12] are among the most promising tools for the future in the context of new product development with CAD. These methods are basically intended to automate the optimization of parts, assemblies and structures through iterative finite element analyses applied to automatically evolving shapes and topologies. Bringing this type of technology to maturity is likely to open a new era for product development with CAD, as these methods somehow tend to automate the production of new design ideas. From different aspects, which we are going to present in this paper, the key to this evolution towards integrating topology optimization methods into the product design process relies on adapting geometric modelling and mesh generation tools to this specific context. Indeed, this paper introduces new ideas and tools intended to contribute to the ultimate objective of fully automating the optimization of statically loaded 3D mechanical parts, assemblies and structures using CAD and topology optimization methods. More specifically, the paper focuses on the adaptation of geometric modelling and mesh generation tools for the integration of topology optimization methods with respect to:


                     
                        
                           •
                           The upstream specification of input data required by topology optimization methods: this basically consists of subdividing the domain to be optimized into design and non-design sub-domains and automatically meshing these sub-domains with specific constraints. This paper presents the development of an adaptation of the advancing front mesh generation method (AFM) aimed at the automatic generation of well sized and shaped tetrahedrons over multiple sub-domains in contact, in a general context, which can be successfully applied in the specific context of meshing sub-domains for topology optimization methods.

The downstream computation of a 3D optimized shape and topology from raw topology optimization results. Raw topology optimization results in general do not explicitly describe a 3D optimized geometric model. Deriving an optimized shape and topology from raw topology optimization results represents a major challenge in the context of using it for product development purposes and this paper introduces mesh transformation and mesh smoothing tools that are intended towards this direction.

The paper starts, in the next section, with the main problem statement concerning the upstream specification of input data required by topology optimization methods (generating a valid and continuous 3D mesh over 3D heterogeneous geometry). After this, Section  3 focuses on the way in which heterogeneous geometry can be modelled using specific boundary representation (B-Rep) concepts. Section  4 is dedicated to the presentation of an automatic mesh generation scheme for multiple sub-domains in contact. Section  5 starts with the application of meshes obtained, using the approach proposed, on practical topology optimization problems, followed by the illustration of raw topology optimization results derived from these meshes. Section  5 then introduces two possible alternatives (based on mesh transformation and smoothing), along with the results obtained, for processing raw topology optimization results with the objective of automatically deriving optimized 3D shapes from these raw results. Section  6 draws conclusions and outlines future work.

For various reasons, and for many applications, there is a need to be able to describe a given closed domain 
                        Ω
                      of the 3D space with a heterogeneous representation of geometry. This is the case, for example, when 
                        Ω
                      is physically composed of an assembly of heterogeneous materials, for which a specific sub-domain must be defined for each type of material. Generally speaking, given a heterogeneous and closed geometric domain 
                        Ω
                     , it can be divided into 
                        N
                        +
                        1
                      closed regions or sub-domains 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      such that the union of all 
                        
                           
                              ⋃
                           
                           
                              i
                              =
                              0
                           
                           
                              N
                           
                        
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      equals 
                        Ω
                     . A common problem consists of automatically generating 
                        N
                        +
                        1
                      meshes of the regions or sub-domains 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      and tagging each element as belonging to one of the 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                     , while globally obtaining a continuous and conformal mesh of 
                        Ω
                      when these 
                        N
                        +
                        1
                      meshes are put together. Fig. 1
                      illustrates, on an example of a 2D mesh composed of triangles, a conformal mesh and a non-conformal mesh at the boundary between the two sub-domains in contact.

Once the problem is stated this way, one of the most sensitive issues in adapting standard mesh generation procedures, either Delaunay, advancing front or octree based  [1] to this specific context is how sub-domains 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      are defined. As introduced in the next section, sub-domains 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      can be defined in many different ways, which has a major impact on how standard mesh generation procedures can be adapted, and how mesh conformity and continuity can be insured at the interface between the sub-domains in contact. As mentioned previously, in the work presented here, the primary objective is in developing a mesh generation tool for the upstream integration of topology optimization into the CAD process, but it appears that this tool has many other potential applications in the more general context of automatically meshing heterogeneous geometry.

Given a closed 3D domain 
                           Ω
                         (with 
                           B
                         defined as the boundary of 
                           Ω
                        ) divided into 
                           N
                           +
                           1
                         sub-domains 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         (with 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         defined as the boundary of 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                        ). The sub-domains 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         themselves and/or the boundaries (a subset of 
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 0
                              
                              
                                 N
                              
                           
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                        ) between these sub-domains can be defined either explicitly (sets of B-Rep models for example) or implicitly (with respect to the definition of a background Cartesian grid of octree structure where cells are classified with respect to the sub-domains 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                        ) and this can be done using several approaches. Also, the boundaries between sub-domains can be defined either exactly (as an analytically defined free-form surface, for example, as is the case in the work presented here) or approximately (as a triangulation, like in  [2,3]). For example, a common and quite easy way (see  [5]) used to define multiple sub-domains 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         is introducing a specific octree structure in which each cell is classified with respect to its belonging to the interior or boundary of some of the sub-domains 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                        . In this case, the boundaries 
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         and, hence, the frontiers between two or more sub-domains 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         are defined implicitly through the definition, on the edges of cells, of intersection points (in the case of primal contouring or marching cubes methods) and of normal vectors (in the case of dual contouring methods). Such an implicit definition of frontiers is usually referred to as isocontouring  [5]. Another issue, which has a major impact on which mesh generation approach is likely to be used is that, in some cases, the union of boundaries 
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 0
                              
                              
                                 N
                              
                           
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                         can be either manifold or non-manifold, as illustrated (on a 2D case for more clarity) in Fig. 2
                        .

Optimizing the design of parts, assemblies and structures is classically based on iteratively applying several stages of finite element analysis (FEA) in order to induce gradual shape and topology enhancements. Several methods have been introduced aimed at the automation of this optimization process, among which are topology optimization methods   [6–12]. The great potential of these methods is that the shape and topology evolution mentioned above is not constrained by the initial topology, which leads to results where the final topology is not a priori known. The way both shape and topology are optimized is likely to be extremely powerful in the context of the product development process with computer aided design (CAD). The input data required by these methods typically consists of an initial 3D geometry along with the specification of subsets of this initial geometry that should not be affected by the optimization process. For example, the material around fastening holes or, more generally, the material around geometric features on which boundary conditions are applied should not be modified by the optimization process. All these subsets of the initial geometry that must be kept intact are referred to as the non-design sub-domain. The remainder of the initial geometry is composed of material which is likely to be remodelled by the topology optimization process applied. This latter subset of the initial geometry is referred to as the design sub-domain. Most topology optimization methods require that non-design and design geometries must be meshed such that finite elements are tagged as design and non-design elements and that continuity and conformity are guaranteed at the interface between design and non-design sub-domains. These mesh generation requirements inherent to topology optimization methods are part of the general context presented above, with 
                           Ω
                        corresponding to the entire geometry and 
                           
                              
                                 Ω
                              
                              ¯
                           
                           =
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         corresponding to the non-design sub-domain (composed of 
                           N
                         disconnected volumes 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                        ) Consequently, the design sub-domain is implicitly defined as 
                           
                              
                                 Ω
                              
                              
                                 0
                              
                           
                           =
                           Ω
                           −
                           
                              
                                 Ω
                              
                              ¯
                           
                        .

In the work presented here, the definition of 
                           Ω
                         along with sub-domains 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         is made using classical boundary representation (B-Rep) concepts. A first B-Rep model is defined for 
                           Ω
                         (corresponding to the entire geometry) and a second B-Rep model for 
                           
                              
                                 Ω
                              
                              ¯
                           
                           =
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         (corresponding to the non-design sub-domain in the context of topology optimization). Fig. 3
                        
                         illustrates, on a sample part, the domain 
                           Ω
                         and its sub-domains 
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 3
                              
                           
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         (Fig. 3(a)) along with the B-Rep model associated with 
                           Ω
                         (Fig. 3(b)) and the B-Rep model associated with 
                           
                              
                                 Ω
                              
                              ¯
                           
                           =
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 3
                              
                           
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         (Fig. 3(c)).

The definition non-design sub-domains could have been theoretically done at the mesh level instead of the geometry level. The reason why it is much more convenient and efficient to define it at the geometry level is related to the origin of non-design sub-domains. Indeed, for a given component that is intended to be optimized, non-design sub-domains are derived from relationships that this component has with other components (mounting holes with bolts and washers for example), as is the case for boundary conditions (BCs) in general when using FEA. Thus, as when using FEA in general, the most convenient and efficient manner that can be used to specify these conditions or relationships is to do so on the feature-based CAD model itself and not on a discrete representation of it. Among the many advantages of doing this is the fact that non-design geometry is likely to be derived from contact conditions between parts in the assembly model, as illustrated in Fig. 5
                        .

A consequence of defining non-design geometry at the CAD level (like BCs) is that non-design geometry (along with BCs) can be specified only once and that, therefore, different instances of the parametric definition of geometry (or different meshes) can be considered without re-defining BCs and non-design geometry. In Fig. 6
                        (a) and (b) two instances of the sample part taken from Fig. 5 are illustrated, along with non-design sub-domains derived for each instance. Thus, by allowing the definition of non-design geometry at the CAD level, this strategy pushes the integration between CAD and FEA one step further, as it allows the close integration of topology optimization methods within the product development process with CAD.

B-Rep structures  [13,14] have been used for many years in the context of 3D modelling and are classical data structures aimed at a concise representation of 3D solid topology (vertices, edges, faces, volumes, etc.) and the underlying geometry (points, curves and surfaces). One of the interests of using B-Rep structures as a basis for mesh generation is that their hierarchical structure is very appropriate for integrating with the hierarchical structure of mesh components, as illustrated in Fig. 7
                        . In fact, this integration is classically related to the mesh generation process itself, as the automatic discretization of a 3D solid object is usually performed following steps that are consistent with the B-Rep topological hierarchy (generating nodes on B-Rep vertices, mesh segments along B-Rep edges, mesh triangles on B-Rep faces and finally mesh tetrahedrons inside the B-Rep volume). This close integration between B-Rep topology and mesh components is the cornerstone of the mesh generation process presented in the following section.

@&#INTRODUCTION@&#

In the work presented here, automatically meshing multiple sub-domains in contact is performed by an adaptation of existing mesh generation procedures developed by our research team [15–19], which is based on a specific and new adaptation of the AFM. As mentioned in the previous paragraph, 
                           Ω
                         and 
                           
                              
                                 Ω
                              
                              ¯
                           
                           =
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         are defined using two separate B-Rep models. This specific definition of geometry implies using specific mesh generation procedures. Both 
                           Ω
                         and 
                           
                              
                                 Ω
                              
                              ¯
                           
                           =
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         must be meshed such that each finite element generated can be tagged as located inside one of the sub-domains 
                           
                              
                                 Ω
                              
                              
                                 0
                              
                           
                         to 
                           
                              
                                 Ω
                              
                              
                                 N
                              
                           
                         and that continuity and conformity of the mesh can be guaranteed across each boundary between any sub-domains in contact.

In the context of usual mesh generation processes, discretizing any type of B-Rep entity (a vertex, an edge, a face or a volume) is performed from scratch, which means that no nodes and elements have already been partially generated on these entities. In this work, the adaptation of a standard mesh generation procedure, namely the advancing front method, to meshing multiple sub-domains in contact relies basically on adapting the AFM to partially meshed entities (vertices, edges, faces and volumes), such as meshing the remainder of a volume that is already partially filled with tetrahedrons. This is due to the fact that it is necessary to make sure that the mesh of each sub-domain is performed with respect to constraints imposed by the mesh of other sub-domains in contact and vice versa. This adaptation follows the same general steps as for standard mesh generation procedures, which means consistently with the B-Rep topological hierarchy. Thus, the process starts with generating nodes on some of the B-Rep vertices, which is followed by partially meshing edges, faces and volumes. Partially meshing B-Rep vertices and edges is quite straightforward and will not be described here.

Partially meshing a B-Rep face or a B-Rep volume is basically performed with the AFM through specific adaptations of the advancing front initiation. These adaptations are first illustrated for partially meshed B-Rep faces on the very simple case introduced in Fig. 8
                         (a rectangular prism which is partially filled with tetrahedrons). In Fig. 4, a colour convention has been used for more clarity: boundary triangles (lying on B-Rep faces) are red whereas internal triangles are light blue.

From this point, the complete triangulation of partially triangulated B-Rep faces is performed using the AFM combined with a specific initiation of the advancing front, as illustrated in Fig. 9
                         for a first B-Rep face. Fig. 10
                         illustrates two specific cases occurring when existing isolated tetrahedrons connect inside B-Rep faces though isolated segments or isolated nodes.

These situations (isolated segments and isolated nodes) require further processing. In the case of an isolated segment, the advancing front is initiated on this segment using a pair of front elements (segments) which are oriented in opposite directions. For an isolated node, a first option is creating an arbitrary pair of mesh segments issued from the isolated node. This ensures that the resulting mesh will feature the isolated node. However, if many isolated nodes have to be processed on a given B-Rep face, this option is likely to fail because it will be difficult if impossible to generate many arbitrary pairs of mesh segments without interference. Alternate options for taking into account isolated nodes are constrained meshing or a posteriori mesh adaptation. It is important to point out that specific configurations may occur when processing isolated segments, for example when an isolated segment connects with the face’s boundary. An elegant and efficient way to handle these specific configurations is using a non-manifold data structure for the advancing front, in which (in 2D) a front node can be shared by more than two front segments.

Once each B-Rep face is processed this way, the AFM can be initialized for the automatic generation of tetrahedrons inside the remaining volume to be filled. Here again, this initialization needs to be adapted to the context. The 3D advancing front (composed with sets of triangles) is basically initialized with all triangles generated at the previous step along with all triangular faces of existing tetrahedrons that are located inside the B-Rep volume. Moreover, specific configurations have to be handled through further processing, like in the case of the partial triangulation of B-Rep faces.

These specific configurations are dealt with using the same basic principles as those described in the case of the partial triangulation of B-Rep faces for isolated nodes and segments. This involves handling a non-manifold data structure for the 3D advancing front, which practically cannot be avoided for the 3D implementation of the advancing front method in general. Being able to handle partially meshed B-Rep vertices, edges, faces and volumes, along with maintaining a close integration between B-Rep topology and mesh components throughout the whole process are fundamental pre-requisites for the new mesh generation process presented in the next section.

The new mesh generation process presented in this paper is divided into 14 basic steps, which are necessary to make sure that the mesh of each sub-domain is performed with respect to constraints imposed by the mesh of other sub-domains in contact. Basically, the mesh generation process follows the B-Rep structure’s hierarchy and, at each stage of this hierarchy, the fundamental principle underlying these 14 steps is transferring mesh elements (nodes, straight lines, triangles and tetrahedrons) from one B-Rep model to the other one and so on. At the end, this back and forth process between the two models ensures conformity and continuity of the resulting mesh. At each step of this back and forth process between the two models, the close integration between B-Rep topology and mesh components allows enforcing a conforming mesh between sub-domains in contact without imprinting the geometries. In general, this basic framework can be applied in any situation where the generation of a given mesh is constrained by continuity and conformity conditions induced from an existing mesh or existing mesh elements. We introduce this 14-step process on the example illustrated in Fig. 11
                         (bike suspension rocker). 
                           
                              
                                 Step  1:
                              Generate nodes on the vertices of 
                                    Ω
                                  (Fig. 12
                                 ).

Transfer the nodes generated at step 1 that are also on vertices of 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                  to these vertices in 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                 .

Generate nodes on the remaining vertices of 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                  (Fig. 13
                                 ).

Transfer the nodes generated at step 3 that are located on edges of 
                                    Ω
                                  to these edges in 
                                    Ω
                                 .

Mesh all the edges of 
                                    Ω
                                  (with straight line segments if linear elements are to be generated) while taking into account the nodes that are already located along some edges after applying step 4. These nodes will later constrain the resulting mesh (Fig. 14
                                 ).

Transfer the mesh segments generated at step 5 that are lying on edges of 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                  to these edges in 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                 .

Use a partial meshing algorithm to complete the mesh of all edges of 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                  (Fig. 15
                                 ).

Transfer the mesh segments generated at step 7 that are lying on faces of 
                                    Ω
                                  to these faces in 
                                    Ω
                                 .

Triangulate all the faces of 
                                    Ω
                                 , taking into account edges that are already lying on some faces of 
                                    Ω
                                  after applying step 7 (Fig. 16
                                 ).

Transfer the mesh triangles generated at step 9 that are lying on faces of 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                  to these faces in 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                  (coloured red in Fig. 17
                                 ).

Triangulate all the faces of 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                 , taking into account the triangles that are already lying on some faces after applying step 10. The new triangles generated at this step are coloured green in Fig. 17.

This step consists of filling the volume of 
                                    
                                       
                                          Ω
                                       
                                       ¯
                                    
                                  with tetrahedrons, using the standard AFM in 3D (Fig. 18
                                 ).

Transfer the mesh tetrahedrons generated at step 12 to 
                                    Ω
                                 .

Fill the remainder of 
                                    Ω
                                  with tetrahedrons, taking into account the tetrahedrons (coloured red in Fig. 19
                                 ) transferred at step 13.

Once this 14-step process has been applied, finite elements are tagged as part of 
                           
                              
                                 Ω
                              
                              
                                 0
                              
                           
                         (coloured green in Fig. 19) or part of one of the 
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         among 
                           
                              
                                 Ω
                              
                              ¯
                           
                           =
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 Ω
                              
                              
                                 i
                              
                           
                         (coloured red in Fig. 19) and the continuity of the mesh at the interface between design and non-design sub-domains is guaranteed.

It is worth mentioning that this approach can easily be combined with virtual topology concepts  [18,20], which means that either an actual or virtual topology of the B-Rep can be considered when applying this 14-step mesh generation process.

The mesh generation process described in the previous section has been successfully implemented and integrated inside a topology optimization platform based on C++ code and on Code_Aster™ as a FEA solver. The optimization method used is an adaptation (to 3D unstructured meshes) of a solid isotropic material with penalization (SIMP) scheme. This choice is arbitrary, as any other 3D topology optimization scheme that handles unstructured tetrahedral meshes could also have been used here. We used Gmsh™  [21] to visualize SIMP results and the process is fully automated, starting from the input of the two B-Rep models introduced in Section  3 (one for 
                           Ω
                         and one for 
                           
                              
                                 Ω
                              
                              ¯
                           
                        ) and a set of SIMP parameters.

The basic principle on which the SIMP method (see Ref.  [9] for a detailed description) is based is to consider the design domain 
                           
                              
                                 Ω
                              
                              
                                 0
                              
                           
                           =
                           Ω
                           −
                           
                              
                                 Ω
                              
                              ¯
                           
                         as a sort of “porous” material associated with a relative density distribution 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                         (
                           ρ
                           =
                           0
                         represents void and 
                           ρ
                           =
                           1
                         “full” or actual material). In the SIMP process, this relative density distribution is related to the distribution of a virtual elastic modulus 
                           
                              
                                 E
                              
                              
                                 ˜
                              
                           
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                         according to the following penalization law: 
                           
                              
                                 
                                    
                                       E
                                    
                                    
                                       ̃
                                    
                                 
                                 
                                    (
                                    x
                                    ,
                                    y
                                    ,
                                    z
                                    )
                                 
                                 =
                                 E
                                 ⋅
                                 
                                    
                                       ρ
                                       
                                          (
                                          x
                                          ,
                                          y
                                          ,
                                          z
                                          )
                                       
                                    
                                    
                                       p
                                    
                                 
                                 .
                              
                           
                        
                        
                           E
                         
                        is the actual elastic modulus of the material considered and 
                        
                           p
                         
                        is a penalization coefficient (
                           p
                           =
                           3
                         
                        in this work).

The field 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                         is updated across the design domain through several FEA iterations with the objective of minimizing the compliance 
                           
                              
                                 C
                              
                              
                                 ̃
                              
                           
                         of the part or structure, defined as: 
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ̃
                                    
                                 
                                 =
                                 
                                    
                                       
                                          {
                                          
                                             
                                                U
                                             
                                             
                                                ̃
                                             
                                          
                                          }
                                       
                                    
                                    
                                       t
                                    
                                 
                                 ⋅
                                 
                                    {
                                    F
                                    }
                                 
                                 =
                                 
                                    
                                       
                                          {
                                          
                                             
                                                U
                                             
                                             
                                                ̃
                                             
                                          
                                          }
                                       
                                    
                                    
                                       t
                                    
                                 
                                 ⋅
                                 
                                    [
                                    
                                       
                                          K
                                       
                                       
                                          ̃
                                       
                                    
                                    ]
                                 
                                 ⋅
                                 
                                    {
                                    
                                       
                                          U
                                       
                                       
                                          ̃
                                       
                                    
                                    }
                                 
                                 .
                              
                           
                        
                     


                        
                           
                              {
                              
                                 
                                    U
                                 
                                 
                                    ̃
                                 
                              
                              }
                           
                         
                        is the global vector of nodal displacements (affected by 
                        
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                        ) and 
                        
                           
                              [
                              
                                 
                                    K
                                 
                                 
                                    ̃
                                 
                              
                              ]
                           
                        
                        the global stiffness matrix (also affected by 
                        
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                        ).


                        
                           
                              {
                              F
                              }
                           
                         
                        is the global vector of external nodal forces derived from external loads applied.
                     

The process stops when convergence is reached on 
                           
                              
                                 C
                              
                              
                                 ̃
                              
                           
                        . If 
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ̃
                                    
                                 
                              
                              
                                 i
                              
                           
                         is defined as the global compliance at iteration 
                           i
                        , the iterative process stops when a threshold on 
                           
                              
                                 Δ
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 −
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       i
                                       −
                                       1
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       i
                                       −
                                       1
                                    
                                 
                              
                           
                         (relative variation of 
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ̃
                                    
                                 
                              
                              
                                 i
                              
                           
                         between two consecutive iterations) is reached.

At the beginning of this iterative optimization process the relative distribution is initiated as a constant field 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                           =
                           f
                         across 
                           
                              
                                 Ω
                              
                              
                                 0
                              
                           
                        . The constant 
                           f
                         is user specified and defined as the volume fraction. It represents the main constraint imposed on the SIMP iterative process and basically expresses the fraction of design material which has to be retained from the initial design geometry throughout the process. The volume fraction 
                           f
                         is defined as: 
                           
                              
                                 f
                                 =
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             ̃
                                          
                                       
                                    
                                    
                                       
                                          
                                             V
                                          
                                          
                                             d
                                          
                                       
                                    
                                 
                                 .
                              
                           
                         where 
                           
                              
                                 V
                              
                              
                                 ̃
                              
                           
                         is the design material volume with “porosity”, which means once the relative density field 
                           ρ
                         is applied and 
                           
                              
                                 V
                              
                              
                                 d
                              
                           
                         is the actual design material volume (without “porosity”) before beginning the SIMP process. This constraint is used to keep the same global amount of design material over the whole iterative process, as illustrated in Fig. 20
                        . This implies that the SIMP method actually tends to optimize the distribution of an amount of “porosity” that is imposed at the beginning of the process.

We illustrate the process on the part introduced in Section  4.3 (see Fig. 11). On this part, the optimization problem can be formulated as follows (with 
                           f
                           =
                           0.2
                         or 
                           f
                           =
                           0.4
                        ):


                        Objective function: minimize the global compliance 
                           
                              
                                 C
                              
                              
                                 ̃
                              
                           
                         defined as 
                           
                              
                                 C
                              
                              
                                 ̃
                              
                           
                           =
                           
                              
                                 
                                    {
                                    
                                       
                                          U
                                       
                                       
                                          ̃
                                       
                                    
                                    }
                                 
                              
                              
                                 t
                              
                           
                           ⋅
                           
                              {
                              F
                              }
                           
                        .


                        Constraints: 
                           
                              
                                 
                                    
                                       
                                          E
                                       
                                       
                                          ̃
                                       
                                    
                                    
                                       (
                                       x
                                       ,
                                       y
                                       ,
                                       z
                                       )
                                    
                                    =
                                    E
                                    ⋅
                                    
                                       
                                          ρ
                                          
                                             (
                                             x
                                             ,
                                             y
                                             ,
                                             z
                                             )
                                          
                                       
                                       
                                          3
                                       
                                    
                                    
                                    with  
                                    0
                                    ≤
                                    ρ
                                    
                                       (
                                       x
                                       ,
                                       y
                                       ,
                                       z
                                       )
                                    
                                    ≤
                                    1
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             
                                                V
                                             
                                             
                                                ̃
                                             
                                          
                                       
                                       
                                          
                                             
                                                V
                                             
                                             
                                                d
                                             
                                          
                                       
                                    
                                    =
                                    f
                                 
                              
                              
                                 
                                    
                                       [
                                       
                                          
                                             K
                                          
                                          
                                             ̃
                                          
                                       
                                       ]
                                    
                                    ⋅
                                    
                                       {
                                       
                                          
                                             U
                                          
                                          
                                             ̃
                                          
                                       
                                       }
                                    
                                    =
                                    
                                       {
                                       F
                                       }
                                    
                                    .
                                 
                              
                           
                         The part is meshed using the process described in Section  4.3 (see Fig. 19) and once boundary conditions are applied, as illustrated in Fig. 22(a), the optimization problem is solved using the SIMP method (in the first example with 
                           f
                           =
                           0.2
                        ). Fig. 21
                        
                         shows the evolution of the objective function 
                           
                              
                                 C
                              
                              
                                 ̃
                              
                           
                         along SIMP iterations until convergence. In this case, convergence is achieved after 16 iterations when 
                           
                              
                                 △
                              
                              
                                 i
                              
                           
                         is less than 0.5%.

This leads to the relative density distribution 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                         shown in Fig. 22(b). Note that, at each step of the iterative SIMP process, a classical filtering (see Refs.  [9,22,23] for details) is applied on the distribution of the compliance’s sensitivity 
                           
                              
                                 ∂
                                 
                                    
                                       C
                                    
                                    
                                       ̃
                                    
                                 
                              
                              
                                 ∂
                                 
                                    
                                       ρ
                                    
                                    
                                       e
                                    
                                 
                              
                           
                         (where 
                           
                              
                                 ρ
                              
                              
                                 e
                              
                           
                         
                        is the relative density inside element 
                        
                           e
                        ) in order to avoid checkerboard effects and reduce mesh dependency. Even if quite impressive, because the optimized shape and topology can be visually foreseen from the nearly binary final distribution of 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                        , the computation of these raw SIMP results with the objective of automating the creation of an optimized part or structure is very far from obvious.

A classical variant (see  [9,10,22,24] for details) of the SIMP method consists of directly smoothing the relative density distribution 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                        . This smoothing uses a weighted average of the relative density field 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                         in a fixed neighbourhood around each finite element in the design domain. This option shows the advantage of smoothing the relative density field 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                        , which is likely to induce smoother subsequent 3D shapes. As illustrated in Fig. 23
                        , after applying a weighted Gaussian filter  [10] (with two sets of parameters) on results shown in Fig. 22(b), this smoothing can either be applied only once when convergence on 
                           
                              
                                 C
                              
                              
                                 ̃
                              
                           
                         is achieved (Fig. 23(a) and (b)) or at each step of the SIMP iterative process (Fig. 23(c) and (d)).

Once raw SIMP results are obtained (smoothed or not) as a relative density distribution 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                        , two main avenues can be pursued in order to derive an optimized 3D shape from 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                        :
                           
                              •
                              Using a threshold 
                                    
                                       
                                          ρ
                                       
                                       
                                          
                                             min
                                          
                                       
                                    
                                 , retaining all design elements (tetrahedrons here) for which 
                                    ρ
                                    
                                       (
                                       x
                                       ,
                                       y
                                       ,
                                       z
                                       )
                                    
                                    ≥
                                    
                                       
                                          ρ
                                       
                                       
                                          
                                             min
                                          
                                       
                                    
                                 , and deriving a 3D optimized domain from these tetrahedrons.

Computing iso-density surfaces from the field 
                                    ρ
                                    
                                       (
                                       x
                                       ,
                                       y
                                       ,
                                       z
                                       )
                                    
                                  and deriving a 3D optimized domain from these surfaces.

This option is primarily very easy to implement as it simply consists of retaining all tetrahedrons for which 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                              ≥
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                           . Fig. 24
                            presents three results obtained using with 
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              =
                              0.45
                            on relative density distributions respectively illustrated in Figs. 22(c), 23(a) and (b).

A closer view at these results reveals that even if easy to implement, this way of deriving an optimized shape faces several challenges: 
                              
                                 •
                                 The resulting shape is very irregular in general and requires the application of subsequent smoothing to its boundary triangulation, as described in Section  5.2.3.

The resulting shape depends significantly on the parameters used during the SIMP process (especially the type of filtering used and its parameters).

When a smoothed relative density distribution 
                                       ρ
                                       
                                          (
                                          x
                                          ,
                                          y
                                          ,
                                          z
                                          )
                                       
                                     is used (like in Fig. 23), the resulting shape strongly depends on 
                                       
                                          
                                             ρ
                                          
                                          
                                             
                                                min
                                             
                                          
                                       
                                    . The result in Fig. 24(c) (derived from the density distribution in Fig. 23(b)) even illustrates that if 
                                       
                                          
                                             ρ
                                          
                                          
                                             
                                                min
                                             
                                          
                                       
                                     is too high, it can bring about a loss of continuity in the optimized design material (illustrated using a closer view in Fig. 25
                                    (a)). Of course this can be overcome using a lower value for 
                                       
                                          
                                             ρ
                                          
                                          
                                             
                                                min
                                             
                                          
                                       
                                     (for example, 
                                       
                                          
                                             ρ
                                          
                                          
                                             
                                                min
                                             
                                          
                                       
                                       =
                                       0.3
                                     in Fig. 25(b)). When the relative density is not smoothed (like in Fig. 22(b)) it appears that 
                                       
                                          
                                             ρ
                                          
                                          
                                             
                                                min
                                             
                                          
                                       
                                     has less influence on the final shape obtained because, in this case, the SIMP process genuinely intends to derive raw results that are close to a binary distribution of 
                                       ρ
                                       
                                          (
                                          x
                                          ,
                                          y
                                          ,
                                          z
                                          )
                                       
                                    .

For all cases, the fact that in some regions some neighbouring design elements can be just below 
                                       
                                          
                                             ρ
                                          
                                          
                                             
                                                min
                                             
                                          
                                       
                                     and some others just above 
                                       
                                          
                                             ρ
                                          
                                          
                                             
                                                min
                                             
                                          
                                       
                                     implies the appearance of non-manifold mesh patterns as introduced in Fig. 25(a). Since these non-manifold patterns cannot be avoided, and since they represent a major problem in deriving a consistent optimized shape, they must be automatically detected and eliminated, as explained in the next paragraph.

Applying a threshold on the relative density distribution systematically implies the appearance of two types of non-manifold mesh patterns in the sets of retained tetrahedrons:
                              
                                 •
                                 Non-manifold patterns on nodes (referred to as NMN): this occurs when the material of two tetrahedrons in contact only connects through a single common vertex, as illustrated in Fig. 26
                                    (a).

Non-manifold patterns on segments (referred to as NMS): this occurs when the material of two tetrahedrons in contact only connects through a single common segment, as illustrated in Fig. 26(b).

Globally, the elimination of NMN and NMS patterns is based on reactivating some of the deactivated tetrahedrons (for which 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                              <
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                           ) that are located around these patterns. The difference in processing NMN and NMS patterns is related to which tetrahedrons are reactivated. For NMN patterns, as illustrated in Fig. 27
                           , processing consists of a reactivation of all deactivated tetrahedrons featuring the non-manifold node as one of its four vertices. For NMS patterns, as illustrated in Fig. 28
                           , processing is similar, as it consists in reactivating all deactivated tetrahedrons featuring the non-manifold segment as one of its six edges. The algorithm used for the total elimination of NMN and NMS patterns is iterative (see Fig. 29
                           ) because the reactivation of tetrahedrons is likely to bring about new NMN and NMS patterns in some cases and these new NMN and NMS patterns have to be removed. Convergence of the algorithm illustrated in Fig. 29 is usually achieved through less than ten iterations. Once convergence is achieved, no NMN and NMS patterns are left and the next and last step consist of smoothing the resulting boundary triangulation. The effect of removing NMN and NMNS patterns is usually difficult to illustrate because it is very local. A very coarse mesh has been used in Fig. 30
                           
                            to better illustrate the effect of removing NMN and NMNS patterns.

As mentioned in the previous section and as illustrated in Fig. 30, even after removing NMS and NMN patterns, the resulting shape is very irregular and it requires the application of substantial smoothing to its boundary triangulation. Smoothing (also referred to as filtering) irregular or noisy triangulations has been a subject of interest for many years, especially in the field of mesh generation and computer graphics, and many smoothing algorithms or filters have been proposed in the literature (see  [25–30] for example ). The use of these filters in our context is not obvious because it faces two major problems: 
                              
                                 •
                                 Triangulations resulting from the approach presented in this paper are very irregular if compared to the type of triangulations on which existing filters are designed to apply. This means that many existing filters cannot be used in our specific context.

In our context, the final objective is building an optimized shape that is functional, which means that some of the sharp features of the boundary triangulation, especially edges, should be preserved if necessary.

Unfortunately, even if the smoothing method used features a sharpness dependent filter (as described in  [25]), it appears that triangulations resulting from using a threshold 
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                            are too irregular to be able to keep sharp features, as should be the case ideally. As an illustration, square edges shown in Figs. 31(b) and 32(b) are smoothed in Figs. 31(c) and 32(c). The problem of keeping sharp features is complex and can be put into perspective with the more general issue of re-creating optimized CAD models from the result provided by topology optimization methods. Even though we have already successfully tested interesting elements of the solution, further and important work remains to be done on the subject.

This option is primarily more difficult to implement, as it basically consists of computing iso-density surfaces from a continuous field 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            and deriving a 3D optimized domain from these iso-density surfaces. This option implies generating a relative density field 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            that is continuous (which is primarily not the case, as explained just below) and using a limit on 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                           , referred to as 
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                            in the description of the first option, to represent the boundary between void and optimized material. In this approach, iso-density surfaces (defined as 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                              =
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                           ) associated with a continuous distribution of 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            are used to compute the exterior shape of the design material. The idea of iso-density surfaces is not new, as the computation of iso-value surfaces is a capability of many FEA systems. However, it has to be underlined that, in the context of this work, the computation of iso-density surfaces, even if not very difficult, requires a little more computing than in the general context of computing iso-value surfaces when post-processing FEA results. This is due to the fact that the density field obtained at the end of the SIMP process is not continuous at the interface between design and non-design sub-domains since, inside non-design sub-domains, the relative density is constant and equals unity, whereas it varies across design sub-domains.

The SIMP method classically works on a discontinuous field 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            because the distribution of 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                           , along with the distribution of the penalized (or virtual) elastic modulus 
                              
                                 
                                    E
                                 
                                 
                                    ˜
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            is constant across each finite element in the mesh. In fact, for each SIMP iteration, the value of 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            inside a each tetrahedron is updated as a spatially constant value inside this tetrahedron. Fig. 33
                           (a) presents a closer view on the result shown in Fig. 31(a), which illustrates this particularity in the primary distribution of 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                           . This discontinuous field 
                              ρ
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            is transformed into a continuous field, referred to as 
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                           , using a very standard procedure. For node 
                              i
                            in the tetrahedral mesh, the value 
                              
                                 
                                    
                                       
                                          ρ
                                       
                                       
                                          ∗
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                            is calculated as the weighted average (weights are based on the volumes of tetrahedrons) of 
                              
                                 
                                    ρ
                                 
                                 
                                    j
                                 
                              
                            values associated with all tetrahedrons that surround this node. The values 
                              
                                 
                                    
                                       
                                          ρ
                                       
                                       
                                          ∗
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                            associated with each node of the tetrahedral mesh are then used to compute a piecewise linear interpolation across the whole design sub-domain, as illustrated in Fig. 33(b) and (c).

As mentioned in the previous section, due to the fact that we must have 
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                              =
                              1
                            for the whole non-design sub-domain, specific computing is necessary to handle the discontinuity of 
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            at the interface between design and non-design sub-domains. This type of discontinuity can be handled quite easily by considering a discontinuous interpolation scheme at the interface between design and non-design tetrahedrons, as illustrated in Fig. 34
                           .

Once the piecewise linear density field 
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            is obtained, the next step consists of computing iso-density surfaces. For this, we use a simple and natural approach, based on the fact that 
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                            is linear inside each tetrahedron. Indeed, for a given tetrahedron that intersects the iso-density surface (defined as 
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                              =
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                           ), the result of the local intersection between this tetrahedron and the iso-density surface is composed of one or two triangles (because the intersection between a plane and a tetrahedron results in a triangle or a quadrangle) which can be easily computed. The assembly of all these intersection triangles leads to the definition of the iso-density surface 
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                              =
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                            as a triangulation. Once the triangulation of 
                              
                                 
                                    ρ
                                 
                                 
                                    ∗
                                 
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                              
                              =
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                            is obtained, the triangulation of the whole boundary of the optimized shape is completed by retrieving and/or cutting and re-triangulating some of the triangles coming both from the boundary triangulation of the design and non-design sub-domains. Cutting and re-triangulating some of the existing boundary triangles is required in order to obtain a conformal and watertight triangulation of the optimized shape’s boundary. Even if boundary triangulations computed using this second option are a lot smoother than those computed using the first option, the final optimized shape is also processed with the smoothing algorithm presented in  [25].


                           Fig. 35
                           (b) presents results obtained using this second option, on the same case, with the same parameters (
                              f
                              =
                              0.2
                              ,
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              =
                              0.45
                           ) as illustrated in Figs. 31(c) and 36
                           (b) presents results obtained using this second option, on the same case, with the same parameters (
                              f
                              =
                              0.4
                              ,
                              
                                 
                                    ρ
                                 
                                 
                                    
                                       min
                                    
                                 
                              
                              =
                              0.45
                           ) as illustrated in Fig. 32(c).

A thorough comparison between results illustrated in Figs. 31(c) and 35(b) and between results illustrated in Figs. 32(c) and 36(b) shows that the final optimized shapes obtained are very close even if, in the first option (directly applying a threshold on 
                           ρ
                           
                              (x,y,z)
                           
                        ) extra design material is added for solving NMN and NMS patterns. It appears that this extra design material is negligible if compared to the total volume of the optimized design. Since there is no significant difference in CPU time, and since the results obtained are very similar, these two options can be considered as equivalent. However, the second option seems more promising in the perspective of automating the creation of optimized CAD models from topology optimization problems. Indeed, further enhancement and variants of the second option can already be foreseen, such as:
                           
                              •
                              Using higher order interpolation for the computation of 
                                    
                                       
                                          ρ
                                       
                                       
                                          ∗
                                       
                                    
                                    
                                       (
                                       x
                                       ,
                                       y
                                       ,
                                       z
                                       )
                                    
                                 .

Smoothing the final shape indirectly by processing 
                                    
                                       
                                          ρ
                                       
                                       
                                          ∗
                                       
                                    
                                    
                                       (
                                       x
                                       ,
                                       y
                                       ,
                                       z
                                       )
                                    
                                 .

Generating iso-surfaces as CAD surfaces.

Representing and processing the optimized shape using a distance field (level-sets or Eikonal equation).

One of the major challenges in the practical use of topology optimization methods is that the sizing function used when meshing the design sub-domain has a major impact on the relative density results obtained and, thus, on optimized shape derived. In general, it appears that the SIMP process is very sensitive to mesh sizing. Indeed, on the same optimization problem, with the same input data and different mesh sizing, the result obtained can be very different, as illustrated in the following examples. In Figs. 37–40
                        
                        
                        
                         we illustrate the fact that, with our method, optimization can be either performed using meshes obtained from constant sizing functions as well as graded sizing functions and that the overall optimized shape is quite different. In these figures, all SIMP calculations have been performed with 
                           f
                           =
                           0.2
                           ,
                           
                              
                                 ρ
                              
                              
                                 
                                    min
                                 
                              
                           
                           =
                           0.35
                         and using a Gaussian filter on 
                           ρ
                           
                              (
                              x
                              ,
                              y
                              ,
                              z
                              )
                           
                         at each iteration.

In general, it appears that, at a given location, the more refined the mesh is, the more detailed the optimized shape is likely to be at this location. Thus, locally using a refined sizing function allows locally converging towards shapes featuring small material thickness and small material section. This means that refining the mesh allows refining the optimization solution and that this can be done locally. As a matter of fact, this provides the designer with improved and more flexible tools but it also makes the optimization process much more complex and delicate to be used.

The new mesh generation tool presented in Section  1 of this paper has initially been designed for the automatic meshing of design and non-design sub-domains in the context of topology optimization methods, but it is likely to be successfully applied in the more general context of meshing heterogeneous geometry (in the case of assembly models or domains with multiple materials for example). By using a back and forth process between B-Rep models associated with sub-domains 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      underlying heterogeneous geometry, along with a close integration between B-Rep topology and mesh components, a conforming mesh between sub-domains in contact can be obtained without imprinting the geometries. At this point, the major issue in extending the method presented here to heterogeneous geometry in general is the fact that its implementation has been made in a specific context where each of the 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      in 
                        
                           
                              Ω
                           
                           ¯
                        
                        =
                        
                           
                              ⋃
                           
                           
                              i
                              =
                              1
                           
                           
                              N
                           
                        
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      is in contact with 
                        
                           
                              Ω
                           
                           
                              0
                           
                        
                      only (which is always the case in the context of topology optimization). In the case of mutual contacts between the 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      in 
                        
                           
                              Ω
                           
                           ¯
                        
                        =
                        
                           
                              ⋃
                           
                           
                              i
                              =
                              1
                           
                           
                              N
                           
                        
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                     , the method requires a significant adaptation, which is part of our current research interest. Another important issue concerning the mesh generation scheme presented here, is that, at this point, the method requires that the B-Rep structure associated with 
                        Ω
                      and the B-Rep structures associated with any sub-domain 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                      (with 
                        i
                        =
                        1
                      to 
                        N
                     ) must exactly feature the same topology and orientation (typically edges and faces) for any entity that is a member of the set 
                        B
                        ⋂
                        
                           (
                           
                              
                                 ⋃
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 N
                              
                           
                           
                              
                                 B
                              
                              
                                 i
                              
                           
                           )
                        
                      (recalling that 
                        B
                      is defined as the boundary of 
                        Ω
                      and 
                        
                           
                              B
                           
                           
                              i
                           
                        
                      the boundary of 
                        
                           
                              Ω
                           
                           
                              i
                           
                        
                     ). Fig. 41
                      illustrates a situation where this is not the case. In this type of situation, the method presented in this paper would fail and its handling would require significant adaptation. This issue is part of a more general questioning about the non-uniqueness of B-Rep models, and geometric models in general. Indeed, if a 3D part is defined as a closed subset of the 3D space, this subset can be modelled using a B-Rep structure featuring many different topologies, and assessing whether two B-Rep models actually represent (or not) the same subset of the 3D space is a very complex problem, which is part of our research interests.

The automatic (or at least assisted) creation of a CAD model of the final optimized shape from the results provided by topology optimization methods and subsequent processing, as presented in this paper, is also a natural perspective for further research work on the subject. Preserving sharp features while trying to create smooth and regular shapes is one of the many challenges inherent to deriving 3D optimized CAD models from the raw results provided by topology optimization methods. The subject is emerging as an important source of research interest (see  [31–33], for example) but the objective of automating the construction of an optimized CAD model from raw topology optimization results is extremely ambitious and clearly a long term perspective. In this research direction, one of the major challenges is introducing in the process a manufacturing perspective, because building a consistent optimized shape is not only a matter of compliance and stress distribution but also a matter of manufacturability and cost.

@&#ACKNOWLEDGEMENTS@&#

This study was carried out as part of a project supported by research funding from the Québec Nature and Technology Research Fund and by the Natural Sciences and Engineering Research Council of Canada (NSERC).

@&#REFERENCES@&#

