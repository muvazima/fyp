@&#MAIN-TITLE@&#Integration of selecting and scheduling urban road construction projects as a time-dependent discrete network design problem

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Three different bi-level programming models based on DNDP are developed.


                        
                        
                           
                           A general framework and an evolutionary approach are proposed to solve the model.


                        
                        
                           
                           A procedure is proposed to reduce significantly the model solution time.


                        
                        
                           
                           Computational tests show acceptable performance of the proposed approach.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Transportation

Project selection

Network design problem

Scheduling of transportation projects

Genetic algorithm

@&#ABSTRACT@&#


               
               
                  Decision making on the selection of transportation infrastructure projects is an interesting subject to both transportation authorities and researchers. Due to resource limitations, the selected projects should then be scheduled during the planning horizon. Integration of selecting and scheduling projects into a single model increases the accuracy of results; however it leads to more complexity. In this paper, first, three different mathematical programming models are presented to integrate selecting and scheduling of urban road construction projects as a time-dependent discrete network design problem. Then, the model that seems more flexible and realistic is selected and an evolutionary approach is proposed to solve it. The proposed approach is a combination of three well-known techniques: the phase-I of the two-phase simplex method, Frank-Wolfe algorithm, and genetic algorithm. Taguchi method is used to optimize the genetic algorithm parameters. The main difficulty in solving the model is due to the large number of subsequent network traffic assignment problems that should be solved which makes the solution process very time-consuming. Therefore, a procedure is proposed to overcome this difficulty by significantly reducing the traffic assignment problem solution time. In order to verify the performance of the proposed approach, 27 randomly generated test problems of different scales are applied to Sioux Falls urban transportation network. The proposed approach and full enumeration method are used to solve the problems. Numerical results show that the proposed approach has an acceptable performance in terms of both solution quality and solution time.
               
            

@&#INTRODUCTION@&#

Transportation Infrastructure Project Selection (TIPS) is a common challenge in the field of transportation planning, particularly for transportation authorities, who always deal with a variety of potential projects, of which merely a limited number can be selected. The process of handpicking certain projects from the wide range of available options is of high complexity. Unless the TIPS process is planned with a scientific and comprehensive perspective, not only does the improvement of the available transportation system seem unlikely, but also it might worsen the status quo, which can in turn account for numerous negative outcomes such as increment of the direct and indirect costs (for both system administrators and users), jeopardy of human safety, public dissatisfaction with the transportation system, and so forth. Hence, the significant influence of the transportation system on the public life necessitates an in-depth and wise attitude toward the TIPS process.

Another issue that needs to be addressed along with project selection is project scheduling. In other words, it should be specified when the selected projects should be implemented along the planning horizon, because some constraints such as budget limitation may not allow these projects to be implemented simultaneously. Generally, two strategies for selecting and scheduling of projects can be considered. The first strategy involves the selection of projects prior to the scheduling, whereas the second strategy deals with the simultaneous selecting and scheduling of projects. It is more complicated to model and resolve the associated problems within the second strategy, though it provides more accurate and precise results for a variety of reasons such as those discussed in the following:

                        
                           •
                           The main constraint in project selection is the availability of resources such as budget. Annual resource constraint can be applied in the model only when the projects have time dimension. Otherwise, only the total resources over the planning horizon (and not in different years) can be considered in the selection process. This will reduce the precision and it is even possible to select projects whose implementation with the consideration of the annual resource constraints is infeasible within the planning horizon.

To ensure that transportation system achieves the expected short- and long-term goals, it is necessary to know when selected projects are to be operated, a fact, which is dependent upon the scheduling of projects.

Therefore, it will be more suitable to determine scheduling of projects concurrent with selecting projects. However, integration of selecting and scheduling of projects in a single model makes it much harder to solve. Suppose there are n candidate roads for addition to the network and the planning horizon includes T years. In case our goal is only to select the projects, the total number of scenarios for addition to the network is 2n
                     . However, should we consider selecting and scheduling of project simultaneously, i.e. to specify which projects should be executed and in which year, then the total number of scenarios will be 2
                        n × T
                      which is much greater than the previous case. For example, considering n = 10 and T = 5, in first case (i.e. project selection alone) we will have 
                        
                           
                              2
                              10
                           
                           =
                           1024
                        
                      scenarios, while in second case (i.e. selecting and scheduling of projects simultaneously) 
                        
                           
                              2
                              50
                           
                           =
                           1.12
                           ×
                           
                              10
                              15
                           
                        
                     scenarios should be checked (i.e. about 1012 times more). Although many of these scenarios would be infeasible due to constraints such as budget limitation, we need to evaluate all feasible scenarios to find the optimal scenario because of Braess's paradox (Braess, Nagurney, & Wakolbinger, 2005). This fact, alone, reveals the complexity of the integrated problem of selecting and scheduling of projects.

An application of TIPS problem, especially in developing cities, is to select among candidate roads to be added to the existing urban transportation network. This problem is inherently a Network Design Problem (NDP). NDP is the problem of improving or expanding transportation networks to optimize certain objective(s) under resource constraint(s) (Poorzahedy & Rouhani, 2007). The NDP can be posed either in a discrete form, which deals with the addition of new links to a transportation network, known as Discrete Network Design Problem (DNDP), or a continuous form which deals with the optimal capacity expansion of existing links in the network, also known as Continuous Network Design Problem (CNDP). Moreover, there is a Mixed Network Design Problem (MNDP), simultaneously involving both the discrete and continuous decision variables to determine the links which need to be improved and the new links which need to be added to an existing network (Yang & Bell, 1998). Therefore, the problem at hand is a DNDP. We focus on this problem with the aim of extending models for selecting and scheduling road construction projects simultaneously, and to propose an appropriate resolution approach. This paper is organized as follows: First, a literature review on road construction project selection problem is provided in Section 2. Next, three mathematical programming models are extended in Section 3 to integrate selecting and scheduling of urban road construction projects. The proposed approach to solve the selected model is presented and discussed in Section 4. Numerical examples to verify the performance of the proposed approach are given in Section 5. Finally, Section 6 concludes the paper.

@&#LITERATURE REVIEW@&#

TIPS is an interesting subject for researchers in the transportation planning field. Therefore, a variety of models and algorithms have been already developed about it. Many authors have investigated the TIPS in the context of NDP. From an optimization point of view, the NDP can be viewed as a bi-level programming problem that includes system planners in the upper-level and users in the lower-level. The system planners make decisions about network configuration to improve the performance of the system, and the network users make choices about the routes of their travel in response to the upper-level decision. Since users are assumed to make their choices to maximize their individual utility functions, their choices do not necessarily align, and often conflict with the choices that are optimal for the system planners. Some researchers have presented exact algorithms such as branch-and-bound to solve this problem (e.g. Farvaresh & Sepehri, 2013; LeBlanc, 1975). It should be noticed that due to some of the inherent difficulties of this problem, such as the combinatorial nature and the bi-level structure, the exact methods can only deal with small networks which are not realistic enough. Therefore, researchers have presented a wide spectrum of approaches to assess the trade-off between accuracy and speed of the solution. Some of these studies are reviewed in Poorzahedy and Rouhani (2007) and Farahani, Miandoabchi, Szeto, and Rashidi (2013). One of these approaches that has enjoyed a considerable popularity in the recent years is applying meta-heuristic algorithms (e.g. Gallo, D'Acierno, & Montella, 2010; Poorzahedy & Abulghasemi, 2005; Poorzahedy & Rouhani, 2007; Szeto, Wang, & Wong, 2014).

Despite numerous studies performed for the selection of urban road construction projects, scheduling of selected projects has been less considered. Weng and Qu (2009) presented a model to determine road-building schedule. In this model, it is assumed that certain roads should be built in a given planning horizon, and the purpose is to determine the construction time of each road regarding the budget limitation. Objective function of the model is maximizing the total net benefit obtained from reducing the shortest paths. Given the complexity of finding the exact solution of the model, they presented a heuristic algorithm. Another assumption in this study is that the time required to build each road is equal to one planning period. Some authors proposed optimization frameworks to integrate selecting and scheduling of transportation projects. Most of these studies only focused on the capacity improvement of existing roads and not on the constructing new roads (e.g. Jiang & Szeto, 2015; Lo & Szeto, 2003, 2009; O'brien & Szeto, 2007; Szeto, Jiang, Wang, & Sumalee, 2013; Szeto & Lo, 2005, 2006,2008; Ukkusuri & Patil, 2009). Our literature review revealed that the only studies in which selecting and scheduling of urban road construction projects are simultaneously investigated are those conducted by Kim, Kim, and Song (2008), Szeto, Jaber, and O'Mahony (2010), and Miandoabchi, Daneshzand, Farahani, and Szeto (2015). Szeto et al. (2010) proposed a model for road network design considering the land use transportation interaction over time. Both link addition and link expansion are considered with capacity modeled as a discrete variable. Multimodal transport interaction is also captured in their proposed model. However, they provided no solution approach for this model and instead used a commercial solver. Considering the high non-convexity and difficulty of the proposed problem, they suggested developing a link-based formulation and an efficient global optimization technique based on one or more heuristics like genetic algorithms. Miandoabchi et al. (2015) proposed a model to determine the sequence of link construction, the expansion projects over the planning horizon, the configuration of street orientations, and the lane allocations for morning and evening peaks in each year of the planning horizon. They formulated the problem as a DNDP with two objectives: total travel time and total CO emissions. They utilized two multi-objective metaheuristics to solve the problem. A simplified assumption in Szeto et al. (2010), Miandoabchi et al. (2015), and also in most studies on scheduling of roads capacity improvement, is that construction or expansion of a road does not last more than one period. This assumption is not always true, especially in large projects in which it may take several years to complete the project.


                     Kim et al. (2008) assumed that certain roads with specific capacity, construction duration, and annual costs are candidates to be added to the network in a given planning horizon and the purpose is to determine which roads should be added in which planning periods so that the total travel time in the planning horizon is minimized. They modeled the problem as a DNDP and then presented two meta-heuristic algorithms to solve it. The point to be noted in scheduling of projects is that construction time of each project is related to technical limitations, which do not allow the project to be completed sooner than a certain time. On the other hand, the construction time is dependent upon the budget allocation, i.e., if more (less) funds are allocated to a project, it might be operated earlier (later). Therefore, this assumption that duration and annual costs of each project are known at the beginning, which was assumed in the earlier studies, is restrictive and unreal.

Considering that selecting and scheduling of road construction projects simultaneously provide more accurate results, as stated previously, and noticing that it is less addressed in the literature, we present some models to integrate selecting and scheduling of urban road construction projects with different assumptions in the next section.

As already mentioned, urban road construction project selection problem is inherently a NDP in nature. Therefore, three bi-level programming models based on NDP are proposed in this section to integrate selecting and scheduling of projects, which may be called time-dependent network design problems. In these models, the upper-level is devoted to optimizing policy makers’ objective(s) with regard to annual budget constraints, and the lower-level is related to user equilibrium assignment. Furthermore, planning horizon and evaluation horizon have been differentiated. Planning horizon is the horizon in which projects are selected and scheduled, while evaluation horizon is the horizon in which effects of projects on network performance are analyzed. If these two horizons are equated, the effects of projects operated at the end of the planning horizon will not be appropriately reflected in the model.

All three proposed models are similar in the following assumptions:

                           
                              •
                              Travel demand between each origin–destination (O–D) pair in each year is fixed (not elastic) and known (demand can vary over time).

Route selection behavior of network users is based on the Deterministic User Equilibrium (DUE) principle (not stochastic user equilibrium).

The construction cost of each candidate road is fixed and known, regardless of its implementation time.

Available annual budgets are fixed and known, and carryover to next years is not permitted.

This model is a simple and basic model to integrate selecting and scheduling of urban road construction projects. It is assumed that annual (construction) costs of each project are specified during its construction period. The purpose is project selection and the determination of their initiation time. The model is formulated as follows:

                           
                              (1)
                              
                                 
                                    
                                       
                                          M
                                          i
                                          n
                                       
                                       z
                                    
                                    
                                    
                                    
                                       Z
                                       U
                                    
                                    :
                                    
                                    f
                                    
                                       (
                                       v
                                       )
                                    
                                    =
                                    
                                    
                                       ∑
                                       
                                          t
                                          =
                                          1
                                       
                                       
                                          T
                                          ′
                                       
                                    
                                    
                                       
                                          a
                                          t
                                       
                                       
                                          f
                                          t
                                       
                                       
                                          (
                                          
                                             v
                                             t
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       ∑
                                       
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          
                                             A
                                             2
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             t
                                             =
                                             1
                                          
                                          p
                                       
                                       
                                          
                                             c
                                             
                                                p
                                                +
                                                1
                                                −
                                                t
                                             
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             z
                                             t
                                             
                                                i
                                                j
                                             
                                          
                                       
                                       ≤
                                       
                                       
                                          B
                                          p
                                       
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    p
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    T
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       ∑
                                       
                                          t
                                          =
                                          1
                                       
                                       T
                                    
                                    
                                       
                                          z
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       ≤
                                       1
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       ∈
                                       
                                          A
                                          2
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       ∑
                                       
                                          t
                                          =
                                          1
                                       
                                       T
                                    
                                    
                                       t
                                       
                                       
                                          z
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       ≤
                                       T
                                       −
                                       
                                          u
                                          
                                             i
                                             j
                                          
                                       
                                       +
                                       1
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       ∈
                                       
                                          A
                                          2
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   z
                                                   t
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                ∈
                                                
                                                   {
                                                   
                                                      0
                                                      ,
                                                      1
                                                   
                                                   }
                                                
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                ∈
                                                
                                                   A
                                                   2
                                                
                                                
                                                
                                                
                                                ;
                                                
                                                
                                                t
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                T
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   z
                                                   t
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                =
                                                0
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                ∈
                                                
                                                   A
                                                   2
                                                
                                                
                                                
                                                
                                                ;
                                                
                                                
                                                t
                                                =
                                                T
                                                +
                                                1
                                                ,
                                                …
                                                ,
                                                
                                                   T
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In which vt
                         is the solution of DUE problem:

                           
                              (6)
                              
                                 
                                    
                                       
                                          M
                                          i
                                          n
                                       
                                       
                                          v
                                          t
                                       
                                    
                                    
                                    
                                    
                                       Z
                                       L
                                    
                                    =
                                    
                                       ∑
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          ∈
                                          A
                                       
                                    
                                    
                                       
                                          ∫
                                          0
                                          
                                             v
                                             t
                                             
                                                i
                                                j
                                             
                                          
                                       
                                       
                                          
                                             τ
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             (
                                          
                                       
                                       
                                          θ
                                          )
                                       
                                    
                                    
                                    d
                                    θ
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       ∑
                                       
                                          j
                                          :
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          ∈
                                          A
                                       
                                    
                                    
                                       
                                          v
                                          
                                             s
                                             ,
                                             t
                                          
                                          
                                             i
                                             j
                                          
                                       
                                       −
                                    
                                    
                                       ∑
                                       
                                          j
                                          :
                                          (
                                          j
                                          ,
                                          i
                                          )
                                          ∈
                                          A
                                       
                                    
                                    
                                       
                                          v
                                          
                                             s
                                             ,
                                             t
                                          
                                          
                                             j
                                             i
                                          
                                       
                                       =
                                       
                                    
                                    
                                       d
                                       
                                          s
                                          ,
                                          t
                                       
                                       i
                                    
                                    
                                    ,
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    ∀
                                    i
                                    ∈
                                    N
                                    ,
                                    
                                    
                                    ∀
                                    s
                                    ∈
                                    D
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       v
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    
                                       ∑
                                       
                                          s
                                          ∈
                                          D
                                       
                                    
                                    
                                       v
                                       
                                          s
                                          ,
                                          t
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    ∀
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    A
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       v
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                    ≤
                                    M
                                    
                                       ∑
                                       
                                          p
                                          =
                                          1
                                       
                                       
                                          t
                                          −
                                          
                                             u
                                             
                                                i
                                                j
                                             
                                          
                                          +
                                          1
                                       
                                    
                                    
                                       z
                                       p
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    ∀
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       A
                                       2
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       v
                                       
                                          s
                                          ,
                                          t
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    ≥
                                    0
                                    ,
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    ∀
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    A
                                    ,
                                    
                                    
                                    ∀
                                    s
                                    ∈
                                    D
                                 
                              
                           
                        
                        where:
                        
                           
                              G(N,A):
                           
                           
                              transportation network, with N and A being the sets of nodes and links, respectively. Here, 
                                    
                                       N
                                       =
                                       O
                                       ∪
                                       D
                                       ∪
                                       R
                                    
                                  where O, D and R are the set of all origin, destination, and transition nodes respectively. 
                                    
                                       A
                                       =
                                       
                                          A
                                          1
                                       
                                       ∪
                                       
                                          A
                                          2
                                       
                                    
                                 , where A1
                                  is the set of all existing links and A2
                                  is the set of all proposed new links (projects) which the model decides to be built or not.


                                 
link designation(i, j) ∈ A
                              


                                 
origin–destination (O–D) pairs, where r ∈ Oand s ∈ D are origin and destination nodes, respectively.


                                 
the set of all O–D pairs, where W⊆N × N
                              

Number of periods in planning horizon

Number of periods in evaluation horizon (T' > T)

period index (t=1,2,…,T'
                                 )

binary decision variable for link construction (
                                    
                                       
                                          z
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       1
                                    
                                 , if construction of link (i, j) ∈ A
                                 2 starts at period t, 
                                    
                                       
                                          z
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       0
                                    
                                 , otherwise)

matrix of decision variable 
                                    
                                       z
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                  with dimension equal to |A
                                 2| × |T'|

available budget in period t
                              

construction cost of link (i, j) ∈ A
                                 2 during t-th period after starting construction

construction duration of link (i, j) ∈ A
                                 2
                              

importance coefficient of period t
                              

the demand between O–D pair (r, s) ∈ Win period t which is assumed to be nonnegative constant

the flow volume on link(i, j) ∈ A with destination s ∈ D in period t
                              

the flow volume on link(i, j) ∈ A in period t
                              

network flow in period t (a vector of 
                                    
                                       v
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                 )

the travel cost on link(i, j) ∈ A in period t defined as a positive and continuous function of link flow 
                                    
                                       v
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                 which is often representing average travel time on link (i, j) ∈ A
                              

objective value for network flow during the evaluation horizon

objective value for network flow in period t (vt
                                 )

For each solution of the upper-level problem (z), the lower-level problem needs to be solved independently for each period in evaluation horizon (i.e. T'times). The lower-level problem is a convex mathematical program which, due to the strict convexity of the objective function with respect to the link flows, has a unique optimal solution in terms of link flows (Sheffi, 1985).

As mentioned at the end of Section 2, the assumption that annual costs during the link construction period are specified at the beginning is restrictive. Therefore, we extended the following models to resolve this issue.

In this model, it is assumed that each project (link) can be constructed according to several different scenarios of funding, and just one scenario can be selected. For example, three different scenarios of pessimistic, optimistic, and most probable can be considered from aspect of budget allocation for each project. The upper-level of resultant model becomes as follows:

                           
                              (13)
                              
                                 
                                    
                                       
                                          M
                                          i
                                          n
                                       
                                       z
                                    
                                    
                                    
                                    
                                       Z
                                       U
                                    
                                    :
                                    
                                    f
                                    
                                       (
                                       v
                                       )
                                    
                                    =
                                    
                                    
                                       ∑
                                       
                                          t
                                          =
                                          1
                                       
                                       
                                          T
                                          ′
                                       
                                    
                                    
                                       
                                          a
                                          t
                                       
                                       
                                          f
                                          t
                                       
                                       
                                          (
                                          
                                             v
                                             t
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       ∑
                                       
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          
                                             A
                                             2
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             m
                                             
                                                i
                                                j
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                t
                                                =
                                                1
                                             
                                             p
                                          
                                          
                                             
                                                c
                                                
                                                   p
                                                   +
                                                   1
                                                   −
                                                   t
                                                
                                                
                                                   i
                                                   j
                                                   ,
                                                   k
                                                
                                             
                                             
                                                z
                                                t
                                                
                                                   i
                                                   j
                                                   ,
                                                   k
                                                
                                             
                                          
                                       
                                       ≤
                                       
                                       
                                          B
                                          p
                                       
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    p
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    T
                                 
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          m
                                          
                                             i
                                             j
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             t
                                             =
                                             1
                                          
                                          T
                                       
                                       
                                          z
                                          t
                                          
                                             i
                                             j
                                             ,
                                             k
                                          
                                       
                                       ≤
                                       1
                                       
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       A
                                       2
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       ∑
                                       
                                          t
                                          =
                                          1
                                       
                                       T
                                    
                                    
                                       t
                                       
                                       
                                          z
                                          t
                                          
                                             i
                                             j
                                             ,
                                             k
                                          
                                       
                                       ≤
                                       T
                                       −
                                       
                                          u
                                          
                                             i
                                             j
                                             ,
                                             k
                                          
                                       
                                       +
                                       1
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       ∈
                                       
                                          A
                                          2
                                       
                                    
                                    
                                    ;
                                    
                                    
                                    k
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    .
                                    
                                    .
                                    
                                    .
                                    ,
                                    
                                       m
                                       
                                          i
                                          j
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   z
                                                   t
                                                   
                                                      i
                                                      j
                                                      ,
                                                      k
                                                   
                                                
                                                ∈
                                                
                                                   {
                                                   
                                                      0
                                                      ,
                                                      1
                                                   
                                                   }
                                                
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                ∈
                                                
                                                   A
                                                   2
                                                
                                                
                                                
                                                
                                                ;
                                                
                                                
                                                t
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                T
                                                
                                                
                                                ;
                                                
                                                
                                                
                                                k
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                .
                                                
                                                .
                                                
                                                .
                                                ,
                                                
                                                   m
                                                   
                                                      i
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                       
                                       
                                          
                                             
                                                
                                                   z
                                                   t
                                                   
                                                      i
                                                      j
                                                      ,
                                                      k
                                                   
                                                
                                                =
                                                0
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                
                                                ∈
                                                
                                                   A
                                                   2
                                                
                                                
                                                
                                                
                                                ;
                                                
                                                
                                                t
                                                =
                                                T
                                                +
                                                1
                                                ,
                                                …
                                                ,
                                                
                                                   T
                                                   ′
                                                
                                                
                                                
                                                ;
                                                
                                                
                                                
                                                k
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                .
                                                
                                                .
                                                
                                                .
                                                ,
                                                
                                                   m
                                                   
                                                      i
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

New defined symbols are as below:

                           
                              mij
                              :
                           
                              number of scenarios to construct link (i, j) ∈ A
                                 2 based on how funds are assigned

index for scenario enumeration

binary decision variable for link construction (
                                    
                                       
                                          z
                                          t
                                          
                                             i
                                             j
                                             ,
                                             k
                                          
                                       
                                       =
                                       1
                                    
                                 , if link (i, j) ∈ A
                                 2 with scenario k starts at period t, 
                                    
                                       
                                          z
                                          t
                                          
                                             i
                                             j
                                             ,
                                             k
                                          
                                       
                                       =
                                       0
                                    
                                 , otherwise)

construction cost of link (i, j) ∈ A
                                 2 during t-th period after starting construction with scenario k
                              

construction duration of link (i, j) ∈ A
                                 2 with scenario k
                              

Constraints (15) ensure that only one scenario of each project can be selected. The lower-level of this model is like model 1, except that constraints (9) are changed as follows:

                           
                              (18)
                              
                                 
                                    
                                       v
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                    ≤
                                    M
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          m
                                          
                                             i
                                             j
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             p
                                             =
                                             1
                                          
                                          
                                             t
                                             −
                                             
                                                u
                                                
                                                   i
                                                   j
                                                   ,
                                                   k
                                                
                                             
                                             +
                                             1
                                          
                                       
                                       
                                          z
                                          p
                                          
                                             i
                                             j
                                             ,
                                             k
                                          
                                       
                                    
                                    ,
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    ∀
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       A
                                       2
                                    
                                 
                              
                           
                        
                     

In this model, it is assumed that project progress depends on two issues: technical limitations and budget allocation. Hence, if more (less) funds are allocated to a project, it might be operated earlier (later). The upper-level of this model is as follows:

                           
                              (19)
                              
                                 
                                    
                                       
                                          M
                                          i
                                          n
                                       
                                       
                                          x
                                          ,
                                          y
                                       
                                    
                                    
                                    
                                    
                                       Z
                                       U
                                    
                                    :
                                    
                                    f
                                    
                                       (
                                       v
                                       )
                                    
                                    =
                                    
                                    
                                       ∑
                                       
                                          t
                                          =
                                          1
                                       
                                       
                                          T
                                          ′
                                       
                                    
                                    
                                       
                                          a
                                          t
                                       
                                       
                                          f
                                          t
                                       
                                       
                                          (
                                          
                                             v
                                             t
                                          
                                          )
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       ∑
                                       
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          
                                             A
                                             2
                                          
                                       
                                    
                                    
                                       
                                          c
                                          
                                             i
                                             j
                                          
                                       
                                       
                                          y
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       ≤
                                       
                                       
                                          B
                                          t
                                       
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    t
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    T
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       ∑
                                       
                                          p
                                          =
                                          1
                                       
                                       t
                                    
                                    
                                       
                                          y
                                          p
                                          
                                             i
                                             j
                                          
                                       
                                       ≥
                                       
                                          x
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       t
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       .
                                       .
                                       .
                                       .
                                       ,
                                       T
                                       
                                       
                                       
                                       
                                       ;
                                       
                                       
                                       
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       ∈
                                       
                                          A
                                          2
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       ∑
                                       
                                          p
                                          =
                                          1
                                       
                                       T
                                    
                                    
                                       
                                          y
                                          p
                                          
                                             i
                                             j
                                          
                                       
                                       ≥
                                       
                                          x
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       t
                                       =
                                       T
                                       +
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          T
                                          ′
                                       
                                       
                                       
                                       
                                       
                                       ;
                                       
                                       
                                       
                                       
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       ∈
                                       
                                          A
                                          2
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    
                                       y
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                    ≤
                                    
                                       α
                                       
                                          i
                                          j
                                       
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    t
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    .
                                    .
                                    .
                                    .
                                    ,
                                    T
                                    
                                    
                                    
                                    
                                    ;
                                    
                                    
                                    
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       A
                                       2
                                    
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       y
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                    ≥
                                    0
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    t
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    .
                                    .
                                    .
                                    .
                                    ,
                                    T
                                    
                                    
                                    
                                    
                                    ;
                                    
                                    
                                    
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       A
                                       2
                                    
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    
                                       x
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                    ∈
                                    
                                       {
                                       
                                          0
                                          ,
                                          1
                                       
                                       }
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    t
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    
                                       T
                                       ′
                                    
                                    
                                    
                                    
                                    
                                    ;
                                    
                                    
                                    
                                    
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       A
                                       2
                                    
                                 
                              
                           
                        
                     

The lower-level of this model is the one described in model 1, except that constraints (9) are changed as follows:

                           
                              (26)
                              
                                 
                                    
                                       v
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                    ≤
                                    M
                                    
                                    
                                       x
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                    
                                    
                                    
                                    
                                    
                                    ∀
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       A
                                       2
                                    
                                 
                              
                           
                        The following is a summary of the new symbols used in this model.

                           
                              
                                 
                                    x
                                    t
                                    
                                       i
                                       j
                                    
                                 
                              :
                           
                              binary decision variable for link construction (
                                    
                                       
                                          x
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       1
                                    
                                 , if link (i, j) ∈ A
                                 2 is operated at period t, 
                                    
                                       
                                          x
                                          t
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       0
                                    
                                 , otherwise)

continuous decision variable shows proportion of link (i, j) ∈ A
                                 2 which is constructed in period t
                              

matrix of decision variable 
                                    
                                       x
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                  with dimension equal to |A
                                 2| × |T'|

matrix of decision variable 
                                    
                                       y
                                       t
                                       
                                          i
                                          j
                                       
                                    
                                  with dimension equal to |A
                                 2| × |T|

total construction cost of link (i, j) ∈ A
                                 2
                              

maximum proportion of link (i, j) ∈ A
                                 2 which can be completed in each period due to technical limitations

Although all three proposed models have the same overall structure, which is based on bi-level time dependent NDP, they are different in some aspects. Firstly, the construction duration of each project and the annual funds that should be allocated during its construction period are pre-defined (input data) in models 1 and 2 while they are output data in model 3. Secondly, model 2 is a generalized form of model 1, and model 3 is more generalized than model 2, because in model 1 only one scenario, in model 2 multiple scenarios, and in model 3 infinite scenarios can be considered for allocating funds to each project. For example, suppose the construction cost of a road is 10 units. In model 1, only one scenario is considered for allocating funds to it, like (3, 5, 2), i.e. 3, 5, and 2 units in the first, second, and third year, respectively. In model 2, multiple scenarios can be defined before solving the model, like (3, 5, 2), (3, 4, 3), and (2, 3, 3, 2). In model 3, we do not define any certain scenario before solving the model, but the optimal scenario(s) will be determined by solving the model. Thirdly, the upper-level problem in models 1 and 2 is integer programming while it is mixed-integer in model 3. Since model 3 is more flexible in comparison with models 1 and 2, we prefer it and propose a solution approach to solve it in Section 4.

Before developing a solution approach for model 3, it is useful to point some issues that complicate the problem in the following:

                           
                              •
                              
                                 Bi-level formulation: It is important to note that even a simple bi-level program has been proved to be NP-hard (Ben-Ayed & Blair, 1990). Also, even if the both upper- and lower-level problems are convex and linear, the whole problem may be non-convex. Non-convexity increases the complexity of the problem, because globally optimal solutions cannot be guaranteed in non-convex problems. Previous studies show that solving bi-level NDP is very difficult even for small networks (Gao, Wu, & Sun, 2005; Magnanti & Wong, 1984). Devising efficient algorithms for NDP in bi-level formulation is thus recognized as one of the most challenging problems in transportation (Meng, Yang, & Bell, 2001; Yang & Bell, 1998).


                                 Non-linear objective functions: Travel cost function as shown in (12) is non-linear. Therefore, both upper- and lower- level objective function are also non-linear.


                                 Mixed-integer program: Although the lower-level problem is a mathematical problem with continuous variables, both discrete and continuous decision variables exist in the upper-level problem. Thus, the proposed model is a mixed-integer nonlinear program which is generally more complicated than either continuous or discrete nonlinear programs.


                                 Braess's paradox: According to Braess's paradox for transportation networks, adding a link to a network in the case of user equilibrium may increase the travel time (Braess et al., 2005). Therefore, to find the optimal scenario, all possible scenarios should be considered, which causes solving the model to be time-consuming.


                                 Time dimension: The proposed model is much more complicated than common NDP due to adding the time dimension. Compared with the common NDP, in the time-dependent NDP, the lower-level problem needs to be solved more frequently (directly proportional to the evaluation horizon length). Moreover, the number of decision variables and constraints rises greatly. Therefore, adding the time dimension has a significant impact on the complexity of the problem.

The inherent great complexity of the proposed model and its non-convex nature make it impossible to devise an exact algorithm for solving the model efficiently. Thus, a special approach is needed to solve the model in a reasonable time. In this section, we propose an evolutionary approach to solve the problem for good rather than exact. This approach is a combination of three techniques: the phase-I of the two-phase simplex method, Frank-Wolfe algorithm, and genetic algorithm (GA). In the following of this section, a general framework for solving the model, the proposed procedure to reduce the solution time of the lower-level problem, a way of finding the optimal solution, and finally proposed solution approach are described.

In the model under study, the upper-level problem is mixed integer programming with two kinds of decision variables: x which shows roads completion time and is binary, and y that indicates proportion of roads construction in each period and is continuous. y is only used in constraints of upper-level problem, while x is applied in both lower- and upper-level problems. Thus, it is sufficient to know x values to solve the lower-level problem. Consequently, we can focus on decision space which arises from decision variable x to solve the model, but it must be checked whether there are valid y values for the specified values of x in each solution. Therefore, the feasibility of constraints (20)–(24) should be tested after fixing x values in constraints (21) and (22). To this end, the phase-I of the two-phase simplex method can be used (Bazara et al., 2011), because these constraints are linear in terms of y. Then, the lower-level problem needs to be solved only when x is feasible. For this purpose, Frank–Wolf algorithm can be used.

A full enumeration algorithm can be used according to the proposed general framework (paragraph 4.1) to find the optimal solution of the model as following:

                           
                              I.
                              For each x owned to decision space, do the following steps:

                                    
                                       
                                          Step 1.
                                       
                                       Check feasibility of upper-level problem, e.g., by the phase-I of the two-phase method.

If the upper-level problem is feasible, set x in lower-level problem (constraints (26)), otherwise, go to I and evaluate another x.

Solve the lower-level problem for each evaluation period, e.g., by Frank-Wolfe algorithm and find vt
                                          .

Set vt
                                           in objective function of upper-level problem and calculate ZU
                                          .

Specify the solution with the best ZU
                                  as optimal solution of the problem.

As aforementioned, for each feasible solution, the lower-level problem must be solved T'times. The large number of the lower-level problems, which have to be solved, makes the solution process very time-consuming and so it seems a major difficulty in solving the model. Therefore, it must be focused on the lower-level solving method to reduce the time. We use Frank-Wolfe algorithm to solve the lower-level problem because it is one of the most efficient methods to solve traffic assignment problem. The algorithm starts with a feasible initial solution and successively generates a number of linear programming problems whose solutions are expected to converge to the solution of the original problem (Sheffi, 1985). Therefore, proximity of feasible initial solution to optimal solution causes faster convergence to optimal solution. A feasible initial solution for Frank-Wolfe can be found by All-or-Nothing method at the free-travel time on links, but this assignment usually does not provide a near-optimal solution. Given that change in O–D demand and network configuration in each period is few, compared to prior period, user equilibrium in each period could be a close estimate of DUE in next period. However, this estimate could not be a feasible initial solution because of changes in O–D demand over time even for periods in which no links are added to the network.

Considering the above description, we use the result of All-or-Nothing method at the free-travel time on links as a feasible initial solution for Frank-Wolfe at first period and propose the following procedure to attain a feasible near-optimal initial solution for other periods.

                           
                              
                                 Step 1.
                              
                              Obtain the value of added demand between each O–D pair compared to previous period.
                                    
                                       (27)
                                       
                                          
                                             Δ
                                             
                                                d
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                r
                                             
                                             =
                                             
                                                d
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                r
                                             
                                             −
                                             
                                                d
                                                
                                                   s
                                                   ,
                                                   t
                                                   −
                                                   1
                                                
                                                r
                                             
                                             
                                             ,
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             ∀
                                             
                                                (
                                                r
                                                ,
                                                s
                                                )
                                             
                                             ∈
                                             W
                                          
                                       
                                    
                                 
                              

Assign added demands obtained in step 1 by applying All-or-Nothing method to the network whose links travel time are based on user equilibrium in previous period.

Attain a feasible initial solution by adding values assigned in step 2 to flow volume in previous period.
                                    
                                       (28)
                                       
                                          
                                             
                                                v
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                
                                                   i
                                                   j
                                                
                                             
                                             =
                                             
                                                v
                                                
                                                   s
                                                   ,
                                                   t
                                                   −
                                                   1
                                                
                                                
                                                   i
                                                   j
                                                
                                             
                                             +
                                             Δ
                                             
                                                v
                                                
                                                   s
                                                   ,
                                                   t
                                                
                                                
                                                   i
                                                   j
                                                
                                             
                                             
                                             ,
                                             
                                             
                                             
                                             
                                             
                                             
                                             
                                             ∀
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             ∈
                                             A
                                             ,
                                             ∀
                                             s
                                             ∈
                                             D
                                          
                                       
                                    
                                 
                              

In which 
                           
                              Δ
                              
                                 v
                                 
                                    s
                                    ,
                                    t
                                 
                                 
                                    i
                                    j
                                 
                              
                           
                         is obtained by All-or-Nothing method in step 2.

This procedure provides a feasible near-optimal initial solution to Frank-Wolfe, and thereby increases the speed of convergence to the optimal solution, especially for periods in which no links are added to the network (such as periods after the period T) and network configuration remains unchanged. In order to check effectiveness of proposed procedure, we conducted some computational tests on Sioux Falls network which is introduced in Section 5. Numerical results on Sioux Falls network indicate that Frank-Wolfe run-time is about 0.58 seconds averagely for each traffic assignment in the case of generating the initial solution by All-or-Nothing method at the free-travel time on links. By applying our proposed procedure to solve traffic assignment problem with the same level of precision, solution time is reduced to 0.37 seconds (i.e. 36 percent less) for periods in which both demands and network configuration change, and to 0.05 seconds (i.e. 92 percent less) for periods in which only demands change. Since most of the model solution time is spent to solve traffic assignment problems (the lower-level problem), these results indicate the significant efficiency of the proposed procedure in reducing the model solution time. Thus, the proposed procedure would make it possible also to solve problems of this kind that were previously prohibitively expensive.

We have developed a GA to solve the model in the proposed general framework (paragraph 4.1). Therefore, our proposed solution approach is a novel combination of three techniques: the phase-I of the two-phase simplex method to check the feasibility of upper-level problem, Frank-Wolfe algorithm to solve the lower-level problem, and GA to solve the upper-level problem. In our proposed approach, the solutions are generated by GA. Generated solutions are checked for feasibility by phase-I of the two-phase simplex, and then infeasible solutions are eliminated. For feasible solutions, the lower-level problem is solved by Frank-Wolfe algorithm, and the upper-level objective function is calculated and used as the fitness function of GA. This process is repeated until one of the stopping criteria is satisfied. The details of our proposed GA are described in the next paragraph.

The genetic algorithm is an evolutionary optimization search technique based on the mechanics of natural selection and natural genetics, which employs a structured but randomized way to use genetic information in finding new directions of search. GA is applied in a wide variety of application areas, specifically in combinatorial problems, such as DNDP. There are several proposed procedures for implementing GA. The readers are referred to Goldberg (1989) and Mitchell (1996) for further readings in this area. Our proposed GA is characterized as follows:

Before a GA can be run, a suitable representation of chromosomes for the considered problem must be devised. According to the description provided in 4.1, each solution can be represented by an integer string with length L (number of proposed links to add the network). Each gene represents the period number in which the related link is operated, and if a link is not selected, takes the value of 0. Fig. 1
                            shows a sample of chromosome representation. This chromosome defines a solution which based on it, link 1, link 3, and link 5 are added to the network in second, fourth, and third period, respectively; and link 2 and link 4 are not selected within planning horizon.

The initial population is generated randomly such that the total cost of the links selected in each solution does not exceed the total budget available in the planning horizon. Generated solutions are checked for feasibility (constraints (20)–(24)), and then infeasible solutions are eliminated.

A chromosome fitness value is the upper-level objective value (i.e. the amount of the total travel time of the users in the network) as a result of adding the links to the network.

The parents are selected by the roulette-wheel method. This method gives preference to the fittest individuals, without totally excluding the weakest ones.

The crossover operator recombines the gene-codes of two parents and produces two offsprings such that the children inherit a set of genes from each parent. Three kind of crossover operator with different using probabilities are used: single-point, double-point, and uniform. The difference between these operators is in the number of breakpoints.

Mutation takes place on some newly formed children in order to prevent all solutions from converging to their particular local optimum. For this purpose, uniform mutation operator is used in which the value of each chosen gene is replaced with an integer uniform random value selected between [0, T] excluding the current value.

Each offspring that is better than any current individual in the population is inserted into the population and the worst one in the population is deleted. Therefore, the population size is kept fixed, always made up of the best valued individuals (chromosomes). It obeys the natural law of ‘‘Stronger creatures live longer’’. Applying this mechanism will ensure that new generations never fall behind their predecessors.

To terminate the algorithm two criteria are used: performing a fixed number of iterations; and elapsing a certain number of iterations without any improvement in the best objective value of individuals.

GA has multiple parameters that their values are very impressive on GA performance. Hence, GA parameter setting is very important. We use Taguchi method to determine the appropriate value of the parameters of the proposed GA.

Taguchi fundamental principle is to improve the quality of characteristic of interest by minimizing the effect of the causes of variation without eliminating the causes. Taguchi's approach to parameter design provides a systematic and efficient method for determining near optimum design parameters for performance and cost. The objective is to select the best combination of control parameters so that the product or process is most robust with respect to noise factors. The two major tools used in the Taguchi method are: signal-to-noise ratio (S/N), which measures quality, and orthogonal arrays, which are used to study many design parameters simultaneously. Using orthogonal arrays significantly reduces the number of experimental configurations to be studied. Furthermore, the conclusions drawn from small scale experiments are valid over the entire experimental region spanned by the control factors and their settings (Phadke, 1989).

To verify the performance of the proposed approach, it is applied to the case of the network of Sioux Falls. The Sioux Falls network, as shown in Fig. 2
                     , is widely used in transportation studies. It contains 24 nodes, 76 links, and 528 O–D pairs, and can be considered as a medium size test network. The demands and link properties are basically those given in LeBlanc (1975), and are omitted here for brevity. It is assumed that each O–D demand will increase randomly between 0 and 5 percent per year. Also, 10 (5 pairs of) candidate links are considered for addition to the network which their properties are listed in Table 1
                     . The proposed approach was coded in MATLAB, and all experiments were carried out on a PC computer with 4  gigabytes RAM and a 2.26 gigahertz Core i7 CPU.

Twenty-seven test problems are generated randomly. These problems are classified in three groups based on the number of proposed projects: 5, 7, and 10. In each dimension, three levels for the ratio of available budget to the total cost needed to build all projects (B/C) are considered: 0.3, 0.5, and 0.7. In each level of B/C ratio, three problems are generated. The planning horizon (T) and the evaluation horizon (T') are set 5 and 10 years, respectively. Other parameters such as Bt
                         ,cij,αij
                        are randomly assigned in each problem.

To measure the accuracy of the solutions given by the proposed approach, all feasible solutions of each problem have been found and evaluated for the network under study, in order to identify the exact solution. The results are showed in Table 2
                        . As shown in the table, by increasing the number of proposed projects (|A
                        2|) and budget to cost ratio (B/C), the number of feasible solutions and consequently CPU time increases. Also, the average solution time per each feasible solution increases with the rise of |A
                        2|. Thus, it can be seen for small size problems such as problems 1–3, solution time is less than one minute while for large size problems including problems 22 and 23, it has lasted about three days. Moreover, only finding feasible solutions in problems 25–27 has lasted about two days, and therefore it was not possible to solve these problems in a reasonable time. Assuming that the objective function computation for each feasible solution take 2.6 seconds averagely, the time needed to solve any of these problems by full enumeration method is estimated about one month. Hence, using the full enumeration method to solve large size problems is irrational, and the necessity to apply the methods to solve these problems in a reasonable time is clear.

Before using GA, its parameters should be set. These parameters are: population size, number of generations, crossover rate, mutation rate, probability of each kind of crossover operator, and mutation probability. Since beside the solution quality, the solution time is also important, design of experiments should be done so that the time parameter is almost constant in all experiments. To this end, population size, number of generations, crossover rate, and mutation rate which directly affect the solution time of GA are considered as a combined factor. Also, a factor to determinate the population selection method is considered. The selection strategy is based on elitism. Therefore, an elitism rate (er
                        ) is needed to be considered which is between 0 and 1. If elitism rate is 1, the best chromosomes among offsprings and the population of the last generation will be selected. If er
                         is less than 1, (1 − er
                        ) of new generation will be selected randomly. Hence, the final factors are:

                           
                              -
                              Combination of population size, number of generations, crossover rate, and mutation rate.

Probability of single point, double point, and uniform crossover.

Mutation probability.

Elitism rate.

Defined levels for the first factor are adjusted so that the runtime of GA is nearly same for all of levels. Values of levels, especially for the first factor, should be defined according to the problem scale. Thus, design of experiments has been done for three problems with different scales of 5, 7, and 10 projects. Six levels for the first factor and 3 levels for the other factors are considered. Hence, if we want to use a complete factorial plan, it must be done 162 experiments. Since we only consider the main effects of design factors and the interaction among factors is neglected, by applying Taguchi method it is reduced to 18 experiments. Accordingly, standard orthogonal array L18 is used. Because GA is a stochastic algorithm, each experiment is repeated 5 times to reflect effect of each level better. After confirming the orthogonal arrays, the next step is to determine the signal-to-noise ratio (S/N). Given that the objective function is minimizing the total travel time, S/N is calculated by the following equation:

                           
                              (29)
                              
                                 
                                    S
                                    /
                                    N
                                    =
                                    −
                                    10
                                    
                                    log
                                    
                                       (
                                       
                                          
                                             1
                                             n
                                          
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             y
                                             i
                                             2
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

In which n is the number of measurements and yi
                         is each observation of experiment. After calculating S/N for all of plans, mean of S/N values for each level is obtained and then the best level in each factor is identified by comparing them with each other. By accomplishing this process, the optimum levels of the GA parameters were determined as Table 3
                        .

GA parameters are set according to optimum levels determined by Taguchi method. Since GA is a stochastic search algorithm, each problem is solved five times by proposed GA and finally the average of results is reported. Table 4
                         shows the results of proposed approach.

Performance of the proposed approach in solving test problems can be evaluated in terms of solution quality and solution time. As shown in Table 4, proposed method has an error of less than 1 percent in all of the test problems and the total average of errors is about 0.5percent. Moreover, the optimal solution has been found at least once in five times run of the proposed approach for each problem and also the results variability, which has been measured by Relative Standard Deviation (RSD), is not significant (less than 1 percent averagely). Since meta-heuristic algorithms basically try to find a good solution (and not necessarily optimal), one-percent error level is quite favorable for this algorithm. Therefore, proposed approach displays a satisfactory performance in terms of solution quality in the test problems. Solution time of proposed approach can be evaluated with comparison to full enumeration. For this purpose, the time ratio for each problem is defined as time of proposed approach divided by time of full enumeration method. The smaller value of this ratio indicates the better performance of the proposed method from aspect of time. As shown in Fig. 3
                        , with the increasing of problem scale, the performance of proposed approach in comparison to full enumeration method becomes better from the standpoint of time. Although in some small-scale problems such as problems 1–3, the CPU time of both methods is almost the same, in large-scale problems such as problems 22–24, CPU time of proposed approach is nearly 200 times less. Even in the some large-scale problems that using the full enumeration method is not possible in an acceptable time, for instance problems 25–27 which the time needed to solve these problems by full enumeration method is estimated about one month, CPU time of proposed approach is less than 0.5 hour. Given that meta-heuristic methods are used basically for solving large-scale problems, which exact methods are incapable of finding the optimal solution, solution time of proposed approach seems acceptable in the test problems. Therefore, proposed solution approach provides an acceptable performance both in terms of solution quality and solution time.

@&#CONCLUSIONS@&#

Urban road construction projects selection has been an important and widely considered problem in the field of transportation planning. This problem is inherently a Discrete Network Design Problem (DNDP). Integration of selecting and scheduling transportation projects makes the results more accurate. Therefore, this paper presents three bi-level programming models based on DNDP to integrate selecting and scheduling of urban road construction projects. Also a general framework to solve the model and a procedure to reduce the solution time are proposed. The proposed procedure to reduce the solution time is based on providing a feasible near-optimal initial solution for Frank-Wolfe method to solve the lower-level problem. Results showed that this procedure significantly decreases the solution time. Since the problem under study is very complicated, devising an exact algorithm to solve large-scale problems in a reasonable time is not possible. Hence, using heuristic or meta-heuristic approaches which provide near-optimal solution in an acceptable time is inevitable. Accordingly, an evolutionary approach based on GA is proposed such that only a small fraction of the entire solution space is checked to achieve an optimal or near-optimal solution.

To verify the performance of the proposed approach, we used the Sioux Falls network which can be considered as a medium-size test network. Computational tests show acceptable performance of the proposed approach in terms of solution quality and time. For large-scale problems, using exact methods to solve our proposed model is not practical while our proposed solution approach can be used in such situations. Because, first, the solution time of our proposed approach is influenced less than exact methods by increasing the size of problems (as shown in Fig. 3) and, second, our proposed approach is to find a good, rather than optimal, solution. Therefore, implementation of the proposed model and solution approach for real large-size networks could be pursued as a worthwhile research subject. Some other scopes in order to extend the present study are suggested as follows:

                        
                           (a)
                           In the presented models, only one objective is considered (total travel time) while in the most real cases, multiple objectives should be optimized simultaneously. Therefore, extending the models to a multiple objectives form and then utilizing multi-objective decision making approaches could be pursued in future studies. Presently, the authors are working on this field.

Utilization of other meta-heuristic techniques to solve the model such as Simulated Annealing (SA), Tabu Search (TS), Ant System (AS), and Particle Swarm Optimization (PSO) and then comparing their efficiency with our proposed approach could also be done in further studies.

@&#REFERENCES@&#

