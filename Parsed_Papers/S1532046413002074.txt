@&#MAIN-TITLE@&#A private DNA motif finding algorithm

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose the first solution to differentially private DNA motif finding.


                        
                        
                           
                           Our solution is based on the n-gram model and is optimized for DNA motif finding.


                        
                        
                           
                           We provide a theoretical utility analysis of our solution.


                        
                        
                           
                           We experimentally show the promise of integrating privacy into DNA motif finding.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Motif finding

Privacy protection




                     ∊-Differential privacy




                     n-gram model

@&#ABSTRACT@&#


               
               
                  With the increasing availability of genomic sequence data, numerous methods have been proposed for finding DNA motifs. The discovery of DNA motifs serves a critical step in many biological applications. However, the privacy implication of DNA analysis is normally neglected in the existing methods. In this work, we propose a private DNA motif finding algorithm in which a DNA owner’s privacy is protected by a rigorous privacy model, known as 
                        
                           ∊
                        
                     -differential privacy. It provides provable privacy guarantees that are independent of adversaries’ background knowledge. Our algorithm makes use of the 
                        
                           n
                        
                     -gram model and is optimized for processing large-scale DNA sequences. We evaluate the performance of our algorithm over real-life genomic data and demonstrate the promise of integrating privacy into DNA motif finding.
               
            

@&#INTRODUCTION@&#

A DNA motif is defined as an overrepresented nucleic acid (sub) sequence that has some biological significance [1]. In the sequel, we use the terms motif and (sub) sequence interchangeably. Finding motifs in genomic DNA sequences is one of the most important and challenging problems in both bioinformatics and computer science. The identification of DNA motifs serves a critical step in a wide spectrum of biological applications [2], such as checking fragment assemblies, comparing gene structures and mapping of cDNA/EST sequences, among others. In the simplest form, the problem of motif finding can be formulated as follows: given a collection of DNA sequences, identify the motifs that occur in at least a given number of sequences or that occur most frequently. The problem is compounded by the fact that motifs are not presented exactly. Motifs include mutations, insertions or deletions of nucleotides.

In recent years, with the increasing availability of DNA data, numerous DNA motif finding algorithms have been proposed [1], resulting in better understanding on the mechanisms that regulate the expression of genes. Existing algorithms address the problem of motif finding from different directions. According to Das and Dai [1], they can be roughly classified into three major classes: (1) those that use promoter sequences from a single genome [3–14]; (2) those that use orthologous promoter sequences of a single gene from multiple species [15–19]; and (3) a mixture of the former two classes [20–24].

While there is no doubt that DNA data analysis generates interesting findings that could benefit the general public, substantial privacy concerns have been raised on the use of DNA data. Indeed, a personally identifiable DNA segment gives an adversary access to a wealth of information about the person and his or her genetic relatives [25], exposing their privacy to considerable risks. Such privacy concerns have been confirmed by several recent research results. Homer et al. [26] demonstrate that it is possible to detect an individual’s presence within a highly complex genomic DNA mixture using high-density single nucleotide polymorphism (SNP) genotyping microarrays. As a consequence, the US National Institutes of Health (NIH) immediately removed all aggregate results from open-access databases. Later, Gymrek et al. [27] show that they are able to re-identify 50 DNA donors who had participated in the 1000 Genomes Project from their published genomes, even after removing explicit identifying information. All these findings recognize the vital necessity of privacy protection in DNA data analysis.

Unfortunately, the existing works have largely neglected the privacy implication in DNA motif finding. Worse, though it has been widely believed that improper use of DNA data poses serious compromise of individual privacy, it is still not clear what types of privacy attacks could be launched on DNA sequences [28]. Therefore, a data holder may not even know what information to protect nor what background knowledge might be used by an adversary to launch privacy attacks. These concerns are exactly the ones addressed by 
                        
                           ∊
                        
                     -differential privacy 
                     [29], one of the strongest privacy notions that has been widely adopted for privacy protection. Intuitively, 
                        
                           ∊
                        
                     -differential privacy requires that the outcome of any analysis should not overly depend on any single data record (in our problem, any single DNA sequence). It follows that even if a user had opted into a database, there will be almost no difference in any computation based on that database.

Due to the desirable privacy property of differential privacy, it has attracted increasing attention from the genetics community for private DNA data analysis. Fienberg et al. [30] study the release of aggregate minor allele frequencies (MAFs), 
                        
                           
                              
                                 χ
                              
                              
                                 2
                              
                           
                        
                     -statistics and 
                        
                           p
                        
                     -values under differential privacy. Their method of generating perturbed frequencies primarily relies on the standard Laplace mechanism [29], which normally results in excessive noise and hence less accurate frequencies. Johnson and Shmatikov [31] recently present a set of differentially private data mining algorithms for genome-wide association studies (GWAS). In particular, they develop a general distance-score mechanism to support accurate answering of GWAS queries. We point out that the problem of both of the studies is different from DNA motif finding. They make the fundamental assumption that a candidate set of SNPs (of size on the order of 
                        
                           
                              
                                 10
                              
                              
                                 5
                              
                           
                        
                      
                     [31]) have been given. In contrast, the major technical challenge of motif finding is how to accurately identify the candidate set of frequent motifs along with their frequencies from a significantly larger output space (e.g., in our experimental section, we consider output spaces as large as the order of 
                        
                           
                              
                                 4
                              
                              
                                 100
                              
                           
                        
                     ) while satisfying differential privacy. It is computationally infeasible to enumerate all possible motifs and then apply the above solutions. Therefore, neither of the solutions [30,31] can be directly applied to DNA motif finding.

DNA motif finding is related to the problems of frequent itemset mining (FIM) [32] and frequent sequential pattern mining (FSPM) [33], which have been well studied in the data mining community. There have been some recent works on providing differentially private algorithms for these data mining tasks. Unfortunately, the research on differentially private FIM [34–36] cannot be applied to our problem due to the inherent sequentiality of DNA sequences. The sequentiality of letters in a DNA motif is critical. For example, 
                        
                           ACTG
                        
                      is different from 
                        
                           CTGA
                        
                     , though they correspond to the same itemset, 
                        
                           {
                           A
                           ,
                           C
                           ,
                           G
                           ,
                           T
                           }
                        
                     . However, the sequentiality is not considered in FIM. Two latest works [37,38] study differentially private FSPM, which takes into consideration the sequentiality. Chen et al. [37] propose a prefix-tree-based solution for publishing sequential transit data. Later, Chen et al. [38] improve the solution in [37] by making use of the 
                        
                           n
                        
                     -gram model with the goal of constructing a synthetic database for answering counting queries. The method in [38] provides important primitives for finding DNA motifs under differential privacy, but still faces new challenges due to the fact that motifs include mutations, insertions or deletions of nucleotides.

In this work, we consider the problem of finding DNA motifs while satisfying 
                        
                           ∊
                        
                     -differential privacy. This problem involves an interesting trade-off between privacy and data utility. Due to the noise injected for the purpose of privacy protection, we may not be able to generate the same motifs as from the non-private algorithm. The key challenge of a differentially private DNA motif finding algorithm is, given a fixed privacy requirement, how to minimize noise so that the motifs obtained are as close to those obtained by the non-private algorithm as possible. Direct adaptation of existing motif finding algorithms into a differentially private version is very difficult as they are overly sensitive to the change of a single DNA sequence. This implies that excessive noise must be added, resulting in undesirable data utility and thus imprecise motif identification. In contrast, we propose a novel solution that is adapted from [38] and tuned to our problem in order to achieve meaningful data utility and desirable efficiency.

In spite of the diverse research on motif finding, to our best knowledge, there is still no research that integrates rigorous privacy requirements into DNA motif finding. In this work, we conduct the first exploration on the possibility of integrating 
                           
                              ∊
                           
                        -differential privacy, a well-acknowledged rigorous privacy notion, into DNA motif finding while guaranteeing the usefulness of the identified motifs. Our solution is based on the 
                           
                              n
                           
                        -gram model, which allows to generate longer motifs using a probabilistic prediction model, and is optimized for the problem of DNA motif finding. This enables our algorithm to significantly improve the resultant data utility and scalability. We provide a theoretical utility analysis of our solution and show that it outperforms the approach based on the standard Laplace mechanism. Since motif finding algorithms usually need to handle large-scale DNA sequences, another contribution of our paper is to provide an efficient implementation of the proposed algorithm. Finally, we perform a comprehensive experimental study on real-life genomic data, which demonstrates the great promise of integrating privacy into DNA motif finding.

The essence of 
                           
                              ∊
                           
                        -differential privacy is to mask the presence or absence of a single user from the outcome of any computation over the underlying database, leading to the notion of neighboring databases. Two databases, 
                           
                              
                                 
                                    D
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    D
                                 
                                 
                                    2
                                 
                              
                           
                        , are neighbors if they differ on at most one record (in our problem, that is a single DNA sequence), denoted by 
                           
                              |
                              
                                 
                                    D
                                 
                                 
                                    1
                                 
                              
                              ⊕
                              
                                 
                                    D
                                 
                                 
                                    2
                                 
                              
                              |
                              =
                              1
                           
                        . 
                           
                              ∊
                           
                        -differential privacy demands that any information that can be learned from a database can also be learned from any of its neighbors. Consequently, for a record owner, it ensures that any privacy breach will not be a result of participating in the database. Formally, 
                           
                              ∊
                           
                        -differential privacy [29] is defined below.
                           Definition 2.1
                           Differential privacy


                           A privacy mechanism 
                                 
                                    A
                                 
                               gives 
                                 
                                    ∊
                                 
                              -differential privacy if for any databases 
                                 
                                    
                                       
                                          D
                                       
                                       
                                          1
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                 
                               s.t. 
                                 
                                    |
                                    
                                       
                                          D
                                       
                                       
                                          1
                                       
                                    
                                    ⊕
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                    |
                                    =
                                    1
                                 
                              , and for any possible output 
                                 
                                    O
                                    ∈
                                    Range
                                    (
                                    A
                                    )
                                 
                              ,
                                 
                                    
                                       Pr
                                       [
                                       A
                                       (
                                       
                                          
                                             D
                                          
                                          
                                             1
                                          
                                       
                                       )
                                       ∈
                                       O
                                       ]
                                       ⩽
                                       
                                          
                                             e
                                          
                                          
                                             ∊
                                          
                                       
                                       ×
                                       Pr
                                       [
                                       A
                                       (
                                       
                                          
                                             D
                                          
                                          
                                             2
                                          
                                       
                                       )
                                       ∈
                                       O
                                       ]
                                    
                                 
                              where the probability is taken over the randomness of 
                                 
                                    A
                                 
                              .□


                        
                           
                              ∊
                           
                        -Differential privacy provides strong privacy guarantees that are independent of an adversary’s background knowledge. To achieve 
                           
                              ∊
                           
                        -differential privacy, we need to quantify the maximal impact of a single user on a function, which is known as the function’s sensitivity.
                           Definition 2.2
                           Sensitivity


                           For any function 
                                 
                                    f
                                    :
                                    D
                                    →
                                    
                                       
                                          R
                                       
                                       
                                          d
                                       
                                    
                                 
                              , the sensitivity of 
                                 
                                    f
                                 
                               is
                                 
                                    
                                       Δ
                                       f
                                       =
                                       
                                          
                                             
                                                max
                                             
                                             
                                                
                                                   
                                                      D
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                
                                                   
                                                      D
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                       |
                                       |
                                       f
                                       (
                                       
                                          
                                             D
                                          
                                          
                                             1
                                          
                                       
                                       )
                                       -
                                       f
                                       (
                                       
                                          
                                             D
                                          
                                          
                                             2
                                          
                                       
                                       )
                                       |
                                       
                                          
                                             |
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                              for all 
                                 
                                    
                                       
                                          D
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                 
                               s.t. 
                                 
                                    |
                                    
                                       
                                          D
                                       
                                       
                                          1
                                       
                                    
                                    ⊕
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                    |
                                    =
                                    1
                                 
                              .□

A standard mechanism to achieve differential privacy is to add properly calibrated Laplace noise to the true output of a function, which is known as Laplace mechanism 
                           [29]. It takes as inputs a database 
                              
                                 D
                              
                           , a function 
                              
                                 f
                              
                           , and the privacy parameter 
                              
                                 ∊
                              
                           . The noise is generated from a Laplace distribution with the probability density function (pdf) 
                              
                                 p
                                 (
                                 x
                                 |
                                 λ
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                       λ
                                    
                                 
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       |
                                       x
                                       |
                                       /
                                       λ
                                    
                                 
                              
                           , where 
                              
                                 λ
                              
                            is determined by both 
                              
                                 Δ
                                 f
                              
                            and the desired privacy parameter 
                              
                                 ∊
                              
                           .

Let 
                              
                                 L
                                 (
                                 λ
                                 )
                              
                            denote a Laplace random variable with the probability density function defined as above.
                              Theorem 2.1
                              
                                 For any function 
                                 
                                    
                                       f
                                       :
                                       D
                                       →
                                       
                                          
                                             R
                                          
                                          
                                             d
                                          
                                       
                                    
                                 
                                 , the mechanism
                                 
                                    
                                       
                                          Laplace
                                          (
                                          D
                                          ,
                                          f
                                          ,
                                          ∊
                                          )
                                          =
                                          f
                                          (
                                          D
                                          )
                                          +
                                          <
                                          
                                             
                                                L
                                             
                                             
                                                1
                                             
                                          
                                          (
                                          λ
                                          )
                                          ,
                                          
                                             
                                                L
                                             
                                             
                                                2
                                             
                                          
                                          (
                                          λ
                                          )
                                          ,
                                          …
                                          ,
                                          
                                             
                                                L
                                             
                                             
                                                d
                                             
                                          
                                          (
                                          λ
                                          )
                                          >
                                       
                                    
                                 
                                 gives 
                                 
                                    
                                       ∊
                                    
                                 
                                 -differential privacy if 
                                 
                                    
                                       λ
                                       =
                                       Δ
                                       f
                                       /
                                       ∊
                                    
                                  
                                 and 
                                 
                                    
                                       
                                          
                                             L
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       λ
                                       )
                                    
                                  
                                 are i.i.d Laplace random variables.
                                 □

Since motifs are rarely precisely defined, it is necessary to take into consideration a sequence’s “approximately” identical sequences for computing its frequency. In our problem setting, we follow the convention [2,6,39] to measure the extent of “approximation” based on the Hamming distance model. Let 
                           
                              Σ
                              =
                              {
                              A
                              ,
                              C
                              ,
                              G
                              ,
                              T
                              }
                           
                         be the alphabet of letters in DNA sequences.
                           Definition 2.3
                           Hamming distance


                           The Hamming distance between two DNA (sub) sequences of length 
                                 
                                    l
                                    ,
                                    
                                       
                                          S
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    
                                       
                                          s
                                       
                                       
                                          1
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          s
                                       
                                       
                                          2
                                       
                                       
                                          1
                                       
                                    
                                    ⋯
                                    
                                       
                                          s
                                       
                                       
                                          l
                                       
                                       
                                          1
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          S
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    
                                       
                                          s
                                       
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          s
                                       
                                       
                                          2
                                       
                                       
                                          2
                                       
                                    
                                    ⋯
                                    
                                       
                                          s
                                       
                                       
                                          l
                                       
                                       
                                          2
                                       
                                    
                                 
                               where 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          i
                                       
                                       
                                          j
                                       
                                    
                                    ∈
                                    Σ
                                 
                              , is 
                                 
                                    
                                       
                                          d
                                       
                                       
                                          H
                                       
                                    
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          S
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    =
                                    |
                                    {
                                    i
                                    |
                                    
                                       
                                          s
                                       
                                       
                                          i
                                       
                                       
                                          1
                                       
                                    
                                    
                                    ≠
                                    
                                    
                                       
                                          s
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    1
                                    ⩽
                                    i
                                    ⩽
                                    l
                                    }
                                    |
                                 
                              .□

Two sequences are considered approximately identical if and only if they are of the same length and their Hamming distance is within a user-specified error tolerance 
                           
                              δ
                           
                         (normally a small positive integer). For example, given the error tolerance 
                           
                              δ
                              =
                              2
                              ,
                              AATGC
                           
                         and 
                           
                              ACTTC
                           
                         are approximately identical. For ease of exposition, we denote “all sequences of Hamming distance 
                           
                              ⩽
                              δ
                           
                         to a sequence 
                           
                              S
                           
                        ” by “
                           
                              S
                           
                        ’s approximate sequences”.

In this paper, we aim to identify the top-
                           
                              N
                           
                         most “frequent” motifs in a differentially private manner, where 
                           
                              N
                           
                         is a user-specified parameter. Hence it is imperative to clearly define the “frequency” of a motif. In our problem, each motif is associated with three types of frequencies: the number of its occurrences, the number of its approximate sequences’ occurrences and the sum of these two numbers. We refer to the first number simply as frequency, the second number as Hamming frequency, and the sum of these two numbers as consolidated frequency. In the biological setting, we are interested in identifying the motifs with the largest consolidated frequencies. Formally, our problem is defined as follows.
                           Definition 2.4
                           Private motif finding


                           Given a collection of DNA sequences 
                                 
                                    S
                                    =
                                    {
                                    
                                       
                                          S
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          S
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    ⋯
                                    ,
                                    
                                       
                                          S
                                       
                                       
                                          |
                                          S
                                          |
                                       
                                    
                                    }
                                 
                              , an error tolerance threshold 
                                 
                                    δ
                                 
                              , a privacy parameter 
                                 
                                    ∊
                                 
                              , find the top-
                                 
                                    N
                                 
                               motifs of a length in 
                                 
                                    [
                                    
                                       
                                          l
                                       
                                       
                                          L
                                       
                                    
                                    ,
                                    
                                       
                                          l
                                       
                                       
                                          U
                                       
                                    
                                    ]
                                 
                               with the largest consolidated frequencies while satisfying 
                                 
                                    ∊
                                 
                              -differential privacy, where 
                                 
                                    
                                       
                                          l
                                       
                                       
                                          L
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          l
                                       
                                       
                                          U
                                       
                                    
                                 
                               are user-specified parameters and 
                                 
                                    
                                       
                                          l
                                       
                                       
                                          L
                                       
                                    
                                    ⩽
                                    
                                       
                                          l
                                       
                                       
                                          U
                                       
                                    
                                 
                              .□

@&#METHODS@&#

Before presenting the algorithms, we first give the basic notions used in this paper. For a sequence 
                           
                              S
                           
                        , let 
                           
                              |
                              S
                              |
                           
                         be its frequency and 
                           
                              ‖
                              S
                              ‖
                           
                         be its consolidated frequency (i.e., the sum of its frequency and its Hamming frequency). We denote the noisy versions (i.e., after adding Laplace noise) of 
                           
                              |
                              S
                              |
                           
                         and 
                           
                              ‖
                              S
                              ‖
                           
                         by 
                           
                              
                                 
                                    |
                                    S
                                    |
                                 
                                 
                                    ∼
                                 
                              
                           
                         and 
                           
                              
                                 
                                    ‖
                                    S
                                    ‖
                                 
                                 
                                    ∼
                                 
                              
                           
                        , respectively. The longest proper suffix of a sequence 
                           
                              S
                           
                         is the subsequence of 
                           
                              S
                           
                         with the first letter in 
                           
                              S
                           
                         removed. For example, the longest proper suffix of 
                           
                              S
                              =
                              AATGC
                           
                         is 
                           
                              ATGC
                           
                        . We denote “a sequence of length 
                           
                              l
                           
                        ” by “an 
                           
                              l
                           
                        -sequence”.

For simplicity of discussion, we assume that the lengths of all input DNA sequences are less than or equal to a maximum length, denoted by 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                        . Knowing the value of 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                         is critical to our problem. However, releasing the value of 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                         must be done privately. One possibility is to learn 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                         by a private mechanism. Unfortunately, since an additional DNA sequence (in view of the definition of neighboring databases) could be arbitrarily long, we may not be able to obtain an accurate estimation of 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                        . Furthermore, there is a chance of violating differential privacy when the noisy 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                         is less than the true 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                         because this results in a smaller sensitivity than needed and insufficient noise will be subsequently added. As an alternative, in practice, we could make use of truncation, a technique widely used in the literature [36,38], to address the issue. We explicitly specify an 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                         value that is independent of the underlying DNA sequences, which can be learned from public knowledge, and then truncate all input DNA sequences longer than 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                        . In this case, we may introduce a new source of error due to truncation, but the impact of truncating some long DNA sequences is normally negligible for DNA motif finding provided that 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                         is not set to be too small.

We first present a simple differentially private solution based on the Laplace mechanism for finding motifs. This solution is helpful for understanding our main algorithm and will serve the benchmark in the experimental evaluation. This simple solution is detailed in Algorithm 1.
                           Algorithm 1
                           A simple private motif finding algorithm 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Input: DNA sequences 
                                                   
                                                      S
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                Input: Motif length range 
                                                   
                                                      [
                                                      
                                                         
                                                            l
                                                         
                                                         
                                                            L
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            l
                                                         
                                                         
                                                            U
                                                         
                                                      
                                                      ]
                                                   
                                                
                                             
                                          
                                          
                                             
                                                Input: Privacy parameter 
                                                   
                                                      ∊
                                                   
                                                
                                             
                                          
                                          
                                             
                                                Input: Error tolerance 
                                                   
                                                      δ
                                                   
                                                
                                             
                                          
                                          
                                             
                                                Output: Top-
                                                   
                                                      N
                                                   
                                                 most frequent motifs 
                                                   
                                                      N
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1: 
                                                   
                                                      l
                                                      =
                                                      
                                                         
                                                            l
                                                         
                                                         
                                                            L
                                                         
                                                      
                                                   
                                                ;
                                          
                                          
                                             
                                                2: 
                                                   
                                                      N
                                                      =
                                                      ∅
                                                   
                                                ;
                                          
                                          
                                             
                                                3: while 
                                                
                                                   
                                                      l
                                                      ⩽
                                                      
                                                         
                                                            l
                                                         
                                                         
                                                            U
                                                         
                                                      
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             
                                                4: Enumerate the set 
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                   
                                                 of all 
                                                   
                                                      l
                                                   
                                                -sequences;
                                          
                                          
                                             
                                                5: 
                                                for each sequence 
                                                   
                                                      S
                                                      ∈
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             
                                                6: 
                                                
                                                
                                                   
                                                      
                                                         
                                                            |
                                                            S
                                                            |
                                                         
                                                         
                                                            ∼
                                                         
                                                      
                                                      =
                                                      |
                                                      S
                                                      |
                                                      +
                                                      L
                                                      (
                                                      
                                                         
                                                            (
                                                            
                                                               
                                                                  l
                                                               
                                                               
                                                                  max
                                                               
                                                            
                                                            -
                                                            l
                                                            +
                                                            1
                                                            )
                                                            (
                                                            
                                                               
                                                                  l
                                                               
                                                               
                                                                  U
                                                               
                                                            
                                                            -
                                                            
                                                               
                                                                  l
                                                               
                                                               
                                                                  L
                                                               
                                                            
                                                            +
                                                            1
                                                            )
                                                         
                                                         
                                                            ∊
                                                         
                                                      
                                                      )
                                                   
                                                ;
                                          
                                          
                                             
                                                7: 
                                                for each sequence 
                                                   
                                                      S
                                                      ∈
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             
                                                8: 
                                                Identify the set 
                                                   
                                                      C
                                                   
                                                 of approximate sequences of 
                                                   
                                                      S
                                                   
                                                 based on 
                                                   
                                                      δ
                                                   
                                                ;
                                          
                                          
                                             
                                                9: 
                                                
                                                
                                                   
                                                      
                                                         
                                                            ‖
                                                            S
                                                            ‖
                                                         
                                                         
                                                            ∼
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            |
                                                            S
                                                            |
                                                         
                                                         
                                                            ∼
                                                         
                                                      
                                                      +
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            C
                                                            ∈
                                                            C
                                                         
                                                      
                                                      
                                                         
                                                            |
                                                            C
                                                            |
                                                         
                                                         
                                                            ∼
                                                         
                                                      
                                                   
                                                 ; //
                                                
                                                   
                                                      C
                                                   
                                                 
                                                is an approximate sequence of 
                                                
                                                   
                                                      S
                                                   
                                                
                                             
                                          
                                          
                                             10: 
                                                
                                                   
                                                      N
                                                      ←
                                                   
                                                 top-
                                                   
                                                      N
                                                   
                                                 sequences 
                                                   
                                                      S
                                                      ∈
                                                      N
                                                      ∪
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            l
                                                         
                                                      
                                                   
                                                 with the largest 
                                                   
                                                      
                                                         
                                                            ‖
                                                            S
                                                            ‖
                                                         
                                                         
                                                            ∼
                                                         
                                                      
                                                   
                                                ;
                                          
                                          
                                             11: 
                                                
                                                   
                                                      l
                                                      +
                                                      +
                                                   
                                                ;
                                          
                                          
                                             12: return 
                                                
                                                   
                                                      N
                                                   
                                                ;
                                          
                                       
                                    
                                 
                              
                           

For each length 
                           
                              l
                              ,
                              
                                 
                                    l
                                 
                                 
                                    L
                                 
                              
                              ⩽
                              l
                              ⩽
                              
                                 
                                    l
                                 
                                 
                                    U
                                 
                              
                           
                        , we enumerate all sequences of length 
                           
                              l
                           
                         derived from the alphabet 
                           
                              Σ
                           
                        
                        
                           1
                           We need to consider all possible 
                                 
                                    l
                                 
                              -sequences, even when some of them do not exist in the input dataset, in order to satisfy differential privacy.
                        
                        
                           1
                         (Line 4), and then obtain their frequencies by the Laplace mechanism (Line 6). The key in this step is to calibrate the scale of Laplace noise. Let 
                           
                              
                                 
                                    Q
                                 
                                 
                                    l
                                 
                              
                           
                         be the set of counting queries that ask for the frequency of each 
                           
                              l
                           
                        -sequence. We need to know the privacy parameter assigned to 
                           
                              
                                 
                                    Q
                                 
                                 
                                    l
                                 
                              
                           
                         and the sensitivity of 
                           
                              
                                 
                                    Q
                                 
                                 
                                    l
                                 
                              
                           
                        . For the reason of simplicity, we employ a uniform privacy parameter allocation scheme, that is, we equally divide the total privacy parameter 
                           
                              ∊
                           
                         into 
                           
                              
                                 
                                    l
                                 
                                 
                                    U
                                 
                              
                              -
                              
                                 
                                    l
                                 
                                 
                                    L
                                 
                              
                              +
                              1
                           
                         portions, each being used for a length in 
                           
                              [
                              
                                 
                                    l
                                 
                                 
                                    L
                                 
                              
                              ,
                              
                                 
                                    l
                                 
                                 
                                    U
                                 
                              
                              ]
                           
                        . Hence, privacy parameter 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    
                                       
                                          l
                                       
                                       
                                          U
                                       
                                    
                                    -
                                    
                                       
                                          l
                                       
                                       
                                          L
                                       
                                    
                                    +
                                    1
                                 
                              
                           
                         is used for answering 
                           
                              
                                 
                                    Q
                                 
                                 
                                    l
                                 
                              
                           
                        . The sensitivity of 
                           
                              
                                 
                                    Q
                                 
                                 
                                    l
                                 
                              
                           
                         is given in the following theorem.
                           Theorem 3.1
                           
                              
                                 
                                    Δ
                                    
                                       
                                          Q
                                       
                                       
                                          l
                                       
                                    
                                    =
                                    
                                       
                                          l
                                       
                                       
                                          max
                                       
                                    
                                    -
                                    l
                                    +
                                    1
                                 
                              
                              .
                              □

The proof of Theorem 3.1 directly follows the fact that a sequence of length 
                           
                              ⩽
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                           
                         can be decomposed into at most 
                           
                              
                                 
                                    l
                                 
                                 
                                    max
                                 
                              
                              -
                              l
                              +
                              1
                           
                         subsequences of length 
                           
                              l
                           
                        . Therefore, we add 
                           
                              L
                              (
                              
                                 
                                    (
                                    
                                       
                                          l
                                       
                                       
                                          max
                                       
                                    
                                    -
                                    l
                                    +
                                    1
                                    )
                                    (
                                    
                                       
                                          l
                                       
                                       
                                          U
                                       
                                    
                                    -
                                    
                                       
                                          l
                                       
                                       
                                          L
                                       
                                    
                                    +
                                    1
                                    )
                                 
                                 
                                    ∊
                                 
                              
                              )
                           
                         to each sequence’s true frequency (Line 6). In Lines 8 and 9, we calculate the noisy consolidated frequency of each sequence by first identifying all of its approximate sequences and then summing up their frequencies. For the reason of efficiency, in each iteration, we only keep the top-
                           
                              N
                           
                         motifs found so far (Line 10).

According to the sequential composition property 
                        [40] of differential privacy given below, Algorithm 1 is 
                           
                              ∊
                           
                        -differentially private.
                           Theorem 3.2
                           
                              [40]
                           


                           
                              Let 
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          i
                                       
                                    
                                 
                               
                              each provide 
                              
                                 
                                    
                                       
                                          ∊
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              -differential privacy. A sequence of 
                              
                                 
                                    
                                       
                                          A
                                       
                                       
                                          i
                                       
                                    
                                    (
                                    D
                                    )
                                 
                               
                              over the database 
                              
                                 
                                    D
                                 
                               
                              provides 
                              
                                 
                                    ∑
                                    
                                       
                                          ∊
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              -differential privacy.
                              □

Since the alphabet of DNA sequences is of size 4, this simple solution is computationally feasible if the motifs’ lengths are not very long. However, with the increase of motifs’ lengths, Algorithm 1 becomes inefficient due to the sequence enumeration step. Besides, Algorithm 1 will lead to excessive noise, resulting in less accurate top-
                           
                              N
                           
                         most frequent motifs. The error of the top-
                           
                              N
                           
                         motifs identified by Algorithm 1 is only due to Laplace noise injected. We call this type of error Laplace error.

Next we analyze the Laplace error of Algorithm 1. For an 
                           
                              l
                           
                        -sequence 
                           
                              S
                           
                        , it has a total of 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    δ
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             4
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         l
                                                      
                                                   
                                                   
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                         approximate sequences whose Hamming distance to 
                           
                              S
                           
                         is 
                           
                              ⩽
                              δ
                           
                        . Hence the noise variance of 
                           
                              S
                           
                        ’s consolidated frequency calculated by Algorithm 1 is 
                           
                              Var
                              (
                              
                                 
                                    
                                       
                                          
                                             S
                                          
                                       
                                    
                                 
                                 
                                    ∼
                                 
                              
                              )
                              =
                              
                                 
                                    2
                                    
                                       
                                          (
                                          
                                             
                                                l
                                             
                                             
                                                max
                                             
                                          
                                          -
                                          l
                                          +
                                          1
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          (
                                          
                                             
                                                l
                                             
                                             
                                                U
                                             
                                          
                                          -
                                          
                                             
                                                l
                                             
                                             
                                                L
                                             
                                          
                                          +
                                          1
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∊
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    0
                                 
                                 
                                    δ
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             4
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         l
                                                      
                                                   
                                                   
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        , which is high in many practical settings. These two drawbacks motivate us to develop our main algorithm, which achieves better data utility and is more efficient.

From the analysis of Algorithm 1, we can observe that the length of motifs is an important factor that affects both data utility and scalability. A longer length results in significantly larger Laplace noise. So a natural question to ask is whether it is possible to construct longer motifs from some relatively short subsequences so that we can lower the magnitude of noise. In this section, we demonstrate that this is achievable based on the well-established 
                           
                              n
                           
                        -gram model.

An 
                           
                              n
                           
                        -gram model is a probabilistic prediction model based on an (
                           
                              n
                              -
                              1
                           
                        )-order Markov model. It estimates the probability of the next letter for a given sequence by making use of the Markov independence assumption (of order 
                           
                              n
                              -
                              1
                           
                        ), which states that the occurrence of each letter in a sequence depends only on the previous 
                           
                              n
                              -
                              1
                           
                         items (instead of all previous items). Let the probability that a sequence 
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ⋯
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                           
                        , where 
                           
                              ∀
                              1
                              ⩽
                              j
                              ⩽
                              i
                              ,
                              
                                 
                                    s
                                 
                                 
                                    j
                                 
                              
                              ∈
                              Σ
                           
                         and 
                           
                              i
                              ⩾
                              n
                           
                        , is followed by 
                           
                              
                                 
                                    s
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                              ∈
                              Σ
                           
                         be denoted by 
                           
                              Pr
                              (
                              
                                 
                                    s
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                              |
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ⋯
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        . Formally, under the 
                           
                              n
                           
                        -gram model, we have:
                           
                              
                                 Pr
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 |
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ≈
                                 Pr
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 |
                                 
                                    
                                       s
                                    
                                    
                                       i
                                       -
                                       n
                                       +
                                       2
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       i
                                       -
                                       n
                                       +
                                       3
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 .
                              
                           
                        
                     

Intuitively, an 
                           
                              n
                           
                        -gram model allows to encode the essential sequentiality information of a given set of DNA sequences in terms of a set of conditional probabilities, which allows us to construct long sequences from short grams. However, the introduction of the 
                           
                              n
                           
                        -gram model brings in a new source of error: use 
                           
                              n
                           
                        -grams to estimate longer motifs. We call this type of error approximation error. The key motivation of employing the 
                           
                              n
                           
                        -gram model in our problem is to trade small increase of approximation error for substantial decrease of Laplace error in order to achieve significantly smaller overall error.

@&#OVERVIEW@&#

We first provide an overview of our algorithm. Our algorithm is composed of three major steps. The first step is to generate some short grams and calculate their frequencies and the conditional probabilities. With these frequencies and conditional probabilities, we then iteratively construct longer motifs of a length in 
                              
                                 [
                                 
                                    
                                       l
                                    
                                    
                                       L
                                    
                                 
                                 ,
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                                 ]
                              
                           . Finally, after obtaining all sequences of a length in 
                              
                                 [
                                 
                                    
                                       l
                                    
                                    
                                       L
                                    
                                 
                                 ,
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                                 ]
                              
                           , we calculate the consolidated frequency for each of them. We detail each step of our solution below.

To capture the essential sequentiality information of the input DNA sequences, we need to generate grams with two consecutive lengths, say, 
                              
                                 n
                                 -
                                 1
                              
                            and 
                              
                                 n
                              
                           . The choice of the value of 
                              
                                 n
                              
                            involves the trade-off between approximation error and Laplace error. In general, a larger 
                              
                                 n
                              
                            value retains more sequentiality information of the input DNA sequences (and hence results in less approximation error), but incurs larger relative Laplace error. This is because the Laplace noise is calibrated to the sensitivity of a function and is independent of the frequency values and longer grams are of smaller frequencies. According to our experimental results, setting 
                              
                                 n
                              
                            to 6 achieves a good balance over different real-life datasets. More analysis is available in Section 4.

We first enumerate all 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams (i.e., sequences of length 
                              
                                 n
                                 -
                                 1
                              
                           ). To correctly record the information of termination of a sequence (e.g., a given sequence may not be followed by any letter in 
                              
                                 Σ
                              
                           ), we preprocess the input DNA sequences by appending a special character 
                              
                                 $
                                 
                                 ∉
                                 
                                 Σ
                              
                            to each of them. Consequently, when enumerating 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams, we need to consider the grams ending in 
                              
                                 $
                              
                           . For example, Fig. 1
                            presents a set of appended DNA sequences and the corresponding 2-grams, where “Freq” and “Prob” denote frequency and conditional probability, respectively.

For each 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -gram, we employ the Laplace mechanism to calculate its noisy frequency. Similarly, let 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       n
                                       -
                                       1
                                    
                                 
                              
                            be the set of counting queries asking for the frequency of each 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -gram. The sensitivity of 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       n
                                       -
                                       1
                                    
                                 
                              
                            is 
                              
                                 
                                    
                                       l
                                    
                                    
                                       max
                                    
                                 
                                 -
                                 n
                                 +
                                 2
                              
                           . Since in our algorithm we just need to calculate the frequencies of 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams and 
                              
                                 n
                              
                           -grams, half of the total privacy parameter, 
                              
                                 
                                    
                                       ∊
                                    
                                    
                                       2
                                    
                                 
                              
                           , is used for each of them. Recall that 
                              
                                 n
                              
                            is normally a small value and 
                              
                                 Σ
                              
                            contains only four characters, the enumeration of all 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams can be done quickly.

After constructing 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams, we generate the 
                              
                                 n
                              
                           -grams. In this step, we do not explicitly enumerate all 
                              
                                 n
                              
                           -grams, but make use of the 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams to decide which 
                              
                                 n
                              
                           -grams to generate. We organize the grams into a tree structure, which we call expansion tree. Then an 
                              
                                 n
                              
                           -gram 
                              
                                 
                                    
                                       S
                                    
                                    
                                       ′
                                    
                                 
                              
                            is a child of an 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -gram 
                              
                                 S
                              
                            in the tree and can be generated by appending one more letter in 
                              
                                 Σ
                                 ∪
                                 {
                                 $
                                 }
                              
                            to 
                              
                                 S
                              
                           . For example, suppose 
                              
                                 n
                                 =
                                 3
                              
                           , Fig. 2
                            shows a partial expansion tree in which grams are expanded by appending one more letter to its parent (ignore the dashed lines for the moment). The expansion tree structure enables efficient implementation for building longer motifs in the later stage.

It is easy to observe that the frequency of 
                           
                              
                                 
                                    
                                       S
                                    
                                    
                                       ′
                                    
                                 
                              
                            
                           must be less than or equal to that of 
                           
                              
                                 S
                              
                           . Therefore, for an 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -gram with a frequency 
                              
                                 0
                              
                           , there is no need to further expand this gram. However, due to the Laplace noise injected, we cannot reliably tell whether an 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -gram’s frequency is zero or not. To this end, we set up a threshold 
                              
                                 θ
                              
                           . Any noisy frequency less than 
                              
                                 θ
                              
                            will be considered 0. In practice, we could set the threshold 
                              
                                 θ
                              
                            to be two times of the noise’s standard deviation [36,38], that is, 
                              
                                 
                                    
                                       4
                                       
                                          
                                             2
                                          
                                       
                                       (
                                       
                                          
                                             l
                                          
                                          
                                             max
                                          
                                       
                                       -
                                       n
                                       +
                                       2
                                       )
                                    
                                    
                                       ∊
                                    
                                 
                              
                            for 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams. For all 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams with a noisy frequency 
                              
                                 ⩾
                                 θ
                              
                           , we extend them to generate 
                              
                                 n
                              
                           -grams. Again we employ the Laplace mechanism to calculate the 
                              
                                 n
                              
                           -grams’ noisy frequencies, where the sensitivity is 
                              
                                 
                                    
                                       l
                                    
                                    
                                       max
                                    
                                 
                                 -
                                 n
                                 +
                                 1
                              
                            and the privacy parameter is 
                              
                                 
                                    
                                       ∊
                                    
                                    
                                       2
                                    
                                 
                              
                           .

From the 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -grams and 
                              
                                 n
                              
                           -grams, we can calculate the conditional probability 
                              
                                 Pr
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       n
                                    
                                 
                                 |
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       n
                                       -
                                       1
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   s
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   s
                                                
                                                
                                                   2
                                                
                                             
                                             ⋯
                                             
                                                
                                                   s
                                                
                                                
                                                   n
                                                
                                             
                                             |
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   s
                                                
                                                
                                                   1
                                                
                                             
                                             
                                                
                                                   s
                                                
                                                
                                                   2
                                                
                                             
                                             ⋯
                                             
                                                
                                                   s
                                                
                                                
                                                   n
                                                   -
                                                   1
                                                
                                             
                                             |
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                 
                              
                           . According to probability theory, we should have 
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       s
                                       ∈
                                       Σ
                                       ∪
                                       {
                                       $
                                       }
                                    
                                 
                                 Pr
                                 (
                                 s
                                 |
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       n
                                       -
                                       1
                                    
                                 
                                 )
                                 =
                                 1
                              
                           . However, due to the added noise, this rule may not hold any more. To resolve this inconsistency, we perform a simple normalization step. Let 
                              
                                 
                                    
                                       S
                                    
                                    
                                       c
                                    
                                 
                              
                            be the set of the children of an 
                              
                                 (
                                 n
                                 -
                                 1
                                 )
                              
                           -gram 
                              
                                 S
                              
                            in the expansion tree. For each 
                              
                                 
                                    
                                       S
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 ∈
                                 
                                    
                                       S
                                    
                                    
                                       c
                                    
                                 
                              
                           , we calculate its normalized conditional probability as 
                              
                                 
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   S
                                                
                                                
                                                   j
                                                
                                                
                                                   ′
                                                
                                             
                                             ∈
                                             
                                                
                                                   S
                                                
                                                
                                                   c
                                                
                                             
                                          
                                       
                                       
                                          
                                             |
                                             
                                                
                                                   S
                                                
                                                
                                                   j
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                 
                              
                            and its normalized frequency as 
                              
                                 
                                    
                                       
                                          
                                             |
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                          
                                          
                                             ∼
                                          
                                       
                                       
                                          
                                             |
                                             S
                                             |
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   S
                                                
                                                
                                                   j
                                                
                                                
                                                   ′
                                                
                                             
                                             ∈
                                             
                                                
                                                   S
                                                
                                                
                                                   c
                                                
                                             
                                          
                                       
                                       
                                          
                                             |
                                             
                                                
                                                   S
                                                
                                                
                                                   j
                                                
                                                
                                                   ′
                                                
                                             
                                             |
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                 
                              
                           .

In the second step of our algorithm, we construct longer motifs of a length in 
                              
                                 [
                                 
                                    
                                       l
                                    
                                    
                                       L
                                    
                                 
                                 ,
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                                 ]
                              
                            from the short grams identified. We observe that, under the 
                              
                                 n
                              
                           -gram model, any sequence of length 
                              
                                 l
                              
                            could be decomposed into two subsequences of length 
                              
                                 l
                                 -
                                 1
                              
                           . Thus, this fact naturally suggests that shorter sequences could be “joined” to recover longer sequences. Formally, we define a join operation as follows. Given two DNA sequences of length 
                              
                                 l
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                    
                                       1
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       l
                                    
                                    
                                       1
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       S
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       l
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       1
                                    
                                 
                              
                            can join with 
                              
                                 
                                    
                                       S
                                    
                                    
                                       2
                                    
                                 
                              
                            if 
                              
                                 ∀
                                 2
                                 ⩽
                                 i
                                 ⩽
                                 l
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       s
                                    
                                    
                                       i
                                       -
                                       1
                                    
                                    
                                       2
                                    
                                 
                              
                           , denoted by 
                              
                                 
                                    
                                       S
                                    
                                    
                                       1
                                    
                                 
                                 ⋈
                                 
                                    
                                       S
                                    
                                    
                                       2
                                    
                                 
                              
                           . The joined result is 
                              
                                 
                                    
                                       S
                                    
                                    
                                       1
                                    
                                 
                                 ⋈
                                 
                                    
                                       S
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                    
                                       1
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       l
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       l
                                    
                                    
                                       2
                                    
                                 
                              
                           . For example, 
                              
                                 AGGTC
                              
                            can join with 
                              
                                 GGTCC
                              
                            to generate 
                              
                                 AGGTCC
                              
                           . Note that the join operation is not symmetric: it is possible that 
                              
                                 
                                    
                                       S
                                    
                                    
                                       1
                                    
                                 
                              
                            can join with 
                              
                                 
                                    
                                       S
                                    
                                    
                                       2
                                    
                                 
                              
                           , but not vice versa.

We also need to know the frequency of the joined sequence, which can be estimated based on the Markov independence assumption as follows:
                              
                                 
                                    
                                       
                                          |
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          ⋈
                                          
                                             
                                                S
                                             
                                             
                                                2
                                             
                                          
                                          |
                                       
                                       
                                          ∼
                                       
                                    
                                    =
                                    
                                       
                                          |
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          |
                                       
                                       
                                          ∼
                                       
                                    
                                    ×
                                    Pr
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          l
                                       
                                       
                                          2
                                       
                                    
                                    |
                                    
                                       
                                          S
                                       
                                       
                                          1
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          |
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          |
                                       
                                       
                                          ∼
                                       
                                    
                                    ×
                                    Pr
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          l
                                       
                                       
                                          2
                                       
                                    
                                    |
                                    
                                       
                                          s
                                       
                                       
                                          1
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          s
                                       
                                       
                                          2
                                       
                                       
                                          1
                                       
                                    
                                    ⋯
                                    
                                       
                                          s
                                       
                                       
                                          l
                                       
                                       
                                          1
                                       
                                    
                                    )
                                    ≈
                                    
                                       
                                          |
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          |
                                       
                                       
                                          ∼
                                       
                                    
                                    ×
                                    Pr
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          l
                                       
                                       
                                          2
                                       
                                    
                                    |
                                    
                                       
                                          s
                                       
                                       
                                          2
                                       
                                       
                                          1
                                       
                                    
                                    ⋯
                                    
                                       
                                          s
                                       
                                       
                                          l
                                       
                                       
                                          1
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          |
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          |
                                       
                                       
                                          ∼
                                       
                                    
                                    ×
                                    Pr
                                    (
                                    
                                       
                                          s
                                       
                                       
                                          l
                                       
                                       
                                          2
                                       
                                    
                                    |
                                    
                                       
                                          s
                                       
                                       
                                          1
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          s
                                       
                                       
                                          2
                                       
                                       
                                          2
                                       
                                    
                                    ⋯
                                    
                                       
                                          s
                                       
                                       
                                          (
                                          l
                                          -
                                          1
                                          )
                                       
                                       
                                          2
                                       
                                    
                                    )
                                    ≈
                                    
                                       
                                          |
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          |
                                       
                                       
                                          ∼
                                       
                                    
                                    ×
                                    
                                       
                                          
                                             
                                                |
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      1
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      2
                                                   
                                                
                                                ⋯
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      l
                                                   
                                                   
                                                      2
                                                   
                                                
                                                |
                                             
                                             
                                                ∼
                                             
                                          
                                       
                                       
                                          
                                             
                                                |
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      1
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      2
                                                   
                                                   
                                                      2
                                                   
                                                
                                                ⋯
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      (
                                                      l
                                                      -
                                                      1
                                                      )
                                                   
                                                   
                                                      2
                                                   
                                                
                                                |
                                             
                                             
                                                ∼
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Since 
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       l
                                    
                                    
                                       2
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 ⋯
                                 
                                    
                                       s
                                    
                                    
                                       (
                                       l
                                       -
                                       1
                                       )
                                    
                                    
                                       2
                                    
                                 
                              
                            must have been generated and have a non-zero frequency (otherwise 
                              
                                 
                                    
                                       S
                                    
                                    
                                       1
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       S
                                    
                                    
                                       2
                                    
                                 
                              
                            will not be joined), the above equation can be calculated. We iteratively build motifs of length 
                              
                                 l
                                 +
                                 1
                              
                            from two motifs of length 
                              
                                 l
                              
                            based on the expansion tree. This process terminates when all motifs of length 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                            have been constructed or no more motifs can be joined.

Our procedure of building longer motifs shares several similarities with the well-known Apriori algorithm [32]. For example, the underlying rationale of our procedure is analogous to the Apriori property [32]: a longer motif can exist in the database if and only if its subsequences exist in the database. However, there are several key differences between our method and the Apriori algorithm. First, we deal with sequences, rather than itemsets. Thus, we design a new join operation that supports a bag of letters given in a particular order. Second, our purpose of generating a longer motif is to indicate whether it is present in the database, rather than whether it is frequent. We must generate all motifs in the database (whether they are frequent or not) in order to correctly calculate their consolidated frequencies. For this reason, we cannot perform the pruning step in the Apriori algorithm. Third, we do not need another database scan to calculate the frequency of a longer motif. Instead, we use the 
                              
                                 n
                              
                           -gram model to estimate its frequency. This is the essential reason why our algorithm can achieve better data utility under differential privacy.

We next discuss how to efficiently perform the join operations. Those readers who are less interested in the technical details of our algorithm can safely skip this part upon first reading. Since a motif finding algorithm typically tackles voluminous DNA sequences, efficiency is of utmost importance. A type of operations that are computationally expensive is that when generating longer motifs, we need to identify which sequences are joinable. A straightforward implementation is to conduct pairwise comparisons among all sequences of the same length. Let the number of such sequences be 
                              
                                 |
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                                 |
                              
                           . This implementation takes 
                              
                                 O
                                 (
                                 |
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                            time. In contrast, we propose an 
                              
                                 O
                                 (
                                 |
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                                 |
                                 )
                              
                            solution based on linked data structures over the expansion tree.

For each sequence 
                              
                                 S
                              
                            in the expansion tree, we create a link pointing to the sequence 
                              
                                 
                                    
                                       S
                                    
                                    
                                       ′
                                    
                                 
                              
                            representing 
                              
                                 S
                              
                           ’s longest proper suffix. For example, in Fig. 2, we create a link from 
                              
                                 CGG
                              
                            to 
                              
                                 GG
                              
                           . We can observe that 
                              
                                 S
                              
                            can only join with the children of 
                              
                                 
                                    
                                       S
                                    
                                    
                                       ′
                                    
                                 
                              
                           . Using this link, 
                              
                                 
                                    
                                       S
                                    
                                    
                                       ′
                                    
                                 
                              
                           ’s children can be accessed in constant time. We next show that such a link can also be created in constant time. The key observation is that the link of a child of the sequence 
                              
                                 S
                              
                            must point to a child of 
                              
                                 
                                    
                                       S
                                    
                                    
                                       ′
                                    
                                 
                              
                           . For example, in Fig. 2, the link of 
                              
                                 CGGC
                              
                            points to 
                              
                                 GGC
                              
                           , which is a child of 
                              
                                 GG
                              
                           . Therefore, we can identify all joinable 
                              
                                 l
                              
                           -sequences with 
                              
                                 O
                                 (
                                 |
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                                 |
                                 )
                              
                            time.

After we have generated all sequences of a length in 
                              
                                 [
                                 
                                    
                                       l
                                    
                                    
                                       L
                                    
                                 
                                 ,
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                                 ]
                              
                           , we could, for each sequence, identify its approximate sequences and then calculate its consolidated frequency. To identify an 
                              
                                 l
                              
                           -sequence’s approximate sequences, a naive implementation needs to conduct pairwise comparisons among all 
                              
                                 l
                              
                           -sequences generated. Let 
                              
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                              
                            be the set of 
                              
                                 l
                              
                           -sequences generated and 
                              
                                 |
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                                 |
                              
                            be the number of 
                              
                                 l
                              
                           -sequences. This naive implementation requires 
                              
                                 
                                    
                                       |
                                       
                                          
                                             S
                                          
                                          
                                             l
                                          
                                       
                                       |
                                       (
                                       |
                                       
                                          
                                             S
                                          
                                          
                                             l
                                          
                                       
                                       |
                                       +
                                       1
                                       )
                                    
                                    
                                       2
                                    
                                 
                              
                            comparisons. Below we propose a more efficient implementation based on the triangle inequality for Hamming distance.
                              Theorem 3.3
                              
                                 [41]
                              


                              
                                 Let 
                                 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             S
                                          
                                          
                                             2
                                          
                                       
                                    
                                  
                                 and 
                                 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             3
                                          
                                       
                                    
                                  
                                 be any 
                                 
                                    
                                       l
                                    
                                 
                                 -sequences. Then
                                 
                                    
                                       
                                          
                                             
                                                d
                                             
                                             
                                                H
                                             
                                          
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                S
                                             
                                             
                                                3
                                             
                                          
                                          )
                                          ⩽
                                          
                                             
                                                d
                                             
                                             
                                                H
                                             
                                          
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                S
                                             
                                             
                                                2
                                             
                                          
                                          )
                                          +
                                          
                                             
                                                d
                                             
                                             
                                                H
                                             
                                          
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          
                                             
                                                S
                                             
                                             
                                                3
                                             
                                          
                                          )
                                          .
                                          
                                          □
                                       
                                    
                                 
                              

We first randomly select a sequence 
                              
                                 S
                              
                           , called a seed sequence, from 
                              
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                              
                            and calculate its Hamming distances to other sequences in 
                              
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                                 -
                                 {
                                 S
                                 }
                              
                           . We put all sequences in 
                              
                                 
                                    
                                       S
                                    
                                    
                                       l
                                    
                                 
                                 -
                                 {
                                 S
                                 }
                              
                            into different buckets according to their Hamming distances to 
                              
                                 S
                              
                           . Sequences with the same Hamming distance reside in the same bucket. There can be at most 
                              
                                 l
                              
                            buckets. Let bucket 
                              
                                 
                                    
                                       B
                                    
                                    
                                       d
                                    
                                 
                              
                            be the one containing sequences of Hamming distance 
                              
                                 d
                              
                            to 
                              
                                 S
                              
                           . From Theorem 3.3, we learn that the approximate sequences of a sequence 
                              
                                 
                                    
                                       S
                                    
                                    
                                       ′
                                    
                                 
                              
                            in bucket 
                              
                                 
                                    
                                       B
                                    
                                    
                                       i
                                    
                                 
                              
                            can only reside in 
                              
                                 
                                    
                                       B
                                    
                                    
                                       j
                                    
                                 
                              
                           , where
                              
                                 
                                    j
                                    ∈
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      [
                                                      i
                                                      -
                                                      δ
                                                      ,
                                                      min
                                                      (
                                                      i
                                                      +
                                                      δ
                                                      ,
                                                      l
                                                      )
                                                      ]
                                                   
                                                   
                                                      if
                                                      
                                                      i
                                                      ⩾
                                                      δ
                                                   
                                                
                                                
                                                   
                                                      [
                                                      0
                                                      ,
                                                      min
                                                      (
                                                      i
                                                      +
                                                      δ
                                                      ,
                                                      1
                                                      )
                                                      ]
                                                   
                                                   
                                                      otherwise
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

This implies that we can perform much less comparisons. When needed, we can use multiple seed sequences to further reduce the number of comparisons. Finally, our algorithm selects the top-
                              
                                 N
                              
                            most frequent motifs as the output.

@&#ANALYSIS@&#

In this section, we provide the privacy and utility analysis of our algorithm. We first give the privacy guarantee of our algorithm.
                           Theorem 3.4
                           
                              Our algorithm satisfies 
                              
                                 
                                    ∊
                                 
                              
                              -differential privacy.
                              □

The only information we obtain from the input DNA sequences is the noisy frequencies of the 
                                 
                                    (
                                    n
                                    -
                                    1
                                    )
                                 
                              -grams and 
                                 
                                    n
                                 
                              -grams. In our algorithm, we obtain their noisy values by the Laplace mechanism. Since each batch of counting queries, 
                                 
                                    
                                       
                                          Q
                                       
                                       
                                          n
                                          -
                                          1
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          Q
                                       
                                       
                                          n
                                       
                                    
                                 
                              , is answered with privacy parameter 
                                 
                                    
                                       
                                          ∊
                                       
                                       
                                          2
                                       
                                    
                                 
                              , according to Theorem 3.2, these queries together satisfy 
                                 
                                    (
                                    
                                       
                                          ∊
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          ∊
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                              -differential privacy. Since the other steps of our algorithm are based on differentially private grams and do not require access to the original DNA sequences, they satisfy 0-differential privacy. Therefore, our algorithm as a whole gives 
                                 
                                    ∊
                                 
                              -differential privacy.□

Next we analyze the error variance induced by our algorithm. As mentioned before, there are two sources of errors in our algorithm: Laplace error due to Laplace noise injected and approximation error due to the use of the 
                           
                              n
                           
                        -gram model. For an 
                           
                              l
                           
                        -sequence 
                           
                              S
                           
                        , we can denote the error variance of its frequency by 
                           
                              Var
                              (
                              |
                              S
                              |
                              )
                              =
                              
                                 
                                    8
                                    
                                       
                                          (
                                          
                                             
                                                l
                                             
                                             
                                                max
                                             
                                          
                                          -
                                          n
                                          +
                                          1
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∊
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              +
                              
                                 
                                    Var
                                 
                                 
                                    approx
                                 
                              
                           
                        . The first item gives the variance of the Laplace error in 
                           
                              |
                              S
                              |
                           
                        . It is the variance of the Laplace noise injected into the 
                           
                              n
                           
                        -gram from which 
                           
                              S
                           
                         is built. The second item 
                           
                              
                                 
                                    Var
                                 
                                 
                                    approx
                                 
                              
                           
                         is the variance of the approximation error, which is normally much smaller than the variance of the Laplace error. More strictly, 
                           
                              
                                 
                                    Var
                                 
                                 
                                    approx
                                 
                              
                           
                         is different for different sequences. In general, 
                           
                              
                                 
                                    Var
                                 
                                 
                                    approx
                                 
                              
                           
                         of the frequency of a longer sequence is larger under the 
                           
                              n
                           
                        -gram model because the frequency is approximated by more conditional probabilities. This reflects the fact that the 
                           
                              n
                           
                        -gram model is biased against long sequences.

Consequently, we can learn the upper bound of 
                           
                              Var
                              (
                              ‖
                              S
                              ‖
                              )
                           
                        , which is 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    0
                                 
                                 
                                    δ
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             4
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         l
                                                      
                                                   
                                                   
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             8
                                             
                                                
                                                   (
                                                   
                                                      
                                                         l
                                                      
                                                      
                                                         max
                                                      
                                                   
                                                   -
                                                   n
                                                   +
                                                   1
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∊
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       +
                                       
                                          
                                             Var
                                          
                                          
                                             approx
                                          
                                       
                                    
                                 
                              
                           
                        . This upper bound is already much smaller than the error variance of the simple algorithm when 
                           
                              
                                 
                                    l
                                 
                                 
                                    U
                                 
                              
                              -
                              
                                 
                                    l
                                 
                                 
                                    L
                                 
                              
                           
                         is large. We further point out that, in reality, 
                           
                              Var
                              (
                              
                                 
                                    
                                       S
                                    
                                 
                              
                              )
                              ≪
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    0
                                 
                                 
                                    δ
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             4
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         l
                                                      
                                                   
                                                   
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             8
                                             
                                                
                                                   (
                                                   
                                                      
                                                         l
                                                      
                                                      
                                                         max
                                                      
                                                   
                                                   -
                                                   n
                                                   +
                                                   1
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∊
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       +
                                       
                                          
                                             Var
                                          
                                          
                                             approx
                                          
                                       
                                    
                                 
                              
                           
                        . The reason is that we generate the sequences in a data-dependent way and therefore, for an 
                           
                              l
                           
                        -sequence, the number of its approximate sequences is much smaller than 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    0
                                 
                                 
                                    δ
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             4
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         l
                                                      
                                                   
                                                   
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        , resulting in much less noise. Thus, our algorithm indeed achieves much better data utility than the simple algorithm introduced in Section 3.2. In Section 4, we experimentally validate our theoretical analysis.

@&#RESULTS@&#

In this section, we present the experimental results of the techniques proposed in this paper over two public real-life DNA sequence datasets. The objective of our experiments is to evaluate the data utility and scalability of our 
                        
                           n
                        
                     -gram-based solution (referred to as 
                        
                           n
                        
                     
                     -gram in the sequel) under different parameter settings. As a reference point, we employ the simple solution introduced in Section 3.2 as the benchmark approach (referred to as simple).


                     Benchmark datasets We use two real-life DNA datasets Washington
                     
                        2
                        Available at: http://bio.cs.washington.edu/assessment/download.html.
                     
                     
                        2
                      and Upstream
                     
                        3
                        Available at: http://hgdownload.soe.ucsc.edu/downloads.html.
                     
                     
                        3
                      in our experiments. To fit our problem setting, for each dataset, we divide its sequences into subsequences of the fixed length 
                        
                           
                              
                                 l
                              
                              
                                 max
                              
                           
                        
                     . Specifically, for Washington and Upstream, 
                        
                           
                              
                                 l
                              
                              
                                 max
                              
                           
                        
                      is set to 30 and 100, respectively. We employ the divided subsequences as our final test datasets. In the test datasets, Washington contains 14,126 sequences while Upstream contains 708,300 sequences.


                     Experimental settings We conduct comprehensive experiments to examine the performance of 
                        
                           n
                        
                     
                     -gram with respect to various parameters: the privacy requirement 
                        
                           ∊
                        
                     , the length of the grams 
                        
                           n
                        
                     , the value of 
                        
                           N
                        
                      in top-
                        
                           N
                        
                      most frequent motifs, the error tolerance 
                        
                           δ
                        
                     , the upper bound of motifs’ length 
                        
                           
                              
                                 l
                              
                              
                                 U
                              
                           
                        
                      and the size of a dataset (e.g., the scale of data). Instead of examining the effects of 
                        
                           δ
                        
                      separately, we show the results of different 
                        
                           δ
                        
                      values in combination with other parameters. In Table 1
                     , we present the default values of all parameters involved in the experiments. In particular, we set the default 
                        
                           N
                        
                      value to 30, in accordance with the suggestion of Tompa et al. [42].

We ran our experiments on a server with dual Quad-Core 2.93GHz CPUs and 32GB memory running CentOS release 5.6. Our implementation was written in Java with JDK 1.7.

We evaluate the data utility of simple and 
                           
                              n
                           
                        
                        -gram in terms of two metrics, namely accuracy and normalized root-mean-square error (NRMSE). Let 
                           
                              N
                           
                         be the set of top-
                           
                              N
                           
                         most frequent motifs identified without a privacy requirement (i.e., not adding any noise), 
                           
                              
                                 
                                    N
                                 
                                 
                                    ∼
                                 
                              
                           
                         be the set of top-
                           
                              N
                           
                         most frequent motifs generated by a private solution (e.g., 
                           
                              n
                           
                        
                        -gram or simple). Accuracy measures how similar 
                           
                              N
                           
                         and 
                           
                              
                                 
                                    N
                                 
                                 
                                    ∼
                                 
                              
                           
                         are. Formally, given 
                           
                              N
                           
                         and 
                           
                              
                                 
                                    N
                                 
                                 
                                    ∼
                                 
                              
                           
                        , accuracy is defined to be 
                           
                              
                                 
                                    |
                                    N
                                    ∩
                                    
                                       
                                          N
                                       
                                       
                                          ∼
                                       
                                    
                                    |
                                 
                                 
                                    |
                                    N
                                    |
                                 
                              
                           
                        . An accuracy falls into the range 
                           
                              [
                              0
                              ,
                              1
                              ]
                           
                        . An accuracy of 1 means that 
                           
                              
                                 
                                    N
                                 
                                 
                                    ∼
                                 
                              
                           
                         is identical to 
                           
                              N
                           
                         while an accuracy of 0 means that 
                           
                              
                                 
                                    N
                                 
                                 
                                    ∼
                                 
                              
                           
                         is totally different from 
                           
                              N
                           
                        .

Besides accuracy, it is also of importance to examine how different the noisy consolidated frequencies of the motifs that are correctly identified (i.e., motifs in 
                           
                              N
                              ∩
                              
                                 
                                    N
                                 
                                 
                                    ∼
                                 
                              
                           
                        ) are from their true consolidated frequencies. For this purpose, we adopt normalized root-mean-square error (NRMSE), a standard measure of the differences between values, to quantify the differences.

We first study the effects of the privacy parameter 
                              
                                 ∊
                              
                            on the resulting data utility of the two methods. Fig. 3
                           (a) and (b) shows the accuracies of both 
                              
                                 n
                              
                           
                           -gram and simple under varying 
                              
                                 ∊
                              
                            values on Washington and Upstream, respectively. For Washington, we use larger privacy parameters, ranging from 0.6 to 1.0, to compensate its relatively small number of sequences. For Upstream that is of a larger size, we employ more stringent privacy parameters, ranging from 0.01 to 0.05. The privacy parameters we use on Washington and Upstream are the popular settings used in the studies of differential privacy [34–38]. In general, a smaller privacy parameter implies better privacy protection. It can be observed that the accuracy increases with the growth of 
                              
                                 ∊
                              
                           . This reflects the fundamental trade-off between data utility and privacy in our problem: with a larger privacy parameter (i.e., a less stringent privacy requirement), less noise is added, and therefore better utility is obtained.

We can also observe that 
                              
                                 n
                              
                           
                           -gram is consistently more accurate than simple. In particular, when 
                              
                                 ∊
                                 =
                                 0.6
                              
                            and 
                              
                                 δ
                                 =
                                 2
                              
                           , 
                              
                                 n
                              
                           
                           -gram is about two times more accurate than simple on Washington. From Fig. 3(b), we can learn that when 
                              
                                 ∊
                              
                            is set to a small value (e.g., 0.01), simple can barely provide any useful information while 
                              
                                 n
                              
                           
                           -gram is still able to preserve much essential information. In addition, under varying 
                              
                                 ∊
                              
                            values, both methods perform relatively stable under different error tolerances.

To further inspect the quality of noisy consolidated frequencies generated by these two methods, we report the NRMSEs under different 
                              
                                 ∊
                              
                            values in Table 2
                           . As can be observed, 
                              
                                 n
                              
                           
                           -gram achieves considerably better NRMSEs than simple. Even when 
                              
                                 ∊
                                 =
                                 0.01
                              
                           , the NRMSE of 
                              
                                 n
                              
                           
                           -gram on Upstream is only 
                              
                                 0.039
                              
                           .

In the second set of experiments, we study the effects of 
                              
                                 n
                              
                            (i.e., the length of 
                              
                                 n
                              
                           -grams) on the accuracies of our solution 
                              
                                 n
                              
                           
                           -gram on Washington and Upstream. Fig. 4
                            presents the results. We observe the general trend that the accuracies first increase and then decrease with the growth of 
                              
                                 n
                              
                           . When 
                              
                                 n
                              
                            is small (e.g., 
                              
                                 n
                                 =
                                 3
                              
                           ), the 
                              
                                 n
                              
                           -gram model is not able to capture sufficient sequentiality information, and therefore the conditional probabilities are less accurate. As a consequence, the approximation error is large when 
                              
                                 n
                              
                            is small, leading to poor accuracy. With the increase of 
                              
                                 n
                              
                           , the approximation error decreases because longer 
                              
                                 n
                              
                           -grams capture more sequentiality information. However, after a certain threshold (e.g., 
                              
                                 n
                                 =
                                 6
                              
                           ), the benefit of using longer 
                              
                                 n
                              
                           -grams is negatively impacted by Laplace noise. This is because longer 
                              
                                 n
                              
                           -grams are of smaller frequencies, and therefore the conditional probabilities derived from their frequencies are more subject to Laplace noise.


                           Table 3
                            presents the NRMSEs of 
                              
                                 n
                              
                           
                           -gram under different values of 
                              
                                 n
                              
                           . We can observe the similar trend that, with the increase of 
                              
                                 n
                              
                           , the NRMSEs initially decrease and then increase, which is consistent with the observation on accuracy discussed before. These experimental results suggest that 
                              
                                 n
                                 =
                                 6
                              
                            is a good choice for the two real-life datasets with different characteristics. Later, we will present an important guideline for selecting a good 
                              
                                 n
                              
                            value with respect to the dataset size.

We then study the effects of 
                              
                                 N
                              
                            in top-N on the accuracies of 
                              
                                 n
                              
                           
                           -gram and simple. In Fig. 5
                           , we report the accuracies under five representative 
                              
                                 N
                              
                            values (i.e., 10, 30, 50, 100, 300) on Washington and Upstream. From Fig. 5(a) and (b), we observe that 
                              
                                 n
                              
                           
                           -gram is up to about 60% and 50% more accurate than simple on Washington and Upstream, respectively. We can also observe the general trend that the accuracy increases with the growth of 
                              
                                 N
                              
                           . This is because there are some frequent motifs of very similar consolidated frequencies and adding noise makes it hard to preserve their relative ranks. In this case, increasing the 
                              
                                 N
                              
                            value can effectively mitigate the error due to the imprecise ranks based on noisy frequencies. This observation has its practical use. Since in many applications the frequent motifs identified are subject to further manual inspection, we could set 
                              
                                 N
                              
                            to a larger value to avoid missing some important motifs.

In Fig. 5, it is interesting to observe that the effects of the error tolerance 
                              
                                 δ
                              
                            are data-dependent. On Washington, a larger 
                              
                                 δ
                              
                            value (i.e., 
                              
                                 δ
                                 =
                                 2
                              
                           ) achieves better accuracies under most 
                              
                                 N
                              
                            values, whereas, on Upstream, a smaller 
                              
                                 δ
                              
                            value (i.e., 
                              
                                 δ
                                 =
                                 1
                              
                           ) gives better accuracies.

Similarly, we present the NRMSEs of noisy consolidated frequencies under different 
                              
                                 N
                              
                            values in Table 4
                           . The results suggest that 
                              
                                 n
                              
                           
                           -gram incurs very small errors on noisy consolidated frequencies under various 
                              
                                 N
                              
                            values and substantially outperforms simple.

We next study the effects of 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                            on the accuracies of both methods on Washington and Upstream. From our theoretical analysis, we know that simple is sensitive to 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                            (when 
                              
                                 
                                    
                                       l
                                    
                                    
                                       L
                                    
                                 
                              
                            is fixed). The variance of noise increases quadratically with the increment of 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                           , resulting in worse accuracy. In contrast, recall that the variance of noise of 
                              
                                 n
                              
                           
                           -gram does not depend on 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                           . Fig. 6
                           (a) and (b) present the accuracies of both methods under 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                            values ranging from 6 to 10. The results confirm our theoretical analysis. The accuracy of simple decreases quickly with the growth of 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                            (over 20% reduction from 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                                 =
                                 6
                              
                            to 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                                 =
                                 10
                              
                            on both datasets) while the accuracy of 
                              
                                 n
                              
                           
                           -gram is stable under different 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                            values (less than 4% reduction on both datasets).

In addition to its stability, 
                              
                                 n
                              
                           
                           -gram is more accurate than simple in all settings. When 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                                 =
                                 10
                              
                            and 
                              
                                 δ
                                 =
                                 2
                              
                           , 
                              
                                 n
                              
                           
                           -gram is about 30% more accurate than simple. We further report the NRMSEs of both methods under different 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                            values in Table 5
                           . It can be observed that, for those frequent motifs that are correctly identified, 
                              
                                 n
                              
                           
                           -gram also generates more accurate frequencies. Since in reality 
                              
                                 
                                    
                                       l
                                    
                                    
                                       U
                                    
                                 
                              
                            is relatively large (e.g., 15 [43]), 
                              
                                 n
                              
                           
                           -gram is a better choice than simple in terms of data utility (i.e., accuracy and NRMSEs).

In theory, a dataset has to be large enough to achieve good utility under differential privacy. In Fig. 7
                           , we study the accuracies of 
                              
                                 n
                              
                           
                           -gram with respect to different scale of data. We generate smaller test datasets by randomly extracting sequences from the original datasets. We observe that the experimental results are consistent with the theoretical analysis: the accuracies of 
                              
                                 n
                              
                           
                           -gram increase roughly linearly with respect to the scale of data. It means that our solution 
                              
                                 n
                              
                           
                           -gram is inherently suitable for processing large-scale DNA data.

In Fig. 7, we also provide the performance of 
                              
                                 n
                              
                           
                           -gram under different 
                              
                                 n
                              
                            values with the growth of the dataset size. It can be seen that in most cases 
                              
                                 n
                                 =
                                 6
                              
                            gives the best accuracy. There is only one exception: Both 
                              
                                 n
                                 =
                                 6
                              
                            and 
                              
                                 n
                                 =
                                 7
                              
                            perform poorly on Washington when the scale of data is 
                              
                                 40
                                 %
                              
                           . This exception is worth special attention because it gives us a general guideline in selecting a good 
                              
                                 n
                              
                            value. In general, when the dataset size is small, using a larger 
                              
                                 n
                              
                            value is less beneficial due to the small frequencies of 
                              
                                 n
                              
                           -grams, which become unreliable after adding Laplace noise. In other words, for a larger dataset, we can choose a larger 
                              
                                 n
                              
                            value to obtain better utility. Nevertheless, we deem that 
                              
                                 n
                                 =
                                 6
                              
                            should be able to give reasonably good results on most DNA datasets.

In the last set of experiments, we evaluate the scalability of simple and 
                           
                              n
                           
                        
                        -gram with respect to two key parameters: scale of data and 
                           
                              
                                 
                                    l
                                 
                                 
                                    U
                                 
                              
                           
                        . We use the default values for other parameters as shown in Table 1. The results are reported in Figs. 8 and 9
                        
                        , respectively.

In Fig. 8, we present the runtime of both 
                           
                              n
                           
                        
                        -gram and simple under different data scales. It can be observed that 
                           
                              n
                           
                        
                        -gram is much more efficient than simple. This is due to the data-dependent nature of 
                           
                              n
                           
                        
                        -gram: it avoids enumerating all possible sequences. We can observe that the runtime of both methods grows roughly linearly with respect to the scale of data. Moreover, the runtime on both two datasets is very similar, in spite of their very different sizes. This suggests that the runtime of both methods is dominated by the number of sequences (or 
                           
                              n
                           
                        -grams) to enumerate, which is independent of the scale of data.

From Section 3, we learn that the runtime of simple grows exponentially with the increase of 
                           
                              
                                 
                                    l
                                 
                                 
                                    U
                                 
                              
                           
                         while the runtime of 
                           
                              n
                           
                        
                        -gram is relatively insensitive to 
                           
                              
                                 
                                    l
                                 
                                 
                                    U
                                 
                              
                           
                         as we only enumerate 
                           
                              n
                           
                        -grams of fixed lengths. This is confirmed in Fig. 9. The runtime of simple increases exponentially with the growth of 
                           
                              
                                 
                                    l
                                 
                                 
                                    U
                                 
                              
                           
                         on both datasets. In contrast, the runtime of 
                           
                              n
                           
                        
                        -gram is consistently small in all settings.

In summary, 
                           
                              n
                           
                        
                        -gram exhibits desirable performance and is suitable for handling large-scale real-life datasets.

@&#CONCLUSIONS@&#

The recent advances in genomic sequence availability have spawned extensive research on DNA motif finding. However, the privacy implication in DNA motif finding has been largely neglected in existing works. In this paper, we make the first effort to apply the rigorous 
                        
                           ∊
                        
                     -differential privacy model to DNA motif finding. We propose an 
                        
                           n
                        
                     -gram-based solution along with an efficient implementation. We theoretically analyze the utility of our solution. We also conduct an extensive experimental evaluation on real-life DNA sequence datasets. The results demonstrate the great promise of integrating privacy into DNA motif finding.

@&#REFERENCES@&#

