@&#MAIN-TITLE@&#Delivery pattern and transportation planning in grocery retailing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An MIP model is developed defining repetitive store delivery patterns.


                        
                        
                           
                           The model considers warehouse operations, transportation and instore logistics.


                        
                        
                           
                           The heuristic solution method developed reflects practical requirements and sizes.


                        
                        
                           
                           A numerical study shows that operational costs can be significantly reduced.


                        
                        
                           
                           Significant cost savings were achieved for an European grocery retailer.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Retailing

Distribution

Instore logistics

Discrete optimization

@&#ABSTRACT@&#


               
               
                  This paper develops a planning concept for defining repetitive delivery patterns according to which stores of a grocery retailer are supplied from a distribution center. Applying repetitive delivery patterns offers major advantages when scheduling the workforce for shelf replenishment, defining cyclic transportation routes and managing warehouse capacities. In doing so, all logistics subsystems of a retail chain, i.e., warehousing, transportation and instore logistics, are jointly scheduled. We propose a novel model to minimize total costs in all associated subsystems of a retail distribution chain. A solution approach is developed for clustering stores and selecting delivery patterns that reflects practical requirements. A broad numerical analysis demonstrates cost savings of 2.5 percent on average compared to a state-of-the-art approach (see Sternbeck & Kuhn, 2014). This considerable cost reduction potential is confirmed by applying the suggested approach to a real case of a major European grocery retailer.
               
            

@&#INTRODUCTION@&#

Limited trade margins are forcing retailers to constantly strive for excellence in logistics. Improving the efficiency of the delivery of products from the distribution center (DC) to stores is therefore an ongoing effort in retailing. Retailers need to determine optimal delivery policies and optimize the vehicle routes for replenishing store inventory from the warehouses (Agrawal & Smith, 2009). Grocery retail stores mostly follow repetitive weekly demand patterns. Consequently, grocers respond to customer and store demand by supplying their stores cyclically with store-specific delivery patterns. A delivery pattern is a certain combination of weekdays on which a delivery from the DC arrives at a particular store on a repetitive basis for all standard weeks, i.e., weeks without public holidays, in a planning horizon. Empirical studies prove that the majority of grocery companies apply such delivery patterns, which are usually designed according to the volume of sales and store sizes (Kuhn & Sternbeck, 2013).

Applying repetitive and store-specific delivery patterns offers several benefits. (1) Scheduling the workforce for the shelf replenishment process is much easier since the order replenishments arrive at a store on identical weekdays each week (Gaur & Fisher, 2004). (2) Likewise, in terms of transportation, delivery patterns offer the opportunity to design basic cyclic routes in each corresponding planning period. (3) At the DC, staff deployment and shift planning can be adjusted with regard to expected aggregate picking volumes that are dependent on the delivery patterns selected across all stores. And (4) retailers usually apply periodic inventory review policies (Cachon, 2001; van Donselaar, Gaur, van Woensel, Broekmeulen, & Fransoo, 2010). Whenever shelf inventory falls to or below a reorder level, a replenishment order is issued. Applying a cyclic ordering and delivery policy allows reorder levels to be adapted on a regular basis, which decreases overhead steering and eases logistics planning in subsequent planning modules (Schöneberg, Koberstein, & Suhl, 2010; Hübner, Kuhn, & Sternbeck, 2013). As a result, the delivery patterns selected greatly influence efficiency within the operational subsystems of an internal retail supply chain, i.e., DC, transportation and instore logistics. As order intervals are a result of the delivery pattern applied, volume effects along the supply chain occur that strongly influence logistics costs (Cachon, 1999). Retail practice thus considers the selection of delivery patterns as an important lever to balance DC, transportation and instore requirements, although the majority of retailers do not yet apply integrative approaches across all subsystems at all when assigning delivery patterns to stores because of the complexity of setting up appropriate models and tools. Proper decision support is needed for retail companies to achieve “optimal” or at least “near optimal” decisions.
                  

The current literature, however, lacks an adequate integrated approach for selecting delivery patterns while explicitly considering bundling effects in transportation across stores. In this research we therefore develop a comprehensive planning concept with an innovative model and a solution approach for selecting delivery patterns according to which the stores of a grocery retailer should be supplied from a DC. The model considers end-to-end logistics costs that are impacted by the pattern decision and considers bundling effects across stores. The solution approach is especially designed for solving practical relevant problem sizes. This, as well as the cost savings potential of the new approach, is demonstrated using a case study of a major European retailer. Additional numerical studies show that the cost savings are generalizable, and the discussion of the results generates valuable insights for retail practice. The model and solution approach developed therefore supports grocery retailers striving for effective and efficient distribution plans and closes an open gap in literature.

The paper is organized as follows. In Section 2 we detail the retail network considered, formulate the decision problem at hand, and develop the associated cost model. Section 3 presents an overview of related literature. The real decision problem is complex, so we transfer the real practical problem to a tractable formal problem formulating a mathematical optimization model in Section 4. We then present an efficient solution approach that considers practical needs with regard to the solution quality required, relevant problem sizes, and spendable computation times (see Section 5). Section 6 first analyzes the solution approach using a broad spectrum of simulated data, and secondly demonstrates the applicability of the suggested approach using a case study of a major European grocery retailer. Finally, Section 7 concludes the study and gives an outlook on opportunities for future research.

Grocery retailers channel the overwhelming majority of product volumes to their stores via DCs. While around 70–90 percent of the product volumes are distributed via DCs, cross-docking deliveries play a minor role. Direct-to-store delivery is an alternative concept of grocery distribution, especially for large full-line formats. However, deliveries via DCs are also most important for this type of retailer (Fernie, Sparks, & McKinnon, 2010; Kuhn & Sternbeck, 2013). We therefore limit our analysis to the major delivery mode via DCs. European discounters and to some extent full-line supermarkets operate their own distribution networks that consist of several regional DCs from which stores are supplied with their complete assortment. Fresh food and highly perishable products, for example, require high-frequency or even daily deliveries to the stores. Thus, the delivery frequencies for those product categories are generally predefined by the specific product requirements. We, however, focus on storable assortments that can potentially be delivered at differing frequencies. In addition, by far the largest delivery volumes from DCs to stores come mostly from the ambient segment (Kuhn & Sternbeck, 2013). Consequently the scope of our analysis is the distribution network structure of the storable assortment or at least ambient segment where all products are delivered to the stores from one identical DC. Fig. 1 illustrates the relevant subsystems and defines the functional scope of our research.

An unlimited number of different delivery patterns (r ∈ R) can be defined from a theoretical point of view. The majority of retailers, however, limit the delivery patterns applied to a certain degree for practical reasons, i.e., they use weekly delivery cycles. Only very few retailers make use of a cycle of two or even three weeks in the event of ultra-slow-moving items. Normally, retailers assign delivery patterns on a tactical level for a rolling planning horizon of three to six months to ensure planning stability (Gaur & Fisher, 2004; Hübner et al., 2013). Assuming that the delivery cycle comprises |T| days and a maximum of one delivery per day, parameter g
                        
                           r, t
                         ∈ {0, 1} indicates whether a delivery takes places on day t, t ∈ T, of the delivery cycle, applying delivery pattern r. A delivery pattern r can then formally be defined as a unique combination of values of g
                        
                           r, t
                         for all t ∈ T. A store has to be supplied at least once per delivery cycle. For example, assuming a delivery cycle of one week with six delivery days, the frequency of deliveries can range between once and six times per cycle. The delivery pattern for one cycle will then be repeated in each following cycle until the end of the planning horizon. Fig. 2
                         shows an example of a set of delivery patterns, 
                           
                              R
                              =
                              {
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              r
                              ,
                              …
                              ,
                              |
                              R
                              |
                              }
                              ,
                           
                         assuming a cycle length of one week. For a delivery cycle of one week, at maximum one delivery per day, and at least one delivery per cycle, there exist 
                           
                              
                                 |
                                 R
                                 |
                              
                              =
                              
                                 2
                                 6
                              
                              −
                              1
                              =
                              63
                           
                         potential delivery patterns in all for each store. Assume a DC supplies a set 
                           
                              F
                              =
                              {
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              f
                              ,
                              …
                              ,
                              |
                              F
                              |
                              }
                           
                         of stores, this produces a total of 63|F| combinations. This demonstrates the combinatorial challenge of the decision problem considered. Each possible combination has different capacity requirements at the DC, and varying transportation needs. As a result, it is not possible to determine the delivery pattern of the stores independently.

The store delivery process can be characterized as follows. The products in a store order are picked onto load carriers such as pallets or roll cages in the DC. Next, the goods are shipped to the outlets. At the outlets the load carriers have to be taken over by store employees and brought to the sales room where initial shelf filling takes place. Products that do not fit onto the shelf due to limited shelf capacity have to be carried to the backroom and refilled later when shelf space becomes available due to consumer purchases (Reiner, Teller, & Kotzab, 2012; Eroglu, Williams, & Waller, 2013). Backroom storage and restocking activities from the backroom particularly need to be considered since these processes are very time-consuming and constitute one of the main drivers of instore logistics costs (van Zelst, van Donselaar, van Woensel, Broekmeulen, & Fransoo, 2009; Kuhn & Sternbeck, 2013). In addition, extensive backroom inventory frequently causes the phenomenon of “phantom products,” i.e., products that are available in the store but not on the shelf and hence are not visible for customers (DeHoratius & Raman, 2008; Ton & Raman, 2010). Since these backroom processes highly depend on the volume shipped per delivery and therefore on the number of shipments, they have to be reflected when selecting store delivery patterns.

Various operational costs are impacted by the selection of delivery patterns. Sternbeck and Kuhn (2014) identify these decision-relevant costs per period, which can be divided into (A) costs that rise when delivery frequency a increases, 
                           
                              
                                 C
                                 +
                              
                              
                                 (
                                 a
                                 )
                              
                              ,
                           
                         and (B) costs that decrease with more frequent deliveries, 
                           
                              
                                 C
                                 −
                              
                              
                                 (
                                 a
                                 )
                              
                           
                        .

                           
                              (A)
                              Costs that are directly related to an order rise when delivery frequency increases. Such costs include store ordering and store receiving costs. Due to the shipments of smaller batches and the larger number of orders per period, the overall costs increase for these cost types. In addition, fewer economies of scale can be achieved with smaller store order volumes, especially during the picking process at the DC, the transportation process from the DC to the stores, and the initial shelf-filling process at the stores. Thus, assuming a constant sales volume per period, the average volume per order decreases and therefore the costs for picking and packaging, transportation and initial shelf-filling per period rise when the delivery frequency increases.

Contrary to (A), some processes and expenditure benefit from smaller order sizes, i.e. inventory holding at the store and instore handling when refilling shelves from the backroom storage of a store. Consequently, the costs for these operations per period decrease with an increasing number of deliveries. Especially when quantities delivered exceed the free shelf space capacity available, the remaining products have to be stored in the backroom storage, which causes additional shelf-refilling activities later on. These activities are generally very time-consuming and involve considerable additional labor costs (Eroglu et al., 2013; Sternbeck & Kuhn, 2014).

The cost drivers considered display a highly dynamic structure due to the weekly seasonality of store sales. Thus, the resulting costs not only depend on the delivery frequencies, but also on the specific delivery days. This is especially relevant for instore operation costs, because, e.g., the effort of refilling shelves from the backroom depends on the product volume delivered, which in turn varies according to the particular pattern of delivery days and the corresponding pattern of review periods.

Each store would be able to realize its individual optimal delivery pattern independently of all other stores if capacity limits in all processes and bundling effects in the transportation system were neglected. Especially in the case of tactical planning it is appropriate to include capacity restrictions to set the framework for subordinate planning tasks and make it easier to generate feasible short-term plans. Moreover, retailers try to balance the workload at the DC to be able to use allocable capacity efficiently (Cachon, 1999; Gaur & Fisher, 2004). That is why minimum and maximum picking capacity as well as transportation capacity has to be considered when deciding on efficient delivery modes in grocery networks. Furthermore, limited space in the store’s backroom and in the receiving area can affect the product volume that can be delivered to the store in one delivery tour. This limits the number of practicable delivery patterns for one store (Agrawal & Smith, 2009).

An integrative modeling and solution approach is therefore required that takes into account all relevant costs and capacity limitations when determining store-specific delivery patterns for a grocery network. In the following section we will investigate to what extent grocery store delivery solutions suggested by literature reflect these requirements.

In the literature the delivery planning problem of a retail chain is often viewed as an inventory routing problem (IRP), considering a distribution structure with several stores that are replenished from a DC. The IRP generally deals with the coordination of outgoing deliveries from a DC to geographically dispersed multiple locations. The overall costs consisting of transportation costs for the deliveries and inventory costs arising from storing the items at the outlets have to be minimized. This implies that routes along the stores and optimal order quantities have to be determined within the IRP. IRPs have been widely studied in different contexts. Various surveys classify the problem (e.g., Andersson, Hoff, Christiansen, Hasle, & Løkketangen, 2010; Bertazzi, Savelsbergh, & Speranza, 2008; Coelho, Cordeau, & Laporte, 2014).

Because IRPs consider the tradeoff between more frequent deliveries (causing higher transportation costs) and less frequent deliveries (causing higher inventory costs), there is a certain familiarity with our problem described in the previous section.

Thus in the following we describe IRPs in a broader sense within this literature review and classify the literature according to Gaur and Fisher (2004). They differentiate IRPs into (i) strategic, (ii) tactical or finite horizon and (iii) infinite horizon.

The strategic IRP determines the minimum number of vehicles in a fleet required to supply inventory to a set of stores. It determines the minimum fleet size before the start of the actual deliveries, but also makes it necessary to anticipate tactical routing (Webb & Larson, 1995). Also Raa and Aghezzaf (2009) and Raa (2015) discuss the fleet design problem.

The tactical IRP considers a network with one supplier serving a set of stores over a finite time horizon with a given fleet size. The following approaches need mentioning with regard to our work: Viswanathan and Mathur (1997) determine multi-product joint replenishment policies to specify delivery quantities and vehicle routes. Gaur and Fisher (2004) provide an approach for determining a weekly delivery schedule for a retailer. The core of their approach is a periodic inventory routing problem (PIRP) that is part of a three-stage decomposition. Delivery times per store and corresponding vehicle routes are determined with help of the PIRP. A subsequent truck assignment module and workload balancing module ensure that fleet size aspects and time regulations are considered as well as capacity utilization profiles. Cardós and García-Sabater (2006) design a decision support system to determine delivery schemes for stores focusing on inventory and transportation costs. The authors preselect feasible deliveries in a first step. Then, in a second step, they evaluate minimal cost paths for each delivery frequency for each store and afterwards solve a periodic VRP (PVRP) for each delivery frequency combination using a neighborhood search.

Additionally, we need to note that the PVRP is closely related to the IRP, where customers are visited multiple times in a finite time horizon. The PVRP is a variation of the classic VRP in which delivery routes and sequences are constructed for a period of time (e.g., a week). We refer to the review papers that summarize settings and solution methods for this problem (e.g., Campbell & Wilson, 2014; Francis, Smilowitz, & Tzur, 2008; Schmid, Doerner, & Laporte, 2013).

The infinite time horizon and operational IRP deals with deliveries from a DC to customers in order to minimize transportation, ordering and inventory holding costs (e.g., Anily & Federgruen, 1990; Kleywegt, Nori, & Savelsbergh, 2002).

A common limitation shared by the IRP papers listed above is their focus on transportation and inventory costs, while neglecting the effects on DC operations and instore operation costs. Furthermore, most applications of IRPs are in the context of vendor-managed inventory, where the transportation network is not owned by the retailer (Gaur & Fisher, 2004).

Besides the IRP literature, Ronen and Goodhart (2008) propose a hierarchical approach to solve the delivery planning problem on a tactical level. First, the authors cluster stores with similar characteristics and preselect patterns. They then assign patterns to stores using an MIP. Thirdly, they build transportation routes applying a PVRP. Feedback loops are not integrated, which causes the problem that once patterns are assigned to the stores they cannot be changed any more although the routing step may reveal that adapting the delivery patterns could capture additional savings. In addition the model of Ronen and Goodhart (2008) neglects instore operation costs. Instore logistics, however, constitute the main cost block of operational logistics costs according to several studies (Kuhn & Sternbeck, 2013; van Zelst et al., 2009) and account for approximately 50 percent of total logistics costs.


                              Sternbeck and Kuhn (2014) therefore propose an MIP that selects delivery patterns for stores on the basis of a set of preselected reasonable patterns, jointly taking into account DC, transportation and store operations. This model, however, assumes that logistics service providers fulfill all store deliveries. Thus, transportation costs only depend on the distance between the DC and the store and the associated shipping volume. Bundling effects across stores as a result of joint tours are not considered, although these can change the solution significantly, which is illustrated in Fig. 3 where stores A and B are assumed to be located close to each other.

Example I of Fig. 3 shows two possible delivery patterns for stores A and B; store A receives deliveries on days 1 and 4, and store B on day 2 only. This could be the minimum cost solution if transportation costs are considered to be volume- and distance-dependent only. However, store A and B could be supplied on the same tour, which may have a beneficial effect on total costs if store B also receives its deliveries on day 1 and possibly on day 4 too (see Example II of Fig. 3). In this case, a higher delivery frequency for store B (i.e., store B receives an additional delivery on day 4) results in transportation cost savings and reduced instore handling, which compensates for additional efforts in the DC.

Given the setting and cost structure in the DC, transportation and store, the decision problem needs expanding so that it takes into account all relevant cost effects faced by a retailer that orchestrates the entire fulfillment process. We contribute to the existing literature of store delivery planning by designing and solving a comprehensive planning approach to determine store delivery patterns that incorporates transportation issues across stores as well as costs and capacity in each operational subsystem without preselecting patterns in advance. In the following section we develop a more exact decision support model for retailers to select optimal delivery patterns for their stores.

This section formulates a decision support model for selecting store-specific delivery patterns and transportation tour clusters to minimize the total costs of the entire retail distribution chain. The real decision problem is thereby transferred to a tractable formal representation relying on certain modeling techniques and preprocessing efforts that are further elaborated within the following sections. The model is based on the underlying network structure and defined cost functions discussed above with a retailer who operates a significant set of company-owned stores, F. The applied notation is listed in Table 1
                     .

Each of the retailer’s stores f, f ∈ F, is supplied from a DC according to a distinctive delivery pattern r, r ∈ R, which defines the delivery days in a certain repetitive delivery period, e.g., one week. The assignment of delivery pattern r to store f is reflected by the binary decision variable x
                     
                        f, r
                      ∈ {0, 1}, while the associated logistics costs in the DC and in the store are quantified by 
                        
                           
                              c
                              ^
                           
                           
                              f
                              ,
                              r
                           
                        
                     . Parameter g
                     
                        r, t
                      has the value of 1 if a delivery on day t, t ∈ T, takes place applying pattern r. It is assumed that the delivery pattern of a store is repeated in all following periods, e.g., weeks, until delivery patterns are updated because of major changes in demand, network, delivery or cost structures.

On each day of a store’s delivery it is assumed that the store receives products that fulfill the required demand for all articles until the next delivery day. The product volume delivered to store f on day t is quantified by parameter pall
                     
                        f, r, t
                      and is therefore dependent on the assigned delivery pattern r. The quantity is measured by the number of receiving pallets of goods. However, the maximum capacity each store can receive, 
                        
                           c
                           a
                           
                              p
                              
                                 f
                              
                              
                                 r
                                 e
                                 c
                              
                           
                           ,
                        
                      has to be considered. In addition, on each day of the defined delivery cycle the maximum available and the minimum required daily picking capacity at the DC, 
                        
                           m
                           a
                           x
                           c
                           a
                           
                              p
                              
                                 t
                              
                              
                                 p
                                 i
                                 c
                                 k
                              
                           
                        
                      and 
                        
                           m
                           i
                           n
                           c
                           a
                           
                              p
                              
                                 t
                              
                              
                                 p
                                 i
                                 c
                                 k
                              
                           
                           ,
                        
                      have to be taken into account. The picking volume for store f on day t is denoted by pick
                     
                        f, r, t
                      and depends on the assigned delivery pattern r.

Furthermore, it is assumed that the retailer operates its dedicated transportation fleet comprising |K| equally sized trucks, each with the capacity captrans
                     . Bundling effects in the transportation system can be realized if nearby stores receive deliveries on the same day. The available number of trucks, |K|, has to be considered when specifying the delivery patterns of the stores. It is assumed that each truck can only serve a certain set of stores on day t. These stores are combined into delivery cluster k, k ∈ K. The set of stores clustered into set k on a specific day t is defined by the binary decision variable x
                     
                        f, k, r, t
                      ∈ {0, 1}. Binary variable y
                     
                        k, t
                      ∈ {0, 1} defines whether a cluster k is supplied on day t. The exhaustive and disjunctive clustering of all stores served in one tour and only one cluster k on each day t of the delivery cycle leads to a multi-period assignment problem with the help of which the transportation costs are approximated (see Fisher & Jaikumar, 1981; Holzapfel, Sternbeck, & Hübner, 2016).

We distinguish between transportation costs associated with serving a seed point of cluster k, 
                        
                           
                              c
                              
                                 k
                              
                              
                                 t
                                 r
                                 a
                                 n
                                 s
                                 t
                                 o
                                 u
                                 r
                              
                           
                           ,
                        
                      and the additional costs occurring when a truck assigned to delivery tour k adds store f to its tour, i.e., 
                        
                           c
                           
                              f
                              ,
                              k
                           
                           
                              t
                              r
                              a
                              n
                              s
                              s
                              t
                              o
                              p
                           
                        
                     . On each day on which stores of cluster k receive deliveries, a truck has to drive from the DC into the region, i.e., to a seed point, of cluster k. This involves basic transportation costs, 
                        
                           c
                           
                              k
                           
                           
                              t
                              r
                              a
                              n
                              s
                              t
                              o
                              u
                              r
                           
                        
                     . Any point in the delivery area can serve as a seed point. Together the cost terms 
                        
                           c
                           
                              k
                           
                           
                              t
                              r
                              a
                              n
                              s
                              t
                              o
                              u
                              r
                           
                        
                      and 
                        
                           c
                           
                              f
                              ,
                              k
                           
                           
                              t
                              r
                              a
                              n
                              s
                              s
                              t
                              o
                              p
                           
                        
                      serve as an approximation for the underlying VRP. This is equivalent to the logic suggested by Fisher and Jaikumar (1981) for solving the capacitated VRP (CVRP). Fisher and Jaikumar (1981) construct clusters that define so-called base tours, for which the exact sequence of store deliveries is not known, but the resulting vehicle routing costs can be approximated via the marginal cost increase when store f is assigned to cluster k.

Applying the logic of Fisher/Jaikumar, real tour costs are approximated on a tactical level. This approximation considers the effects of bundling nearby stores into the same tour when selecting store-specific delivery pattern.


                     Fig. 4
                      explains the determination of the two transportation cost parameters for a certain assignment on the basis of distance-dependent transportation costs. For example, there are two possibilities for supplying store 4 from the DC, i.e., 
                        
                           f
                           =
                           0
                        
                     : either on a tour based on the cluster with the seed point A or on a cluster with the seed point B (A, B ∈ K). The calculation example shows that assigning store 4 to cluster A results in lower costs than assigning it to cluster B. Supplying store 4 as part of the tour of cluster B, however, can be advantageous, if for example stores 1, 2 and 3 are not supplied on certain days, but stores 5 and 6 are. Then it is favorable to include store 4 on a tour with seed point B and not to start a new tour with seed point A on this day. The underlying assumptions are summarized as follows:

                        
                           •
                           Stores receive deliveries a maximum of once per day.

Each store gets supplied by a store-specific weekly delivery pattern.

The weekly delivery pattern repeats all weeks of the entire planning horizon.

Store delivery lead times are deterministic and predetermined.

The product range is homogeneous in the sense of products that can be packaged together on a common pallet or roll cage.

The transportation fleet is homogeneous and limited.

Each truck can carry out a maximum of one delivery tour per day.

The capacity for receiving goods at a store is limited and implies limited storage space in the backroom.

The workload at the DC is restricted between a minimum and maximum level.

Note that each set of stores grouped into one cluster k receives deliveries in the course of a maximum of one single tour on a certain day t. Thus, on each day t a maximum of |K| tours are generated. Accordingly, a maximum of |K| trucks are utilized each day. We therefore denote an identical symbol k for trucks, tours, and clusters. The following mathematical model can then be formulated, which is denoted by Delivery Pattern Planning with Transportation Bundling across stores (DPPTB).

                        
                           (1)
                           
                              
                                 
                                    
                                       
                                          
                                             M
                                             i
                                             n
                                          
                                          
                                          
                                             TC
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                f
                                                ∈
                                                F
                                             
                                          
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                R
                                             
                                          
                                          
                                             
                                                c
                                                ^
                                             
                                             
                                                f
                                                ,
                                                r
                                             
                                          
                                          ·
                                          
                                             x
                                             
                                                f
                                                ,
                                                r
                                             
                                          
                                          +
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                K
                                             
                                          
                                          
                                             ∑
                                             
                                                t
                                                ∈
                                                T
                                             
                                          
                                          
                                             c
                                             
                                                k
                                             
                                             
                                                t
                                                r
                                                a
                                                n
                                                s
                                                t
                                                o
                                                u
                                                r
                                             
                                          
                                          ·
                                          
                                             y
                                             
                                                k
                                                ,
                                                t
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          
                                          
                                             ∑
                                             
                                                f
                                                ∈
                                                F
                                             
                                          
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                K
                                             
                                          
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                R
                                             
                                          
                                          
                                             ∑
                                             
                                                t
                                                ∈
                                                T
                                             
                                          
                                          
                                             c
                                             
                                                f
                                                ,
                                                k
                                             
                                             
                                                t
                                                r
                                                a
                                                n
                                                s
                                                s
                                                t
                                                o
                                                p
                                             
                                          
                                          ·
                                          
                                             x
                                             
                                                f
                                                ,
                                                k
                                                ,
                                                r
                                                ,
                                                t
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     s.t.

                        
                           (2)
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                R
                                             
                                          
                                          
                                             x
                                             
                                                f
                                                ,
                                                r
                                             
                                          
                                          =
                                          1
                                       
                                    
                                    
                                       
                                    
                                    
                                       
                                          ∀
                                          f
                                          ∈
                                          F
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                K
                                             
                                          
                                          
                                             x
                                             
                                                f
                                                ,
                                                k
                                                ,
                                                r
                                                ,
                                                t
                                             
                                          
                                          =
                                          
                                             g
                                             
                                                r
                                                ,
                                                t
                                             
                                          
                                          ·
                                          
                                             x
                                             
                                                f
                                                ,
                                                r
                                             
                                          
                                       
                                    
                                    
                                       
                                    
                                    
                                       
                                          ∀
                                          f
                                          ∈
                                          F
                                          ,
                                          r
                                          ∈
                                          R
                                          ,
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                       
                                          m
                                          i
                                          n
                                          c
                                          a
                                          
                                             p
                                             
                                                t
                                             
                                             
                                                p
                                                i
                                                c
                                                k
                                             
                                          
                                          ≤
                                          
                                             ∑
                                             
                                                f
                                                ∈
                                                F
                                             
                                          
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                R
                                             
                                          
                                          p
                                          i
                                          c
                                          
                                             k
                                             
                                                f
                                                ,
                                                r
                                                ,
                                                t
                                             
                                          
                                          ·
                                          
                                             x
                                             
                                                f
                                                ,
                                                r
                                             
                                          
                                          ≤
                                          m
                                          a
                                          x
                                          c
                                          a
                                          
                                             p
                                             
                                                t
                                             
                                             
                                                p
                                                i
                                                c
                                                k
                                             
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                R
                                             
                                          
                                          p
                                          a
                                          l
                                          
                                             l
                                             
                                                f
                                                ,
                                                r
                                                ,
                                                t
                                             
                                          
                                          ·
                                          
                                             x
                                             
                                                f
                                                ,
                                                r
                                             
                                          
                                          ≤
                                          c
                                          a
                                          
                                             p
                                             
                                                f
                                             
                                             
                                                r
                                                e
                                                c
                                             
                                          
                                       
                                    
                                    
                                       
                                    
                                    
                                       
                                          ∀
                                          f
                                          ∈
                                          F
                                          ,
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                f
                                                ∈
                                                F
                                             
                                          
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                R
                                             
                                          
                                          p
                                          a
                                          l
                                          
                                             l
                                             
                                                f
                                                ,
                                                r
                                                ,
                                                t
                                             
                                          
                                          ·
                                          
                                             x
                                             
                                                f
                                                ,
                                                k
                                                ,
                                                r
                                                ,
                                                t
                                             
                                          
                                          ≤
                                          c
                                          a
                                          
                                             p
                                             
                                                t
                                                r
                                                a
                                                n
                                                s
                                             
                                          
                                          ·
                                          
                                             y
                                             
                                                k
                                                ,
                                                t
                                             
                                          
                                       
                                    
                                    
                                       
                                    
                                    
                                       
                                          ∀
                                          k
                                          ∈
                                          K
                                          ,
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                             
                                                f
                                                ,
                                                r
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                       
                                    
                                    
                                       
                                    
                                    
                                       
                                          ∀
                                          f
                                          ∈
                                          F
                                          ,
                                          r
                                          ∈
                                          R
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                             
                                                f
                                                ,
                                                k
                                                ,
                                                r
                                                ,
                                                t
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                       
                                    
                                    
                                       
                                    
                                    
                                       
                                          ∀
                                          f
                                          ∈
                                          F
                                          ,
                                          k
                                          ∈
                                          K
                                          ,
                                          r
                                          ∈
                                          R
                                          ,
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    
                                       
                                          
                                             y
                                             
                                                k
                                                ,
                                                t
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                       
                                    
                                    
                                       
                                    
                                    
                                       
                                          ∀
                                          k
                                          ∈
                                          K
                                          ,
                                          t
                                          ∈
                                          T
                                       
                                    
                                 
                              
                           
                        
                     
                  

The objective function (1) minimizes the sum of total operational and logistics costs (TC). The first term of the objective function represents DC and store operations costs. All relevant cost drivers except transportation are reflected in the cost parameter 
                        
                           
                              c
                              ^
                           
                           
                              f
                              ,
                              r
                           
                        
                     . This includes instore handling, instore inventory holding, as well as picking and packaging activities at the DC. The resulting costs depend on the assignment of a delivery pattern r to store f. The binary variable x
                     
                        f, r
                      is set to 1 if pattern r is assigned to store f, otherwise it is 0.

Transportation costs are quantified by the second and third term of the objective function (1). The second term of Eq. (1) quantifies transportation costs associated with the round trips from the DC to the central points (seed points) of all clusters K on all possible delivery days T. If at least one store is assigned to cluster k and receives a delivery on day t, the binary variable y
                     
                        k, t
                      is set to 1. In that case at least one round trip from the DC to the seed point of cluster k takes place, producing the associated basic transportation costs 
                        
                           c
                           
                              k
                           
                           
                              t
                              r
                              a
                              n
                              s
                              t
                              o
                              u
                              r
                           
                        
                     .

The third term of Eq. (1) quantifies the additional transportation costs incurred when supplying stores assigned to the clusters K. Assume a truck is already available in cluster k. This means that delivering goods to store f results in additional transportation costs of 
                        
                           c
                           
                              f
                              ,
                              k
                           
                           
                              t
                              r
                              a
                              n
                              s
                              s
                              t
                              o
                              p
                           
                        
                      currency units. These tour-specific costs depend on the assignment of a store f to a delivery cluster k on day t, using the chosen delivery pattern r. This multi-dimensional binary decision variable is reflected by x
                     
                        f, k, r, t
                      ∈ {0, 1}.

Besides the objective function, the model consists of several constraints, i.e., (2)–(9). Constraint (2) ensures that each store f receives its deliveries according to exactly one delivery pattern r. When the delivery pattern r of a store is selected then the associated delivery days g
                     
                        r, t
                      are known. Consequently, for each of those delivery days, it has to be decided on which tour (=cluster) k the deliveries should be fulfilled. Constraint (3) ensures that each store f is assigned to exactly one cluster k on each day the store is served. Constraint (4) ensures that the picking effort at the DC is within the range 
                        
                           [
                           m
                           i
                           n
                           c
                           a
                           
                              p
                              
                                 t
                              
                              
                                 p
                                 i
                                 c
                                 k
                              
                           
                           ;
                           m
                           a
                           x
                           c
                           a
                           
                              p
                              
                                 t
                              
                              
                                 p
                                 i
                                 c
                                 k
                              
                           
                           ]
                        
                      on each day t. Constraint (5) considers the receiving capacity of each store f on each delivery day t. Constraint (6) ensures that the truck capacity for each tour k is respected. Transportation capacity is only available for a certain cluster (=tour) k on day t if at least one store is assigned to this cluster and served on day t. The decision variables are defined as binary in constraints (7)–(9).

In conclusion the model reflects the relevant cost components as well as the restricting capacities and models two decisions:

                        
                           (a)
                           Selection of delivery patterns: Which stores are supplied on each day?

Construction of tour clusters: Which stores build a delivery cluster on each day?

In this section we develop the solution approach for solving the model DPPTB. First we describe precalculations of parameters required for the model before detailing a sequential solution approach.

Solving model DPPTB requires precalculations of the following parameter sets.

Model DPPTB requires the number of possible clusters |K| as input data. The number of clusters equals the number of available trucks and thus the maximum number of feasible delivery tours per day. We approximate this number by dividing the maximum total daily sales volume of all stores by the carrying capacity of one truck. Rounding up this quantity to the next integer value results in the number of trucks that are necessary to ensure that all stores can receive their required products on all days of the delivery cycle. This approximation generates a reasonable number of trucks and reasonable delivery cluster sizes. In the unlikely case that the number of trucks approximated does not lead to a feasible solution, the number is increased by one until a feasible solution can be generated.

The underlying VRP of model DPPTB is approximated via a multi-period assignment problem where we distinguish between transportation costs associated with serving a seed point of cluster k, 
                                 
                                    
                                       c
                                       
                                          k
                                       
                                       
                                          t
                                          r
                                          a
                                          n
                                          s
                                          t
                                          o
                                          u
                                          r
                                       
                                    
                                    ,
                                 
                               and the additional costs incurred when a truck assigned to delivery tour k adds store f to its tour, i.e., 
                                 
                                    c
                                    
                                       f
                                       ,
                                       k
                                    
                                    
                                       t
                                       r
                                       a
                                       n
                                       s
                                       s
                                       t
                                       o
                                       p
                                    
                                 
                              . Given the seed points, the cost parameters 
                                 
                                    c
                                    
                                       k
                                    
                                    
                                       t
                                       r
                                       a
                                       n
                                       s
                                       t
                                       o
                                       u
                                       r
                                    
                                 
                               and 
                                 
                                    c
                                    
                                       f
                                       ,
                                       k
                                    
                                    
                                       t
                                       r
                                       a
                                       n
                                       s
                                       s
                                       t
                                       o
                                       p
                                    
                                 
                               can be calculated for all possible combinations in advance according to the procedure of Fisher/Jaikumar described in Section 4. The selection of seed points is discussed within the following section.

The computational complexity of solving model DPPTB requires an approximate solution procedure. We propose a sequential heuristic procedure (DPPTB
                           Seq
                        ) that follows a “cluster first (Step 1), assign delivery patterns second (Step 2)” concept. Following this approach, the assignment of stores to clusters is assumed to be identical for all days of the delivery cycle.

Despite the complexity involved, practical requirements also favor a fixed clustering structure since this is in line with the needs of truck drivers and tour operators. They prefer stable and regular basetours as they need to be familiar with the characteristics of the tours and the unloading areas. Stable clusters and tours may therefore reduce short-term operational complexity and increase service quality.

The heuristic solution approach DPPTB
                           Seq
                         is described in the following using additional symbols defined in Table 2
                        .

Step 1 assigns stores to clusters. This is done with the help of the following store clustering algorithm which is based on a K-Means logic (see Fig. 5):

                                 
                                    (1.1)
                                    Substep 1.1 defines initial locations for the seed points for all clusters k. One possibility for this is to distribute the seed points equally over the delivery area, which guarantees that starting seeds are not concentrated in a certain subarea of the delivery area. On the basis of the position of the seed points, represented by 
                                          
                                             c
                                             r
                                             d
                                             S
                                             
                                                P
                                                
                                                   k
                                                
                                                
                                                   x
                                                   (
                                                   l
                                                   )
                                                
                                             
                                          
                                        and 
                                          
                                             c
                                             r
                                             d
                                             S
                                             
                                                P
                                                
                                                   k
                                                
                                                
                                                   y
                                                   (
                                                   l
                                                   )
                                                
                                             
                                             ,
                                          
                                        and the store coordinates, given by 
                                          
                                             c
                                             r
                                             d
                                             S
                                             
                                                t
                                                
                                                   f
                                                
                                                x
                                             
                                          
                                        and 
                                          
                                             c
                                             r
                                             d
                                             S
                                             
                                                t
                                                
                                                   f
                                                
                                                y
                                             
                                             ,
                                          
                                        the distances 
                                          
                                             c
                                             
                                                f
                                                ,
                                                k
                                             
                                             
                                                d
                                                i
                                                s
                                                t
                                                (
                                                l
                                                )
                                             
                                          
                                        between seed points and the stores are calculated using an Euclidean metric. The iteration index is denoted by l.

Substep 1.2 entails assigning clusters (1.2.1) and determining the location of seed points (1.2.2).

An MIP minimizes the travel distances (TD) between the seed points and their associated stores by assigning store f to cluster k, expressed by z
                                       
                                          f, k
                                        ∈ {0, 1} (see (10)). Each store is assigned to exactly one cluster (see (11)). Constraint (12) ensures that the volume to be delivered to all stores assigned to a specific cluster – assuming daily deliveries – must be equal or less than the truck capacity, captrans
                                       , on each day of the delivery cycle. This ensures that all stores within a certain cluster can potentially be supplied on one single tour on each day.

                                          
                                             (10)
                                             
                                                
                                                   M
                                                   i
                                                   n
                                                   
                                                   
                                                      
                                                         TD
                                                      
                                                      
                                                         (
                                                         l
                                                         )
                                                      
                                                   
                                                   =
                                                   
                                                      ∑
                                                      
                                                         f
                                                         ∈
                                                         F
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         k
                                                         ∈
                                                         K
                                                      
                                                   
                                                   
                                                      c
                                                      
                                                         f
                                                         ,
                                                         k
                                                      
                                                      
                                                         d
                                                         i
                                                         s
                                                         t
                                                         (
                                                         l
                                                         )
                                                      
                                                   
                                                   ·
                                                   
                                                      z
                                                      
                                                         f
                                                         ,
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                       s.t.

                                          
                                             (11)
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∑
                                                               
                                                                  k
                                                                  ∈
                                                                  K
                                                               
                                                            
                                                            
                                                               z
                                                               
                                                                  f
                                                                  ,
                                                                  k
                                                               
                                                            
                                                            =
                                                            1
                                                         
                                                      
                                                      
                                                         
                                                      
                                                      
                                                         
                                                            ∀
                                                            f
                                                            ∈
                                                            F
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             (12)
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ∑
                                                               
                                                                  f
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                            v
                                                            o
                                                            
                                                               l
                                                               
                                                                  f
                                                                  ,
                                                                  t
                                                               
                                                            
                                                            ·
                                                            
                                                               z
                                                               
                                                                  f
                                                                  ,
                                                                  k
                                                               
                                                            
                                                            ≤
                                                            c
                                                            a
                                                            
                                                               p
                                                               
                                                                  t
                                                                  r
                                                                  a
                                                                  n
                                                                  s
                                                               
                                                            
                                                         
                                                      
                                                      
                                                      
                                                         
                                                            ∀
                                                            k
                                                            ∈
                                                            K
                                                            ,
                                                            t
                                                            ∈
                                                            T
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             (13)
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               z
                                                               
                                                                  f
                                                                  ,
                                                                  k
                                                               
                                                            
                                                            ∈
                                                            
                                                               {
                                                               0
                                                               ,
                                                               1
                                                               }
                                                            
                                                         
                                                      
                                                      
                                                         
                                                      
                                                      
                                                         
                                                            ∀
                                                            f
                                                            ∈
                                                            F
                                                            ,
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    

If TD(l) is not equal to the previous iteration TD
                                          
                                             
                                             
                                                (
                                                l
                                                −
                                                1
                                                )
                                             
                                          
                                        or at least the difference between TD(l) and TD
                                          
                                             
                                             
                                                (
                                                l
                                                −
                                                1
                                                )
                                             
                                          
                                        is greater than a small number ϵ, an update of the seed points for iteration 
                                          
                                             l
                                             =
                                             l
                                             +
                                             1
                                          
                                        follows. The x-coordinate 
                                          
                                             c
                                             r
                                             d
                                             S
                                             
                                                P
                                                
                                                   k
                                                
                                                
                                                   x
                                                   (
                                                   l
                                                   +
                                                   1
                                                   )
                                                
                                             
                                          
                                        of the seed point of cluster k is set to the mean of the x-coordinates of the stores assigned within the previous iteration with 
                                          
                                             c
                                             r
                                             d
                                             S
                                             
                                                P
                                                
                                                   k
                                                
                                                
                                                   x
                                                   (
                                                   l
                                                   +
                                                   1
                                                   )
                                                
                                             
                                             =
                                             
                                                ∑
                                                
                                                   f
                                                   ∈
                                                   F
                                                
                                             
                                             c
                                             r
                                             d
                                             S
                                             
                                                t
                                                
                                                   f
                                                
                                                x
                                             
                                             ·
                                             
                                                z
                                                
                                                   f
                                                   ,
                                                   k
                                                
                                                
                                                   (
                                                   l
                                                   )
                                                
                                             
                                             /
                                             
                                                ∑
                                                
                                                   f
                                                   ∈
                                                   F
                                                
                                             
                                             
                                                z
                                                
                                                   f
                                                   ,
                                                   k
                                                
                                                
                                                   (
                                                   l
                                                   )
                                                
                                             
                                          
                                       . The y-coordinate 
                                          
                                             c
                                             r
                                             d
                                             S
                                             
                                                P
                                                
                                                   k
                                                
                                                
                                                   y
                                                   (
                                                   l
                                                   +
                                                   1
                                                   )
                                                
                                             
                                          
                                        is calculated accordingly. After that, the distances 
                                          
                                             c
                                             
                                                f
                                                ,
                                                k
                                             
                                             
                                                d
                                                i
                                                s
                                                t
                                                (
                                                l
                                                +
                                                1
                                                )
                                             
                                          
                                        are updated. Then the procedure continues with step (1.2.1). The iteration stops when no further improvements are possible.

The procedure results in the location of the seed points for each cluster k, as well as an exhaustive and disjunctive assignment of all stores f to one and only one cluster k. The calculation of the transportation cost parameters 
                                 
                                    c
                                    
                                       k
                                    
                                    
                                       t
                                       r
                                       a
                                       n
                                       s
                                       t
                                       o
                                       u
                                       r
                                    
                                 
                               and 
                                 
                                    c
                                    
                                       f
                                       ,
                                       k
                                    
                                    
                                       t
                                       r
                                       a
                                       n
                                       s
                                       s
                                       t
                                       o
                                       p
                                    
                                 
                               bases on this assignment (see Section 5.1).

The applied store clustering procedure presented above is only one of several possible clustering procedures. As seed points are known to have a certain impact on the solution quality (van Breedam, 2002), we tested different approaches before selecting the approach mentioned above, i.e., “Distance approach.” Three basic approaches may be applicable when determining seed points. The first one is the cone covering approach proposed by Fisher and Jaikumar (1981) using the bisectrix of cones of the delivery area locating seed points. This approach is applied by several authors (e.g., Nygard, Greenberg, Bollkan, & Swenson, 1988, van Breedam, 2002 and Baker & Sheasby, 1999). A common drawback of the procedure that is mentioned, however, is that the seed point locations depend on the location of the depot, and therefore the quality of the seed points is viewed rather critically (van Breedam, 2002). The second main seed point generation method is the circle covering procedure suggested by Savelsbergh (1990). This procedure selects stores as seed points according to the extent of the distance of each store to the other stores that fit in one truck load. With this method, however, additional seed points could be generated that may exceed the number of trucks available. Thus, this approach is unsuitable in our setting. The third approach, which is based on a K-Means logic and described above, reflects the idea of distance clusters as the circle covering approach but guarantees a fixed number of seed points, equivalent to the predefined number of trucks |K|. The evaluation function of the K-Means approach, however, can be formulated in different ways, i.e., the sum of travel distances or sum of store-demand weighted travel distances. In addition, the seed points of a given cluster could be chosen differentially, i.e., center related to travel distances (Distance), center related to demand-weighted travel distances (Weighted), location of the store with the highest demand volume (Volume), and location of the store with the shortest distance to the DC (DC-Distance). Each of these seed point selection procedures can be combined with one of the evaluation functions described above. As criteria we assume the sum of travel distances in all cases except for the “Weighted case,” and compare all variants of the approach and the “Cone approach” with the approach described above, i.e., the “Distance approach.” For evaluation purposes we use the identical scenarios (240 test instances), as described in Section 6.2. The resulting total cost differences for each of the instances are illustrated by box plots shown in Fig. 6
                              .

Although there seem to be only small cost differences between all of the approaches on average, we find statistical evidence that the results of the approach selected (Distance) differ significantly from those named Cone, Volume and DC-Distance by providing two-sided t-tests with a confidence level of 99 percent. There is evidence for the claim that the approach selected performs better on average than Cone, Volume and DC-Distance. Additionally, the approach selected is found to be the best in one third of all cases. No significant average difference is found between the approach selected and Weighted (tested with a two-sided t-test with a confidence level of 90 percent), so we selected the “Distance approach” in our case. The box plots in Fig. 6, however, show that the seed point generation approaches analyzed achieve quite different results in the individual instances.

Another issue is the selection of initial seed points in the store clustering approach. As stated above, the selection procedure implemented ensures that initial seeds are distributed all over the delivery area. Nevertheless, our tests showed that other initial seed points, e.g., randomly generated initial seeds, can lead to an improvement in solution quality (see Section 6.2.6).

Step 2 assigns delivery patterns to stores using a model equivalent to the original DPPTB model (see Section 4). However, the model here assumes that the store cluster assignment is predetermined. This assignment is represented by parameter set z
                              
                                 f, k
                               ∈ {0, 1} and determined in Step 1.

In the following section we analyze the applicability of the decision support model and the suggested solution approach for selecting delivery patterns.

The analysis consists of three parts. First (see Section 6.1), we specify appropriate solution approaches to solve model DPPTB and align these approaches so that it is possible to compare the results achieved. Second (see Section 6.2), we conduct a numerical analysis of these approaches using simulated data. The main objective of this investigation is to benchmark the approaches selected, and in particular to evaluate the sequential solution approach developed in Section 5. Finally (see Section 6.3), we apply the preferred solution approach to a real life case example of a major European grocery retailer to show its practical applicability and the cost savings achievable.

The numerical analysis compares three different approaches for solving the optimization problem defined:

                           
                              (I)
                              Solving the original model DPPTB with the help of a standard solver, i.e., CPLEX v12.5. This approach is denoted as DPPTBMIP; in this case the seed point generation thereby follows the same logic as within the sequential heuristic procedure.

Applying the sequential heuristic procedure DPPTBSeq developed in Section 5.2.

Applying the approach suggested by Sternbeck and Kuhn (2014), which is the most comprehensive approach presented in literature so far and the approach used by the retailer of the case study. This approach is denoted as DPPTCM.


                           Sternbeck and Kuhn (2014) determine delivery patterns using a similar formulation as in the model DPPTB, but neglecting transportation bundling effects across stores. They approximate transportation costs with the parameter 
                              
                                 c
                                 
                                    f
                                    ,
                                    r
                                 
                                 
                                    t
                                    r
                                    a
                                    n
                                    s
                                 
                              
                            representing a volume- and distance-dependent and digressive transportation cost matrix when applying pattern r for store f. We denote this model Delivery Pattern Planning with a volume- and distance-dependent Transportation Cost Matrix (DPPTCM). In so doing, the total cost of applying a specific pattern r for store f can be represented by 
                              
                                 
                                    c
                                    
                                       f
                                       ,
                                       r
                                    
                                 
                                 =
                                 
                                    
                                       c
                                       ^
                                    
                                    
                                       f
                                       ,
                                       r
                                    
                                 
                                 +
                                 
                                    c
                                    
                                       f
                                       ,
                                       r
                                    
                                    
                                       t
                                       r
                                       a
                                       n
                                       s
                                    
                                 
                              
                           . The objective function of model DPPTCM is modified accordingly.

Store-delivery assignment constraints, capacity constraints for the DC and the stores, as well as binary variable requirements are analogous to model DPPTB (see (2), (4), (5) and (7) in Section 4). Model DPPTCM is then solved with the help of a standard solver, i.e., CPLEX v12.5.

All of the approaches mentioned above only approximate the resulting transportation costs. We therefore need a procedure that schedules the trucks on each day of the delivery cycle so that realizable and comparable transportation costs can be calculated for each of those approaches. The resulting costs will be denoted effective transportation costs, ETC.

To determine ETC, independent CVRPs are solved for each day t of the delivery cycle by applying the Fisher and Jaikumar (1981) approach. A Traveling Salesmen Problem (TSP) is solved for each of the clusters k generated on each day t of the delivery cycle to specify the effective sequence in which the stores combined into one tour receive their deliveries. The TSPs are solved using an exact algorithm for all instances.

While approach DPPTBMIP generates dynamic clusters, DPPTBSeq only generates static clusters. Static clusters are justified by practical reasons (see Section 5.2). However, for reasons of “fairness” in respect of the evaluation criterion ETC when comparing the results of DPPTBMIP with DPPTBSeq we reschedule the delivery tours on each day for all stores assuming the given delivery patterns received from approach DPPTBSeq.

Calculating the effective transportation costs (ETC) becomes a little more complex for the approach suggested by Sternbeck and Kuhn (2014), i.e., DPPTCM. A solution to model DPPTCM creates neither clusters nor tours. To be able to compare it with the solution approaches DPPTBMIP and DPPTBSeq we need to align the resulting solutions of model DPPTCM by applying the store clustering algorithm (Step 1 of approach DPPTBSeq, see Section 5.2) independently for each day t of the delivery cycle. This generates day-specific clusters and their respective seed points. However, assuming an equivalent number of trucks |K| as specified in model DPPTB, a solution to model DPPTCM does not ensure feasible solutions for the store clustering algorithm. On some days of the delivery cycle the entire carrying load may be larger than the total capacity of all |K| trucks or it may not be possible to split it into |K| truckloads at maximum. In these cases, the number of trucks |K| is increased by one until a feasible store cluster assignment is found. Afterwards a TSP is solved for each of the clusters k generated on each day t of the delivery cycle.

@&#SUMMARY@&#

All three approaches DPPTBMIP, DPPTBSeq, and DPPTCM lead to feasible solutions to the optimization problem DPPTB originally defined. In addition, all solutions are evaluated and compared with regard to the effective operational costs (EOC) throughout the distribution system, which consist of the exactly calculated DC and instore operations costs as well as effective transportation costs, ETC. This ensures the comparability of the approaches analyzed and the practical relevance of the results achieved. The algorithms are implemented in Java v7 and IBM ILOG CPLEX v12.5 is used for solving the MIP models. All tests were run on an Intel Core i5-2520M CPU @ 2.5 gigahertz with 8 gigabytes RAM.

We conducted a numerical analysis of the approaches using simulated data. The following subsections describe the settings and analyze the results.

We define 12 general scenarios based on the combinations of three different sizes of delivery areas, i.e., “Metropolitan” (50 kilometer × 50 kilometer), “District” (200 kilometer × 200 kilometer) and “State” (400 kilometer × 400 kilometer), and four different quantities of stores located in these areas, i.e., 
                              
                                 |
                                 F
                                 |
                                 =
                                 10
                                 ,
                                 20
                                 ,
                                 30
                                 ,
                                 40
                              
                           . For each of these twelve scenarios we randomly generated 20 test instances totaling 240 test instances.

The individual test instances are generated as follows. For each store considered in one test instance of a scenario set, its location inside the dedicated delivery area and its weekly sales volumes are chosen randomly. The possible sales volumes are defined as “low”, “medium”, and “high.” The related sales volume depends on the weekly sales of a set of 500 products representing the entire assortment shipped from the DC to the stores. The demand data are subject to weekly seasonality and represent average non-holiday weeks.

Receiving capacity and shelf layouts in the stores are assumed to be identical for all stores, shelf capacities are randomly chosen for each product and are then assumed to be identical for all stores. Picking capacity at the DC is approximated with the total picking effort assuming that all outlets are supplied daily with their average daily demand volume. The DC is located in the center of the delivery area. Cost and time parameters are set according to real data that has been empirically gathered and described in literature (Kuhn & Sternbeck, 2013; Sternbeck & Kuhn, 2014; van Zelst et al., 2009).

At the beginning of our numerical study we analyze the required computational times of the approaches applied, i.e., DPPTBMIP, DPPTBSeq, and DPPTCM, to solve the various test instances.
                           
                        


                           Table 3 presents the essential computational times of all three approaches tested. We focus on the net time for solving one instance since all approaches require comparable preprocessing times of between 2 minutes (10 stores) and 5 minutes (40 stores), related to the size of an instance.

The average run times applying DPPTBSeq range between <1 and 159 seconds for all scenarios. The solution time generally increases with the number of stores considered. DPPTBSeq shows notable efficiency advantages compared to DPPTBMIP. While applying DPPTBSeq allowed all instances of all scenarios to be solved, several instances with 40 stores could not be solved due to running out of buffer when applying DPPTBMIP. This shows that DPPTBMIP is not suitable for practical instances that usually have more than 30 stores per DC, while DPPTBSeq is able to handle these. Additionally, the average solution time of DPPTBMIP rises much faster than for DPPTBSeq when increasing the number of stores. Table 3 also reveals that DPPTCM is always faster than DPPTBSeq, with an average runtime of 0.1 seconds. While the runtime of DPPTCM was less than or equal to one second for all except one instance, the average runtime of DPPTBSeq grew as the number of stores increased. DPPTBSeq runtime, however, was in an acceptable range for practical instances, especially when considering that the selection of delivery patterns is a medium-term decision that only needs to be resolved every three to six months. The following analysis of the resulting total logistics costs will show whether the additional time necessary to solve DPPTBSeq is justified by the potential cost savings.

In the following subsection we compare the three different solution approaches with respect to their effective operational costs, denoted as EOC and defined in Section 6.1.

(i) DPPTBSeq vs. DPPTCM. First we compare approach DPPTBSeq with approach DPPTCM. Fig. 7 shows the box plots of the cost savings achieved resulting from the 20 test instances of each of the scenarios considered when applying approach DPPTBSeq rather than approach DPPTCM. The following propositions can be drawn when comparing DPPTBSeq with DPPTCM. First, the larger the delivery area the higher the cost savings potential since transportation costs become more important. Second, the more stores in one delivery area, the higher the cost savings potential, as there are more opportunities in bundling store deliveries. Third, deviations increase with larger delivery areas. Assuming a large delivery area, stores can be either spread widely in the area so that potential from bundling is hard to capture, or can be concentrated in certain subareas. The higher share of transportation costs in larger delivery areas acts as a multiplier for the cost savings achieved via bundling effects. Fourth, deviations decrease, with an increasing number of stores in the same delivery area. A higher store density, i.e., stores per square kilometer, increases the opportunity of realizing bundling effects and it is less likely that stores are located far away from each other.

To summarize, depending on the size of the delivery area and the number of stores within the area, the DPPTBSeq approach for the twelve scenarios results in an average cost savings potential of between 0.3 percent assuming 10 stores distributed within a 50 kilometer × 50 kilometer area, and 4.8 percent assuming 40 stores within an 400 kilometer × 400 kilometer area.

(ii) DPPTBMIP vs. DPPTCM. In the same setting as the one above, we compare the results of solution approach DPPTBMIP with the results of solution approach DPPTCM (see Fig. 8
                           ). However, the number of stores considered should not be larger than 30. Otherwise, approach DPPTBMIP is not able to find an optimal solution to model DPPTB within a reasonable computation time and is likely to run out of buffer. The solution approach DPPTBMIP achieves an average of 3.4 percent less EOC than approach DPPTCM. Thus, additional cost savings could be achieved when applying DPPTBMIP compared to DPPTBSeq, but at the price of considerable additional computational effort (see Section 6.2.2).

We also analyze which share of the additional cost savings of 1.0 percent of DPPTBMIP compared to DPPTBSeq results from the dynamic clustering and which share results from the simultaneous solution procedure. We analyze this by using an MIP model formulation similar to DPPTB, but assuming static delivery clusters. The model is then solved by CPLEX. On average 0.7 percentage points of the additional cost savings of DPPTBMIP result from the simultaneous decision of delivery clusters and patterns, and only 0.3 percentage points of the cost savings can be assigned to the dynamic clustering assumption.

In an additional study we analyze how effective transportation costs, ETC, are affected by the DPPTBSeq and DPPTCM approaches. The results of ETC savings reveal a trend similar to the results of the EOC savings, but to a higher degree. ETC savings amount to 7.2 percent on average for all instances analyzed. An average cost reduction of 1 percent is achieved in the scenario 
                              
                                 |
                                 F
                                 |
                                 =
                                 10
                                 ,
                              
                            “Metropolitan” and a reduction of 10.6 percent in the scenario 
                              
                                 |
                                 F
                                 |
                                 =
                                 40
                                 ,
                              
                            “State.” In cases with a large number of stores distributed over a large area, e.g., “State” with 40 stores, an at most accurate approximation of the real transportation costs becomes more relevant. ETC as share of total EOC grows as delivery areas increase in size. While ETC amounts to between 10 percent and 15 percent in the case of “Metropolitan,” the share increases to 25–30 percent in the “District” case and 40–45 percent in the “State” setting.

The delivery frequency increases by 11.8 percent on average when applying DPPTBSeq instead of DPPTCM. Thus, DPPTBSeq provides not only cost savings in the transportation system but also in instore logistics. The positive bundling effects in transportation allow for an increase in delivery frequency. This again generates cost savings since shelf-refilling processes from the backroom storage are reduced.

Another advantage of DPPTBSeq compared to DPPTCM is that the solution of DPPTBSeq uses the given transportation capacity in a more balanced manner, allowing the maximum number of trucks required to be reduced. In all test instances the number of trucks used when applying DPPTBSeq was equal to or lower than in DPPTCM. In 93.8 percent of all test instances and in all instances with 20, 30, and 40 stores, the number of trucks required was smaller. This shows an additional positive cost effect when applying DPPTBSeq that is not explicitly considered in the total cost function.

As discussed within Section 5.2, the seed point generation method and choice of initial seed points impact the solution quality and therefore the cost savings potential achievable. We solved each scenario multiple times via the sequential approach (DPPTBSeq) using different seed point generation methods and then selected the best solution found. This procedure results in cost savings of 0.5 percent on average. The savings potential decreases with a higher number of stores and smaller delivery areas. The generation of random initial seeds amounts to the same additional cost savings on average, equally influenced by the number of stores and the size of delivery areas, as just described. We therefore propose testing different seed point generation methods and running the sequential solution approach several times with randomly chosen initial seed points if additional cost savings are required. The computational time then amounts to a multiple of a single run of course. The solution quality could be improved by this procedure; however, this is not guaranteed.

An important issue for the adequateness of the solution approach is the quality of transportation cost approximation. We assess all resulting tours when applying DPPTBSeq and compare the approximated cost to the real transportation cost ETC.


                           Fig. 9
                            shows a high variability of the cost differences. In most cases, however, the transportation costs are approximated quite accurately. The average absolute percentage transportation cost approximation error (APTCAE) amounts to 9 percent across all instances simulated, with most tours being approximated significantly better than 9 percent. The approximation error decreases with a larger number of stores and a smaller delivery area. Dense networks therefore favor the approximation quality of the solution approach.

We apply DPPTBSeq and DPPTCM to a real life case of a major European grocery retailer to additionally motivate the applicability of DPPTBSeq for real life instances and show the resulting cost savings potential.

The case consists of 48 stores supplied from one DC with an ambient assortment. The stores have different sales volumes and can be categorized into small, medium and large stores in terms of sales. We apply actual daily demand data from an average non-holiday week with weekly seasonal demand patterns. Total weekly demand volume at a single store varies from half to one-and-a-third truckloads. The stores have different shelf layouts resulting in store-specific shelf space capacity. The products focused on are listed in all stores. The stores are situated in an area of 120 kilometer × 280 kilometer. The area consists of a rural part, several small and medium-sized cities as well as one big city. Thus, there are different degrees of store agglomeration within the different parts of the delivery area. Fig. 10
                            shows the geographical position of the stores and the DC as well as the results of the clustering procedure applied within DPPTBSeq.

The stores are supplied by trucks with capacity to transport 18 pallets. All stores have similar capacity to receive product arrivals. Backroom storage space is assumed to not be further limited. Thus, any number of products that do not fit onto the shelf due to shelf space limitations can be stored temporarily in the backroom of the store. The maximum picking capacity at the DC has been provided by the retailer and is approximated with the total picking effort if all outlets would be supplied daily with their average daily demand volume.

Cost and time parameters for the different logistics processes were obtained by empirical data collection. The exact parameters are subject to confidentiality obligations. Fig. 11
                           
                            shows representative cost curves for selected stores of the case example assuming that each store is supplied independently. Transport bundling effects are therefore not considered in these cost curves. The graph on the left shows total costs (TC(a)) as a function of delivery frequency a, while the graph on the right illustrates the development of the different cost components (
                              
                                 
                                    C
                                    +
                                 
                                 
                                    (
                                    a
                                    )
                                 
                                 ,
                              
                           
                           
                              
                                 
                                    C
                                    −
                                 
                                 
                                    (
                                    a
                                    )
                                 
                              
                           ) as a function of delivery frequency a. The value attributed to a certain delivery frequency a corresponds to the minimum cost of all patterns, which generate the respective delivery frequency.

Example store 1 in Fig. 11 belongs to the low sales volume store category and is located far away from other stores. Thus, infrequent deliveries are the most advantageous delivery policy and the cost function rapidly increases with higher delivery frequency. Stores 2 and 3 have similar cost curves, however, on different levels. Two or three deliveries would be optimal in these cases assuming an independent store delivery mode. Store 4 is a store with a high sales volume. Daily delivery therefore results in the lowest costs from a single store perspective.

@&#RESULTS@&#

Applying approach DPPTBSeq results in savings of 1.5 percent of the effective operational costs (EOC) compared to approach DPPTCM. As the delivery area size lies between “Metropolitan” and “District,” these cost savings correspond to the cost savings potential found in the numerical study using simulated data. The 1.5 percent cost savings correspond to more than EUR 1 million in absolute savings per year for the grocery chain. The cost savings result mainly from transport bundling effects across stores. These effects reduce transportation costs by 11 percent. Also, picking costs at the DC decrease slightly by 1.4 percent since the average number of deliveries per week and per store decreases from 2.4 to 2.2. Instore logistics costs increase slightly by 2.3 percent for the same reason.

The shares of total operational costs in the different logistics subsystems correspond approximately to the ranges determined empirically by van Zelst et al. (2009) and Kuhn and Sternbeck (2013), with about 21 percent accounted for DC operations, 21–23 percent for transportation and 56–58 percent for instore logistics. The average truck utilization amounts to approximately 75 percent. For both approaches, a maximum of eight trucks are used and capacity utilization at the DC is evenly balanced throughout the week at approximately 82 percent. Analyses show that additional cost savings from higher picking capacity remain below 0.2 percentage points. This is in line with the observations of Sternbeck and Kuhn (2014) who found that at the DC compensation effects can be realized when applying an integrative solution approach. Using an alternative seed point generation method (compare Section 5.2) does not lead to additional cost savings. However, additional cost savings in the magnitude of 0.5 percentage points can be achieved if several solutions, e.g., 10, with randomly generated initial seed points are generated and the best solution found is applied. Thus, for the case study considered the suggested approach may generate cost savings of up to 2.0 percent. These total cost savings result from savings in transportation and DC operations, while they are partly compensated by additional instore logistics costs.

Applying approach DPPTBSeq rather than DPPTCM changes the delivery pattern for 79 percent of all stores. In addition, for 66 percent of those stores the delivery frequency changes also.


                           Fig. 12 impressively illustrates which direction these changes take for one selected cluster of stores.

Approach DPPTBSeq creates perfectly synchronized delivery patterns for all stores. Approach DPPTCM, however, suggests highly unsynchronized patterns.

Solution approach DPPTBSeq required 44 minutes to solve the case instance, which seems quite reasonable for medium-term optimization problems. DPPTCM terminates in less than one second. Approach DPPTBMIP, however, does not end at all, as CPLEX runs out of buffer.

Over the last decade, academic research has begun to provide evidence that retail supply chain management requires a comprehensive view of all subsystems, from warehousing to the shelves. Cumulatively, these findings suggest that careful integrative planning considering the effects of all subsystems will result in cost improvement. The planning of delivery patterns connects these subsystems on a medium-term level. As order intervals are a result of the delivery pattern applied, volume effects along the supply chain occur that essentially determine overall logistics costs (Cachon, 1999).

In this study, we presented a modeling framework to explore the delivery pattern decision on retail operations and logistics. We derived a decision support model that integrates warehouse operations, transportation and instore replenishment. It comprehensively models the influences of the delivery pattern decision in all relevant subsystems, considers bundling effects across stores and reflects practical needs. The heuristic solution approach developed generates fixed clusters for all days of the delivery cycle, i.e., each store is assigned to the same basetour on each day deliveries are received. This is in line with the wishes of truck drivers and tour operators. They prefer stable and regular basetours as they need to be familiar with the characteristics of the tours and the unloading areas. Stable clusters and tours may therefore reduce short-term operational complexity and increase service quality.

We show that effective operations cost improvements are on average 2.5 percent and up to 7 percent in our numerical study using simulated data and 1.5 percent in the case example of an European grocery retailer compared to the most recent approach in literature.

Grocery chains operating their own transportation fleet can profit from the advantages of the solution approach suggested, while retailers relying on logistics service providers in transportation can strengthen their bargaining power, offering service providers delivery schemes with enhanced transportation routes supplying nearby stores on the same delivery tour.

There are some limiting factors of the model (A) and the solution procedure (B) from which further research opportunities can be derived.

(A) The model for example can be extended by considering a multi-level distribution structure. We assume one central DC supplying all stores of the retail chain. Some retailers, however, operate central as well as regional DCs storing multiple product segments that are delivered to the stores using different delivery schemes. The delivery of different product segments to stores requires a considerable coordination effort since the transportation loads have to be consolidated at transshipment points and the limited receiving capacity at the stores have to be regarded simultaneously.

Our deterministic dynamic model does not account for stochastic influences. This is justified as the model is applied on a medium-term planning level. However, as the delivery pattern also determines the length of the review period, the pattern selected influences the amount of safety stock, which in turn influences shelf restocking activities. On-shelf availability therefore may also be affected by the decision considered. The connection between determining delivery patterns and stochastic inventory management is a challenging field for prospective research.

Finally as discussed above, shelf refilling activities from the backroom are strongly influenced by delivery frequencies. This leads to the future challenge of integrating shelf space allocation with its dependencies on consumer demand into the model. Further research is also required to investigate the effects with different case pack sizes and order requirements as well as seasonal demand. Generally speaking, a better connection of consumer interaction at the point of sales with instore logistics and upstream operational activities seems to offer numerous opportunities for retail research.

(B) On the other hand, the solution procedure can possibly be enhanced by a subsequently performed metaheuristic (e.g., tabu search, simulated annealing, etc.). Our analysis showed that varying delivery clusters can potentially improve the solution further. Evidence thus exists that an improvement heuristic will upgrade the solutions, but only at the expense of additional computational time.

In addition, the approach suggested applies a strategy of “cluster first, assign delivery patterns second.” Other strategies can also be used, such as “assign delivery patterns first, cluster second.” In this case, however, the question arises as to how transportation bundling effects can adequately be anticipated when assigning delivery patterns to stores.

@&#REFERENCES@&#

