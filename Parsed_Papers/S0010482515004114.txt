@&#MAIN-TITLE@&#Blood vessel extraction and optic disc removal using curvelet transform and kernel fuzzy c-means

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           An integrated framework for retinal blood vessel extraction.


                        
                        
                           
                           Matched filtering, Laplacian of Gaussian, KFCM and morphological operation.


                        
                        
                           
                           Accurate vessel extraction from DRIVE, STARE and DIARETDB1 databases.


                        
                        
                           
                           Vessel extraction accuracy-96.16% for DRIVE and 97.35% for STARE databases.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Retinal vessel extraction

Curvelet

Matched filter

Kernel fuzzy c-means

Laplacian of Gaussian

@&#ABSTRACT@&#


               
               
                  This paper proposes an automatic blood vessel extraction method on retinal images using matched filtering in an integrated system design platform that involves curvelet transform and kernel based fuzzy c-means. Since curvelet transform represents the lines, the edges and the curvatures very well and in compact form (by less number of coefficients) compared to other multi-resolution techniques, this paper uses curvelet transform for enhancement of the retinal vasculature. Matched filtering is then used to intensify the blood vessels’ response which is further employed by kernel based fuzzy c-means algorithm that extracts the vessel silhouette from the background through non-linear mapping. For pathological images, in addition to matched filtering, Laplacian of Gaussian filter is also employed to distinguish the step and the ramp like signal from that of vessel structure. To test the efficacy of the proposed method, the algorithm has also been applied to images in presence of additive white Gaussian noise where the curvelet transform has been used for image denoising. Performance is evaluated on publicly available DRIVE, STARE and DIARETDB1 databases and is compared with the large number of existing blood vessel extraction methodologies. Simulation results demonstrate that the proposed method is very much efficient in detecting the long and the thick as well as the short and the thin vessels with an average accuracy of 96.16% for the DRIVE and 97.35% for the STARE database wherein the existing methods fail to extract the tiny and the thin vessels.
               
            

@&#INTRODUCTION@&#

Diabetic Retinopathy (DR) is a progressive microvascular chronic disorder of diabetes mellitus and one of the major causes of visual impairment all over the world. It occurs when the blood vessels that nourish the retina are blocked and hence deprive several areas of retina with blood and oxygen supply [1]. In proliferative diabetic retinopathy (PDR), new blood vessels start growing along the retina. These blood vessels are fragile and abnormal in nature and cause frequent minor bleeding, sometimes cause permanent vision loss. The first step of PDR treatment needs the design of an automated system that enables accurate detection of different blood vessels that travel radially outward from the optic disc (OD) at different orientations [2]. The vessels are often disconnected, indistinguishable from the background and the vessel boundaries are unsharp. Retinal images are also contaminated by noise during acquisition, storage and transmission and are also degraded in the form of blurring. Furthermore, sometimes the images are non-uniformly illuminated.

Presence of noise, drift in image intensity, non-uniform illumination, lack of image contrast altogether make accurate extraction of the thick and the thin as well as the tiny and the large vessels from the retinal background really a very complicated and challenging task. The task becomes more challenging when the retinal images contain different lesions, exudates, drusen, symptoms of different ocular diseases like background DR, hypertensive retinopathy etc. It is worth to mention that different types of databases are available online for the retinal images, namely the DRIVE [3] database, the STARE [4] database, the DIARETDB1 [5] database etc. The characteristics, the contents and the pathological changes on the retinal images are also different from one another and needs certain modifications of the tools and techniques used for accurate blood vessel extraction. Not only that, for proper gradation of DR and further medical diagnosis, in addition to the accurate extraction of blood vessels, an automated system must be capable of differentiating vessels of different widths. In the existing literature, a single threshold is used that partition the retinal image pixels into two classes: vessel or non-vessel. However, for diagnostic purpose, identification of various types of blood vessels is of utmost importance. It is difficult to find an optimal global threshold value that would partition separately the thick and the thin vessels which vary largely in shape, size, length, diameter etc. with equal accuracy. This is basically a classification problem where the thickness of the vessel is subjective.

A short version of the present work was reported in [6] where fuzzy c-means (FCM) algorithm was used to extract the vessel silhouette from the matched filter response as vessel and non-vessel pixels. The main disadvantage of FCM based classification is that it uses Euclidean distance measure to determine the similarity (distance) between the data points and the cluster centers. Hence, this is unable to capture the non-linear structures of the feature space adequately. It produces accurate results for noise free images. However, its performance deteriorates to a great extent when the retinal images are contaminated by noise and suffer from outliers and/or other imaging artifacts such as in-homogeneous intensity distribution, and non-uniform illumination. Recently kernel based FCM (KFCM) reported in [7] looks promising for data clustering as well as in image segmentation. The basic idea behind kernel based technique is that it transforms the low dimensional input space into a high dimensional feature space through some form of non-linear mapping. As a result, the data points not linearly separable in the original input space are now linearly separable in the high dimensional feature space and hence produces better results. This principle may be used for automated and accurate extraction of different types of blood vessels and is addressed in this work. Another drawback of [6] is that it also detects the OD boundary due to its high matched filter response (MFR) which also increases the false detection rate. The present work eliminates the OD through morphological techniques.

Performance of [6] is evaluated only for noise-free images. In other words, performance in presence of noise was not studied. The present work studies its performance in presence of zero mean additive white Gaussian noise. Curvelet transform is used first for image denoising. Extensive simulation results on various databases show its performance gain over [6] and outperforms several other existing techniques for retinal vessel extraction. More importantly, the proposed method not only improves overall vessel extraction but also extracts diverse types of vessel structures separately.

Information about the different types of blood vessels are very much helpful for the diagnosis and grading the severity level of ocular diseases including glaucoma, DR etc. The blood vessels can have measurable abnormalities in diameter, color, tortuosity etc. as a result of different opthalmologic diseases. The proposed method aims not only to extract blood vessels but also to efficiently classify the vessels into different categories. Vessel extraction results may be used to study various properties like radius, length, vessel width etc. to find the vessel abnormalities.

The remainder of this paper is organized as follows. A comprehensive review of the state-of-the-art vessel extraction methods, their limitations and scope of the present work are presented in Section 2. Section 3 describes the tools, techniques and various numerical measures used in the present work. Proposed method of vessel detection is stated in Section 4. Experimental results, performance evaluation of the proposed method and discussions are reported in Section 5. Conclusions and scope of future works are stated in Section 6.

Literature on the retinal vessel extraction problem is quite rich. A noteworthy survey on blood vessel segmentation in retinal images can be found in [8].

Vessel extraction methods reported in the literature are broadly grouped into the following classes: pattern recognition techniques using supervised [9] and unsupervised classification [10,11], mathematical morphology based methods [12], vessel tracking/tracing methods [13] and matched filtering based techniques [14].

Different methods using back propagation algorithm with modified delta rule [15], principal component analysis (PCA) followed by neural networks [16], multilayer feed forward neural network for training and classification using gray-level and moment invariant-based features [9] are reported in the literature for vessel extraction using supervised learning. The main disadvantage of neural network based methods lies in training process to adjust the network weights by supervised learning with standard training data. First major problem is the need of large number of images. Not only that, for each image in the training set, vascular structure needs precisely marked by an ophthalmologist. As observed by Hoover et al. [17], there exists significant difference on the retinal vasculature marked by different experts.

Morphological operation is a powerful tool for extracting region and shape based features including boundaries, skeletons, convex hulls etc. using structural elements (SE) to the images under experimentation. In [18], morphological top-hat operation followed by fuzzy clustering is used for vessel extraction. A combination of morphological multiscale enhancement, fuzzy filter and watershed transformation has been used by Sun et al. [19]. Mendonca and Campilho [12] extracted vessel center lines using multiscale morphological reconstruction for vessel segmentation. However, this method suffers from the problem of under segmentation for some vessel segments and sometimes partial/complete missing of small vessels occurs. The main disadvantage in morphological operation as is used and benefited in matched filtering lies in lack of scope in exploiting the known vessel cross-sectional shape. Moreover, the length of the SE is very high which may cause difficulty to fit in the highly tortuous vessels.

Vessel tracking/tracing method reported in [13] segments a vessel between two points and instead of working on the entire vasculature they work at the level of a single vessel. Can et al. [20] described a real-time recursively tracking based algorithm for vessel extraction to produce the maximum response for an edge oriented in a particular direction. Delibasis et al. [13] described an automated model based tracing algorithm for vessel segmentation and diameter estimation. This method usually requires a starting point and an end point to be specified by the user. The method is not suitable for detecting the vessels or the vessel segments that have no seed point at all. Furthermore, if any bifurcation point is missed, some of the sub-trees remain undetected.

The widely used vessel extraction method is the matched filter (MF) based approach [14,21]. A two dimensional linear kernel is rotated and convolved on the retinal image. For each pixel, the highest response is selected which is then thresholded to extract the vessels. The widely used template for matched filtering is the Gaussian kernel which produces high response when matched to the vessels since the gray-level profiles of the cross-section of the blood vessels in retinal image are also Gaussian in nature. The other advantage is that retinal blood vessels can be approximated as piece-wise linear segments and the diameters of the vessels decrease along their length. It can also extract retinal vasculature even from a noisy image as it is optimal in nature in presence of noise. Since the MF kernel is rotated in all possible directions and is convolved with the image under consideration, it can easily track the different orientations of the diverse types of vessels. Performance of MF based approaches depend to a large extent on the appropriate pre-processing technique(s) used. This leads to feature enhancement of retinal images. Various wavelet and its variants are found to be efficient for pre-processing operation. One such operation is curvelet transform and morphological operation as reported in [22] and curvelet transform followed by matched filtering in [23].

An automatic and accurate blood vessel extraction method, in general, should posses the ability to handle noise (denoising) cleaning, enhancement of thin vessels and also to highlight distinction of various types of vessels. To this aim, an integrated vessel extraction method is suggested with the following contributions:
                           
                              •
                              An integrated scheme is proposed in this work that uses curvelet transform for image denoising and edge enhancement. Curvelet transform not only removes noise but also intensifies the thin and the weak vessels and highlights the missing and the imprecise edge details. For edge enhancement, the image is decomposed into a number of subbands using curvelet transform. The approximate subband is completely suppressed and the detailed subbands are intensified multiplying by some amplification factor.

To remove the OD, the edge enhanced image is first opened by a disk shaped SE which is then subtracted from the inverted histogram equalized image. The poor dynamic range of the subtracted image is enhanced through contrast stretching using the gamma (γ) law transformations function with γ=0.85.

MF with proper Gaussian profile is applied on the spatial domain to intensify the response against the various types of blood vessels. The output then undergoes KFCM to detect the vessel pixels from the maximum MFR of both the vessel and the non-vessel pixels.

For abnormal retinal images that contain different pathological signs, to distinguish vessels from different non-vascular patterns like bright blobs, red lesions etc. a pair of filters, the zero mean Gaussian filter (i.e. the MF) and the Laplacian of Gaussian (LoG) filter are used which then undergo KFCM based classification. To the best of our knowledge, the application of LoG filter and KFCM for retinal blood vessel extraction is not reported earlier. The novelty of the proposed method lies in the concept of multiple threshold using KFCM. Once the vessels are detected, the proposed method categorizes the extracted vessels into the thick, the medium and the thin vessels.

Extensive simulation results are shown to highlight the efficiency of the proposed method with respect to the several existing methods. Improved performance is supported by high true positive rate and low false positive rate for different image databases.

This section briefly presents various tools, techniques and different performance matrices used in this work.

The basic concept of curvelet transform, as proposed by Donoho and Duncan [24], is to decompose the entire image into a number of subbands, i.e. to separate the object into a series of disjoint scales. Unlike the wavelets which are specified by two parameters, scale and translation (location), curvelet is a geometric multiscale transform that is indexed by scale, orientation and location, respectively. A curvelet transform can be specified mathematically as 
                           
                              
                                 Ψ
                              
                              
                                 i
                                 ,
                                 j
                                 ,
                                 k
                              
                           
                           (
                           x
                           )
                           =
                           
                              
                                 Ψ
                              
                              
                                 j
                              
                           
                           (
                           
                              
                                 R
                              
                              
                                 
                                    
                                       0
                                    
                                    
                                       j
                                       ,
                                       l
                                    
                                 
                              
                           
                           (
                           x
                           −
                           
                              
                                 x
                              
                              
                                 k
                              
                           
                           (
                           j
                           ,
                           l
                           )
                           )
                           )
                         where 
                           x
                           =
                           (
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           )
                           ∈
                           
                              
                                 R
                              
                              
                                 2
                              
                           
                        . The term 
                           μ
                           =
                           (
                           j
                           ,
                           l
                           ,
                           k
                           )
                        , the triple index, represents the curvelet coefficients 
                           
                              
                                 C
                              
                              
                                 μ
                              
                           
                           (
                           f
                           )
                           =
                           〈
                           f
                           ,
                           
                              
                                 Ψ
                              
                              
                                 μ
                              
                           
                           〉
                        . Computation cost associated with the forward and the inverse wavelet transform is 
                           O
                           (
                           
                              
                                 N
                              
                              
                                 2
                              
                           
                           
                           log
                           
                           N
                           )
                         for an 
                           N
                           ×
                           N
                         image. The Fast Discrete Curvelet Transform (FDCT) can be implemented in the following two ways:
                           
                              (i)
                              Unequally spaced Fast Fourier transforms (USFFT),

Wrapping function.

The wrapping based FDCT algorithm is used in this work since it is faster and more efficient than USFFT. In this method, the Fourier plane is divided into a number of concentric circles, referred to as scale; each of these concentric circles is again divided into a number of angular divisions, referred to as the orientation. This combination of the scale and the angular division is known as parabolic wedges. Next to find out the curvelet coefficients, inverse FFT is taken on each scale and angle.

Vessel detection using matched filtering considers the fact that the gray-level profiles of the cross-section of retinal blood vessels are Gaussian in nature. It is also assumed that the intensity profile is symmetric about the straight line that passes through the center of the vessel [14]. A two dimensional prototype MF kernel may be mathematically expressed as
                           
                              (1)
                              
                                 K
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 −
                                 
                                    
                                       1
                                    
                                    
                                       σ
                                       
                                          
                                             2
                                             π
                                          
                                       
                                    
                                 
                                 exp
                                 (
                                 −
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 /
                                 2
                                 
                                    
                                       σ
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 ,
                                 
                                 for
                                 
                                 
                                 |
                                 x
                                 |
                                 ≤
                                 (
                                 3
                                 σ
                                 )
                                 
                                 and
                                 
                                 |
                                 y
                                 |
                                 ≤
                                 (
                                 L
                                 /
                                 2
                                 )
                              
                           
                        Here ‘σ’ is the scale of the Gaussian function, ‘L’ is the length of the blood vessel segment considered to have fixed orientation. The negative sign implies that the background is brighter than the vessels.

Along with the vessels, pathological images are rich with different non-vascular structures such as bright lesions, exudates, and step and ramp like transient components. For all such images, if the maximum MFR values are directly applied for KFCM based classification, these spurious components are erroneously detected as vessels due to their high MFR. To distinguish between the vessel and the non-vessel structures specially for the abnormal images, in addition to MF, negative LoG filter which is the 2nd order derivative of Gaussian is also applied. This justification is due to the asymmetric nature in non-vascular structures and can be modeled as step or ramp functions. LoG filter gives zero response to uniform intensity region. However, when there is a variation in the intensity, it gives positive response on the darker side and negative response on the lighter side. Therefore, at a sharp intensity transition the LoG response contains zero crossing about it׳s center. This property of the LoG response is utilized to distinguish the transient like non-vessel structures from the vessels. The LoG filter kernel which is the second order derivative of the MF kernel can be mathematically expressed as
                           
                              (2)
                              
                                 R
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       σ
                                       
                                          
                                             2
                                             π
                                          
                                       
                                    
                                 
                                 (
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             
                                                σ
                                             
                                             
                                                4
                                             
                                          
                                       
                                    
                                 
                                 )
                                 exp
                                 (
                                 
                                    −
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 )
                                 
                                 ∀
                                 |
                                 x
                                 |
                                 ≤
                                 3
                                 σ
                                 ,
                                 
                                 |
                                 y
                                 |
                                 ≤
                                 L
                                 /
                                 2
                              
                           
                        Here also ‘L’ represents the length for which the vessels are assumed to have fixed orientation and ‘σ’ is the spread of the Gaussian curve.


                        Fig. 1
                         shows the response of Gaussian, step and ramp functions to the MF and negative LoG filter. Fig. 1(a), (b) and (c) show the plot of a Gaussian function, an ideal step edge and an ideal ramp edge, respectively. Fig. 1(d) shows the MF impulse response in one dimension and response of the Gaussian function, the step edge and the ramp edge to MF are shown in Fig. 1(e), (f) and (g), respectively. The one dimensional negative LoG and its response to the Gaussian function, the step edge and the ramp edge are shown in Fig. 1(h), (i), (j) and (k), respectively. It is clear from the figure that the MF gives high response to both the vessels and the typical non-vessel structures. On the other hand, LoG filter gives high response to symmetric vessel structures and zero response about the center to the asymmetric non-vessel structures due to it׳s zero crossing property.

KFCM maps the low dimensional input space to high dimensional feature space through a nonlinear mapping [7]. Let us define a nonlinear map 
                           Φ
                           :
                           x
                           ∈
                           X
                           ⊆
                           
                              
                                 R
                              
                              
                                 d
                              
                           
                           →
                           Φ
                           (
                           x
                           )
                           ∈
                           F
                           ⊆
                           
                              
                                 R
                              
                              
                                 H
                              
                           
                           (
                           d
                           ⪡
                           H
                           )
                         where X is the original data space and F is the transformed high dimensional feature space. Since direct computation in the feature space is complex, kernel functions are used for this purpose. If μ
                        
                           ij
                         is the membership of the ith element to the jth cluster and 
                           
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 →
                              
                           
                         is the jth cluster center, the objective function of KFCM can be expressed as
                           
                              (3)
                              
                                 
                                    
                                       J
                                    
                                    
                                       m
                                    
                                    
                                       Φ
                                    
                                 
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       c
                                    
                                 
                                 
                                    
                                       μ
                                    
                                    
                                       ij
                                    
                                    
                                       m
                                    
                                 
                                 ∥
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 −
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 
                                    
                                       ∥
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        The 2nd term of Eq. (3) can be expressed as
                           
                              (4)
                              
                                 ∥
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 −
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 
                                    
                                       ∥
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       (
                                       Φ
                                       (
                                       
                                          
                                             
                                                
                                                   X
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       )
                                       −
                                       Φ
                                       (
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       )
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 −
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 )
                                 =
                                 Φ
                                 
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   X
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 −
                                 Φ
                                 
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 −
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             
                                                
                                                   X
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                    
                                    
                                       T
                                    
                                 
                                 )
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 +
                                 Φ
                                 
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 =
                                 K
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 +
                                 K
                                 (
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 −
                                 2
                                 K
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                              
                           
                        The Gaussian kernel or the Radial Basis Function (RBF) used in this paper can mathematically be expressed as
                           
                              (5)
                              
                                 K
                                 (
                                 
                                    
                                       X
                                    
                                    
                                       →
                                    
                                 
                                 ,
                                 
                                    
                                       Y
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 =
                                 exp
                                 (
                                 
                                    −
                                    
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         j
                                                         =
                                                         1
                                                      
                                                      
                                                         d
                                                      
                                                   
                                                   |
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   −
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   
                                                      
                                                         |
                                                      
                                                      
                                                         a
                                                      
                                                   
                                                
                                                )
                                             
                                             
                                                b
                                             
                                          
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 )
                              
                           
                        where 
                           a
                           ≥
                           0
                        , 
                           1
                           ≤
                           b
                           ≤
                           2
                         and 
                           s
                           >
                           0
                         are constants. Here, 
                           K
                           (
                           
                              
                                 X
                              
                              
                                 →
                              
                           
                           ,
                           
                              
                                 X
                              
                              
                                 →
                              
                           
                           )
                           =
                           1
                         for all 
                           
                              
                                 X
                              
                              
                                 →
                              
                           
                        . Euclidean distance between the two sample points 
                           
                              
                                 
                                    
                                       X
                                    
                                    
                                       i
                                    
                                 
                              
                              
                                 →
                              
                           
                         and 
                           
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 →
                              
                           
                         in the feature space is given by,
                           
                              (6)
                              
                                 
                                    
                                       d
                                    
                                    
                                       Φ
                                    
                                 
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 =
                                 ∥
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 −
                                 Φ
                                 (
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 
                                    
                                       ∥
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 2
                                 (
                                 1
                                 −
                                 K
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 )
                              
                           
                        Now Eq. (3) can be represented as
                           
                              (7)
                              
                                 
                                    
                                       J
                                    
                                    
                                       m
                                    
                                    
                                       Φ
                                    
                                 
                                 =
                                 2
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       c
                                    
                                 
                                 
                                    
                                       μ
                                    
                                    
                                       ij
                                    
                                    
                                       m
                                    
                                 
                                 (
                                 1
                                 −
                                 K
                                 (
                                 
                                    
                                       
                                          
                                             X
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 )
                                 )
                              
                           
                        
                     

The expressions for 
                           
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 →
                              
                           
                         and μ
                        
                           ij
                         are obtained by differentiating the objective function as described in Eq. (7) with respect to 
                           
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 →
                              
                           
                         (keeping μ
                        
                           ij
                         constant) and with respect to μ
                        
                           ij
                         (keeping 
                           
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 →
                              
                           
                         as constant) followed by equating them to zero (zero vector). This leads to the expressions of 
                           
                              
                                 
                                    
                                       V
                                    
                                    
                                       j
                                    
                                 
                              
                              
                                 →
                              
                           
                         and μ
                        
                           ij
                         as
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             j
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             μ
                                          
                                          
                                             ij
                                          
                                          
                                             m
                                          
                                       
                                       K
                                       (
                                       
                                          
                                             
                                                
                                                   X
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       ,
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                             
                                             )
                                          
                                          
                                             →
                                          
                                       
                                       
                                          
                                             
                                                
                                                   X
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             μ
                                          
                                          
                                             ij
                                          
                                          
                                             m
                                          
                                       
                                       K
                                       (
                                       
                                          
                                             
                                                
                                                   X
                                                
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       ,
                                       
                                          
                                             
                                                
                                                   V
                                                
                                                
                                                   j
                                                
                                             
                                          
                                          
                                             →
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       ij
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             (
                                             1
                                             −
                                             K
                                             (
                                             
                                                
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   →
                                                
                                             
                                             ,
                                             
                                                
                                                   
                                                      
                                                         V
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                                
                                                   →
                                                
                                             
                                             )
                                             )
                                          
                                          
                                             −
                                             1
                                             /
                                             (
                                             m
                                             −
                                             1
                                             )
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             l
                                             =
                                             1
                                          
                                          
                                             c
                                          
                                       
                                       (
                                       1
                                       −
                                       K
                                       
                                          
                                             (
                                             
                                                
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   →
                                                
                                             
                                             ,
                                             
                                                
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                
                                                
                                                   →
                                                
                                             
                                             )
                                          
                                          
                                             −
                                             1
                                             /
                                             (
                                             m
                                             −
                                             1
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        Here the parameter 
                           m
                           
                           (
                           m
                           >
                           1
                           )
                         controls the amount of fuzziness of the resulting partition.

This subsection presents the different performance metrics used for contrast enhancement and vessel extraction.

To evaluate contrast enhancement using curvelet transform, Mean Structural Similarity Measure (M
                           
                              SSIM
                           ), Peak-Signal-to-Noise-Ratio (PSNR) and contrast improvement index (CII) [22] are used.

1. To calculate structural similarity measure (SSIM), the image is decomposed into K blocks of size 
                              n
                              ×
                              n
                            and then SSIM is calculated as follows:
                              
                                 (10)
                                 
                                    SSIM
                                    =
                                    
                                       
                                          (
                                          2
                                          
                                             
                                                x
                                             
                                             
                                                ¯
                                             
                                          
                                          
                                          
                                             
                                                y
                                             
                                             
                                                ¯
                                             
                                          
                                          +
                                          
                                             
                                                C
                                             
                                             
                                                1
                                             
                                          
                                          )
                                          (
                                          2
                                          
                                             
                                                σ
                                             
                                             
                                                xy
                                             
                                          
                                          +
                                          
                                             
                                                C
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       
                                          (
                                          
                                             
                                                σ
                                             
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                σ
                                             
                                             
                                                y
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                C
                                             
                                             
                                                2
                                             
                                          
                                          )
                                          (
                                          
                                             
                                                (
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      ¯
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                (
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      ¯
                                                   
                                                
                                                )
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                C
                                             
                                             
                                                1
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    x
                                 
                                 
                                    ¯
                                 
                              
                            and 
                              
                                 
                                    y
                                 
                                 
                                    ¯
                                 
                              
                            are the mean values, σ stands for the standard deviation in the original and the enhanced blocks and σ
                           
                              xy
                            corresponds to the covariance measure of the pixel intensities. The values of C
                           1 and C
                           2 are chosen to be 
                              
                                 
                                    C
                                 
                                 
                                    1
                                 
                              
                              =
                              
                                 
                                    (
                                    0.01
                                    ×
                                    255
                                    )
                                 
                                 
                                    2
                                 
                              
                            and 
                              
                                 
                                    C
                                 
                                 
                                    2
                                 
                              
                              =
                              
                                 
                                    (
                                    0.03
                                    ×
                                    255
                                    )
                                 
                                 
                                    2
                                 
                              
                           . The M
                           
                              SSIM
                            is obtained by taking the average of SSIM over all the image blocks.

2. For an image I of size 
                              M
                              ×
                              N
                           , PSNR can be computed as
                              
                                 (11)
                                 
                                    PSNR
                                    =
                                    10
                                    
                                    
                                       
                                          log
                                       
                                       
                                          10
                                       
                                    
                                    (
                                    
                                       
                                          
                                             
                                                
                                                   MAX
                                                
                                                
                                                   I
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             MSE
                                          
                                       
                                    
                                    )
                                 
                              
                           where MAX
                           
                              I
                            is the maximum intensity value of the image. MSE is the mean squared error and can be computed as
                              
                                 (12)
                                 
                                    MSE
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          MN
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          m
                                          =
                                          1
                                       
                                       
                                          M
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          n
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    ∥
                                    I
                                    (
                                    m
                                    ,
                                    n
                                    )
                                    −
                                    
                                       
                                          I
                                       
                                       
                                          e
                                       
                                    
                                    (
                                    m
                                    ,
                                    n
                                    )
                                    
                                       
                                          ∥
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           Here I
                           
                              e
                            represents the enhanced image.

3. Another measure for contrast enhancement is the contrast improvement index (CII) which is given as
                              
                                 (13)
                                 
                                    CII
                                    =
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                enhanced
                                             
                                          
                                       
                                       
                                          
                                             
                                                C
                                             
                                             
                                                original
                                             
                                          
                                       
                                    
                                 
                              
                           where C
                           
                              enhanced
                            and C
                           
                              original
                            are the contrast of the original and the enhanced image, respectively. The contrast C of an image can be defined as
                              
                                 (14)
                                 
                                    C
                                    =
                                    
                                       
                                          r
                                          −
                                          b
                                       
                                       
                                          r
                                          +
                                          b
                                       
                                    
                                 
                              
                           where r and b represent the mean gray level value of the foreground and the background, respectively.

Performance of vessel extraction is quantified by three matrices, namely True Positive Rate (TPR), False positive Rate (FPR) and Detection Accuracy (ACC). True Positive (TP) and True Negative (TN) indicate the number of pixels correctly classified as vessel and background pixels, respectively and False Positive (FP) and False Negative (FN) indicate the number of pixels erroneously detected as vessel and background pixels, respectively. TPR, FPR and ACC can be described as follows:
                              
                                 (15)
                                 
                                    TPR
                                    =
                                    
                                       
                                          TP
                                       
                                       
                                          TP
                                          +
                                          FN
                                       
                                    
                                 
                              
                           
                           
                              
                                 (16)
                                 
                                    FPR
                                    =
                                    
                                       
                                          FP
                                       
                                       
                                          FP
                                          +
                                          TN
                                       
                                    
                                 
                              
                           
                           
                              
                                 (17)
                                 
                                    ACC
                                    =
                                    
                                       
                                          TP
                                          +
                                          TN
                                       
                                       
                                          TP
                                          +
                                          FP
                                          +
                                          TN
                                          +
                                          FN
                                       
                                    
                                 
                              
                           
                        

Performance evaluation also includes sensitivity (normalized measure of TPs) and specificity expressed as
                              
                                 (18)
                                 
                                    Sensitivity
                                    =
                                    
                                       
                                          TP
                                       
                                       
                                          TP
                                          +
                                          FN
                                       
                                    
                                    =
                                    TPR
                                 
                              
                           
                           
                              
                                 (19)
                                 
                                    Specificity
                                    =
                                    
                                       
                                          TN
                                       
                                       
                                          FP
                                          +
                                          TN
                                       
                                    
                                    =
                                    1
                                    −
                                    FPR
                                 
                              
                           
                        

@&#PROPOSED METHOD@&#

The schematic diagram of the proposed method for retinal blood vessel extraction is shown in Fig. 2
                      and is described in the following steps:


                     Step 1. Green channel extraction: The proposed method uses green color plane for vessel extraction since the contrast between the blood vessels and the background is the maximum for the green channel image [22].


                     Step 2. Image denoising and edge enhancement: Curvelet transform serves two purposes here; image denoising and edge enhancement. Image denoising in curvelet domain [25] assumes that the image 
                        f
                        (
                        i
                        ,
                        j
                        )
                      under consideration is contaminated with zero mean white Gaussian noise 
                        
                           
                              n
                           
                           
                              i
                              ,
                              j
                           
                        
                      with known standard deviation s. The expression of such noisy image 
                        
                           
                              x
                           
                           
                              i
                              ,
                              j
                           
                        
                      is given by,
                        
                           (20)
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              =
                              f
                              (
                              i
                              ,
                              j
                              )
                              +
                              s
                              
                              
                                 
                                    n
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                        
                     
                  

(a) Image denoising: For denoising, the retinal image is decomposed into a number of subbands using curvelet transform with different scales and orientations. Noise is then suppressed by hard thresholding of the curvelet coefficients as expressed in the following equation:
                        
                           (21)
                           
                              
                                 
                                    
                                       
                                          L
                                       
                                       
                                          λ
                                       
                                    
                                 
                                 
                                    ^
                                 
                              
                              =
                              {
                              
                                 
                                    
                                       
                                          
                                             
                                                L
                                             
                                             
                                                λ
                                             
                                          
                                       
                                       
                                          if
                                          
                                          |
                                          
                                             
                                                L
                                             
                                             
                                                λ
                                             
                                          
                                          |
                                          /
                                          s
                                          >
                                          
                                             
                                                ks
                                             
                                             
                                                jl
                                             
                                          
                                       
                                    
                                    
                                       
                                          0
                                       
                                       
                                          otherweise
                                       
                                    
                                 
                              
                           
                        
                     Here, 
                        
                           
                              
                                 
                                    L
                                 
                                 
                                    λ
                                 
                              
                           
                           
                              ^
                           
                        
                      is the estimated curvelet coefficient after denoising, 
                        
                           
                              L
                           
                           
                              λ
                           
                        
                      is the original curvelet coefficient and s
                     
                        jl
                      represents the noise variance of the coefficients at scale j and angle l. The value of s
                     
                        jl
                      can be obtained by exact computation of the norm of each individual curvelet coefficient. However, 
                        
                           
                              
                                 
                                    L
                                 
                                 
                                    λ
                                 
                              
                           
                           
                              ^
                           
                        
                        =
                        
                           
                              L
                           
                           
                              λ
                           
                        
                      for image with s=0. The value of k depends on scale. The value of k=3 is used for the finest scale, i.e. for j=1 and k=4 for 
                        j
                        >
                        1
                     .

(b) Edge enhancement: For edge enhancement, the approximate subband i.e. the coefficients corresponding to the coarse approximation of the image are set to zero and the remaining subbands are multiplied by some amplification factor ‘α’. Consequently, the background gets suppressed whereas the detailed edges are highlighted. The inverse curvelet transform is computed and is superimposed on the original image. This in turn increases the contrast, specially between the thin, the tiny, the faint vessels and the background. This is reflected by the results in Fig. 3
                     .


                     Step 3. OD removal: Since matched filtering erroneously detects the OD boundary as vessels, suppression of OD is necessary prior to matched filtering. Existing literature find wide use of morphological operations for OD removal [8]. This work also follows the same concept for its simplicity yet shows improved performance. The following steps are used to remove the OD:

(i) The contrast limited adaptive histogram equalization (CLAHE) [26] of the edge enhanced image is first done by dividing the image into non-overlapping regions of equal size called tiles. The histogram equalization for each tile is performed and the tiles in the neighborhood are then combined using bi-linear interpolation to eliminate the artificially induced boundaries.

(ii) An inverted CLAHE image is then computed by subtracting each pixel value from 255, the maximum gray level value.

(iii) Opening is done using a disk shaped SE with radius=5. This smooths the background, highlights the OD and eliminates objects smaller in size than the SE. This is then subtracted from the inverted CLAHE image obtained in (ii). This operation brings back the vessels removed by morphological opening. It may apparently seem that some of the thin vessels within the OD region may be lost due to this subtraction operation. However, before OD removal since the image is enhanced by multiplying the detailed subbands by some amplification factor, even after the subtraction operation it can track the vessels in the OD region.

(iv) The poor dynamic range of the subtracted image is enhanced through contrast stretching using the gamma (γ) law transformations function with some suitable γ value.

Different stepwise performance for OD removal have been diagrammatically presented in Fig. 4
                     .


                     Step 4. Matched filtering: Next a Gaussian kernel is rotated at 12° incremental angle and is convolved with the image under consideration. The corresponding MFR is observed each time. From the set of 15 MFR values, for each pixel, only the maximum one is retained. Since the exact width of the vessels are not known a priori, the scale of the Gaussian filter may not perfectly match with all the vessels in retina. Therefore, in this paper, for extracting the thick and the thin vessels, multi-scale matched filtering, i.e. larger σ for thick vessels and smaller σ for thin vessels are used.


                     Step 5. Laplacian of Gaussian filtering: MF produces high response not only to symmetric vessel structures but also to asymmetric non-vessel structures (bright lesions, exudates etc.) of pathological images. Therefore, in addition to MF, LoG filter is also applied to such abnormal images (specially for STARE and DIARETDB1 databases which contain a number of pathological images). LoG filtering produces high response for vessels but low response to non-vessels. Similar to MF operation, the LoG filter kernel is also rotated at 12° incremental angle and the negative LoG filter is convolved with the image under consideration. For every pixel, only the maximum LoG response is selected. To extract the vessels of different widths, LoG operation is done with multiple σ values. For abnormal images, the dataspace for KFCM based classification is then formed by considering the maximum MFRs for the pixels that have strong response for both MF and LoG and the maximum LoG responses for the pixels that have strong response for MF but low response for LoG or vice-versa. However, for healthy (normal) images the maximum MFR values are sufficient for KFCM based classification.


                     Step 6. Application of KFCM: Retinal images contain blood vessels of different widths. They can be categorized as the thick, the medium and the thin vessels based on the width. Accordingly the maximum MFR is the highest for the thick vessels and it becomes gradually lower for the medium and the thin vessels. The maximum MFR is the lowest for the non-vessel pixels. The maximum MFRs of the non-vessels and the vessels are not linearly separable in the original input space. An optimal threshold that can partition these data points effectively is very difficult to find. KFCM transforms the low dimensional input space into high dimensional feature space through non-linear mapping where the data points are linearly separable. KFCM classifies the maximum MFRs into four classes, namely the background, the thin, the medium and the thick vessels. According to the KFCM algorithm, each and every pixel of the image must have a finite membership in all the four classes. Out of the four classes a pixel is classified in a particular class for which the membership value of its maximum MFR is found to be the highest. The entire vessel map is obtained by logical OR fusion of the thin, the medium and the thick vessels.


                     Step 7. Post processing: The maximum MFR of both the thin vessels and the non-vessels are very low. As a result, some of the non-vessels may be erroneously interpreted as vessel pixels during segmentation using KFCM that needs some kind of post processing operation.

(i) Connected component analysis and area thresholding: After vessel extraction, 8 connectivity rule is used to estimate all the connected components from the extracted vessel tree. Next the connected components above a specific area (threshold value that is determined experimentally) are considered as vessels. The remaining pixels are considered as non-vessel pixels and are discarded from the vessel map. Consequently, the false edges are separated from the original vessel edges efficiently that in turn reduces the FPR.

(ii) Morphological bridging: Small gaps may be present in the extracted vascular structure that are not connected to the original vessel network. Some of the extracted retinal vessels may be broken due to discontinuous intensity. This may be taken care through iterative morphological bridging. This in turn has the effect of increasing the TPR keeping the value of FPR unchanged.

The effect of the post processing operation can be visualized from Fig. 5
                     (a) and (b). It is observed from Fig. 5(b) that due to bridging operation, the small gaps between the broken vessel segments are fused with vessel pixels.

This section presents the performance results of the proposed method.

To evaluate and compare performance of the proposed method with the existing algorithms this paper uses three publicly available benchmark databases, namely the DRIVE, the STARE and the DIARETDB1 database. DRIVE database contains 40 colored retinal images of size 565×584 pixels with 8 bits per color channel in TIFF format arranged into two sets: a test set and a training set. The results of the manual segmentation/ground truth are also available for all the images of the two sets. STARE database, originally collected by Hoover et al. [4] contains 20 images of size 700×605 with 8 bits on individual color channel. Manually segmented images are available for this database also. DIARETDB1 database consists of 89 retinal images of which 84 contain signs of the diabetic retinopathy and 5 are considered as normal. However, manually segmented retinal vasculature is not available for this database.

Implementation of the proposed method is done first by extracting the green channel from the noisy RGB image followed by curvelet based denoising. The source code for curvelet transform available in [27] is used for denoising and edge enhancement. Experiments over a set of large number of images of various databases show that the vessel structure can be extracted efficiently by multiplying the detailed subbands with 
                           α
                           >
                           1
                         for the low contrast retinal images. Again, if the value of α is too high, it amplifies not only the edges of the thick and the thin vessels but also emphasizes the noise pixels which in turn increases the values of FPR. Simulations over a number of images show that multiplying the detailed subband coefficients by 2, i.e. with 
                           α
                           =
                           2
                        , the proposed method produces satisfactory results without enhancing much the effect of noise. The radius (R) of the disc shaped SE for OD detection is selected to be 6.

For vessel extraction, the Gaussian kernel is rotated at an incremental angle of 12° that produces a set of 15 MFR values. Since the retinal image contains diverse types of vessels of different widths, matched filtering with multiple σ values rather than single σ value expects to produce improved results. Gray level profile of the cross-section of the blood vessels are assumed to be Gaussian in nature. MF template used being Gaussian, MFR due to large σ corresponds to the thick vessels and are relatively higher than MFRs for low σ. Similarly, the MFR of the thin vessels with low σ yield higher values for the template than their MFR values with high σ. Therefore, for each pixel, the maximum one out of the two sets of MFR values (one with large σ and the other with low σ) are chosen which then undergo KFCM based classification.

The vessel extraction method suggested here depends on a number of parameters. The parameters ‘α’ for edge enhancement and ‘R’ for OD removal are fixed for all the databases. The values of ‘σ’ and ‘L’ for vessel extraction are fixed for one database, however, vary from one database to another. The different parameters used for vessel extraction for DRIVE and STARE databases are shown in Table 1
                        . Simulations done over a number of images of both the DRIVE and the STARE database ensure that the values chosen are found to be appropriate for identifying the diverse types of vessel structures. Since the vessel extraction problem in this work is analyzed in multiple threshold framework and two different ‘σ’ values are used to find MFR, simulation results show that the algorithm withstands a 10% deviation in the value without change in TPR, FPR and ACC values. Similar is the case for the choice of the ‘L’ value. Since the parameters used are not calculated optimally and the values are selected from results over a large set of image, change in the values within a certain range does not affect much on performance.

Quantitative validation of the contrast enhancement using curvelet transform is reported here using M
                        
                           SSIM
                        , PSNR and CII values. The average values of PSNR (in dB), M
                        
                           SSIM
                         and CII tested over all the images of DRIVE, STARE and DIARETDB1 database are reported in Table 2
                        . Relatively high values of PSNR, M
                        
                           SSIM
                         and CII highlight the effectiveness of curvelet based image enhancement of the retinal image. This in turn produces distinct output discontinuities at the curvatures, the contours, the missing and the imprecise edge boundaries.

The vessel extraction results by the proposed method for DRIVE and STARE databases are presented in Figs. 6 and 7
                        
                        , respectively. For the DRIVE database the original retinal image, the curvelet based enhanced and the extracted vessel map by the proposed method are shown in 1st, 2nd and 3rd row of Fig. 6, respectively. The first two images of the 4th row represents the vessel extraction results using graph cut method [2], the 3rd image is the result of MF operation followed by first order derivative of Gaussian [21] and the last two images represent the extracted vessel structure by Gabor filtering [28]. The hand labeled ground truth is presented in the bottom row of Fig. 6. Comparing the results shown in the 3rd and 4th rows with the manually segmented images, it is observed that the existing methods fail to extract many thin vessels and include spurious components as component of vessel. The proposed method, under the similar situations, outperforms in detecting the small vessels and remove the false detections accurately. The original retinal image, the curvelet based enhancement and the extracted vessel map by the proposed method for the STARE database are shown in 1st, 2nd and 3rd rows of Fig. 7, respectively. The vessel extraction results of [2] (1st two images) and [21] (next three images), respectively are presented in the 4th row of the same figure. The hand labeled ground truth is presented in the bottom row of Fig. 7. It may be mentioned here that the 1st two images of the top row of Fig. 7 are normal images whereas the next three images are the abnormal images with symptoms of background DR, choroidal neovascularization and central retinal artery occlusion, respectively. For both the normal and the unhealthy images the proposed method extracts a number of tiny vessels efficiently that the method in [2] and [21] fail to detect. The vessel extraction results of DIARETDB1 database are presented in Fig. 8
                        .

Some vessel extraction schemes like [6,21], due to high MFR detect the OD boundary as extracted vessels. This in turn increases the FPR value and consequently ACC value decreases. This problem can be overcome by OD elimination. The results of vessel extraction without and with OD removal are demonstrated for the images ‘01_test.tif’ and ‘16_test.tif’ of DRIVE database in Fig. 9
                        . The effect of OD removal on TPR, FPR and ACC has been illustrated for some sample images of DRIVE database in Table 3
                        . Numerical values show that poor OD removal increases the average FPR value by 17.11% and decreases the overall segmentation/extraction ACC by 0.94%.


                        Table 4
                         presents a performance comparison results through the calculated values of TPR, FPR and average ACC obtained with some state-of-the-art vessel extraction results on the test image set of the DRIVE database. The average values of TPR and FPR obtained using the proposed method are 0.7548 and 0.0208, respectively which indicate significant improvement in vessel extraction results by the proposed method compared to the existing techniques. With an average ACC=0.9616, the proposed method outperforms the state-of-the-art methods. Table 5
                         presents the experimental results for both the normal and the pathological images of STARE database. The average values of TPR, FPR and average ACC obtained using the proposed method are 0.7577, 0.0212 and 0.9730, respectively for the normal images of the STARE database and 0.7549, 0.0301 and 0.9741, respectively for the abnormal images of the STARE database.

Receiver Operating Characteristics (ROC) curves for DRIVE and STARE databases are shown in Figs. 10 and 11
                        
                        , respectively. ROC shows a plot of the TPR against the FPR obtained by varying the threshold values. It is clear that the area under the ROC curve (AUC) equals to “1” represents perfect matching of the extracted vessel structure with the ground truth. The more closer the area under the ROC curve to “1”, the more accurate is the vessel extraction result. The AUC value is 0.9666 and 0.9684 for DRIVE and STARE databases, respectively. This ensures high detection accuracy of the proposed method compared to the other methods. The sharp slopes on the ROC curves for both the image databases indicate that proposed algorithm yields the high TPR value while the FPR value is also low. This validates that the present method produces the large number of correctly classified vessel pixels at low value of false detection.

Furthermore, along with this performance improvement, the proposed method separately detects the thin, the medium and the thick vessel classes as shown in Fig. 12
                         for one sample image from DRIVE and STARE databases. Accurate classification of different vessel types highly depends on the clustering of the MFR values, failing to which may lead to misclassification of the thick, the medium and the thin vessels. KFCM does this accurate classification through non-linear mapping.

Additional simulations have also been performed to check the efficacy of the proposed method in presence of additive white Gaussian noise. To extract vessels from noisy images, first the image is denoised using curvelet based denoising followed by edge enhancement, matched filtering and KFCM based classification.

To evaluate noise reduction (by curvelet based denoising) the TPR, FPR, ACC values before and after denoising for different noise variances for DRIVE database are reported in Table 6
                        . Results demonstrate that the proposed method (with curvelet based denoising) extracts the vessels with 94.01% average ACC even when the noise variance=0.005, whereas the average ACC is only 90.33% for the case of without denoising. This supports the importance of curvelet based image denoising for vessel extraction performance improvement. Table 6 shows performance gain in denoising at different noise variance values. As expected, numerical values show that the PSNR value decreases as the noise variance is increased.

The test results at noise variance 0.005 are shown in Fig. 13
                         for the image ‘01_test’ of the DRIVE database. The original RGB image, the green channel image corrupted with zero mean white Gaussian noise of variance 0.005, the curvelet based denoised image, the edge enhanced image and the extracted vessel tree by the proposed method are shown in Fig. 13(a), (b), (c), (d) and (e), respectively. Results obtained for the proposed method are compared with the vessel extraction results using multi-scale line-tracking algorithm (MSLTA) and iterative line tracking algorithm (ILTA) reported by Vlachos and Dermatas [37] and are depicted in Fig. 13(f) and (g), respectively. The manually segmented ground-truth image is presented in Fig. 13(h). Comparing 13(e) and (f), it is observed that whereas the proposed method detects the vessels efficiently even in presence of noise, MSLTA detects only the thick vessels which are again corrupted with noise. ILTA (Fig. 13(g)) produces a large number of spurious components and is not effective in vessel extraction in presence of noise. In addition to that, both MSLTA and ILTA, detect the OD boundary which increases the value of FPR. The proposed method suppresses the OD efficiently and is very much effective and robust to noise for both the thick and the thin vessel extraction even in presence of noise.

Finally the variation in sensitivity, specificity and ACC with signal-to-noise ratio (SNR) are shown in Fig. 14
                        (a), (b) and (c), respectively and are compared with MSLTA and ILTA. The results demonstrate that the proposed method is robust in vessel detection even in presence of noise with an overall performance gain in terms of sensitivity and accuracy. The specificity of the proposed method is improved as compared to ILTA and almost similar to MSLTA. As expected with the decrease in SNR value there is a gradual decrease in the ACC value. Simulations are performed using MATLAB R2011b in a workstation with P-III 1.5GHz CPU and 512MB RAM which takes less than 13min to extract the complete vessel map. Execution time of the different steps of the proposed method are reported in Table 7
                        .

@&#DISCUSSION@&#

The present work aims to develop a generalized framework for vessel extraction from healthy and pathological retinal images. The main challenge is to extract blood vessels efficiently from noisy and poorly illuminated retinal images and to suppress the false response of the MF to the lesions and blobs that are often present in abnormal retinal images. In order to demonstrate the performance of the proposed method extensive simulation results are shown for both the healthy and pathological images of different benchmark databases and are compared with different other methods. The TPR, FPR and ACC values are reported in Tables 4 and 5 for DRIVE and STARE databases, respectively. It might have relevance to mention that the methods proposed in [9,11,29–31] are based on supervised techniques that generally depend on the training datasets. The classifier needs to be trained separately for each and every new dataset to obtain improved segmentation results. At a glance look on Table 5 shows that the combined effect of matched filtering and LoG filter offer improved performance in terms of TPR and average ACC among all other existing techniques for abnormal images of STARE database. For normal STARE images, the proposed method is very much competitive to the state-of-the-art techniques. However, the TPR value of the proposed method has a scope of improvement of 15.28% compared to [2].

This paper presents an automated method for blood vessel extraction from noisy retinal images. The main contributions of the present work is to design a complete system capable of extracting blood vessels from normal as well as noisy retinal images (both healthy and pathological) efficiently and the proposed scheme classifies the blood vessels into different categories using the concept of multiple thresholds. The curvelet transform offers the benefits of denoising as well as image enhancement. Matched filtering improves the vessels׳ response and LOG suppresses the false responses of MF to different lesions present in unhealthy retinal images. KFCM extracts different types of vessels specially from low contrast and non-uniformly illuminated images. Integration leads to the improved performance over the existing works for diverse types of vessels׳ extraction from noisy and poor-illuminated images. High M
                     
                        SSIM
                     , PSNR and CII values ensure the merits of using curvelet transform for edge as well as contrast of retinal images. As observed from the ROC curve, even at the low values of FPR, the values of TPR are very high which in turn increase the average ACC. From the extracted vascular patterns, gradation and identification of the different stages of PDR, detection of position of neovascularization, i.e., whether new vessels have grown on OD or elsewhere may be considered as possible extension of the current work.

None declared.

@&#REFERENCES@&#

