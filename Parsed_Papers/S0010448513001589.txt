@&#MAIN-TITLE@&#Optimizing polycube domain construction for hexahedral remeshing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An effective volumetric polycube parameterization algorithm.


                        
                        
                           
                           An automatic hexahedral mesh generation pipeline for general 3D models.


                        
                        
                           
                           A polycube domain optimization algorithm based on homotopic morphological operations.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Polycube parameterization

Volumetric parameterization

Hexahedral meshing

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

A Polycube is an orthogonal polyhedron (all the edges parallel to coordinate axes) that is a 3D manifold. A polycube parameterization is a bijective map between a 3D model and a polycube domain. The polycube domain shares the same topology with the model and approximates the geometry of the model. Hence, the polycube map can produce a seamless parameterization that has low metric distortions and regular atlas structure (i.e., each patch/part is a rectangle/cube). Such a parameterization is desirable in many geometric modeling and processing tasks such as spline construction  [1–3], meshing  [4–6], shape interpolation  [7], and texturing  [8]. This paper studies effective automatic polycube parameterization.

High-quality hexahedral (simply denoted as hex in the following) mesh generation has received much attention in recent years. Tessellating the given solid model using high-quality hex meshes is desirable for effective finite element analysis or isogeometric analysis in structural mechanics, fluid dynamics simulations, etc. Polycube parameterization can be used for automatic hex mesh generation. The basic idea is as follows. For a given solid shape 
                        M
                     , whose boundary surface is denoted as 
                        S
                     , first construct a polycube domain 
                        Ω
                      geometrically similar to 
                        M
                      and compute a map 
                        ϕ
                        :
                        Ω
                        →
                        M
                     ; then on 
                        Ω
                     , construct a uniform hexahedral mesh 
                        H
                     , and transform it by 
                        ϕ
                        
                           (
                           H
                           )
                        
                     . The resultant hex mesh 
                        ϕ
                        
                           (
                           H
                           )
                        
                      conforms with the geometry of 
                        M
                      and has regular tessellation. The meshing quality is dictated by the parameterization 
                        ϕ
                     . If 
                        ϕ
                      has smaller volume distortion, the resultant mesh is more uniform, and if 
                        ϕ
                      has smaller angle distortion, the mesh elements are less sheared.

Constructing a good polycube domain is critical in reducing mapping distortions. Earlier polycube parameterization methods built polycubes manually  [8,1], which can be labor-intensive and infeasible for complicated shapes. More recently, a few automatic polycube construction methods have been proposed  [9,5,6]. However, automatic, robust, yet effective polycube construction for general 3D models remains challenging (see Section  2). Specifically, a polycube domain having simpler structure and fewer corners usually provides a more desirable (e.g. fewer singularities in spline construction  [1] and mesh generation  [5,6]) parameterization. In contrast, composing a polycube domain via more subcubes may better approximate the original geometry and result in less distorted mapping. Hence, seeking an effective balance between these two aspects is important, but it was little explored.


                     Main contributions. This work aims to design an automatic and robust polycube parameterization framework for general solid regions/objects. We propose a novel and automatic polycube construction and optimization algorithm that balances domain complexity and its geometry similarity to the given model. We then develop a mapping computation algorithm upon this polycube domain to obtain a low-distortion volumetric parameterization for the given solid region/object. Compared with existing polycube methods, we can generate mappings with smaller distortion. This computational framework can also serve as an automatic hexahedral meshing tool that produces high-quality hex meshes.

@&#RELATED WORK@&#


                     Polycube construction and mapping. Polycube mapping was first introduced by Tarini et al.  [8] for seamless texture mapping, in which the polycube domain is constructed manually and the map is constructed by spatial projection followed by iterative relaxations of a deformation energy. Wang et al.  [1] introduced an intrinsic polycube mapping method using the conformal mapping, and resulted in a bijective map with small angle distortion; the polycube construction, however, is also manual. Xia et al.  [10] proposed an editable polycube mapping method which provides a semi-automatic user-controllable polycube construction and editing scheme. Lin et al.  [9] proposed a polycube construction algorithm using the Reeb graph. This method can automatically construct polycubes for models with simple topology and geometry. However, for models with complex geometry, their constructed domain can be too simple and has large deviation from the given model, resulting in low-quality mapping results. He et al.  [5] suggested a line-scanning strategy to construct the polycube nicely approximating the given model and produce nice hexahedral meshing results. This method, however, is sensitive to the object’s orientation and off-axis features and it often generates overly refined polycubes with many corner points. Gregson et al.  [6] proposed a rotation-driven deformation algorithm to construct polycubes by rotating surface normal to nearest coordinate axes. This approach generates polycube domain shapes with significantly fewer corner points. However, to remove topologically incorrect “wedges” regions generated in deformation, a non-trivial domain correction is necessary. The post-processing suggested in  [6] is not robust and could fail to produce a valid polycube on models with moderately complex geometric features. Wan et al.  [11] developed a polycube optimization algorithm to refine the polycube domain shape according to the stretch distortion of the final surface mapping. They construct an initial polycube through voxelization and the subsequent polycube optimization algorithm is formulated to only refine the polycube geometry without topology changing. In this paper, we propose a polycube construction and mapping algorithm to construct a polycube and optimize its domain shape, which balances the polycube shape’s complexity and its geometric similarity to the given model.


                     Volumetric parameterization. Volumetric parameterization has been studied recently in computer graphics and geometric modeling. Wang et al.  [12] computed the discrete volumetric harmonic mapping over tetrahedral meshes for volumetric mappings on solid spheres. Li et al.  [4,13] developed meshless methods using the fundamental solution method in computing harmonic and biharmonic volumetric maps. Martin et al.  [14] parameterized volumetric models onto cylinders using the finite element method, and later generalized the algorithm to more complicated models with medial surfaces  [15]. Nieser et al.  [16] proposed a cube-cover mapping algorithm for hexahedral meshing, and the mapping is guided by a user-designed frame field. Huang et al.  [17] designed a boundary-aligned 3D frame field optimization algorithm that can automatically generate a smooth frame field from a given surface frame field. But the resultant frame field is not guaranteed to be valid (to induce valid mapping). Li et al.  [18] solved singularity-restricted frame fields to fix the singularity errors in the direct rotational-symmetry solving. However, the generation of a valid cross-frame field (hence valid mapping) is not guaranteed.


                     Hexahedral meshing. High-quality hexahedral meshes benefit many numerical simulations and are preferred over the commonly used tetrahedral meshes in quite a few scientific tasks (see a survey in  [19]). Hex meshing algorithms can generally be categorized into three classes: spatial partitioning approaches, plastering approaches, and mapping-based approaches. In spatial partitioning approaches, the given model or the space it embeds is first decomposed into a set of cells which will then be projected or deformed to conform to the model’s boundary geometry. Marechal  [20] generated hex meshes through an octree-based method through dual mesh generation and buffer-layers’ insertion. Ito et al.  [21] developed a set of templates to optimize the octree-based hex meshing. A limitation of octree-based approaches is its pose-sensitivity. A small orientation change (e.g. rotation) of the object can lead to different meshing results. Levy and Liu  [22] introduced Lp centroidal tessellation to generate anisotropic hex-dominant meshes. Plastering algorithms usually start from the quadrilaterally meshed boundary, then propagate hexahedral elements toward the object center. Staten et al.  [23] used an unconstrained plastering to generate the hexahedral mesh. Zhang et al.  [24] developed hexahedral meshes based on a skeleton-driven sweeping algorithm. One disadvantage of plastering algorithms is that the growing process could finish with unmeshed region. Another issue is that the singularity configurations inside the hexahedral mesh may be very complicated. Mapping-based methods map the input model 
                        M
                      to a regular domain 
                        N
                     , then transfer the hexahedral grid (induced from 
                        N
                     ) back to 
                        M
                     . Finding a desirable regular domain is usually critical but as difficult as the computation of the lowly distorted map. Due to its natural regularity and geometric similarity to the model, the polycube can be a suitable canonical domain for hex mesh generation  [5,6]. Instead of using a fixed domain like the polycube, volumetric mappings can produce lowly distorted hex meshes by introducing singularity curves inside the domain  [16–18]. Challenges of these volumetric parameterizations in hexahedral meshing are that either the cross-frame fields need to be given manually  [16] or they need to be solved through expensive optimizations  [17,18] that cannot guarantee the finding of valid solutions.

Like the octree-based mesh generation algorithms, a polycube domain can be robustly generated through voxelization. However, such a polycube will be sensitive to orientation of the model, and will have overly zigzagged subparts for non-axis-aligned branches. Deforming non-axis-aligned branches to an axis-aligned part on a polycube will be desirable for simplifying the polycube structure and constructing lowly distorted maps. Inspired by  [6], we first deform a curved model into a geometrically regular shape whose branches are axis-aligned. This gives us a polyhedron that is geometrically close to a polycube, but topologically not necessarily correct (see Section  4 for details). Upon this axis-aligned polyhedron, we can apply the voxelization and get a desirable initial polycube construction. Furthermore, we apply a polycube domain shape optimization algorithm to optimize the polycube. This algorithm optimizes a tradeoff between the simplicity of the polycube structure and its geometric similarity to the given model. It helps improve the polycube mapping quality. Finally, upon the optimized polycube domain shape, we construct the volumetric parameterization of the given model. Our entire polycube maps have three steps.
                        
                           (1)
                           
                              Pre-deformation. To solve a deformation of the given model so that its surface normals align with coordinate axes and it deforms to a polyhedron geometrically close to a polycube. (Section  4)


                              Polycube construction and optimization. To obtain an initial polycube through voxelization, then optimize the polycube shape through some novel homotopic morphological operations. This is the main contribution of this paper (Section  5).


                              Mapping computation. To solve the volumetric mapping between the given volume and the polycube domain. (Section  6)

A polycube is aligned with coordinate axes but the given model is usually not. Automatic polycube construction is often sensitive to the orientation of the model or its branches. An example of the polycube construction  [5] that poorly handles non-axis-aligned branches is shown in Fig. 12(a), where the Bunny’s ears are approximated by zigzagged polycube branches with many corners.

The rotation-driven deformation guided by the surface normal, proposed by  [6], can effectively prevent constructing overly zigzagged polycubes. We recap its basic idea and refer readers to  [6] for details. (1) Cluster the surface 
                        S
                      into different regions following the normal distribution. Normals on vertices are classified based on their minimal rotations to axes 
                        ±
                        X
                        ,
                        ±
                        Y
                        ,
                        ±
                        Z
                     . (2) Then, use this minimal rotation to deform the surface so that the clustered normals align with their corresponding nearest axes. This reduces to solving a Poisson equation on each vertex 
                        i
                     : 
                        
                           
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    i
                                 
                              
                              −
                              
                                 
                                    1
                                 
                                 
                                    
                                       |
                                       
                                          
                                             N
                                          
                                          
                                             i
                                          
                                       
                                       |
                                    
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          j
                                       
                                    
                                    ∈
                                    
                                       
                                          N
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    
                                       |
                                       
                                          
                                             N
                                          
                                          
                                             i
                                          
                                       
                                       |
                                    
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          j
                                       
                                    
                                    ∈
                                    
                                       
                                          N
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          R
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          R
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    2
                                 
                              
                              ⋅
                              
                                 (
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                          
                                          
                                             ˜
                                          
                                       
                                    
                                    
                                       j
                                    
                                 
                                 −
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                          
                                          
                                             ˜
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                              ,
                           
                        
                      where 
                        
                           
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    ˜
                                 
                              
                           
                           
                              i
                           
                        
                      and 
                        
                           
                              
                                 x
                              
                           
                           
                              i
                           
                        
                      are the original and new (after deformation) vertex positions of vertex 
                        
                           
                              v
                           
                           
                              i
                           
                        
                        ,
                        
                           
                              R
                           
                           
                              i
                           
                        
                      is the 3×3 rotation matrix of vertex 
                        
                           
                              v
                           
                           
                              i
                           
                        
                      which rotates its normal to the nearest axis, and 
                        
                           
                              N
                           
                           
                              i
                           
                        
                      consists of neighboring vertices of vertex 
                        
                           
                              v
                           
                           
                              i
                           
                        
                      and 
                        
                           |
                           
                              
                                 N
                              
                              
                                 i
                              
                           
                           |
                        
                      indicates 
                        
                           
                              v
                           
                           
                              i
                           
                        
                     ’s valence. The deformation of the surface 
                        S
                      will converge in a few iterations and we will obtain a closed surface 
                        Q
                      that is geometrically axis-aligned.

The deformation result 
                        Q
                      has each of its clustered regions (classified by normals) being flat and perpendicular to a coordinate axis. However, when considered as a boundary of a 3D polyhedron, the solid region bounded by 
                        Q
                      is usually not an exact orthogonal polyhedron. Given a polyhedron, whose boundary is a closed surface made up of polygonal facets. We classify and label these facets based on the minimal rotations of their normals to axes 
                        ±
                        X
                        ,
                        ±
                        Y
                      and 
                        ±
                        Z
                     . We call the labels of 
                        +
                        X
                      and 
                        −
                        X
                      as opposite labels (same for 
                        Y
                      and 
                        Z
                     ). Each facet 
                        f
                      should be adjacent to 4 facets with different labels, and none of these four labels can either be the same with or opposite to 
                        f
                     ’s label. A wedge is a facet whose surrounding labeling violates this rule. A few wedge examples are shown in Fig. 1
                     (b).

Such wedge regions are hard to avoid, because strictly enforcing the topological constraints of orthogonal polyhedra during the surface deformation is very difficult and too expensive. Therefore, we adopt this deformed surface 
                        Q
                      which is geometrically regular but topologically incorrect, and call it a pseudo-polycube in this paper.

Note that global orientation of the model sometimes affects the polycube construction. An example is shown in Fig. 2
                     , where the rotation method of  [6] generates an undesirable polycube (b) for the given model (a). Therefore, before this pre-deformation, we heuristically compute three principal axes  [25] of the given model and pre-align principal axes with the global 
                        X
                        ,
                        Y
                        ,
                        Z
                      axes. The preprocessed model may lead to better polycube construction (c).

Topologically irregular regions such as wedges (Figs. 1(b), 3
                     (b)) exist in most pseudo-polycubes. Correcting this topological irregularity of a pseudo-polycube is nontrivial. A heuristic patch segmentation post-processing algorithm was suggested in  [6]. However, performing these operations on triangle meshes is also not easy, and getting a valid segmentation for a polycube may not be guaranteed. We propose an algorithm through voxelization to produce a valid polycube. Furthermore, we develop a scheme to optimize the polycube domain shape, balancing domain simplicity and its geometric similarity to the pseudo-polycube.

We first embed the pseudo-polycube 
                           Q
                         into a spatial grid, then obtain a polycube 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                         from the voxels which are inside or partially inside 
                           Q
                        . A suitable size 
                           η
                         of the voxel is computed (see Section  5.1.1) to avoid topological change between 
                           Q
                         and 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                         during this voxelization. We pre-compute a level-set function 
                           
                              
                                 D
                              
                              
                                 Q
                              
                           
                           
                              (
                              x
                              )
                           
                         to indicate the distance from 
                           x
                           ∈
                           
                              
                                 R
                              
                              
                                 3
                              
                           
                         to 
                           Q
                         using the algorithm of  [26]. This 
                           
                              
                                 D
                              
                              
                                 Q
                              
                           
                           
                              (
                              x
                              )
                           
                         provides efficient spatial query for partial occupation detection.

Note that since our pre-deformation transforms the given model 
                           S
                         into a pseudo-polycube 
                           Q
                         whose geometry is simple and flat, our voxelization will produce a simple and regular polycube. In contrast, directly applying voxelization on the curved original model 
                           S
                         will lead to a zigzagged result. An example of voxelization on the Bunny that is with and without pre-deformation is shown in Fig. 4
                        .

The selection of the voxelization resolution threshold 
                              η
                            affects the final polycube’s geometric shape and topology. 
                              η
                            should depend on the geometric saliency that we want the polycube to preserve, and be fine enough to encode the topology of the pseudo-polycube 
                              Q
                           . Voxelization with a too big 
                              η
                            may miss small topological features such as handles and voids. Size and locations of topological features can be estimated through a Morse analysis  [27].

On the pseudo-polycube 
                              Q
                           , we apply a Morse analysis by defining a Morse function 
                              f
                              :
                              Q
                              →
                              R
                           . The purpose of this Morse analysis is to obtain a suitable threshold for the resolution of spatial voxelization, i.e., to capture the extrinsic spatial size (in each of the three axis directions) of each topological handle and void. Note that, using intrinsic scalar functions such as harmonic fields  [28] as this function 
                              f
                            can result in isolated critical points, but they usually do not precisely capture the spatial size of the topological features. On the other hand, the height function is simple and directly serves as such an extrinsic indicator, and thus has been widely used in Reeb graph construction  [29]. Using the height functions results in clusters of critical points (e.g. on each flat facet); therefore, we pick representative critical points from these clusters and use them to determine the suitable voxelization resolution.

For vertices 
                              
                                 {
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                            with coordinate 
                              
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                           , we first use function values 
                              f
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                            to extract the critical points 
                              
                                 {
                                 
                                    
                                       v
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             x
                                          
                                       
                                    
                                 
                                 |
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 <
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 <
                                 ⋯
                                 <
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             x
                                          
                                       
                                    
                                 
                                 }
                              
                            in the 
                              x
                            direction. The value range 
                              
                                 [
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             x
                                          
                                       
                                    
                                 
                                 ]
                              
                            splits into 
                              
                                 
                                    N
                                 
                                 
                                    x
                                 
                              
                              −
                              1
                            intervals: 
                              
                                 [
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 ]
                              
                              ,
                              
                                 [
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       3
                                    
                                 
                                 ]
                              
                              ,
                              …
                              ,
                              
                                 [
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             x
                                          
                                       
                                       −
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             x
                                          
                                       
                                    
                                 
                                 ]
                              
                           . We use a threshold 
                              ε
                            to group critical points from the same facet cluster: critical points are considered to be on the same level if their difference of Morse function values is less than 
                              ε
                           . Topological features (handles, voids) that are smaller than 
                              ε
                            will be treated as noise and ignored. In our experiments, we choose 
                              ε
                            to be 1% of the diagonal length of the bounding box of 
                              M
                           . Similarly, we extract critical points along the 
                              y
                            and 
                              z
                            directions. Fig. 3(c) shows the Morse analysis conducted on the Kitten model, where red, green, and blue nodes are the critical points along 
                              x
                           -, 
                              y
                           -, and 
                              z
                           -directions respectively. Finally, we make 
                              
                                 
                                    η
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          3
                                       
                                    
                                    min
                                    
                                       {
                                       
                                          
                                             min
                                          
                                          
                                             i
                                          
                                       
                                       
                                          [
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          
                                             
                                                x
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          ]
                                       
                                       ,
                                       
                                          
                                             min
                                          
                                          
                                             j
                                          
                                       
                                       
                                          [
                                          
                                             
                                                y
                                             
                                             
                                                j
                                             
                                          
                                          ,
                                          
                                             
                                                y
                                             
                                             
                                                j
                                                +
                                                1
                                             
                                          
                                          ]
                                       
                                       ,
                                       
                                          
                                             min
                                          
                                          
                                             k
                                          
                                       
                                       
                                          [
                                          
                                             
                                                z
                                             
                                             
                                                k
                                             
                                          
                                          ,
                                          
                                             
                                                z
                                             
                                             
                                                k
                                                +
                                                1
                                             
                                          
                                          ]
                                       
                                       }
                                    
                                 
                              
                            to ensure that the voxel representation shares the same topology with the pseudo-polycube. A more thorough discussion on the topology preservation of our polycube construction algorithm is given in Section  7.1.

The initial polycube 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                         we get after the voxelization is an orthogonal polyhedron and a topologically valid polycube. But geometrically, 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                         may still be zigzagged in some regions. Such zigzagged geometry will lead to extra corners and increase the mapping distortion. Inspired by the morphological operations  [30] in image processing, we propose the homotopic morphological operations to optimize the polycube shape.

Similar to  [30], we can define two basic operations: erosion and dilation on voxels in 3D. The erosion operation removes a layer of boundary cells (boundary voxels); the dilation inserts a new layer onto the boundary. More rigorously, given 
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                            and a cell 
                              c
                              ∈
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                              ,
                              c
                            has 26 adjacent cells. An erosion on 
                              c
                            deletes 
                              c
                            if any of its adjacent cell is not in 
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                           . A dilation inserts 
                              c
                            if any of its adjacent cells is in 
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                           .

Then we have two combined operations: opening and closing   [30]. An opening operation performs an erosion followed by a dilation, and a closing performs a dilation followed by an erosion. The openings can remove thin ridges/glitches and the closings can fill small valleys/holes. Fig. 5
                            illustrates two examples.

Directly applying these morphological operations can simplify the polycube geometry, but does not guarantee the preservation of topology. Hence, we further develop the following homotopy-preserving approaches.


                           Simple removal. Consider each 
                              k
                           -dimensional element as a 
                              k
                           -D cell. If a 
                              k
                           -D element (vertex, edge, face) is shared by only one 
                              
                                 (
                                 k
                                 +
                                 1
                                 )
                              
                           -D element (edge, face, voxel, respectively), then this 
                              k
                           -D element is called a simple element and its accompanying 
                              
                                 (
                                 k
                                 +
                                 1
                                 )
                              
                           -D element is called its witness. To see whether a voxel (the window’s center) is removable, we can iteratively remove a simple element and its witness, which is called a simple removal. We iteratively conduct simple removals until no further simple removal is possible. If the remained elements on this voxel are non-manifold elements, then this voxel is not removable, otherwise, it is removable. Fig. 6
                            shows an example of simple removal on 3 glued cubes.

The simple removal operation is topology-preserving (see Section  7.1). Based on the simple removal, we can define the homotopic morphological operations. We define a homotopic erosionoperation as an erosion on a layer of boundary voxels that only performs 2D simple removals, namely only removable voxels are allowed to be removed. The homotopic dilation can be defined similarly. A dilation can be considered as an erosion performed on 
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                              ∖
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                           , i.e. practically, unselected cells outside 
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                            but inside big bounding box of 
                              Q
                           . Therefore, on the 3D space outside 
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                            we can perform simple removals during dilations on 
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                           .

To preserve the homotopy of the voxelization, we shall perform homotopic opening and homotopic closing using homotopic erosions/dilations rather than the originally defined erosions/dilations. A homotopic opening performs a homotopic erosion followed by a homotopic dilation on the polycube, and a homotopic closing can be considered as a homotopic opening on the dual space 
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                              ∖
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                           . Pruning via simple removal will not change the topology of space; hence homotopic erosions will not change the voxelization’s topology (also see the discussion in Section  7.1). Fig. 7
                            shows an example of applying homotopic morphological operations on the Kitten model.

We use two terms to measure the polycube quality: 
                              
                                 •
                                 Domain simplicity (number of corners) 
                                       
                                          
                                             E
                                          
                                          
                                             c
                                          
                                       
                                    . A vertex on polycube 
                                       P
                                     is a corner if its valence is not 4. Fewer corners indicates simpler (less zigzagged) domains.

Geometric deviation 
                                       
                                          
                                             E
                                          
                                          
                                             g
                                          
                                       
                                    . The optimized polycube 
                                       P
                                     should approximate the pseudo-polycube 
                                       Q
                                    . We can accumulate distances from vertices of 
                                       P
                                     to 
                                       Q
                                       ,
                                       
                                          
                                             E
                                          
                                          
                                             g
                                          
                                       
                                       =
                                       
                                          
                                             ∑
                                          
                                          
                                             x
                                             ∈
                                             P
                                          
                                       
                                       
                                          |
                                          
                                             
                                                D
                                             
                                             
                                                Q
                                             
                                          
                                          
                                             (
                                             x
                                             )
                                          
                                          |
                                       
                                    , where 
                                       
                                          
                                             D
                                          
                                          
                                             Q
                                          
                                       
                                       
                                          (
                                          x
                                          )
                                       
                                     is the distance from each point polycube boundary 
                                       x
                                     to 
                                       Q
                                    . Less 
                                       
                                          
                                             E
                                          
                                          
                                             g
                                          
                                       
                                     indicates a more geometrically similar domain.

To minimize the objective function (1), we can now use a moving window to perform the homotopic opening or homotopic closing operations on 
                              Ω
                           . On each cell 
                              c
                           , we have the choices to perform three types of operations: keep, open, or close, where keep means we do neither homotopic opening nor closing. What operation to choose is determined greedily by the change of 
                              
                                 
                                    E
                                 
                                 
                                    p
                                 
                              
                            on 
                              c
                           . If a homotopic closing (or homotopic opening) operation reduces 
                              
                                 
                                    E
                                 
                                 
                                    p
                                 
                              
                            the most, then we choose to do it; if neither reduces the energy 
                              
                                 
                                    E
                                 
                                 
                                    p
                                 
                              
                            more than a threshold value (or even increases the energy), we do nothing on 
                              c
                           . Since the distance field 
                              
                                 
                                    D
                                 
                                 
                                    Q
                                 
                              
                              
                                 (
                                 )
                              
                            was pre-computed (Section  5.1), and the increasing/decreasing of corner points can be locally updated, this local greedy search on each cell is 
                              O
                              
                                 (
                                 1
                                 )
                              
                           .

Another issue is the size of the moving window, which controls the coarseness of the opening and closing (e.g., when the window size is 1, each cell has 26 neighbors while when the window size is 2, each cell has 124 neighbors). We start from a big window size (e.g., 5) and gradually reduce it. On each level, we keep moving the window along all boundary cells on 
                              
                                 
                                    P
                                 
                                 
                                    ˜
                                 
                              
                            until the energy 
                              
                                 
                                    E
                                 
                                 
                                    p
                                 
                              
                            does not decrease (i.e., no update on the boundary cell is performed). The final optimized polycube surface is denoted as 
                              P
                           .

After polycube construction, we compute volumetric parameterization of volume 
                        M
                      over the solid polycube domain 
                        Ω
                     . We first use a fast algorithm to compute polycube surface mapping 
                        ϕ
                        
                           
                              |
                           
                           
                              ∂
                              M
                           
                        
                        :
                        S
                        →
                        P
                        ,
                        S
                        =
                        ∂
                        M
                        ,
                        P
                        =
                        ∂
                        Ω
                      (Section  6.1), which indicates the initial boundary constraints of the volumetric parameterization 
                        ϕ
                        :
                        M
                        →
                        Ω
                      (Section  6.2).

First, we project every vertex 
                           v
                         of 
                           Q
                         along its normal direction onto 
                           P
                        . This simple projection 
                           f
                           :
                           Q
                           →
                           P
                         is not necessary bijective, and some region could have big metric distortion. We perform a local relaxation similar to  [5,8] to reduce the mapping distortion. 
                           
                              •
                              If a vertex 
                                    
                                       
                                          v
                                       
                                       
                                          i
                                       
                                    
                                 ’s projection 
                                    f
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  and its projected one-ring neighbors 
                                    f
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                    ,
                                    ∀
                                    
                                       
                                          v
                                       
                                       
                                          j
                                       
                                    
                                    ∈
                                    N
                                    b
                                    r
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 , are co-planar, we directly move 
                                    f
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                  to the weighted (using the constant weight or mean-value harmonic weight) average center of 
                                    
                                       {
                                       f
                                       
                                          (
                                          
                                             
                                                v
                                             
                                             
                                                j
                                             
                                          
                                          )
                                       
                                       ,
                                       ∀
                                       
                                          
                                             v
                                          
                                          
                                             j
                                          
                                       
                                       ∈
                                       N
                                       b
                                       r
                                       
                                          (
                                          
                                             
                                                v
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       }
                                    
                                 .

If 
                                    f
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                  and some of its projected neighbors 
                                    f
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          j
                                       
                                    
                                    ∈
                                    N
                                    b
                                    r
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                 , are on different polycube facets, we flatten these facets locally  [1] and relax 
                                    f
                                    
                                       (
                                       v
                                       )
                                    
                                  on that plane.

With this refined surface map 
                           f
                           :
                           Q
                           →
                           P
                        , we can compose the previously computed pre-deformation 
                           g
                           :
                           S
                           →
                           Q
                         to get the polycube surface map from 
                           S
                         to 
                           P
                           ,
                           ψ
                           =
                           ϕ
                           
                              
                                 |
                              
                              
                                 ∂
                                 M
                              
                           
                           :
                           S
                           →
                           P
                           =
                           f
                           ∘
                           g
                        .

Suppose the solid model 
                           M
                         is represented by a tetrahedral mesh. If the input is a boundary surface 
                           S
                           =
                           ∂
                           M
                         represented by a triangle mesh, we can simply generate a tetrahedral tessellation for 
                           M
                         using existing algorithms/software  [31]. In the following, we also use 
                           M
                         to denote this tetrahedral mesh. Now, we want to compute a piecewise linear volumetric parameterization 
                           ϕ
                           :
                           M
                           →
                           Ω
                        , composed of three piecewise linear scalar fields 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         defined on tetrahedral vertices using a global chart. Their gradient fields 
                           
                              (
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    1
                                 
                              
                              ,
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    2
                                 
                              
                              ,
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         are piecewise constant on different tetrahedra. To reduce metric distortion on 
                           ϕ
                        , the Jacobian 
                           ∇
                           ϕ
                           =
                           
                              (
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    1
                                 
                              
                              ,
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    2
                                 
                              
                              ,
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         should be closed to a unitary matrix on every tetrahedron. We use a volumetric frame field   [16] to guide the computation of 
                           ∇
                           ϕ
                        . A frame field 
                           X
                         on 
                           M
                         is composed of 3 perpendicular unit vector fields. In each tetrahedron, it can be represented by three unit vectors 
                           X
                           =
                           
                              (
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         that are pairwise orthogonal and form a local coordinate system. We compute a volumetric polycube parameterization as follows. 
                           
                              (1)
                              Set the initial frame field on the boundary tetrahedra 
                                    X
                                    
                                       
                                          |
                                       
                                       
                                          ∂
                                          M
                                       
                                    
                                  (Section  6.2.1).

Solve a volumetric frame field 
                                    X
                                  by optimizing its smoothness (Section  6.2.2).

Set the boundary positional constraint 
                                    ϕ
                                    
                                       
                                          |
                                       
                                       
                                          ∂
                                          M
                                       
                                    
                                  following polycube surface mapping (Section  6.2.3).

Solve the polycube volumetric mapping 
                                    ϕ
                                  using the directional constraint 
                                    X
                                  and boundary positional constraint 
                                    ϕ
                                    
                                       
                                          |
                                       
                                       
                                          ∂
                                          M
                                       
                                    
                                  (Section  6.2.4).

The initial polycube construction and polycube surface mapping 
                              ψ
                              :
                              S
                              →
                              P
                            suggests a natural initial boundary frame field for volumetric parameterization: on each boundary tetrahedron 
                              i
                           , its frame field 
                              
                                 
                                    X
                                 
                                 
                                    i
                                 
                              
                            has one vector 
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                            following the normal direction of its associated boundary face 
                              F
                           . We preprocess each tet mesh so that each boundary tetrahedron only has one boundary face (which can be done by splitting each tetrahedron that has two or more boundary faces). 
                              F
                            is mapped onto the iso-
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                            facet on 
                              P
                           ; hence 
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                            defined on 
                              F
                            should be following 
                              F
                           ’s normal direction. The other two inherent iso-parametric directions on this facet of 
                              P
                            define the other two components in 
                              
                                 
                                    X
                                 
                                 
                                    i
                                 
                              
                           . However, these two directions, initially defined by polycube surface mapping, are not fixed and will be optimized during the frame field smoothing. Fig. 9
                            illustrates the surface frame fields on the Kitten model. In (a), a texture mapping on the boundary surface of the Kitten is shown, where red, green and blue lines indicate iso-
                              
                                 
                                    u
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    2
                                 
                              
                            and 
                              
                                 
                                    u
                                 
                                 
                                    3
                                 
                              
                            parametric lines respectively. In (b), the two frame directions (excluding the one along the normal direction) on the boundary tetrahedra, rendered as crosses on their corresponding boundary faces, are zoomed and shown in (b). This region corresponds to a polycube corner.

With the boundary frame field initially set up, we then solve a smooth volumetric frame field. We can use three Euler angles 
                              
                                 (
                                 
                                    
                                       α
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       β
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       γ
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            about the 
                              x
                              ,
                              y
                           , and 
                              z
                            axes to represent the 
                              i
                           -th frame. Intuitively, a smaller change on Euler angles on frames defined on adjacent tetrahedra indicates better smoothness. We define the smoothness energy as 
                              
                                 
                                    
                                       
                                          C
                                       
                                       
                                          S
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          N
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    
                                       [
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      α
                                                   
                                                   
                                                      i
                                                   
                                                
                                                −
                                                
                                                   
                                                      α
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      β
                                                   
                                                   
                                                      i
                                                   
                                                
                                                −
                                                
                                                   
                                                      β
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      γ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                −
                                                
                                                   
                                                      γ
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       ]
                                    
                                    .
                                 
                              
                           
                        

The interior Euler angles that minimize this energy can be computed by solving a linear system. The volumetric frame fields then can be derived from the computed Euler angles 
                              
                                 {
                                 
                                    
                                       α
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       β
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       γ
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                           . Note that we solve 
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                            and 
                              
                                 
                                    u
                                 
                                 
                                    k
                                 
                              
                            on a global parametric chart on 
                              Ω
                            instead of using different local charts like  [16–18]. Also, without considering rotational symmetry, our global frame fields are like the traditional vector fields: discretely, surrounding any interior tet edge, the composed rotation of local frames is always 
                              2
                              N
                              π
                              ,
                              N
                              ∈
                              Z
                            (instead of 
                              
                                 
                                    N
                                    π
                                 
                                 
                                    2
                                 
                              
                            in  [16–18]). Thus, with the boundary condition of polycube parameterization, the computed harmonic fields of Euler angles will most likely result in 3 irrotational vector fields, each of which has 
                              N
                              =
                              0
                            everywhere. Under properly given boundary conditions, it is unlikely that our frame field smoothing will introduce interior singularities in the constructed gradient fields, but indeed, we admit the singularity-free and non-degeneracy of the parameterization are not theoretically guaranteed here.

The computed polycube volumetric mapping 
                              ϕ
                              :
                              M
                              →
                              Ω
                            should map the boundary surface 
                              S
                              =
                              ∂
                              M
                            to domain boundary 
                              P
                              =
                              ∂
                              Ω
                           . Following the previously computed polycube surface mapping, each boundary vertex 
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                            is mapped onto a corner, edge, or facet of the polycube surface, 
                              ψ
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                              =
                              
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       3
                                    
                                 
                                 )
                              
                           . If 
                              ψ
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            is a corner on the polycube, we enforce all these three coordinates; if 
                              ψ
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            is on a polycube edge perpendicular to the axis 
                              
                                 
                                    x
                                 
                                 
                                    j
                                 
                              
                           , then we fix the two coordinates except 
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                           ; otherwise, 
                              ψ
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            is on a cube facet perpendicular to an axis 
                              
                                 
                                    x
                                 
                                 
                                    k
                                 
                              
                           , and we only fix its 
                              k
                            coordinate 
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           . This allows the surface mapping 
                              ψ
                              
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            to flow within facets and along edges on the polycube during volumetric mapping computation.

Given the optimized frame field 
                              X
                            and the boundary positional constraints, we solve the volumetric parameterization 
                              ϕ
                            by minimizing the least squares energy 
                              
                                 (2)
                                 
                                    E
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          3
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                ‖
                                                ∇
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      k
                                                   
                                                
                                                −
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      k
                                                   
                                                
                                                ‖
                                             
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    ⋅
                                    
                                       vol
                                    
                                    
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                            where 
                              
                                 vol
                              
                              
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       j
                                    
                                 
                                 )
                              
                            is the volume of tetrahedron 
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                           , superscript 
                              k
                            and subscript 
                              j
                            in 
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                            indicate the 
                              k
                           -th component of parameters on the tetrahedron 
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                           , and 
                              
                                 
                                    
                                       ‖
                                       ⋅
                                       ‖
                                    
                                 
                                 
                                    2
                                 
                              
                            is the Euclidean 2-norm. Minimizing 
                              E
                            aligns the Jacobian of the parameterization with the cross-frame field.

The gradient 
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                                 
                                    k
                                 
                              
                            can be assembled from unknown scalar values 
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                            defined on vertex 
                              i
                            contained by this tetrahedron 
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                           . Assume that in the tetrahedron 
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                           , the four vertices are 
                              
                                 
                                    v
                                 
                                 
                                    j
                                    k
                                 
                              
                              ,
                              
                              k
                              =
                              0
                              ,
                              1
                              ,
                              2
                              ,
                              3
                           . 
                              
                                 
                                    u
                                 
                                 
                                    j
                                    k
                                 
                              
                              =
                              
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       j
                                       k
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       j
                                       k
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       u
                                    
                                    
                                       j
                                       k
                                    
                                    
                                       3
                                    
                                 
                                 )
                              
                            is the scalar value on vertex 
                              k
                           . The Jacobian matrix on tetrahedral 
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                              
                            is 
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 (
                                 
                                    
                                       
                                          g
                                       
                                    
                                    
                                       
                                          j
                                       
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          g
                                       
                                    
                                    
                                       
                                          j
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          g
                                       
                                    
                                    
                                       
                                          j
                                       
                                    
                                    
                                       3
                                    
                                 
                                 )
                              
                           . According to  [12], 
                              
                                 
                                    
                                       
                                          
                                             g
                                          
                                       
                                       
                                          
                                             j
                                          
                                       
                                       
                                          r
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          3
                                          
                                             vol
                                          
                                          
                                             (
                                             
                                                
                                                   t
                                                
                                                
                                                   j
                                                
                                             
                                             )
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          0
                                       
                                       
                                          3
                                       
                                    
                                    
                                       
                                          
                                             s
                                          
                                       
                                       
                                          j
                                          k
                                       
                                    
                                    
                                       
                                          u
                                       
                                       
                                          j
                                          k
                                       
                                       
                                          r
                                       
                                    
                                    ,
                                    
                                    r
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    3
                                 
                              
                            where 
                              
                                 
                                    
                                       s
                                    
                                 
                                 
                                    j
                                    k
                                 
                              
                              =
                              
                                 
                                    
                                       Area
                                    
                                 
                                 
                                    j
                                    k
                                 
                              
                              ⋅
                              
                                 
                                    
                                       n
                                    
                                 
                                 
                                    
                                       jk
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       Area
                                    
                                 
                                 
                                    j
                                    k
                                 
                              
                            is the area of the triangle face opposite to 
                              
                                 
                                    v
                                 
                                 
                                    j
                                    k
                                 
                              
                            in tet 
                              j
                           , and 
                              
                                 
                                    
                                       n
                                    
                                 
                                 
                                    j
                                    k
                                 
                              
                            is the normal of the triangle face pointing outside of the tet. Therefore we have 
                              
                                 
                                    E
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          3
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                ‖
                                                
                                                   
                                                      
                                                         g
                                                      
                                                   
                                                   
                                                      
                                                         j
                                                      
                                                   
                                                   
                                                      k
                                                   
                                                
                                                −
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      k
                                                   
                                                
                                                ‖
                                             
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    .
                                 
                              
                            The derivatives of 
                              
                                 
                                    E
                                 
                                 
                                    j
                                 
                              
                            over 
                              
                                 
                                    u
                                 
                                 
                                    j
                                    i
                                 
                                 
                                    k
                                 
                              
                            can be derived analytically. Hence, minimizing the quadratic objective function reduces to solving a sparse linear system.

The construction of polycube 
                           P
                         should preserve the topology of the input model 
                           S
                        . In the following, we discuss the topology preservation during each of our three-step algorithm, between (1) 
                           S
                         and 
                           Q
                        , (2) 
                           Q
                         and 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                        , and then (3) 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                         and 
                           P
                        , respectively. The topology preservation is not theoretically guaranteed, but practically, these designs are effective and in all our experiments, the resultant polycube constructed by this pipeline shares the same topology with the given 3D shape.

First, the pre-deformation from the input model 
                           S
                         to the pseudo-polycube 
                           Q
                         usually does not change the topology. To avoid self-intersections during the deformation, distance preservation constraints can be added to the pre-deformation equations to preserve the distance between nearby charts aligned to the same axis, and avoid self-intersections during deformation. With self-intersection prevented, the degeneracy of small topological handles can be prevented. Note that although it works well in all our experiments, we admit that non-self-intersection in the pre-deformation has no theoretic guarantee. If self-intersection occurs in 
                           Q
                        , topology may change during voxelization in the next step. We believe that deformation explicitly avoiding self-intersection can be adopted here to further improve this step’s robustness.

Next, the construction of initial polycube 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                         is done by voxelizing the pseudo-polycube 
                           Q
                        . The threshold 
                           η
                         of the voxel is determined by Morse analysis. 
                           η
                         is set to be 
                           
                              
                                 1
                              
                              
                                 3
                              
                           
                         of the minimum interval, with which critical points are usually separated in individual non-adjacent voxels, preventing the topological degeneracy of handles and voids.

Finally, the optimization from 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                         to the final polycube 
                           P
                         uses homotopic morphological operations to preserve the topology. The topology of 3-manifold can be characterized by three Betti numbers: 
                           
                              
                                 β
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 β
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 β
                              
                              
                                 2
                              
                           
                        . They represent the numbers of connected components, handles and voids of the volume, respectively. The simple removals are equivalent to elementary simplicial collapse in algebraic topology  [32], which preserves 
                           β
                        s of the 3-manifold  [33]. The morphological operations based on simple removal are topology-preserving. This can also be verified using the topological invariant Euler characteristics 
                           χ
                         of the volumetric region: 
                           χ
                           =
                           
                              
                                 β
                              
                              
                                 0
                              
                           
                           −
                           
                              
                                 β
                              
                              
                                 1
                              
                           
                           +
                           
                              
                                 β
                              
                              
                                 2
                              
                           
                        , which can also be computed by 
                           
                              (3)
                              
                                 χ
                                 =
                                 
                                    
                                       k
                                    
                                    
                                       0
                                    
                                 
                                 −
                                 
                                    
                                       k
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       k
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 
                                    
                                       k
                                    
                                    
                                       3
                                    
                                 
                              
                           
                         where 
                           
                              
                                 k
                              
                              
                                 i
                              
                           
                         denotes the number of elements of dimension 
                           i
                         (
                           
                              
                                 k
                              
                              
                                 0
                              
                           
                           ,
                           
                              
                                 k
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 k
                              
                              
                                 2
                              
                           
                        , and 
                           
                              
                                 k
                              
                              
                                 3
                              
                           
                         correspond to the vertex, edge, face, and cube number, respectively). When conducting a simple removal on face, 
                           
                              Δ
                           
                           
                              
                                 k
                              
                              
                                 2
                              
                           
                           =
                           −
                           1
                           ,
                           
                              Δ
                           
                           
                              
                                 k
                              
                              
                                 3
                              
                           
                           =
                           −
                           1
                           ,
                           a
                           n
                           d
                           
                              Δ
                           
                           
                              
                                 k
                              
                              
                                 0
                              
                           
                           =
                           
                              Δ
                           
                           
                              
                                 k
                              
                              
                                 1
                              
                           
                           =
                           0
                        . Hence, 
                           χ
                        , and the topology, will not change.

The weight 
                           α
                         in Eq. (1) offers a flexible optimization scheme balancing a trade-off between the simplicity of the optimized polycube 
                           P
                         and its geometric similarity to 
                           
                              
                                 P
                              
                              
                                 ˜
                              
                           
                        . Fig. 10
                         shows the different optimized domains for the Rocker-Arm model using different 
                           α
                        s. With the increase of the 
                           α
                        , the corner number 
                           
                              
                                 E
                              
                              
                                 c
                              
                           
                         increases while the geometric deviation 
                           
                              
                                 E
                              
                              
                                 g
                              
                           
                         decreases. Table 1
                         shows the different parameterization and meshing results under different choices of 
                           α
                        s. The mapping distortion, measured by average scaled Jacobian 
                           
                              
                                 ζ
                              
                              
                                 ̄
                              
                           
                         of the generated hexahedral mesh (the closer to 1 the better, to be defined in Section  8). In general, increasing 
                           α
                         to emphasize geometric similarity can improve the parameterization quality. But this makes the polycube more complicated and has more corner singularities. Also, overly large number of corner singularities makes the polycube surface mapping difficult to optimize; the unnecessary rotations of iso-parametric curves introduced on these corners could also increase the parameterization distortion undesirable. For different models, the optimal 
                           α
                         could be different. Based on empirical results, in most of our experiments, we set 
                           α
                           =
                           20
                        .

Feature preserving can be implemented in our polycube mapping framework. In applications such as meshing, feature points or curves (e.g. ridges/values with salient principal curvatures) on the original model should be sampled. We can normalize the scaling of the polycube, so that the smallest cell has the unit length. Then the parameters of the feature vertices/edges should be restricted to integers. The above optimization problem (2) becomes a mixed-integer problem  [16,17]. We use a simple greedy strategy to solve it. First, we solve the parameterization without considering these integer restrictions, and get the initial parameters 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         for each vertex 
                           i
                        . Then, for each feature edge, we project it onto an integer iso-line parallel to one of the coordinate axes on the parameter domain. Feature points can be projected onto nearest parameter grids easily. After the projection of all features, we fix their parameters and solve the system again to get parameters on other vertices. Fig. 11
                        
                         shows an example of feature-aligned meshing result.

We compute polycube parameterization for various solid models. The experiments are conducted on a workstation with 2.27 GHz CPU and 4 GB memory. The runtime statistics are shown in Table 2
                     . Generally, for a 10k-vertex mesh, the pre-processing roughly takes 120 s, the voxelization and polycube optimization take about 240 s, and the parameterization takes about 45 s.


                     Hexahedral remeshing. The regular hex structure 
                        
                           
                              Ω
                           
                           
                              H
                           
                        
                      can be generated on the polycube domain 
                        Ω
                     . With the parameterization 
                        ϕ
                        :
                        M
                        →
                        Ω
                      computed on the tetrahedral mesh of 
                        M
                     , we simply resample all the vertices of 
                        
                           
                              Ω
                           
                           
                              H
                           
                        
                      on 
                        M
                      by 
                        
                           
                              ϕ
                           
                           
                              −
                              1
                           
                        
                      using barycentric interpolation. We evaluate hex meshing quality using several terms: 
                        
                           •
                           The scaled Jacobian  [34]. Given a vertex 
                                 x
                               in a hex element with three neighboring vertices 
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       3
                                    
                                 
                              , the three edge vectors defined on this corner are 
                                 
                                    
                                       e
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 −
                                 x
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 3
                              . The scaled Jacobian of 
                                 x
                               at this element is 
                                 ζ
                                 
                                    (
                                    x
                                    )
                                 
                                 =
                                 det
                                 
                                    (
                                    
                                       [
                                       
                                          
                                             e
                                          
                                          
                                             1
                                          
                                          
                                             ′
                                          
                                       
                                       
                                          
                                             e
                                          
                                          
                                             2
                                          
                                          
                                             ′
                                          
                                       
                                       
                                          
                                             e
                                          
                                          
                                             3
                                          
                                          
                                             ′
                                          
                                       
                                       ]
                                    
                                    )
                                 
                              , where 
                                 
                                    
                                       e
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                               is the normalized edge vector. 
                                 ζ
                                 ∈
                                 
                                    [
                                    −
                                    1
                                    ,
                                    1
                                    ]
                                 
                               measures a combination of angle and area distortions from a hex element to a unit cube, where 1 is its optimal value.

The average and standard deviation of dihedral angles, 
                                 α
                               and 
                                 
                                    
                                       σ
                                    
                                    
                                       α
                                    
                                 
                              . Ideally, hex elements should have most dihedral angles close to 90°, with small 
                                 
                                    
                                       σ
                                    
                                    
                                       α
                                    
                                 
                              .

The average volume distortion 
                                 
                                    
                                       D
                                    
                                    
                                       v
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          |
                                          T
                                          |
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             V
                                          
                                          
                                             t
                                          
                                       
                                    
                                    
                                       
                                          
                                             V
                                          
                                          
                                             s
                                          
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             s
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       
                                          
                                             v
                                          
                                          
                                             t
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                              , where 
                                 V
                               and 
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                               are the volumes of the mesh and 
                                 i
                              -th tet element; 
                                 s
                               and 
                                 t
                               indicate the source and target meshes, both having 
                                 
                                    |
                                    T
                                    |
                                 
                               number of tet elements.

The Hausdorff distance 
                                 
                                    
                                       d
                                    
                                    
                                       H
                                    
                                 
                               measures the difference between the original model 
                                 S
                               and the generated mesh 
                                 ∂
                                 
                                    
                                       ϕ
                                    
                                    
                                       −
                                       1
                                    
                                 
                                 
                                    (
                                    
                                       
                                          Ω
                                       
                                       
                                          H
                                       
                                    
                                    )
                                 
                              . This geometric deviation is normalized using the ratio of Hausdorff distance 
                                 
                                    
                                       d
                                    
                                    
                                       H
                                    
                                 
                               to 
                                 M
                              ’s bounding box diagonal 
                                 
                                    
                                       l
                                    
                                    
                                       
                                          diag
                                       
                                    
                                 
                              , denoted as 
                                 
                                    
                                       d
                                    
                                    
                                       H
                                    
                                 
                                 /
                                 
                                    
                                       l
                                    
                                    
                                       
                                          diag
                                       
                                    
                                 
                              .

Upon the direct hex meshing from polycube parameterization, we also develop a simple and efficient post-processing refinement (without introducing any singularity) to improve the hexahedral mesh quality. We optimize the positions of mesh vertices using the Untangle and Jacobian metric defined in  [35]. In our implementation, in each iteration we first optimize vertices in 
                        
                           
                              R
                           
                           
                              3
                           
                        
                     , then project them back to the original surface. The movement is accepted if there is significant energy reduction and no flip-over. This post-processing optimization increases the meshing quality (
                        
                           
                              ζ
                           
                           
                              ̄
                           
                        
                     ) by roughly 0.3%.


                     Fig. 15 illustrates our hex meshing results (also see the accompanying video for better visualization). We document our mapping/meshing distortions, and the geometric deviation in Table 3
                     .


                     Comparison with existing methods. We compare our parameterization and meshing results with existing polycube mapping methods  [5,6] and volumetric parameterization methods  [16,18]. The statistics are shown in Table 3. We measure the following criteria, which indicate the angle and volume distortions of the mapping and meshing: (1) the scaled Jacobian 
                        
                           
                              ζ
                           
                           
                              ̄
                           
                        
                     , (2) the average 
                        
                           
                              α
                           
                           
                              ̄
                           
                        
                      and standard deviation 
                        
                           
                              σ
                           
                           
                              α
                           
                        
                      of dihedral angles, (3) average volume distortion 
                        
                           
                              D
                           
                           
                              v
                           
                        
                     , and (4) the number of singularities in hex meshes 
                        
                           
                              N
                           
                           
                              h
                           
                        
                      (number of non-valence-6 interior vertices plus non-valence-4 boundary vertices). Since the average values are affected by the mesh resolution (better when the mesh is denser), we also include the number of elements in this comparison. When the number of hex elements is similar, the average values are directly comparable. Compared with  [5], our results have significantly fewer corner numbers and smaller mapping distortion, as illustrated in Figs. 12 and 13
                     . Fig. 12(c) shows an example. The average Scale Jacobian of the Bunny model parameterized by  [5] is 0.84, while ours is 0.94. Compared with  [6], our algorithm also results in less distorted mapping and meshing results.

Compared with other volumetric parameterization algorithms, the scaled Jacobian and dihedral angle of our results are also comparably low. Through a free-boundary parameterization of 
                        M
                     , Cube-cover  [16] generates hexahedral meshes with smaller angle distortion (smaller deviation). Compared with  [18], since  [18] aims at improving worst stretched elements, their results have larger smallest scaled Jacobian values while ours have slightly better average scaled Jacobian, as shown in Table 3. However, there are usually complicated singularity lines inside the hex mesh whose distribution cannot be controlled. They need to perform a post-processing to reduce singularities during mesh generation. Fig. 14
                     
                      illustrates the singularity distribution of the final generated hex meshes of  [18] and our results. The singularity numbers in the final meshes are similar.

@&#CONCLUSIONS@&#

We develop an automatic and effective polycube parameterization pipeline for general 3D solid models. Our domain optimization can generate a desirable polycube balancing the domain simplicity and adequate resemblance to the input model. Upon this polycube, a volumetric parameterization with small distortion can be computed. This polycube parameterization usually does not have interior singularities and hence is desirable for many computer-aided design/engineering tasks such as spline construction. We show this parameterization’s application in high-quality hexahedral mesh generation for 3D solid geometric models.


                     Limitations. First, our polycube construction and volumetric mapping are computed separately. Since the domain shape will affect the mapping distortion, solving them together may lead to a better parameterization. However, their simultaneous optimization is very expensive, especially when the topological structure (corner numbers) of the polycube domain needs to be modified during the optimization. A polycube surface domain optimization algorithm without changing polycube corner numbers was given in  [11], which is already expensive for surface parameterization and prohibitive in volumetric parameterization. Second, modeling complex feature curves is still challenging on volumetric polycube domains. A more sophisticated scheme and efficient mixed-integer optimization algorithms are needed. Third, hex meshes generated by polycube mapping may have big distortion near corners. Introducing interior singularities can reduce such distortion. Post-processing such as adaptive insertion of padding layers  [20] (by splitting highly sheared hex elements) or other general frame field and mapping optimization methods  [16–18] can be directly adopted upon our initial meshing results.

@&#ACKNOWLEDGMENTS@&#

This project was partially supported by NSF   IIS-1320959, NSF   EPS-1010640, Louisiana Board of Regents (LA-BOR) RCS
                  LEQSF(2009-12)-RD-A-06, National Natural Science Foundation of China No. 61170323, and CAD&CG open project program of Zhejiang University of China.

@&#REFERENCES@&#

