@&#MAIN-TITLE@&#Sketch-based 3D modeling by aligning outlines of an image

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present an efficient technique for sketch-based 3D modeling using automatically extracted image features. An automatic and real-time method is proposed to align a user's hand-drawn sketch line to the contour lines of an image, facilitating a considerable level of ease for 3D modeling.


                        
                        
                           
                           We use a geometric method to align a sketch line to the outlines of an image using the features of the sketch line and contour lines of an image, and some operations are proposed to refine the result of alignment.


                        
                        
                           
                           In the sketch-based 3D modeling method, the sketch line is represented by a editable spline, therefore, the aligned sketch line can be further adjusted interactively.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Sketch-based modeling

CAD

Image edge extraction

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Sketching in 2D is much easier than that in 3D since most designers are capable of sketching but unfamiliar with 3D modeling tools. It is common to build a 3D model based on an object which already exists. But it requires professional skills and experience to develop an irregular shape. Even if we have those skills and experience, it still takes a long time and great efforts to draw and adjust the special shape to meet our requirements. Therefore, it will be much more convenient if we can use an existing 2D shape directly from an image especially when the object is in an irregular shape. The image of the object can be a cartoon picture or a sketched image.

Extracting a 2D shape from an image is still a difficult task because of the countless possibilities of the input sketch lines owing to different design techniques. Sometimes we need to segment the special shapes into several smaller parts which facilitate model-building, but sometimes we need the shape as a whole for the same purpose. So it is better to snap the sketch lines to the image contour, rather than merely show the shape extracted from the image according to the sketch lines. The precision of the results lies in the correspondence between the hand-drawn sketch lines and extracted contour lines. To obtain the correspondence as precise as possible, not only need we interpret the purpose of sketching, but we also need to understand the meaning of the contour lines extracted from the image. Both of tasks are difficult for a machine to achieve.

In this paper, we consider the image features as a useful clue to comprehend the meaning of the sketch lines so that the two of the tasks turn to an alignment of hand-drawn sketch lines to the contours of an image. We believe that there must be a set of rules for alignment. This allows the user to carelessly continue sketching while the system intelligently snaps the sketch lines to the image contours, no longer requiring the strenuous effort and stress of trying to make a perfect line during the modeling task.

We come up with an algorithm to align the input sketch lines to the contour lines extracted from a background image. The user first inputs an image with the target object, such as a cartoon picture or a sketched image. Then, the user draws a closed sketch line around the shape which he/she is interested in. The system will automatically choose the contour lines which the user is interested in and adjust the sketch line to fit the target shape in the image, and finally a 3D model is generated based on the sketch line. We demonstrate the accuracy and efficiency of the algorithm by running experiments with several example cases in Section 7.

The contributions of our method are as follows:
                        
                           (1)
                           We propose an automatic alignment method for sketch-based 3D modeling to reflect the user׳s original intention. Therefore, the efficiency of 3D modeling is improved.

A geometric approach is employed to align a sketch line to the outlines of an image by using their features. A sketch line can be aligned to several discontinuous contour lines of an image so that complex 3D objects can be modeled.

We use an editable curve to represent the aligned sketch line so that its shape can be further adjusted interactively to create a 3D model with high accuracy.

@&#RELATED WORK@&#

Our method is related to two kinds of modeling methods. One is based on images and the other is based on sketches. There are several image-based modeling methods and sketch-based modeling methods, each applied for different purposes. We aim to realize a sketch-based modeling method with the information extracted from the image [1] to harness the intelligence of a back-end CAD application. Inspired by top-down alignment methods such as the active contour models [2], we use alignment to replace the artificial selection to take more advantage of the input images.

Gingold et al. [3] presented a system for 3D modeling of free-form surfaces from 2D sketches. A 3D model is created by placing primitives and annotations on the image. The system allows users to maintain a single view of the model. It needs manual choices between given primitives to fit the particular shapes in the image, but it cannot be used to build a model with an irregular shape due to the fact that all the primitives are regular shapes. Chen et al. [4] presented another image-based modeling technique called 3-sweep, which deforms the input strokes according to the image contour. It is notable that the extraction of the 3D model is based on the observation that man-made objects are made of several regular primitives, such as the cylinder, cuboid, etc. It has the same limitation that it cannot be used to design objects of irregular shapes. Lau et al. [5] presented a framework that allows a user to participate in the entire process of designing their own objects, from the initial concept stage to the production of a new real-world object that fits well with the existing complementary objects. In the method a single photo is used as a rough guide for the user to sketch a new customized object that does not exist in the photo, and accurate extraction of information is not necessary.

There are several image guided drawing methods to refine the sketches. Orbay and Kara [6] proposed with a method to identify and group numbers of arbitrary strokes and beautify each group into a parametric curve. A neural network is trained to group the sketches by studying existing sketches. Su et al. [7] presented an algorithm to refine the sketch strokes with the gradient features of the image. However, the methods focus on refining segments of sketch lines, and features of the object being drawing are usually not taken into account.

There are some common problems in sketch-based modeling methods. In a 3D modeling system, the view selection is essential to the modeling process. It is difficult and frustrating for users to have to design in more than one view. There is one solution in [3] that they let the user to sketch in one view and deform the model in other views. The automatic model generation can be controlled by modulating the thickness of the 3D model by the users. Similarly, there are several systems used to design 3D models [8–11], and they convert 2D sketches to 3D models by inflating the closed regions. The region of 2D sketching inflates in both directions in proportion to the width of the region. Generally, the sketch-based modeling method is based on sketch recognition techniques which convert a given 2D line into a 3D model such as the systems in [12] and [13].

The method to align the sketch line is inspired by the active contour models [2]. It uses an energy-minimizing spline guided by external constraint forces and influenced by image forces that pull it toward features such as lines and edges. For the traditional snake method, the initial contour should be close to the boundary of the interested object in an image, or else it would converge to the wrong result. In addition, active contours have difficulties progressing into boundary concavities. Moreover, the traditional snake method and its improved methods are prone to get into local minimum because snake models are non-convex.

In our method, we use a geometric method to align a sketch line to the outlines of an image. The features of the sketch line and the contour lines of the image are analyzed so that the user׳s intention can be reflected correctly. The sketch line can be any irregular shape, and complex 3D objects with high accuracy can be modeled based on the background image.

@&#OVERVIEW@&#

To build a 3D model based on an image, our method needs to take an image with the target object as input. Usually a complex object is consisted of several simple parts. To design a 3D model, at first we create each part, and then merge them into one object. For the sketch-based modeling method, the sketch line is able to reflect the user׳s intention to draw one part or the whole object. The intention can be inferred from the relationship between the sketch line and the outlines of the image. 
                     Fig. 1(a) shows the user׳s intention to decompose the head of a raccoon, while Fig. 1(b) shows the intention to take the head as a whole object. In our method, the sketch line will be aligned to the contour lines of the background image to reflect the user׳s original intention.


                     
                     Fig. 2 shows the process of the proposed method. The whole process is divided into three stages, which include pretreating, aligning sketch lines and refining alignment. In the stage of pretreating, a background image is loaded, and a closed sketch line is drawn, then contour lines of the image are extracted, and finally the sketch line and contour lines are sampled, and some initial points are selected for alignment.

In the method, we adopt an edge extraction method [14] to extract image contours. The outlines of the image will be divided into several contour lines. Every line is broken at the point where the orientation of the outline is sharply changed. 
                     Fig. 3(b) shows the extracted contour lines which are displayed in different colors.

Sampling for the sketch line and contour lines of the image is to reduce the computation of the aligning process. To obtain a good sample result, the sampling frequency is related to the local curvature. In our method, we set the sampling size as 6 pixels for contour lines and sketch lines, and the curvature of a point is simply evaluated by the angle of two line segments connecting the point, in which the length of the line segment is set as 4 pixels. For the part of a line with a high curvature, denser samples will be taken. To keep the features of the sketch line and contour lines of the image, if there are any sharp corner points on the lines, the points will be set as sampling points. In our method, if the angle of two line segments connecting with a sampling point is less than 100°, the sampling point will be regarded as a corner point. We call the sampling points of the sketch line as sketched-samples (SS), and call the sampling points of contour lines as contour-samples (CS). After sampling, the sketch line and contour lines are converted into polylines.

In the stage of aligning sketch lines, the sampling points of the sketch line will be aligned to the contour lines of the image. The alignment is based on the consistency of the contour lines and the sketch strokes. When do alignment for a sketch-sample point (SS), firstly a set of candidate points will be obtained, then a resulting point (RP) will be selected from the candidate points. The RP can be a point on a contour line if an appropriate point can be aligned on the line, or the SS itself if we cannot find a good alignment point on the contour line.

In the stage of refining alignment, three optimal methods are used to refine the resulting points. After all resulting points are computed, they are connected together, and then converted into a closed spline. At last, a 3D model will be generated based on the spline. We use the method in [9] for spline fitting and 3D model generation. The spline is editable so that its control points can be further adjusted interactively. By combining automatic alignment and interactive editing, the efficiency of 3D modeling will be improved, and the accuracy of the 3D shape can be guaranteed.

In the following sections, the details of algorithms of aligning sketch lines, selecting initial points and refining alignment will be described.

As mentioned in Section 3, we need to compute a resulting point (RP) for every sketched-sample (SS). Normally, an RP exists on the extracted contour lines. For every SS, several candidate points (CP) will be computed for further judgment. The CP set consists of some intersection points of extracted contour lines and the local normal line of the SS point, as shown in 
                     Fig. 4. Before calculation, we set a distance to roughly filtrate contour lines. For each segment of the contour line, if it locates in the region around the SS point, we will check whether the normal line of the SS intersects with the segment or not. If they have an intersect point, the point will be regarded as a CP of the SS. Otherwise, the SS point will be marked for future use, which will be discussed in Section 6. In our method, we set the region as a circle with a radius of 20 pixels, and the SS point is the center of the circle.

Once the CP set of every SS is ready, it is necessary to select an appropriate CP as the result. The selection of CPs is of vital importance for the whole algorithm. Suppose that we already have a previous RP, no matter it is on the extracted contour lines or not, we can choose an RP from all the CPs of current SS on the basis of the previous RP.

We link the previous RP to all the CPs of current SS using straight lines like L1 and L2, as shown in 
                     Fig. 5. Then current SS and the previous SS are linked by Ls. The angles between Li and Ls are calculated, sorted and recorded into an array. Then the first element in the array should be checked to see whether the angle is less than a threshold value. The threshold is used to exclude the situation where the sketch line is close to the extracted contour line or even they intersect, but the contour line is not the one that the user wants to choose. As shown in 
                     Fig. 6, there is only one CP, but the angle is larger than the threshold, so we consider that there is no appropriate point on the contour line that aligns the SS. In our study, we set the threshold of angle as 30°. This type of points will also be marked for further processing, as we will discuss it in Section 6. In the method, every RP should be the best point that makes the aligned sketch line as smooth as possible.

For some cases, the number of points in the RP set aligned to the contour lines of an image might be too small so that it cannot reflect the true intention of the user. Therefore, we will check the RP set to judge its validity. If the number of points aligned to the contour lines is less than 40% of the total number of sampling points in the SS set, we will assume that the user does not intent to align the sketch line to any contour lines of the image, then the RPs will be regarded as invalid. As the shown in 
                     Fig. 7, the sketch line contains a part of a contour line of an image, and only few sketched-sample points are aligned to the contour line. Therefore, we will presume that the user prefers to draw a new sketch line which is not aligned to the contour line.

It can be inferred from the above that the first RP has a great effect on the following RPs, since the process of method is iterative and the effect is accumulated one by one. Assume that there are two extracted contour lines close to the sketch line, if we take a point on the first contour line as the initial point, the next RP will be mostly on the same curve. The same is true of all the following RPs. Therefore, we need to choose the initial point carefully to avoid accumulative errors.

To infer the user intention as precisely as possible and reduce the errors as much as possible, we calculate all intersection points of the sketch line and extracted contour lines and save the intersection points in an array before doing alignment. It is reasonable to assume that they can reflect the user intention due to the zero-distance between the sketch line and the contour line.

The case shown in Fig. 6 probably exists when we choose an initial point. Thus we filter the set of intersection points, only keeping the intersection points of which the angles between the sketch line and contour lines are less than a threshold, which is set as 30°. Consequently, we take every intersection point as an initial point to start alignment, then sum all the distances between the RPs and the SSs after alignment. Finally, we choose the RP set with the minimum accumulated distance as the alignment result. If there is no intersection between image contour lines and the sketch line, we take the first point of the sketch line as the initial point to start the alignment.

Using the above method, we get the alignment result for a sketch line. The result can be further improved. Three operations are designed to refine the outcome set.

As stated above, every RP is calculated on the basis of the previous one. It is possible that there are some RPs that should not be added to the PR set. They may lead to large deviation although they meet all the conditions of a RP.

When we search an RP for an SS, if the distance between current SS and its RP keeps increasing, we will record the first RP with the shortest distance. If the distance keep rising and finally the RP switches to another contour line, or the distance is too large so that no RP is aligned, the previous RPs are considered as deviated points, and they will be abandoned. The SSs are used to replace the deviated RPs from the first recorded RP.

In 
                        Fig. 8, the lines in orange represent the sketch line, and the lines in grass green represent the outcome line. In Fig. 8(c), the blue points in the rectangle represent the deviated points that are aligned to the sketch line. As shown in the figure, the effect of the improvement is obvious.

There are always some special points that meet all the conditions of a RP, but they make the resulting sketch line bumpy. We call these points as isolated points. To deal with them, a filter is utilized to get rid of all noises and incorrect points to keep the smoothness of the outcome.

For a contour line, if there are too less RPs on the contour line, the RPs are probably isolated points. In our method, if the number of consecutive RPs on a contour line is less than three, the RPs will be considered as isolated points, and they will be removed from the set of RPs. In 
                        Fig. 9, the lines in orange represent the sketch line, and the lines in grass green represent the outcome line. In Fig. 9(b), there are some acute angles in the result because of the isolated points, and in Fig. 9(c) all those points are marked in red, which will be deleted from the result. The improvement is obvious after using the filter.

As mentioned in the end of Section 4, the RP set may be too small compared with the SS set. The possible reason is that the user does not intend to align part of the sketch line to the contour lines, or the RP set becomes smaller after filtering. We can deal with the problem by adding some SSs to the outcome set.

In Section 4, there exist some marked SSs which cannot be aligned. We can add some sketched-samples to make the result more reasonable. If several consecutive SSs have no corresponding RPs, these SSs will be added to the RP set. In the method, we set the number of consecutive SSs as three. As shown in 
                        Fig. 10, the parts in the rectangle show the effect of improvement. The green straight lines in (a) and (c) are replaced by the SSs in (b) and (d), which makes the aligned sketch lines more reasonable and closer to the user׳s intention.

@&#EXPERIMENTAL RESULTS@&#

We have conducted some experiments to apply our method to various images. The platform of the computer we tested is on Windows 7 (64-bit) with GPU 3.40GHz, 4G memory. In 
                     Fig. 11, the green lines are the user׳s sketch lines while the pink lines are the aligning results, and the red points in the figures are abandoned isolated points while the green points are the abandoned deviated points. Unlike Figs. 4 to 10, the original images are displayed instead of only the extracted contour lines. As can be seen, most of the objects in the images can be accurately extracted by simple sketching.

In the method, the aligned sketch line will be converted into a spline, as the pink curves shown in Fig. 11. Once the user draws a sketch line, the line will be aligned to the contour line of a background image, and converted into an editable spline, so that the sketched shape can be further refined interactively to create a 3D model with high accuracy. We have implemented the algorithm in a 3D modeling system [9]. In the system, the spline can be adjusted by moving its control points.

We carry out some tests to justify how much the sketch-based modeling helps users. We use Quick Macro to record all the movements and clicks of the mouse when we build 3D models to guarantee that the sketches are similar. For the images in Fig. 11(d) and (f), it took a designer 4.49min and 5.05min respectively to create two 3D models (as shown in Fig. 11(e) and (g)) without using the automatic alignment method. In contrast, it only took 3.05min and 3.15min respectively to create similar models using the method. In the experiments, the time of painting textures is not included. We can see that, using our method, the efficiency of 3D modeling based on an image is much improved. The method automatically reflects the user׳s intention of drawing and aligns user׳s hand-drawn sketch lines to the contour lines of an image, which greatly facilitates the operation of sketching modeling. Even for a non-profession user, he or she can learn and master the operations of 3D sketching modeling quickly.

The alignment algorithm is triggered when the user finishes drawing a sketch line, so if the alignment result is not fed back to the user immediately, the user will feel a delay. Hence, we test the run-times of the algorithm to see whether it will influence the user experience or not. The run-time of the method is calculated from the moment when the mouse finishes moving to the moment when the result is shown. For our method, the run-time is influenced by the sampling result of the sketch lines and contour lines, and it is also affected by the size of the set of initial points since the method iterates several times owing to the initial points, as mentioned in Section 5.

We test the run-times of different inputs and different images (
                     Fig. 12), and the statistics of run-times are as shown in 
                     Table 1. As shown in the table, the run-time of the alignment process is less than 0.05s, and it is not greatly influenced by the scale of the input sketch lines and the initial points set. Thus, it is acceptable for users to align the sketch line automatically. The method will not reduce the fluency of the CAD system at all.

In our experiments, we find that the quality of the result is susceptible to the quality of the image. If the contour lines of an image cannot be detected clearly, the sketch line may not be aligned to the contour lines correctly. In this case, we can adjust the sketch line interactively to obtain a good shape.

@&#CONCLUSIONS AND FUTURE WORK@&#

We present an efficient outline alignment technique for sketch-based 3D modeling using automatically extracted image features. It is an extremely useful tool especially when we intend to design a 3D model with an irregular shape. The technique combines the efficiency of the computer and the intelligence of the human. Experiments have been done to demonstrate the accuracy and efficiency of our method. We also develop a CAD system with the method which can help the designers to a great extent when they want to extract a 3D model from an image.

The sketch-based modeling method is realized by aligning the outlines of an image. What we should notice is that the aligning result is dependent on the quality of the user׳s input sketch lines. If the user sketches intangibly and far away from the contours, it is impossible to align the sketch lines to the contour lines. Although the method improves the intelligence of the application, the alignment still needs the user to draw an appropriate sketch line to obtain a good result.

There are still many aspects of work left for further development. It should be deliberate to add the sketched samples in the result because any mistake in the progress will accumulate and affect the ultimate outcomes. Moreover, the time complexity is in proportion to the number of initial points and sketched-samples (O(n2)). Although the run-time of the method is acceptable, we still need to improve the algorithm for less time complexity for the fluency and stability of the application. In addition, the result of the contour extraction of the image is of vital importance to the final result. The integrity of the contours extracted from the image can influence the alignment to a great extent. Our method works well for cartoon pictures or sketched images, but for the photo taken from the real world, the result is not good enough since the contour lines of the image cannot be detected clearly. Therefore, an improved contour extraction method is necessary.

We plan to develop a method to make the outcome corresponding to the side view of the model. We adopt the idea presented in [3] that designs the model in one view because the users cannot match the input sketches to the image contours when the view changes. So, once the user finishes sketching, inflation of the 2D model will be modulated and the 3D model will be displayed. As a result, the side of the model can only be deformed in limited ways [9]. With the proposed method, we can align the sketch lines for both front view and side view respectively, but the two results might not match in the size and shape. If we can match them accurately, the model could be built much more easily.

@&#ACKNOWLEDGMENTS@&#

This work was supported in part by National Natural Science Foundation of China 
                  61472355, Singapore University of Technology and Design and Zhejiang University Joint Collaboration Grant 2014, and Fundamental Research Funds for the Central Universities of China 
                  ZJUR041403.

We (all the authors) declare that, we do not have any conflict of interest.

Supplementary data associated with this article can be found in the online version at 10.1016/j.jcde.2016.04.003.


                     
                        
                           
                              Sketch modeling by aligning outlines.
                           
                           
                        
                     
                  

@&#REFERENCES@&#

