@&#MAIN-TITLE@&#Reducing patient-flow delays in surgical suites through determining start-times of surgical cases

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We model a surgery-scheduling system for multiple operating rooms.


                        
                        
                           
                           We determine surgery starting times under service time uncertainties.


                        
                        
                           
                           Patient waiting times, idling of OR, and completion times are used for evaluation.


                        
                        
                           
                           A fuzzy logic based flexible job shop scheduling with time-lag model is used.


                        
                        
                           
                           Appropriate ratio of operating rooms and PACU resources is examined.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Surgery scheduling under uncertainty

Downstream resource constraint

Flexible job shop scheduling with time-lag

Multi-objective problem

Fuzzy sets

@&#ABSTRACT@&#


               
               
                  A scheduling strategy to determine starting times of surgeries in multiple operating rooms (OR) is presented. The constraints are resource limit of a downstream facility, post-anesthesia care unit (PACU), and the service time uncertainties. Given sets of surgeries that need to be done on a day, this problem is formulated as a flexible job shop model with fuzzy sets. Patient-waitings in the process flow, clinical resource idling, and total completion times are considered for evaluation. This multi-objective problem is solved by a two-stage decision process. A genetic algorithm is used for determining relative order of surgeries in the first stage and definite starting times for all the surgical cases are obtained by a decision-heuristic in the second stage. The resultant schedule is evaluated by a Monte-Carlo simulation. The performance is shown to be better than our previous approach, a simulation based scheduling which already outperforms simple scheduling rules in regional hospitals. Additionally, the ratio of PACU to OR is examined using the proposed scheduling strategy.
               
            

@&#INTRODUCTION@&#

Surgical suite is the most cost and revenue intensive area in hospital. It accounts for more than 40% of revenues and it takes similar proportion of their expenses (Cardoen, Demeulemeester, & Beliën, 2010; Denton, Viapiano, & Vogl, 2007; Min & Yih, 2010). In addition, growing and aging population in these days causes significant increase in demand of elective surgeries. Thus it is natural to draw a considerable attention on the problems in surgical operations management. Managing the operations of the surgical suite, however, is very challenging due to its conflicted preferences and priorities from many stakeholders and limited resources to meet the needs (Cardoen et al., 2010). If we consider uncertain nature of surgical operations, particularly, surgical service durations, it becomes more complex.

This study focuses on the operating room (OR) scheduling, particularly surgery starting times, in the tactical level as classified by Gupta (2007). Most of the hospitals in the US practice block-scheduling as their surgery booking rule (Gupta, 2007). Under this scheduling system, a certain amount of OR time (blocks of OR time) is solely assigned to a surgeon or a group of surgeons and they book their surgical cases into the assigned block of OR time. The time management in the block is performed individually by the surgeon or the group of surgeons. However, after the surgery, all the patients go to downstream facilities such as Post-Anesthesia Care Unit (PACU), which is a shared resource. In this transaction, the delays in admission into PACU possibly occurs due to the unavailability of PACU beds or nurses (Dexter, Epstein, Marcon, & Matta, 2005; Min & Yih, 2010). Then, it can be said that each block schedule is affected by the PACU availability. Fig. 1
                      conceptually illustrates this transaction. The goal of this study is to determine surgery starting times for multiple number of operating rooms given the number and the sequence of surgeries for each OR while reducing the conflict in PACU admission.

When there is congestion in admission to PACU, patients stays in OR until any PACU resource is available and the next surgery cannot begin until current patient is transferred to PACU (Dexter et al., 2005; Price et al., 2011; Marcon & Dexter, 2006). This may cause consecutive waiting delays for the following surgeries. Moreover, if a patient cannot get a prompt post-operative care, this should be under severe consideration. We propose a sophisticated surgery scheduling to resolve this issue.

The problem is formulated as a flexible job shop scheduling model with uncertain task durations. This type of scheduling problem have been widely studied in the last decades (Fortemps, 1997; Lei, 2010; Niu, Jiao, & Gu, 2008; Gonzalez-Rodriguez, Puente, Vela, & Varela, 2008; Wang, Wang, Xu, & Liu, 2013). However, to the best of the knowledge, our problem structure is unique in terms of adding weight on every individual’s waiting between two consecutive streamline processes (OR to PACU). We adopt fuzzy sets to model the uncertainties of activity durations. One advantage of using fuzzy sets over probability distributions is the computational simplicity with expressive ability of uncertain events (Gonzalez-Rodriguez et al., 2008). Scheduling surgeries with our approach only needs experts’ (e.g. surgeons) estimated duration of cases. Thus, the solution is little affected by data. On the other hand, it should be noted that fuzzy set-based scheduling cannot provide a schedule with definite times. We propose a heuristic for determining a particular time within an interval, which provides a usable time schedule for administrators. In this paper, we call it a ‘crisp time schedule’.

This article is organized as follows. The next section overviews the previous literature in surgical scheduling. Section 3 describes the problem including its decision criteria and the problem’s representation under the fuzzy scheduling framework. In Section 4, we provide the methodology to tackle this problem and how we evaluate the obtained solutions. The experimentation results are presented in Section 5 and final concluding remarks are given in Section 6.

@&#LITERATURE REVIEW@&#

This work is largely motivated by Gupta’s paper on surgical suites’ operations management (Gupta, 2007). He describes various surgical operations and introduces associated decision problems. Also, he provides preliminary models and solutions for those problems. Denton and Gupta (2003) address a two-stage stochastic programming model to determine the surgery starting times for one operating room given that the surgery sequences are known. They derive upper bounds for each surgeries, which are independent of the surgery-length durations, and the optimal starting times are determined sequentially. Denton et al. (2007) extend this scheduling problem to add sequencing heuristics. Their focus is to see the sequencing effect on the starting time decisions.

There are literatures on surgical operations management, which concern the downstream effects on the scheduling within the service flow of surgical suites. In 2001, Dexter and his colleague (Dexter, Epstein, & Penning, 2001) propose a staffing solution for PACU, which is derived from statistical analysis of patient delay due to the lack of resources. Dexter et al. (2005) brought up ideas of managerial interventions to reduce the delay on the downstream unit admissions. Marcon and Dexter (2006) conducted research on the effect of surgery sequencing rules on patient flow and the resulting staffing of a downstream unit, PACU. They use a discrete-event simulation to test seven sequencing rules. The best sequencing rule discovered is to sequence half of the surgeries as ascending order of the length, and the other half of the surgeries as descending order. In addition, they conducted sensitivity analysis of the sequencing rule on two-block case (two surgeons in OR) and add-on urgent surgeries. Meyer et al. (2006) address the same patient flow issue and they test a web based system for alerting PACU requirements to PACU unit managers. This system smoothes the patient flow by pulling patients out reasonably early when there are congestions. Afterwards, Schoenmeyr et al. (2009) use a queueing model to predict the relationship among the numbers of surgical cases and recovery beds for reducing or eliminating the congestion into PACU.


                     Jebali, Alouane, and Ladet (2006) propose a single day schedule for multiple operating rooms considering the capacity of the recovery beds as a constraint. They introduce a two-step approach to solve the problem. The first stage is to assign surgeries to operating rooms and the second stage is on the sequencing the surgeries pursuing to improve OR utilization under the various resource-related constraints. They use a mixed integer programming to tackle the problem. Pham and Klinkert (2008) address a surgical suites’ scheduling problem that encompasses multiple resources and limited downstream capacity. They view the problem as a multi-mode job shop scheduling model. Our problem has the same setting with Pham and Klinkert (2008), but the difference is considering uncertainties in surgical operations. The work by Jebali and colleagues and the work by Pham and Klinkert do not take the uncertainties into account when modeling their problems. Hence, a resultant sequence directly determines the starting times. However, when the uncertainties are incorporated the sequence does not explicitly correspond to the starting times of the surgeries.


                     Price et al. (2011) address PACU boarding problem. PACU boarding means an instance that patients overnight in PACU due to the unavailability of ICU or non-ICU. This problem is similar to PACU congestion considered in our study. Their approach is, considering uncertainties in operating suites to balance the admission to and discharging from ICU, and non-ICU by scheduling the block. They formulate an integer programming to improve the block schedule and propose rules of thumb for flexibility and easy adaptability. The solutions are tested using simulation and clinical data. Chow, Puterman, Salehirad, Huang, and Atkins (2011) propose a surgical case scheduler (surgical case assignment) to reduce large congestion into surgical ward. They use a Monte-Carlo simulation to predict expected bed-occupancy under uncertain surgical times and unplanned arrivals. Thereafter, using a mixed integer programming, they make decisions on surgical case acceptances. As another admission control under uncertainty, Min and Yih (2010) propose a stochastic programming model to assign patients to blocks achieving minimized patient waiting times and overtime staffing. The uncertainty they considered are the ICU resource availability due to the uncertain patients’ length of stay over multi-day periods.


                     Hsu, Matta, and Lee (2003) state that PACU availability is critical in determining surgery starting times in a daily surgical operations. Also as Gupta (2007) addresses, surgical suites’ operations incorporate a lot of uncertainties. However, to the best of the knowledge, there is lack of literature that discusses a scheduling problem for surgery starting times of multiple operating rooms with service time uncertainties and limited resource of post-anesthesia care units. Lee and Yih (2012) use a simulation–optimization technique with a genetic algorithm to determine surgery sequences and starting times under the same environmental settings with this paper. The scheduling approach is compared to actual surgery scheduling rules of local hospitals, and has been shown to be better. This paper is an improvement on (Lee & Yih, 2012) in terms of modeling and computational load.

The problem is a tactical level of decision (refer to (Gupta, 2007) for three levels of decisions in surgical suites operations management). The decision is prepared one day or a few days before actual events occur. Thus the scope of the problem is limited to elective surgeries on a particular day. The instance of re-assignment of surgery procedures to another day is not considered since this is more relevant to surgery assignment problem. Although emergent and urgent surgeries can affect overall implementation of the schedule, since hospitals often arrange some of the OR times or several operating rooms to prepare for add-on cases, a tactical decision only with elective cases is considered in this paper. Among the tactical decisions, this paper focuses on determining starting times of surgeries. Thus, a condition of the problem is that the surgery sequences for multiple operating rooms are given. For the readers who are interested in this sequencing issue, please refer to (Denton et al., 2007 & Marcon & Dexter, 2006).

There are four assumptions in the model. (i) All the operating rooms practice block-scheduling strategy. The computational experimentation in this work use one block per operating room. Even though there are multiple blocks per day (e.g. practically two blocks per day per operating room), neither modeling nor solution approach change is necessary and it will be briefly discussed. (ii) Patients and clinical providers including cleaning staffs arrive at OR punctually. (iii) The surgery duration is considered to include a series of surgical operating processes, which are surgery and turnovers (cleaning and setup). The turnover process is associated with another set of scheduling in the surgical suite and it is beyond the scope of this study. In reality, surgeons arrive and leave OR after the setup and before the cleaning, respectively. However, by assuming this, we do not examine the surgeon’s time during the setup and cleanup periods in computation. (iv) It is assumed that there is no delay after PACU. Patients are assumed to leave as soon as they are recovered without any administrative delay and the PACU staffs are assumed not to expedite a patient’s recovery process to accommodate incoming patients from OR.

The decision criteria for this problem are waiting times, idling of OR resources (not PACU), and completion time of all the processes (including PACU). Due to the surgery duration variability and the unavailability of PACU, there are two types of waiting times; the waiting time before surgery and the waiting time after surgery (waiting time before admission to PACU). Fig. 2
                         illustrates the criteria with a schedule of an OR and its realization. Four surgeries (surgery 1, 2, 3, and 4) are sequentially scheduled in the figure. The patient and clinical providers of ‘surgery2’ have to wait until ‘surgery1’ ends. This waiting time is called waiting time before surgery (WB) in this article. Suppose that there is no availability in PACU after surgery2. The patient has to wait until PACU is available. This waiting is called waiting time after surgery (WA) in this article. The WB of surgery3 is comprised of WA of surgery2 and a delay from surgery2. It seems that the same amount of time is double penalized, however, the WA of surgery2 and the WB of surgery3 are experienced by different patients. Thus these two penalties should be tracked individually. The patient of surgery4 is the last on the day and the completion time is calculated as depicted in Fig. 2.

It is well known that the surgical suites are highly uncertain environments. The uncertainties in surgical durations and length of stay (LoS) in PACU are often considered in the literature (Denton et al., 2007; Gupta & Denton, 2008; Chow et al., 2011). It is possible to represent the uncertainties as either probabilistic distributions or fuzzy numbers in the setting of possibility theory. Dubois, Fargier, and Fortemps (2003) and Gonzalez-Rodriguez et al. (2008) stated that the use of fuzzy set and possibility theory might be an alternative to the probabilistic models to build models expressing the uncertainties while reducing computational difficulties of stochastic scheduling techniques.

The uncertainty of task duration in this study is represented as triangular fuzzy numbers (TFN). Given surgeons’ estimated times for a surgical case, such as optimistic, most likely, and pessimistic durations, the elements of a TFN are accordingly assigned to them respectively. Set A in a base set X can be described by a membership function 
                           
                              
                                 
                                    μ
                                 
                                 
                                    A
                                 
                              
                              :
                              X
                              →
                              {
                              0
                              ,
                              1
                              }
                           
                         which assigns each element to its membership degree usually taking values in [0,1]. That is, if it is absolutely certain that 
                           
                              x
                              ∈
                              A
                           
                        , the membership function 
                           
                              
                                 
                                    μ
                                 
                                 
                                    A
                                 
                              
                              (
                              x
                              )
                              =
                              1
                           
                        , but practically, it is less likely that 
                           
                              
                                 
                                    μ
                                 
                                 
                                    A
                                 
                              
                              (
                              x
                              )
                              =
                              1
                           
                        . If it is uncertain but x has at least a little chance of belonging to the set A, the membership function 
                           
                              
                                 
                                    μ
                                 
                                 
                                    A
                                 
                              
                              (
                              x
                              )
                              >
                              0
                           
                        . Here, a horizontal cut of A at level 
                           
                              α
                           
                         (
                           
                              α
                           
                        -cut of A) is a set 
                           
                              
                                 
                                    A
                                 
                                 
                                    α
                                 
                              
                           
                         and the membership degree of elements in 
                           
                              
                                 
                                    A
                                 
                                 
                                    α
                                 
                              
                           
                         is at least 
                           
                              α
                           
                        . A simple three point convention of the membership function with various 
                           
                              α
                           
                         levels is represented as a triangular shape as shown in Fig. 3
                        . For example, from Fig. 3, the membership degree of all the x values associated with 
                           
                              0.5
                           
                         level-cut (a horizontal cut at 
                           
                              μ
                              =
                              0.5
                           
                        ) is at least 0.5.

The triplet of this triangular shape 
                           
                              (
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    a
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         is called a TFN, denoted 
                           
                              
                                 
                                    A
                                 
                                 
                                    ∼
                                 
                              
                              =
                              (
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    a
                                 
                                 
                                    3
                                 
                              
                              )
                           
                        , where 
                           
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              <
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                              <
                              
                                 
                                    a
                                 
                                 
                                    3
                                 
                              
                           
                        , which is a special type of fuzzy set. Here, if a 0% level Support of this TFN is defined as the interval between 
                           
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    a
                                 
                                 
                                    3
                                 
                              
                           
                         and the membership function of this TFN 
                           
                              
                                 
                                    A
                                 
                                 
                                    ∼
                                 
                              
                           
                         is determined as follows.
                           
                              (1)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       A
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   0
                                                
                                                
                                                   for
                                                   
                                                   x
                                                   <
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                         -
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   for
                                                   
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ⩽
                                                   x
                                                   ⩽
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                         -
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               3
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               a
                                                            
                                                            
                                                               3
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   for
                                                   
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ⩽
                                                   x
                                                   ⩽
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   for
                                                   
                                                   x
                                                   >
                                                   
                                                      
                                                         a
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In the scheduling problem, three fuzzy operations are required; the addition, the maximum, and the fuzzy ranking method. The addition operation is used to calculate the completion time. Given two TFNs 
                           
                              
                                 
                                    s
                                 
                                 
                                    ̃
                                 
                              
                              =
                              {
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    s
                                 
                                 
                                    3
                                 
                              
                              }
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    ̃
                                 
                              
                              =
                              {
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    3
                                 
                              
                              }
                           
                        , the fuzzy addition is defined as
                           
                              (2)
                              
                                 
                                    
                                       s
                                    
                                    
                                       ̃
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       ̃
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 )
                                 .
                              
                           
                        
                     

The maximum operation (
                           
                              ∨
                           
                        ) between two TFNs is not simple. Following fuzzy 
                           
                              α
                           
                        -cut interval operations (Gao & Zhang, 2009), the maximum of the two TFNs can be determined as illustrated in Fig. 4
                        . The maximum operation in this study is approximated as follows (Gonzalez-Rodriguez et al., 2008; Lei, 2010; Sakawa and Kubota, 2000).
                           
                              (3)
                              
                                 
                                    
                                       s
                                    
                                    
                                       ̃
                                    
                                 
                                 ∨
                                 
                                    
                                       t
                                    
                                    
                                       ̃
                                    
                                 
                                 ≃
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 ∨
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 ∨
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                                 ∨
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 )
                                 .
                              
                           
                        Since both the fuzzy max and approximated fuzzy max have identical modal point and supports, this approximation is reasonable to use for our scheduling computations. Finally, we used an expected value of a fuzzy quantity (Gonzalez-Rodriguez et al., 2008; Gao & Zhang, 2009; Lei, 2010; Liu & Liu, 2002), given a TFN 
                           
                              
                                 
                                    A
                                 
                                 
                                    ∼
                                 
                              
                           
                         for the fuzzy ranking method.
                           
                              (4)
                              
                                 E
                                 [
                                 
                                    
                                       A
                                    
                                    
                                       ∼
                                    
                                 
                                 ]
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       4
                                    
                                 
                                 (
                                 
                                    
                                       a
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 2
                                 
                                    
                                       a
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       a
                                    
                                    
                                       3
                                    
                                 
                                 )
                                 .
                              
                           
                        Given completion times of each job, represented as TFNs, this expected value metric induces a total ordering 
                           
                              ≻
                           
                        , where any two TFNs 
                           
                              
                                 
                                    A
                                 
                                 
                                    ∼
                                 
                              
                              ,
                              
                                 
                                    B
                                 
                                 
                                    ∼
                                 
                              
                              ,
                              
                                 
                                    A
                                 
                                 
                                    ∼
                                 
                              
                              ≻
                              
                                 
                                    B
                                 
                                 
                                    ∼
                                 
                              
                           
                        , if and only if 
                           
                              E
                              [
                              
                                 
                                    A
                                 
                                 
                                    ∼
                                 
                              
                              ]
                              ⩽
                              E
                              [
                              
                                 
                                    B
                                 
                                 
                                    ∼
                                 
                              
                              ]
                           
                        .

As in the classical definition of the flexible job shop problem (FJSP) with full flexibility, there are n jobs that must be processed on m machines and all the machines are identical. Each job i consists of a sequence of 
                           
                              
                                 
                                    n
                                 
                                 
                                    i
                                 
                              
                           
                         operations (
                           
                              
                                 
                                    o
                                 
                                 
                                    i
                                    1
                                 
                              
                              ,
                              
                                 
                                    o
                                 
                                 
                                    i
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    o
                                 
                                 
                                    
                                       
                                          in
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    o
                                 
                                 
                                    ik
                                 
                              
                              ,
                              k
                              ∈
                              {
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              
                                 
                                    n
                                 
                                 
                                    i
                                 
                              
                              }
                           
                        , is the kth operation of job i) and they must be executed in the given order on any of machines available. One machine processes only one operation at a time and there is neither pre-emption nor interruption. With the processing time of operation 
                           
                              
                                 
                                    o
                                 
                                 
                                    ik
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    ik
                                 
                              
                              >
                              0
                           
                        , FJSP is to assign machines to each operation and to determine a starting time 
                           
                              
                                 
                                    s
                                 
                                 
                                    ik
                                 
                              
                           
                         pursuing to achieve a certain objective or a group of objectives.

Having multiple number of operating rooms, our problem can be understood as a flexible job shop problem (FJSP) with minimum start–start time-lags under the service time uncertainties. The machines refer to PACU resources and the operations in a job correspond to PACU processes. It should be noted that the operations in this model are not referred to surgeries, but to PACU processes. In the streamline from surgeries to PACU, the surgeries can be perceived as a constraint to restrain the start time of PACU. Fig. 5
                         shows the time relation between surgeries and PACU processes. As illustrated in the figure, the starting time of PACU2 must satisfy the time requirement at least the minimum start–start time-lag, which is the same as the duration of surgery2. However, due to the uncertainty, PACU2 cannot start at the end of surgery2 and thus the actual start–start time-lag becomes longer than the minimum time-lag. In case that there are multiple blocks per OR per day and there are breaks (e.g. lunch break) between the blocks, it is simply needed to add a zero-length PACU activity with the start–start time lag of which duration equals to the break.

A feasible schedule of FJSP can be represented with an acyclic directed graph 
                           
                              G
                              =
                              (
                              N
                              ,
                              A
                              ∪
                              D
                              )
                           
                        , where the node set N, the conjunctive arc set A, and the disjunctive arc set D. The nodes denote PACU tasks, the conjunctive arcs correspond to patient sequence within each OR (precedence relations), and the disjunctive arcs represent the sequence of patients who are taken care of by the same PACU resource. Fig. 6
                         illustrates a feasible solution of FJSP that has four operating rooms and three PACU resources. The node S and the node E represent the start and the end node, respectively. We will call patients as their sequences in each OR. For example, the first patient in the first OR is called patient 11. A PACU resource takes care of patient 11, 12, 23, and 32. Another PACU resource gives care to patient 21, 31, and 13. The last PACU resource serves patient 41, 22, 42, and 24 in this feasible solution.

In Fig. 6, the numbers associated with the arcs indicate the service durations represented as TFNs. The TFN aside of the conjunctive arc represents the start–start time-lag between the two nodes, which is the duration of surgery that precedes the PACU task at the end of the arc. The TFN aside of the disjunctive arc implies the PACU LoS. Here, it should be noted that there are only conjunctive arcs from the start node and only disjunctive arcs to the end node. It is because the PACU task requires precedence constraint of surgeries and the surgery constraint has been already applied to the last node for each OR.

Now, we call FJSP with fuzzy service durations fuzzy flexible job shop problem (fFJSP). In the fFJSP, thanks to the additivity axiom of triangular fuzzy numbers (Eq. (2)), a feasible solution graph G can be viewed as a three parallel graphs 
                           
                              
                                 
                                    G
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    G
                                 
                                 
                                    2
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    G
                                 
                                 
                                    3
                                 
                              
                           
                        . That is, 
                           
                              
                                 
                                    G
                                 
                                 
                                    i
                                 
                              
                           
                        , where 
                           
                              i
                              ∈
                              {
                              1
                              ,
                              2
                              ,
                              3
                              }
                           
                        , is the solution graph with corresponding component of TFNs, e.g. 
                           
                              
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                           
                        , with deterministic task durations. In essence, the solution of fFJSP is the one obtained from three deterministic FJSP by an integrated calculation.

After the problem is formulated under the fFJSP framework with minimum start–start time-lag, the decision criteria need additional attention. Classified with the nature of each criterion, WB and idling occur only in the instance of service time uncertainties. WA is associated with PACU resource control to reduce the congested scenario of PACU in addition to the uncertainties. The completion time depends on WA, WB, and idling. Thus, with the deterministic nature of fFJSP, only WA and completion time are considered as decision criteria. The decision related with idling and WB will be dealt with in solution evaluation phase (refer to Section 4.2).

Before explaining WA in the fuzzy scheduling framework, an earliest starting time (
                           
                              
                                 
                                    S
                                 
                                 
                                    E
                                 
                              
                           
                        ) of a node k in a feasible solution graph G should be introduced as follows.
                           
                              (5)
                              
                                 
                                    
                                       S
                                    
                                    
                                       E
                                    
                                 
                                 (
                                 k
                                 )
                                 =
                                 max
                                 {
                                 
                                    
                                       C
                                    
                                    
                                       E
                                    
                                 
                                 (
                                 PP
                                 (
                                 k
                                 )
                                 )
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       E
                                    
                                 
                                 (
                                 PO
                                 (
                                 k
                                 )
                                 )
                                 +
                                 
                                    
                                       l
                                    
                                    
                                       k
                                    
                                 
                                 }
                                 ,
                              
                           
                        where 
                           
                              PP
                              (
                              k
                              )
                           
                         indicates a PACU task preceding k processed on the same PACU resource, and 
                           
                              PO
                              (
                              k
                              )
                           
                         represents a PACU task preceding k in the surgery sequence of the OR, where k belongs. 
                           
                              
                                 
                                    C
                                 
                                 
                                    E
                                 
                              
                           
                         means earliest completion time of the task in the brackets. 
                           
                              
                                 
                                    l
                                 
                                 
                                    k
                                 
                              
                           
                         implies the start–start time-lag between 
                           
                              PO
                              (
                              k
                              )
                           
                         and k. That is, the earliest starting time is the maximum between the time when it satisfies the minimum time requirements (start–start time-lag) and the time when preceding PACU task sharing the same PACU resource finishes. Then the WA occurs when the following instance happens.
                           
                              (6)
                              
                                 
                                    
                                       C
                                    
                                    
                                       E
                                    
                                 
                                 (
                                 PP
                                 (
                                 k
                                 )
                                 )
                                 -
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       E
                                    
                                 
                                 (
                                 PO
                                 (
                                 k
                                 )
                                 )
                                 +
                                 
                                    
                                       l
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 >
                                 0
                                 .
                              
                           
                        
                     

Since the service duration is represented as a TFN, the task completion time and the start time for the next task are also given as a TFN. In Eq. (6), 
                           
                              
                                 
                                    S
                                 
                                 
                                    E
                                 
                              
                              +
                              l
                           
                         and 
                           
                              
                                 
                                    C
                                 
                                 
                                    E
                                 
                              
                           
                         are two TFNs and thus we need to devise a fuzzy quantity to define the WA. An agreement index is used following the idea of (Gonzalez-Rodriguez et al., 2008). Given two TFNs 
                           
                              
                                 
                                    S
                                 
                                 
                                    ∼
                                 
                              
                           
                         and 
                           
                              
                                 
                                    C
                                 
                                 
                                    ∼
                                 
                              
                           
                        , the agreement index (ai) is defined as follows and Fig. 7
                         illustrates this.
                           
                              (7)
                              
                                 ai
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       ∼
                                    
                                 
                                 ,
                                 
                                    
                                       C
                                    
                                    
                                       ∼
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       (
                                       area
                                       
                                          
                                             S
                                          
                                          
                                             ∼
                                          
                                       
                                       ∩
                                       
                                          
                                             C
                                          
                                          
                                             ∼
                                          
                                       
                                       )
                                    
                                    
                                       (
                                       area
                                       
                                          
                                             S
                                          
                                          
                                             ∼
                                          
                                       
                                       )
                                    
                                 
                                 .
                              
                           
                        
                     

Let 
                           
                              
                                 
                                    S
                                 
                                 
                                    ∼
                                 
                              
                           
                         and 
                           
                              
                                 
                                    C
                                 
                                 
                                    ∼
                                 
                              
                           
                         denote 
                           
                              
                                 
                                    S
                                 
                                 
                                    E
                                 
                              
                              (
                              PO
                              (
                              k
                              )
                              )
                              +
                              
                                 
                                    l
                                 
                                 
                                    k
                                 
                              
                           
                         and 
                           
                              
                                 
                                    C
                                 
                                 
                                    E
                                 
                              
                              (
                              PP
                              (
                              k
                              )
                              )
                           
                         in Eq. (6), respectively. As the shaded area in Fig. 7 is closer to the membership function of 
                           
                              
                                 
                                    S
                                 
                                 
                                    ∼
                                 
                              
                           
                        , it is likely hat the WA reduces. That is, the agreement index measures WA in an inverse manner. A mean of the agreement indices for all the nodes is used to represent the system-wise ‘waiting time after’.
                           
                              (8)
                              
                                 
                                    
                                       z
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       ai
                                    
                                    
                                       k
                                    
                                 
                                 ,
                              
                           
                        
                     

The completion time under fFJSP is called fuzzy completion time because it is calculated with the fuzzy arithmetic.
                           
                              (9)
                              
                                 
                                    
                                       z
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       C
                                    
                                    
                                       max
                                    
                                 
                                 =
                                 
                                    
                                       
                                          max
                                       
                                       
                                          i
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          n
                                       
                                    
                                 
                                 
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    C
                                 
                                 
                                    max
                                 
                              
                           
                         denotes the maximum fuzzy completion time and 
                           
                              
                                 
                                    C
                                 
                                 
                                    i
                                 
                              
                           
                         indicates the fuzzy completion time of all the patients in OR i.

We have two goals: maximize 
                           
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                              
                           
                         and minimize 
                           
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                              
                           
                        . Under the fuzzy scheduling framework, the degree to which a schedule s satisfies these two goals is given by
                           
                              (10)
                              
                                 μ
                                 (
                                 s
                                 )
                                 =
                                 min
                                 {
                                 
                                    
                                       μ
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       
                                          
                                             z
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 )
                                 ,
                                 
                                    
                                       μ
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       
                                          
                                             z
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 )
                                 }
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    μ
                                 
                                 
                                    i
                                 
                              
                              (
                              
                                 
                                    s
                                 
                                 
                                    
                                       
                                          z
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              )
                           
                         is satisfaction degree of the obtained value 
                           
                              
                                 
                                    z
                                 
                                 
                                    i
                                 
                              
                           
                         by the schedule s. Now, 
                           
                              
                                 
                                    μ
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    μ
                                 
                                 
                                    2
                                 
                              
                           
                         are defined. Following the idea of (Gonzalez-Rodriguez et al., 2008), we employed a linear function to calculate them as follows (for simplicity, 
                           
                              
                                 
                                    s
                                 
                                 
                                    
                                       
                                          z
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                         is displayed as 
                           
                              
                                 
                                    z
                                 
                                 
                                    i
                                 
                              
                           
                        ).
                           
                              (11)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       z
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   0
                                                
                                                
                                                   for
                                                   
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   <
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               z
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               0
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               z
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               0
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   for
                                                   
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   ⩽
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ⩽
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   1
                                                
                                                
                                                   for
                                                   
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   >
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       μ
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       z
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                
                                                
                                                   for
                                                   
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   <
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               z
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               0
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               z
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               z
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               0
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   for
                                                   
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   ⩽
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   ⩽
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   for
                                                   
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   >
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         2
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Fig. 8
                         describes the functions of 
                           
                              
                                 
                                    μ
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    μ
                                 
                                 
                                    2
                                 
                              
                           
                        . Since 
                           
                              
                                 
                                    μ
                                 
                                 
                                    1
                                 
                              
                           
                         should be maximized and the maximum value of 
                           
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                              
                           
                         is 1, 
                           
                              
                                 
                                    μ
                                 
                                 
                                    1
                                 
                              
                           
                         is an increasing function from 0 to 1, where 
                           
                              0
                              ⩽
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                              
                              ⩽
                              1
                           
                        . 
                           
                              
                                 
                                    μ
                                 
                                 
                                    2
                                 
                              
                           
                         should be minimized and the completion time can be 0 to 
                           
                              ∞
                           
                        , and thus 
                           
                              
                                 
                                    μ
                                 
                                 
                                    2
                                 
                              
                           
                         is a decreasing function from 1 to 0, where 
                           
                              0
                              ⩽
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                              
                              ⩽
                              ∞
                           
                        .

The objective of this fFJSP is to find a schedule s that maximizes 
                           
                              μ
                              (
                              s
                              )
                           
                        . This implies that the solution s is a robust schedule that maximizes the satisfaction of a criterion (either WA or completion time) turned out to be worse. Since the two satisfaction degrees are defined in 
                           
                              [
                              0
                              ,
                              1
                              ]
                           
                        , the decision is well posed only if the 
                           
                              
                                 
                                    z
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                           
                        , where 
                           
                              i
                              ∈
                              {
                              1
                              ,
                              2
                              }
                           
                         and 
                           
                              j
                              ∈
                              {
                              0
                              ,
                              1
                              }
                           
                        , are determined appropriately.

There are two phases in the solution approach. The first phase is to solve the fuzzy flexible job shop problem and the second phase is to finalize the schedule. As it will be shown in the following sections, the solution to the fFJSP is a schedule that describes the order of surgery starting times where each starting time is a fuzzy interval. Given the solution, we propose several heuristics to obtain a crisp schedule in the second phase.

A genetic algorithm (GA) is employed to treat our fFJSP because of the following reasons: (1) FJSP is an NP-hard problem (Garey, Johnson, & Sethi, 1976) and (2) There are multi-objectives and it causes additional complexity.

A chromosome in our GA has two-string vectors, PACU starting time sequence (consequently surgery starting time sequence) and PACU resource assignment. As proposed by Gen, Tsujimura, and Kubota (1994), the tasks in the sequence vector are represented as the operating room which they belong to. That is, an OR appears in the sequence vector as many numbers as its scheduled surgeries. PACU assignment vector consists of the PACU resources associated with the tasks on the sequence vector in the same location. For example, suppose that PACU tasks in Fig. 6 are ordered as follows.
                           
                              
                                 
                                    
                                       O
                                    
                                    
                                       21
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       11
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       41
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       31
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       12
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       22
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       23
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       42
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       24
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       32
                                    
                                 
                                 ≻
                                 
                                    
                                       O
                                    
                                    
                                       13
                                    
                                 
                              
                           
                        A chromosome for this ordered list with assigned PACU resources is illustrated in Fig. 9
                        . As shown in Fig. 6, we can find that a PACU resource takes care of patients following this order, 
                           
                              
                                 
                                    O
                                 
                                 
                                    21
                                 
                              
                              ,
                              
                                 
                                    O
                                 
                                 
                                    31
                                 
                              
                              ,
                              
                                 
                                    O
                                 
                                 
                                    13
                                 
                              
                           
                        , displayed with a disjunctive arc. This order is shown in the PACU assignment-vector as its PACU number ‘2’.

A feasible schedule is constructed with a chromosome. All the tasks in the sequence vector are allocated to their associated PACU resources one by one, from the starting to the last task. Allowing PACU resource idling limitlessly, we can construct infinite number of schedules from one chromosome. However, the schedules inducing unnecessary idling cannot be an optimal schedule in terms of the completion times. Thus, each task is arranged at its earliest starting time as determined by Eq. (5). This means all the tasks are shifted as compact as possible and by doing aforementioned, it is expected to have minimum WA under the given sequence and assignments.

When generating children by either crossover or mutation, the sequence of the chromosome needs to be altered because it, itself, does not identify exact task information. Each task operation is named with a fixed ID as shown in Fig. 10
                        . The bottom of the figure shows a transformed vector displayed in Fig. 9 with this fixed ID.

A two-point crossover is used for a child’s sequence vector and uniform crossover is used for a child’s assignment vector (Gao, Sun, & Gen, 2008). The two points are randomly selected from the parents and the substring within the two points of 
                           
                              parent
                              1
                           
                         is inherited to the child and the genes of 
                           
                              parent
                              2
                           
                        , which were not selected yet, are inherited to the child following the genes’ appearance order in 
                           
                              parent
                              2
                           
                        . An assignment gene selected randomly from either 
                           
                              parent
                              1
                           
                         or 
                           
                              parent
                              2
                           
                         is succeeded to the child’s assignment vector one by one. Fig. 11
                         shows the crossover operations in this study.

A gene-based mutation occurs only in the assignment vector. The locations are randomly selected with a certain probability (we used 0.1) from a parent and another PACU is assigned to the child.

Finally, a pseudocode of our GA is described in Table 1
                        . The terminating condition T is that the search ends after a pre-determined number of generations is met. The satisfaction degree (Eq. (10)) is used for the fitness function. In the algorithm, the encoding indicates the sequence representation as its OR name and the decoding implies the sequence representation with the fixed ID.

A solution to fFJSP provides an ordered list of all the surgery starting times and their starting times represented as fuzzy intervals, more precisely, TFNs. Here, two questions arise: (1) what the crisp time schedule is and (2) how valid the solution to fFJSP is, that is how well the obtained schedule performs in practical use. The following of this section discusses these questions.

Several heuristics are considered to acquire a schedule with particular times (a crisp time schedule), given the fuzzy set based schedule. This process is associated with two decision criteria, ‘waiting before’ and ‘idling’, which were not considered in fFJSP. Assuming that the solution to the fFJSP sufficiently optimizes the schedule in terms of ‘waiting after’ and ‘completion time’, determining a crisp starting time on top of the solution-schedule only focuses on the two remaining criteria (it is true that the completion time will be affected because it is related with all the other three criteria). WB and idling are given by these following equations.
                           
                              (13)
                              
                                 WB
                                 =
                                 
                                    
                                       [
                                       C
                                       (
                                       
                                          
                                             s
                                          
                                          
                                             i
                                             (
                                             j
                                             -
                                             1
                                             )
                                          
                                       
                                       )
                                       -
                                       S
                                       (
                                       
                                          
                                             s
                                          
                                          
                                             ij
                                          
                                       
                                       )
                                       ]
                                    
                                    
                                       +
                                    
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 Idling
                                 =
                                 
                                    
                                       [
                                       S
                                       (
                                       
                                          
                                             s
                                          
                                          
                                             ij
                                          
                                       
                                       )
                                       -
                                       C
                                       (
                                       
                                          
                                             s
                                          
                                          
                                             i
                                             (
                                             j
                                             -
                                             1
                                             )
                                          
                                       
                                       )
                                       ]
                                    
                                    
                                       +
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    s
                                 
                                 
                                    ij
                                 
                              
                           
                         denotes jth surgery of an operating room i. 
                           
                              C
                              (
                              s
                              )
                           
                         and 
                           
                              S
                              (
                              s
                              )
                           
                         indicate actual completion time and scheduled starting time for the surgery s, respectively. It should be noted that WB and idling are an exclusive relationship. When WB occurs in a surgery, idling cannot happen and vice versa.

The first heuristic proposed here is a newsvendor-type of decision. We will call this decision NV. From the exclusive relation between WB and idling, the crisp starting time decision on a surgery can be viewed as dealing with the tradeoff between the cost of lost sales (WB) and overstock cost (Idling). That is, if we allow insufficient times for scheduling a surgery after the preceding surgery starts, it is likely to occur waitings before the surgery. This is equivalent to the lost sale worth of newspapers in the context of the newsvendor problem because we did not prepare enough stock. If we allow a lot of time between two consecutive surgeries, then idling occurs after the preceding surgery (equivalently, before the succeeding surgery). This is the same as that we overstocked newspapers than demand. In this sense, the decision NV is a reasonable decision heuristic for crisp time scheduling. However, since the membership function of a TFN is not a probability distribution, it is not guaranteed that the decision is optimal.

The optimal ratio of the newsvendor model, critical fractile, is given by 
                           
                              q
                              =
                              
                                 
                                    F
                                 
                                 
                                    -
                                    1
                                 
                              
                              (
                              
                                 
                                    p
                                    -
                                    c
                                 
                                 
                                    p
                                 
                              
                              )
                           
                        . Here, p is retail price, c is purchase price, and 
                           
                              
                                 
                                    F
                                 
                                 
                                    -
                                    1
                                 
                              
                           
                         denotes the inverse cumulative distribution of demand. In our model, c is the unit resource cost of the operating theater and 
                           
                              p
                              -
                              c
                           
                         is the unit cost of patient waiting (WB). The demand distribution is the distribution of the earliest starting time of surgery which is equivalent to the earliest starting time of PACU for preceding surgery (Eq. (5)). Since we do not have a distribution, but a TFN, we approximately transform the TFN to a triangular distribution with the same mode, same lower and upper limit, and the inverse cumulative distribution is used.

The other heuristics for the crisp time decision are selecting mode, center within the interval, lower and upper bound of the support of TFN. We will call them Mode, Center, LS, US, respectively. Due to the lack of technical assistance on the aforementioned transform from TFN to triangular distributions, these other heuristics only depend on the fuzzy numbers. Fig. 12
                         illustrates these selection heuristics for a particular time from a given TFN.

Once the solution of fFJSP and a crisp time heuristic are determined, the behavior of the schedule can be evaluated at the moment of its practical use. A schedule is a prior decision before actual events occur. A possible way to evaluate the schedule under the service time uncertainty is to simulate the realizations of the actual events. A Monte-Carlo simulation with N replications is adopted for that purpose. One principle behind the fuzzy logic is that we do not have enough knowledge on the uncertain variables, which means there is no given probability distribution to model the service times in the simulation. Thus we select two types of distributions, lognormal (Dexter et al., 2005; Marcon & Dexter, 2006; Min & Yih, 2010; Waddle, Evers, & Piccirillo, 1998) and uniform distributions.

For keeping similarity between lognormal distribution 
                           
                              lnN
                              (
                              μ
                              ,
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         and TFN, the parameters 
                           
                              μ
                           
                         and 
                           
                              σ
                           
                         are given by solving following equations.
                           
                              (15)
                              
                                 
                                    
                                       e
                                    
                                    
                                       μ
                                       +
                                       
                                          
                                             
                                                
                                                   σ
                                                
                                                
                                                   2
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       a
                                       +
                                       b
                                       +
                                       c
                                    
                                    
                                       3
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       e
                                    
                                    
                                       μ
                                       -
                                       
                                          
                                             σ
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 =
                                 c
                                 .
                              
                           
                        Here, 
                           
                              a
                              ,
                              b
                           
                        , and c indicate the lower limit, upper limit of the supports, and mode of TFN, respectively. The left parts of the equations are mean and mode of log normally distributed random variables. When the uniform distribution is used, the lower and the upper limits of the distribution correspond to the lower and upper limits of the supports for TFN, respectively.

The base problem is an operating suite that has 10 operating rooms and 6 PACU beds. The standard ratio of PACU to OR established by the Americans Society of Post-Anesthesia Nurses is 1.5:1 or 2:1 (American Society of Anesthesiologists, 2002). However, Marcon, Kharraja, Smolski, Luquet, and Viale (2003) conducted a simulation study to determine minimum number of PACU beds and one of their results shows the minimum ratio is less than one. Here, our base problem uses the ratio 0.6:1 and additional problem sets are also examined. All the problem sets including the base one are displayed in Table A.1.

The solution to fFJSP in this study depends on the satisfaction degree functions 
                           
                              
                                 
                                    μ
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    μ
                                 
                                 
                                    2
                                 
                              
                           
                         from Eqs. (11) and (12). Without an expert, the parameters of the functions can be determined empirically. The increases of 
                           
                              
                                 
                                    μ
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    μ
                                 
                                 
                                    2
                                 
                              
                           
                         are tracked as the GA evolves with various settings of the parameters 
                           
                              (
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and 
                           
                              (
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                                 
                                    1
                                 
                              
                              )
                           
                        . If the satisfaction degrees of the two criteria (WA and completion time) evolve similarly with a particular set of the parameters, the set is used for the problem. The base problem uses this set 
                           
                              (
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              (
                              0.7
                              ,
                              1.0
                              )
                           
                         and 
                           
                              (
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                                 
                                    0
                                 
                              
                              ,
                              
                                 
                                    z
                                 
                                 
                                    2
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              (
                              11
                              ,
                              14
                              )
                           
                        .

There are four experiment sets in this section; (i) convergence of the proposed genetic algorithm, (ii) evaluation of different crisp-time heuristics, (iii) comparison with the proposed approach to another method, and (iv) determination of appropriate PACU to OR ratios. It is needed to investigate if the obtained solution converges to the optimality in our GA search. Given three different problem sets, a variance from ten solutions for each set is looked into for that purpose.

The second experiment is to evaluate what crisp-time heuristic provides the most reliable schedule. As discussed above, five heuristics have been devised to suggest a crisp starting time from a fuzzy interval. Since the newsvendor (NV) heuristic requires the unit price for idling and waiting time, we examine two unit cost ratios of idling to waiting, 2:1 and 5:1 (which imply that the idling of resources is twice or five times expensive than waitings). In addition, the Monte-Carlo simulation uses two probabilistic distributions as introduced in the previous section. In sum, there are four experiment settings to evaluate the five crisp-time schedules. All of the four decision criteria are considered and the most reliable time schedule is selected.

In order to investigate the performance of the proposed method, we use a simulation based optimization technique Lee and Yih (2012) as a counter-part approach. The testing beds are the problem sets, 10by6 (10 operating rooms, 6 PACU resources) and 5by3. The NV heuristic is used to determine a crisp schedule and the unit cost ratio is set to 2:1. The comparison is conducted in two probability distributions, lognormal and uniform distributions. Hereafter, the simulation based optimization algorithm will be called SimGA and the proposed algorithm is called FzGA.

Finally, effective ratio of PACU to OR is determined with use of our approach. This investigation possibly gives a managerial insight to the administrators in surgical operating suites. Assuming there are 10 operating rooms, we vary the number of PACU resources from 3 to 9, which means the ratios examined are from 0.3 to 0.9. The performances from all the aspects of decision criteria are presented and the most suitable ratios are determined.

We executed a GA ten times and the mean and variance of ten resultant objective values are displayed in Table A.2. From three sets of problems (base problem, five ORs and three PACUs, and 15 ORs and nine PACU resources), we observe the variances are very small. Hence we believe the GA converges within the termination condition 
                           
                              T
                              =
                              300
                           
                         generations.

We use 
                           
                              N
                              =
                              50
                           
                         Monte-Carlo samplings to evaluate the five crisp schedules. Table 2
                         summarizes the results from lognormal distribution. Table A.3 and A.4 show the results from uniform distribution. The numbers on the same row with the decision criteria indicate the mean values obtained from corresponding heuristics. The values below the means imply 
                           
                              p
                              -
                              values
                           
                         for testing hypothesis, 
                           
                              
                                 
                                    H
                                 
                                 
                                    0
                                 
                              
                           
                        : the mean from A heuristic equals to B heuristic. It should be noted that WA in the tables are not the values of 
                           
                              
                                 
                                    z
                                 
                                 
                                    1
                                 
                              
                           
                         in Eq. (8), but the sum of waiting times after the surgery experienced by all the patients.

When the duration length values are derived from log-normal distributions, although NV does not always perform the best throughout the decision criteria, its performance is reasonably accepted. One advantage of NV is that it reacts to the unit-cost ratio as it is designated. This means the schedule from NV is flexible and can be easily adapted to any hospital. WB and idling from NV and Mode are similar in case of the unit-cost ratio=2:1, whereas they are significantly different in case of the unit-cost ratio=5:1. Since NV reduces idling at the cost of WB and considering higher unit cost for idling resources, the schedule from NV is believed to be better than the one from Mode. Similar analysis can be applied to the comparison with Center heuristic. The second advantage of NV is that it produces a balanced schedule. When NV is compared to LS, LS performs better in idling and completion time, but NV functions better in waiting time. Even though the unit cost for idling is higher, the large waitings from LS cannot be acceptable.

When the service durations are uniformly distributed, behavioral patterns of the five heuristics are similar. However, overall performance gets worse and the differences between the heuristics are weaker. Still, the schedule induced by NV is shown to be flexible and balanced.

In (Lee & Yih, 2012), we have compared SimGA with simple scheduling rules employed by regional hospitals using the same performance measures in this paper. The simple rules are based on deterministic time estimate of surgical cases and PACU LoS. We have shown that SimGA performs better.

This study compares our new approach (FzGA) to the previous one (SimGA), and the results are summarized in Table 3
                        . The three numbers in each cell indicate mean result-values from FzGA, SimGA, and p-value for testing differences between them, respectively. The bottom row shows the computation time in minutes.

Overall, regardless of the probability distribution and the problem size, FzGA shows significantly shorter WB and similar idle times. The performance of FzGA in WA and completion time is also better than SimGA, but the gap is not large, even though, mostly, they are significantly different. In terms of CPU times, FzGA needs only 15–25% CPU time of SimGA.

We have shown that our proposed methodology gives a good surgery schedule considering PACU resource constraints under the service duration uncertainties. All of the problem sets, so far, have been used the ratio, 0.6:1, which is much less than the standard 1.5:1 or 2:1.


                        Fig. 13
                         illustrates the obtained values of the four decision criteria when the proposed methodology was applied to schedule surgeries in those hospital environments. Each value is obtained from 50 replicated sampling of the service length distribution. The lognormal distribution is used. As previously stated, WA, WB, and idling are the sum of all those events in simulated execution of the schedule. Since there are 37 patients scheduled in this surgical suite (refer to Table A.1), expected waiting or expected idling experienced by each surgical case are calculated by dividing the resultant value by 37.

All the criteria except for WB show significant decrease as the ratio reaches to 1. The waiting after surgery becomes 0, as expected, if the ratio is 0.9. Since WA is very critical to patients’ health conditions, this should be minimized as much as possible. However, there is a trade-off between the number of PACU resources and WA. If a little delay before the admission to PACU is acceptable, subtle adjustment of the number of PACU resources can be done. From this experimentation, although it depends on the resource cost of PACU, the ratio around 0.7 is reasonable because it causes only 1.3hours of WA (1.3/37hours for each patient on average) and the other criteria show similar performance to the instance of the ratio 0.9.

@&#CONCLUSION@&#

This study addresses a surgery scheduling problem with service time uncertainty and resource constraint of post-anesthesia care units (PACU). Given that the sequences of surgeries are known, surgery starting times are determined considering expected congestion in the admission to PACU and, consequently, the schedule improves patient-flow and clinical resource-use in surgical operating units. We construct the problem as a fuzzy flexible job shop scheduling model and a two-stage decision approach is proposed. In the first stage, with use of a genetic algorithm, an ordered list of the surgery starting times are provided, which takes the limited capacity of PACU into consideration under the fuzzy scheduling framework. The ordered list represents relative starting times and each starting time is expressed in fuzzy intervals. Thus in the second phase, a heuristic decision rule, which resembles an optimal decision level in newsvendor model, is employed to obtain crisp time schedules.

In the computational experimentation, the evaluation of our solution is conducted by a Monte-Carlo simulation. Uniform distributions and log-normal distributions are employed to model embedded probabilistic distributions of the service time lengths. From both distributions, the crisp time-heuristic provides a schedule that is flexible and balanced. The proposed approach is compared with our previous simulation-based scheduling, which has outperformed simple scheduling rules adopted in regional hospitals. In addition to the comparison, appropriate ratio of PACU to OR is examined.

There are several issues for a full-scale implementation of the proposed approach in hospital. First, a responsive planning for add-on cases needs to be considered. Firstly, we may assign the add-on cases with priories that depend on some severity measures. After assigning add-on cases, a fast re-scheduling approach can determine starting times of the remaining cases on that day. Second, as discussed above, census dependent length of stay in PACU can be considered. One of the practical solutions is presented in Meyer et al. (2006) and in the scheduling context, a function that explains the relationship between LoS and census can be integrated into the PACU modeling process. Additionally, as one of a high-level decisions, the admission control for elective surgeries considering congested downstream facilities can be discussed.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.ejor.2014.03.043.


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

