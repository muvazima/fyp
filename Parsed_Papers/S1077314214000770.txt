@&#MAIN-TITLE@&#Hybrid structural and texture distinctiveness vector field convolution for region segmentation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A hybrid structural and texture distinctiveness active contour method is proposed.


                        
                        
                           
                           We combine texture distinctiveness and intensity variation into multifunctional VFC.


                        
                        
                           
                           We used texture distinctiveness to enable automatic active contour initialization.


                        
                        
                           
                           Our approach improves and accelerates convergence.


                        
                        
                           
                           Experiments using 3 datasets showed better or comparable segmentation accuracy.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Texture distinctiveness

Active contours

Vector field convolution

Difficult image background

Segmentation

Image processing

@&#ABSTRACT@&#


               
               
                  The segmentation of objects has been an area of interest in numerous fields. The use of texture has been explored to improve convergence in the presence of cluttered backgrounds or objects with distinct textures, where intensity variations are insufficient. Additionally, saliency and feature maps have been applied for contour initialization. However, taking advantage of texture to improve initialization and convergence has not been extensively explored. To address this, we propose a hybrid structural and texture distinctiveness vector field convolution (STVFC) approach, where both the structural characteristics and the concept of texture distinctiveness are incorporated into a multi-functional vector field convolution (VFC) model. In this novel approach, texture distinctiveness is used to enable automatic initialization and is incorporated with intensity variation to improve and accelerate convergence towards the object boundary. Experiments using three datasets, containing natural images and Brodatz textures, demonstrated that STVFC achieved better or comparable segmentation accuracy.
               
            

@&#INTRODUCTION@&#

Object segmentation has been an area of great interest due to its many applications in the fields of robotics [1,2], medical imaging [3,4] and remote sensing [5]. Numerous approaches have been proposed over the years including a popular group of approaches called active contours. The active contour model or snake, initially proposed by Kass et al. [6], uses an energy minimizing spline to extract an object’s boundary. The spline adapts to the object contour using internal and external energy components. The internal energy enforces a smoothness constraint or prior upon the snake while the external energy attracts the snake towards the object’s boundary using image characteristics. Many approaches have built upon this idea [7–12], adapting the internal and external energies to overcome drawbacks of the original model. These drawbacks include user initialization or supervision problems [7–9], poor convergence to boundary concavities [10,11], slow convergence and parameter dependencies [12].

In particular, the limitation of contour initialization has been explored to improve active contour performance. Approaches have tried reducing the snake’s sensitivity to the initialization by increasing the snake’s dynamics [13]. Other approaches have used user initialization or an automatic initialization of short snakes at high intensity gradients [14–16], but have shown difficulties with boundary concavities [16,17]. Methods introduced which are able to handle boundary concavities [18,19] have their limitations: requiring user initialization, complex computation and noise sensitivity [12].

Texture has been proposed to drive active contours toward more accurate segmentations [20–24] by using local binary patterns and Gabor features in images. These approaches, however, do not use texture information for initializing the contour. In order to define the initial contour, saliency or feature maps have been used [25–30], however with no implementation for segmentation. Moreover, these approaches make use of only intensity information without taking advantage of color, which can also be a distinguishing feature of an object. An approach which explicitly considers the textural characteristics of natural images for initialization and improves convergence towards object boundaries in natural and cluttered images would be of great interest.

The main contribution of this paper is a new external energy functional: the hybrid structural and texture distinctiveness vector field convolution (STVFC) for a multi-functional VFC framework with improved automatic snake initialization. The concept of texture distinctiveness is used to develop the initial contour and is also incorporated into the external energy functional to improve snake convergence in images with weak edges and/or highly textured scene content. Texture distinctiveness explicitly considers textural characteristics in the image to determine the distinctiveness of a region. This feature is used to characterize texture variation and is incorporated into a hybrid external energy functional that also includes intensity variation (the image’s structural characteristics). The texture variation helps to overcome the issues shown in Fig. 1
                     , where a cluttered background or weak structural variation normally causes snakes to attract to local minima in the background. The resulting hybrid variation not only improves STVFC’s ability to handle strong textural objects and backgrounds, but also high curvature (see Fig. 2
                     ). To investigate the STVFC’s potential, it is evaluated against seven state-of-the-art approaches including parametric and non-parametric approaches, some of which consider texture for contour evolution using a variety of performance evaluation metrics. Experimental results using automatic and common initializations for three public datasets show the superior performance of STVFC when compared to existing contour detection methods.

@&#RELATED WORK@&#

The active contour model or snake was first introduced by Kass et al. [6] as a unified framework for contour detection and applied to motion tracking and stereo matching. This snake however, suffers from limitations including convergence rate, parameter sensitivity, high curvature boundaries and initialization dependences. Henceforth, proposed improvements can be divided into two types: parametric [6,13,31] and non-parametric [24,32–34].

Parametric active contours determine object boundaries by minimizing an energy functional consisting of internal and external energies. Various external forces have been proposed to improve the capture range of the original snake approach [6], including pressure [13] and distance potential forces [35], however fail to converge to boundary concavities [17]. Gradient vector flow (GVF) [31] increases capture range, decreases initialization sensitivity and improves concave boundary convergence, however is noise and parameter sensitive and computationally complex [18]. Vector field convolution (VFC) [18,36] is more robust to noise and less computationally complex but is dependent upon the generated edge map and has problems converging in cluttered backgrounds. More recently, the decoupled active contour (DAC) [12] approach was proposed, which has shown less parameter sensitivity, more noise robustness and better convergence with concave boundaries than prior works. DAC decouples the internal and external energies and optimizes each individually, but does not automatically initialize the contour. The second type of active contours are non-parametric approaches which were designed to handle high curvature boundaries, however fail in the presence of broken edges [22], are slow to converge and exhibit high noise sensitivity [12].

The contour initialization also has a large impact on the contour’s performance [10,13,16]. This has been addressed by reducing the snake sensitivity [13] and increasing the capture range [10,37]. Re-initialization [38] has also been explored to periodically adjust the level set function for more stable curve evolution. Other approaches have attempted to improve the contour’s ability to handle boundary concavities [18,19] however require complex computation and have increased noise sensitivity [12]. User input has also been explored, through user interaction [39–41] or user initialization [42,43]. Yet involving user input can result in user bias, increased computation time and sensitivity to user input [41].

To overcome issues with contour initialization, contour evolution can be optimized. Many traditional approaches [6,10,13,18] have restricted their external energy definition to structural variation. However in the presence of highly textured objects, strong structural backgrounds or weak edges, this can lead to inaccurate segmentation. Taking into consideration texture characteristics can increase accuracy [20–24] by taking advantage of image transformations, intensity and statistical models. One approach transforms images into the Gabor features space to guide a geodesic active contour model towards texture changes [21]. This approach however is computationally intensive and sensitive to illumination changes due to the monotonic responses of Gabor filters [20]. Local binary pattern operators (LBP) [44] have also been used to direct active contours, however the optimal patch size is limited to the textures found in the image. As such, these approaches are subject to default initial contours and parameter sensitivity.

An automatic contour initialization can help mitigate user-related limitations but strong structural background and object textures affect its performance. As such, the active contour may initialize far from the object and increase the probability of converging to local minima slowing its convergence. Texture, on the other hand, may be useful in improving the initialization and segmentation by differentiating object from background. Approaches using texture [20,21,23], such as non-local active contours (NLAC) [45], use it exclusively for contour evolution and not for initialization. Alternatively, saliency or feature maps that consider texture have been used for initialization [25,26,29,30] but not for driving the contour. Combining the use of texture in initialization can increase the contour’s proximity to the object from the start. Then using texture again in driving the contour, the overall segmentation performance can be improved.

More related to our approach, Kovacs et al. [27] proposed the Harris-based gradient vector flow (HGVF) and the Harris-based vector field convolution (HVFC) [28] which computes feature maps using a modified Harris edge and corner detector. The attractive points are selected from the feature maps as local minima and the convex hull around them is computed and used as an initial contour for the snake. The computed feature maps replace the image gradient map to compute the GVF and VFC external force fields. A drawback of these approaches is the initialization depends on strong structural features within the object and assumes a homogeneous background. STVFC instead uses texture distinctiveness to differentiate the object irregardless of the type of texture within the object.

@&#METHODOLOGY@&#

@&#BACKGROUND@&#

The parametric active contour model or snake is a deformable parametric curve, 
                           
                              v
                              (
                              s
                              )
                              =
                              (
                              x
                              (
                              s
                              )
                              ,
                              y
                              (
                              s
                              )
                              )
                              ,
                              s
                              ∈
                              [
                              0
                              ,
                              1
                              ]
                           
                         enforced by internal and external constraints to minimize an energy functional [6]:
                           
                              (1)
                              
                                 
                                    
                                       E
                                    
                                    
                                       snake
                                    
                                 
                                 =
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       E
                                    
                                    
                                       int
                                    
                                 
                                 (
                                 v
                                 (
                                 s
                                 )
                                 )
                                 +
                                 
                                    
                                       E
                                    
                                    
                                       ext
                                    
                                 
                                 (
                                 v
                                 (
                                 s
                                 )
                                 )
                                 ds
                                 =
                                 
                                    ∫
                                    
                                       0
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                α
                                                (
                                                s
                                                )
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      2
                                                   
                                                
                                                (
                                                s
                                                )
                                                +
                                                β
                                                (
                                                s
                                                )
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      ss
                                                   
                                                   
                                                      2
                                                   
                                                
                                                (
                                                s
                                                )
                                             
                                             
                                                ︸
                                             
                                          
                                       
                                       
                                          
                                             
                                                E
                                             
                                             
                                                int
                                             
                                          
                                       
                                    
                                 
                                 -
                                 γ
                                 (
                                 s
                                 )
                                 
                                    
                                       E
                                    
                                    
                                       ext
                                    
                                 
                                 (
                                 v
                                 (
                                 s
                                 )
                                 )
                                 ds
                                 .
                              
                           
                        
                     

The internal energy 
                           
                              
                                 
                                    E
                                 
                                 
                                    int
                                 
                              
                           
                         controls the spline’s smoothness and rigidity and is computed as the weighted-sum of the first and second order derivatives of 
                           
                              v
                              (
                              s
                              )
                           
                        . The parameters 
                           
                              α
                              ,
                              β
                           
                         and 
                           
                              γ
                           
                         penalize the slope, curvature and the external force respectively. The external energy 
                           
                              
                                 
                                    E
                                 
                                 
                                    ext
                                 
                              
                           
                         attracts the snake towards object boundaries.

The VFC [18] approach overcomes limitations of external energy functionals such as initialization dependencies and concavities by convolving a vector field kernel 
                           
                              k
                              (
                              x
                              ,
                              y
                              )
                           
                         with the structural variation map 
                           
                              f
                              (
                              x
                              ,
                              y
                              )
                           
                         of an image 
                           
                              I
                              (
                              x
                              ,
                              y
                              )
                           
                        :
                           
                              (2)
                              
                                 
                                    
                                       F
                                    
                                    
                                       VFC
                                    
                                 
                                 =
                                 f
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ∗
                                 k
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ,
                              
                           
                        where
                           
                              (3)
                              
                                 k
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 w
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ·
                                 n
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ,
                              
                           
                        
                        
                           
                              (4)
                              
                                 n
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  -
                                                                  x
                                                               
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              2
                                                                           
                                                                        
                                                                        +
                                                                        
                                                                           
                                                                              y
                                                                           
                                                                           
                                                                              2
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  -
                                                                  y
                                                               
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              2
                                                                           
                                                                        
                                                                        +
                                                                        
                                                                           
                                                                              y
                                                                           
                                                                           
                                                                              2
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   :
                                                
                                                
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   
                                                   ≠
                                                   
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                             
                                                
                                                   [
                                                   0
                                                   ,
                                                   0
                                                   ]
                                                   :
                                                
                                                
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   =
                                                   (
                                                   0
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              n
                              (
                              x
                              ,
                              y
                              )
                           
                         is the unit vector pointing to the origin of the kernel and 
                           
                              w
                              (
                              x
                              ,
                              y
                              )
                           
                         is the magnitude of the vector field kernel:
                           
                              (5)
                              
                                 w
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       (
                                       q
                                       +
                                       ∊
                                       )
                                    
                                    
                                       -
                                       κ
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              q
                              =
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          y
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                         represents the distance to the kernel origin, and 
                           
                              κ
                           
                         and 
                           
                              ∊
                           
                         are positive parameters to control how the magnitude decreases. 
                           
                              w
                              (
                              x
                              ,
                              y
                              )
                           
                         is inspired by Newton’s law of universal gravitation [18]. This is evident in the case of 
                           
                              ∊
                              =
                              0
                           
                         and 
                           
                              κ
                              =
                              2
                           
                        , where 
                           
                              w
                              (
                              x
                              ,
                              y
                              )
                              =
                              
                                 
                                    1
                                 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                        .

The hybrid structural and texture distinctiveness VFC (STVFC) is designed to improve snake convergence towards region boundaries by harnessing the textural distinctiveness between image regions. Fig. 3
                         shows the overall architecture of the proposed approach which can be broken down into five key steps:


                        Sparse texture model: Texture regions (atoms) are learned to develop a texture model that represents the image’s underlying textural characteristics (see Section 3.3).


                        Statistical texture distinctiveness: The sparse texture model is analyzed quantitatively by considering relationships between representative texture atoms and measuring the distinctiveness between them. This is stored in a statistical graph model (see Section 3.4).


                        Texture distinctiveness: The statistical graph model is used to compute the texture distinctiveness map used for initialization and external energy formulation (see Section 3.5).


                        Multi-functional vector field convolution: Texture variation (generated from texture distinctiveness) is combined with structural characteristics to form an external energy. This energy is then incorporated into a multi-functional VFC framework (see Section 3.6).


                        Texture-guided contour initialization: Contour initialization is formulated using the texture distinctiveness energy functional to determine the region of interest (Section 3.7).

A detailed description of each stage is provided in the following sections.

Since different regions in images can be distinguished through distinct texture characteristics, we want to make explicit use of the concept of texture distinctiveness. For natural images, the texture characteristics can be learned locally to form a texture feature model. The sparse texture model formulation is shown below [46].

Let 
                           
                              I
                              (
                              x
                              ,
                              y
                              )
                           
                         be the 
                           
                              U
                              ×
                              V
                           
                         image and 
                           
                              ℵ
                           
                         a neighborhood centered at pixel location 
                           
                              (
                              x
                              ,
                              y
                              )
                           
                         in I. For each color channel c, the texture model is denoted as 
                           
                              
                                 
                                    h
                                 
                                 
                                    c
                                 
                              
                              (
                              x
                              ,
                              y
                              )
                           
                        , a vector with stacked columns of 
                           
                              ℵ
                           
                        . Given the local textural representation in the L
                        *
                        a
                        *
                        b
                        * color space 
                           
                              h
                              
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 
                                    L
                                    *
                                    a
                                    *
                                    b
                                    *
                                 
                              
                              =
                              〈
                              
                                 
                                    h
                                 
                                 
                                    L
                                 
                              
                              (
                              x
                              ,
                              y
                              )
                              
                                 
                                    h
                                 
                                 
                                    a
                                 
                              
                              (
                              x
                              ,
                              y
                              )
                              
                                 
                                    h
                                 
                                 
                                    b
                                 
                              
                              (
                              x
                              ,
                              y
                              )
                              〉
                           
                         with 75 elements, a compact version of 
                           
                              h
                              
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 
                                    L
                                    *
                                    a
                                    *
                                    b
                                    *
                                 
                              
                           
                         is produced to increase the variance between the elements of the texture descriptor. As a result, the sparse texture model derivation and the active contour efficiency are improved. The textural representation 
                           
                              t
                              (
                              x
                              ,
                              y
                              )
                           
                         is generated by taking the 
                           
                              ξ
                           
                         principal components of 
                           
                              h
                              
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 
                                    L
                                    *
                                    a
                                    *
                                    b
                                    *
                                 
                              
                           
                         with the highest variance using PCA:
                           
                              (6)
                              
                                 t
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 〈
                                 
                                    
                                       Φ
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 h
                                 
                                    
                                       (
                                       x
                                       ,
                                       y
                                       )
                                    
                                    
                                       L
                                       *
                                       a
                                       *
                                       b
                                       *
                                    
                                 
                                 )
                                 |
                                 1
                                 ⩽
                                 i
                                 ⩽
                                 ξ
                                 
                                 〉
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    Φ
                                 
                                 
                                    i
                                 
                              
                           
                         is the 
                           
                              i
                              th
                           
                         principal component of 
                           
                              h
                              
                                 
                                    (
                                    x
                                    ,
                                    y
                                    )
                                 
                                 
                                    L
                                    *
                                    a
                                    *
                                    b
                                    *
                                 
                              
                           
                        . The parameter 
                           
                              ξ
                           
                         is chosen considering a selection criterion based on variance compaction. Then, as suggested for many machine learning approaches [47], the 
                           
                              ξ
                           
                         principal components which exemplify 
                           
                              95
                              %
                           
                         of all textural representations are collected. Given the set of 
                           
                              U
                              ×
                              V
                           
                         local texture feature representations extracted from the image I:
                           
                              (7)
                              
                                 T
                                 =
                                 {
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       U
                                       ×
                                       V
                                    
                                 
                                 }
                                 ,
                              
                           
                        where T is a global texture model defined to represent the textural characteristics for 
                           
                              I
                              (
                              x
                              ,
                              y
                              )
                           
                        . Globally, textures can be identified as repeated patterns that define a select number of learned textures. In this context, a smaller number of regions with unique texture patterns exists in comparison to the total number of image pixels. This can be generalized, where each distinct local textural representation can be defined as an atom and used to represent the image’s global textural characteristics. The sparse texture model is defined as a set of 
                           
                              m
                              ≪
                              U
                              ×
                              V
                           
                         representative texture atoms:
                           
                              (8)
                              
                                 
                                    
                                       T
                                    
                                    
                                       r
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                t
                                             
                                             
                                                i
                                             
                                             
                                                r
                                             
                                          
                                          |
                                          1
                                          ⩽
                                          i
                                          ⩽
                                          m
                                       
                                    
                                 
                                 ,
                              
                           
                        where the 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                        -norm between the first u principal components of each representative texture atom 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         and its corresponding set of local textural representations (denoted by 
                           
                              
                                 
                                    S
                                 
                                 
                                    i
                                 
                              
                           
                        ) are minimized using the k-means algorithm [48].
                           
                              (9)
                              
                                 
                                    
                                       T
                                    
                                    
                                       r
                                    
                                 
                                 =
                                 arg
                                 
                                 min
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          m
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             
                                                t
                                             
                                             
                                                j
                                             
                                             
                                                r
                                             
                                          
                                          ∈
                                          
                                             
                                                S
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 ‖
                                 
                                    
                                       t
                                    
                                    
                                       j
                                    
                                    
                                       r
                                    
                                 
                                 -
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                    
                                       r
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

The resulting sparse texture model summarizes an image by a representative set of distinct local textures as shown in Fig. 4
                        . This model is useful in determining texture distinctiveness which helps to better extract the desired object boundary.

Texture distinctiveness refers to the distinct texture regions that draw a viewer’s attention in terms of visual attributes like color and orientation. The underlying goal is to take advantage of the image’s global texture characteristics to localize the distinct texture regions of interest. A statistical texture distinctiveness approach [46] is used in the proposed approach for the purpose of initializing and guiding the active contour. Statistical texture distinctiveness uses the learned sparse texture model to quantitatively measure the relationships between representative textural atoms. The measurement indicates how unique the texture characteristics of a region are compared to the rest of the image.

Given the set of representative atoms 
                           
                              
                                 
                                    T
                                 
                                 
                                    r
                                 
                              
                              =
                              {
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                                 
                                    r
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    2
                                 
                                 
                                    r
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    t
                                 
                                 
                                    m
                                 
                                 
                                    r
                                 
                              
                              }
                           
                         two atoms are defined as 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                           
                        ; where the first atom can be realized as a function of the second atom. For example, 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         can be expressed as 
                           
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                           
                         in the presence of noise:
                           
                              (10)
                              
                                 
                                    
                                       t
                                    
                                    
                                       j
                                    
                                    
                                       r
                                    
                                 
                                 =
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                    
                                       r
                                    
                                 
                                 +
                                 
                                    
                                       η
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 .
                              
                           
                        
                     

The noise process between the texture atoms 
                           
                              
                                 
                                    η
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                         is assumed to be an independent and identically distributed noise process. The probability that this realization is true corresponds to a product of probabilities. These probabilities are the probabilities of the first atom’s individual elements being a realization of their corresponding element in the second atom 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                    ,
                                    k
                                 
                                 
                                    r
                                 
                              
                           
                        . In other words, the probability that the first atom is a realization of the second atom can be calculated as:
                           
                              (11)
                              
                                 P
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                    
                                       r
                                    
                                 
                                 |
                                 
                                    
                                       t
                                    
                                    
                                       j
                                    
                                    
                                       r
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       η
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∏
                                       
                                       
                                          k
                                       
                                    
                                 
                                 P
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       i
                                       ,
                                       k
                                    
                                    
                                       r
                                    
                                 
                                 |
                                 
                                    
                                       t
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                    
                                       r
                                    
                                 
                                 )
                                 .
                              
                           
                        
                     

The probability, 
                           
                              P
                              (
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                              |
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                              )
                           
                        , can be seen as the statistical similarity between the two representative atoms 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                           
                        . 
                           
                              P
                              (
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                              |
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                              )
                              ≈
                              1
                           
                         indicates that the two texture patterns are very similar, while a low value of 
                           
                              P
                              (
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                              |
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                              )
                           
                         reflects a high statistical distinctiveness between both atoms. However, the statistical texture distinctiveness between the two atoms is of greater interest and so the probability 
                           
                              
                                 
                                    β
                                 
                                 
                                    ij
                                 
                              
                           
                         of 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         not being a realization of 
                           
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                           
                         is defined as:
                           
                              (12)
                              
                                 
                                    
                                       β
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 1
                                 -
                                 P
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                    
                                       r
                                    
                                 
                                 |
                                 
                                    
                                       t
                                    
                                    
                                       j
                                    
                                    
                                       r
                                    
                                 
                                 )
                                 =
                                 1
                                 -
                                 
                                    
                                       
                                          ∏
                                       
                                       
                                          k
                                       
                                    
                                 
                                 P
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       i
                                       ,
                                       k
                                    
                                    
                                       r
                                    
                                 
                                 |
                                 
                                    
                                       t
                                    
                                    
                                       j
                                       ,
                                       k
                                    
                                    
                                       r
                                    
                                 
                                 )
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    η
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                         is modeled as independent and identically distributed zero-mean Gaussian noise with variance 
                           
                              
                                 
                                    σ
                                 
                                 
                                    n
                                 
                              
                           
                        . 
                           
                              
                                 
                                    σ
                                 
                                 
                                    n
                                 
                              
                           
                         is selected empirically to be the variance of the 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                        -norm between the representative texture atoms, i.e. 
                           
                              
                                 
                                    σ
                                 
                                 
                                    n
                                 
                              
                              =
                              Var
                              (
                              |
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                              -
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        . Including the Gaussian-distributed noise into the formulation, Eq. 13 is written as follows:
                           
                              (13)
                              
                                 
                                    
                                       β
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 1
                                 -
                                 exp
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             
                                                -
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            t
                                                         
                                                         
                                                            i
                                                            ,
                                                            k
                                                         
                                                         
                                                            r
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            t
                                                         
                                                         
                                                            j
                                                            ,
                                                            k
                                                         
                                                         
                                                            r
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      n
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Given the sparse texture model 
                           
                              
                                 
                                    T
                                 
                                 
                                    r
                                 
                              
                              =
                              {
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                                 
                                    r
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    2
                                 
                                 
                                    r
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    t
                                 
                                 
                                    m
                                 
                                 
                                    r
                                 
                              
                              }
                           
                         and the statistical texture distinctiveness 
                           
                              
                                 
                                    β
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                         between the atoms 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                           
                        , a graph model is constructed to represent the relationships. The complete weighted graph 
                           
                              G
                              =
                              {
                              V
                              ,
                              E
                              }
                           
                         is defined by the set of m vertices delineating the representative texture atoms 
                           
                              {
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                                 
                                    r
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    t
                                 
                                 
                                    m
                                 
                                 
                                    r
                                 
                              
                              }
                           
                         and the corresponding 
                           
                              
                                 
                                    m
                                    ·
                                    (
                                    m
                                    -
                                    1
                                    )
                                 
                                 
                                    2
                                 
                              
                           
                         edges between each pair of vertices. Each edge 
                           
                              
                                 
                                    e
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                         is then weighted with the statistical texture distinctiveness 
                           
                              
                                 
                                    β
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                         between the two atoms 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                           
                        .

The texture distinctiveness map used for initialization and external energy composition can now be computed based on the statistical graph model previously described. This is accomplished by quantifying the expected distinctiveness of each texture atom 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         compared to the rest of the atoms. To enhance the texture distinctiveness map, we also incorporate a high-level aspect by considering the relative spatial location of each region 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                              
                           
                         relative to the image center. We first compute the texture distinctiveness of each atom 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         and assign this value to all pixels within the corresponding region. We compute the texture distinctiveness of each region based on the following assumptions:
                           
                              1.
                              Distinct texture regions are characterized by a high statistical texture distinctiveness relative to the rest of the image. Thus, the greater the texture distinctiveness statistic, the more distinct a region is compared to the rest of the image.

Distinct texture regions are associated with local texture descriptors that are spatially located near the image center. Objects close to the center attract the visual human attention [49], thus, increasing a region’s distinctiveness.

Based on the first assumption, we compute the texture distinctiveness map 
                           
                              
                                 
                                    ζ
                                 
                                 
                                    i
                                 
                              
                           
                         of each region 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                              
                           
                         as the expected statistical texture distinctiveness of the corresponding atom 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                        . This is completed relative to all other atoms based on the graph model computed, where 
                           
                              P
                              (
                              
                                 
                                    t
                                 
                                 
                                    j
                                 
                                 
                                    r
                                 
                              
                              )
                           
                         is the occurrence probability of each atom (i.e. the number of pixels represented by the atom):
                           
                              (14)
                              
                                 
                                    
                                       ζ
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          m
                                       
                                    
                                 
                                 P
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       j
                                    
                                    
                                       r
                                    
                                 
                                 )
                                 
                                    
                                       β
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 .
                              
                           
                        
                     

The second assumption is incorporated by computing the weighted distance of all pixels belonging to the regions 
                           
                              
                                 
                                    R
                                 
                                 
                                    i
                                 
                              
                           
                         with regards to the image center, whose position is denoted by 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    c
                                 
                              
                              ,
                              
                                 
                                    y
                                 
                                 
                                    c
                                 
                              
                              )
                           
                        :
                           
                              (15)
                              
                                 
                                    
                                       ω
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 exp
                                 
                                    
                                       
                                          
                                             
                                                -
                                                1
                                             
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      
                                                         
                                                            t
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            r
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   (
                                                   x
                                                   ,
                                                   y
                                                   )
                                                   ∈
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            (
                                                            x
                                                            ,
                                                            y
                                                            )
                                                            -
                                                            (
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  c
                                                               
                                                            
                                                            ,
                                                            
                                                               
                                                                  y
                                                               
                                                               
                                                                  c
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    n
                                 
                                 
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                       
                                          r
                                       
                                    
                                 
                              
                           
                         denotes the number of pixels represented by the atom 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                         and 
                           
                              
                                 
                                    σ
                                 
                                 
                                    s
                                 
                              
                           
                        , the variance of the spatial distances between the pixels and image center. The final texture distinctiveness value 
                           
                              
                                 
                                    α
                                 
                                 
                                    i
                                 
                              
                           
                         of each atom is then computed as the product of the statistical texture distinctiveness-based value 
                           
                              
                                 
                                    ζ
                                 
                                 
                                    i
                                 
                              
                           
                         and the general visual constraint factor 
                           
                              
                                 
                                    ω
                                 
                                 
                                    i
                                 
                              
                           
                        :
                           
                              (16)
                              
                                 
                                    
                                       α
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       ζ
                                    
                                    
                                       i
                                    
                                 
                                 ·
                                 
                                    
                                       ω
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                 for
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                                 .
                              
                           
                        
                     

The final texture distinctiveness 
                           
                              S
                              (
                              x
                              ,
                              y
                              )
                           
                         of 
                           
                              I
                              (
                              x
                              ,
                              y
                              )
                           
                         is then simply computed by assigning each pixel the texture distinctiveness value 
                           
                              
                                 
                                    α
                                 
                                 
                                    i
                                 
                              
                           
                         of its texture atom 
                           
                              
                                 
                                    t
                                 
                                 
                                    i
                                 
                                 
                                    r
                                 
                              
                           
                        :
                           
                              (17)
                              
                                 S
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 
                                    
                                       α
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                 if
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       i
                                    
                                 
                                 .
                              
                           
                        
                     

An example of the final texture distinctiveness is shown in Fig. 5
                        . An additional benefit of using the sparse texture model is it only requires computing 
                           
                              m
                              ≪
                              M
                              ·
                              N
                           
                         texture distinctiveness values, which represents a significant reduction in computational complexity.

The external force used in the approach is computed using a multi-functional realization of Li et al.’s VFC [18]. For a simple image with an homogeneous background, the object boundary is usually well-defined and unique in the computed edge map. Thus, an external energy functional based only on the image gradient is sufficient to enforce the snake to converge towards the object boundary. Yet, this fails in the presence of cluttered backgrounds, where other features are more distinct and attractive. Thus, a variation map which highlights the target boundary and dampens background features helps improve convergence. In this section, we introduce a multi-functional VFC external energy functional, where structural characteristics are considered in conjunction with texture distinctiveness.

Let 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                              =
                              |
                              ∇
                              (
                              I
                              (
                              x
                              ,
                              y
                              )
                              )
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                           
                         be a variation map based on image intensities and 
                           
                              
                                 
                                    f
                                 
                                 
                                    s
                                 
                              
                              =
                              |
                              ∇
                              (
                              S
                              (
                              x
                              ,
                              y
                              )
                              )
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                           
                         be a variation map computed from the texture distinctiveness 
                           
                              S
                              (
                              x
                              ,
                              y
                              )
                           
                        . We define a multi-functional VFC as:
                           
                              (18)
                              
                                 
                                    
                                       F
                                    
                                    
                                       STVFC
                                    
                                 
                                 =
                                 
                                    
                                       f
                                    
                                    
                                       hybrid
                                    
                                 
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ∗
                                 k
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ,
                              
                           
                        where 
                           
                              k
                              (
                              x
                              ,
                              y
                              )
                           
                         is the vector field kernel (see Eq. (2)) and 
                           
                              
                                 
                                    f
                                 
                                 
                                    hybrid
                                 
                              
                           
                         is a weighted combination of 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    f
                                 
                                 
                                    s
                                 
                              
                           
                        :
                           
                              (19)
                              
                                 
                                    
                                       
                                          
                                             
                                                f
                                             
                                             
                                                hybrid
                                             
                                          
                                          (
                                          x
                                          ,
                                          y
                                          )
                                       
                                       
                                          =
                                          γ
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          x
                                          ,
                                          y
                                          )
                                          +
                                          (
                                          1
                                          -
                                          γ
                                          )
                                          
                                             
                                                f
                                             
                                             
                                                s
                                             
                                          
                                          (
                                          x
                                          ,
                                          y
                                          )
                                       
                                    
                                    
                                       
                                       
                                          =
                                          γ
                                          |
                                          ∇
                                          (
                                          I
                                          (
                                          x
                                          ,
                                          y
                                          )
                                          )
                                          
                                             
                                                |
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          (
                                          1
                                          -
                                          γ
                                          )
                                          |
                                          ∇
                                          (
                                          S
                                          (
                                          x
                                          ,
                                          y
                                          )
                                          )
                                          
                                             
                                                |
                                             
                                             
                                                2
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

For the vector field kernel magnitude, we use Eq. (5). The example in Fig. 6
                         illustrates the improvement of the external force field by incorporating texture distinctiveness into the multi-functional VFC. Results show this leads to better convergence compared to only considering the structural characteristics. The weighting factor 
                           
                              γ
                           
                         is set to =0.3 as it was shown to provide good segmentation performance (see Section 4).

Sensitivity to initialization is one of the key limitations of parametric active contour approaches. Although VFC [18] is less sensitive to initialization than the traditional snake [6] or GVF [31], initializing the active contour close to the object of interest is preferable. The latter accelerates the convergence of the active contour and avoids convergence to local minima.

In our approach, we determine the region of interest based on the image’s texture distinctiveness 
                           
                              S
                              (
                              x
                              ,
                              y
                              )
                           
                         and apply an adaptive thresholding scheme to localize the potential region of interest. Given 
                           
                              S
                              (
                              x
                              ,
                              y
                              )
                           
                         and the set of points 
                           
                              Ω
                           
                         (potentially belonging to the object) is selected according to the following condition:
                           
                              (20)
                              
                                 Ω
                                 =
                                 {
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ∈
                                 I
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 ,
                                 
                                 such
                                 
                                 that
                                 
                                 S
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 >
                                 ϕ
                                 }
                                 ,
                              
                           
                        where 
                           
                              ϕ
                           
                         is the threshold determined using the auto-threshold method proposed by Otsu [50]. Thresholding results in a set of connected regions 
                           
                              
                                 
                                    C
                                 
                                 
                                    i
                                 
                              
                           
                         of different sizes which may be part of the object or background. We select the region of interest (ROI) as being the region of maximal area among all regions within 
                           
                              Ω
                           
                        , since more points from the object than the background is ideal:
                           
                              (21)
                              
                                 ROI
                                 =
                                 
                                    
                                       argmax
                                    
                                    
                                       
                                          
                                             C
                                          
                                          
                                             i
                                          
                                       
                                    
                                 
                                 {
                                 area
                                 (
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 }
                                 ,
                              
                           
                        where 
                           
                              area
                              (
                              
                                 
                                    C
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         returns the region area. After selecting the region of interest, we compute the convex hull around the object using a Quickhull algorithm [51]. This convex hull functions as the initial contour and helps avoid convergence towards local minima and accelerates convergence due to increased proximity to the object. The convex hull initialization is compared against an ellipse initialization based on the groundtruth in Fig. 7
                         which illustrates the improved convergence of the proposed initialization.

@&#EXPERIMENTS@&#

In this section we evaluate the performance of STVFC and compare against seven other active contour approaches: (1) vector field convolution (VFC) [18], (2) gradient vector flow (GVF) [31], (3) Harris-based gradient vector flow (HGVF) [27], (4) Harris-based vector field convolution (HVFC) [28], (5) decoupled active contour (DAC) [12], 6.) Gabor-space geodesic active contours (GGAC) [21] and 7.) non-local active contours (NLAC) [45]. The different experiments were completed in MATLAB. We implemented STVFC using Li et al.’s VFC implementation as a basis [36]. For the traditional VFC and GVF we used the implementation provided by Li et al. [36]. We implemented the HVFC and HGVF approaches as described in [22] and the DAC approach as described in [12], since no code was provided by the authors. VFC, GVF and DAC were modified to consider a color-based structural variation map [52] to provide fair comparison against STVFC, HVFC and HGVF using the color gradient implemented by Lee et al. [52]. GGAC was applied based on the implementation of geodesic active contour proposed by Caselles et al. [53] while NLAC was provided by the authors.

The approaches are compared using Precision, Recall, F1-measure and execution times using common initializations. The proposed STVFC was also investigated to determine the optimal gamma value. These experiments were tested using three datasets: (1) 1000 images from the École Polytechnique Fédérale de Lausanne database provided by Achanta et al. [54], (2) all 100 images of the Weizmann single object dataset [55] and (3) 20 Brodatz texture images [56]. The EPFL and Weizmann datasets analyze the approaches’ performances on single object color images with a variety of homogeneous and complex textures found in objects and backgrounds. The Brodatz dataset demonstrates the methods’ abilities to handle grayscale textured data.

Within each approach, a different initialization protocol was suggested. In this experiment, the approaches using automatic initializations were compared using Precision, Recall and F1-measure. HVFC, HGVF, GGAC and STVFC applied automatic initializations where HVFC and HGVF initialized their initial contours using Harris points, GGAC initialized an array of circles and STVFC uses texture distinctiveness. The remaining approaches (VFC, GVF, DAC and NLAC), did not specify any automatic initialization method and so were not included for this experiment. The performance metrics were then computed for each dataset using the F1-measure:
                           
                              (22)
                              
                                 F
                                 1
                                 -
                                 measure
                                 =
                                 
                                    
                                       2
                                       ×
                                       Precision
                                       ×
                                       Recall
                                    
                                    
                                       Precision
                                       +
                                       Recall
                                    
                                 
                                 .
                              
                           
                        
                     

In this next experiment, performance metrics were computed for all approaches using two common initial contours:


                        Ellipse-based initialization: An ellipse is generated that encapsulates the object using the groundtruth information. Then, the radii of the ellipse is extended to have an offset of 
                           
                              R
                              =
                              40
                           
                        .


                        Texture-guided initialization: An automatic initialization is formed using the texture distinctiveness as executed for the proposed STVFC approach.

This last experiment assesses the 
                           
                              γ
                           
                         parameter’s influence on STVFC’s results. Various weighting factors were selected for experimentation and Precision, Recall and F1-measure were considered to determine the optimal factor weighting which results in the best performance for each of the three datasets.

@&#RESULTS@&#

The automatic initialization approaches, HGVF, HVFC, GGAC and STVFC, were compared for segmentation performance. The results are shown in Fig. 8
                         with the numerical values in Table 1
                         for a more detailed comparison. The proposed STVFC achieved the best Precision and F1-measure performance over the other automatic initialization approaches for all datasets. Its superior performance can be explained by two factors: (i) STVFC developed a more accurate vector field by including the image texture characteristics and (ii) its automatic contour initialization allows for an improved initialization close to the object of interest to improve accuracy. STVFC did not have the highest Recall performance, however HVFC, HGVF and GGAC’s higher Recall metrics are due to the low Precision values, indicating undersegmentation. This is further supported by their low F1-measure scores.

It is interesting to note that using the Brodatz dataset, STVFC performance is not limited to color images where the object of interest may have drastic color differences from the background. STVFC’s texture-guided contour initialization formed a contour close to the ROI allowing for improved convergence. The automatic initializations of the Harris-based approaches initialized contours further away from the object due to storng Harris edges within textures which increased the likelihood of convergence to local minima. Similarly, GGAC’s use of a circle array initialization led to local minima convergence. STVFC’s use of texture distinctiveness showed improved convergence, overcoming the most challenging Brodatz textures.

Considering the standard deviations of the results, STVFC did not have the lowest standard deviation. The lower standard deviation metrics associated with the other approaches was due to undersegmentation as illustrated by high Recall and low Precision results. The high standard deviations for the STVFC approach are explained by the fact that initialization is automatically performed based on texture distinctiveness and is therefore dependent upon texture distinctiveness quality. The select examples included for visual comparison in Fig. 9
                         support these results.

Common ellipse-based and textured-guided initializations allowed for fair comparison against all approaches. The quantitative results for ellipse-based initializations are shown in Fig. 10
                         and Table 2
                        . Texture-guided initialization results are shown in Fig. 11
                         and Table 3
                        . For both initialization types, STVFC provided better segmentation accuracy compared to the other approaches by deriving a more accurate vector field that includes textural characteristics. It is interesting to note that HVFC and HGVF displayed improved results when using a texture-guided or elliptical initial contour compared to the Harris-based initialization that was proposed. The Harris-based initialization instead falsely identifies relevant points from the Harris edge map which leads to inappropriate initializations. Moreover, the use of texture distinctiveness to guide the initial contour placement improves the object segmentation accuracy for all approaches and datasets.

Using the elliptical initial contour, all approaches displayed high Recall and low Precision, especially in the case of the Brodatz dataset. As a result of the initial contour being placed further away from the object, this led the approaches (even STVFC) to tend towards local minima and undersegment the object of interest. Consequently, the standard deviations are lower due to the high Recall metrics. Using the texture-guided initialization improved the Precision and Recall for all methods with significant improvement shown for the Brodatz dataset. Standard deviations were also more similar across the methods however, higher. This is due to cases where automatic initialization fails, which leads to poor segmentation, while the supervised initialization (ellipse-based) is always guaranteed to be around the ROI. Some visual results are shown in Fig. 13 for the same ellipse-based initilialization which support the quantitative results. For HVFC and HGVF, segmentation was improved as a result of the ellipse-based initialization. DAC, GVF and VFC show more effective segmentation compared to HGVF and HVFC in cases where there are more homogeneous backgrounds. However in cases where textures and distinct structures are prevalent in the background, these approaches fail to accurately converge to the object of interest. GGAC and NLAC showed the greatest difficulty with the tested images with GGAC performing well only in images where the object is strongly textured. STVFC’s use of texture distinctiveness allows the active contour to exploit texture to its own benefit.

In the last experiment, the optimal 
                           
                              γ
                           
                         parameter for the proposed STVFC approach is determined by testing various 
                           
                              γ
                           
                         values. The results are shown in Fig. 12
                        
                         and Table 4
                        . By varying the weighting factor 
                           
                              γ
                           
                        , there was very little difference seen in the performance. 
                           
                              γ
                              =
                              0.3
                           
                         was selected because it demonstrated a general compromise in Precision, Recall and F-measure. The other tested 
                           
                              γ
                           
                         also displayed comparable performance and standard deviations. The similarity of the results is due to the effective texture-guided initialization which initializes the contour very close to the object. As a result, the convergence is already improved even with less incorporation of the textural distinctiveness into the vector field. Textural distinctiveness is still important to STVFC’s contour evolution as demonstrated by the superior results while using elliptical initialization in Experiment 2 (Section 5.2).

In Table 5
                        , we compare the average running time of STVFC against the state-of-the-art approaches on the benchmark images of the EPFL, Weizmann, and Brodatz datasets. We determined the execution times on an Intel i7 4770 CPU @3.4GHz with 16GB RAM using the parameter settings for STVFC described in Section 4.2. For this configuration, STVFC spends 7.18% on generating texture distinctiveness, 0.25% on initializing the active contour, 0.02% and 0.01% on computing the structural and textural variation maps, 1.90% on vector field convolution, and finally, 90.64% for evolving the final active contour. The average execution times for all approaches are shown in Table 5. GGAC had the shortest average execution time with 3.42s while NLAC had the longest average execution time of 497.56s. STVFC had a middle-range average execution time of 19.46.

@&#CONCLUSIONS@&#

In this paper, we investigated the use of the texture distinctiveness within the active contour model. The consideration of texture distinctiveness in the external vector field as well as contour initialization improved the convergence and segmentation performance of the active contour. The STVFC approach provided more accurate segmentation performance than the traditional VFC as well as the other compared approaches. The largest tendency of the analyzed approaches was to converge to local minima in images with cluttered backgrounds. The contour initializations was also an important factor which impacted the performance of the compared methods. The Harris-based approaches (HVFC and HGVF), initialized the contour using selected Harris-based points which were subject to incorrect initializations due to strong textures and backgrounds. Using an identical elliptical and texture-guided initializations for all approaches showed improved results for the Harris-based approaches however STVFC still showed the best segmentation performance due to its use of texture distinctiveness. Testing on Brodatz images also showed that STVFC is not limited to the use of color is able to effectively segment grayscale images with strong texture. By performing the texture-guided initialization, the proposed STVFC approach is fully automatic and its use of texture distinctiveness allows for more accurate segmentation.

@&#REFERENCES@&#

