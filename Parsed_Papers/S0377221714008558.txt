@&#MAIN-TITLE@&#A branch-and-price-and-cut approach for sustainable crop rotation planning

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new fully-combinatorial sustainable crop planning problem is proven NP-hard.


                        
                        
                           
                           A {0,1} linear programming formulation and an extended formulation are provided.


                        
                        
                           
                           The sub-problem in the extended formulation has the integrality property.


                        
                        
                           
                           A Branch-and-Price-and-Cut (BPC) algorithm is proposed.


                        
                        
                           
                           Comparative results for a large set of instances show the effectiveness of BPC.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

OR in agriculture

Production planning

Integer programming

Decomposition

Column generation

@&#ABSTRACT@&#


               
               
                  In this paper, we study a multi-periodic production planning problem in agriculture. This problem belongs to the class of crop rotation planning problems, which have received considerable attention in the literature in recent years. Crop cultivation and fallow periods must be scheduled on land plots over a given time horizon so as to minimize the total surface area of land used, while satisfying crop demands every period. This problem is proven strongly NP-hard. We propose a 0-1 linear programming formulation based on crop-sequence graphs. An extended formulation is then provided with a polynomial-time pricing problem, and a Branch-and-Price-and-Cut (BPC) algorithm is presented with adapted branching rules and cutting planes. The numerical experiments on instances varying the number of crops, periods and plots show the effectiveness of the BPC for the extended formulation compared to solving the compact formulation, even though these two formulations have the same linear relaxation bound.
               
            

@&#INTRODUCTION@&#

Although definitions of sustainable agriculture may vary, agricultural systems are generally considered as sustainable if they sustain themselves along a long period of time, that is, if they are economically viable, environmentally safe, and socially fair. In particular, sustainable agricultural practices are usually requested to incorporate alternatives to toxic fertilizers and pesticides, avoid excessive tillage and preserve soils. Many research papers about sustainable agriculture focus on the pollution and social side-effects of intensive agriculture, such as water spoiled by pesticides, crop diseases, and concentration of production in fewer and bigger farms that can afford large investments in costly automative production systems and technologies (e.g., Altieri, 1995; Gliessman, 1998). Consistent with this diagnosis, recommendations on the need for new sustainable agricultural systems can be found in Tilman et al. (2002). Crop rotations, combined with fallow periods where the land rests in order to recover its soil attributes after production, enable crop diversification on both space and time dimensions. Typical crop rotation problems usually focus on building rotations that maximize a profit or yield function, where the total surface area of land is either unbounded or fixed (Detlefsen and Jensen, 2007; El-Nazer and McCarl, 1986; Haneveld and Stegeman, 2005; dos Santos et al., 2011). This paper deals with an aspect of sustainability which is rarely considered in optimization of agricultural production systems: the minimization of the surface area needed to cover crop demands that vary over time. A compact formulation for a mixed-integer variant of the problem was originally introduced in Alfandari et al. (2011), following a communication in the EURO XXI Conference in 2006. Since then, a number of papers have addressed crop rotation planning in a sustainable development context. For example, a column generation approach was applied in dos Santos et al. (2011), where the objective is to maximize space occupation and the master problem includes adjacency constraints between plots. Column generation was also used in dos Santos et al. (2010) for a crop rotation problem with land divided into plots, but with continuous variables representing the surface area assigned to a given rotation, hence requiring no branching. Another example can be found in Costa et al. (2014) where harvested crops can be stocked for a limited period of time, and demands are subject to uncertainty. Rdulescu et al. (2014) present multi-objective crop rotation models that take risk into account, converted into linear programs and solved with standard Linear Programming (LP) methods. A survey on crop rotation decisions exists (Dury et al., 2012) but does not include most recent papers in optimization. Dantzig–Wolfe decomposition (Dantzig and Wolfe, 1960) was applied to our problem in Sadki (2011), but with no inclusion in a branch-and-price approach to obtain optimal integer solutions. To our knowledge no branch-and-price algorithm has ever been designed so far for any crop rotation planning problem.

The original model presented in Alfandari et al. (2011) was motivated by a Madagascan case study where the minimization of cultivated space contributed to the sustainable development of the primary forest in the long term. Indeed, farmers in Madagascar are used to clearing more and more primary forest areas – although this is prevented by law – in order to extend their cultivation surface area to better cover their needs. A plot could be cultivated with several crops in the same period in this study. We direct the reader to Alfandari et al. (2011) for more details on the agricultural Madagascan context. In this paper, we present a fully-combinatorial problem where a single crop can be cultivated on each plot at each period.

The paper is organized as follows. Section 2 introduces notation and crop-sequence graphs. Section 3 describes a compact formulation of the problem. Section 4 proves NP-hardness. Section 5 provides a covering integer programming extended formulation derived from a Dantzig–Wolfe decomposition approach. Section 6 presents the branch-and-price-and-cut with branching rules and cutting planes. Section 7 presents computational experiments for various time horizons, number of crops and plot sizes. Section 8 concludes the paper.

We consider the following notations for the Minimum-Space Crop Rotation Planning problem (MSCRP):

                        
                           •
                           
                              t = 1, …, T: the periods of the planning horizon.


                              p = 1, …, P: the set of land plots that can possibly be used.


                              C: the set of crops, with f ∈ C the fallow index considered as a specific crop for modeling reasons.


                              Ct
                              ⊆C: the set of crops that can be cultivated at period t.


                              dct
                              : the demand (in tons) of crop c ∈ Ct
                              ∖{f} at period t.


                              L: the number of fallow periods after which the yield no longer increases.


                              L′: the maximum number of consecutive periods a plot can be cultivated before returning fallow.


                              sp
                              : the surface area of plot p (in ha).

The state of a plot p is a triplet v = (c, l, l′) where c is the crop (or fallow) at the current period, l ≤ L is the fallow length, i.e., the number of consecutive fallow periods before cultivation (if this number is greater than L then it is replaced by L), and l′ ≤ L′ is the cultivation length, i.e. the number of consecutive cultivation periods up to the current period. The only possible states are (f, l, 0) for l = 1, …, L, and (c, l, l′) for c ∈ C∖{f}, l = 1, …, L, l′ = 1, …, L′. When the plot is cultivated in period t and remains cultivated in the next period t + 1 the cultivation length l′ of the plot is increased by one. When the maximum length of cultivation L′ is reached, the plot has to return fallow, with fallow length l = 1 and cultivation length l′ = 0. When a plot has been left fallow for l periods, it can either remain fallow the next period with length min {l + 1, L} or go back to cultivation with some crop c, fallow length l and cultivation length l′ = 1. We denote by Succ(v) the set of possible successors of state v at the next period, and by Pred(v) the set of predecessors of state v at the previous period. Fig. 1
                     provides the list of possible successors and predecessors of each state if C = {rice, bean, f}, rice precedes bean and bean precedes rice.


We denote by Vpt
                      the set of possible states of plot p at period t. At the beginning of the planning horizon, V
                     
                        p0 is reduced to a single state startp
                     . We note for t = 1, …, T
                     
                        
                           
                              
                                 
                                    A
                                    
                                       p
                                       t
                                    
                                 
                                 =
                                 
                                    {
                                    
                                       (
                                       v
                                       ,
                                       
                                          v
                                          ′
                                       
                                       )
                                    
                                    ∈
                                    
                                       V
                                       
                                          p
                                          ,
                                          t
                                          −
                                          1
                                       
                                    
                                    ×
                                    
                                       V
                                       
                                          p
                                          t
                                       
                                    
                                    ∣
                                    
                                       v
                                       ′
                                    
                                    ∈
                                    S
                                    u
                                    c
                                    c
                                    
                                       (
                                       v
                                       )
                                    
                                    }
                                 
                              
                           
                        
                     the set of possible transitions from a state v ∈ V
                     
                        p, t − 1 to a state v′ ∈ Vpt
                     , as illustrated by Fig. 1. We also note, for each state v ∈ Vpt
                     , 
                        
                           
                              A
                              
                                 p
                                 t
                              
                              +
                           
                           
                              (
                              v
                              )
                           
                           =
                           
                              {
                              
                                 (
                                 v
                                 ,
                                 
                                    v
                                    ′
                                 
                                 )
                              
                              ∣
                              
                                 (
                                 v
                                 ,
                                 
                                    v
                                    ′
                                 
                                 )
                              
                              ∈
                              
                                 A
                                 
                                    p
                                    ,
                                    t
                                    +
                                    1
                                 
                              
                              }
                           
                        
                      and 
                        
                           
                              A
                              
                                 p
                                 t
                              
                              −
                           
                           
                              (
                              v
                              )
                           
                           =
                           
                              {
                              
                                 (
                                 
                                    v
                                    ′
                                 
                                 ,
                                 v
                                 )
                              
                              ∣
                              
                                 (
                                 
                                    v
                                    ′
                                 
                                 ,
                                 v
                                 )
                              
                              ∈
                              
                                 A
                                 
                                    p
                                    t
                                 
                              
                              }
                           
                        
                      the set of transitions that start at state v and end at state v at period t, respectively.

Now, consider the acyclic directed graph Gp
                      = (Vp, Ap
                     ) with Vp
                      = ∪0 ≤ t ≤ T
                     
                     Vpt
                     ∪{endp
                     }, where node endp
                      represents the end of a rotation, and Ap
                      = ∪1 ≤ t ≤ T
                     
                     Apt
                     ∪{(v, endp
                     )∣v ∈ VpT
                     }. We call this graph the crop-sequence graph. By construction, any path from startp
                      to endp
                      in graph Gp
                      identifies a feasible crop rotation on plot p. For each crop c ∈ Ct
                     ∖{f}, we call 
                        
                           
                              A
                              
                                 p
                                 t
                              
                              c
                           
                           ⊂
                           
                              A
                              
                                 p
                                 t
                              
                           
                        
                      the set of arcs such that crop c is cultivated at the final endpoint of transition a. Each arc 
                        
                           a
                           ∈
                           
                              A
                              
                                 p
                                 t
                              
                              c
                           
                        
                      is valued by spwpac
                     , where wpac
                      is the number of tons of crop c obtained by transition a on one hectare of plot p. All other arcs, i.e., those which have a fallow state (f, l, 0) as final endpoint and those that terminate at endp
                     , have a zero value.



                     Fig. 2
                     describes such a crop-sequence graph for two possible crops rice (r) and bean (b) and five periods. The following section describes a compact formulation of the problem.


                     MSCRP problem is that of constructing crop rotations minimizing the total space area required for covering seasonal crop demands. We introduce the following Compact Formulation (CF) for MSCRP.

                        
                           (1)
                           
                              
                                 
                                    
                                       min
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                p
                                                =
                                                1
                                             
                                             P
                                          
                                          
                                             ∑
                                             
                                                a
                                                ∈
                                                
                                                   A
                                                   
                                                      p
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             s
                                             p
                                          
                                          
                                             x
                                             
                                                p
                                                a
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (2)
                           
                              
                                 
                                    
                                       s.t
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                p
                                                =
                                                1
                                             
                                             P
                                          
                                          
                                             ∑
                                             
                                                a
                                                ∈
                                                
                                                   A
                                                   
                                                      p
                                                      t
                                                   
                                                   c
                                                
                                             
                                          
                                          
                                             s
                                             p
                                          
                                          
                                             w
                                             
                                                p
                                                a
                                                c
                                             
                                          
                                          
                                             x
                                             
                                                p
                                                a
                                                t
                                             
                                          
                                          ≥
                                          
                                             d
                                             
                                                c
                                                t
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      ∀
                                                      c
                                                      ∈
                                                      
                                                         C
                                                         t
                                                      
                                                      ∖
                                                      
                                                         {
                                                         f
                                                         }
                                                      
                                                      ,
                                                      t
                                                      =
                                                      1
                                                      ,
                                                      …
                                                      ,
                                                      T
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    
                                       
                                          (
                                          C
                                          F
                                          )
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                a
                                                ∈
                                                
                                                   A
                                                   
                                                      p
                                                      t
                                                   
                                                   −
                                                
                                                
                                                   (
                                                   v
                                                   )
                                                
                                             
                                          
                                          
                                             x
                                             
                                                p
                                                a
                                                t
                                             
                                          
                                          =
                                          
                                             ∑
                                             
                                                a
                                                ∈
                                                
                                                   A
                                                   
                                                      p
                                                      t
                                                   
                                                   +
                                                
                                                
                                                   (
                                                   v
                                                   )
                                                
                                             
                                          
                                          
                                             x
                                             
                                                p
                                                a
                                                ,
                                                t
                                                +
                                                1
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      ∀
                                                      p
                                                      =
                                                      1
                                                      ,
                                                      …
                                                      ,
                                                      P
                                                      ,
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      t
                                                      =
                                                      1
                                                      ,
                                                      …
                                                      ,
                                                      T
                                                      −
                                                      1
                                                      ,
                                                      v
                                                      ∈
                                                      
                                                         V
                                                         
                                                            p
                                                            t
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                p
                                                a
                                                t
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

Binary decision variable xpat
                      is equal to one if and only if plot p uses transition a in period t. The objective function (1) minimizes the total surface area of plots p that are used for production, i.e. such that 
                        
                           
                              ∑
                              
                                 a
                                 ∈
                                 
                                    A
                                    
                                       p
                                       1
                                    
                                 
                              
                           
                           
                              x
                              
                                 p
                                 a
                                 1
                              
                           
                           =
                           1
                        
                     . Global constraints (2) ensure that the total production of a crop is at least the demand for every period. Flow conservation constraints (3) are local constraints associated with a plot p and define a path structure for a rotation on that plot. Note that if 
                        
                           
                              ∑
                              
                                 a
                                 ∈
                                 
                                    A
                                    
                                       p
                                       1
                                    
                                 
                              
                           
                           
                              x
                              
                                 p
                                 a
                                 1
                              
                           
                           =
                           0
                           ,
                        
                      for this plot p all variables xpat
                      are equal to zero which means that no crop rotation is used on that plot. The linear relaxation of CF will be noted 
                        
                           
                              C
                              F
                           
                           ¯
                        
                     . We study the complexity of the MSCRP problem in the following section.

We prove the NP-hardness of this problem with a polynomial reduction from the (unweighted) Set Covering Problem (SCP). In the unweighted SCP, we are given a set of elements I = {1, …, n} and a collection of subsets of elements 
                        
                           S
                           =
                           {
                           
                              S
                              1
                           
                           ,
                           …
                           ,
                           
                              S
                              m
                           
                           }
                        
                      such that Sj
                     ⊂I. The objective is to find a collection 
                        
                           
                              
                                 S
                              
                              ′
                           
                           ⊂
                           S
                        
                      such that 
                        
                           
                              ⋃
                              
                                 
                                    S
                                    j
                                 
                                 ∈
                                 
                                    S
                                    ′
                                 
                              
                           
                           
                              S
                              j
                           
                           =
                           I
                        
                      and the size 
                        
                           
                              |
                           
                           
                              S
                              ′
                           
                           
                              |
                           
                        
                      of the cover is minimum.

                        Theorem 1
                        
                           MSCRP is strongly NP-hard and reduces to the Set Covering Problem.

We transform a general SCP instance into a specific MSCRP instance in the following way. Take P = m, T = m + n, C = {f, 0}∪I = {f, 0, 1, …, n}, sp
                            = 1 and startp
                            = (f, L, 0) for all p = 1, …, P. Moreover set Ct
                            = {f, 0} for t = 1, …, m and C
                           
                              m + c
                            = {c, 0} for all c = 1, …, n; crop c can only be produced in period m + c and no other crop but crops c and 0 can be produced in that period. We only set demands for crops of C∖{f, 0} = {1, …, n}, with d
                           
                              c, m + c
                            = 1 for each crop c = 1, …, n. These are the only demands to be covered, in particular there are no demands to cover in periods 1, …, m. Also, set L = L′ = m + n. Finally, we set all crop yields equal to zero, except the following yields for c = 1, …, n, j = 1, …, m:

                              
                                 (5)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   w
                                                   ¯
                                                
                                                
                                                   L
                                                   ,
                                                   j
                                                   +
                                                   c
                                                
                                                
                                                   c
                                                   −
                                                   1
                                                   ,
                                                   c
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                1
                                                
                                                iff
                                                
                                                c
                                                ∈
                                                
                                                   S
                                                   j
                                                
                                                ,
                                                c
                                                −
                                                1
                                                ∈
                                                
                                                   S
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (6)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   w
                                                   ¯
                                                
                                                
                                                   L
                                                   ,
                                                   j
                                                   +
                                                   c
                                                
                                                
                                                   0
                                                   ,
                                                   c
                                                
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                1
                                                
                                                iff
                                                
                                                c
                                                ∈
                                                
                                                   S
                                                   j
                                                
                                                ,
                                                c
                                                −
                                                1
                                                ∉
                                                
                                                   S
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where, for sake of simplicity, we change yield notations as 
                              
                                 
                                    
                                       w
                                       ¯
                                    
                                    
                                       L
                                       ,
                                       j
                                       +
                                       c
                                    
                                    
                                       
                                          c
                                          ′
                                       
                                       ,
                                       c
                                    
                                 
                                 =
                                 
                                    w
                                    
                                       p
                                       a
                                       c
                                    
                                 
                              
                            with a the transition from state (c′, L, j + c − 1) to state (c, L, j + c). We now show the NP-completeness of the decision version of MSCRP. In order to do this, we show that if there exists a set cover of cost of no more than K in the SCP instance, then there exists a crop rotation plan of cost of no more than K in the MSCRP instance, and vice-versa. Let us show the first implication.

(i) Assume that there exists a collection of no more than K subsets covering I in the SCP instance. For each subset Sj
                            of this cover, we transform it into a rotation j on a plot for MSCRP in the following way:

                              
                                 •
                                 for t = 1, …, m − j, the plot is left fallow (f),

for t = m − j + 1, …, m, the plot is cultivated with crop 0,

for t = m + 1, …, m + n, in period m + c (c = 1, …, n), if c ∈ Sj
                                     then crop c is cultivated, otherwise crop 0 is cultivated.

If c ∈ Sj
                           , then in rotation j and in period m + c crop c is cultivated, and the state of the plot is l = L and l′ = m + c − (m − j) = j + c in this period. Therefore by ([5,6]) the yield of crop c is 1 so the demand d
                           
                              c, m + c
                            = 1 in period m + c is covered. As for all c = 1, …, n there exists at least one subset Sj
                            in the SCP cover such that c ∈ Sj
                           , all demands d
                           
                              c, m + c
                            = 1 are covered. Since the rotations so built are in one-to-one correspondence with the subsets of the SCP cover, we have no more than K plots used for covering the crop demands.

(ii) Conversely, assume that there exists a set of K rotations in the MSCRP instance covering the crop demands for t = m + 1, …, m + n. Denote by J the set of indices j ∈ {1, …, m} such that at least one demand d
                           
                              c, m + c
                            is covered, in the MSCRP solution, by a yield satisfying:

                              
                                 (7)
                                 
                                    
                                       
                                          
                                             w
                                             ¯
                                          
                                          
                                             L
                                             ,
                                             j
                                             +
                                             c
                                          
                                          
                                             c
                                             −
                                             1
                                             ,
                                             c
                                          
                                       
                                       =
                                       1
                                       
                                       or
                                       
                                       
                                          
                                             w
                                             ¯
                                          
                                          
                                             L
                                             ,
                                             j
                                             +
                                             c
                                          
                                          
                                             0
                                             ,
                                             c
                                          
                                       
                                       =
                                       1
                                    
                                 
                              
                           As for each j ∈ J a distinct plot should have started to be cultivated from period t = m − j + 1 and we have no more than K plots, then |J| ≤ K. Moreover as the K rotations form a feasible solution for MSCRP, then for all c = 1, …, n there exists j ∈ J satisfying (7), i.e., such that c ∈ Sj
                           . So, to transform a MSCRP solution of size K into a SCP cover of size not more than K, simply select subsets Sj
                            for j ∈ J. This concludes the NP-completeness proof. As the above transformation of a general SCP instance into a particular MSCRP instance is a pseudo-polynomial transformation (see Garey and Johnson, 1978), MSCRP is NP-hard in the strong sense, i.e., there exists no exact algorithm that solves the problem in a time which is polynomial in both the size of the instance and the largest integer of the input data, unless P = NP.□

We denote by 
                        
                           R
                           p
                        
                      the set of feasible crop rotations for plot p = 1, …, P over the time horizon, and 
                        
                           R
                           =
                           
                              ∪
                              p
                           
                           
                              R
                              p
                           
                        
                     . The compact formulation CF (1–4) of Section 2 can be reformulated as the following Master Problem (MP) after a Dantzig–Wolfe decomposition (Dantzig and Wolfe, 1960).

                        
                           (8)
                           
                              
                                 
                                    
                                       min
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                p
                                                =
                                                1
                                             
                                             P
                                          
                                          
                                             s
                                             p
                                          
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                
                                                   R
                                                   p
                                                
                                             
                                          
                                          
                                             λ
                                             r
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    
                                       s.t
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                p
                                                =
                                                1
                                             
                                             P
                                          
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                
                                                   R
                                                   p
                                                
                                             
                                          
                                          
                                             w
                                             
                                                p
                                                c
                                                t
                                             
                                             r
                                          
                                          
                                             λ
                                             r
                                          
                                          ≥
                                          
                                             d
                                             
                                                c
                                                t
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          ∀
                                          t
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          T
                                          ,
                                          
                                          c
                                          ∈
                                          
                                             C
                                             t
                                          
                                          ∖
                                          
                                             {
                                             f
                                             }
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    
                                       
                                          (
                                          M
                                          P
                                          )
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                
                                                   R
                                                   p
                                                
                                             
                                          
                                          
                                             λ
                                             r
                                          
                                          ≤
                                          1
                                       
                                    
                                    
                                       
                                          ∀
                                          p
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          P
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (11)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             λ
                                             r
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                       
                                    
                                    
                                       
                                          ∀
                                          r
                                          ∈
                                          R
                                       
                                    
                                 
                              
                           
                        
                     where binary variable λr
                      = 1 if and only if rotation 
                        
                           r
                           ∈
                           R
                        
                      is selected in the solution and 
                        
                           w
                           
                              p
                              c
                              t
                           
                           r
                        
                      is the number of tons of crop c produced by rotation r on plot p at period t.

The well-known iterative principle of a column generation approach (Lübbecke and Desrosiers, 2005) can be summarized as follows on the MSCRP. Let 
                        
                           
                              M
                              P
                           
                           ¯
                        
                      denotes the linear relaxation of MP. The aim is to solve 
                        
                           
                              M
                              P
                           
                           ¯
                        
                      to optimality and get a lower bound which has the same value as the solution of the dual problem given by the Lagrangian relaxation of constraints (2) in the compact formulation (1–4) (Lemaréchal, 2007). One starts to solve a Restricted Master Problem (RMP), i.e. problem 
                        
                           
                              M
                              P
                           
                           ¯
                        
                      restricted to a small subset of rotations (columns), by the simplex algorithm. This LP-solving of the RMP provides dual variables uct
                      associated with the covering constraints (9) and dual variables 
                        
                           u
                           p
                           ′
                        
                      associated with constraints (10). Then one checks whether there exists a rotation 
                        
                           r
                           ∈
                           R
                        
                      with negative reduced cost that could be added to the RMP in order to improve the LP bound. If no such negative reduced cost column exists, then the current solution of the last RMP is optimal for 
                        
                           
                              
                                 M
                                 P
                              
                              ¯
                           
                           ,
                        
                      otherwise one adds a subset of negative reduced cost columns to the RMP and reiterates the process until no negative reduced cost column is found.

At an iteration of the above column generation process, the subproblem of finding a column with minimum reduced cost is called the pricing problem. Given the current dual variables uct
                      and 
                        
                           u
                           p
                           ′
                        
                      output by the LP-solving of the last RMP, the reduced cost of a column (or rotation) 
                        
                           r
                           ∈
                           
                              R
                              p
                           
                        
                      is:

                        
                           
                              
                                 
                                    
                                       c
                                       ¯
                                    
                                    r
                                 
                                 =
                                 
                                    s
                                    p
                                 
                                 −
                                 
                                    ∑
                                    
                                       t
                                       =
                                       1
                                    
                                    T
                                 
                                 
                                    ∑
                                    
                                       c
                                       ∈
                                       
                                          C
                                          t
                                       
                                       ∖
                                       
                                          {
                                          f
                                          }
                                       
                                    
                                 
                                 
                                    w
                                    
                                       p
                                       c
                                       t
                                    
                                    r
                                 
                                 
                                    u
                                    
                                       c
                                       t
                                    
                                 
                                 −
                                 
                                    u
                                    p
                                    ′
                                 
                              
                           
                        
                     The pricing problem of minimizing 
                        
                           
                              c
                              ¯
                           
                           r
                        
                      over all rotations 
                        
                           r
                           ∈
                           R
                        
                      can be efficiently solved, despite the exponential size of 
                        
                           R
                           ,
                        
                      by running a shortest-path dynamic programming procedure in each graph Gp
                     . Given that a node in Gp
                      is a state (c, l, l′) for each season t = 1, …, T, the number of nodes in Gp
                      is in O(|C|LL′T). As each graph Gp
                      is acyclic, one can use Bellman algorithm to find a shortest path in that graph. To minimize 
                        
                           
                              c
                              ¯
                           
                           r
                        
                      over all possible paths 
                        
                           r
                           ∈
                           
                              R
                              p
                           
                           ,
                        
                      simply associate cost − spwpacuct
                      to each arc (transition) a that produces crop c at period t (with wpaf
                      = 0 if the arc ends at a fallow), and associate cost 
                        
                           
                              s
                              p
                           
                           −
                           
                              u
                              p
                              ′
                           
                        
                      to each arc whose initial endpoint is startp
                     , and a zero cost to each arc whose terminal endpoint is endp
                     .

At the end of the column generation algorithm, one could run a MIP solver on the subset of columns of the last RMP, but this does not ensure optimality of the integer solution. This heuristic, noted Heur, will be compared to the exact methods in the numerical experiments section. Branch-and-price is a branch-and-bound method which finds an optimal integer solution, if no time limit is fixed, using the above column generation algorithm to compute the LP bound at each node. We refer to Barnhart et al. (1998); Vanderbeck (2000) for a detailed description of branch-and-price. Branch-and-Price-and-Cut (BPC) is an enriched branch-and-price where cutting planes are iteratively added to accelerate the solving of the master problem. In the next sections we describe the branching rules used for our problem as well as the cut generator.

Branching occurs at the end of the processing of a node from the search tree when the node cannot be pruned, i.e., the obtained lower bound is not over any known upper bound, and the solution of that node, noted 
                        
                           
                              λ
                              ˜
                           
                           ,
                        
                      is fractional. Then, there exists a plot p, a period t and an arc a such that:

                        
                           
                              
                                 0
                                 <
                                 
                                    ∑
                                    
                                       
                                          
                                             
                                                r
                                                ∈
                                                
                                                   
                                                      R
                                                      ^
                                                   
                                                   p
                                                
                                                :
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                   
                                                      p
                                                      a
                                                      t
                                                   
                                                   r
                                                
                                                =
                                                1
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       λ
                                       ˜
                                    
                                    r
                                 
                                 <
                                 1
                                 ,
                              
                           
                        
                     where 
                        
                           
                              R
                              ^
                           
                           p
                        
                      is the set of columns for plot p in the last RMP, and 
                        
                           
                              x
                              
                                 p
                                 a
                                 t
                              
                              r
                           
                           =
                           1
                        
                      if transition a is used at period t in rotation 
                        
                           r
                           ∈
                           
                              
                                 R
                                 ^
                              
                              p
                           
                           ,
                        
                      0 otherwise. The arc a on which branching will be performed is selected in a set Apt
                      as follows. First, the smallest t is selected such that there exists a plot p and an arc a ∈ Apt
                      providing a fractional value of 
                        
                           
                              ∑
                              
                                 r
                                 ∈
                                 
                                    
                                       R
                                       ^
                                    
                                    p
                                 
                                 :
                                 
                                    x
                                    
                                       p
                                       a
                                       t
                                    
                                    r
                                 
                                 =
                                 1
                              
                           
                           
                              
                                 λ
                                 ˜
                              
                              r
                           
                        
                     . Then, p and a are chosen such that 
                        
                           
                              ∑
                              
                                 r
                                 ∈
                                 
                                    
                                       R
                                       ^
                                    
                                    p
                                 
                                 :
                                 
                                    x
                                    
                                       p
                                       a
                                       t
                                    
                                    r
                                 
                                 =
                                 1
                              
                           
                           
                              
                                 λ
                                 ˜
                              
                              r
                           
                        
                      is the most fractional, i.e., 
                        
                           |
                           
                              ∑
                              
                                 r
                                 ∈
                                 
                                    
                                       R
                                       ^
                                    
                                    p
                                 
                                 :
                                 
                                    x
                                    
                                       p
                                       a
                                       t
                                    
                                    r
                                 
                                 =
                                 1
                              
                           
                           
                              
                                 λ
                                 ˜
                              
                              r
                           
                           −
                           0.5
                           |
                        
                      is minimized and different from 0.5. Note that this simple branching rule produces search trees with significantly fewer nodes than other branching rules of comparable complexity, such as choosing over all triples (p, a, t), the one that gives the most fractional 
                        
                           
                              ∑
                              
                                 r
                                 ∈
                                 
                                    
                                       R
                                       ^
                                    
                                    p
                                 
                                 :
                                 
                                    x
                                    
                                       p
                                       a
                                       t
                                    
                                    r
                                 
                                 =
                                 1
                              
                           
                           
                              
                                 λ
                                 ˜
                              
                              r
                           
                           ,
                        
                      or choosing a triple (p, a, t) randomly. To eliminate a set of fractional solutions which contains 
                        
                           
                              λ
                              ˜
                           
                           ,
                        
                      separation occurs and two new nodes are created and added to the search tree. One of them has the additional constraint:

                        
                           
                              
                                 
                                    ∑
                                    
                                       
                                          
                                             
                                                r
                                                ∈
                                                
                                                   
                                                      R
                                                      ^
                                                   
                                                   p
                                                
                                                :
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                   
                                                      p
                                                      a
                                                      t
                                                   
                                                   r
                                                
                                                =
                                                1
                                             
                                          
                                       
                                    
                                 
                                 
                                    λ
                                    r
                                 
                                 =
                                 0
                                 ,
                              
                           
                        
                     and the other one has the additional constraint:

                        
                           
                              
                                 
                                    ∑
                                    
                                       
                                          
                                             
                                                r
                                                ∈
                                                
                                                   
                                                      R
                                                      ^
                                                   
                                                   p
                                                
                                                :
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                   
                                                      p
                                                      a
                                                      t
                                                   
                                                   r
                                                
                                                =
                                                1
                                             
                                          
                                       
                                    
                                 
                                 
                                    λ
                                    r
                                 
                                 =
                                 1
                                 .
                              
                           
                        
                     This branching scheme corresponds to branching on the original variables of the compact formulation CF, and adding branching constraints to the linking constraints (Gamrath, 2010).

Once a node has been processed and its linear relaxation has been solved by the above column generation scheme, an aggressive pruning strategy is added to the standard pruning process. Given a best known integral solution of value 
                        
                           
                              z
                              ¯
                           
                           ,
                        
                      any node is pruned if its lower bound is over the next possible best upper bound, i.e, over the solution of the following (NP-hard) knapsack problem:

                        
                           
                              
                                 
                                    
                                       max
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                p
                                                =
                                                1
                                             
                                             P
                                          
                                          
                                             s
                                             p
                                          
                                          
                                             y
                                             p
                                          
                                       
                                    
                                 
                                 
                                    
                                       s.t.
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                p
                                                =
                                                1
                                             
                                             P
                                          
                                          
                                             s
                                             p
                                          
                                          
                                             y
                                             p
                                          
                                          <
                                          
                                             z
                                             ¯
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             y
                                             p
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     As this knapsack problem has a number of variables equal to P which is generally not large, and as the surface areas are generally small, it can be efficiently solved, for example by dynamic programming based algorithms (Kellerer et al., 2004).

When looking for a column variable with the minimum reduced cost in the pricing problem of column generation, each dual value corresponding to a branching constraint on an arc a ∈ Apt
                      is simply subtracted from the cost of arc a in graph Gp
                      for the shortest path computation. In the next section, we present the cutting planes added to accelerate problem solving.

During the processing of any node of the search tree, column and row generations are carried out, in that order, in a loop. This loop starts with column generation: a linear program consisting of 
                           
                              
                                 
                                    M
                                    P
                                 
                                 ¯
                              
                              ,
                           
                         to which are added a set of branching constraints, and a set of inequalities valid for MP, is solved to optimality. Then, if the node cannot be pruned, cutting plane generation takes place. When a cut is generated, it is added to the linear program of this node, and another iteration of the column-and-row generation loop begins. Otherwise, if no cuts are generated, the algorithm exits from this loop, and either the node is pruned or branching occurs.

Cutting planes are generated as follows. When the solution to 
                           
                              
                                 
                                    M
                                    P
                                 
                                 ¯
                              
                              ,
                           
                         noted 
                           
                              
                                 λ
                                 ˜
                              
                              ,
                           
                         is fractional, two separation heuristics try to generate inequalities valid for MP in respect to integrality constraints, but violated by 
                           
                              λ
                              ˜
                           
                        .

Cutting planes are generated from the compact formulation CF. A solution 
                           
                              
                                 x
                              
                              
                                 (
                                 
                                    λ
                                    ˜
                                 
                                 )
                              
                           
                         to 
                           
                              
                                 C
                                 F
                              
                              ¯
                           
                         is built from a solution 
                           
                              λ
                              ˜
                           
                         to 
                           
                              
                                 
                                    M
                                    P
                                 
                                 ¯
                              
                              ,
                           
                         as we have:

                           
                              (12)
                              
                                 
                                    
                                       x
                                       
                                          p
                                          a
                                          t
                                       
                                    
                                    =
                                    
                                       ∑
                                       
                                          
                                             
                                                
                                                   r
                                                   ∈
                                                   
                                                      
                                                         R
                                                         ^
                                                      
                                                      p
                                                   
                                                   :
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      x
                                                      
                                                         p
                                                         a
                                                         t
                                                      
                                                      r
                                                   
                                                   =
                                                   1
                                                
                                             
                                          
                                       
                                    
                                    
                                       λ
                                       r
                                    
                                    .
                                 
                              
                           
                        After a change of variables 
                           
                              
                                 
                                    x
                                    ¯
                                 
                                 
                                    p
                                    a
                                    t
                                 
                              
                              =
                              1
                              −
                              
                                 x
                                 
                                    p
                                    a
                                    t
                                 
                              
                              ,
                           
                         constraints (2) of CF become knapsack constraints:

                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   p
                                                   =
                                                   1
                                                
                                                P
                                             
                                             
                                                ∑
                                                
                                                   a
                                                   ∈
                                                   
                                                      A
                                                      
                                                         p
                                                         t
                                                      
                                                      c
                                                   
                                                
                                             
                                             
                                                s
                                                p
                                             
                                             
                                                w
                                                
                                                   p
                                                   a
                                                   c
                                                
                                             
                                             
                                                
                                                   x
                                                   ¯
                                                
                                                
                                                   p
                                                   a
                                                   t
                                                
                                             
                                             ≤
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         p
                                                         =
                                                         1
                                                      
                                                      P
                                                   
                                                   
                                                      ∑
                                                      
                                                         a
                                                         ∈
                                                         
                                                            A
                                                            
                                                               p
                                                               t
                                                            
                                                            c
                                                         
                                                      
                                                   
                                                   
                                                      s
                                                      p
                                                   
                                                   
                                                      w
                                                      
                                                         p
                                                         a
                                                         c
                                                      
                                                   
                                                   −
                                                   
                                                      d
                                                      
                                                         c
                                                         t
                                                      
                                                   
                                                
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∀
                                                      t
                                                      =
                                                      1
                                                      ,
                                                      …
                                                      ,
                                                      T
                                                      ,
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      c
                                                      ∈
                                                      
                                                         C
                                                         t
                                                      
                                                      ∖
                                                      
                                                         {
                                                         f
                                                         }
                                                      
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        The two separation heuristics mentioned above try to generate an inequality valid for one of the above knapsack constraints (13), in respect to integrality constraints, but violated by 
                           
                              
                                 x
                                 ¯
                              
                              
                                 (
                                 
                                    λ
                                    ˜
                                 
                                 )
                              
                           
                        . When cut generation succeeds, the generated inequality valid for the 0-1 knapsack constraint is uncomplemented and translated in the extended formulation by using variable substitutions (12).

The idea of using valid inequalities for the knapsack polytope to tackle more complex 0-1 problems was present in Crowder et al. (1983). Kaparis and Letchford (2010) describe several classes of inequalities valid for the knapsack polytope, such as (i) extended cover inequalities and (ii) weight inequalities, which are both generated in our BPC.

                           
                              (i)
                              Extended cover inequalities are separated by the greedy heuristic of Gu et al. (1998) and built as follows. Given a period t and a crop c, we first build a cover set D by adding in D pairs of indices (p, a), with p ∈ {1, …, P} and 
                                    
                                       a
                                       ∈
                                       
                                          A
                                          
                                             p
                                             t
                                          
                                          c
                                       
                                       ,
                                    
                                  in non-decreasing order of the value 
                                    
                                       
                                          ∑
                                          
                                             r
                                             ∈
                                             
                                                
                                                   R
                                                   ^
                                                
                                                p
                                             
                                             :
                                             
                                                x
                                                
                                                   p
                                                   a
                                                   t
                                                
                                                r
                                             
                                             =
                                             1
                                          
                                       
                                       
                                          
                                             λ
                                             ˜
                                          
                                          r
                                       
                                       ,
                                    
                                  where 
                                    
                                       λ
                                       ˜
                                    
                                  is the current fractional solution. We add such indices (p, a) in a greedy way until the sum of their coefficients spwpac
                                  exceeds the demand dct
                                 . If needed, some elements are removed from D to obtain a minimal cover. Then we compute 
                                    
                                       
                                          w
                                          ¯
                                       
                                       =
                                       
                                          max
                                          
                                             (
                                             p
                                             ,
                                             a
                                             )
                                             ∈
                                             D
                                          
                                       
                                       
                                          {
                                          
                                             s
                                             p
                                          
                                          
                                             w
                                             
                                                p
                                                a
                                                c
                                             
                                          
                                          }
                                       
                                    
                                  and 
                                    
                                       E
                                       =
                                       {
                                       
                                          (
                                          p
                                          ,
                                          a
                                          )
                                       
                                       ∣
                                       
                                          s
                                          p
                                       
                                       
                                          w
                                          
                                             p
                                             a
                                             c
                                          
                                       
                                       ≥
                                       
                                          w
                                          ¯
                                       
                                       
                                       and
                                       
                                       
                                          (
                                          p
                                          ,
                                          a
                                          )
                                       
                                       ∉
                                       D
                                       }
                                    
                                 . We obtain:

                                    
                                       
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            (
                                                            D
                                                            ∪
                                                            E
                                                            )
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                            ¯
                                                         
                                                         
                                                            p
                                                            a
                                                            t
                                                         
                                                      
                                                      ≤
                                                      
                                                         |
                                                         D
                                                         |
                                                      
                                                      −
                                                      1
                                                      ,
                                                   
                                                
                                             
                                             
                                                
                                                
                                                   
                                                      i.e.,
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            (
                                                            D
                                                            ∪
                                                            E
                                                            )
                                                         
                                                      
                                                      
                                                         x
                                                         
                                                            p
                                                            a
                                                            t
                                                         
                                                      
                                                      ≥
                                                      
                                                         |
                                                         E
                                                         |
                                                      
                                                      +
                                                      1
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 After variable substitutions (12), we have the following inequality valid for MP:

                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   (
                                                   p
                                                   ,
                                                   a
                                                   )
                                                   ∈
                                                   (
                                                   D
                                                   ∪
                                                   E
                                                   )
                                                
                                             
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            r
                                                            ∈
                                                            
                                                               
                                                                  R
                                                                  ^
                                                               
                                                               p
                                                            
                                                            :
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                               
                                                                  p
                                                                  a
                                                                  t
                                                               
                                                               r
                                                            
                                                            =
                                                            1
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                λ
                                                r
                                             
                                             ≥
                                             
                                                |
                                                E
                                                |
                                             
                                             +
                                             1
                                             .
                                          
                                       
                                    
                                 If it is violated by 
                                    
                                       
                                          λ
                                          ˜
                                       
                                       ,
                                    
                                  it is added to the current restricted master problem.

Weight inequalities are also associated with a period t and a crop c ∈ Ct
                                 , and are separated by the greedy heuristic of Kaparis and Letchford (2010), as follows. First, we construct in a greedy way a pack set O by adding in O indices (p, a) in non-decreasing order of the value 
                                    
                                       
                                          ∑
                                          
                                             r
                                             ∈
                                             
                                                
                                                   R
                                                   ^
                                                
                                                p
                                             
                                             :
                                             
                                                x
                                                
                                                   p
                                                   a
                                                   t
                                                
                                                r
                                             
                                             =
                                             1
                                          
                                       
                                       
                                          
                                             λ
                                             ˜
                                          
                                          r
                                       
                                    
                                  as in (i). Instead of adding these indices until demand dct
                                  is covered as in (i), one stops at the last iteration for which the demand remains uncovered and computes the residual capacity:

                                    
                                       
                                          
                                             δ
                                             =
                                             
                                                d
                                                
                                                   c
                                                   t
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   (
                                                   p
                                                   ,
                                                   a
                                                   )
                                                   ∈
                                                   O
                                                
                                             
                                             
                                                s
                                                p
                                             
                                             
                                                w
                                                
                                                   p
                                                   a
                                                   c
                                                
                                             
                                             .
                                          
                                       
                                    
                                 We call N the set of indices of variables which are in the knapsack constraints but not in O. We have:

                                    
                                       
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            O
                                                         
                                                      
                                                      
                                                      
                                                         s
                                                         p
                                                      
                                                      
                                                         w
                                                         
                                                            p
                                                            a
                                                            c
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                            ¯
                                                         
                                                         
                                                            p
                                                            a
                                                            t
                                                         
                                                      
                                                      
                                                      +
                                                      
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            N
                                                         
                                                      
                                                      
                                                      max
                                                      
                                                         {
                                                         0
                                                         ,
                                                         
                                                            s
                                                            p
                                                         
                                                         
                                                            w
                                                            
                                                               p
                                                               a
                                                               c
                                                            
                                                         
                                                         −
                                                         δ
                                                         }
                                                      
                                                      
                                                         
                                                            x
                                                            ¯
                                                         
                                                         
                                                            p
                                                            a
                                                            t
                                                         
                                                      
                                                      
                                                      ≤
                                                      
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            O
                                                         
                                                      
                                                      
                                                      
                                                         s
                                                         p
                                                      
                                                      
                                                         w
                                                         
                                                            p
                                                            a
                                                            c
                                                         
                                                      
                                                      ,
                                                   
                                                
                                             
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                      i.e.,
                                                      
                                                      
                                                      
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            O
                                                         
                                                      
                                                      
                                                         s
                                                         p
                                                      
                                                      
                                                         w
                                                         
                                                            p
                                                            a
                                                            c
                                                         
                                                      
                                                      
                                                         x
                                                         
                                                            p
                                                            a
                                                            t
                                                         
                                                      
                                                      +
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            N
                                                         
                                                      
                                                      max
                                                      
                                                         {
                                                         0
                                                         ,
                                                         
                                                            s
                                                            p
                                                         
                                                         
                                                            w
                                                            
                                                               p
                                                               a
                                                               c
                                                            
                                                         
                                                         −
                                                         δ
                                                         }
                                                      
                                                      
                                                         x
                                                         
                                                            p
                                                            a
                                                            t
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                      ≥
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            N
                                                         
                                                      
                                                      max
                                                      
                                                         {
                                                         0
                                                         ,
                                                         
                                                            s
                                                            p
                                                         
                                                         
                                                            w
                                                            
                                                               p
                                                               a
                                                               c
                                                            
                                                         
                                                         −
                                                         δ
                                                         }
                                                      
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 After variable substitutions (12) we get the following inequality valid for MP:

                                    
                                       
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            O
                                                         
                                                      
                                                      
                                                         ∑
                                                         
                                                            
                                                               
                                                                  
                                                                     r
                                                                     ∈
                                                                     
                                                                        
                                                                           R
                                                                           ^
                                                                        
                                                                        p
                                                                     
                                                                     :
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        x
                                                                        
                                                                           p
                                                                           a
                                                                           t
                                                                        
                                                                        r
                                                                     
                                                                     =
                                                                     1
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         w
                                                         
                                                            p
                                                            c
                                                            t
                                                         
                                                         r
                                                      
                                                      
                                                         λ
                                                         r
                                                      
                                                      +
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            N
                                                         
                                                      
                                                      
                                                         ∑
                                                         
                                                            
                                                               
                                                                  
                                                                     r
                                                                     ∈
                                                                     
                                                                        
                                                                           R
                                                                           ^
                                                                        
                                                                        p
                                                                     
                                                                     :
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                     
                                                                        x
                                                                        
                                                                           p
                                                                           a
                                                                           t
                                                                        
                                                                        r
                                                                     
                                                                     =
                                                                     1
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      max
                                                      
                                                         {
                                                         0
                                                         ,
                                                         
                                                            w
                                                            
                                                               p
                                                               c
                                                               t
                                                            
                                                            r
                                                         
                                                         −
                                                         δ
                                                         }
                                                      
                                                      
                                                         λ
                                                         r
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                      ≥
                                                      
                                                         ∑
                                                         
                                                            (
                                                            p
                                                            ,
                                                            a
                                                            )
                                                            ∈
                                                            N
                                                         
                                                      
                                                      max
                                                      
                                                         {
                                                         0
                                                         ,
                                                         
                                                            s
                                                            p
                                                         
                                                         
                                                            w
                                                            
                                                               p
                                                               a
                                                               c
                                                            
                                                         
                                                         −
                                                         δ
                                                         }
                                                      
                                                      .
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

If it is violated by 
                           
                              
                                 λ
                                 ˜
                              
                              ,
                           
                         it is added to the current restricted master problem.

A cut generated in the compact formulation CF is therefore translated into a cut for the extended formulation MP according to the mapping (12). Each variable appearing in a cut in the compact formulation has its coefficient modified in the objective function of the pricing problem; however the structure of the pricing problem is unaffected.

In the case of a large-size instance, the BPC algorithm may not provide an integer feasible solution in a reasonable amount of time. To increase the efficiency of our BPC, we embedded in it a restricted master heuristic. Restricted master heuristics are the most commonly used primal heuristics with column generation (Joncour et al., 2010). They consist in solving a RMP with integrality constraints on column variables, for example by a branch-and-bound algorithm. Our restricted master heuristic provided very good integer solutions when needed. It is invoked periodically with a time limit, as long as the gap between the worst lower bound and the best upper bound is above a given threshold (if no integer solution is known, the gap is defined as infinite). To build a RMP, a set of columns has to be chosen. Columns r with the highest average value of 
                           
                              
                                 λ
                                 ˜
                              
                              r
                           
                         over the set of closed nodes are selected.

We present in Tables 1–4
                     
                     , a comparison of our BPC algorithm, with an integer program solver for the compact formulation (IP solver), and a heuristic denoted by Heur which consists in solving the last restricted master problem obtained by column generation with integrality constraints as a static integer program. All computations reported in this paper have been carried out on a personal computer with an Intel Core i5 processor at 2.50 gigahertz and 8 gigabytes of RAM. The integer program solver is IBM ILOG CPLEX 12.4 with default settings. BPC has been coded in C++ using COIN-OR BCP 1.3.4. Part of the data were collected for the Madagascan case study. We refer the interested reader to Alfandari et al. (2011) for more details.

In the tables, for each approach, we report the value of the best integer solution obtained within a time limit equal to 3600 seconds (value) and the number of nodes (
                        
                           #
                           n
                           o
                           d
                           e
                           s
                        
                     ) in the search tree. Only in Tables 1 and 2
                     , we add a time column with the running time in seconds, as most instances are solved to optimality before the time limit of 3600 seconds. When an optimal solution is obtained by one of the two exact methods and is proven optimal, its value is marked by *. Furthermore, we emphasize in bold instances where BPC improves both IP solver and Heur. In the last row of each table, noted 
                        
                           #
                           b
                           e
                           s
                           t
                           ,
                        
                      we report the ratio of the number of best-found solutions by the number of instances, for each approach. The last column of each table denotes the value of the linear relaxation, denoted by LP value. This information enables pointing out the hardness of these instances. The larger the gap between the LP value and the best integer value is, the more difficult an instance is since a large gap is longer to close for an exact method.

Each instance, denoted by I_#crops_#periods_#plots, is characterized by the number of crops (#crops), the number of periods that defines the planning horizon (#periods) and the number of plots (#plots). The yield of a crop depends on the state of the plot and the transition used to reach that state; it increases with fallow length l and decreases with cultivation length l′.

In Tables 1 and 2, we report numerical results on instances with two crops. The objective is to compare the three approaches on small-sized instances to evaluate the convergence to optimality of the two exact methods.

In Table 1, instances have the same characteristics (20 periods and 7 plots). To diversify the sample, the surface area of each plot is drawn in the interval [3.5, 10.5]. We observe that for all instances, the two exact methods find an optimal solution but BPC is in average 5 times faster than IP solver. Furthermore, the average gap between the LP value and the optimum is equal to 14.4 percent.

In Table 2, instance sizes are progressively increased by varying the number of plots from 7 to 69 with five possible values in that range, while keeping the average total surface area constant. The number of periods is 20 or 40. For the first of the five pairs (I_
                        
                           2
                           _
                           20
                           _
                           ,
                        
                      I_
                        
                           2
                           _
                           40
                           _
                        
                     ) the surface area of a plot is uniformly generated in the interval [5, 15], for the second in [3.5, 10.5], for the third in [2.5, 7.5], for the fourth in [1.5, 4.5] and for the last in [0.5, 1.5]. By reducing plot sizes, we increase the number of available plots. Crop demands of these instances are uniformly drawn in a set of small intervals. In this table, the average gap between the LP value and the best-found integer solution remains large (12.16 percent). For that set of instances, BPC outperforms the two other approaches in terms of quality of the best-found integer solution with a 
                        
                           #
                           b
                           e
                           s
                           t
                        
                      score of 10/10. Furthermore, BPC is in average 25 percent faster than IP solver. Also, note that the number of periods of the planning horizon is a critical parameter, with computational times multiplied by a factor up to 10 when passing from 20 to 40 periods.

In Tables 3 and 4
                     , we present numerical results on more difficult instances with a number of plots varying from 30 to 70, a number of crops from 4 to 8 and a number of periods from 6 to 12. For a given triplet #crops, #periods, #plots, 5 instances are created, with the same crop demands. The yields and surface areas vary uniformly by a factor between 0.8 and 1.2 from a set of reference values, which enables to create diversified instances. We set L = 6 and L′ = 4 for all instances. L = 4 was considered by the Madagascan expert the maximum number of cultivation periods after which the yield becomes very low, so no higher values were tested. We tested some lower values of L and L′, however, the BPC is not very sensitive to these parameters as they only impact the pricing problem, which is efficiently solved by dynamic programming.

We note that for the last pool of 30 instances, none of the two exact methods converged to optimality within the time limit of 3600 seconds. Tables 3 and 4 confirm the superiority of BPC over the two other approaches in terms of quality of the best-found integer solution with a 
                        
                           #
                           b
                           e
                           s
                           t
                        
                      score of 33/40 versus 14/40 for the IP solver and 5/40 for the heuristic. Furthermore, we observe that for the I_
                        
                           8
                           _
                           12
                           _
                           70
                        
                      instances, IP solver failed to find an integer solution. Also note that the number of crops is a critical parameter for tractability, with a number of nodes often reduced by a factor 10 (within the 3600 seconds time limit) when passing from 4 crops to 8 crops.

Finally, Table 2 confirms a natural result which is useful to design sustainable agricultural systems: when the total available land is divided up into a higher number of smaller plots, the set of possible combinations of land plots to cover an identical set of demands is enlarged, therefore the total number of hectares needed for production is reduced and more land is preserved (see Alfandari et al. (2011) for the formal result and proof). Indeed, for T = 20, the total surface area needed for covering crop requirements decreases from 19.2 for 7 plots with an average size of 10, to 12.4 for 69 plots with an average size of 1. Hence reducing by a factor 10 the unit size of a plot reduces the total space consumption by 35 percent with our dataset. For T = 40 we obtain similar results, as when the average size of a plot passes from 10 to 1, the total surface area used for production decreases from 20.4 to 13.3. Therefore, the unitary size of a plot is a critical parameter, regardless of the increased cost of managing and maintaining a larger number of plots. Indeed, this does not take into account increasing costs of production as well as edge effects of adjoining increasingly small plots.

@&#CONCLUSION@&#

Crop rotation planning problems have received increasing attention from OR researchers in the past five years, especially for sustainable agriculture. Some papers proposed a column generation approach for covering variants of crop rotation planning, but none has ever proposed neither a branch-and-price nor a branch-and-cut for these problems, to our knowledge. In this paper, a BPC is proposed for a specific sizing problem introduced by the authors, where space consumption is minimized and seasonal demands are to be covered. This enables sizing with minimum waste of the land space needed for production over a large period of time. The BPC proposed in this paper largely outperforms the direct solving of a compact formulation of the problem, as well as a heuristic that consists in solving the last restricted master program with integer column variables. Numerical results are robust over a set of 55 instances where one varies the number of crops, the number of periods and the number of available plots or unit sizes of a plot. The effectiveness of BPC is evidenced despite the fact that the pricing subproblem of column generation has the integrality property, and thus the LP bound of the extended formulation is not better but equal to that of the compact formulation. Another learning point of the paper is to measure how much dividing up the land space into smaller plots can reduce the total number of hectares needed for production, up to 35 percent when the unit size of a plot is divided by 10 for the same demands to cover.

@&#REFERENCES@&#

