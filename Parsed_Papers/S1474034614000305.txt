@&#MAIN-TITLE@&#Automated 3D compliance checking in pipe spool fabrication

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           In the industrial sector, inspection processes are critical because of the complexity of the components involved.


                        
                        
                           
                           An automated approach for early detection of deviations in pipe spools is developed based on scan-to-BIM registration.


                        
                        
                           
                           A set of experiments is performed to validate the proposed approach for pipe spools.


                        
                        
                           
                           Incurred deviations and defects are identified and characterized in a timely manner.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Point cloud registration

As-built status

Laser scanning

Staged fabrication

Quality assessment

@&#ABSTRACT@&#


               
               
                  In pipe spool assemblies used in construction, pre-fabrication errors inevitably occur due to the complexity of the tasks involved in the pipe spool fabrication process, the inaccuracy of the tools employed for performing these tasks, human error, and inadequate inspection and monitoring during the process. Permanent deflections may also occur during shipment and transportation. After delivery at construction sites, defective spools must be detected and further consideration given to the erection of the spools to tolerance levels specified; otherwise, the repair and realignment associated with rework can cause schedule delays and consequent substantial costs increases. This paper presents an automated approach for monitoring and assessing fabricated pipe spools using automated scan-to-BIM registration. Defects are detected through a neighborhood-based Iterative Closest Point (ICP) approach for the registration process. While this technique can be broadly employed, this paper focuses on industrial construction facilities with particular emphasis on pipe spool assemblies. Experiments show that the proposed approach can be employed for the automatic and continual monitoring of such assemblies throughout fabrication, assembly and erection to enable timely detection and characterization of deviations. The main contribution of the work presented in this paper is an automated 3D inspection framework and algorithms for construction assemblies in general and pipe spools in particular.
               
            

@&#INTRODUCTION@&#

Fabrication imperfections in construction assemblies are often unavoidable due to the intensive level of manual work involved. Such imperfections and errors can add significant costs to construction projects, especially when they are not detected early. According to Akinci et al. [1], Burati et al. [2], Hwang et al. [3], Josephson and Hammarlund [4], Patterson and Ledbetter [5], up to 10% of construction costs are attributable to rework due to the late and untimely identification of defects, and 5% are the result of rework during maintenance [1,5]. A major risk associated with construction projects is thus the cost of rework due to defects that occur as a result of human error or material flaws. It has been noted that more than 50% of rework cases arise from human errors due to an insufficient level of inspection or lack of regard for the importance of quality assessment in the construction phase [1]. Approximately 10% of the cost of construction rework is attributable to material defects [1,6]. Continual inspection and assessment to detect human error and the quality of construction materials can therefore prevent rework and save substantial associated costs.

Even minor errors in the fabrication process may have a significant effect on the functionality of modular and fabricated parts. For example, in a steel structure, a wrongly fabricated beam can impose significant forces or bending moments in its structural system. In modular construction, to mate adjacent parts during installation they are often moved in order to compensate for fabrication errors, which can cause significant accumulated displacement, deflection, residual stress, and exceeded tolerances. Weather conditions at construction sites and temperature changes during welding are other examples of sources of error that produce inaccurate results [7]. To avoid rework, fabrication errors should therefore be systematically controlled.

Current approaches for the inspection and assessment of materials, however, are time consuming, inadequate, and inefficient. Craft workers typically use conventional manual measurement devices, and most contractors or managers employ paper-based assessment procedures for the inspection of the quality of materials. These methods are flawed because of the inexact, infrequent and inadequate communication of the manual data among inspectors, contractors and managers. The management of traditional methods of communication between different interfaces is challenging due to the complexity involved. Surveyors and inspectors are too expensive to track continual changes while items are being fabricated, assembled or built. This may result for example in tolerance stacking of assemblies and spools in manifolds. The broader result is that the lack of an integrated and rapid monitoring system for tracking changes means that errors that could be fixed prior to significant rework are overlooked. Hence, providing the inspectors and superintendents [8] with a fast and automated monitoring framework for detecting fabrication errors or inaccuracies would make it possible to plan for the potential realignment, repair or replacement of a defective part in a timely manner.

An automated approach should thus be developed to avoid conditions that can lead to inaccuracy, ineffectiveness, and inefficiency during the inspection procedure. Recent advances in electronic technology for data acquisition and processing have been fused for use in construction quality control procedures [1]. However, a fully automated procedure that is reasonably accurate with respect to the assessment of the dimensional quality of individual fabricated construction items is still lacking.

Recent advances related to data acquisition for as-built assessment have provided beneficial information about real-time monitoring and inspection, and fabricated assemblies can now be scanned and accurately reconstructed within an acceptable time frame [9]. Of all available reconstruction approaches and data capturing devices, the laser scanner is the tool most commonly employed due to its ease of use, robustness, and accuracy [10,11,12,13]. Although it has become the most appropriate tool for retrieving the as-built status on construction sites, its cost of purchase is a major limitation. In contrast, photogrammetry and other 3D imaging techniques are significantly less expensive than laser scanners and are also effective sources of data for assessing the as-built status [9,14,15,16,17]. The determination of as-built status in construction projects has thus become possible using laser or image-based tools that are sufficiently accurate and reasonably rapid.

This paper presents an automated approach to continual assessment of the fabrication process of steel assemblies in general and pipe spools in particular. This approach includes automated registration of scanned-to-designed data, followed by a comparison of the fabricated state at any point in the fabrication process with the desired states in order to identify fabrication accuracy. The 3D CAD models available in building information modeling (BIM) represent the data about the designed state, and laser-scanned point clouds indicate the as-built status of industrial assemblies and pipe spools. Enhancing the comparison through the use of automated registration, as proposed here for pipe spools that are randomly located and oriented on construction sites or in fabrication facilities, is challenging.

As a means of comprehensively determining the knowledge gap, the relevant literature is investigated from two perspectives. First, studies related to 3D imaging techniques were examined because they have opened up potential solutions for automated inspection and defect detection. Approaches related to 3D point cloud acquisition and analysis are reviewed briefly in this section. The second focus of evaluation was staged fabrication process control based on simulation and visualization.

In a variety of engineering fields, sensing technologies that provide 3D information have been used for the acquisition of data from construction sites. New technologies, such as global positioning systems (GPS), ultra wide band (UWB) tags, total stations, digital photos to be used in digital photogrammetry, and terrestrial laser scanners have been investigated for use in extracting information required for monitoring and controlling procedures. Of these technologies, the laser scanner (LADAR) is now viewed as the tool most applicable for construction engineering although its cost of purchase makes it less obtainable for all managers and contractors. The development and use of building information models (BIM) has also facilitated the integration of numerous types of data needed in construction projects. In addition to 3D drawings, which indicate the position of each component, other types of information are included in BIM, such as the schedule [13,15]. The use of an integrated system for acquiring data has enhanced the feasibility of site monitoring in a number of areas. In general, 3D as-built data acquired by sensing technologies must be compared with the designed state of objects data that are embedded in BIM. Three-dimensional information can also be extracted from 2D images or video records, using procedures known as photogrammetry and videogrammetry, respectively. Although photogrammetry and videogrammetry are significantly less expensive than laser scanning [18], the data preprocessing and computation involved are costlier and more time consuming.

Bosche and Haas [10] presented an approach to the automated recognition of scanned objects based on knowledge of as-designed details of the BIM. Turkan et al. [13] developed an integrated approach for tracking project schedules by fusing the schedule with 3D CAD models for as-planned models which when compared with scan data for object recognition were then updated with the recognition results in an iterative cycle. This study employed Bosche’s algorithm for the recognition of objects in buildings. More recently, an approach based on machine learning was used to recognize and categorize structural objects and elements with the goal of measuring construction progress [19]. The results of these studies indicated a sufficiently reasonable level of accuracy for the methods developed to be used for schedule updating in subsequent work. 3D reconstruction of plants and pipeline segmentation are the recent examples of using laser-scanned data in the industrial construction sector [20,21,22]. In addition to laser-scanned point clouds, two-dimensional digital images can also be employed to generate 3D point clouds. Traditional photogrammetry integrated with a laser scanner can be used to measure construction work progress [23]. More recently, Golparvar-Fard et al. [16,15] presented an approach in which 2D digital photos are employed to generate a point cloud with a reasonable rate of recall in order to automatically track construction sites progress.

Once 3D point clouds are generated using an appropriate method, registration is then employed in order to compare the acquired as-built status with the designed state. Fitting the acquired data to the original state has previously been performed in the construction industry by applying a least-square adjustment [24]. In general, registration is the process of transforming two datasets into a single coordinate system [25]. Recent innovative approaches to finding common features in 2D images are now being used in order to increase the level of accuracy provided and to expedite the recognition process. A scale invariant feature transform (SIFT) is an example of a registration technique based on non-visible features in 2D images that has been used for measuring progress in construction projects [16,26].

Registration may also be used to extend 3D surfaces using a variety of 3D images. The registration of 3D point clouds consists of two primary steps: coarse registration and fine registration. Coarse registration is an initial step that produces rough alignment of the point clouds, which is then followed by accelerated fine registration in order to determine the best fit between corresponding point clouds through the minimization of the error that is the summation of the Euclidean distance between the correspondences [27].

In construction technology, automated registration is used predominantly for progress tracking. Bosché [28] presented a method for the registration of construction laser scans with 3D/4D building models. The semi-automated coarse registration step is plane-based and is followed by an ICP-based approach for the fine registration step [28]. More recently, Kim et al. [29] presented a fully automated approach for scheduling and progress tracking. Their method is based on ICP as well, and the coarse registration employs the principal component analysis (PCA) method. The method presented in this work is directed toward defect prevention and rework avoidance using the same approach for registration.

During the past few decades, the advantages provided by the enhancement of computer processors have enabled the increasing application of construction simulation. During the 1990s, simulation tools and their use were limited to academia and an insignificant number of contractors because they were neither affordable nor efficient. In later years and with the development of graphical programming interfaces, construction simulation became an inseparable part of a construction project, with consequent key improvements in scheduling and productivity [30]. The significant efforts of Abourizk and his collaborators [31] have resulted in simulation becoming a highly beneficial tool with a long-term impact on prediction and visualization of real projects.

Recent 3D visualization applications have seen particular use in offsite construction modeling [32]. According to Han et al. [32], required BIM input is used in order to represent individual elements for the visualization, some of which require predefinition: project schedule, geometry, required tasks, and component specifications. Visualization facilitates the process of assessing projects after changes are applied in the simulated model. It can also assist with the prediction of both the impact of the changes on other processes and potential interference with other tasks assigned to the crews. The results underline the ability of visualization to expedite project schedule and prevent rework, both of which lead to improved productivity and cost saving. Conflicting processes and tasks can be easily determined using 3D visualization, and potential errors are automatically detected before they result in significant increases in project costs. A number of scenarios are investigated through visualization, and a favorable schedule can then be automatically generated [33]. However, most of the studies in this area have been limited to schedule planning and resource allocation at construction sites [34,35,36].

As comprehensively discussed here, 3D imaging approaches have been applied predominantly for the detection of damages to civil infrastructure, and their impact on the quality control process has remained relatively limited, because they generally detect damage that has already occurred and indications such as cracks in concrete structures and potholes in pavement. They are generally incapable of detecting potential errors. On the other hand, in the fabrication process, the use of 3D images and associated approaches has been limited to simulation and visualization based on identifying conflicting tasks and resolving related issues. The research proposed here is directed instead toward defect detection and prevention through process control using 3D imaging techniques in order to address the deviations highlighted here. Fabrication errors are therefore caught early, prior to incurring substantial costs and creating significant delays in construction projects. Fig. 1
                         depicts a summary of this research and the flows between different elements.

As shown in Fig. 1, the proposed method of automated compliance checking consists of three primary steps: (1) preprocessing in order to prepare the point clouds, (2) registration for enhancing the comparison, and (3) condition assessment for detecting and characterizing the defects that have been identified. The whole process can then be considered as a feeder to the process controller and it can be applied at a variety of frequencies (e.g. hourly, daily, weekly). However, the ultimate and longer goal is to acquire real-time feedback data for automated process and fabrication robot control.

@&#METHODOLOGY@&#

A laser-based approach is used for the acquisition of the as-built status of prefabricated assemblies, and the comparison is based on point cloud registration with 3D CAD models. Once two models are registered, the final root mean square (RMS) value measured locally is the metric used for measuring the performance of the registration. Defective parts are then detected based on the quantification of the registration results. The proposed method includes the three primary steps stated above, which are described extensively in this section.

Building information models (BIMs), including the coordination of three-dimensional objects and additional information such as time scheduling, are available in a variety of formats. As a basic rule, an integrated file known as BIM should embody descriptors that thoroughly represent objects. These descriptors can be solid objects, currently the most common type defined in CAD software packages. One of the major challenges of working with this type of object is that they are not easily comparable with acquired data due to their different natures and levels of complexity. These solid objects must therefore be converted to a dataset that can be compared to the captured data, which is simply a 3D point cloud. For that purpose, STereoLithography (STL) is the most appropriate and commonly used format for representing 3D solid objects in the form of 3D point clouds. It is an open source file format available either in binary or ASCII and provides coordination of vertices and vectors normal to the surface of triangulated objects. The conversion of 3D solid objects to point clouds is achieved through the estimation of facets with multiple triangles. The vertices are then considered the comprising points for generating the point cloud format. Similar file formats, such as object (OBJ), were later developed in order to address the deficiencies and limitations of previously developed methods. In the work presented in this paper, the available design information is converted and implemented using STL because it is currently the only extension supported.

It is almost impossible to avoid the presence of materials and equipment on construction sites and unwanted objects are also being moved or added to the region of interest (ROI). Such unfavorable objects are also scanned as well as other objects in the ROI, and they must be removed. For that reason, superfluous points are manually detected in point cloud processing software packages, such as FARO Scene [37], Trimble RealWorks [38], or AutoCAD [39]. This step is the only manual task in the proposed approach; however, a recent study has revealed that full automation of this procedure including noise removal, is now possible [19]. Sample results of the preprocessing step are shown in Fig. 2
                           .

Once the preprocessing step has been performed, the point clouds are merged in order to enhance the comparison between the as-built and designed states of the assemblies. During the past couple of decades, considerable work has been directed at the evaluation of different approaches to registration [40,41,42,43]. As mentioned, registration is generally performed through two primary steps: coarse registration and fine registration. Briefly, coarse registration is a rough alignment in order to expedite the fine registration step. Finding the best fit (global minimum) is guaranteed when the coarse registration is performed correctly. Fine registration is then performed in order to find the best fit between the model and scene. Fig. 3
                         shows the proposed approach to the point cloud registration, which commences with principal component analysis (PCA) for the coarse registration, and followed by ICP for the fine registration. The PCA and ICP techniques are described in this section.

To roughly align the 3D CAD model (M) and the scanned as-built status (S), coarse registration is performed. Section 2 included a discussion of coarse registration methods. Of these methods, PCA is sufficiently quick and robust due to its linearity of performance and the simplicity of the computation of the parameters involved. The accuracy provided by PCA is also adequate compared to that offered by the iterative methods. Briefly, PCA determines the principal axes in the two databases and then aligns them. The resulting registration is roughly aligned and significantly expedites the fine registration step, also guaranteeing that the iterative process of finding the best fit for the fine registration ascertains finding the global minimum without becoming stuck in local minima.

The first step is to calculate the covariance. Given a 3D scatter, the covariance matrix is defined as follows [19,27]:
                              
                                 (1)
                                 
                                    K
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    
                                       
                                          Σ
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       
                                          
                                             x
                                          
                                          
                                             ¯
                                          
                                       
                                       )
                                       
                                          
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   i
                                                
                                             
                                             -
                                             
                                                
                                                   x
                                                
                                                
                                                   ¯
                                                
                                             
                                             )
                                          
                                          
                                             T
                                          
                                       
                                    
                                    ,
                                    
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    3
                                    ,
                                    …
                                    ,
                                    N
                                    ,
                                 
                              
                           where K is the covariance matrix, N is the number of points contained in the point cloud, and xi
                            is the ith point in the point cloud. Once the covariance matrix is calculated for both M and S, the eigenvalues and eigenvectors of the two point clouds are calculated based on single value decomposition (SVD) of the covariance matrix (K):
                              
                                 (2)
                                 
                                    K
                                    =
                                    U
                                    Λ
                                    
                                       
                                          U
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                 
                              
                           where Λ is a diagonal matrix, and U is the eigenvector. It should be noted that the eigenvector represents the principal axes of the point cloud, based on consideration of the distribution of the points in the point cloud. Following the calculation of UM
                            and Us
                           , which represent eigenvectors for M and S, the required translation components are defined. The rotation required (Rc
                           ) to align the principal axis of S with the principal axis of M is calculated as follows:
                              
                                 (3)
                                 
                                    
                                       
                                          R
                                       
                                       
                                          c
                                       
                                    
                                    =
                                    
                                       
                                          U
                                       
                                       
                                          M
                                       
                                    
                                    ×
                                    
                                       
                                          U
                                       
                                       
                                          S
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    ,
                                 
                              
                           and the required translation (Tc
                           ) is defined as follows:
                              
                                 (4)
                                 
                                    
                                       
                                          T
                                       
                                       
                                          c
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          M
                                       
                                    
                                    -
                                    
                                       
                                          R
                                       
                                       
                                          c
                                       
                                    
                                    ×
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                ¯
                                             
                                          
                                       
                                       
                                          s
                                       
                                    
                                 
                              
                           After T and R are applied as the required transformation components, the two point clouds are aligned based on the calculation of the directions of the principal axes in both point clouds. The results of the application of PCA show that it resolves the problem of becoming stuck in the local minima by causing the point clouds to be roughly aligned. Fig. 4
                            shows sample results of the fine registration for both with and without the application of PCA. As can be clearly seen in Fig. 4(a), although ICP has been performed, the global minimum is not detected, and the registration results are insufficiently reliable to provide the level of accuracy desired for remote quality assessment. As indicated in Fig. 4(b), the global minimum is detected because of the initial coarse registration.

After the coarse registration step, the point clouds must be registered more accurately to enable the evaluation of the scanned point cloud that represents the as-built status of the fabricated assemblies. As discussed extensively in Section 2, during the past couple of decades, a considerable number of studies have evaluated a variety of approaches to registration [43,41,42]. Of the previously discussed methods, those that perform the registration more robustly and converge to the best fit more quickly for 3D point clouds have become valuable tools in automatic prototyping and remote assessment. On the other hand, feature-based methods work less efficiently and are thus unsuitable for cases in which significant accuracy is desired. Since ICP uses existing correspondences that are points, it converges more quickly in 3D than similar approaches. According to Salvi et al. [27], ICP is sufficiently fast and robust to be employed for noisy point clouds considering the mathematical computation required [44]. Due to all these advantages coupled with the simplicity of its implementation, ICP has been employed for the fine registration step in this research.

The iterative procedure registers two datasets Model (M) and Scene (S), by finding the points in the Scene closest to predefined subset of M. The robustness and swiftness of the ICP process is affected by a number of variants: the method of subset selection, the nearest point searches for matching, and the optimization techniques for ’error minimization [45]. The Scene is iteratively translated and rotated as follows:
                              
                                 (5)
                                 
                                    
                                       
                                          S
                                       
                                       
                                          ∗
                                       
                                    
                                    =
                                    
                                       
                                          R
                                       
                                       
                                          f
                                       
                                    
                                    ×
                                    S
                                    +
                                    
                                       
                                          T
                                       
                                       
                                          f
                                       
                                    
                                    ,
                                 
                              
                           where Rf
                            and Tf
                            are required rotation and translation matrices for updating S to S∗
                           . Finding the required rotation and translation matrices involves an optimization problem for minimizing the error between the transformed points in S∗
                            and M. The error represents the summation of the Euclidean distances of corresponding points in the two point clouds. The objective function for the optimization problem posed in this research can be expressed as follows:
                              
                                 (6)
                                 
                                    Minimize
                                    :
                                    
                                    d
                                    =
                                    
                                       1
                                       
                                          
                                             N
                                          
                                          
                                             s
                                          
                                       
                                    
                                    
                                       
                                          Σ
                                       
                                       
                                          
                                             i
                                             =
                                             1
                                          
                                       
                                       
                                          
                                             N
                                          
                                          
                                             s
                                          
                                       
                                    
                                    ‖
                                    
                                       
                                          M
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          S
                                       
                                       
                                          i
                                       
                                       
                                          ∗
                                       
                                    
                                    
                                       ‖
                                       
                                          2
                                       
                                    
                                    ,
                                 
                              
                           where Ns
                            is the number of points in the Scene used for finding the correspondences in the Model and d is the error that is to be minimized. It can be mathematically proven that the error (d) decreases monotonically during ICP [44]. However, it may converge to a local minimum rather than searching for the global minimum. Hence, an appropriate sufficiently fast optimization method that guarantees the global minimum will be found is essential here. Additional challenges associated with ICP are discussed in the following paragraph.

In the presented work, fine registration is based on three primary assumptions related to solving the challenges involved in ICP:
                              
                                 1.
                                 For determining the correspondences that are the closest points, all points contained in the scene are considered to be the target subset,

A brute-force search is used for finding the nearest neighbors. The basic concept of this search method is the calculation of all distances followed by the selection of the nearest neighbors, which is also called an exhaustive search or naïve approach [46]. The search method can be modified for large point clouds by using more efficient techniques such as a KD-tree [45].

To avoid convergence to a local minimum, the Levenberg–Marquardt (LM) approach is employed for error minimization. Table 1
                                     provides a summary of the advantages and disadvantages of common nonlinear optimization techniques that are in accordance with the principles expressed by Bates [47].

As indicated in Table 1, of the commonly used nonlinear optimization methods, although it is slower than Gauss–Newton method, LM is the only approach that guarantees global minimum convergence. Like other nonlinear optimization methods, the LM method is based on a Taylor series expansion for the prediction of the next incremental value. The following are the primary equations for the calculation of the values required for determining the global minimum:
                              
                                 (7)
                                 
                                    d
                                    (
                                    p
                                    +
                                    
                                       
                                          δ
                                       
                                       
                                          p
                                       
                                    
                                    )
                                    ≈
                                    d
                                    (
                                    p
                                    )
                                    +
                                    J
                                    
                                       
                                          δ
                                       
                                       
                                          p
                                       
                                    
                                    ,
                                 
                              
                           where j is the Jacobian matrix 
                              
                                 
                                    
                                       
                                          j
                                          =
                                          
                                             
                                                ∂
                                                d
                                                (
                                                p
                                                )
                                             
                                             
                                                ∂
                                                (
                                                p
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                            and δp
                            is defined as follows:
                              
                                 (8)
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          p
                                       
                                    
                                    =
                                    
                                       
                                          (
                                          
                                             
                                                J
                                             
                                             
                                                T
                                             
                                          
                                          J
                                          +
                                          λ
                                          I
                                          )
                                       
                                       
                                          -
                                          1
                                       
                                    
                                    
                                       
                                          J
                                       
                                       
                                          T
                                       
                                    
                                    (
                                    d
                                    -
                                    
                                       
                                          d
                                       
                                       
                                          ∗
                                       
                                    
                                    )
                                    ,
                                 
                              
                           in which I is the identity matrix, 
                              
                                 λ
                              
                            is the non-negative damping factor adjusted at each iteration and (d
                           −
                           d
                           ∗) is the residual function that is the difference between the real (d) and estimated values (d
                           ∗).Once the optimization process is completed, transformation parameters are obtained and the model is updated. The minimization of the error enables the best transformation parameters to be calculated. The resulting rotation and translation matrices are used to update S and find a better match. This procedure is performed iteratively until the convergence criterion is satisfied. Fig. 4 shows sample results of the ICP registration step with and without the previous coarse registration step.

Once the two point clouds are reliably registered, it then becomes possible to evaluate the dimensional accuracy of the assemblies. A condition assessment of the steel pipe spool assemblies is performed in two primary phases: detection of existing deviations and quantification of the deviations detected. The first step is performed through visualization of the error between the existing and desired condition, as provided by the registration process. The errors are then quantified based on an examination of the local root mean square (RMS) values. These steps are discussed in the following sections.

In the manufacturing industry, deviation analysis is a key technique for finding the defects in assemblies. Commercial software packages for performing deviation analysis have been widely used for the assessment of the as-built status of residential buildings [48]. Researchers have held that using computer-aided techniques facilitates the productive detection of deviations in buildings. An automated distance-based deviation analysis is therefore used here as a means of visualizing potential errors and existing defects in assemblies. For this research, the method has been fully automated and implemented in MATLAB. Sample deviation analysis results for one of the assemblies studied are provided in Fig. 5
                           .

The definition of a neighborhood-based metric is required because the total RMS value calculated in the registration step is inadequate for characterizing the deviations, a deficiency due to additional factors that also play a role in the determination of RMS value. These factors include assembly shape and point distribution in both the Scene and Model point clouds. For the purposes of this research, the Scene and Model point clouds are divided into corresponding clusters so that the local RMS investigation can be conducted. A 3D cube with a user-defined size is moved automatically along the assembly, as shown in Fig. 7c, and an algorithm searches for points contained in both point clouds within the neighborhood defined by the cube. The local RMS is the error associated with the corresponding pair of point clouds in M and S, called m and s, respectively. The resulting RMS value enhances the characterization and quantification of the previously detected deviations. Fig. 6
                            presents the proposed algorithm for the quantitative condition assessment of pipe spool assemblies.

To validate the proposed methodology and measure the performance of the condition assessment approach for pipe spool assemblies, a set of experiments were conducted at the University of Waterloo’s Infrastructure Sensing and Analysis Laboratory. An assembly was designed and fabricated for the experiments and consists of a set of reconfigurable pipe spools, as shown in Fig. 7
                        (a), and a pipe rack (not shown). The reconfigurability of the pipe spool makes it possible to set known displacements and rotations from a notional design state and then to validate and measure the performance of the proposed method. For this set of experiments, a specific branch of the pipe spool, as shown in Fig. 7(b), was studied. The end flange of the spool was rotated at a variety of rotation angles, as shown in Fig. 7(b).

Data were acquired using a FARO LS 840 HE, which is a phase-based laser scanner that measures the phase shifting between the shot and the captured ray. Based on the acquired phase shift, it then calculates the object coordination. Additional technical specifications for the laser scanner used in the experimental study are provided in Table 2
                        . Clearly, a newer model would yield a more precise point cloud and improve results commensurately; however, available resources did not permit this.

@&#RESULTS@&#

To apply the proposed algorithm (Fig. 6) for different alterations of the pipe spool, the end flange angle of rotation θ was changed, shown in Fig. 7(b). The original state (θ
                        =0°) was tested initially and RMS values for the critical cubes, shown in Fig. 7(c), were extracted using the proposed algorithm. The same procedure was then performed for other alterations of θ. Two types of fabrication error typically occur in practice: incorrect fitting and welding, which usually leads to a few degrees of error, and inaccurate readings of the drawings which cause more substantial errors. To cover both of these cases, a wide range of rotation angles were therefore considered. For the implementation of the proposed algorithm for the local registration, 30×30×30
                        cm was selected as the cube size. A summary of the results is provided in Table 3
                         and Fig. 8
                        .

In Fig. 8(b), it can be clearly seen that the RMS value, which represents the average error, increases as the position of the cube moves closer to the end flange for high angular displacements. This finding could lead to the conclusion that, for a defective pipe spool, due for example to human error in interpreting the design drawings, the RMS increases as the position of the investigated cube approaches the defective part. However for angular displacements less than 15°, the error at each location is relatively constant with respect to the displacement angle. This is due to the degradation of fine registration of the assembly as a whole due to the end-piece displacement. As shown in Fig. 8, in the assemblies studied, the local RMS value is an indicative descriptor of defect detection in the studied assemblies. Automated localization, without resorting to visualization, of low angular deflections requires further study, and some ideas are presented below.

One notable advantage of the methodology proposed here is that it detects the whole assemblies autonomously and individually, in contrast with traditional deviation detection methods, in which a distance-based analysis is used for each point. An approach for subsequent precise alignment deviation analysis that may enable automated realignment planning for defective assemblies is illustrated in Fig. 9
                        . Assuming a virtual serial manipulator kinematic model for the spool [49,50], discrepancy and deviation analysis at this point can be considered as determination of required transformation parameters, rotation and translation, to assign to different sections of the previously registered point clouds corresponding to links in the virtual manipulator representing the fabricated static spool. Automated feature and shape recognition techniques, such as the Hough Transform and local PCA, are the examples of methods for deviation and discrepancy quantification that have been shown to work for this purpose [51,41].

To investigate the relationship between the angle of rotation and the RMS value for each position, a regression analysis was conducted. For this analysis, θ
                        =30° was disregarded and used for the validation of the regression analysis. However, the correlation coefficient shown in Table 4
                         implies that the regression analysis was performed reliably. Investigating a rotation angle that has been physically measured during the experiments is a more practical means of determining the level of accuracy provided by the developed approach. The analysis takes a linear regression (θ
                        =
                        a
                        0
                        +
                        a
                        1 
                        RMS). Using the estimating function calculated by the regression analysis and the measured RMS for θ
                        =30° extracted from the local registration algorithm results, the angle of rotation for each cube position was estimated and compared to the real value, as shown in Table 4. The results confirm that the proposed method can be used for automated defect detection and preliminary characterization with an adequate degree of accuracy.

It should be noted that the size of the cube is unchanged during the experiment; however it can be defined by users, as mentioned earlier. Because RMS represents the average error for the contained points in the cube, the change in the size of the cube will affect the RMS value. For example, in case where the cube is moved along a defective part of the assembly, the more it covers the defects and deviations, the larger RMS value. On the other hand, if making the cube size larger results in covering a well fabricated part, the RMS value may either become smaller or stay unchanged (slightly changed), depending on the size of the cube and the size of assemblies. The general intent behind sizing the cube is to be able to localize discrepancies, so in most cases its size will be a matter of judgement related for example to the diameter of the pipes which form the spool.

@&#CONCLUSIONS AND FUTURE WORK@&#

An automated approach has been presented for defect detection and characterization with respect to pipe spools. An ICP-based approach, preceded by PCA for coarse registration, is employed for the automated registration step. The coarse registration initiated in the algorithm proposed here not only guarantees the determination of the global minimum but also accelerates the registration process (Fig. 4). The accuracy of the registration method proposed here strongly relies on the accuracy of the acquired point cloud. Scanning resolution and accuracy of the point cloud play an important role in acquiring a reliable point cloud to be used in the registration. Once reliable data is acquired, the proposed registration method guarantees the best fit with as-designed data. Inaccurate and unreliable scan data and registration result in larger RMS values. Automated distance-based deviation analysis has also been performed as a means of detecting, localizing, and visualizing the incurred defects present in the assemblies studied.

An experimental study was conducted in order to examine the feasibility of automatically quantifying the deviations thus detected in the defective parts of the assemblies. The algorithm for defect detection and the characterization of the errors encountered includes sub-clustering and local RMS investigation. For investigating and establishing the relationship between the RMS value and the level of deviation present in the assembly a pure rotation has been applied at different alterations to the critical flange. The results definitely signify a robust linear relationship between the local RMS and the angle of rotation. The experimental results show that the proposed method is promising and has the potential to be employed for characterizing deviations in a preliminary fashion that occur in steel assemblies such as pipe spools with a reasonable degree of accuracy (less than 10% error). However, this is insufficient accuracy for input to a realignment planning model, so subsequent, automated, precise deviation analysis is being developed.

One of the limitations of the proposed model is that for the symmetrical geometries, it might not operate properly during the registration phase. The registration should also be customizable so that it can indicate and fix in space previously identified perfectly fabricated parts, a factor that obviously plays a role in the registration results. These assumptions have been disregarded in the current study and will be investigated later as potential avenues for the improvement and customization of the registration process. However, significantly improved and more reliable results can certainly be expected if such assumptions are considered in the model and incorporated in new algorithms. An additional consideration is that pure angular displacement is the only deviation investigated in this research. Deviations combined with translations thus represent an additional possibility of extending the scope of this work in the future.

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank Dennis Samolczyk from Aecon for providing the University of Waterloo with laboratory facilities, arranging site visits, and allowing Mohammad Nahangi and other team members to take scans of their products in their fabrication shop, located in Cambridge, Canada. This research is partially funded by NSERC CRD and NSERC Discovery Grant.

@&#REFERENCES@&#

