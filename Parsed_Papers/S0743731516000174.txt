@&#MAIN-TITLE@&#Joint scheduling of MapReduce jobs with servers: Performance bounds and experiments

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We investigate a schedule problem for MapReduce-like frameworks by taking server assignment into consideration.


                        
                        
                           
                           We formulate the MapReduce server-job organizer problem (MSJO) and show that it is NP-complete.


                        
                        
                           
                           We propose a 3-approximation algorithm and a fast heuristic design to address the MSJO problem.


                        
                        
                           
                           We implement our algorithms and some state-of-the-art algorithms on Amazon EC2 with deploying schedulers in Hadoop.


                        
                        
                           
                           By comprehensive simulations and experiments, the results show that our algorithm outperforms other classical strategies.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

MapReduce

Scheduling

Server assignment

NP-complete

Fast heuristic

@&#ABSTRACT@&#


               
               
                  MapReduce-like frameworks have achieved tremendous success for large-scale data processing in data centers. A key feature distinguishing MapReduce from previous parallel models is that it interleaves parallel and sequential computation. Past schemes, and especially their theoretical bounds, on general parallel models are therefore, unlikely to be applied to MapReduce directly. There are many recent studies on MapReduce job and task scheduling. These studies assume that the servers are assigned in advance. In current data centers, multiple MapReduce jobs of different importance levels run together. In this paper, we investigate a schedule problem for MapReduce taking server assignment into consideration as well. We formulate a MapReduce server-job organizer problem (MSJO) and show that it is NP-complete. We develop a 3-approximation algorithm and a fast heuristic design. Moreover, we further propose a novel fine-grained practical algorithm for general MapReduce-like task scheduling problem. Finally, we evaluate our algorithms through both simulations and experiments on Amazon EC2 with an implementation with Hadoop. The results confirm the superiority of our algorithms.
               
            

@&#INTRODUCTION@&#

Recently the amount of data of various applications has increased beyond the processing capability of single machines. To cope with such data, scale out parallel processing is widely accepted. MapReduce  [11], the de facto standard framework in parallel processing for big data applications, has become widely adopted. Nevertheless, MapReduce framework is also criticized for its inefficiency in performance and as “a major step backward”  [14]. This is partially because that, performance-wise, the MapReduce framework has not been deeply studied enough as compared to decades of study and fine-tune of other conventional systems. As a consequence, there are many recent studies in improving MapReduce performance.

MapReduce breaks down a job into map tasks and reduce tasks. These tasks are parallelized across server clusters.
                        1
                     
                     
                        1
                        The server clusters here are meant to be general; it can either be data center servers or cloud virtual machines.
                      Although map tasks and reduce tasks overlap partly in the real Hadoop scheduling mechanism, researchers  [18,19] generally assume that reduce tasks will not start until the accomplishment of map tasks because reduce tasks rely on intermediate data produced by the map tasks. This is a parallel–sequential structure. In current practice, multiple MapReduce jobs are scheduled simultaneously to efficiently utilize the computation resources in the data center servers. It is a non-trivial task to find a good schedule for multiple MapReduce jobs and tasks running on different servers. There are a great number of studies on general parallel processing scheduling in the past decades. Nevertheless, whether these techniques can be applied directly in the MapReduce framework is not clear; and especially, their results on theoretical bounds are unlikely to be translated.

In this paper, we conduct research in this direction. There are recent studies on MapReduce scheduling  [7,8]. As an example, an algorithm is developed in  [8] for joint scheduling of processing and shuffle phases and it achieves an 8-approximation. To the best of our knowledge, previous studies commonly assume that the servers are assigned. That is, they assume that tasks in MapReduce jobs are first assigned to the servers, and their scheduling is conducted to manage the sequences of the map and reduce tasks in each job. It is not clear whether the scheduling on map and reduce tasks will be affected in a situation where the server assignment is “less good”. We illustrate this impact by a toy example in Fig. 1
                     . There are three machines and two jobs. Job 1 has 4 map tasks and 2 reduce tasks. Job 2 has 1 map task and 1 reduce task. Assume the processing time to be 75 s for every single map task and 100 s for every single reduce task. If server assignment is not considered, it will result in Fig. 1(a), which follows the default FIFO strategy of Hadoop  [3]. However, if we jointly consider server assignment, we can achieve a schedule shown in Fig. 1(b). It is easy to see that the completion time of job 2 in Fig. 1(a) is 250 s and in Fig. 1(b) is 175 s, a 30% improvement.

In this paper, we fill in this blank by jointly consider server assignments and MapReduce jobs (and the associated tasks). To systematically study this problem, we formulate a unique MapReduce server-job organizer problem (MSJO). Note that the MSJO we discuss is the general case where the jobs can have different weights. We show that MSJO is NP-complete and we develop a 3-approximation algorithm. This approximation algorithm, though polynomial, has certain complexity in solving an LP-subroutine. Therefore, we further develop a fast heuristic. We evaluate our algorithm through extensive simulations. Our algorithm can outperforms the state-of-the-art algorithms by 40% in terms of total weighted job completion time. We further implement our algorithm in Hadoop and evaluate our algorithm using experiments in Amazon EC2  [1]. The experiment results confirm the advantage of our algorithm.

The rest of the paper is organized as follows. We discuss background in Section  2. We formulate the MSJO problem and analyze its complexity in Section  3. In Section  4, we present several algorithms. We evaluate our algorithms in Section  5. In Section  6, we show an implementation of our scheme in Hadoop and our evaluation in Amazon EC2. Finally, Section  7 summarizes the paper.

@&#RELATED WORK@&#

Due to the wide usage of MapReduce systems, there is a flourish of studies on understanding MapReduce performance and many developed various improvement schemes. One classification divides the view point by system and algorithm. Our work belongs to algorithm research and we categorize this in Fig. 2
                     .


                     From system point of view: (1) Framework. There are many valuable advances on improving MapReduce framework. For example, Apache YARN  [5] is a new kind of Hadoop resource manager, which can provide unified resource management and scheduling for the above big data applications. Mesos  [4] is built using the same principles as the Linux kernel and provides applications (e.g., Hadoop, Spark, Kafka) with APIs for resource management and scheduling across entire datacenter and cloud environments. However, these open source programs focus on the cloud resource management and system implementation, but not the optimal job/task scheduling issues. Zhang et al.  [40] identified useful functional properties for user-defined functions and proposed an optimization framework SUDO that reasons about data-partition partition properties, functional properties, and data shuffling. Costa et al.  [9] built a MapReduce-like system Camdoop to decrease the traffic by using a direct-connect network topology with servers. Zhang et al.  [39] designed MIMP, a minimal interference, maximal progress scheduling system which manages both VM CPU scheduling and Hadoop job scheduling to reduce interference and increase overall efficiency. Li et al.  [24] presented an efficient scheduling framework WOHA for deadline-aware MapReduce workflows. Literature  [23] introduces the technique of packing server to convert independent task set schedulability bounds to MapReduce workflows schedulability bounds for real-time analytic applications. Our attention is focused on another aspect, which means we try to optimize the MapReduce performance bound in terms of the total weighted job completion time based on LP relaxation. (2) Resource Management. For example, Xie et al.  [35] observed that the MapReduce applications have different network bandwidth requirements at different stages of the job execution, then proposed a model network bandwidth requirements of MapReduce jobs and a system PROTEUS to maximize number of accommodated jobs. Herodotou et al.  [20] developed Elastisizer to which users can express their cluster sizing problems as queries in a declarative fashion, and can provide reliable answers to these queries using an automated technique and provide nonexpert users with a good combination of cluster resource and job configuration settings to meet their needs. In  [13], Quasar, a cluster management system, is proposed to increase resource utilization while providing consistently high application performance. It uses fast classification techniques to determine the impact of different resource allocations and assignments on workload performance. (3) Heterogeneity. Zaharia et al.  [38] designed a robust scheduling algorithm LATE to address the performance issues incurred by speculative execution in heterogeneous environment. In  [12], Paragon, an online and QoS-aware scheduler proposed for heterogeneous clusters, includes a greedy server scheduler which minimizes interference and increases server utilization. Besides, outliers are considered in  [2], which proposed Mantri to monitor tasks and cull outliers using cause- and resource-aware techniques. However, none of the above mentioned studies consider MapReduce jobs/tasks scheduling problem.


                     From algorithmic point of view: people are looking into MapReduce jobs/tasks scheduling with various considerations in different scenarios. (1) Fairness. Isard et al.  [21] introduced Quincy for scheduling concurrent distributed jobs with fine-grain resource sharing and Quincy can get better fairness. Delay scheduling  [37] is proposed to divide resources using max–min fair sharing to achieve statistical multiplexing. (2) Data locality. Wang et al.  [33] proposed ActCap which uses a method based on Markov chain to do node-capability-aware data placement for the continuous incoming data in ever-growing heterogeneous clusters. Wang et al.  [34] presented a new queueing architecture and proposed a map task scheduling algorithm constituted by the JSQ policy together with the MaxWeight policy under heavy traffic. Tan et al.  [31] formulated a stochastic optimization framework to improve the data locality for reduce tasks with the optimal placement policy exhibiting a threshold-based structure. Purlieus  [25] allocated VMs for MapReduce cluster in a data-locality manner to optimize performance of data access in MapReduce system. Besides, Omega  [30] is proposed to support cooperation of multiple schedulers in large computer clusters. Zheng et al.  [41] propose a MapReduce scheduler with provable efficiency on total flow time. Sandholm et al.  [28] provided automatic application-independent optimization strategies by prioritizing users, stage in a job, and bottleneck components within a stage. However, the goals of these studies are not so much finding an optimal solution, or even understanding how close to the optimal their schemes are.

For the objective of fast completion time, two most closely related works of our work are  [7,8]. In  [7], Chang et al. focused on a theoretical model for determining which MapReduce jobs to schedule at what times, and formulated a linear program and several approximation algorithms like OFFA for minimizing the total job completion times. In  [8], Chen et al. investigated precedence constraints between map tasks and reduce tasks in MapReduce jobs, and proposed an 8-approximation algorithm MARES, which is an advanced work and has currently the best theoretical performance upper bound, to solve the joint scheduling problem. However, they assume that tasks are assigned to processors/servers in advance. As shown in Fig. 1, scheduling of jobs without considering server assignment may result in less optimal solutions. We fill in this gap in this paper.

General scheduling of parallel machines has decades of studies. There are many works with inspiring ideas and analytical techniques  [22,29,17,10]. In particular, the polyhedron of necessary conditions for the single machine problem was derived in  [26]. And  [29] used this result to derive approximation algorithms for single machine weighted completion time with additional side constraints. For minimizing total weighted job completion time with precedence constraints on multi-machines, the best known work is a 4-approximation algorithm in  [27]. However, these works focus on the general case.

Let 
                           J
                         be a set of MapReduce jobs. Let 
                           M
                         be a set of identical machines. Let the release time of job 
                           j
                         be 
                           
                              
                                 r
                              
                              
                                 j
                              
                           
                        . This release time is the time a job is entering the system; note that it differs from the job start time where the job scheduler can schedule a job to be started later than this release time. Let 
                           
                              
                                 T
                              
                              
                                 j
                              
                              
                                 
                                    (
                                    M
                                    )
                                 
                              
                           
                         and 
                           
                              
                                 T
                              
                              
                                 j
                              
                              
                                 
                                    (
                                    R
                                    )
                                 
                              
                           
                         be the set of map tasks and reduce tasks for each job 
                           j
                        . Let 
                           T
                         be the set of all tasks of 
                           J
                        . For each task 
                           u
                           ∈
                           T
                        , let 
                           
                              
                                 p
                              
                              
                                 u
                              
                           
                         be its processing time. We assume that a task cannot be preempted. In our assumption, MapReduce jobs can be preempted; only tasks cannot. In the current operation of MapReduce job scheduling, a job with high priority does not preempt running tasks. It waits until the processors are released. This is because that the number of processors is large and the tasks are relatively small. Thus, the high priority job can be put into execution quickly. We also assume that for any job  
                           j
                        , processing times of its map tasks are smaller than that of its reduce tasks. We admit that this is a key assumption for our bounding development. Yet this is true in current situation. Every map task simply scatters a chuck of data while the reduce tasks need to gather, reorganize and process data produced by map tasks. To make the situation worse, the number of reduce task is always configured to be much less than the number of map tasks. As a result, processing times of reduce tasks are much longer than that of map tasks. We also validate this assumption in our experiment.

Let 
                           
                              
                                 d
                              
                              
                                 u
                                 v
                              
                           
                         be the delay between a map task 
                           u
                           ∈
                           
                              
                                 T
                              
                              
                                 j
                              
                              
                                 
                                    (
                                    M
                                    )
                                 
                              
                           
                         and a reduce task 
                           v
                           ∈
                           
                              
                                 T
                              
                              
                                 j
                              
                              
                                 
                                    (
                                    R
                                    )
                                 
                              
                           
                         (e.g., introduced by shuffle phase). Let 
                           
                              
                                 S
                              
                              
                                 u
                              
                           
                         be the start time of task 
                           u
                        . Let 
                           S
                         be set of 
                           
                              
                                 S
                              
                              
                                 u
                              
                           
                           ,
                           ∀
                           u
                           ∈
                           T
                        . Let 
                           
                              
                                 C
                              
                              
                                 j
                              
                           
                         be completion time of job 
                           j
                        , which is the time when all reduce tasks 
                           v
                           ∈
                           
                              
                                 T
                              
                              
                                 j
                              
                              
                                 
                                    (
                                    R
                                    )
                                 
                              
                           
                         finish. Let 
                           C
                         be set of 
                           
                              
                                 C
                              
                              
                                 j
                              
                           
                           ,
                           
                           ∀
                           j
                           ∈
                           J
                        . There is a weight 
                           
                              
                                 w
                              
                              
                                 j
                              
                           
                         associated with job 
                           j
                         and our objective is to find a feasible schedule to minimize total weighted job completion time 
                           
                              
                                 ∑
                              
                              
                                 j
                                 ∈
                                 J
                              
                           
                           
                              
                                 w
                              
                              
                                 j
                              
                           
                           
                              
                                 C
                              
                              
                                 j
                              
                           
                         subject to following constraints for every job 
                           j
                        . We can write the linear program model as follows (see Table 1
                        ): 
                           
                              
                                 min
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                 
                              
                           
                         s.t. 
                           
                              
                                 (1)
                                 
                                    
                                       
                                          S
                                       
                                       
                                          u
                                       
                                    
                                    ≥
                                    
                                       
                                          r
                                       
                                       
                                          j
                                       
                                    
                                    ∀
                                    u
                                    ∈
                                    
                                       
                                          T
                                       
                                       
                                          j
                                       
                                       
                                          
                                             (
                                             M
                                             )
                                          
                                       
                                    
                                 
                              
                              
                                 (2)
                                 
                                    
                                       
                                          S
                                       
                                       
                                          v
                                       
                                    
                                    ≥
                                    
                                       
                                          S
                                       
                                       
                                          u
                                       
                                    
                                    +
                                    
                                       
                                          d
                                       
                                       
                                          u
                                          v
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          u
                                       
                                    
                                    ∀
                                    u
                                    ∈
                                    
                                       
                                          T
                                       
                                       
                                          j
                                       
                                       
                                          
                                             (
                                             M
                                             )
                                          
                                       
                                    
                                    ,
                                    v
                                    ∈
                                    
                                       
                                          T
                                       
                                       
                                          j
                                       
                                       
                                          
                                             (
                                             R
                                             )
                                          
                                       
                                    
                                 
                              
                              
                                 (3)
                                 
                                    
                                       
                                          C
                                       
                                       
                                          j
                                       
                                    
                                    ≥
                                    
                                       
                                          S
                                       
                                       
                                          v
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          v
                                       
                                    
                                    ∀
                                    v
                                    ∈
                                    
                                       
                                          T
                                       
                                       
                                          j
                                       
                                       
                                          
                                             (
                                             R
                                             )
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     


                        
                           Theorem 1
                           
                              MSJO is NP-complete.
                           


                        
                           Proof
                           It is easy to verify that calculating total weighted job completion time of a schedule result is NP. Therefore, MSJO is in NP class. To show MSJO is NP-complete, we reduce a job schedule problem (problem SS13 in  [15]) to it. Problem SS13 is proven NP-complete to determine a feasible schedule for minimizing the total weighted job completion time. Given every instance 
                                 
                                    (
                                    J
                                    ,
                                    M
                                    )
                                 
                               of problem SS13, where 
                                 J
                               is a set of jobs and 
                                 M
                               is a set of identical machines. We can construct an instance 
                                 
                                    (
                                    
                                       
                                          J
                                       
                                       
                                          M
                                       
                                    
                                    ,
                                    
                                       
                                          M
                                       
                                       
                                          M
                                       
                                    
                                    )
                                 
                               of MSJO. 
                                 M
                               and 
                                 
                                    
                                       M
                                    
                                    
                                       M
                                    
                                 
                               are same. For every job 
                                 j
                                 ∈
                                 J
                              , there is a job 
                                 
                                    
                                       j
                                    
                                    
                                       M
                                    
                                 
                                 ∈
                                 
                                    
                                       J
                                    
                                    
                                       M
                                    
                                 
                              . 
                                 j
                                and 
                                 
                                    
                                       j
                                    
                                    
                                       M
                                    
                                 
                               have same job weight. 
                                 
                                    
                                       j
                                    
                                    
                                       M
                                    
                                 
                               has one map task with processing time 0 and one reduce task with processing time of job 
                                 j
                              . Release time of 
                                 
                                    
                                       j
                                    
                                    
                                       M
                                    
                                 
                               is 0. Thus, if MSJO can be solved optimally with a polynomial algorithm, problem SS13 can be solved by this algorithm. Because problem SS13 is NP-complete, MSJO is NP-complete.□

We outline our approach described in next three subsections: (1) We introduce a linear programming relaxation to give a lower bound of the optimal solution for MSJO. This LP-based solution may not be a feasible solution. (2) Although there is a polynomial time algorithm for solving this LP relaxed problem in theory, the high complexity associated makes it impractical to solve the LP-relaxed problem when problem size is large. Therefore, inspired by this classic linear programming relaxation, we develop a novel constraint generation algorithm to produce another relaxed solution which provides lower bound to MSJO. (3) We develop algorithm MarS to generate a feasible solution from this relaxed solution. We prove that this solution is within 3 factors of the optimal solution for MSJO.

Since MSJO is NP-complete, we adopt a linear programming relaxation of the problem to give a lower bound on the optimal solution value. Constraints of this LP relaxation are necessary conditions that task start times in a feasible schedule result have to satisfy. The relaxation constraints are shown as follows: 
                           
                              (4)
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       u
                                       ∈
                                       B
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       u
                                    
                                 
                                 
                                    
                                       S
                                    
                                    
                                       u
                                    
                                 
                                 ≥
                                 
                                    
                                       1
                                    
                                    
                                       2
                                       
                                          |
                                          M
                                          |
                                       
                                    
                                 
                                 
                                    
                                       
                                          (
                                          
                                             
                                                ∑
                                             
                                             
                                                u
                                                ∈
                                                B
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                u
                                             
                                          
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       u
                                       ∈
                                       B
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                                 ∀
                                 B
                                 ⊆
                                 T
                              
                           
                         where 
                           
                              |
                              M
                              |
                           
                         is number of machines in 
                           M
                           ,
                           B
                         is any subset of 
                           T
                        .

Then our linear programming relaxation problem is minimizing 
                           
                              
                                 ∑
                              
                              
                                 j
                                 ∈
                                 J
                              
                           
                           
                              
                                 w
                              
                              
                                 j
                              
                           
                           
                              
                                 C
                              
                              
                                 j
                              
                           
                         subjected to constraints in Eqs. (1)–(4). We call this problem Classical LP Relaxation Problem (CLS-LPP). Note that the decision variables in this CLS-LPP are 
                           
                              
                                 S
                              
                              
                                 u
                              
                           
                         and 
                           
                              
                                 C
                              
                              
                                 j
                              
                           
                        ; so a solution can be presented as 
                           
                              (
                              S
                              ,
                              C
                              )
                           
                        .

Constraints in Eq. (4) describe a polyhedron where task start times of a feasible schedule lie in. We give a simple example to explain the intuition. Consider 3 machines with 6 tasks 
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 t
                              
                              
                                 6
                              
                           
                         whose processing times are 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 p
                              
                              
                                 6
                              
                           
                         respectively. Consider an assignment result where 
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                         are assigned to machine 1, 
                           
                              
                                 t
                              
                              
                                 3
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 4
                              
                           
                         to machine 2, 
                           
                              
                                 t
                              
                              
                                 5
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 6
                              
                           
                         to machine 3. Start times of 
                           
                              
                                 t
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                         can be 
                           
                              
                                 S
                              
                              
                                 1
                              
                           
                           =
                           0
                         and 
                           
                              
                                 S
                              
                              
                                 2
                              
                           
                           =
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                        . Or 
                           
                              
                                 S
                              
                              
                                 1
                              
                           
                           =
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                         and 
                           
                              
                                 S
                              
                              
                                 2
                              
                           
                           =
                           0
                         if 
                           
                              
                                 t
                              
                              
                                 2
                              
                           
                         is scheduled first. Then, we have 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                           
                              
                                 S
                              
                              
                                 1
                              
                           
                           +
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                           
                              
                                 S
                              
                              
                                 2
                              
                           
                           =
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                           =
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                           
                              (
                              
                                 
                                    
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             1
                                          
                                       
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                 
                                 
                                    2
                                 
                              
                              −
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                        . Tasks on other machines have similar equations. Adding these equations together, we have 
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 6
                              
                           
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                           
                              
                                 S
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                           
                              
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                              
                              
                                 2
                              
                           
                           +
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                           
                              
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          3
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          4
                                       
                                    
                                    )
                                 
                              
                              
                                 2
                              
                           
                           +
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                           
                              
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          5
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          6
                                       
                                    
                                    )
                                 
                              
                              
                                 2
                              
                           
                           −
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 6
                              
                           
                           
                              
                                 p
                              
                              
                                 i
                              
                              
                                 2
                              
                           
                           ≥
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                           ×
                           
                              
                                 1
                              
                              
                                 3
                              
                           
                           
                              
                                 
                                    (
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          6
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                              
                              
                                 2
                              
                           
                           −
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 6
                              
                           
                           
                              
                                 p
                              
                              
                                 i
                              
                              
                                 2
                              
                           
                         where equality holds when 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                           +
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                           =
                           
                              
                                 p
                              
                              
                                 3
                              
                           
                           +
                           
                              
                                 p
                              
                              
                                 4
                              
                           
                           =
                           
                              
                                 p
                              
                              
                                 5
                              
                           
                           +
                           
                              
                                 p
                              
                              
                                 6
                              
                           
                           =
                           
                              
                                 1
                              
                              
                                 3
                              
                           
                           
                              
                                 ∑
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 6
                              
                           
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        . Note that this argument can be extended to any feasible task schedule results. When additional constraints are added, the sum of task start times will increase. As a result, the left part of Eq. (4) increases and the relation still holds.

Note that there are an exponential number of constraints in Eq. (4) due to the exponential number of 
                           B
                        . To the best of our knowledge, algorithms for solving LP problems need to handle all constraints. Their computing complexities are at least 
                           O
                           
                              (
                              n
                              )
                           
                         where 
                           n
                         is the number of constraints in the problem because algorithms need to check whether all constraints are satisfied. In our LP-relaxed problem, the exponential number of constraints makes the computing complexity unacceptable. We derive a new LP-relaxation problem which has a small subset of constraints in Eq. (4). The optimal result of this new LP-relaxation problem also leads to the 3-approximation algorithm to be developed in Section  4.3. Because this new problem is built by iteratively adding constraints based on checking certain property of its solution, we call it Conditional LP-relaxation problem (CND-LPP).

Before developing our algorithm for building CND-LPP, we introduce a property of the solutions that satisfy Eq. (4). Given start time 
                           
                              
                                 S
                              
                              
                                 u
                              
                           
                         of task 
                           u
                        , let 
                           
                              
                                 M
                              
                              
                                 u
                              
                           
                           =
                           
                              
                                 S
                              
                              
                                 u
                              
                           
                           +
                           
                              
                                 1
                              
                              
                                 2
                              
                           
                           
                              
                                 p
                              
                              
                                 u
                              
                           
                         be middle finish time of task 
                           u
                        . The property is described as follows: 
                           Property 1
                           
                              Given 
                              
                                 S
                               
                              satisfying Eq.   (4)
                              , we sort tasks in non-descending order of their middle finish times. We use a permutation 
                              
                                 π
                               
                              to represent the sorting result, where 
                              
                                 
                                    
                                       M
                                    
                                    
                                       π
                                       
                                          (
                                          1
                                          )
                                       
                                    
                                 
                                 ≤
                                 
                                    
                                       M
                                    
                                    
                                       π
                                       
                                          (
                                          2
                                          )
                                       
                                    
                                 
                                 ≤
                                 ⋯
                                 ≤
                                 
                                    
                                       M
                                    
                                    
                                       π
                                       
                                          (
                                          
                                             |
                                             T
                                             |
                                          
                                          )
                                       
                                    
                                 
                              
                              . We have following inequation for all 
                              
                                 i
                                 ∈
                                 
                                    [
                                    2
                                    …
                                    
                                       |
                                       T
                                       |
                                    
                                    ]
                                 
                              
                              :
                              
                                 
                                    (5)
                                    
                                       
                                          
                                             1
                                          
                                          
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       ≤
                                       2
                                       
                                          
                                             M
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           


                        
                           Proof
                           For a given permutation 
                                 π
                               and task 
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                              , we create a task set 
                                 B
                                 =
                                 
                                    {
                                    π
                                    
                                       (
                                       1
                                       )
                                    
                                    ,
                                    π
                                    
                                       (
                                       2
                                       )
                                    
                                    ,
                                    …
                                    ,
                                    π
                                    
                                       (
                                       i
                                       −
                                       1
                                       )
                                    
                                    }
                                 
                              . We rewrite Eq. (4) as: 
                                 
                                    (6)
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       
                                          (
                                          
                                             
                                                M
                                             
                                             
                                                π
                                                
                                                   (
                                                   k
                                                   )
                                                
                                             
                                          
                                          −
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      π
                                                      
                                                         (
                                                         k
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             2
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   
                                                      i
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      π
                                                      
                                                         (
                                                         k
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       −
                                       
                                          
                                             1
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       .
                                    
                                 
                               Then we have 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       
                                          
                                             M
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             2
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   
                                                      i
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      π
                                                      
                                                         (
                                                         k
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       .
                                    
                                 
                               Because 
                                 
                                    
                                       M
                                    
                                    
                                       π
                                       
                                          (
                                          1
                                          )
                                       
                                    
                                 
                                 ≤
                                 
                                    
                                       M
                                    
                                    
                                       π
                                       
                                          (
                                          2
                                          )
                                       
                                    
                                 
                                 ≤
                                 ⋯
                                 ≤
                                 
                                    
                                       M
                                    
                                    
                                       π
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                 
                              , we have: 
                                 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       ≥
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       
                                          
                                             M
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             2
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   
                                                      i
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      π
                                                      
                                                         (
                                                         k
                                                         )
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       .
                                    
                                 
                              
                           

Finally, we have Eq. (5) by eliminating 
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       i
                                       −
                                       1
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       π
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                 
                              .□

Given a solution of CLS-LPP, if we schedule tasks in non-descending order of their middle finish time, Property 1 gives us a basic relation between the total processing time of previous scheduled tasks and the middle finish time of the unscheduled tasks. We will use this property to prove the theoretical bound of our algorithm MarS. Note that this property holds for any solution satisfying constraints in Eq. (4). If we can build a CND-LPP whose optimal solution also has this property, MarS has the same theoretical bound based on this CND-LPP.

Recall that the intuition behind Eq. (4) is to describe a polyhedron where the task start times of a feasible schedule lie in. We denote this polyhedron as 
                           
                              
                                 P
                              
                              
                                 L
                              
                           
                        . Given a specific CLS-LPP, its constraints define a polyhedron, denoted as 
                           
                              
                                 P
                              
                              
                                 
                                    CLS
                                 
                              
                           
                        . All precedence constraints in Eqs. (1)–(3) define another polyhedron, denoted as 
                           
                              
                                 P
                              
                              
                                 
                                    PC
                                 
                              
                           
                        . We know that 
                           
                              
                                 P
                              
                              
                                 
                                    CLS
                                 
                              
                           
                           =
                           
                              
                                 P
                              
                              
                                 L
                              
                           
                           ∩
                           
                              
                                 P
                              
                              
                                 
                                    PC
                                 
                              
                           
                         (see Fig. 3
                        ). Objective function of the problem defines a hyperplane. Solving CLS-LPP is searching for a point in 
                           
                              
                                 P
                              
                              
                                 
                                    CLS
                                 
                              
                           
                         which has the smallest distance to this hyperplane. Instead of finding the optimal point in 
                           
                              
                                 P
                              
                              
                                 
                                    CLS
                                 
                              
                           
                         (point 
                           A
                         in Fig. 3), we search a solution in 
                           
                              
                                 P
                              
                              
                                 
                                    PC
                                 
                              
                           
                         (point 
                           B
                         in Fig. 3) which has Property 1. We start with an initial CND-LPP which only contains all precedence constraints in Eqs. (1)–(3). By iteratively adding fine chosen constraints in Eq. (4), we approach the desirable solution.

To check whether an optimal solution satisfies Property 1, we can check whether constraints in Eq. (6) are satisfied by this optimal solution for every task 
                           π
                           
                              (
                              i
                              )
                           
                        . We formally define these constraints as follows: 
                           Definition
                           Performance Guarantee Constraint for given 
                                 π
                               and index 
                                 i
                              , denoted as 
                                 
                                    PGC
                                 
                                 
                                    (
                                    π
                                    ,
                                    i
                                    )
                                 
                              , is defined as follows: 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       
                                          
                                             S
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       ≥
                                       R
                                       
                                          (
                                          π
                                          ,
                                          i
                                          )
                                       
                                    
                                 
                               where 
                                 R
                                 
                                    (
                                    π
                                    ,
                                    i
                                    )
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                       
                                          |
                                          M
                                          |
                                       
                                    
                                 
                                 
                                    
                                       
                                          (
                                          
                                             
                                                ∑
                                             
                                             
                                                k
                                                =
                                                1
                                             
                                             
                                                i
                                                −
                                                1
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                π
                                                
                                                   (
                                                   k
                                                   )
                                                
                                             
                                          
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                                 −
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       i
                                       −
                                       1
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       π
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                              .

We first describe the main process of our constraint generation algorithm (COGE) (see Algorithm 1). First we build an initial CND-LPP. In this initial CND-LPP, all precedence constraints in Eqs. (1)–(3) are included. Its objective function is same as MSJO. Then, there are 3 main steps. In step 1, we solve CND-LPP and get an optimal solution 
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              ,
                              
                                 
                                    C
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              )
                           
                         for current CND-LPP. In step 2, we use 
                           
                              
                                 S
                              
                              
                                 
                                    LP
                                 
                              
                           
                         to produce 
                           π
                         and build PGCs based on 
                           π
                        . In step 3, we check whether 
                           
                              
                                 S
                              
                              
                                 
                                    LP
                                 
                              
                           
                         satisfies 
                           
                              PGC
                           
                           
                              (
                              π
                              ,
                              i
                              )
                           
                         for 
                           ∀
                           i
                           ∈
                           
                              [
                              1
                              …
                              
                                 |
                                 T
                                 |
                              
                              ]
                           
                        . If 
                           
                              
                                 S
                              
                              
                                 
                                    LP
                                 
                              
                           
                         satisfies all PGCs, we are done. Otherwise, we add the violated PGCs to CND-LPP and repeat steps 1–3 until we produce an optimal solution that satisfies all PGCs.

Because finding an optimal solution satisfying all PGCs may still involve large computation complexity in large problems, given a threshold 
                           ϵ
                         we can terminate computation if current solution 
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              ,
                              
                                 
                                    C
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              )
                           
                         is within 
                           
                              (
                              1
                              −
                              ϵ
                              )
                           
                         of optimal solution satisfying all PGCs. Unfortunately, optimal solution is hard to compute. Instead, we construct a feasible solution 
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    
                                       NV
                                    
                                 
                              
                              ,
                              
                                 
                                    C
                                 
                                 
                                    
                                       NV
                                    
                                 
                              
                              )
                           
                         which satisfies all PGCs (
                           
                              NV
                           
                         means no-violation). When 
                           
                              PGC
                           
                           
                              (
                              π
                              ,
                              i
                              )
                           
                         is not satisfied, we calculate an offset which indicates how much 
                           
                              
                                 S
                              
                              
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                         should increase to satisfy 
                           
                              PGC
                           
                           
                              (
                              π
                              ,
                              i
                              )
                           
                        . Function 
                           
                              ViolationOffset
                           
                           
                              (
                              
                                 PGC
                              
                              
                                 (
                                 π
                                 ,
                                 i
                                 )
                              
                              ,
                              
                                 
                                    S
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              )
                           
                         calculates this offset as follows: 
                           
                              
                                 offset
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                −
                                                1
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    (
                                    R
                                    
                                       (
                                       π
                                       ,
                                       i
                                       )
                                    
                                    −
                                    
                                       
                                          ∑
                                       
                                       
                                          k
                                          =
                                          1
                                       
                                       
                                          i
                                          −
                                          1
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          π
                                          
                                             (
                                             k
                                             )
                                          
                                       
                                    
                                    
                                       
                                          S
                                       
                                       
                                          π
                                          
                                             (
                                             k
                                             )
                                          
                                       
                                       
                                          
                                             LP
                                          
                                       
                                    
                                    )
                                 
                                 .
                              
                           
                         Thus, we can build a feasible solution by adding this offset to 
                           
                              
                                 S
                              
                              
                                 π
                                 
                                    (
                                    k
                                    )
                                 
                              
                              
                                 
                                    NV
                                 
                              
                           
                         for 
                           k
                           ∈
                           
                              [
                              i
                              −
                              1
                              …
                              
                                 |
                                 T
                                 |
                              
                              ]
                           
                        . Finally, after all PGCs are checked, we check whether 
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              ,
                              
                                 
                                    C
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              )
                           
                         reaches the stop threshold. COGE is a heuristic-based solution for the LP-relaxed problem. In practice, COGE can produce satisfactory result in less than 10 iterations.


                        
                           
                              
                           
                        
                     

In this section, we describe MarS. MarS is a heuristic algorithm which derives feasible schedule result from the optimal solution of the linear relaxation problem. Let 
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              ,
                              
                                 
                                    C
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              )
                           
                         denote the optimal result of our LP relaxation problem. Let 
                           
                              
                                 M
                              
                              
                                 u
                              
                              
                                 
                                    LP
                                 
                              
                           
                         denote the middle finish time of task 
                           u
                         in the LP optimal result. We have 
                           
                              
                                 M
                              
                              
                                 u
                              
                              
                                 
                                    LP
                                 
                              
                           
                           =
                           
                              
                                 S
                              
                              
                                 u
                              
                              
                                 
                                    LP
                                 
                              
                           
                           +
                           
                              
                                 p
                              
                              
                                 u
                              
                           
                           /
                           2
                        , 
                           ∀
                           u
                           ∈
                           T
                        . Let 
                           
                              
                                 S
                              
                              
                                 H
                              
                           
                         be set of task start times in final schedule result.

Our algorithm MarS is shown in Algorithm 2. We first produce 
                           π
                         based on 
                           
                              
                                 S
                              
                              
                                 
                                    LP
                                 
                              
                           
                        . Then we schedule tasks from 
                           π
                           
                              (
                              1
                              )
                           
                         to 
                           π
                           
                              (
                              
                                 |
                                 T
                                 |
                              
                              )
                           
                        , meaning we schedule tasks in non-descending order of their middle finish time. In each iteration 
                           i
                        , we first check the earliest possible start time 
                           
                              
                                 S
                              
                              
                                 
                                    earliest
                                 
                              
                           
                         of task 
                           π
                           
                              (
                              i
                              )
                           
                         to make sure that precedence constraints are satisfied. Then we choose a machine 
                           
                              
                                 m
                              
                              
                                 ∗
                              
                           
                         which has the earliest idle time among all machines. We schedule 
                           π
                           
                              (
                              i
                              )
                           
                         to machine 
                           
                              
                                 m
                              
                              
                                 ∗
                              
                           
                         with start time 
                           max
                           
                              {
                              
                                 
                                    S
                                 
                                 
                                    
                                       earliest
                                    
                                 
                              
                              ,
                              
                                 
                                    e
                                 
                                 
                                    
                                       
                                          m
                                       
                                       
                                          ∗
                                       
                                    
                                 
                              
                              }
                           
                         and update 
                           
                              
                                 e
                              
                              
                                 
                                    
                                       m
                                    
                                    
                                       ∗
                                    
                                 
                              
                           
                         as finish time of 
                           π
                           
                              (
                              i
                              )
                           
                        .

Because MarS schedules tasks in non-descending order of their middle finish times, Property 1 gives us a basic relation between the total processing time of previous scheduled tasks and middle finish time of unscheduled tasks. When release time constraints and precedence constraints exist, there may be idle time intervals between tasks. Thus, we introduce Lemma 2 to give an upper bound to the total length of these intervals. 
                           Lemma 2
                           
                              Given schedule result after tasks 
                              
                                 π
                                 
                                    (
                                    k
                                    )
                                 
                              
                              , 
                              
                                 k
                                 ∈
                                 
                                    [
                                    1
                                    …
                                    
                                       (
                                       i
                                       −
                                       1
                                       )
                                    
                                    ]
                                 
                              
                              , are scheduled by MarS, if we choose any machine 
                              
                                 m
                               
                              and start 
                              
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                               
                              as soon as possible after machine 
                              
                                 m
                               
                              is idle, it results in a start time 
                              
                                 
                                    
                                       S
                                    
                                    
                                       π
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                    
                                       H
                                    
                                 
                               
                              for 
                              
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                              
                              . Let 
                              
                                 g
                                 
                                    (
                                    m
                                    ,
                                    π
                                    
                                       (
                                       i
                                       )
                                    
                                    )
                                 
                               
                              be total length of idle time interval on machine 
                              
                                 m
                               
                              before 
                              
                                 
                                    
                                       S
                                    
                                    
                                       π
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                    
                                       H
                                    
                                 
                              
                              . We have:
                              
                                 
                                    (7)
                                    
                                       g
                                       
                                          (
                                          m
                                          ,
                                          π
                                          
                                             (
                                             i
                                             )
                                          
                                          )
                                       
                                       ≤
                                       
                                          
                                             M
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           


                        
                           Proof
                           We outline our idea first. In our schedule result, there is an idle time interval before a task because this task cannot start earlier due to certain precedence constraints. These constraints are tight in our schedule result but may not be tight in LP optimal result. For example, there is an idle time interval between tasks 
                                 
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                               and 
                                 
                                    
                                       v
                                    
                                    
                                       3
                                    
                                 
                               in Fig. 4
                               because 
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       H
                                    
                                 
                                 =
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                    
                                    
                                       H
                                    
                                 
                                 +
                                 
                                    
                                       d
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             u
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                              . Otherwise, task 
                                 
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                               can start earlier. However, we only know 
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                                 ≥
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                                 +
                                 
                                    
                                       d
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                       
                                          
                                             u
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                              . Our idea is to prove 
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       H
                                    
                                 
                                 −
                                 
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          
                                             
                                                v
                                             
                                             
                                                3
                                             
                                          
                                       
                                       
                                          H
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          
                                             
                                                v
                                             
                                             
                                                3
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ≤
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                                 −
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             v
                                          
                                          
                                             3
                                          
                                       
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                               by analyzing these tight precedence constraints in our schedule result. The left part of this inequation is maximum length of idle time interval between 
                                 
                                    
                                       v
                                    
                                    
                                       3
                                    
                                 
                               and 
                                 
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                              . We iteratively develop similar inequations for idle time intervals before task 
                                 
                                    
                                       v
                                    
                                    
                                       3
                                    
                                 
                              . Sum up both sides of these inequations, we have Eq. (7).

Next, we start our formal proof. For a scheduling problem, we can build a precedence graph 
                                 G
                                 =
                                 
                                    (
                                    V
                                    ,
                                    L
                                    )
                                 
                               to describe all precedence constraints with delay. 
                                 V
                               is the set of tasks. For two tasks 
                                 u
                               and 
                                 v
                              , directed link 
                                 
                                    (
                                    u
                                    ,
                                    v
                                    )
                                 
                                 ∈
                                 L
                               with length 
                                 
                                    
                                       d
                                    
                                    
                                       u
                                       v
                                    
                                 
                               indicates that execution of 
                                 v
                               at least waits for a time interval 
                                 
                                    
                                       d
                                    
                                    
                                       u
                                       v
                                    
                                 
                               after 
                                 u
                               finishes. For our problem, we introduce a dummy initial task 
                                 
                                    
                                       t
                                    
                                    
                                       I
                                    
                                 
                               to represent the start point of the schedule. Then, constraints 
                                 
                                    
                                       S
                                    
                                    
                                       u
                                    
                                 
                                 ≥
                                 
                                    
                                       r
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                 ∀
                                 u
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                    
                                       
                                          (
                                          M
                                          )
                                       
                                    
                                 
                               in Eq. (1) can be expressed in the form of precedence constraint with delay: 
                                 
                                    
                                       S
                                    
                                    
                                       u
                                    
                                 
                                 ≥
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             I
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       d
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             I
                                          
                                       
                                       u
                                    
                                 
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             I
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 ∀
                                 u
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                    
                                       
                                          (
                                          M
                                          )
                                       
                                    
                                 
                               where 
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             I
                                          
                                       
                                    
                                 
                                 =
                                 0
                                 ,
                                 
                                    
                                       d
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             I
                                          
                                       
                                       u
                                    
                                 
                                 =
                                 
                                    
                                       r
                                    
                                    
                                       j
                                    
                                 
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             I
                                          
                                       
                                    
                                 
                                 =
                                 0
                              . In remaining part of this proof, we only mention precedence constraint with delay.

Given a schedule result, delay between 
                                 u
                               and 
                                 v
                               may be longer than 
                                 
                                    
                                       d
                                    
                                    
                                       u
                                       v
                                    
                                 
                              . We say a link 
                                 
                                    (
                                    u
                                    ,
                                    v
                                    )
                                 
                                 ∈
                                 L
                               is tight in this schedule result if 
                                 
                                    
                                       S
                                    
                                    
                                       v
                                    
                                    
                                       H
                                    
                                 
                                 =
                                 
                                    
                                       S
                                    
                                    
                                       u
                                    
                                    
                                       H
                                    
                                 
                                 +
                                 
                                    
                                       d
                                    
                                    
                                       u
                                       v
                                    
                                 
                                 +
                                 
                                    
                                       p
                                    
                                    
                                       u
                                    
                                 
                              . In a schedule result, there may be a tight-link path 
                              
                                 
                                    {
                                    
                                       
                                          u
                                       
                                       
                                          1
                                       
                                    
                                    →
                                    
                                       
                                          u
                                       
                                       
                                          2
                                       
                                    
                                    →
                                    ⋯
                                    →
                                    
                                       
                                          u
                                       
                                       
                                          s
                                       
                                    
                                    }
                                 
                               where link 
                                 
                                    (
                                    
                                       
                                          u
                                       
                                       
                                          k
                                       
                                    
                                    ,
                                    
                                       
                                          u
                                       
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                    )
                                 
                                 ∈
                                 L
                               is tight for all 
                                 k
                                 ∈
                                 
                                    [
                                    1
                                    …
                                    s
                                    −
                                    1
                                    ]
                                 
                                 ,
                                 s
                                 ≥
                                 2
                              . Fig. 4 demonstrates a three-node tight-link path in a schedule result. If 
                                 
                                    
                                       u
                                    
                                    
                                       s
                                    
                                 
                                 =
                                 u
                              , we call 
                                 
                                    {
                                    
                                       
                                          u
                                       
                                       
                                          1
                                       
                                    
                                    →
                                    
                                       
                                          u
                                       
                                       
                                          2
                                       
                                    
                                    →
                                    ⋯
                                    →
                                    
                                       
                                          u
                                       
                                       
                                          s
                                       
                                    
                                    }
                                 
                               
                              a tight-link path of task 
                              
                                 u
                              . Among all tight-link paths of task 
                                 u
                              , there is a tight-link path which has the maximal number of nodes. We call it the longest tight-link path of task 
                              
                                 u
                              , denoted as 
                                 
                                    LTLP
                                 
                                 
                                    (
                                    u
                                    )
                                 
                              . In our problem, for a map task 
                                 u
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                    
                                       
                                          (
                                          M
                                          )
                                       
                                    
                                 
                              , 
                                 
                                    LTLP
                                 
                                 
                                    (
                                    u
                                    )
                                 
                               can be empty or 
                                 
                                    LTLP
                                 
                                 1
                                 =
                                 
                                    {
                                    
                                       
                                          t
                                       
                                       
                                          I
                                       
                                    
                                    →
                                    u
                                    }
                                 
                              . For a reduce task 
                                 v
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                    
                                       
                                          (
                                          R
                                          )
                                       
                                    
                                 
                              , 
                                 
                                    LTLP
                                 
                                 
                                    (
                                    v
                                    )
                                 
                               can be 
                                 
                                    LTLP
                                 
                                 2
                                 =
                                 
                                    {
                                    
                                       
                                          t
                                       
                                       
                                          I
                                       
                                    
                                    →
                                    u
                                    →
                                    v
                                    }
                                 
                               or 
                                 
                                    LTLP
                                 
                                 3
                                 =
                                 
                                    {
                                    u
                                    →
                                    v
                                    }
                                 
                               where 
                                 u
                                 ∈
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                    
                                       
                                          (
                                          M
                                          )
                                       
                                    
                                 
                              .

For a tight link 
                                 
                                    (
                                    u
                                    ,
                                    v
                                    )
                                 
                              , the following inequation holds for the optimal result of LP relaxation problem because precedence constraints are satisfied: 
                                 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             v
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       ≥
                                       
                                          
                                             S
                                          
                                          
                                             u
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       +
                                       
                                          
                                             d
                                          
                                          
                                             u
                                             v
                                          
                                       
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       .
                                    
                                 
                               Then we have: 
                                 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             v
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       ≥
                                       
                                          
                                             M
                                          
                                          
                                             u
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       +
                                       
                                          
                                             d
                                          
                                          
                                             u
                                             v
                                          
                                       
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       +
                                       
                                          
                                             1
                                          
                                          
                                             2
                                          
                                       
                                       
                                          (
                                          
                                             
                                                p
                                             
                                             
                                                v
                                             
                                          
                                          −
                                          
                                             
                                                p
                                             
                                             
                                                u
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                              
                           

For a tight-link path 
                                 
                                    {
                                    
                                       
                                          u
                                       
                                       
                                          1
                                       
                                    
                                    →
                                    
                                       
                                          u
                                       
                                       
                                          2
                                       
                                    
                                    →
                                    ⋯
                                    →
                                    
                                       
                                          u
                                       
                                       
                                          s
                                       
                                    
                                    }
                                 
                              , we have: 
                                 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   s
                                                
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       ≥
                                       
                                          
                                             M
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             s
                                             −
                                             1
                                          
                                       
                                       
                                          (
                                          
                                             
                                                d
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                   
                                                
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                p
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       +
                                       
                                          
                                             1
                                          
                                          
                                             2
                                          
                                       
                                       
                                          (
                                          
                                             
                                                p
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      s
                                                   
                                                
                                             
                                          
                                          −
                                          
                                             
                                                p
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                              
                           

For 
                                 
                                    LTLP
                                 
                                 1
                              , 
                                 
                                    LTLP
                                 
                                 2
                               and 
                                 
                                    LTLP
                                 
                                 3
                              , we always have 
                                 
                                    
                                       p
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             s
                                          
                                       
                                    
                                 
                                 ≥
                                 
                                    
                                       p
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                               because in a specific job, processing times of its reduce tasks are longer than that of its map tasks. Then we have: 
                                 
                                    (8)
                                    
                                       
                                          
                                             M
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   s
                                                
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       ≥
                                       
                                          
                                             M
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             s
                                             −
                                             1
                                          
                                       
                                       
                                          (
                                          
                                             
                                                d
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                   
                                                
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                p
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                               Because all links in a tight link path are tight, we also have: 
                                 
                                    (9)
                                    
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   s
                                                
                                             
                                          
                                          
                                             H
                                          
                                       
                                       −
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   1
                                                
                                             
                                          
                                          
                                             H
                                          
                                       
                                       =
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             s
                                             −
                                             1
                                          
                                       
                                       
                                          (
                                          
                                             
                                                d
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                   
                                                
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                p
                                             
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                              
                           

Based on Eqs. (8) and (9), we analyze lengths of idle time intervals on machine 
                                 m
                              . After scheduling 
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                               to machine 
                                 h
                              , there are idle time intervals before 
                                 
                                    
                                       S
                                    
                                    
                                       π
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                    
                                       H
                                    
                                 
                              . Considering a task 
                                 
                                    
                                       u
                                    
                                    
                                       ˆ
                                    
                                 
                               right after a idle time interval, we find 
                                 
                                    LTLP
                                 
                                 
                                    (
                                    
                                       
                                          u
                                       
                                       
                                          ˆ
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          u
                                       
                                       
                                          1
                                       
                                    
                                    →
                                    
                                       
                                          u
                                       
                                       
                                          2
                                       
                                    
                                    →
                                    ⋯
                                    →
                                    
                                       
                                          u
                                       
                                       
                                          s
                                       
                                    
                                    }
                                 
                              . Because 
                                 
                                    
                                       u
                                    
                                    
                                       1
                                    
                                 
                               is the first task in 
                                 
                                    LTLP
                                 
                                 
                                    (
                                    
                                       
                                          u
                                       
                                       
                                          s
                                       
                                    
                                    )
                                 
                              , there must be a task 
                                 
                                    
                                       v
                                    
                                    
                                       ˆ
                                    
                                 
                               scheduled on machine 
                                 m
                               where 
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             v
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                 
                                 ≤
                                 
                                    
                                       S
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 ≤
                                 
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          
                                             
                                                v
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          
                                             
                                                v
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                    
                                    )
                                 
                               (see task 
                                 
                                    
                                       v
                                    
                                    
                                       3
                                    
                                 
                               in Fig. 4) and 
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             v
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                                 ≤
                                 
                                    
                                       M
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             1
                                          
                                       
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                              . Otherwise, 
                                 
                                    
                                       u
                                    
                                    
                                       1
                                    
                                 
                               can start earlier. With Eqs. (8) and (9), we have: 
                                 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   s
                                                
                                             
                                          
                                       
                                       −
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                p
                                             
                                             
                                                
                                                   
                                                      v
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                             
                                          
                                          )
                                       
                                       ≤
                                       
                                          
                                             M
                                          
                                          
                                             
                                                
                                                   u
                                                
                                                
                                                   s
                                                
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       −
                                       
                                          
                                             M
                                          
                                          
                                             
                                                
                                                   v
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       .
                                    
                                 
                               The left side of this inequation is the maximum length of idle time interval between 
                                 
                                    
                                       u
                                    
                                    
                                       ˆ
                                    
                                 
                               and 
                                 
                                    
                                       v
                                    
                                    
                                       ˆ
                                    
                                 
                              . We repeat developing this inequation for idle time interval before 
                                 
                                    
                                       v
                                    
                                    
                                       ˆ
                                    
                                 
                              . Finally, we end up with 
                                 
                                    
                                       t
                                    
                                    
                                       I
                                    
                                 
                               whose middle finish time is 0. By adding all these inequations together, we have Eq. (7).□


                        Lemma 2 gives an upper bound for total idle time intervals in the scheduling of task 
                           π
                           
                              (
                              i
                              )
                           
                        . Note that, this result only holds when tasks from 
                           π
                           
                              (
                              1
                              )
                           
                         to 
                           π
                           
                              (
                              i
                              −
                              1
                              )
                           
                         are scheduled according to MarS. Next, we introduce Theorem 3.


                        
                           
                              
                           
                        
                     


                        
                           Theorem 3
                           
                              MarS is a  3-approximation algorithm for MSJO.
                           


                        
                           Proof
                           Consider 
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                               is scheduled to machine 
                                 m
                              . Let 
                                 U
                                 
                                    (
                                    m
                                    ,
                                    π
                                    
                                       (
                                       i
                                       )
                                    
                                    )
                                 
                               be set of tasks scheduled to machine 
                                 m
                               before 
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                              . Combine Eqs. (5) and (7), we have: 
                                 
                                    
                                       
                                          
                                             1
                                          
                                          
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             i
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                       +
                                       g
                                       
                                          (
                                          m
                                          ,
                                          π
                                          
                                             (
                                             i
                                             )
                                          
                                          )
                                       
                                       ≤
                                       3
                                       
                                          
                                             M
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       .
                                    
                                 
                              
                           

In our algorithm, we choose machine to start task 
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                               as early as possible, so we have: 
                                 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                          
                                             H
                                          
                                       
                                       ≤
                                       
                                          
                                             ∑
                                          
                                          
                                             u
                                             ∈
                                             U
                                             
                                                (
                                                m
                                                ,
                                                π
                                                
                                                   (
                                                   i
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       +
                                       g
                                       
                                          (
                                          m
                                          ,
                                          π
                                          
                                             (
                                             i
                                             )
                                          
                                          )
                                       
                                       ,
                                       
                                       ∀
                                       m
                                       ∈
                                       M
                                       .
                                    
                                 
                               There must exist a machine 
                                 
                                    
                                       m
                                    
                                    
                                       ˆ
                                    
                                 
                               where 
                                 
                                    
                                       ∑
                                    
                                    
                                       u
                                       ∈
                                       U
                                       
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                ˆ
                                             
                                          
                                          ,
                                          π
                                          
                                             (
                                             i
                                             )
                                          
                                          )
                                       
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       u
                                    
                                 
                                 ≤
                                 
                                    
                                       1
                                    
                                    
                                       
                                          |
                                          M
                                          |
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       i
                                       −
                                       1
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       π
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                 
                              . Then, 
                                 
                                    
                                       S
                                    
                                    
                                       π
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                    
                                       H
                                    
                                 
                                 ≤
                                 3
                                 
                                    
                                       M
                                    
                                    
                                       π
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                               and we have: 
                                 
                                    (10)
                                    
                                       
                                          
                                             S
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                          
                                             H
                                          
                                       
                                       +
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                       
                                       ≤
                                       3
                                       
                                          
                                             M
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       +
                                       
                                          
                                             3
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             π
                                             
                                                (
                                                i
                                                )
                                             
                                          
                                       
                                       =
                                       3
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                π
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             
                                                
                                                   LP
                                                
                                             
                                          
                                          +
                                          
                                             
                                                p
                                             
                                             
                                                π
                                                
                                                   (
                                                   i
                                                   )
                                                
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                               Eq. (10) holds for all task 
                                 π
                                 
                                    (
                                    i
                                    )
                                 
                              , 
                                 i
                                 ∈
                                 
                                    [
                                    1
                                    …
                                    
                                       |
                                       T
                                       |
                                    
                                    ]
                                 
                              , then 
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                    
                                       H
                                    
                                 
                                 ≤
                                 3
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                                 ,
                                 
                                 ∀
                                 j
                                 ∈
                                 J
                              . Finally, we have: 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             J
                                          
                                       
                                       
                                          
                                             w
                                          
                                          
                                             j
                                          
                                       
                                       
                                          
                                             C
                                          
                                          
                                             j
                                          
                                          
                                             H
                                          
                                       
                                       ≤
                                       3
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             J
                                          
                                       
                                       
                                          
                                             w
                                          
                                          
                                             j
                                          
                                       
                                       
                                          
                                             C
                                          
                                          
                                             j
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       .
                                    
                                 
                               Because 
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       j
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                               is a lower bound of the optimal, MarS is a 3-approximation algorithm for MSJO.□

In this section, we propose a fine-grained task-level MapReduce scheduler, that means our optimization objective is to minimize 
                           
                              
                                 ∑
                              
                              
                                 u
                                 ∈
                                 T
                              
                           
                           
                              
                                 
                                    
                                       w
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 u
                              
                           
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 u
                              
                           
                         (
                           
                              
                                 
                                    
                                       w
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 u
                              
                           
                         denotes the weight of task 
                           u
                         and 
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 u
                              
                           
                         denotes the completion time of task 
                           u
                        , note that 
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 u
                              
                           
                           =
                           
                              
                                 S
                              
                              
                                 u
                              
                           
                           +
                           
                              
                                 p
                              
                              
                                 u
                              
                           
                        ). Generally, instead of considering the coarse-grained submission time of a job, we assume every task has a release time and let 
                           
                              
                                 
                                    
                                       r
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 u
                              
                           
                         denote the release time of task 
                           u
                        , which indicates the earliest time that the task can be scheduled. We can rewrite the LP model as follows: 
                           
                              
                                 min
                                 
                                    
                                       ∑
                                    
                                    
                                       u
                                       ∈
                                       T
                                    
                                 
                                 
                                    
                                       
                                          
                                             w
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       u
                                    
                                 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       u
                                    
                                 
                              
                           
                         s.t. 
                           
                              
                                 (11)
                                 
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          u
                                       
                                    
                                    ≥
                                    
                                       
                                          
                                             
                                                r
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          u
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          u
                                       
                                    
                                    ∀
                                    u
                                    ∈
                                    T
                                 
                              
                              
                                 (12)
                                 
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          v
                                       
                                    
                                    ≥
                                    
                                       
                                          
                                             
                                                C
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          u
                                       
                                    
                                    +
                                    
                                       
                                          p
                                       
                                       
                                          u
                                       
                                    
                                    ∀
                                    
                                       (
                                       u
                                       ,
                                       v
                                       )
                                    
                                    ∈
                                    L
                                    .
                                 
                              
                           
                         Apparently, according to the previous proof in Section  3.2, we can use the similar method to prove that it is also a NP-complete problem. For minimizing total weighted job completion time with precedence constraints, the best known work is an 8-approximation algorithm in  [8] without considering the impact of processors/machines assignment. Here, we develop a fast 7-approximation heuristic algorithm T-MarS.

Before developing our heuristic algorithm, we first adopt a linear programming relaxation of the NP-hard problem to give a lower bound on the optimal solution value, which are necessary conditions that task completion times in a feasible schedule result have to satisfy. The relaxation constraints are shown as follows: 
                           
                              (13)
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       u
                                       ∈
                                       B
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       u
                                    
                                 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       u
                                    
                                 
                                 ≥
                                 
                                    
                                       1
                                    
                                    
                                       2
                                       
                                          |
                                          M
                                          |
                                       
                                    
                                 
                                 
                                    (
                                    
                                       
                                          ∑
                                       
                                       
                                          u
                                          ∈
                                          B
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          u
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   ∑
                                                
                                                
                                                   u
                                                   ∈
                                                   B
                                                
                                             
                                             
                                                
                                                   p
                                                
                                                
                                                   u
                                                
                                             
                                             )
                                          
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                                 ∀
                                 B
                                 ⊆
                                 T
                              
                           
                         where 
                           
                              |
                              M
                              |
                           
                         is number of machines in 
                           M
                        , 
                           B
                         is any subset of 
                           T
                        . 
                           Proof
                           To prove Eq. (13) we give a brief explanation. Consider a subset 
                                 I
                                 ⊆
                                 T
                              , we sort tasks in non-descending order of their completion times. Let 
                                 I
                                 =
                                 
                                    {
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    u
                                    }
                                 
                              , then task 
                                 u
                               is the last task to be finished. Assume the performances of all the processors/machines are identical, if task 
                                 u
                               is scheduled on machine 
                                 
                                    
                                       m
                                    
                                    
                                       ∗
                                    
                                 
                                 
                                 
                                    (
                                    
                                       
                                          m
                                       
                                       
                                          ∗
                                       
                                    
                                    ∈
                                    M
                                    )
                                 
                              , then 
                                 
                                    
                                       m
                                    
                                    
                                       ∗
                                    
                                 
                               is the most heavily loaded machine. So the load on machine 
                                 
                                    
                                       m
                                    
                                    
                                       ∗
                                    
                                 
                               is at least 
                                 
                                    (
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 /
                                 
                                    |
                                    M
                                    |
                                 
                              , and 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       u
                                    
                                 
                                 ≥
                                 
                                    (
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 /
                                 
                                    |
                                    M
                                    |
                                 
                              , we have:
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             u
                                             ∈
                                             T
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             u
                                          
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             u
                                             ∈
                                             T
                                          
                                       
                                       
                                          (
                                          
                                             
                                                p
                                             
                                             
                                                u
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                ∈
                                                I
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                               Because 
                                 
                                    
                                       1
                                    
                                    
                                       
                                          |
                                          M
                                          |
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       u
                                       ∈
                                       T
                                    
                                 
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          u
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          |
                                          M
                                          |
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       u
                                       ∈
                                       T
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       ∈
                                       I
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       u
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                       
                                          |
                                          M
                                          |
                                       
                                    
                                 
                                 
                                    (
                                    
                                       
                                          ∑
                                       
                                       
                                          u
                                          ∈
                                          T
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          u
                                       
                                       
                                          2
                                       
                                    
                                    +
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   ∑
                                                
                                                
                                                   u
                                                   ∈
                                                   T
                                                
                                             
                                             
                                                
                                                   p
                                                
                                                
                                                   u
                                                
                                             
                                             )
                                          
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                              , then we have: 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             u
                                             ∈
                                             T
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             u
                                          
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             2
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          (
                                          
                                             
                                                ∑
                                             
                                             
                                                u
                                                ∈
                                                T
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                u
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   (
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         u
                                                         ∈
                                                         T
                                                      
                                                   
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         u
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       .
                                    
                                 
                               Therefore, when 
                                 B
                                 =
                                 T
                               Eq. (13) has been proved correct. Note that this argument can be extended to the general case, so when 
                                 B
                               is any subset of 
                                 T
                              , the formula is always workable.□

Next, we introduce a property of the solutions that satisfy Eq. (13). The property is described as follows: 
                           Property 2
                           
                              Given 
                              
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       
                                          |
                                          T
                                          |
                                       
                                    
                                 
                               
                              satisfying Eq.   (13)
                              , we sort tasks in non-descending order of their completion times, without loss of generality, assume 
                              
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       1
                                    
                                 
                                 ≤
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ≤
                                 ⋯
                                 ≤
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       
                                          |
                                          T
                                          |
                                       
                                    
                                 
                              
                              . Let 
                              
                                 B
                                 =
                                 
                                    {
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    i
                                    }
                                 
                               
                              and 
                              
                                 j
                                 ∈
                                 B
                              
                              , then we have:
                              
                                 
                                    (14)
                                    
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             2
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             B
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             j
                                          
                                       
                                       .
                                    
                                 
                              
                           


                        
                           Proof
                           Because 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       
                                          |
                                          T
                                          |
                                       
                                    
                                 
                               satisfy Eq. (13), we have: 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             B
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             j
                                          
                                       
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             j
                                          
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             2
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          (
                                          
                                             
                                                ∑
                                             
                                             
                                                j
                                                ∈
                                                B
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                j
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   (
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         j
                                                         ∈
                                                         B
                                                      
                                                   
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             2
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      ∈
                                                      B
                                                   
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       .
                                    
                                 
                               According to the hypothesis, task 
                                 j
                               is finished before task 
                                 i
                              , obviously, we have 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       j
                                    
                                 
                                 ≤
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                              , then 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             B
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             j
                                          
                                       
                                       ≥
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             ∈
                                             B
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             j
                                          
                                       
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             j
                                          
                                       
                                       ≥
                                       
                                          
                                             1
                                          
                                          
                                             2
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      ∈
                                                      B
                                                   
                                                
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                       .
                                    
                                 
                               Consequently, we have 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 ≥
                                 
                                    
                                       1
                                    
                                    
                                       2
                                       
                                          |
                                          M
                                          |
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       B
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                              .□

Let 
                           
                              (
                              
                                 
                                    S
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              ,
                              
                                 
                                    
                                       
                                          C
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    
                                       LP
                                    
                                 
                              
                              )
                           
                         denote the optimal result of our LP relaxation problem. Let 
                           
                              
                                 
                                    
                                       S
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 
                                    
                                       H
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                         be set of task start times in final schedule result. Our algorithm T-MarS is shown in Algorithm 3. First, we produce 
                           
                              
                                 π
                              
                              
                                 ˆ
                              
                           
                         based on 
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 
                                    LP
                                 
                              
                           
                        . Second, note that the upper bound on the length of any feasible scheduling without unforced idle time is 
                           
                              
                                 max
                              
                              
                                 u
                                 ∈
                                 T
                              
                           
                           
                              {
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    u
                                 
                              
                              }
                           
                           +
                           
                              
                                 ∑
                              
                              
                                 u
                                 ∈
                                 T
                              
                           
                           
                              
                                 p
                              
                              
                                 u
                              
                           
                        , we divide the time line into intervals: 
                           
                              [
                              1
                              ,
                              1
                              ]
                           
                           ,
                           
                              (
                              1
                              ,
                              2
                              ]
                           
                           ,
                           
                              (
                              2
                              ,
                              4
                              ]
                           
                           ,
                           …
                           ,
                           
                              (
                              
                                 
                                    2
                                 
                                 
                                    N
                                    −
                                    2
                                 
                              
                              ,
                              
                                 
                                    2
                                 
                                 
                                    N
                                    −
                                    1
                                 
                              
                              ]
                           
                        , where 
                           N
                         is the smallest integer such that 
                           
                              
                                 2
                              
                              
                                 N
                                 −
                                 1
                              
                           
                         is at least 
                           
                              
                                 max
                              
                              
                                 u
                                 ∈
                                 T
                              
                           
                           
                              {
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    u
                                 
                              
                              }
                           
                           +
                           
                              
                                 ∑
                              
                              
                                 u
                                 ∈
                                 T
                              
                           
                           
                              
                                 p
                              
                              
                                 u
                              
                           
                        . Let 
                           
                              
                                 t
                              
                              
                                 0
                              
                           
                           =
                           1
                         and 
                           
                              
                                 t
                              
                              
                                 n
                              
                           
                           =
                           
                              
                                 2
                              
                              
                                 n
                                 −
                                 1
                              
                           
                           ,
                           n
                           ∈
                           
                              [
                              1
                              ,
                              N
                              ]
                           
                        , we use 
                           
                              
                                 B
                              
                              
                                 n
                              
                           
                         to denote all the tasks which 
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 
                                    
                                       π
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    i
                                    )
                                 
                              
                              
                                 
                                    LP
                                 
                              
                           
                         lie in interval 
                           
                              (
                              
                                 
                                    t
                                 
                                 
                                    n
                                    −
                                    1
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    n
                                 
                              
                              ]
                           
                        , that means 
                           
                              
                                 t
                              
                              
                                 n
                                 −
                                 1
                              
                           
                           ≤
                           
                              
                                 
                                    
                                       C
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 
                                    
                                       π
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    i
                                    )
                                 
                              
                              
                                 
                                    LP
                                 
                              
                           
                           ≤
                           
                              
                                 t
                              
                              
                                 n
                              
                           
                        . Third, we define 
                           
                              
                                 α
                              
                              
                                 n
                              
                           
                         as the average load on a machine for all the tasks in 
                           
                              
                                 B
                              
                              
                                 n
                              
                           
                        , we have 
                           
                              
                                 α
                              
                              
                                 n
                              
                           
                           =
                           
                              (
                              
                                 
                                    ∑
                                 
                                 
                                    u
                                    ∈
                                    
                                       
                                          B
                                       
                                       
                                          n
                                       
                                    
                                 
                              
                              
                                 
                                    p
                                 
                                 
                                    u
                                 
                              
                              )
                           
                           /
                           
                              |
                              M
                              |
                           
                        . Let 
                           
                              
                                 t
                              
                              
                                 n
                              
                              
                                 ′
                              
                           
                           =
                           1
                           +
                           
                              
                                 ∑
                              
                              
                                 k
                                 =
                                 1
                              
                              
                                 n
                              
                           
                           
                              (
                              
                                 
                                    t
                                 
                                 
                                    k
                                 
                              
                              +
                              
                                 
                                    α
                                 
                                 
                                    k
                                 
                              
                              )
                           
                        , for any 
                           
                              
                                 B
                              
                              
                                 n
                              
                           
                           ,
                           n
                           ∈
                           
                              [
                              1
                              ,
                              N
                              ]
                           
                        , we schedule the tasks which belong to 
                           
                              
                                 B
                              
                              
                                 n
                              
                           
                         using Graham list-scheduling algorithm  [16] in the interval 
                           
                              (
                              
                                 
                                    t
                                 
                                 
                                    n
                                    −
                                    1
                                 
                                 
                                    ′
                                 
                              
                              ,
                              
                                 
                                    t
                                 
                                 
                                    n
                                 
                                 
                                    ′
                                 
                              
                              ]
                           
                        . The main idea of Graham algorithm can be stated as follows: All the tasks (without release times or release time are zero) are ordered in some list, whenever one machine becomes idle, the next available task (where a task is available if all its predecessors have been finished) on the list is allocated to start on the machine. Let 
                           
                              
                                 S
                              
                              
                                 j
                              
                              
                                 
                                    available
                                 
                              
                           
                         denote the start time of next available task 
                           j
                         and 
                           
                              pre
                           
                           
                              (
                              j
                              )
                           
                         be its precedence parent node.


                        
                           
                              
                           
                        
                     


                        
                           Lemma 4
                           
                              Let 
                              
                                 B
                               
                              be the tasks subset of 
                              
                                 T
                              
                              . We use Graham algorithm to schedule the tasks in 
                              
                                 B
                              
                              . Let 
                              
                                 Θ
                               
                              denote the set of tasks that form the longest chain of precedence-constrained tasks ending with the task that completes last in the schedule. Let 
                              
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                               
                              denote the maximum time length of the resulting scheduling, we have:
                              
                                 
                                    (15)
                                    
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             
                                                max
                                             
                                          
                                       
                                       ≤
                                       
                                          
                                             1
                                          
                                          
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             u
                                             ∈
                                             
                                                (
                                                B
                                                −
                                                Θ
                                                )
                                             
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             u
                                             ∈
                                             Θ
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       .
                                    
                                 
                              
                           

Obviously, we can use the pigeonhole principle to prove Lemma 4. Through the above description and analysis on Algorithm 3, we note that: (1) regularly dividing the time line different intervals can guarantee tasks scheduling relative independence; (2) in each interval scheduling the tasks using Graham algorithm can guarantee performance (a theoretical tight upper bound). Next, by applying both Property 2 and Lemma 4 we derive Theorem 5. 
                           Theorem 5
                           
                              T-MarS is a  7-approximation algorithm for minimizing total weighted task completion times.
                           


                        
                           Proof
                           We first show that Algorithm 3 can give a feasible scheduling result. Eq. (12) ensures that the precedence constraints are enforced, since for each task 
                                 i
                                 ∈
                                 
                                    
                                       B
                                    
                                    
                                       n
                                    
                                 
                              , each of its predecessors is assigned to 
                                 
                                    
                                       B
                                    
                                    
                                       k
                                    
                                 
                               for some 
                                 k
                                 ∈
                                 
                                    {
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    n
                                    }
                                 
                              . We also need to show that the schedule respects the release time constraints. For any 
                                 i
                                 ∈
                                 
                                    
                                       B
                                    
                                    
                                       n
                                    
                                 
                               and 
                                 n
                                 ∈
                                 
                                    {
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    N
                                    }
                                 
                              , we have: 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   r
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       ≤
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       ≤
                                       
                                          
                                             t
                                          
                                          
                                             n
                                          
                                       
                                       .
                                    
                                 
                               According to the definition of 
                                 
                                    
                                       t
                                    
                                    
                                       n
                                    
                                    
                                       ′
                                    
                                 
                               above, we can write 
                                 
                                    
                                       
                                          
                                             t
                                          
                                          
                                             n
                                             −
                                             1
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       1
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             n
                                             −
                                             1
                                          
                                       
                                       
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                k
                                             
                                          
                                          +
                                          
                                             
                                                α
                                             
                                             
                                                k
                                             
                                          
                                          )
                                       
                                       ≥
                                       1
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             n
                                             −
                                             1
                                          
                                       
                                       
                                          
                                             t
                                          
                                          
                                             k
                                          
                                       
                                       =
                                       
                                          
                                             t
                                          
                                          
                                             n
                                          
                                       
                                       .
                                    
                                 
                               Hence 
                                 
                                    
                                       
                                          
                                             r
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 ≤
                                 
                                    
                                       t
                                    
                                    
                                       n
                                       −
                                       1
                                    
                                    
                                       ′
                                    
                                 
                              , it means that the scheduling rule in each interval 
                                 
                                    (
                                    
                                       
                                          t
                                       
                                       
                                          n
                                          −
                                          1
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          t
                                       
                                       
                                          n
                                       
                                       
                                          ′
                                       
                                    
                                    ]
                                 
                               reduces to the case without release times. According to Lemma 4, it implies that the length of the schedule constructed for 
                                 
                                    
                                       B
                                    
                                    
                                       n
                                    
                                 
                               can be bounded by the average load on each machine, plus the maximum length of any precedence chain. The average load in any interval is exactly 
                                 
                                    
                                       α
                                    
                                    
                                       n
                                    
                                 
                              . Let 
                                 
                                    
                                       β
                                    
                                    
                                       i
                                    
                                 
                               denote the maximum length of a chain that ends with task 
                                 i
                              . Obviously, 
                                 
                                    
                                       β
                                    
                                    
                                       i
                                    
                                 
                               is at most 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                              , that means 
                                 
                                    
                                       β
                                    
                                    
                                       i
                                    
                                 
                                 ≤
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                              . Therefore, 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                
                                                   H
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                       ≤
                                       
                                          
                                             t
                                          
                                          
                                             n
                                             −
                                             1
                                          
                                          
                                             ′
                                          
                                       
                                       +
                                       
                                          
                                             α
                                          
                                          
                                             n
                                          
                                       
                                       +
                                       
                                          
                                             β
                                          
                                          
                                             i
                                          
                                       
                                       =
                                       1
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             n
                                             −
                                             1
                                          
                                       
                                       
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                k
                                             
                                          
                                          +
                                          
                                             
                                                α
                                             
                                             
                                                k
                                             
                                          
                                          )
                                       
                                       +
                                       
                                          
                                             α
                                          
                                          
                                             n
                                          
                                       
                                       +
                                       
                                          
                                             β
                                          
                                          
                                             i
                                          
                                       
                                       .
                                    
                                 
                               Because 
                                 1
                                 +
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       n
                                       −
                                       1
                                    
                                 
                                 
                                    (
                                    
                                       
                                          t
                                       
                                       
                                          k
                                       
                                    
                                    +
                                    
                                       
                                          α
                                       
                                       
                                          k
                                       
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       α
                                    
                                    
                                       n
                                    
                                 
                                 +
                                 
                                    
                                       β
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 1
                                 +
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       n
                                       −
                                       1
                                    
                                 
                                 
                                    
                                       t
                                    
                                    
                                       k
                                    
                                 
                                 +
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       k
                                    
                                 
                                 +
                                 
                                    
                                       β
                                    
                                    
                                       i
                                    
                                 
                               and 
                                 1
                                 +
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       n
                                       −
                                       1
                                    
                                 
                                 
                                    
                                       t
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 
                                    
                                       t
                                    
                                    
                                       n
                                    
                                 
                              , then we have 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                
                                                   H
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                       ≤
                                       
                                          
                                             t
                                          
                                          
                                             n
                                          
                                       
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             α
                                          
                                          
                                             k
                                          
                                       
                                       +
                                       
                                          
                                             β
                                          
                                          
                                             i
                                          
                                       
                                       ≤
                                       
                                          
                                             t
                                          
                                          
                                             n
                                          
                                       
                                       +
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             α
                                          
                                          
                                             k
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       .
                                    
                                 
                               According to the definition of 
                                 
                                    
                                       α
                                    
                                    
                                       n
                                    
                                 
                              , we can rewrite 
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       k
                                    
                                 
                               as follows: 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          
                                             α
                                          
                                          
                                             k
                                          
                                       
                                       =
                                       
                                          
                                             ∑
                                          
                                          
                                             k
                                             =
                                             1
                                          
                                          
                                             n
                                          
                                       
                                       
                                          (
                                          
                                             
                                                1
                                             
                                             
                                                
                                                   |
                                                   M
                                                   |
                                                
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                u
                                                ∈
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                p
                                             
                                             
                                                u
                                             
                                          
                                          )
                                       
                                       =
                                       
                                          
                                             1
                                          
                                          
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             u
                                             ∈
                                             
                                                (
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ∪
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      2
                                                   
                                                
                                                ∪
                                                ⋯
                                                ∪
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       .
                                    
                                 
                               Let 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                       
                                          (
                                          n
                                          )
                                       
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                               denote the largest value whose 
                                 i
                                 
                                    (
                                    n
                                    )
                                 
                                 ∈
                                 
                                    
                                       B
                                    
                                    
                                       1
                                    
                                 
                                 ∪
                                 
                                    
                                       B
                                    
                                    
                                       2
                                    
                                 
                                 ∪
                                 ⋯
                                 ∪
                                 
                                    
                                       B
                                    
                                    
                                       n
                                    
                                 
                              . Applying Property 2, we have 
                                 
                                    
                                       
                                          
                                             1
                                          
                                          
                                             
                                                |
                                                M
                                                |
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             u
                                             ∈
                                             
                                                (
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ∪
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      2
                                                   
                                                
                                                ∪
                                                ⋯
                                                ∪
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             p
                                          
                                          
                                             u
                                          
                                       
                                       ≤
                                       2
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                             
                                                (
                                                n
                                                )
                                             
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       ≤
                                       2
                                       
                                          
                                             t
                                          
                                          
                                             n
                                          
                                       
                                       .
                                    
                                 
                               Since 
                                 
                                    
                                       t
                                    
                                    
                                       n
                                       −
                                       1
                                    
                                 
                                 ≤
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                               and 
                                 2
                                 
                                    
                                       t
                                    
                                    
                                       n
                                       −
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       t
                                    
                                    
                                       n
                                    
                                 
                              , then 
                                 
                                    
                                       t
                                    
                                    
                                       n
                                    
                                 
                                 ≤
                                 2
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                              . Thus, 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                
                                                   H
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                       ≤
                                       
                                          
                                             t
                                          
                                          
                                             n
                                          
                                       
                                       +
                                       2
                                       
                                          
                                             t
                                          
                                          
                                             n
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       ≤
                                       2
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       +
                                       4
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       =
                                       7
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       .
                                    
                                 
                               This result holds for all task 
                                 i
                                 ∈
                                 T
                              , finally, we have 
                                 
                                    (16)
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             T
                                          
                                       
                                       
                                          
                                             
                                                
                                                   w
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                
                                                   H
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                       ≤
                                       7
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             T
                                          
                                       
                                       
                                          
                                             
                                                
                                                   w
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             
                                                
                                                   C
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             i
                                          
                                          
                                             
                                                LP
                                             
                                          
                                       
                                       .
                                    
                                 
                               Because 
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       ∈
                                       T
                                    
                                 
                                 
                                    
                                       
                                          
                                             w
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       
                                          
                                             C
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                    
                                       i
                                    
                                    
                                       
                                          LP
                                       
                                    
                                 
                               is a lower bound of the optimal, T-MarS is a 7-approximation algorithm for minimizing total weighted task completion times.□

@&#BACKGROUND@&#

We use synthetic workloads to study the performance of our algorithm, following similar simulation setup in  [7,8]. We generate jobs as follows: (1) Job release times are randomly generated following Bernoulli with probability  
                              
                                 
                                    1
                                 
                                 
                                    2
                                 
                              
                           . (2) Number of tasks in a job are generated (a) uniformly or (b) randomly. For a job with uniformly generated tasks, the number of map tasks is set to 30 and the number of reduce tasks is set to 10. For a job with randomly generated tasks, the number of map tasks follows Poisson distribution with a mean of 30 and the number of reduce tasks is uniformly chosen between 1 and the number of map tasks. (3) Task processing times are generated (a) uniformly or (b) randomly. For the tasks with uniform processing time, processing times of map tasks are 10 and processing times of reduce tasks are 15. For the tasks with random processing time, processing times of map tasks are normally distributed with a mean of 10 and a standard deviation of 5. Processing times of reduce tasks are normally distributed with a mean 15 and a standard deviation 5. (4) Weights of jobs/tasks are generated randomly in normal distribution with a mean 30 and standard deviation 10. (5) Delays between map tasks and reduce tasks are proportional to the processing time of map tasks. This indicates that a long map task will generate more data and these data will need longer time to be transmitted to the reduce tasks. The default number of machines is set to 50.

The key to compare different algorithms is total weighted job completion time (TWJCT) of the result of the algorithms. To make comparison under different configurations more illustrative, we would like to compare TWJCT of different algorithms with the optimal solution. However, computing the optimal solutions requires exponential time. Therefore, we use the LP lower bound as a substitute. We define TWJCT ratio as our evaluation metrics: 
                              
                                 
                                    TWJCT ratio
                                    =
                                    
                                       
                                          TWJCT of Algorithm X result
                                       
                                       
                                          LP lower bound
                                       
                                    
                                    .
                                 
                              
                            TWJCT ratio indicates how close the schedule result is to the theoretical lower bound. The smaller the TWJCT ratio is, the better the schedule result is. All results in our simulation are measured by TWJCT ratio.

Similarly, to compare performance of different algorithms designed for minimizing total weighted task completion times (TWTCT), we use TWTCT ratio as our evaluation metric: 
                              
                                 
                                    TWTCT ratio
                                    =
                                    
                                       
                                          TWTCT of Algorithm X result
                                       
                                       
                                          LP lower bound
                                       
                                    
                                    .
                                 
                              
                           
                        

We compare performance of our algorithms with the following scheduling strategies:


                           MARES: MARES  [8] is a LP-based algorithm considering precedence constraints in MapReduce jobs. In evaluation of  [8], MARES outperforms other algorithms with a factor of 1.5 to the lower bound. To offer a fair comparison, we adopt a workload-based assignment strategy where tasks are evenly allocated in order to balance total processing time of tasks on every processor. According to  [29], when there is not release time and precedence constraints, LP relaxation constraints in Eq. (4) and constraints in  [8] have same lower bound if workloads on every processor are same. Moreover, workload-based assignment strategy is also widely adopted in practice.


                           High unit weight first (HUWF): Unit weight (UW) of a job is calculated by dividing weight of the job by total processing time of tasks in the job. All tasks are sorted in descending order of unit weights of the jobs they belong to. We also maintain an available task list where all tasks in the list do not have any unscheduled precedent task. In each iteration, we choose the task with highest unit weight and assign it to a machine where it can start as early as possible. Then we check whether there is any unscheduled task whose precedent tasks are all scheduled and put these tasks into available task list. We iterate until all tasks are scheduled.


                           High job weight first (HJWF): This algorithm works similar to HUWF. The difference is that tasks are sorted according to weight of the jobs they belong to.

In the fine-grained task-level scenario, we add the following three scheduling strategies to compare their performance with T-MarS:


                           H-MARES: A simple heuristic implementation of MARES which we call H-MARES schedules tasks in the order of LP completion time without waiting for it to become available. The only reason for a task to wait is if some of its predecessors have not been completed. In H-MARES, it is assumed that tasks are assigned to machines in advance. We use H-MARES to evaluate effect of release time and precedence constraints.


                           Shortest task first (STF): When a machine is idle, we consider the available tasks set where all tasks have arrived and their predecessors have been finished, then we assign the task whose processing time is the shortest to the idle machine first. This strategy appears to be a reasonable greedy algorithm minimizing the completion time, so we take it into account.


                           High task weight first (HTWF): Similar to HJWF algorithm, the difference is that tasks are sorted according to their own weights.

In MarS, we need to choose a stop threshold 
                              ϵ
                            for COGE. We run MarS with 100 jobs and change value of stop thresholds (see Figs. 5 and 6
                           
                           ). We see that when 
                              ϵ
                            changes from 0.1 to 0.5, there is a small performance degradation for MarS while iteration number decreases rapidly. Thus, we choose 
                              ϵ
                              =
                              0.3
                           . MARES also needs a stop threshold in solving its LP-relaxation problem. To offer a fair comparison, we choose 
                              ϵ
                              =
                              0.3
                            for MARES instead of 0.5 in the original paper  [8].

In our simulation, we assume that the task processing time and delays between a map task and a reduce task are known to the scheduler. There are many studies on accurate processing time prediction  [32,36] and trace study  [6] shows that the majority of map tasks and reduce tasks are highly recurrent making prediction feasible. We plan a future work here.

We first discuss the most randomized scenario where all parameters are generated in randomly. Based on this scenario, we evaluate impacts of different job parameters when our optimization objective is to minimize total weighted job completion times.


                        Performances in the most randomized scenario. Fig. 7
                         shows results where all job parameters are in random category. We see MarS constantly offers efficient solutions when job number changes. In theory, we proved that MarS represents a 3-approximation of the theoretical lower bound, meaning that TWJCT ratios of MarS are at most 3. In practice, MarS represents an increase less than 0.4 in terms of TWJCT ratio, compared with theoretical lower bound. More specifically, starting at 1.32, MarS increases to 1.39 when job number is 20 and stays at about 1.38 with a variance less than 0.02 when job number further grows. This is because LP relaxation always produces an optimized task schedule order. MARES shows stable performance after job number reaches 20. However, we see a constant performance difference between MARES and MarS. We consider it as improvement by joint scheduling.

We see that MarS outperforms other algorithms by over 40% in most cases. The only exception happens when job number is 10 where MarS is 1.32 while MARES is 1.58, HUWF is 1.77 and HJWF is 1.86. After job number rises to 20, MARES increases to 1.96, HUWF and HJWF jump to 2.17 and 2.25 respectively. This is because when there are less jobs, machines are not extensive loaded. Thus, different schedule algorithms can gain close performances. However, when job number increases and machines are fully utilized, algorithm results differ from each other. We also notice that MARES outperforms HUWF and HJWF in all cases. This is because workload-based allocation performs well and MARES benefits from optimized task order generated by LP relaxation conditions.


                        Impact of task number in job. Next, we examine the effect of task number in a job. We generate jobs with uniform task number category while other job parameters are in random category. The results are shown in Fig. 8
                        . Compared with results in Fig. 7, we see that all algorithms gain better performance. MarS stays at about 1.15 which is 0.17 lower in terms of TWJCT ratio. MARES gradually increases from 1.48 to 1.88. HUWF and HJWF still have larger performance variance but TWJCT ratio of both algorithms decreases by 0.2 on average. It is also shown that there is only a tiny performance difference between HUWF and HJWF.


                        Impact of task processing time. We generate jobs with uniform task processing time category while other job parameters are in random category. MarS is very close to the theoretical lower bound. Its maximum distance to the lower bound is 0.08 when job number is 10. When job number rises, this distance decreases to less than 0.02. The gap between MarS and MARES is reduced to 0.35 on average.

It is worth noticing that comparing results in Figs. 8 and 9
                        , all algorithms gain better performance in uniform task processing time category. This result indicates that it is more effective to have uniform task processing time than to have same task number in all jobs. It also shows the importance of solving skewed task processing time problem in a parallel computing framework.


                        Impact of machine number. We change machine number to 100 and examine all algorithms in most randomized scenario (see Fig. 10
                        ). We see that MarS performs extremely well. Starting at 1.09 when job number is 10, its TWJCT ratio gradually declines to 1.01 which can be considered as optimal. Other algorithms also gain better performance than same scenario when machine number is 50 (see Fig. 7). Different from MarS, TWJCT ratios of other algorithms increase with job number. When job number reaches 100, MarS outperform MARES, HUWF and HJWF by 0.42, 0.75 and 0.79 respectively.


                        Impact of job weight. We investigate impact of job weight by generating jobs with different unit weight distribution. We first generate jobs with increasing UW category (see Fig. 11
                        ). We see that MarS and MARES do not have obvious change while both HUWF and HJWF show a 10% performance degradation. This is because in increasing UW category, later-released jobs have higher unit weight than jobs released earlier. Intuitively, tasks in later jobs should preempt the processing of tasks in earlier jobs. In order to gain better TWJCT ratio, sequence of tasks must be planned more carefully. Otherwise, a performance degradation is introduced.

Next, we generate jobs with decreasing UW category (see Fig. 12
                        ). Performances of MarS and MARES are similar in Figs. 7 and 12. However, HUWF and HJWF show opposite trends. HUWF outperforms MARES while HJWF suffers a performance degradation. Because schedule order of tasks in HUWF is same to release time order of their jobs, HUWF does not need to schedule tasks in later-released jobs to preempt tasks in earlier-released jobs while HJWF needs to take care of this because later-released job may have higher weight due to total processing time of its tasks.


                        Impact of prediction error. In order to investigate impact of prediction error, we inject errors to precessing times of tasks. All algorithms schedule jobs with error-injected information while we calculate a LP-lower bound based on no-error information. The result is shown in Fig. 14. 
                           x
                        -axis is maximum prediction error to no-error precessing time. We see that all algorithms do not show grade performance degradation. TWJCT ratios of four algorithms increase slightly. However the maximum performance degradation is a 0.09 performance degradation in terms of TWJCT ratio when maximum prediction error is 100%.

Next, in the fine-grained task-level MapReduce scheduling scenario, which means the optimization objective is to minimize total weighted task completion times, we further compare our T-MarS scheduler with other algorithms.


                        Varying total task number. To evaluate the impact of total task number on performance change under different algorithms, we vary the total task number from 100 to 1000 and we generate tasks randomly each time. The results are shown in Fig. 15. We note that when total task number is 100, TWTCT ratios of T-MarS, H-MARES, STF and HTWF are 1.03, 1.19, 1.31 and 1.42 respectively, T-MarS is 0.16 less than H-MARES in terms of TWTCT ratio. However, with the growth of total task number, T-MarS is at most 1.21, while H-MARES increases to 1.6 when task number is 1000, STF and HTWF are both more than 2.2. We observe that T-MarS is closer to the theoretical lower bound than other algorithms practically, because it has strict performance guarantee constraints.


                        Relative waiting time. We define the waiting time of a task to be the time interval between the submission and completion time. And the relative waiting time is the ratio of the task waiting time to the longest waiting time. As shown in Fig. 16, particularly, we note that T-MarS finishes 71% of all tasks at median relative waiting time, whereas H-MARES, STF and HTWF only finish 62%, 58% and 51% respectively. The results also explain the reason that T-MarS outperforms other classical algorithms from a different perspective.

In our above assumptions, the release time (arrival time) of all the jobs is known in advance. This is clearly not true in practice where the jobs arrive one at a time, and the arrival times cannot be known in advance in the running MapReduce platforms. In the single processor case there are some competitive algorithms for scheduling jobs online. These algorithms use the fact that scheduling the job with the highest proportion of weight to processing time can minimize the weighted completion time when all jobs are available at time zero. This is not true for our problem. However, to make our algorithm into an online version, we can use the approach as following: During a batch interval time, when a new job arrives into the system, we take all the jobs currently in the system along with the new job, when the batch interval is finished, we get all the arrival jobs’ information and run MarS scheduler to give a solution. In the next batch interval, the schedule can be implemented in the same manner. We refer to this approach as Semi-Online MarS Algorithm (SO-MarS). Since we have designed a fast heuristic algorithm and run the LP model periodically, as long as we set an appropriate batch interval, the overhead is not big. To demonstrate this approach works extremely well and is very robust to varying job characteristics, we compare our algorithm with other strategies using the same simulation setup in Section  5.1. Besides, the batch interval time is set from 10 to 100 s. As shown in Fig. 17, we can see that when the batch interval is 50 s, the average TWJCT ratios of SO-MarS, MARES, HUWF and HJWF are 1.09, 1.35, 1.63, 1.75 respectively. But when the batch interval increases to 100 s, the average TWJCT ratio of SO-MarS is still less than 1.19, while that of other strategies is over 1.53. According to the results, we conclude that our Semi-Online MarS algorithm still outperforms other classical algorithms.

@&#IMPLEMENTATION@&#

We implement a MSJO framework in Hadoop-1.2.0 and run the implementation on Amazon EC2. The implementation framework is described in Fig. 13
                        . To run in Hadoop, MSJO needs to cooperate with two components of Hadoop: JobTracker and TaskTracker. JobTracker manages all jobs in a Hadoop cluster and, as jobs are split into tasks, TaskTracker is used to manage tasks on every machine. 
                        
                        
                        
                     

We register MSJO to JobTracker so that JobTracker can call MSJO to make schedule decisions. MSJO makes schedule decisions according to different algorithm modules. Currently, we implemented four job-level algorithm modules including MarS, MARES, HUWF, HJWF, and four task-level algorithm modules including T-MarS, H-MARES, STF, HTWF in our experiments. Of course, other algorithm modules can be added in our implementation. When a job is submitted to Hadoop, JobTracker notifies MSJO that a job is added. MSJO puts the job into a queue. MSJO scheduler is event driven from JobTracker. When Hadoop is running, JobTracker keeps notifying MSJO on TaskTracker status. If a machine is idle, MSJO assigns a task to the TaskTracker of this machine. After a task is finished, the TaskTracker will tell JobTracker, which will further notify MSJO and MSJO updates job information. Accordingly, if all tasks in a job finish, MSJO removes the job and JobTracker sends a job-completion event to user application.

Here we also have a Processing Time Predictor module. This module can be based on a prediction algorithm or history recording of the completion time of past jobs. We leave such a prediction module to our future work. In this experiment, we run jobs one by one with default scheduler of Hadoop and collect data to train our predictor.

In current implementation, all algorithms are offline algorithms. They need full information about the job set before scheduling. To fulfill this requirement, we develop a job set generator. In each experiment, job set generator submits a set of jobs to Hadoop at the beginning of the experiment. These jobs carry release time and weight information with them. After MSJO collects all information for the job set, MSJO calls an algorithm module to make a schedule. After that, MSJO schedules jobs accordingly.

We evaluate the algorithms with experiments on a 16-node cluster. This cluster is built on Amazon EC2. We choose virtual machines of type m1.small which have a 1-ECU cpu (1 ECU roughly equals to 1.0 GHz), 1.7 GB memory and 160 GB disk. According to our measurement, the inter-node network bandwidth is 400 Mbps.

We employ Wordcount as the MapReduce program in our experiments. Wordcount aims to count the frequency of words appearing in a data set. It is a benchmark MapReduce job and serves as a basic component of many Internet applications (e.g. document clustering, searching, etc.). In addition, many MapReduce jobs have aggregation statistics closer to Wordcount  [9]. We use a document package from Wikipedia as input data of jobs. This package contains all English documents in Wikipedia since 30th January 2010 with uncompressed size of 43.7 GB. In this package, there are 27 individual files, of which the sizes range from 149 MB to 9.98 GB. For every file, we create a MapReduce job to process it. The number of map tasks is determined by input data size. One map task is created for 64 MB input data. We set the number of reduce tasks to half of the number of map tasks. The release time and job weights are generated in the same way as in the simulation.

We build two job sets: (1) Job set 1. It contains 10 jobs where input data size of every job is less than 1 GB. We use this job set to evaluate the performance of our algorithms when jobs are small. (2) Job set 2. This job set contains all 27 jobs.


                        Performance of different algorithms. For the job-level scenario, the result is shown in Fig. 18
                        . In job set 1, we see that MarS outperforms the other algorithms. MarS increases 0.416 to the lower bound while MARES, HUWF and HJWF increase 0.539, 0.81 and 0.672 respectively. In job set 2, we see that MarS still outperforms rest of the algorithms. Compared with results in job set 1, we see TWJCT ratios of all algorithms increase. The trend is also reflected in simulation results. We notice that HJWF suffers more performance degradation than other algorithms. The reason may be that in job set 2, these jobs process data as large as 9.98 GB. Most of them are bigger than the jobs in job set 1. HJWF scheduled big jobs first because their weights are big. However, these jobs have big weights but their unit weights are small because they take a long time to process these data. As a result, small jobs with big unit weights are delayed. By considering the relation between weight and processing time, MarS, MARES and HUWF do not suffer from this mixture of different size jobs.

Furthermore, for the task-level scenario, as shown in Fig. 19
                        , in both job sets 1 and 2, we observe that T-MarS outperforms the other algorithms. In particular, in job set 1, the difference of TWTCT ratio between T-MarS and H-MARES is small, and the performance of STF is close to that of HTWF. In job set 2, we see that T-MarS still outperforms rest of the algorithms. Compared with results in job set 1, we see that all algorithms suffer performance degradation. However, the percentage of increasing TWTCT ratio of T-MarS is 3.9%, which is smaller than that of other algorithms. Moreover, compared to T-MarS, the difference of performance under job set 2 is larger than that under job set 1 for H-MARES, STF and HTWF.


                        Processing times of map tasks and reduce tasks. We show precessing times of map tasks and reduce tasks. Training data and MarS results are shown in Fig. 20
                        . Both of them have 950 tasks. In training data, there is a clear processing time difference between reduce tasks and map tasks. Processing times of map tasks stay around 80 s while most of reduce task are over 150 s. We also see that there are gaps between training data and MarS result. The main reason is that training data is produced by running jobs in turn and the cluster is not fully utilized. Meanwhile, MarS schedules multiple jobs simultaneously to fully utilize the cluster. Intensive utilization of the cluster introduce cost from competitions on resources such as disk I/O, network bandwidth, etc.

To avoid the probable impact of virtual environment on the results, except for the above experiments on Amazon EC2, in this section we try to redo the experiment in a local real server cluster and perform comprehensive evaluations to demonstrate the superiority and reliability of our algorithm. The implementation is the same as Section  6.1, we evaluate the algorithms with experiments on a 12-server cluster. All the servers are connected with a 1 Gbps switch. Every server has 2 CPU cores, 80 GB RAM and 1 TB disk. We use the same workload and job sets as Section  6.2 in our experiments. As shown in Fig. 21
                        , we can see that in job set 1, the TWJCT ratios of MarS, MARES, HUWF and HJWF are 1.36, 1.45, 1.68, 1.59 respectively; In job set 2, we see that MarS still outperforms rest of the algorithms. Particularly, compared to MARES, the gain percentage of TWJCT ratio of MarS is 6.7%. This experiment indicates that our MarS scheduler still works extremely well when MapReduce framework runs on real server cluster.

@&#CONCLUSION@&#

In this paper, we studied MapReduce job scheduling with consideration of server assignment. We showed that without such joint consideration, there can be great performance loss. We formulated a MapReduce server-job organizer problem. This problem is NP-complete and we developed a 3-approximation algorithm MarS. Moreover, we further propose a novel fine-grained practical algorithm for general MapReduce task scheduling problem. Finally, we evaluated our algorithm through extensive simulation. The results show that MarS can outperform state-of-the-art strategies by as much as 40% in terms of total weighted job completion time. We also implement a prototype of MarS in Hadoop and test it with experiment on Amazon EC2. The experiment results confirm the advantage of our algorithm.

@&#ACKNOWLEDGMENTS@&#

This work is supported by the National Basic Research Program of China under Grant No. 2012CB315806, the National Natural Science Foundation of China under Grant Nos. 61432009, 61170211, 61161140454, Specialized Research Fund for the Doctoral Program of Higher Education under Grant No. 20130002110058, and Joint Research Fund of MOE-China Mobile under Grant No. MCM20123041.

@&#REFERENCES@&#

