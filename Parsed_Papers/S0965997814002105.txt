@&#MAIN-TITLE@&#Monitoring of tool wear using measured machining forces and neuro-fuzzy modelling approaches during machining of GFRP composites

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           ANFIS based tool wear/condition monitoring is demonstrated for end milling GFRP composites.


                        
                        
                           
                           Grid portioning and subtractive clustering are used to partition the experimental data.


                        
                        
                           
                           Using feed force produces better prediction capability compared to cutting force.


                        
                        
                           
                           Statistical analyses are used to evaluate the predictive capability.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

ANFIS modelling

Tool wear

Machining

Statistical performance

Grid partitioning

Subtractive clustering

GFRP composites

@&#ABSTRACT@&#


               
               
                  The challenges of machining, particularly milling, glass fibre-reinforced polymer (GFRP) composites are their abrasiveness (which lead to excessive tool wear) and susceptible to workpiece damage when improper machining parameters are used. It is imperative that the condition of cutting tool being monitored during the machining process of GFRP composites so as to re-compensating the effect of tool wear on the machined components. Until recently, empirical data on tool wear monitoring of this material during end milling process is still limited in existing literature. Thus, this paper presents the development and evaluation of tool condition monitoring technique using measured machining force data and Adaptive Network-Based Fuzzy Inference Systems during end milling of the GFRP composites. The proposed modelling approaches employ two different data partitioning techniques in improving the predictability of machinability response. Results show that superior predictability of tool wear was observed when using feed force data for both data partitioning techniques. In particular, the ANFIS models were able to match the nonlinear relationship of tool wear and feed force highly effective compared to that of the simple power law of regression trend. This was confirmed through two statistical indices, namely r
                     2 and root mean square error (RMSE), performed on training as well as checking datasets.
               
            

@&#INTRODUCTION@&#

The direct contact between cutting tool, workpiece material, and the chips during machining operation imposes extreme thermal and mechanical stresses on the cutting tool. As a result, changes to the geometry, volume loss, and sharpness of the cutting tool, can occur either gradually or abruptly. These changes, which are known as tool wear, normally take place at the rates dependent upon machining conditions, workpiece material, as well as the cutting tool material or geometry. As discussed in earlier research study [1], abrasive wear on the flank face of the cutting tool has been the dominant wear mechanism that influences the tool sharpness during machining of glass fibre-reinforced polymer (GFRP) composites. On the basis of this, reduction of tool sharpness puts constraint on the dimensional accuracies and surface qualities of the composites product. Often, in-service or mechanical performance of poorly machined GFRPs degrades and under the worst circumstances, causes them rejected prior to the end applications. Similar to the case of metallic materials and their metal matrix composite counterparts, it is essential to develop accurate tool wear predictive models as monitoring its condition during machining can extend its useful life.

There exists a significant body of literature pertaining to tool condition monitoring for metal cutting processes which have been reported in the past few decades. In fact, the concept of tool condition monitoring evolved in the early 1990s. In general, the condition of the cutting tool can be determined through two possible methods, namely direct and indirect methods. Broadly speaking, Dan and Matthew [2] define them to be as: (1) direct, where the actual tool wear is measured in-situ; (2) indirect, where a parameter correlated with tool wear is measured. Direct measurement using optical devices has been extensively and effectively employed in studying the extent of tool wear as well as to understand its mechanisms. The optical measurement of tool flank wear has also been proven to be useful in estimating the tool’s useful life by employing the classical Taylor’s tool life equation. However, this would require interruptions of the cutting operations due to the need to remove the tool from its holder for the optical microscopy. This consequently demotes machining productivity due to unscheduled downtime of the cutting operation.

An indirect approach that involves the measurements of machining signals, which can be correlated to the tool wear, offers a more practical solution for industrial application. Thanks to the availability and on-going advancement of various sensors for machining tests in recent years, reliable and accurate monitoring of tool condition can be realised. Nonetheless, machining operation is known to produce harsh environment or conditions. In view of this, Dimla summarised that any machining processes can be classified as having one or more of the following characteristics [3]: (1) complex to stochastic behaviour due to in-homogeneities in the workpiece material; (2) sensitive to the process parameters or cutting conditions; and (3) nonlinear relationship between the process parameters and tool wear.

The aforesaid stochastic phenomenon makes it a challenge to achieve highly accurate and reliable tool wear prediction or condition models. As a result, empirical based model derived from experimental data or machining signals has been used and is viable enough to draw scientific conclusions about the tool condition. Such signals can come from various sources or sensors although machining forces have predominantly been used in the past research studies. This is evident in the summary of selected literature (taken from a broad spectrum of research articles) related to the tool condition monitoring [2–10]. Machining forces are considered to be the most informative for indirect tool wear monitoring or conditional signals. They can be directly correlated to the sharpness of the cutting edges (tool wear), chip geometry, and machining conditions.

Indeed, this has been reported by Ravindra et al. [9], in which the authors developed a multiple nonlinear regression analyses of tool wear using machining force signals measured from experiments during turning of cast iron with coated carbide inserts. The authors claimed that the cutting force components were found to be well correlated with the progressive wear and the tool failure, which can be an effective on-line monitoring of the tool condition. In a recent study, Jemielniak et al. [4,5] reported the tool wear monitoring using various sensors which include force dynamometer, accelerometer, and acoustic emission (AE) sensor. However, it is imperative to note that AE sensors are highly sensitive to any noise generated from the external environment. Hence, the application of AE sensors as a tool wear indicator is only deemed to be suitable as an additional sensing device in support to the main sensor or device.

Presently, among many research endeavours on tool wear prediction or condition monitoring, one can find limited numbers of published results for composite materials. The only such study was reported by Lin et al. [6] during turning of aluminium silicon carbide metal matric composites. Effort must be undertaken to extend the concept of tool condition monitoring from metal cutting process into composite machining, especially the GFRP composites, for any industrial useful applications. Notably, a timely decision on tool condition prior to the end of its useful life is inevitably crucial in reducing any detrimental effects of the worn tool on the machined surface. In spite of this, chaotic behaviour of machining response seems to impede the progress of developing a reliable tool wear predictive model for any practical use during machining of this material due to the laminated nature of the GFRP composites. Hence, this paper describes the attempt to develop and compare the performance of tool wear predictive models during machining of the GFRP composites. These predictive models have been established using the widely employed soft computing technique namely; Adaptive Network-Based Fuzzy Inference System or simply known as ANFIS.

Soft computing, as the name suggests, refers to a collection of computational techniques developed from computer science research. The major aims are to model and analyse complex, nonlinear, and imprecise phenomena that may exist in the process variables. The techniques are usually robust and capable of yielding complete, accurate, and reliable solutions. Such examples of soft computing modelling frequently employed in machining research include artificial neural network (ANN), fuzzy logic modelling, and genetic algorithms (GA). Hitherto, the soft computing technique has emerged as an alternative method to complement the statistical technique for modelling of machining processes. Successful implementations of these approaches in modelling machining processes have, indeed, been summarised in several review reports [11–16]. Some of the published results are discussed herein (particularly those related to fuzzy logic, ANFIS and ANN modelling techniques).

Gill et al. [17] have developed tool wear model based on ANFIS technique in their study of turning hot rolled annealed steel stock (C-45) with cryogenic cutting tools of different temperatures. The model combined fuzzy inference function and artificial neural network training with a set of rules in estimating the extent of tool wear. In this study, three parameters (cutting speed, cryogenic temperature and machining time) were used as input parameters and their range of values were represented using triangular membership function. Based on the selected parameters and their levels, 27 fuzzy rules were formulated. The authors asserted that the predictions well agreed with the experimental data, with correlation coefficients to be 0.994 and mean errors of 2.47%.

Despite these promising results, the authors highlighted that the predictive accuracy of the model very much depends on the appropriate training of the neural network as well as data points selections [17]. The same authors also reported the modelling of material removal rate (MRR) during stationary ultrasonic drilling of sillimanite ceramic [18]. In this study, 4 ANFIS fuzzy rules were employed to predict the MRR according to three input parameters, namely the depth, time and rate of penetration. In a different study, Palanikumar et al. [19] proposed the applications of fuzzy logic in modelling the surface roughness of CFRP composites during turning operation. The Mamdani fuzzy logic rules were constructed based on Taguchi L27 experimental array in which each fuzzy expression has been divided into three membership functions of ‘Low’, ‘Medium’ and ‘High’. However, the authors claimed that the effectiveness of the fuzzy model is only within the range and factors implemented in their study. Hence, they suggested that the accuracy of the proposed model can be further improved by considering more variables and range of parameters.

The capability of ANN technique to be a highly accurate predictive model for surface roughness, Ra
                      in end milling titanium alloy (Ti–6Al–4V) has been recently demonstrated by Zain et al. [20]. In this work, the authors have utilised a feedforward backpropagation algorithm with traingdx, learngdx, mean square error (MSE), logsig as the training, learning, performance and transfer functions, respectively. Despite the accuracy of the prediction model, the authors asserted that predictive capability could be improved by modifying the number of layers and nodes in the hidden layers of the ANN network structure.

In another work, Zain et al. [21] compared multiple regression analysis and ANN for prediction of minimum Ra
                      value in machining process. Contrary to their previous results, in this study, the authors reported that regression technique has given a slightly better result when compared to ANN in predicting the minimum Ra
                      value. In this work, the minimum Ra
                      values from experiment, regression and ANN were 0.190mm, 0.187mm, and 0.188mm respectively.

The successful implementation of the tool condition monitoring during machining of the GFRP composites depends primarily on the selection of input variables or parameters. It is to be noted that the selected range of machining parameters resemble to that of industrial practise. In essence, the cutting speed and feed rate were varied at four and three levels respectively, Table 1
                        . Since the depth of cut was found to be less important in the previously reported parametric study [1], it was kept constant at 2mm. Experiments were replicated under the same machining parameters to ensure the repeatability as well as to verify and validate the developed predictive model. As far as the tool material type is concerned, carbide tool has been found to be far more economical than that of the poly crystalline diamond tool. Hence, the commercially available K20 helical tools were procured for this study. Each of the cutting tools has a 12mm diameter, 30° helix angle and 75mm cutting length. New cutting tool was used for each machining test so as to provide a new cutting edge for subsequent combination of machining parameters.

The workpiece material was fibre-reinforced polymer composites which has a volume fraction of approximately 52% glass fibres within an epoxy thermoset matrix. The test workpiece was produced as a plate of 200mm length, 135mm width, and 6.0±0.5mm the thickness by vacuum assisted resin infusion. It should be emphasised here that the details fabrication procedure for the GFRP composite workpiece can be found in [1]. Meanwhile, Fig. 1
                         exhibits the SEM micrographs of the laminate sample revealing the fibres and matrix phases of the composite. It appears that the glass fibre bundles are in-homogeneously bonded and impregnated with the thermosetting epoxy resin.

The experimental data for the current study were acquired through a series of experiment conducted according to the selected machining parameters. In this study, end milling operation has been selected as the machining test method. Hence, the machining tests were carried out on a Centroid 1050A CNC machine centre. The tests have been conducted along the 200mm edge of the workpiece (which created a 200mm slot) under dry condition. A vacuum cleaner was used to handle the hazardous micro-chips. Machining induced forces (in the x and y direction, Fig. 2
                        ) during the tests were acquired through a Kistler® piezoelectric dynamometer. This device was connected to a Kistler® 5001 charge amplifier and a PC with LabVIEW data acquisition software. The raw data was sampled and filtered at 100kHz. This technique significantly reduces the possible noise in the raw data by attenuating the force signals. The average of those filtered values is taken as the final force measurement for further analysis. On the other hand, the continuous monitoring on the extent of wear on the cutting tool is another essential part of the study. This was carried out using a Leica MZ16 optical stereo-microscope at 115× magnification. Three measurements of the wear length were taken and average of the readings was calculated as the final tool wear value.

Due to the neural network learning capability, the working principles of ANFIS is also based on the architecture. The five layer ANFIS architecture consists of a number of interconnected nodes, which are characterised by fixed and adjustable parameters. In fuzzy inferencing step, the output signals from each layer are processed by the node functions. This is necessary for the input signals in the subsequent layer. The signal processing by the node functions in each layer of the ANFIS architecture is briefly explained below, whereas the greater details are available elsewhere in [22,23]:
                           
                              •
                              Layer 1: Each node in this layer contains adaptive node functions. These nodes are typically used to map or fuzzify the inputs, x and y, into the corresponding fuzzy linguistic values of SMALL, MEDIUM or HIGH using fuzzy membership functions (MFs). Fuzzified output, 
                                    
                                       
                                          
                                             O
                                          
                                          
                                             i
                                          
                                          
                                             1
                                          
                                       
                                    
                                  is often given by (refer to Eq. (1)):


                        
                           
                              •
                              Layer 2: In this layer, the fixed node function provides the strength for the layer 2 output signal rules, 
                                    
                                       
                                          
                                             O
                                          
                                          
                                             i
                                          
                                          
                                             2
                                          
                                       
                                    
                                  by multiplying each input signals from Layer 1 with one another. This is given as in Eq. (2):


                        
                           
                              •
                              Layer 3: This layer calculates the normalised firing strength of the fuzzy rules, 
                                    
                                       
                                          
                                             
                                                
                                                   ω
                                                
                                                
                                                   ‾
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                    
                                 , obtained from the previous layer. This can be achieved through (refer to Eq. (3)):


                        
                           
                              •
                              Layer 4: Defuzzification of the first order Takagi–Sugeno type fuzzy rules to solve the overall weighted output, 
                                    
                                       
                                          
                                             
                                                
                                                   ω
                                                
                                                
                                                   ‾
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                    
                                  using the normalised firing strength, 
                                    
                                       
                                          
                                             
                                                
                                                   ω
                                                
                                                
                                                   ‾
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                    
                                 , is performed in this layer. The defuzzification is accomplished using the expression shown in Eq. (4):


                        
                           
                              •
                              Layer 5: The sum of all weighted signals from layer 4 is used to calculate the overall output, the expression for overall output is given by (please refer to Eq. (5)):

The network implements the first order (linear function) Takagi–Sugeno type fuzzy reasoning for learning and fine tuning. The first order Takagi–Sugeno fuzzy rules can be in the form of:
                           
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   R
                                                
                                                
                                                   1
                                                
                                             
                                             :
                                             
                                             IF
                                             
                                             x
                                             
                                             is
                                             
                                             
                                                
                                                   A
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             AND
                                             
                                             y
                                             
                                             is
                                             
                                             
                                                
                                                   B
                                                
                                                
                                                   1
                                                
                                             
                                             
                                             THEN
                                             
                                             z
                                             
                                             is
                                             
                                             
                                                
                                                   f
                                                
                                                
                                                   1
                                                
                                             
                                             (
                                             x
                                             ,
                                             y
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                             where
                                             
                                             
                                                
                                                   f
                                                
                                                
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             x
                                             +
                                             
                                                
                                                   q
                                                
                                                
                                                   1
                                                
                                             
                                             y
                                             +
                                             
                                                
                                                   r
                                                
                                                
                                                   1
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   R
                                                
                                                
                                                   2
                                                
                                             
                                             :
                                             
                                             IF
                                             
                                             x
                                             
                                             is
                                             
                                             
                                                
                                                   A
                                                
                                                
                                                   2
                                                
                                             
                                             
                                             AND
                                             
                                             y
                                             
                                             is
                                             
                                             
                                                
                                                   B
                                                
                                                
                                                   2
                                                
                                             
                                             
                                             THEN
                                             
                                             z
                                             
                                             is
                                             
                                             
                                                
                                                   f
                                                
                                                
                                                   2
                                                
                                             
                                             (
                                             x
                                             ,
                                             y
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                             where
                                             
                                             
                                                
                                                   f
                                                
                                                
                                                   2
                                                
                                             
                                             =
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             x
                                             +
                                             
                                                
                                                   q
                                                
                                                
                                                   2
                                                
                                             
                                             y
                                             +
                                             
                                                
                                                   r
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        in which x and y are two inputs (with the respective number of fuzzy MFs), Ri
                         is fi
                         is the fuzzy rule base and the output for each input respectively. Meanwhile, A
                        1, A
                        2, B
                        1, B
                        2, are the linear or nonlinear parameters or fuzzy sets of the MFs. These parameters are typically represented in terms of linguistic variables (words) of SMALL, MEDIUM or HIGH based on the selected MFs curves. Finally, the p
                        1, p
                        2, q
                        1, q
                        2, r
                        1 and r
                        2 are linear coefficients of the Takagi–Sugeno first order models, f
                        1 and f
                        2.

The development of the ANFIS models has been performed using a database that consists of 231 tool wear-machining forces datasets gathered from the experiments. Two different ANFIS models were produced for each type of data partitioning techniques. The different models were constructed using feed force, Fx
                        , and cutting force, Fy
                        , datasets in order to predict a single output variable, tool wear, TW. This approach offers the flexibility of having different types of MFs in the ANFIS architecture. As the primary objective of this study is to investigate the modelling performance of ANFIS for prediction of tool wear, the datasets were normalised, randomised and allocated into training and checking datasets. Herein, 2/3 of the available data were allocated for the training, whereas the remainder was for the validation or checking. The selection of this data allocation was based on initial analysis conducted earlier [24].

In addition to that, the modelling accuracy can be improved by partitioning the available data into either grid partitioning or subtractive clustering algorithm. The purpose of this input space partitioning is to identify the natural groupings of a large dataset so as to produce a concise representation of a system’s behaviour [25]. A relatively straightforward, yet effective approach is to partition the input space is through grid partitioning. This method divides the input space into rectangular sub-spaces using axis paralleled partition based on a pre-defined number of MFs [26]. Fig. 3
                         illustrates the typical grid partition of a two dimensional input space, A and B, with each having three membership functions. It results in 9 fuzzy rules for this type of configuration.

However, the main limitation of this type of data partitioning is that the number of fuzzy rules rises exponentially, when both number of input variables and pre-defined MFs increases. This problem, usually referred to as “the curse of dimensionality” [23,26], would demand more computational efforts during fuzzy inferencing and neural network training. Consequently, the input space partitioning of the training datasets was also performed using the subtractive-clustering technique (initially proposed by Chiu [25]). This clustering technique determines the optimum numbers of MFs and fuzzy rules required for the ANFIS model. It is predominantly useful when there is no clear indication on how many clusters that can be used for a given set of data [25]. This is particularly the case for the machining forces dataset employed in the current analysis. The subtractive-clustering assumes that each data point can be a potential cluster centre and calculates the likelihood of each selected point being the cluster centre [26]. A data point with the highest potential, which is a function of the distance measured between each data point, is then considered as a cluster centre. The potential of each data point can be estimated by using Eq. (6) 
                        [27]:
                           
                              (6)
                              
                                 
                                    
                                       P
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       e
                                    
                                    
                                       -
                                       α
                                       ‖
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       
                                          
                                             x
                                          
                                          
                                             j
                                          
                                       
                                       
                                          
                                             ‖
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where α is given as:
                           
                              (7)
                              
                                 α
                                 =
                                 
                                    
                                       λ
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             a
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        
                        Pi
                         is the potential of the ith data point, n is the total number of data points, xi
                         and xj
                         are data vectors in data space, including both input and output dimensions, 
                           
                              λ
                           
                         is a positive constant and ra
                         is known as the hypersphere cluster in the data space or simply the ‘cluster centre’. A large value of ra
                         results in fewer clusters which lead to a coarse model, whereas, a small value of ra
                         produces an excessive number of rules which may results in an over-defined system. Subtractive-clustering has additional three parameters, namely the accept ratio (
                           
                              
                                 
                                    ε
                                 
                                 
                                    ‾
                                 
                              
                           
                        ), reject ratio (
                           
                              
                                 
                                    ε
                                 
                                 
                                    ̲
                                 
                              
                           
                        ) and quash factor (η) which need to be specified or defined [27].

These parameters, particularly the 
                           
                              
                                 
                                    ε
                                 
                                 
                                    ‾
                                 
                              
                           
                         and 
                           
                              
                                 
                                    ε
                                 
                                 
                                    ̲
                                 
                              
                           
                        , have a large influence on the number of rules and the error performance measures. High values of both parameters will result in a small number of fuzzy rules and vice versa. It is essential to be highlighted that the accept ratio value will determine whether the data points that have strong potential of being clusters centres, whereas the reject ratio value will reject all data points with a low potential of being cluster centres, respectively [28]. The quash factor, on the other hand, is used to find clusters that are far from each other. The plot of input data space for normalised feed force and cutting force against the tool wear with their respective cluster centres are shown in Fig. 4
                        .

Fuzzy membership function is the curve which defines the way each point in the input space is mapped into a membership value [29]. It is to be noted here that the degree of membership value is between 0 and 1 regardless of the curve types. For the selected dataset allocation percentage mentioned earlier, the ANFIS was constructed using non-linear MFs, namely the bell-shaped and the Gaussian types. The dataset for the bell-shape MFs were partitioned using grid partitioning method, whereas subtractive clustering algorithm was employed for the Gaussian function. Hence, the number of bell-shaped MFs for the grid partitioning was chosen to be 3×3×2 (18 MFs), which corresponds to the inputs of cutting speed, v; feed rate, f and machining forces, Fx
                         or Fy
                        . These membership functions are typically spread across the experimental input range, Fig. 5
                        (a) with the maximum and minimum degree of membership range from 0 to 1, given by the expression as in Eq. (8):
                           
                              (8)
                              
                                 
                                    
                                       O
                                    
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       1
                                       +
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     x
                                                                     -
                                                                     
                                                                        
                                                                           c
                                                                        
                                                                        
                                                                           i
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        
                                                                           a
                                                                        
                                                                        
                                                                           i
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   b
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

On the other hand, the number of MFs for the subtractive clustering algorithm was determined based on the number of cluster centres defined by the algorithm. Results from applying the optimum subtractive-clustering parameters to the current datasets have produced the number of Gaussian MFs given in Table 2
                        , for each model considered herein. These MFs are spaced over the range of input parameters, as shown in Fig. 5(b). Hence, each of the generated MFs represents one input cluster centre which can be used to generate a single fuzzy rule. A Gaussian membership function is also spreads across the experimental input range with the maximum and minimum degree of membership range from 0 to 1. This expression defines the Gaussian MFs:
                           
                              (9)
                              
                                 
                                    
                                       O
                                    
                                    
                                       i
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 exp
                                 
                                    
                                       
                                          
                                             
                                                -
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                            -
                                                            
                                                               
                                                                  a
                                                               
                                                               
                                                                  j
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                2
                                                
                                                   
                                                      b
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where x is the input parameter, and a and b are the Gaussian function parameters. a represents the Gaussian function centre (mean), whereas b determines the width (standard deviation) of the Gaussian function.

@&#RESULTS AND DISCUSSION@&#

@&#EXPERIMENTAL RESULTS@&#


                        Fig. 6
                         shows the typical curves of tool wear growth against machining time with respect to changing cutting speed (110–230m/min) and changing feed rate (0.16–0.32mm/rev). Similar to that of metal cutting, the tool wear during machining of GFRP composites is primarily due to abrasion and it is highly sensitive to the changing of cutting speed. The rate of tool wear growth is rapid with harsher cutting speed, as would normally be observed in practise. Hence, it can be asserted that the frequencies at which the fractured fibres rub against the tool flank face increase substantially with severe cutting speed. This accelerates the heat energy and two body abrasion between the cutting tool and workpiece material to worn out the tool material.

The effect of changing feed rate on the growth of tool wear appears to be marginal under the different cutting speed employed, Fig. 7
                        . Despite this, the cutting tool can be seen to be worn out rapidly due to the combination of harsher feed rate and cutting speed, Fig. 7(d). Using the tool wear criterion of 0.3mm flank wear (as accordance to International Standard ISO 8688-1), the useful life of the cutting tool for each of the employed machining parameters was estimated from the tool wear curves. Subsequently, the Taylor’s tool life equation was derived, as shown in earlier study [30], which can be used to determine the tool useful life during end milling of the GFRP composites.

As discussed in the previous section, the feed force, Fx
                        , and the cutting forces Fy
                        , generated after each end milling pass were constantly acquired using the Kistler® force dynamometer, Figs. 8 and 9
                        
                        , until the tool reached the critical tool life criterion. As apparent, the rates of increase in machining forces were consistently identical to the growth of tool wear, Figs. 6 and 7. Such similarity can help in monitoring the condition of the cutting tool during cutting process. From these figures, the effects of increasing cutting speed and feed rate on machining forces are stronger as the machining operation progressed and the tool sharpness deteriorated. Based on the aforementioned experimental results, the data obtained can be used as the input for the ANFIS network. In the current study, machining parameters (cutting speed and feed rate) were used along with the measured machining forces as the input parameters for the ANFIS, whereas the output of the network being the tool wear.

The ANFIS models have been developed and simulated using MATLAB v7.9 with Fuzzy Logic Toolbox. Fig. 10
                         exhibits the logical structure of the ANFIS model in the form of a flowchart that explains the procedure for developing the tool wear predictive model. Repeated training and checking of the ANFIS models were performed until the minimum training and checking error have been achieved. This is shown in Fig. 11
                         for the developed models. As highlighted in the previous section, two cases of tool wear prediction models are considered based on feed force and cutting force datasets. Their results are described as follows:
                           
                              (a)
                              Results based on feed force, Fx
                                 
                              

It should be emphasised that despite the two prediction models (based on machining forces) which are proposed, each of them have been developed using different data partitioning techniques. The results are referred to as ANFIS_GP for the ‘grid partitioning’ method and on the contrary, ANFIS_SC for the ‘subtractive clustering algorithm’. Fig. 12
                        (a)–(c) depicts a comparison of experimental and predicted tool wear based on the different data partitioning techniques. As seen in Fig. 12(a), the simple power function can fairly fit the relationship between tool wear and the feed force. Despite this, the major finding of this study, Fig. 12(b)–(c), is that the ANFIS models can predict the extent of tool wear with high degree of accuracy. Based on the milder machining conditions selected, the developed models can follow closely the nonlinear trend between the tool wear and feed force. This is particularly evident when there is a rapid increase of both values/variables (tool wear and machining force). Although the plotted results from ANFIS_GP and ANFIS_SC are seen to be identical, the statistical evaluations revealed their apparent different. The results of correlation coefficients or coefficient of determination, r
                        2, root mean square error (RMSE), and mean absolute percentage error (MAPE) suggest that the ANFIS_GP prediction is slightly better compared to that of ANFIS_SC for the given examples. In comparison to the results in [31], it is evident that the results of the current work improve the earlier work of multiple regression analyses to predict tool wear. However, the simple ANFIS modelling reported in [31], is more or less equivalent to the current work, even though the algorithms have been modified.

It is to be noted that the complete statistical indices/results for the whole dataset are evaluated and discussed in the forthcoming section. This will indicate the overall performance of each ANFIS models developed in the current study. Meanwhile, the qualitative evaluations of the prediction models performance for training and checking datasets are graphically depicted in the scatter diagrams, Fig. 14
                        
                        . It is evident that predicted values from training and checking datasets demonstrate the closeness to the perfect prediction line (at the 45° line). Moreover, the predicted values of tool wear appear to be closely bunched together within the ±15% error of the perfect prediction superimposed in the same graph.
                           
                              (b)
                              Results based on cutting force, Fy
                                 
                              

Similar to that of feed force, the results of applying the tool wear-cutting force datasets to the ANFIS models are shown in Fig. 13. As apparent, the ANFIS predicted models exhibited excellent match to the experimental tool wear as well. Contrary to the feed force, ANFIS_SC showed slightly better statistical performance compared to the ANFIS_GP for the selected machining parameters. This is based on the results of r
                        2, RMSE and MAPE calculated, Fig. 13(b)–(c). Despite this, the feed force based prediction models were more superior compared to that of the cutting force, as shown in the scatter diagrams, Figs. 14 and 15
                        . This could likely be attributed to the larger variations of cutting forces that were measured during the end milling tests.

The complete performance evaluations of each predicted models for the allocated training and checking datasets are given in this section. The evaluations were carried out using the commonly known statistical indices which include r
                        2, RMSE and MAPE. It is evident that the grid partitioning method performed fairly better compared to the subtractive clustering algorithm in predicting the extent of tool wear, as depicted in Table 3
                        . The values of r
                        2 for the feed force training and checking datasets of the ANFIS_GP are higher than those from ANFIS_SC. Meanwhile, the values of RMSE for the ANFIS_GP are marginally smaller when compared to the ANFIS_SC. Similar situation can be observed for the cutting force datasets, Table 4
                        . This could be due to the number of fuzzy rules or fuzzy MFs that were applied to the ANFIS algorithm. In addition, the applications of different type fuzzy MFs (Gaussian and Bell-shaped) for each ANFIS models have shown only a marginal effect on the predicted tool wear. Hence, both of them can be used to predict the nonlinear relationships between the tool wear and machining forces during end milling of the GFRP composites. Despite of this, it can be confirmed that the feed force based prediction models is superior to that of the cutting force by comparing their statistical indices.

@&#CONCLUSIONS@&#

In the present study, end milling experiments of GFRP composites have been performed in order to study their machinability. Machining force and the growth of tool wear were constantly monitored so that constitutive models between these variables can be developed. Adaptive Neuro-Fuzzy Inference System (ANFIS) was used in modelling the tool wear-machining force relationships during end milling of the GFRP composites. Two different ANFIS models were developed, in which each of them was based on different data partitioning techniques, namely the grid partitioning techniques and subtractive clustering algorithm. Additionally, two distinguish MFs were applied in investigating the predictability of the ANFIS models. The results revealed that the ANFIS models were able to match the nonlinear relationship of tool wear and machining force highly effective compared to that of the simple power law of regression trend. It was also showed that the use of feed force, Fx
                      has produced accurate prediction as to that of cutting force, Fy
                     . Nevertheless, the accuracy of ANFIS models based on two data partitioning techniques and fuzzy MFs only exhibited marginally different predictive capability. It is imperative to be noted that the conclusions obtained in the current work cannot be extrapolated to other kind of machining operations, materials or tools. Nonetheless, it can be asserted that the results of this study can be used to monitor the extent of tool wear during end milling of GFRP composites.

@&#REFERENCES@&#

