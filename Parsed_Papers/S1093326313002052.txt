@&#MAIN-TITLE@&#MDWiZ: A platform for the automated translation of molecular dynamics simulations

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The MDWiZ platform for the one-click, automated translation of molecular dynamics simulation is presented.


                        
                        
                           
                           MDWiZ version 1.0 allows conversions from GROMACS to LAMMPS independently of the force field used and simulation set up with a 10−9
                              kJmol−1 internal numerical accuracy for energies.


                        
                        
                           
                           A rigorous validation on a set of molecular systems with complementary chemical topologies is presented.


                        
                        
                           
                           MDWiZ version 1.0 is freely accessible as a web portal.


                        
                        
                           
                           The MDWiZ platform is being extended to other software engines and force fields to automate format conversion and aid the accurate comparison of alternative simulation protocols.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Software

Force field

Language barrier

Molecular simulation

MD Wizard

Validation

@&#ABSTRACT@&#


               
               
                  A variety of popular molecular dynamics (MD) simulation packages were independently developed in the last decades to reach diverse scientific goals. However, such non-coordinated development of software, force fields, and analysis tools for molecular simulations gave rise to an array of software formats and arbitrary conventions for routine preparation and analysis of simulation input and output data. Different formats and/or parameter definitions are used at each stage of the modeling process despite largely contain redundant information between alternative software tools. Such Babel of languages that cannot be easily and univocally translated one into another poses one of the major technical obstacles to the preparation, translation, and comparison of molecular simulation data that users face on a daily basis. Here, we present the MDWiZ platform, a freely accessed online portal designed to aid the fast and reliable preparation and conversion of file formats that allows researchers to reproduce or generate data from MD simulations using different setups, including force fields and models with different underlying potential forms. The general structure of MDWiZ is presented, the features of version 1.0 are detailed, and an extensive validation based on GROMACS to LAMMPS conversion is presented. We believe that MDWiZ will be largely useful to the molecular dynamics community. Such fast format and force field exchange for a given system allows tailoring the chosen system to a given computer platform and/or taking advantage of a specific capabilities offered by different software engines.
               
            

@&#INTRODUCTION@&#

The use of computer simulations is increasingly relevant in various fields of molecular sciences. As a result, users from different backgrounds become interested in performing molecular simulations despite little formal training. A variety of popular molecular dynamics (MD) simulation packages such as AMBER [1], CHARMM [2], DESMOND [3], DLPOLY [4–6], GROMACS [7–9], GROMOS [10–12], LAMMPS [13], NAMD [14], NWChem [15], OpenMM [16], TINKER [17] were independently developed in the last decades to match diverse scientific needs. A brief history of the origins of this software development was presented [18]. These software engines allow performing MD simulations with alternative underlying force fields and numerous simulations setups, which are often difficult to be compared within single simulation packages. For example, this leads to the problem of validating results from different research groups or correctly reproducing data generated with force fields that have alternative mathematical forms of the energy terms, which requires entirely new software implementations to be performed [19].

In various fields of science, researchers agreed on general format requirements for sharing and validating data of common interest to the field. For example, structural biologists agreed upon the Protein Data Bank format as a common text format to store atomic level information of molecular structures. However, such a common ground has not yet been reached in the field of chemical theory and computation. The independent and non-cooperative development of software, force fields, and analysis tools for molecular simulations gave and still gives rise to an array of equally popular software formats to prepare the simulation input and generate the trajectories. Consequently, an increasing number of researchers spend an unreasonable amount of time to convert data that largely contains redundant type of information among different software tools (e.g. a dihedral potential term that represent a same energy function, yet is expressed following different dihedral conventions).

This Babel of computational modeling languages cannot be easily and univocally translated one into another leading to one of the major technical obstacles to the preparation, translation, comparison, and public accessibility of simulation data that users and developers face on a daily basis. Indeed, useful tools to aid the automated preparation of simulation topologies have been proposed. Yet, they either help users of specific software engines [20–22] or aid solely structural/chemical file format conversion (e.g. the Babel family of tools [23]). The latter approach is extremely valuable for a number of modeling scenarios, yet it is not sufficient to translate input files between molecular simulation software engines using alternative definitions of the underlying parameters and potentials. Therefore, a major problem in the molecular simulation field remains the translation of input files and formats and a rigorous assessment of what a force field comparison involves. This study is our first step to contribute with a practical solution to some of these issues.

Aiming to overcome this limitation, we present the MDWiZ platform, an online portal designed to perform fast and reliable preparation (e.g. input, topology, coordinate file formats) and parameter conversion (e.g. actual parameters in those files) across molecular dynamics software engines. The translation includes force fields and models with different underlying potential forms and any required format conversion (including different number of input files) for the desired software. The general structure of MDWiZ is presented and the features of version 1.0 are detailed. MDWiZ allows a user to transform in one single click a set of input files for a given combination of software engine and force field into various alternative combinations, as summarized by the workflow in Fig. 1
                     . This release focuses on translating input files from GROMACS to LAMMPS using different force fields followed by an extensive validation. MDWiZ is freely accessible to the public in the form of an openly accessible web interface, which includes features for user support, tutorials, and examples. The source code is also available upon request to the authors.

The diverse set of molecular systems simulated for validation of MDWiZ, ranging from methane to proteins, is summarized in Fig. 2
                     . Initial coordinates for the methane, ethane, propane and butane were generated with GaussView (version 5) [24]. N-methylacetamide and alanine dipeptide coordinates were generated manually. Initial coordinates for the solute atoms of the Trp-cage mini-protein were taken from the structure by Neidigh et al. [25] (PDB ID: 1L2Y) and the coordinates for the Triclinic Hew Lysozyme from the structure by Walsh et al. (PDB ID: 4LZT) [26]. Each system was independently simulated under vacuum and solvated conditions. Table 1
                      summarizes the system set up for the simulations in solution. In all cases, standard preparation, minimization, and simulation procedures were performed using the GROMACS software (version 4.6.1; compiled in double precision) [7–9]. We note that MDWiZ is also compatible with GROMACS 4.5.X versions.

A variety of force fields and simulation setup were compared in this study, as summarized in Table 2
                      and Supporting Information, Tables S1 and S2. Validation of MDWiZ conversions from GROMACS to LAMMPS was carried out using three different force fields. The GROMOS parameter set 53A6 was used [27] with the SPC water model [28] and compatible ion parameters [29]; the AMBER ff99SB [30] parameter set was chosen as representative of the force field family with the TIP3P water model [31] and compatible ion parameters [1,29]; transformation using the OPLS all atoms force field was employed [32] with the TIP3P water model [31] and compatible ion parameters [29]. The initial configurations were solvated under rectangular periodic boundary conditions in a (pre-equilibrated) water box large enough to avoid interactions between mirror images along the entire MD trajectory. A first steepest-descent energy minimization was performed in order to relax the initial solvent and ion configuration and to eliminate any residual strain. MD simulations were initialized from the energy-minimized configurations with atomic velocities taken from Maxwell–Boltzmann distributions at 300K. All simulations were carried out in the N, V, T ensemble by separately coupling the temperature of solute and solvent degrees of freedom to a heat bath through a weakly coupled algorithm [33] (relaxation time 0.6ps). Newton's equations of motion were integrated using the leap-frog algorithm [34] with a 1fs time step. The water molecules were kept rigid using the SETTLE algorithm [35] in the GROMACS and using the SHAKE algorithm [36] in LAMMPS. To avoid inconsistent comparison of simulations in GROMACS and LAMMPS, because different algorithms are currently implemented for approximation of the long-range interaction algorithm types in GROMACS and in LAMMPS, no long-range interaction was taken into account during the runs. Instead, all non-bonded interactions were directly calculated within a cut-off of 1.4nm [37]. In all cases, the non-bonded interaction list was updated at every step. MD snapshots were extracted every 1ps from each trajectory in full precision and used for analysis.

Supplementary material related to this article can be found, in the online version, at http://dx.doi.org/10.1016/j.jmgm.2013.12.006.

The following are Supplementary data to this article:
                        
                           
                        
                     
                  

We note that to reproduce the results presented in this study, the double precision trajectories from GROMACS (.trr files) are needed, as using compressed trajectories would lead to numerical inconsistencies. Conversion from GROMACS to LAMMPS trajectories was performed using the VMD software [38]. These double precision trajectories were used as input for LAMMPS rerun calculations. As described in Section 3, this procedure was undertaken in order to allow a direct validation of the transformation performed by MDWiZ, as identical structures are employed to calculate the energy terms of Table 2 and Supporting Information, Tables S1 and S2. Relative accuracy up to 10−9
                     kJmol−1 was used for all calculations. During the LAMMPS rerun calculations the force field energies were printed every step to compare to GROMACS ones. VMD [38], inkscape (inkscape.org), and xmgrace (http://plasma-gate.weizmann.ac.il/Grace/) were used to prepare the graphical representations. The first release of MDWiZ (version 1.0) can be freely accessed through a web interface at: http://barongroup.medchem.utah.edu/tools, which includes features for user support, tutorials, and examples. MDWiZ source code is programmed in C language in order to maintain direct transferability with the GROMACS libraries, and is available upon request to the authors.

@&#RESULTS@&#

The philosophy underlying MDWiZ is summarized in the workflow of Fig. 1. MDWiZ performs the automated translation between several input sets in terms of formats and actual parameters. MDWiZ automatically detects which of the format conversions and parameter translations are required based on the files provided by the user as a start, and the conversion of choice. In one simple user step, all input files for a given simulation set up are converted in corresponding input for a different software engine and/or force field. Parameters for force field terms with identical underlying potential forms may be expressed using different measure units or including conversion constants. The parameters are converted allowing the use of different simulation setups, even if different underlying potential forms are considered. We exemplify different scenarios in which MDWiZ will be a useful preparation and translation tool.

As a first example, the terms that represent the covalent bond-stretching interaction can be expressed as [11,12]
                     
                        
                           (1)
                           
                              
                                 
                                    V
                                    
                                       bond
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       n
                                       =
                                       1
                                    
                                    
                                       
                                          N
                                          b
                                       
                                    
                                 
                                 
                                    
                                       1
                                       4
                                    
                                    
                                       k
                                       
                                          
                                             b
                                             n
                                          
                                       
                                    
                                    
                                       
                                          (
                                          
                                             b
                                             n
                                             2
                                          
                                          −
                                          
                                             b
                                             
                                                
                                                   0
                                                   n
                                                
                                             
                                             2
                                          
                                          )
                                       
                                       2
                                    
                                 
                              
                           
                        
                     within the GROMOS force field typically used with GROMOS and GROMACS, where N
                     b is the number of covalent bonds in the topology, 
                        
                           
                              k
                              
                                 
                                    b
                                    n
                                 
                              
                           
                        
                      are the force constants and 
                        
                           
                              b
                              
                                 
                                    0
                                    n
                                 
                              
                           
                        
                      are the ideal bond lengths for the specific bond type. However, the force constants 
                        
                           
                              k
                              
                                 
                                    b
                                    n
                                 
                              
                           
                        
                      have to be transformed for the GROMOS force field in LAMMPS through corresponding parameters consistent with the underlying harmonic potential [1,12,32,39], i.e.
                        
                           (2)
                           
                              
                                 
                                    k
                                    
                                       
                                          b
                                          n
                                       
                                    
                                    
                                       harm
                                    
                                 
                                 =
                                 
                                    k
                                    
                                       
                                          b
                                          n
                                       
                                    
                                 
                                 2
                                 
                                    b
                                    
                                       
                                          0
                                          n
                                       
                                    
                                    2
                                 
                                 .
                              
                           
                        
                     
                  


                     Fig. 3
                      shows the correspondence between the energy term of Eq. (1) and the corresponding harmonic energy term obtained applying Eq. (2) 
                     [12].

As a second example, alternative software engines and force fields may express the terms that describe the covalent dihedral potentials as [11,12].
                        
                           (3)
                           
                              
                                 
                                    V
                                    
                                       dihed
                                    
                                 
                                 =
                                 
                                    k
                                    ϕ
                                 
                                 (
                                 1
                                 +
                                 cos
                                 (
                                 n
                                 ϕ
                                 −
                                 γ
                                 )
                                 )
                                 ,
                              
                           
                        
                     
                  

(e.g. GROMOS) where γ is the phase shift due to dihedral periodicity, or using Fourier functions such as the Ryckaert–Bellemans (RB) function [40]
                     
                        
                           (4)
                           
                              
                                 
                                    V
                                    
                                       RB
                                    
                                    
                                       dihed
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       n
                                       =
                                       0
                                    
                                    5
                                 
                                 
                                    
                                       C
                                       n
                                    
                                    
                                       
                                          (
                                          cos
                                           
                                          ψ
                                          )
                                       
                                       n
                                    
                                 
                                 =
                                 
                                    1
                                    2
                                 
                                 [
                                 
                                    F
                                    1
                                 
                                 (
                                 1
                                 +
                                 cos
                                  
                                 ϕ
                                 )
                                 +
                                 
                                    F
                                    2
                                 
                                 (
                                 1
                                 −
                                 cos
                                  
                                 2
                                 ϕ
                                 )
                                 +
                                 
                                    F
                                    3
                                 
                                 (
                                 1
                                 +
                                 cos
                                  
                                 3
                                 ϕ
                                 )
                                 +
                                 
                                    F
                                    4
                                 
                                 (
                                 1
                                 −
                                 cos
                                  
                                 4
                                 ϕ
                                 )
                                 ]
                              
                           
                        
                     with ψ
                     =
                     ϕ
                     −180°, where the dihedrals are defined using the IUPAC/IUB convention, and ψ is defined according to the polymer convention (i.e. ψ
                     trans
                     =0). RB functions are used e.g. within OPLS in GROMACS. Fig. 4
                      shows the correspondence between the RB function (second term of Eq. (4)) and the corresponding rightmost term of Eq. (4).

When needed for proper translation, MDWiZ converts one dihedral term into another by translating the RB F
                     
                        n
                      parameters in Eq. (4) as:
                        
                           (5)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      F
                                                      1
                                                   
                                                   =
                                                   −
                                                   2
                                                   
                                                      C
                                                      1
                                                   
                                                   −
                                                   
                                                      3
                                                      2
                                                   
                                                   
                                                      C
                                                      3
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      F
                                                      2
                                                   
                                                   =
                                                   −
                                                   
                                                      C
                                                      4
                                                   
                                                   −
                                                   
                                                      C
                                                      2
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      F
                                                      3
                                                   
                                                   =
                                                   −
                                                   
                                                      1
                                                      2
                                                   
                                                   
                                                      C
                                                      3
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      F
                                                      4
                                                   
                                                   =
                                                   −
                                                   
                                                      1
                                                      4
                                                   
                                                   
                                                      C
                                                      4
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     known the corresponding C
                     
                        n
                      parameters of Eq. (4) 
                     [12].

However, other force fields (e.g. OPLS) use a different number of coefficients C
                     
                        n
                      depending on the specific dihedral considered, and involve additional conversions from polymer-to-protein dihedral convention (i.e. ϕ
                     trans
                     =0). In this case, Eq. (4) can be recovered using Eq. (5) as
                        
                           (6)
                           
                              
                                 
                                    V
                                    
                                       dihed
                                    
                                 
                                 =
                                 
                                    1
                                    2
                                 
                                 [
                                 
                                    F
                                    1
                                 
                                 (
                                 1
                                 +
                                 cos
                                  
                                 ϕ
                                 )
                                 +
                                 
                                    F
                                    2
                                 
                                 (
                                 1
                                 −
                                 cos
                                  
                                 2
                                 ϕ
                                 )
                                 +
                                 
                                    F
                                    3
                                 
                                 (
                                 1
                                 +
                                 cos
                                  
                                 3
                                 ϕ
                                 )
                                 +
                                 
                                    F
                                    4
                                 
                                 (
                                 1
                                 +
                                 cos
                                  
                                 4
                                 ϕ
                                 )
                                 ]
                                 ,
                              
                           
                        
                     where we note that the sign preceding the last term changed from − to + as a consequence of the different conventions employed to define the dihedral.

In addition, different software engines implement these terms differently to achieve best performance. For example, GROMACS implements OPLS dihedral terms using the cosine relationship of Eq. (4) as it is more efficient than a corresponding Fourier counterpart implementation. Other possible complications arise from different mixing and exclusion rules for the treatment of the non-bonded interactions. In all cases, MDWiZ automatically performs all transformations required to convert input formats and parameters. For example, the force field terms needed to define and represent a simple dihedral energy term result into a total of four different implementations based on the simulation frameworks considered. It is obvious that preparation and translation of entire simulation input and set up cannot be performed on a manual basis, as this results in numerous complex transformations even for small and simple molecules.

The two illustrative examples presented show that – despite the simplicity of the information contained in a force field for a given engine software (the covalent bond terms or the dihedral angle terms) – multiple and complex conversions are required when translating these terms between alternative simulation setup, making this conversion generally highly error-prone or impossible to be achieved within the current software implementations. Independently of the conversion required, MDWiZ prepares the input files in one user-step to ensure a proper translation of alternative force fields and simulation setup.

A few additional points are worth it mentioning: (1) only some force fields distinguish the dihedral terms between proper (actual dihedral torsions) and improper (dihedrals that are introduced to fix specific out-of-plane stereochemistry) entries (e.g. GROMOS); (2) different force fields have a different treatment of the exclusions in the list of bonded interactions. For example, 1–4 bonded interactions can be excluded in the list of non-bonded interactions to be calculated; (3) different force fields express their parameters with different measure units or multiplying pre-factor constants in the parameter sets. MDWiZ takes care of all these translation issues depending on the software engine and/or force field conversion required by the user. We point out that while the description herein was kept simple using specific examples, support documentation and examples are available on the MDWiZ web interface. At any rate, any deficiency in MDWiZ translation and conversion discussed would result in major energetic differences in the simulated systems presented as validation benchmarks.

Validation was carried out for each system under both vacuum and explicit-solvent conditions. The setup for the explicit solvent simulations is summarized in Table 1. In this release, we have chosen to focus on the conversion between GROMACS to LAMMPS simulation engines using different force fields (AMBER, GROMOS, and OPLS/aa). This choice is motivated by the fact that it includes challenging transformations in terms of the underlying energy forms, as discussed in the previous paragraphs. For validation, a variety of energetic properties of the systems were monitored. They include the total system potential energy, the total system Coulomb energy, the van der Waals energy, and the decomposed force field energy terms for the bond, angles, and dihedral energy terms. The improper dihedral energy terms are also considered for the GROMOS force field; the improper dihedral terms are instead considered within the standard dihedrals in the AMBER and OPLS/aa force fields, as the latter force fields do not make a formal distinction between these degrees of freedom. The full validation data is reported in Supporting Information, Table S1, which includes the actual output with full significant digits (up to 10−9
                     kJmol−1). It is important to note that the validation presented was performed on the basis of single-point calculations that run the LAMMPS rerun routine on GROMACS-generated MD snapshots. This procedure ensures full independence on the trajectory used for validating the individual energy terms in the force field, as calculated by independent software engines.

For each of these energy terms, the ratio of the average values between the simulation setup is considered as indicative of proper conversion within the scope of MDWiZ. A ratio value of 1 shows that the translation performed by MDWiZ can produce identical simulations to be performed with the output setup. Fig. 5
                      shows an example of the GROMACS/LAMMPS energy ratio time series for all force field potential energy terms in the case of the Triclinic Hew Lysozyme for simulations with GROMOS, AMBER, and OLPS force fields prepared by MDWiZ. From the validation set of Fig. 2, the Lysozyme system is the largest and expectedly found to be the one where deviations are more pronounced. Similar analyses were performed for all systems and Table 2 summarizes the validation of MDWiZ in terms of the ratio values. In most cases a perfect match (unit ratio) is found. However, a 1–3% difference in the non-bonded energy terms is found when comparing GROMACS vs. LAMMPS setup in the case of the GROMOS force field. A careful analysis of these results indicates that this difference does not arise from the MDWiZ conversion algorithms, but it is instead due to the different cutoff and switch schemes implemented in GROMACS (described in Appendix of Ref. [41]) and LAMMPS (the “CHARMM” functional form implemented in LAMMPS was used as described in Ref. [42]). More details are provided as Supporting Information (Table S1) including the mean values of most relevant energy terms as calculated throughout the explicit solvent molecular dynamics runs. The same calculations were repeated for the systems in vacuum (see Supporting Information, Table S2) confirming the robustness of MDWiZ.

We note that MDWiZ is meant to help users, but it is out of its scope to improve or complement capabilities of the software engine involved in the desired translation. Therefore, it is important to keep in mind that if an algorithm is intrinsically missing (e.g. different cutoff and switches schemes implemented) this will lead to somewhat different treatment of the simulation conditions. When identical algorithms are not implemented in the “input” and “output” engines involved in the desired conversion minor differences are expected, such as those observed and described above for the non-bonded energy terms (1–3% difference for GROMACS vs. LAMMPS for the GROMOS force field). Nevertheless, MDWiZ will provide the “best possible” files to perform the simulation in the software of choice. It is also important noting that force fields are compared routinely including some arbitrary contribution due to the specifics of the software engine that is chosen for that comparison. In this context, MDWiZ can be easily employed to yield more rigorous comparisons as part of force field comparison studies.

Overall, we have demonstrated that the MDWiZ tool (version 1.0) enables the automated conversion of GROMACS files for simulations with GROMOS, AMBER, and OPLS/AA force fields for simulations into LAMMPS with accuracy as high as the internal accuracy provided by the engines considered. The conversion capabilities are extended to various water models. In the future, new features will be implemented in MDWiZ to extend the translation to other software engines, as summarized in Fig. 1.

Documentation and details of the progress and release of new versions of the MDWiZ tool can be accessed at: http://barongroup.medchem.utah.edu/tools.

@&#CONCLUSIONS@&#

We have presented the first release of the MDWiZ tool, an online platform for the fast and reliable conversion of MD simulations input files. MDWiZ allows the user to translate different MD engine setup options, including force fields and models with different underlying potential forms. MDWiZ is freely accessible to the community as a web interface. The platform allows for: (i) force field comparison across software engines; (ii) to take advantage of specific features of different MD software packages without dealing with new topology formats and the learning curve associated with new pre-processing tools; and, (iii) easy matching of code efficiency to computer architecture for a system that was initially generated with a MDWiZ supported input format. Overall, MDWiZ will be useful to the broad computational chemistry community for avoiding waste of time and resources in file and format conversion, for enhancing the reproducibility of simulation data, and for helping the accurate comparison of alternative simulation protocols. However, we believe that a broader solution and a general agreement on formats specification similarly to what done for the Protein Data Bank formats would be extremely beneficial on the longer period for the molecular simulation field. We hope this study will contribute to stimulate a general agreement in this direction.

@&#ACKNOWLEDGMENTS@&#

This work was supported by startup funds from the Department of Medicinal Chemistry, The University of Utah (R.B.). We acknowledge the Center of High Performance Computing for technical support and allocation of computer time and a generous allocation at the Extreme Science and Engineering Discovery Environment (XSEDE) supercomputers (award TG-CHE120086 to R.B.). XSEDE is supported by National Science Foundation grant number OCI-1053575. Support from the Brazilian government to V.H.R. through a Nanobiotec-BR/CAPES scholarship Proc. 9614-12-5 and to V.A.C.H through a CAPES/Ciências sem Fronteiras scholarship is warmly acknowledged. R.B. warmly thanks Eveline Bruenger for a generous donation to the Baron group development fund.

@&#REFERENCES@&#

