@&#MAIN-TITLE@&#A new mixed integer programming model for curriculum balancing: Application to a Turkish university

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Relevance Based Curriculum Balancing (RBCB) is a new model for curriculum design.


                        
                        
                           
                           We linearize the RBCB model and find an exact solution by using Xpress MP Solver.


                        
                        
                           
                           RBCB aims at assigning relevant courses to closest possible periods.


                        
                        
                           
                           RBCB gives a fully balanced solution, with better assignments for relevant courses.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Linear programming

Education

Curriculum design

Balanced academic curriculum problem

Generalized quadratic assignment problem

Lagrangian relaxation

@&#ABSTRACT@&#


               
               
                  Curriculum design is a highly important activity for the academic institutions. It is discussed in literature as a balancing academic curriculum problem (BACP). The BACP schedules courses to different semesters, while balancing the total workload per period. BACP model involves precedence relations, but the related courses are not necessarily assigned to closest periods.
                  The Relevance Based Curriculum Balancing (RBCB) models presented in this paper are the first implementation of Generalized Quadratic Assignment Problem (GQAP) to curriculum design. RBCB aims at assigning relevant courses to closest possible periods in a way that academic load per semester is balanced and prerequisite conditions are met simultaneously. RBCB models are applied to Fatih University Industrial Engineering Department undergraduate curriculum and comparative performances of different RBCB and BACP models are examined in terms of relevance and balancing efficiency.
               
            

@&#INTRODUCTION@&#

Time scheduling is a popular research field in the academic environment. It covers many real life phenomena such as determination of departure time slots of vehicles, rostering and job scheduling. Among these, curriculum design, exam and course timetabling are very critical planning activities for academic institutions.

Design of academic curriculum, also known as curriculum planning or curriculum layout, aims at efficient utilization of student efforts by balancing total workload per semester. Workload of a course represents the total time an average student spends both in and outside class (i.e. lectures, projects, self-study, practical work and examinations, etc.) required to achieve the expected learning outcomes.

Balanced Academic Curriculum Problem (BACP), firstly introduced by Castro and Manzano (2001), is a special variation of curriculum planning. It aims at scheduling all the courses while meeting the prerequisite conditions and balancing the workloads of semesters (Monette, Schaus, Zampelli, Deville, & Dupont, 2007). BACP holds significance for course timetabling because it reduces the total weekly lecture hours of a student (Chiarandini, Di Gaspero, Gualandini, & Schaerf, 2012; Schaerf, 1999).


                     Hnich, Kızıltan, and Walsh (2002) and Castro and Manzano (2001) compared different BACP models based on constraint and integer programming in terms of performance and solution quality. Lambert, Castro, Monfroy, and Saubion (2006) developed hybrid techniques for BACP utilizing genetic algorithms and constraint programming.


                     Di Gaspero and Schaerf (2008) developed Generalized BACP (GBACP) extending the BACP models by adding lecturer preferences criterion. Chiarandini et al. (2012) introduced an integer programming model and heuristic solution method for GBACP based on hybrid local search techniques.

In undergraduate curricula of higher education institutions, there are generally 8 semesters and around 40 courses. A course establishing the fundamentals of a more advanced course is treated as the prerequisite and scheduled earlier in the curriculum.

In the previous studies, BACP is formulated as a variant of Generalized Assignment Problem (GAP) or bin-packing problem and the courses are assigned to semesters while meeting prerequisite conditions (Monette et al., 2007). But there is no special precaution for assigning a specific course and its prerequisite as close as possible. For instance, the prerequisite of a course in the 7th semester can be assigned to the 1st, 2nd or 3rd semesters. But of course, it would be much better to locate the prerequisite course just before its latter course (i.e. the 6th semester in this case). Furthermore, designating the pair to the “Semester 5–6” instead of “Semester 6–7” would still be another improvement, considering the long summer vacation. To sum up, BACP satisfies the prerequisite conditions but it doesn’t have an objective of assigning related courses as close as possible.

This study intends to design a curriculum that will better fit to real life situations by assigning relevant courses to closest possible periods while meeting all the constraints of BACP. To achieve this goal, curriculum balancing is modeled as a Generalized Quadratic Assignment Problem (GQAP), which is a totally new approach for curriculum design.

GQAP is a special type of Quadratic Assignment Problem (QAP). GQAP and QAP both aim at minimizing the total pair-wise transportation cost between facilities, also known as interaction or traffic cost (i.e. distance*two-way flow). The difference is that, QAP assigns M facilities to M locations while GQAP assigns M facilities to N locations (N
                     <
                     M).

GQAP is not a linear model; it can be transformed into mixed integer programming using different linearization techniques. Since GQAP is strongly NP-Hard (Lee & Ma, 2004; Pessoa, Hahn, Guignard, & Zhu, 2010), obtaining an exact solution is impossible for big size problems. Heuristic methods are used for those problems, but they don’t guarantee the optimal solution. For small size instances, exact algorithms such as cutting plane, branch and bound can give the optimal solution.


                     Lee and Ma (2004) introduced the first formulation of GQAP. They utilized it to locate multiple equipments to four manufacturing sites by minimizing the total transportation and installation costs. They proposed 3 different linearization techniques and a branch and bound algorithm to find the optimum solution of GQAP.


                     Hahn, Kim, Guignard, Smith, and Zhu (2008) presented a branch and bound algorithm based on a reformulation linearization technique (RLT) and dual ascent procedure to solve a Lagrange formulation of GQAP.


                     Pessoa et al. (2010) developed two hybrid branch and bound methods inspired from the study of Hahn et al. The methods calculate much stronger lower bounds for relaxed GQAP, one using the pure volume algorithm, the other using a combination of the volume algorithm and the transformational lower bounding procedure.


                     Cordeau, Gaudioso, Laporte, and Moccia (2007) considered the service allocation problem as a GQAP. They aimed at minimizing rehandling operation cost (yard to yard container transfers) and proposed a memetic heuristic that comprises genetic algorithm and tabu search.


                     McKendall Jr. (2008) denoted how the dynamic space allocation problem could be modeled as a GQAP. He developed 3 different tabu search heuristics that assign idle resources to storage locations in multiple periods by minimizing the sum of preparation and two-way transportation costs.


                     Hahn, Smith, and Zhu (2008) developed a multi-objective 3 dimensional GQAP model for multi-story assignment problem that assigns the departments to different floors of the building by minimizing inter-departmental traffic and evacuation cost simultaneously.


                     Yagiura et al. (2007) introduced a Multi-resource GQAP (MRGQAP) that aims at minimizing the pair-wise cost assignment of jobs to agents subject to cardinality and multi-resource constraints. They proposed a heuristic algorithm called path relinking with chained shift neighborhood.

The original GQAP aims at optimally assigning facilities to locations without violating the space limitation of each location. In this study, courses and semesters are taken as facilities and locations respectively, and relevant courses are assigned to closest possible semesters. However, GQAP does not have any objective for balancing the space utilization of each location. So, the balance violation is formulated as a cost and integrated into the GQAP model. Thus, we end up with a bi-objective (specialized GQAP) model that aims at assigning relevant courses to closest possible periods in a way that academic load per semester is balanced and prerequisite conditions are met.

The proposed model is quadratic but the problem at hand (M
                     =46 and N
                     =9) is not very big in size. So, it is transformed into mixed integer linear programming (MILP) by using an appropriate linearization technique by Frieze and Yadegar (1983). Then, the exact solution of the problem is obtained by using exact integer programming solver ‘mmxprs’ of FICO® Xpress Optimization Suite.

The outline of the paper is as follows: Section 2 is about problem definition. The common and distinct features of BACP and the proposed model are presented here. Section 3 explains the new model in detail, while different exact solution methodologies are handled in Section 4. Section 5 covers the application of the proposed model to Fatih University Industrial Engineering Department undergraduate curriculum. Section 6 gives experimental results and discussion on the new models. Finally, the article ends with a conclusion that compares the proposed model, BACP and GBACP, emphasizing the novel contributions. Some future work that can be accomplished to meet other real life requirements are also mentioned.

According to Castro and Manzano; the BACP should encapsulate the following regulations (Castro & Manzano, 2001):
                        
                           •
                           
                              Academic curriculum: An academic curriculum is designed by a set of courses and a set of prerequisite relationships among them.


                              Number of periods: Courses must be assigned within a maximum number of academic periods.


                              Academic load: Each course has been associated with a number of credits or units that represent the academic effort required to successfully follow it.


                              Prerequisites: Some courses can have other courses as prerequisites.


                              Minimum academic load: A minimum amount of academic credits per period required to consider a student as full time.


                              Maximum academic load: A maximum amount of academic credits per period allowed in order to avoid overload.


                              Minimum number of courses: A minimum number of courses per period required to consider a student as full time.


                              Maximum number of courses: A maximum number of courses per period allowed in order to avoid overload.

However, in real life, balancing the academic workload per period and satisfying prerequisite conditions are not the only criteria for curriculum design. Academic workload of lecturers per semester and the distance between specific courses are some other criteria that can be used (Chiarandini et al., 2012).

The proposed model in this paper, which is a customized version of GQAP, considers the following criteria distinct from other models in literature:
                        
                           •
                           
                              Relevance score: It is a two dimensional (course*course) matrix that defines the level of fundamental information a course includes for latter courses.


                              Closest layout for relevant courses: Relevant courses should be assigned to the closest possible periods.


                              Workload of students: It is taken as European Credit Transfer and Accumulation System (ECTS) credits.

In a curriculum, there can be several Technical Elective (TE) and General Elective (GE) courses. However, BACP models in literature do not consider TEs and GEs. TEs are generally selected from a specific list of courses, while GEs can be selected among all courses that are neither in the “Compulsory Courses” nor “Technical Elective Courses” lists. Since students are free to select the elective courses among a number of alternatives, different combination of elective courses will generate different curriculum plans. However, for most of the cases, suggesting different type of curricula is not practically feasible; therefore departments offer standard curricula to their students.

For the elective courses; the proposed model has the following assumptions:
                        
                           •
                           Since the contents of GEs are quite different than the Compulsory Courses and TEs, it is assumed that the relevance scores and prerequisite conditions between the GEs and all other courses are zero.

TEs are generally interrelated with one another and the Compulsory Courses. To be able to offer a standard curriculum, mostly selected TEs are used.

This section explains how the proposed model, which will be called Relevance Based Curriculum Balancing (RBCB) from now on, is formulated as bi-objective Mixed Integer Linear Programming (MILP).

The distinctive goal of the proposed RBCB model is assigning relevant courses as close as possible. This is the novelty of the model that makes it different from the BACP models in literature.

But also, RBCB has to ensure the workloads being distributed to the semesters in a balanced fashion. To achieve this goal, the degree of “balance violation” (i.e. deviation from the average workload) is calculated for each semester and penalized in the objective function.

That is, the objective function of the proposed model consists of two criteria. One is for the minimization of the distance between the relevant courses, the other for penalizing the deviation from the average workload per semester. Here it should be noted that, relevance and workload balance are two conflicting objectives.
                        
                           
                              
                              
                              
                              
                              
                                 
                                    Parameters: Let
                                    
                                    
                                    
                                 
                                 
                                    
                                       C
                                    
                                    :Number of Courses
                                    
                                    
                                    
                                 
                                 
                                    
                                       Per
                                    
                                    :Number of Periods
                                    
                                    
                                    
                                 
                                 
                                    
                                       ECTSm
                                       
                                    
                                    :Workload of Coursem
                                       
                                    
                                    :set(C)
                                    :∀ m
                                       =0,…,
                                       C
                                    
                                 
                                 
                                    
                                       Prmn
                                       
                                    
                                    :Prerequisites Conditions
                                    
                                    
                                       set(C
                                       ×
                                       C)
                                    :∀ m
                                       ⋀
                                       n
                                       =0…,
                                       C
                                    
                                 
                                 
                                    
                                    :If Coursem is prerequisite of Coursen is Prmn
                                       
                                       =1; Otherwise Prmn
                                       
                                       =0
                                 
                                 
                                    
                                       RSmn
                                       
                                    
                                    :Relevance Score
                                    
                                    :set(C×C)
                                    :∀ m
                                       ⋀
                                       n
                                       =0,…,
                                       C
                                    
                                 
                                 
                                    
                                       μ
                                    
                                    :Average of total ECTSm per period
                                    
                                    
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   d
                                                
                                                
                                                   jk
                                                
                                             
                                          
                                       
                                    
                                    :Distance between each period
                                    
                                    :set(Per
                                       
                                       ×
                                       
                                       Per)
                                    :∀ j
                                       ⋀
                                       k
                                       =0,…,
                                       Per
                                    
                                 
                                 
                                    
                                       λ
                                    
                                    :Penalty Constant
                                    
                                    
                                       
                                          
                                             :
                                             λ
                                             ⩾
                                             0
                                          
                                       
                                    
                                    
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                              
                              
                                 
                                    Decision variables: Let
                                    
                                 
                                 
                                    
                                       xmj
                                       
                                    
                                    
                                       
                                          
                                             =
                                             
                                                
                                                   
                                                      If
                                                      
                                                      
                                                         
                                                            Course
                                                         
                                                         
                                                            m
                                                         
                                                      
                                                      
                                                      is
                                                      
                                                      assigned
                                                      
                                                      to
                                                      
                                                      
                                                         
                                                            Period
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      ;
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            mj
                                                         
                                                      
                                                      =
                                                      1
                                                      
                                                      ∀
                                                      m
                                                      =
                                                      0
                                                      ,
                                                      …
                                                      ,
                                                      C
                                                      ∧
                                                      
                                                      ∀
                                                      j
                                                      =
                                                      0
                                                      ,
                                                      …
                                                      ,
                                                      Per
                                                   
                                                
                                                
                                                   
                                                      Otherwise
                                                      ;
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            mj
                                                         
                                                      
                                                      =
                                                      0
                                                   
                                                
                                                
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       xnk
                                       
                                    
                                    
                                       
                                          
                                             =
                                             
                                                
                                                   
                                                      If
                                                      
                                                      
                                                         
                                                            Course
                                                         
                                                         
                                                            m
                                                         
                                                      
                                                      
                                                      is
                                                      
                                                      assigned
                                                      
                                                      to
                                                      
                                                      
                                                         
                                                            Period
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      ;
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            mj
                                                         
                                                      
                                                      =
                                                      1
                                                      
                                                      ∀
                                                      m
                                                      =
                                                      0
                                                      ,
                                                      …
                                                      ,
                                                      C
                                                      ∧
                                                      
                                                      ∀
                                                      j
                                                      =
                                                      0
                                                      ,
                                                      …
                                                      ,
                                                      Per
                                                   
                                                
                                                
                                                   
                                                      Otherwise
                                                      ;
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            mj
                                                         
                                                      
                                                      =
                                                      0
                                                   
                                                
                                                
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       Loadj
                                       
                                    
                                    =
                                       Total ECTS of the Courses in Periodj
                                       
                                    
                                 
                                 
                                    
                                       MLoad
                                    
                                    =
                                       The Maximum Total ECTS of the Courses per period
                                    
                                 
                                 
                                    
                                       L(y)
                                    =
                                       Balance Score (slack variable)
                                 
                              
                           
                        
                     Objective Function: Let
                        
                           (1)
                           
                              Min
                              
                              R
                              (
                              x
                              )
                              +
                              B
                              (
                              L
                              (
                              y
                              )
                              )
                           
                        
                     
                     
                        
                           (2)
                           
                              R
                              (
                              x
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       0
                                    
                                    
                                       Per
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       0
                                    
                                    
                                       Per
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                       =
                                       0
                                    
                                    
                                       C
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       n
                                       =
                                       0
                                    
                                    
                                       C
                                    
                                 
                              
                              (
                              
                                 
                                    RS
                                 
                                 
                                    mn
                                 
                              
                              *
                              
                                 
                                    d
                                 
                                 
                                    jk
                                 
                              
                              *
                              
                                 
                                    x
                                 
                                 
                                    mj
                                 
                              
                              *
                              
                                 
                                    x
                                 
                                 
                                    nk
                                 
                              
                              )
                           
                        
                     
                     
                        
                           (3)
                           
                              B
                              (
                              L
                              (
                              y
                              )
                              )
                              =
                              λ
                              *
                              L
                              (
                              y
                              )
                              :
                              Balancing
                              
                              criteria
                              
                              (
                              i
                              .
                              e
                              .
                              :
                              
                              violations
                              
                              of
                              
                              balance
                              
                              score
                              )
                           
                        
                     
                  

The first criterion of the objective function is represented as ‘R(x)’ and aims at minimizing the total layout cost (i.e. distance*relevance score). Thus, related courses will be assigned to closest periods. In other words, R(x) is formulated based on the GQAP model; similar to the objective of minimizing transportation cost (i.e. distance*two-way flow). Here, courses refer to facilities, relevance score refers to material flow between facilities and semesters refer to locations.

The second criterion (‘B(L(y)’ function in our model) is used for balancing the workloads per semester (WLpS) in a curriculum. Here, ‘L(y)’ is a function that represents several different balance norms as follows (Chiarandini et al., 2012; Lambert et al., 2006; Schaus, 2009):
                        
                           (i)
                           
                              L
                              0(y)=Number of semesters with workloads different than the average.


                              L
                              1(y)=Sum of absolute deviations from the average.


                              L
                              2(y)=Sum of square deviations from the average.


                              L
                              ∞(y)=The maximum absolute deviation from the average.


                              Lmax
                              (y)=The maximum positive deviation from the average.

RBCB models penalize these norms in the objective function. All the norms, other than L
                     2, can be utilized in accordance with LP. Thus, four linearized RBCB models, each one constructed using a different norm, and related equation sets are presented in Table 1
                     .

Relevance score (RSmn
                     ) in Eq. (2) represents the level of interdependency between Coursem
                      and Coursen
                     . To find out relevance score of the courses, a 0–9 rating scale is used as follows: If there is a strong relationship between two courses, relevance score approaches ‘9’, while score gets closer to ‘0’ if the relation is weak.

In order to fully understand the cost component of R(x) in objective function, two dimensional distance matrix (i.e. djk
                     ) should be clarified. Actually, difference between the semesters of the two related courses (k
                     −
                     j) could be used as a distance parameter. The reason behind preferring to use a ‘djk
                     ’ matrix is that it enables us to differentiate between half-term and summer vacations. The summer vacation period is about 3months’ idle time for students. Half-term is just 2–3weeks’ time. So, it is not reasonable to assume that distances between two consecutive semesters are the same regardless of the type of vacation period between them. To distinguish summer vacation and half-term, the distances between fall–spring semesters (1–2, 3–4, 5–6, 7–8) are smaller than the distances between spring–fall semesters (2–3, 4–5, 6–7). All the entries below the main diagonal of the distance matrix are penalty constants to force model not to assign latter course before the fundamental course (see Table 2
                     ).

Many undergraduate curricula contain basic courses of natural sciences, such as Calculus, Physics, and Chemistry. The fundamentals of these courses are given in high school education. To fill the gap between high school and university freshman courses, the model incorporates an initial dummy period in addition to the regular 8 semesters. High school education is represented as a single course (Course
                     0) that can only be assigned to the dummy period. This initial period is called 0th semester, and no university course can be assigned to that period. Eq. (4) assigns Course
                     0 to the 0th semester and Eq. (5) prevents the assignment of any course other than the high school courses to this initial dummy period. Eq. (6) denotes that every course must be assigned to a specific period j.
                        
                           (4)
                           
                              
                                 
                                    X
                                 
                                 
                                    0
                                    ,
                                    0
                                 
                              
                              =
                              1
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                       =
                                       0
                                    
                                    
                                       C
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    m
                                    0
                                 
                              
                              =
                              1
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       0
                                    
                                    
                                       Per
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    mj
                                 
                              
                              =
                              1
                              
                              ∀
                              m
                              =
                              0
                              ,
                              …
                              ,
                              C
                           
                        
                     
                  

Let’s recall that the objective function tries to assign relevant courses to the same period to minimize the total cost. Eq. (7) is for the prerequisite courses and it ensures that Coursem
                      and Coursen
                      are assigned to closest possible (preferably adjacent) periods, while avoiding them to be located at the same period.
                        
                           (7)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       0
                                    
                                    
                                       Per
                                    
                                 
                              
                              (
                              j
                              ∗
                              
                                 
                                    x
                                 
                                 
                                    mj
                                 
                              
                              )
                              +
                              1
                              ⩽
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       0
                                    
                                    
                                       Per
                                    
                                 
                              
                              (
                              k
                              ∗
                              
                                 
                                    x
                                 
                                 
                                    nk
                                 
                              
                              )
                              
                              ∀
                              m
                              ∧
                              n
                              0
                              ,
                              …
                              ,
                              C
                              |
                              
                                 
                                    Pr
                                 
                                 
                                    mn
                                 
                              
                              =
                              1
                           
                        
                     
                  

Now, we will concentrate on different norms used in our model for penalizing the balance violations. Firstly, linear constraints of the L
                     0 norm are given in the following equations:
                        
                           (8)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                    
                                    
                                       C
                                    
                                 
                              
                              (
                              
                                 
                                    ECTS
                                 
                                 
                                    m
                                 
                              
                              ∗
                              
                                 
                                    X
                                 
                                 
                                    mj
                                 
                              
                              )
                              =
                              
                                 
                                    Load
                                 
                                 
                                    j
                                 
                              
                              
                              ∀
                              j
                              =
                              0
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              =
                              (
                              
                                 
                                    Load
                                 
                                 
                                    j
                                 
                              
                              -
                              μ
                              )
                              
                              ∀
                              j
                              =
                              0
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    +
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    -
                                 
                              
                              
                              ∀
                              j
                              =
                              0
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (11)
                           
                              
                                 
                                    z
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    ⩾
                                 
                                 
                                    (
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    +
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    -
                                 
                              
                              )
                              /
                              μ
                              
                              ∀
                              j
                              =
                              0
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    L
                                 
                                 
                                    o
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                    
                                    
                                       Per
                                    
                                 
                              
                              
                                 
                                    z
                                 
                                 
                                    j
                                 
                              
                           
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              
                              is
                              
                              free
                              ;
                              
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    +
                                 
                              
                              ∧
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    -
                                 
                              
                              ⩾
                              0
                              
                              ∀
                              j
                              =
                              0
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (14)
                           
                              
                                 
                                    z
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    
                                       If
                                       
                                       
                                          
                                             Load
                                          
                                          
                                             j
                                          
                                       
                                       
                                       ≠
                                       
                                       μ
                                       ;
                                       
                                       
                                          
                                             z
                                          
                                          
                                             j
                                          
                                       
                                       =
                                       1
                                    
                                 
                                 
                                    
                                       Otherwise
                                       ;
                                       
                                       
                                          
                                             z
                                          
                                          
                                             j
                                          
                                       
                                       =
                                       0
                                       
                                       ∀
                                       j
                                       =
                                       0
                                       ,
                                       …
                                       ,
                                       Per
                                    
                                 
                              
                           
                        
                     
                  

Let us recall that aims at finding L
                     0 number of semesters with workloads different than the mean (i.e. 
                        
                           
                              
                                 Load
                              
                              
                                 j
                              
                           
                           
                           ≠
                           
                           μ
                        
                     ). Firstly, the sum of ECTS credits per semester is calculated in Eq. (8). Then, the magnitude of deviation from average workload is computed for each period via Eq. (9) while Eq. (10) determines the absolute values of each deviation. Eq. (11) transfers the deviation to the 0–1 scale by dividing each deviation by the mean, which is a big enough number. And finally, the value of is calculated in Eq. (12).

The second norm used is L
                     1, which measures the total absolute deviation from the mean (Eq. (15)). The rest of the equations are the same as:
                        
                           (15)
                           
                              
                                 
                                    L
                                 
                                 
                                    1
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                    
                                    
                                       n
                                    
                                 
                              
                              (
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    +
                                 
                              
                              +
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    -
                                 
                              
                              )
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                    
                                    
                                       C
                                    
                                 
                              
                              (
                              
                                 
                                    ECTS
                                 
                                 
                                    m
                                 
                              
                              ∗
                              
                                 
                                    x
                                 
                                 
                                    mj
                                 
                              
                              )
                              =
                              
                                 
                                    Load
                                 
                                 
                                    j
                                 
                              
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              =
                              (
                              
                                 
                                    Load
                                 
                                 
                                    j
                                 
                              
                              -
                              μ
                              )
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              =
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    +
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    -
                                 
                              
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                              
                              is
                              
                              free
                              ;
                              
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    +
                                 
                              
                              ∧
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                                 
                                    -
                                 
                              
                              ⩾
                              0
                              
                              ∀
                              j
                              =
                              0
                              ,
                              …
                              ,
                              Per
                           
                        
                     Another norm used in the RBCB models is L
                     ∞, which represents the maximum deviation from the average workload per semester. ‘μ
                     +
                     L
                     ∞’ and ‘μ
                     −
                     L
                     ∞’ are respectively the upper and lower bounds for the total academic workload per period. In other words, the academic workload is permitted to deviate from the mean by an amount of ‘L
                     ∞’ as seen in Eqs. (16) and (17).
                        
                           (16)
                           
                              
                                 
                                    L
                                 
                                 
                                    ∞
                                 
                              
                              ⩾
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                    
                                    
                                       C
                                    
                                 
                              
                              (
                              
                                 
                                    ECTS
                                 
                                 
                                    m
                                 
                              
                              ∗
                              
                                 
                                    x
                                 
                                 
                                    mj
                                 
                              
                              )
                              -
                              μ
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (17)
                           
                              
                                 
                                    L
                                 
                                 
                                    ∞
                                 
                              
                              ⩾
                              μ
                              -
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                    
                                    
                                       C
                                    
                                 
                              
                              (
                              
                                 
                                    ECTS
                                 
                                 
                                    m
                                 
                              
                              ∗
                              
                                 
                                    x
                                 
                                 
                                    mj
                                 
                              
                              )
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     And lastly, we considered the Lmax
                      norm which takes into account only the maximum positive deviations from the mean. Thus in our case, it tries to minimize the maximum academic workload per semester (i.e. MLoad) in the curriculum. For that purpose, is formulated as an upper bound in Eq. (18) and Lmax
                      is calculated as the difference between MLoad and the mean in Eq. (19).
                        
                           (18)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                    
                                    
                                       C
                                    
                                 
                              
                              (
                              
                                 
                                    ECTS
                                 
                                 
                                    m
                                 
                              
                              ∗
                              
                                 
                                    X
                                 
                                 
                                    mj
                                 
                              
                              )
                              ⩾
                              MLoad
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (19)
                           
                              
                                 
                                    L
                                 
                                 
                                    max
                                 
                              
                              =
                              MLoad
                              -
                              μ
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     Regardless of the type of norm used, the best balanced solution is achieved when the upper and lower bounds are both equal to average workload per semester (i.e. L
                     1,
                     L
                     ∞,
                     Lmax
                        
                     =0). For the special occasions such as the perfectly balanced solution being impossible, upper and lower bounds are relaxed up to a limit of ‘+/−L
                     0, L
                     1, L
                     ∞,
                     Lmax
                     ’ until a feasible solution is reached.

The objective function of the model is not linear because it includes multiplication of two binary variables (xmj
                     
                     *
                     xnk
                     ) as seen in Eq. (2). The linearization of the objective function is usually achieved by adding new variables and linear constraints to the optimization model (Burkard, 2002). Thus, quadratic programming turns into mixed integer programming. This paper suggests applying Frieze and Yadegar’s Linearization method. So we add ‘C
                     2
                     
                     *
                     
                     Per
                     2’ new variables and ‘C
                     2
                     *
                     Per
                     2
                     +2*
                     C
                     2
                     *
                     Per’ new constraints to the model and transform it into a MILP. As a result, our old function R(x) at Eq. (2) is transformed into the new one R(x)′ at Eq. (20). The new sets of constraints added to the model are shown in Eqs. (21) and (22):
                        
                           (20)
                           
                              R
                              
                                 
                                    (
                                    x
                                    )
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       0
                                    
                                    
                                       Per
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       0
                                    
                                    
                                       Per
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       m
                                       =
                                       0
                                    
                                    
                                       C
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       n
                                       =
                                       0
                                    
                                    
                                       C
                                    
                                 
                              
                              (
                              
                                 
                                    Rs
                                 
                                 
                                    mn
                                 
                              
                              ∗
                              
                                 
                                    d
                                 
                                 
                                    jk
                                 
                              
                              ∗
                              
                                 
                                    Y
                                 
                                 
                                    mjnk
                                 
                              
                              )
                           
                        
                     
                     
                        
                           (21)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       Per
                                    
                                 
                              
                              
                                 
                                    Y
                                 
                                 
                                    mjnk
                                 
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    nk
                                 
                              
                              
                              ∀
                              m
                              ,
                              n
                              =
                              1
                              ,
                              …
                              ,
                              C
                              ∧
                              
                              ∀
                              k
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                     
                        
                           (22)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       Per
                                    
                                 
                              
                              
                                 
                                    Y
                                 
                                 
                                    mjnk
                                 
                              
                              =
                              
                                 
                                    x
                                 
                                 
                                    mj
                                 
                              
                              
                              ∀
                              m
                              ,
                              n
                              =
                              1
                              ,
                              …
                              ,
                              C
                              ∧
                              
                              ∀
                              j
                              =
                              1
                              ,
                              …
                              ,
                              Per
                           
                        
                     
                  

In the proposed RBCB models, the coefficient ‘λ’ that penalizes the balance violation needs to be defined as a big enough number. If the penalty constant λ is kept smaller, RBCB generates more relevant solutions, but a perfect balance is not guaranteed. If λ is increased gradually, better and better balanced solutions are obtained, but at the expense of relevance.


                     
                        
                           λ
                        
                      can be augmented manually. That is, the proposed model can be solved several times for different λ values until the best balanced solution is reached. Another way of determining λ is the Lagrangian Relaxation (LR) method.

LR uses the idea of relaxing the explicit linear constraints by penalizing them in the objective function using Lagrange multipliers. For example, consider the primal model in Table 3
                      that minimizes the objective function ‘
                        
                           Min
                           
                           
                              
                                 C
                              
                              
                                 T
                              
                           
                           x
                        
                     ’ with respect to two sets of linear constraints, ‘
                        
                           Ax
                           ⩾
                           b
                        
                     ’ and ‘
                        
                           Bx
                           ⩾
                           d
                        
                     ’. Moreover, suppose that minimizing the objective function of primal model subject to ‘
                        
                           Ax
                           ⩾
                           b
                        
                     ’ constraint is easy, but ‘
                        
                           Bx
                           ⩾
                           d
                        
                     ’ constraint difficult. So, Lagrange multipliers are assigned for each constraint in the ‘
                        
                           Bx
                           ⩾
                           d
                        
                     ’ set, and a new objective function is formed as seen in Lagrangian Dual Model (LDM).

Instead of dealing with the hard constraints 
                        
                           Bx
                           ⩾
                           d
                        
                     , we now allow those constraints to be violated, but penalize those violations by Lagrangian multipliers. Then the model is iteratively solved. At first sight, this might not appear to be a meaningful approach since we already had an MILP model. However, accommodating complicated constraints in the objective function transforms the primal model into a simpler problem that can be solved in a much more reasonable computation time.

LR is a useful technique to design approximation algorithms in nonlinear, structured linear, convex, and large scale integer programming. It has been utilized extensively in a variety of problems such as flow shop scheduling (Mao, Quan-ke, Pang, & Chai, 2014; Nishi, Hiranaka, & Inuiguchi, 2010), vehicle routing (Kallehauge, Larsen, & Madsen, 2006), TSP (Imai, Nishimura, & Current, 2007; Yadlapalli, Malik, Darbha, & Pachter, 2009), facility location (Nezhad, Manzour, & Salhi, 2013; Mazzola & Neebe, 1999).

It may also be used for estimating the penalty constants of balancing constraints (Deshpande, Rajaram, & Guignard, 2002). In our case, since the norms ‘L(y)’ for balancing the curriculum are defined as constraints and penalized in the objective function, each RBCB model can be treated as a kind of LDM.

The selection of the Lagrange multipliers directly affects the performance of the LR model. To determine appropriate Lagrange multipliers, three basic algorithms are proposed in literature; namely subgradient, bundle, and cutting plane (Rong, Lahdelma, & Luh, 2008). By using these methods, λ can be adjusted based on the degree of constraint violation. In this study, subgradient algorithm is selected to update the penalty costs of the RBCB models. The general steps of the algorithm are as follows:
                        
                           (1)
                           Choose a starting point 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          0
                                       
                                    
                                 
                              , e. g. 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          0
                                       
                                    
                                    =
                                    0
                                 
                              ; i
                              =0; UB: Upperbound (Large Number).

Choose 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    d
                                    -
                                    
                                       
                                          Bx
                                       
                                       
                                          i
                                       
                                    
                                    
                                    of
                                    
                                    LDM
                                    (
                                    
                                       
                                          λ
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                               (i.e. subgradient for the relaxed constraints, evaluated at the current LDM).

If 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    0
                                 
                               then stop the algorithm, because the optimal value has been reached.

Calculate the stepsize: 
                                 
                                    
                                       
                                          γ
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    π
                                    
                                       
                                          UB
                                          -
                                          LDM
                                          (
                                          
                                             
                                                λ
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          x
                                          )
                                       
                                       
                                          ‖
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                i
                                             
                                          
                                          )
                                          
                                             
                                                ‖
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                               where π be a is a decreasing adaption parameter satisfying 0<π⩽2.

Update 
                                 
                                    
                                       
                                          λ
                                       
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                    =
                                    max
                                    {
                                    0
                                    ,
                                    
                                       
                                          λ
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    
                                       
                                          λ
                                       
                                       
                                          i
                                       
                                    
                                    ∗
                                    
                                       
                                          S
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                              , where γi
                               denotes the stepsize.

Increase i++ and go to 2.

Subgradient algorithm is an iterative method that involves generating improved values of λ based on the degree of constraint violations, starting with an initial set of multipliers. It can be considered as a procedure which attempts to maximize the lower bound value obtained from LDM by a systematic multiplier updating process.

In order to better explain the proposed RBCB models, they are applied to the Fatih University Industrial Engineering Department undergraduate curriculum. Some of the existing courses such as General Physics I–II, Calculus I–II, General Chemistry, Linear Algebra, Differential Equations are compulsory for all engineering departments. Another group of courses common for all undergraduate curricula in Turkey are History of Turkish Revolution I–II, Turkish Language I–II. There are 2 general electives and 7 technical electives in the curriculum. There are also 2 mandatory summer training programs at the end of the 4th and 6th semesters. The two courses related to these programs are located at the 5th and 7th semesters respectively. The remaining 25 courses are compulsory courses of the Industrial Engineering Department. All compulsory, general elective and mostly preferred technical elective courses are shown in Table 4
                     .

To generate the relevance score matrix for the proposed RBCB models, the following rules are applied: If the contents of form the fundamentals of Coursen
                     , then it has a very high relevance score. If some of the topics covered in Coursem
                      are required to fully understand Coursen
                     , then Coursem
                      has a moderately high relevance score. If Coursem
                      and Coursen
                      are completely unrelated courses, then the relevance score is zero. The complete rating scale for the evaluation of relevance scores is shown in Table 5
                     . Overview of the relevance score matrix is given in Table 6
                     .

For instance, Probability & Statistics (PS) and Engineering Statistics (ES) courses are highly interrelated; that is, there is a very high relevance score between PS and ES. However, this is a uni-directional relationship as seen in Figs. 1 and 2
                     
                     . In other words, the relevance score between PS and ES is very high; while the situation is the opposite between ES and PS.

Academic workloads of the courses are based on the European Credit Transfer System (ECTS) credits of Fatih University Industrial Engineering Department undergraduate curriculum (Table 4). High school courses are integrated to model as a preliminary semester before the undergraduate curriculum.

To sum up, the general characteristics of the sample curriculum is given below:
                        
                           
                              
                              
                              
                              
                                 
                                    Parameters
                                 
                                 
                                    
                                       C
                                    
                                    : 46
                                    
                                 
                                 
                                    
                                       Per
                                    
                                    : 9
                                    
                                 
                                 
                                    
                                       Prmn
                                       
                                    
                                    : set(46×46)
                                    ∀m
                                       ⋀
                                       n
                                       =0,…,
                                       C
                                    
                                 
                                 
                                    
                                       RSmn
                                       
                                    
                                    : set(46×46)
                                    ∀m
                                       ⋀
                                       n
                                       =0,…,
                                       C
                                    
                                 
                                 
                                    
                                       μ
                                    
                                    : 30
                                    
                                 
                                 
                                    
                                       djk
                                       
                                    
                                    : set(9×9)
                                    ∀j
                                       ⋀
                                       k
                                       =0,…,
                                       Per (shown in Table 2)
                                 
                                 
                                    
                                       ECTSm
                                       
                                    
                                    : set (46)
                                    ∀m
                                       =0,…,
                                       C (shown in Table 4)
                                 
                              
                           
                        
                     
                  

The proposed model, namely RBCB, has two conflicting objectives. The first one, which is common with the BACP models in literature, aims at balancing the workloads per semester while the novelty of the model is the second objective that targets assigning relevant courses as close as possible.

To obtain a curriculum layout that will be balanced and relevant simultaneously, a parametric optimization is carried out for the penalty constant ‘λ’. For this purpose, λ value is altered iteratively by using the subgradient algorithm until workloads per semester (WLpS) are optimally balanced.


                     Table 7
                      summarizes the penalty constants, workload distributions for different iterations of the four RBCB models, BACP solutions, calculated norm values, CPU times and layout costs obtained by the Xpress Optimization Suite. As seen in the table, the optimal solutions for RBCB(L
                     0), RBCB(L
                     1), RBCB(L
                     ∞) and RBCB(Lmax
                     ) models are reached at λ values of 2136, 1261 and 4718 respectively, with a common layout cost of 43,368.

It should also be noted that, other good solutions (i.e. partially-balanced but more relevant) are obtainable for smaller λ values. For example, 
                        
                           
                              
                                 RBCB
                              
                              
                                 ∞
                              
                              
                                 2
                              
                           
                        
                      and 
                        
                           
                              
                                 RBCB
                              
                              
                                 1
                              
                              
                                 2
                              
                           
                        
                      has good results with a slack of just ‘1’ and layout costs of 41,569 and 42,222 respectively. That is, 
                        
                           
                              
                                 RBCB
                              
                              
                                 ∞
                              
                              
                                 2
                              
                           
                        
                      total layout cost has decreased 1799 units. This means a very reasonable curriculum layout in terms of both relevance and workload distribution.

Another fact worth mentioning for the intermediate iterations of the RBCB models is that, L
                     1, L
                     2, L
                     ∞ and Lmax
                      norms exhibit similar behavior and converge to the optimal solution gradually. But, contrary to these, L
                     0 norm is unable to find acceptably good solutions in the early stages and reaches the optimal solution with a steep descent.

BACP has proven to be the fastest method, with a CPU time of just 2 seconds. The optimal solutions of RBCB models are obtained in about 3–15minutes which are quite reasonable times.

Here, we should note that workloads are distributed evenly for the optimal solutions of RBCBs and BACP. However, this does not necessarily mean that all the methods assign the courses exactly to the same semesters. Since all RBCB models generate the same optimal solutions, one of them is arbitrarily chosen (e.g. RBCB-L(∞)) to compare with BACP. The layout of the 46 courses in the sample curriculum are shown in Table 8
                      where numbers in the cells refer to the semesters the courses are assigned.

Since BACP models do not have a relevance phenomenon, we artificially apply the ‘layout cost’ concept of RBCB to BACP for comparing them in terms of both relevance and balance. So, the layout cost of the optimal BACP solution is calculated to be 61,269 as seen in Table 7. However, 
                        
                           
                              
                                 RBCB
                              
                              
                                 ∞
                              
                              
                                 3
                              
                           
                        
                      model gives the same WLpS as BACP, but with a layout cost of 43,368. In fact, we still have a better solution in terms of relevance for 
                        
                           
                              
                                 RBCB
                              
                              
                                 ∞
                              
                              
                                 0
                              
                           
                        
                      with a layout cost of just 34,825. But for this case, slack value is 30, that means this is the worst balanced instance.

Balancing the academic curriculum is highly important for the academic institutions. It enables to consolidate the loads of students per semester, meet prerequisite conditions and generate better course timetabling solutions. The BACP model of Castro and Manzano (2001) accomplishes these goals by minimizing the maximum total academic workload of semesters while respecting the prerequisite conditions. As an extension, Lambert et al. (2006) integrated lecturer preferences feature to BACP and named the new model as Generalized BACP. As a future work for GBACP, Chiarandini et al. (2012) pointed out the assignment of two specific courses in subsequent semesters and introduction of new constraints that forbid the assignment of specific pairs of courses at distances larger than a certain value. Inspired by this idea, this article develops the concept of assigning relevant courses to closest possible periods.

BACP model involves precedence relations; that is, the prerequisite course and latter course are assigned to subsequent periods. But, the courses are not necessarily assigned to closest, if possible consecutive, periods. Thus, there may be several semesters between the prerequisite and latter courses. However, it is pedagogically preferred to assign the two courses as close as possible.

This paper introduces a new model called Relevance Based Curriculum Balancing (RBCB) that designs the curriculum based on correlations between courses. While doing this, RBCB also provides workload balancing and meets the prerequisite conditions. For this purpose, Generalized Quadratic Assignment Problem (GQAP) is adopted to curriculum design. In literature, GQAP is mostly used in the fields of facility location and transportation. This study is the first implementation of GQAP to curriculum layout optimization. In RBCB, workload balancing is achieved by using penalty constants. That is, deviation from average workload per semester is punished.

Comparative performances of different RBCB models are examined by making sensitivity analysis for the penalty constants in terms of relevance and balancing efficiency. The relative performance of BACP model is also examined. Lecturer workload and lecturer preferences can be stated as some other criteria to meet real life requirements for curriculum design. As a future work, a multi-objective optimization model that assigns courses according to lecturer preferences and fits the desired workload of the lecturers can be modeled as a modified version of the RBCB model.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.ejor.2014.03.015.


                     
                        
                           Supplementary data 1
                           
                              Data.
                           
                           
                        
                     
                  

@&#REFERENCES@&#

