@&#MAIN-TITLE@&#Efficient elimination of erroneous nodes in cooperative sensing for cognitive radio networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Cooperative sensing with most frequent data falsification (SSDF) attacks.


                        
                        
                           
                           Proposed an extended generalized extreme studentized deviate (EGESD) method.


                        
                        
                           
                           It can eliminate both random and selfish attacks in cooperative sensing.


                        
                        
                           
                           It estimates two important input parameters required for GESD test.


                        
                        
                           
                           It is reliable and has low misdetection probability compared to existing algorithms.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Cognitive radio networks

Cooperative spectrum sensing

Random cognitive users

Shapiro–Wilk test

Extended generalized extreme studentized deviate

Erroneous cognitive user

@&#ABSTRACT@&#


               
               
                  Cooperative spectrum sensing is a process of achieving spatial diversity gain to make global decision for cognitive radio networks. However, accuracy of global decision effects owing to the presence of malicious users/nodes during cooperative sensing. In this work, an extended generalized extreme studentized deviate (EGESD) method is proposed to eliminate malicious nodes such as random nodes and selfish nodes in the network. The random nodes are carried off based on sample covariance of each node decisions on different frames. Then, the algorithm checks the normality of updated soft data using Shapiro–Wilk test and estimates the expected number of malicious users in cooperative sensing. These are the two essential input parameters required for classical GESD test to eliminate significant selfish nodes accurately. Simulation results reveal that the proposed algorithm can eliminate both random and frequent spectrum sensing data falsification (SSDF) attacks in cooperative sensing and outperforms the existing algorithms.
               
            

@&#INTRODUCTION@&#

In cognitive radio networks (CRN), cooperative spectrum sensing (CSS) is an effective technique to combat the multipath fading, shadowing and the receiver uncertainty present in the channel [1,2]. Cooperative sensing is a way of getting spatial diversity gain by receiving signal from different cognitive users in the vicinity of a fusion center (central node). A wide range of fusion techniques have been proposed to achieve spatial diversity gain. All these techniques can be classified into either soft decision (EGC and WGC) or hard decision (AND, OR, and MOST) based fusion methods. The classification is based on the type of data that the central node received from the cooperative cognitive users. Each fusion method has its own pros and cons. In practice, the central node does not have any prior information about signal to noise ratio (SNR) to generate the weights. The soft decision method named as equal gain combining (EGC) assigns equal weight to all nodes to generate a global decision. However, it is an unconventional method and degrades the sensing reliability. In weighted gain combining (WGC), different sensing techniques have been reported to estimate the weight for each cognitive radio (CR) user. Most of these methods require the signal characteristics a priori. In order to avoid this, differential evolution (DE) optimization method has been considered to estimate the weights for each CR user in [3–5]. Moreover, evolutionary algorithms are better to consider in the process because of their flexibility to generate proper weights with multiple constraints such as link budget, false alarm probability, belief value of each node, and distance of CR from primary user transmitter.

In practice, most of the current schemes assume that secondary/cognitive users send the correct measurement/decision to the fusion center (FC) to make the global decision [1,6]. This opens a window for malicious users to use the vacant spectrum selfishly. The malicious cognitive user (MCR) can send false information and mislead the spectrum sensing machine leading to collision or inefficient spectrum usage. In particular, the performance/reliability of the CSS degrades as the number of malicious users increases. There are two types of malicious attacks in CSS [7,8]. The first one is the incumbent emulation attack (IEA), where some malicious users know the characteristics of the primary signal and transmit a signal with similar characteristics so that other secondary users would believe that a primary user is present [9–11]. The second one is the spectrum sensing data falsification attack (SSDF) also termed as Byzantine attack, where malicious users send false sensing information intentionally to a central node [12,13]. The data falsification attacks associated with the malicious/erroneous users exist in the network is mainly due to malfunction of sensing hardware or/and presence of selfish nodes that intend to use the radio spectrum selfishly.

To defend the basic SSDF attacks, the generalized extreme studentized deviate (GESD) test is the prominent method for detection and elimination of multiple selfish users in a cognitive radio network [14,2]. It has been also reported that, if the model follow a normal distribution, GESD test is the best method for multiple erroneous cognitive user elimination [14,15]. To detect multiple MCR user, the GESD method requires two essential input parameters a priori, those are, (1) distribution of the soft decision data (since the test is more efficient for normally distributed data), (2) estimation of expected number of malicious user in the data. A modified largest gap method to estimate the exact number of malicious users or upper limit of outliers in the cooperative sensing under attack is presented in [12]. However, GESD test, modified largest gap method, and Tietjen-Moore tests can not eliminate the random cognitive nodes in the cooperation.

In the current work, we propose an algorithm named as extended generalized extreme studentized deviate test (EGESD) which can eliminate probable SSDF attacks that comes from failure of sensing hardware and the presence of selfish nodes in the CRNs. To achieve this, we studied and modeled the three possible cases of soft decision data that a hardware failure node can send, those are, the random data that follow uniform distribution, random data that follow Gaussian distribution (also occurs due to strong fading environment), and the data that is random between ‘always high or low’. The failure nodes are termed as random cognitive radios (RCR). In the case of selfish nodes, we consider two well-known basic attacks termed as ‘always Yes/No’ in the analysis. The proposed algorithm can estimate two essential input parameters required for efficient elimination of erroneous nodes in the network. Hard and soft decision fusion methods are considered to analyze the performance of cooperative sensing.

Rest of this paper is organized as follows. Cooperative sensing algorithm using DE and EGESD test is presented in Section 2. Simulation results are given in Section 3. Finally, our conclusions are drawn in Section 4.

Assuming that there are M nodes in the cooperation that contains both genuine and malicious nodes. In addition, received signal of all nodes are statistically independent. Then, the composite hypothesis test can be written as
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   H
                                                   0
                                                
                                                :
                                                
                                                   r
                                                   m
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                                =
                                                
                                                   w
                                                   m
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                                ,
                                                m
                                                =
                                                0
                                                ,
                                                1
                                                ,
                                                2
                                                
                                                   ⋯
                                                   ′
                                                
                                                
                                                   (
                                                   M
                                                   −
                                                   1
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   H
                                                   1
                                                
                                                :
                                                
                                                   r
                                                   m
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                                =
                                                
                                                   h
                                                   m
                                                
                                                
                                                   s
                                                   m
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                                +
                                                
                                                   w
                                                   m
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                                ,
                                                n
                                                =
                                                0
                                                ,
                                                1
                                                
                                                   ⋯
                                                   ′
                                                
                                                
                                                   (
                                                   N
                                                   −
                                                   1
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where H
                        0 and H
                        1 denote the null and alternative hypothesis. The null hypothesis states that there is only noise present in a frequency band to be scanned. The alternative hypothesis states that there is a primary/incumbent user signal present along with the noise in the frequency band to be scanned. The received signal sequence by the mth secondary user is denoted as rm
                        (n), whereas sm
                        (n) is the primary user’s transmitted signal sequence, wm
                        (n) is the additive white Gaussian noise (AWGN) observed by mth node, and hm
                         is the channel gain. It is assumed that the channel is slowly varying such that the channel frequency response or channel gain remains constant during the sensing duration.

In this work, both hard and soft decision logics are considered. In case of WGC fusion, the weight vector is evaluated using DE algorithm [16]. Mathematically, the problem can be expressed as
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                max
                                             
                                             
                                                ∑
                                                
                                                   m
                                                   =
                                                   1
                                                
                                                M
                                             
                                             
                                                ψ
                                                m
                                             
                                             
                                                Θ
                                                m
                                             
                                             ,
                                             s
                                             .
                                             t
                                             
                                                ∑
                                                
                                                   m
                                                   =
                                                   1
                                                
                                                M
                                             
                                             
                                                Θ
                                                m
                                             
                                             =
                                             1
                                             ,
                                             0
                                             <
                                             
                                                Θ
                                                m
                                             
                                             <
                                             1
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In DE algorithm, the sum of the product (soft decision (ψm
                        ) and its corresponding weight (Θm
                        )) of all cooperative nodes are considered as the objective function. The notation ψm
                         represents the energy measurement of the mth node, given as 
                           
                              
                                 ψ
                                 m
                              
                              =
                              
                                 ∑
                                 
                                    n
                                    =
                                    0
                                 
                                 
                                    N
                                    −
                                    1
                                 
                              
                              
                                 |
                                 r
                                 
                                    [
                                    n
                                    ]
                                 
                              
                              
                                 
                                    |
                                 
                                 2
                              
                           
                        .

Since the DE optimization algorithm is the development of Genetic algorithm, the proposed method generates an optimal weight vector based on the three important steps: mutation, crossover, and selection. Let it be, 
                           
                              (
                              
                                 
                                    Θ
                                 
                                 
                                    t
                                    a
                                    opt
                                 
                              
                              =
                              
                                 [
                                 
                                    Θ
                                    
                                       opt
                                       (
                                       1
                                       )
                                    
                                 
                                 ,
                                 
                                    Θ
                                    
                                       opt
                                       (
                                       2
                                       )
                                    
                                 
                                 
                                    ⋯
                                    ′
                                 
                                 
                                    Θ
                                    
                                       opt
                                       (
                                       M
                                       )
                                    
                                 
                                 ]
                              
                              )
                           
                        . Then, the cooperative detection probability with the optimal weights can be computed as [16]
                        
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             
                                                Q
                                                
                                                   d
                                                   −
                                                   wgc
                                                   (
                                                   opt
                                                   )
                                                
                                             
                                             =
                                             
                                                ∑
                                                
                                                   m
                                                   =
                                                   1
                                                
                                                M
                                             
                                             
                                                ψ
                                                m
                                             
                                             
                                                Θ
                                                
                                                   opt
                                                   (
                                                   m
                                                   )
                                                
                                             
                                             
                                                
                                                   ≷
                                                   
                                                      H
                                                      1
                                                   
                                                
                                                
                                                   H
                                                   0
                                                
                                             
                                             
                                                λ
                                                e
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where ψm
                         is the soft measurement of mth node and λe
                         is the threshold value.

One of the issues in the cooperative sensing is the presence of few MCR users in the network. Hence, an extended generalized ESD test is proposed to counteract the data falsification attacks generated by malicious CR users. The basic flow chart of introduced algorithm is shown in Fig. 1
                        . Different functionalities are introduced to eliminate all possible basic attacks, which are highlighted and can be seen in Fig. 1. In cooperative sensing model, MCR users are considered along with the genuine cognitive radio (GCR) users. Each cognitive user in the network senses the desired frequency band using energy detection algorithm and transmits the soft decision information to the FC. The collected information at FC is considered as the input to eliminate random cognitive users based on test statistic 
                           
                              (
                              
                                 S
                                 
                                    cov
                                 
                                 m
                              
                              )
                           
                         and threshold value. If the test statistic value is less than threshold value, the data is free from random nodes which is considered for normality check using SW test. If the data does not follow the normal distribution, the number of iterations is increased until the data follows normal. Once the data distribution follows normal, the expected number of outliers is estimated using box plot criterion given in Algorithm 1. Then, we apply GESD test to detect and suppress the malicious nodes in the soft decision data to make global decision with genuine nodes.

To achieve this, the soft decision data of all cooperative nodes are accumulated by sensing the frequency band on τ number of frames. The soft decision data set (X) based on τ frames can be expressed in matrix form as,
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             X
                                             =
                                             
                                                (
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  1
                                                                  ,
                                                                  1
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  1
                                                                  ,
                                                                  2
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ⋯
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  1
                                                                  ,
                                                                  τ
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  2
                                                                  ,
                                                                  1
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  2
                                                                  ,
                                                                  2
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ⋯
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  2
                                                                  ,
                                                                  τ
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            ⋮
                                                         
                                                      
                                                      
                                                         
                                                            ⋮
                                                         
                                                      
                                                      
                                                         
                                                            ⋮
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  M
                                                                  ,
                                                                  1
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  M
                                                                  ,
                                                                  2
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            ⋯
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  M
                                                                  ,
                                                                  τ
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Then, we plot the Quantile–Quantile (QQ) plot to visualize the soft data distribution. If it is not normal, then, RCR nodes are eliminated based on sample covariance and mean absolute deviation with the global mean value, as shown in Fig. 2
                        . The test statistic and threshold are formulated as
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                S
                                                
                                                   cov
                                                
                                                m
                                             
                                             =
                                             
                                                1
                                                
                                                   (
                                                   τ
                                                   −
                                                   1
                                                   )
                                                
                                             
                                             
                                                ∑
                                                
                                                   a
                                                   =
                                                   1
                                                
                                                τ
                                             
                                             
                                                
                                                   
                                                      (
                                                      
                                                         ψ
                                                         
                                                            (
                                                            m
                                                            ,
                                                            a
                                                            )
                                                         
                                                      
                                                      −
                                                      
                                                         μ
                                                         m
                                                      
                                                      )
                                                   
                                                
                                                2
                                             
                                             ,
                                             m
                                             =
                                             1
                                             ,
                                             2
                                             
                                                ⋯
                                                ′
                                             
                                             M
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                λ
                                                σ
                                             
                                             =
                                             
                                                1
                                                
                                                   2
                                                   M
                                                   (
                                                   τ
                                                   −
                                                   1
                                                   )
                                                
                                             
                                             
                                                ∑
                                                
                                                   m
                                                   =
                                                   1
                                                
                                                M
                                             
                                             
                                                ∑
                                                
                                                   a
                                                   =
                                                   1
                                                
                                                τ
                                             
                                             
                                                
                                                   
                                                      (
                                                      
                                                         |
                                                         
                                                            ψ
                                                            
                                                               (
                                                               m
                                                               ,
                                                               a
                                                               )
                                                            
                                                         
                                                         −
                                                         
                                                            G
                                                            m
                                                         
                                                         |
                                                      
                                                      −
                                                      E
                                                      
                                                         (
                                                         
                                                            |
                                                            
                                                               ψ
                                                               
                                                                  (
                                                                  m
                                                                  ,
                                                                  a
                                                                  )
                                                               
                                                            
                                                            −
                                                            
                                                               G
                                                               m
                                                            
                                                            |
                                                         
                                                         )
                                                      
                                                      )
                                                   
                                                
                                                2
                                             
                                             +
                                             
                                                1
                                                
                                                   2
                                                   (
                                                   τ
                                                   −
                                                   1
                                                   )
                                                
                                             
                                             
                                                ∑
                                                
                                                   a
                                                   =
                                                   1
                                                
                                                τ
                                             
                                             
                                                
                                                   
                                                      (
                                                      
                                                         |
                                                         
                                                            ψ
                                                            
                                                               (
                                                               m
                                                               ,
                                                               a
                                                               )
                                                            
                                                         
                                                         −
                                                         
                                                            Y
                                                            ¯
                                                         
                                                         |
                                                      
                                                      )
                                                   
                                                
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              Y
                              =
                              [
                              
                                 ψ
                                 
                                    (
                                    m
                                    ,
                                    a
                                    )
                                 
                              
                              ,
                              
                                 ψ
                                 
                                    (
                                    m
                                    ,
                                    a
                                    +
                                    τ
                                    )
                                 
                              
                              ,
                              
                                 ψ
                                 
                                    (
                                    m
                                    ,
                                    a
                                    +
                                    2
                                    τ
                                    )
                                 
                              
                              
                                 ⋯
                                 ′
                              
                              
                                 ψ
                                 
                                    (
                                    m
                                    ,
                                    ξ
                                    )
                                 
                              
                              ]
                           
                        , is a set contains the soft decisions of mth node after each τ frame.

In the case of classical GESD test, it is normally assumed that the number of malicious users is at most ‘u’, can be taken randomly such that u < M 
                        [15,14]. In practice, the information about the normality of the data and number of malicious users for the GESD test is unknown. Hence, in this work, we have addressed the normality verification using Swapiro-Wilk (SW) test and estimated the number of malicious users u in the soft decision data. The process of normality check and estimating u to apply GESD test for cooperative sensing can be seen in Fig. 1. The observed data set X contains the elements in the first frame for all cooperative nodes as, {ψ
                        (1, 1), ψ
                        (2, 1)‘…’ 
                           
                              
                                 ψ
                                 
                                    (
                                    (
                                    M
                                    −
                                    1
                                    )
                                    ,
                                    1
                                    )
                                 
                              
                              ,
                              
                                 ψ
                                 
                                    (
                                    M
                                    ,
                                    1
                                    )
                                 
                              
                              
                                 }
                              
                           
                        . Let the soft decision data set on τ frames for all cooperative nodes be denoted as X. Then, normality check is verified using SW test using test statistic given as [17,18],
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             W
                                             =
                                             
                                                
                                                   
                                                      b
                                                   
                                                   2
                                                
                                                δ
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              δ
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 θ
                              
                              
                                 
                                    (
                                    
                                       X
                                       
                                          (
                                          m
                                          ,
                                          a
                                          )
                                       
                                    
                                    −
                                    
                                       X
                                       ¯
                                    
                                    )
                                 
                                 2
                              
                           
                         and 
                           
                              b
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 κ
                              
                              
                                 a
                                 i
                              
                              
                                 
                                    (
                                    
                                       X
                                       
                                          n
                                          +
                                          1
                                          −
                                          i
                                       
                                    
                                    −
                                    
                                       X
                                       i
                                    
                                    )
                                 
                                 2
                              
                           
                        . The symbols 
                           
                              
                                 X
                                 ¯
                              
                              ,
                              θ
                              =
                              M
                              τ
                           
                         denote the sample mean and size of X, κ is the index of the median value. ai
                         and p values are the weight and power of the test (p-value), can be taken from SW test-table with the prior information of size of the data (θ) and test statistic ‘W’ value [18].

The discrimination of data for normality check can be expressed as,
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                p
                                                ≥
                                                
                                                   α
                                                   s
                                                
                                                ,
                                                
                                                   support
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                N
                                                0
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                p
                                                <
                                                
                                                   α
                                                   s
                                                
                                                ,
                                                
                                                   support
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                N
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where N
                        0 denotes the null hypothesis that the data are distributed normally and N
                        1 denotes the alternative hypothesis. The symbol αs
                         is the significance level. If the data is distributed normally, it estimates the number of malicious users with the following steps,
                           Algorithm 1
                           Estimating upper limit of outliers 
                                 
                                    
                                       
                                       
                                          
                                             1: procedure Plot the probability density function (Histogram) of (X)
                                          
                                          
                                             2: sort the data of X in ascending order
                                          
                                          
                                             3: Find the first and third quartiles, 
                                                   
                                                      Q
                                                      1
                                                   
                                                 and 
                                                   
                                                      Q
                                                      3
                                                   
                                                .
                                          
                                          
                                             4: Calculate the lower fence 
                                                   
                                                      
                                                         
                                                            Π
                                                         
                                                         1
                                                      
                                                      =
                                                      Q
                                                      1
                                                      −
                                                      
                                                         ξ
                                                         s
                                                      
                                                      ×
                                                      
                                                      
                                                         (
                                                         IQR
                                                         )
                                                      
                                                   
                                                 and upper fence 
                                                   
                                                      
                                                         
                                                            Π
                                                         
                                                         3
                                                      
                                                      =
                                                      Q
                                                      3
                                                      +
                                                      
                                                         ξ
                                                         s
                                                      
                                                      ×
                                                      
                                                      
                                                         (
                                                         IQR
                                                         )
                                                      
                                                   
                                                , where IQR is the inter Quartile range
                                          
                                          
                                             5: Estimate ‘u’ based on the decisions below the 
                                                   
                                                      
                                                         Π
                                                      
                                                      1
                                                   
                                                 and above the 
                                                   
                                                      
                                                         Π
                                                      
                                                      3
                                                   
                                                
                                             
                                          
                                          
                                             6: end procedure
                                             
                                          
                                       
                                    
                                 
                              
                           

The single ESD in the data X, can be calculated as
                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             
                                                R
                                                j
                                             
                                             =
                                             
                                                
                                                   max
                                                
                                                i
                                             
                                             
                                                {
                                                
                                                   
                                                      |
                                                      
                                                         X
                                                         
                                                            (
                                                            m
                                                            ,
                                                            a
                                                            )
                                                         
                                                      
                                                      −
                                                      
                                                         X
                                                         ¯
                                                      
                                                      |
                                                   
                                                   
                                                      S
                                                      
                                                         X
                                                         −
                                                         dev
                                                      
                                                   
                                                
                                                }
                                             
                                             ,
                                             
                                                
                                                   
                                                      
                                                         
                                                            j
                                                            =
                                                            1
                                                            ,
                                                            2
                                                            
                                                               ⋯
                                                               ′
                                                            
                                                            u
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            i
                                                            =
                                                            1
                                                            ,
                                                            2
                                                            
                                                               ⋯
                                                               ′
                                                            
                                                            
                                                               (
                                                               θ
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              S
                              
                                 X
                                 −
                                 dev
                              
                           
                         denotes the sample standard deviation of data set X. Eq. (7) is used repeatedly to compute 
                           
                              
                                 R
                                 1
                              
                              ,
                              
                                 R
                                 2
                              
                           
                        ‘…’
                           
                              R
                              u
                           
                         and each of this is individually compared with a critical value χj
                         as follows
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             
                                                χ
                                                j
                                             
                                             =
                                             
                                                
                                                   
                                                      (
                                                      M
                                                      −
                                                      j
                                                      )
                                                   
                                                   
                                                      t
                                                      
                                                         M
                                                         −
                                                         j
                                                         −
                                                         1
                                                         ,
                                                         p
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         (
                                                         M
                                                         −
                                                         j
                                                         −
                                                         1
                                                         +
                                                         
                                                            t
                                                            
                                                               M
                                                               −
                                                               j
                                                               −
                                                               1
                                                               ,
                                                               p
                                                            
                                                            2
                                                         
                                                         )
                                                      
                                                      
                                                         (
                                                         M
                                                         −
                                                         j
                                                         +
                                                         1
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              t
                              
                                 M
                                 −
                                 j
                                 −
                                 1
                                 ,
                                 p
                              
                           
                         is the 100α percentage point from the t-distribution with 
                           
                              (
                              M
                              −
                              j
                              −
                              1
                              )
                           
                         degrees of freedom, and 
                           
                              p
                              =
                              {
                              1
                              −
                              
                                 α
                                 
                                    2
                                    (
                                    M
                                    −
                                    j
                                    +
                                    1
                                    )
                                 
                              
                              }
                           
                        , where 
                           
                              α
                              =
                              0.05
                           
                         is the significance level for the overall test. The number of MCR users are determined by finding the largest ‘j’ such that 
                           
                              
                                 R
                                 j
                              
                              ≥
                              
                                 χ
                                 j
                              
                           
                        
                     

The final MCR users can be determined based on the following equality for a fixed value of m 
                        [2],
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   itr
                                                   =
                                                   1
                                                
                                                τ
                                             
                                             
                                                
                                                   [
                                                   I
                                                   (
                                                   R
                                                   )
                                                   ]
                                                
                                                
                                                   itr
                                                   ,
                                                   m
                                                
                                             
                                             =
                                             τ
                                             
                                                [
                                                
                                                   
                                                      (
                                                      τ
                                                      −
                                                      1
                                                      )
                                                   
                                                   2
                                                
                                                M
                                                +
                                                m
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The effective cooperative detection probability for soft decision fusion can be calculated using Eq. (2) with the set 
                           
                              E
                              =
                              {
                              x
                              :
                              x
                              ∈
                              X
                           
                         and 
                           
                              x
                              ∉
                              
                                 R
                                 mcr
                              
                              
                                 }
                              
                           
                        . Where “
                           
                              R
                              mcr
                           
                        ” is the set of MCR user.

@&#RESULTS AND DISCUSSIONS@&#

In the simulations, Digital Video Broadcasting-Terrestrial (DVB-T) and Quadrature Phase Shift Keying (QPSK) signals with variable SNR are considered as a primary user signal, which includes all possible noise impairments of wireless channels. The energy detection algorithm is used for local or initial spectrum sensing in each cognitive radio. The detector estimates the test statistic of the received signal and compares it with the corresponding threshold. The threshold is computed to achieve a tolerable false alarm probability (
                        
                           
                              P
                              f
                           
                           =
                           0.1
                        
                     ). To eliminate random nodes, the sample covariance of each node decisions on different frames are considered. The number of samples in a frame is taken as 256. The number of nodes considered as variable from 3 to 10. The number of random nodes considered as 3. The simulation parameters are given in Table 1. Owing to the non-existence of closed form solution for Pd
                     , the performance of the detector is analyzed using Monte Carlo methods for 10,000 iterations.

The process of calculating the probability of detection can be seen in Fig. 3. It explains the evaluation of detection probability that can be applied for all kind of detection methods. In practice, two types of procedures are being used to evaluate the detection accuracy, (i) sequential detection method, (ii) snap shot detection method. In the former case, the hypothesis test is performed on ξ contiguous frames in a primary
                      user (PU) signal stream. In the latter case, the hypothesis test is performed by selecting a single frame of desired length (or a snap shot) from the PU signal stream. Based on the samples in the snap shot and white Gaussian noise, different frames (ξ) of desired length can be generated. This is one of the processes of boot strapping method in Monte Carlo techniques. Then, the detection test has been done for each frame and accumulated the decisions. Finally, the detection probability can be computed using the basic probability formula which is ratio between number of times the detector supports alternate hypothesis (H
                     1) over the number of times (ξ) the test is performed. In the simulation, cooperative cognitive users are assumed to have configurations as shown in Fig. 2. The performance of the CSS is evaluated with DE and proposed EGESD algorithms.

The QQ plot of collected soft decision data with 
                        
                           τ
                           =
                           20
                        
                      and number of nodes M
                     =5 can be seen in Fig. 4. It is a graphical representation of the collected soft decision sample quantiles of (X) vs. theoretical quantiles from a normal distribution. If the distribution of X is normal, the plot will be close to linear. From the figure, it can be observed that the distribution of soft decision data (X) approaches to standard normal except few data points on either side due to random data. But, the normality test using QQ plot is a graphical method and is alone not appropriate for the considered problem. Hence, the numerical method using SW test is considered for normality verification. From the graph, it is clear that the data is not normal and contains the data of malicious/random nodes. Hence, there is a need to remove the random data to update the X for efficient cooperative sensing.


                     Fig. 5
                      shows the sample variance against number of frames. The variance is large for random cognitive radios (RCRs) compared to genuine cognitive nodes (GCRs). In the simulations, three different random nodes such as nodes that generate decisions either always Yes or always NO, the nodes decision which follows uniform and Gaussian distributions are considered. The SNR at each malicious node is in between −20dB to 0dB for random nodes. In the case of ‘always NO’ and ‘always YES’ nodes the SNR is varied between −20dB to 0dB. The α, significance level is varied between 0.05 (95%) to 0.25 (75%) and the ξs
                      value is taken as 2. From the figure it can be seen that the random nodes has higher sample variance compared to the genuine nodes. Moreover, the random data which follows Gaussian distribution have the higher value due to more randomness as compared to other distributions.


                     Fig. 6
                      illustrates the complementary receiver operating characteristics (CROC) of different nodes considered in the simulation. The genuine CR node has less false alarm probability compared to other random nodes. For instance, at the desired false alarm rate (0.1), the misdetection probability of GCR is 0.0031 whereas the erroneous nodes have high false alarm probability which is 0.09223, 0.2966, and 0.5258 for nodes that generate decisions either always Yes or always NO, the nodes data which follows uniform and Gaussian distributions, respectively. At higher desired performance the sensing performance going to be degraded sharply due to random nodes.


                     Figs. 7 and 8
                     
                      show the CROC curves for cooperative sensing using hard decision (OR) and soft decision (EGC and WGC) fusion logics. In the simulation, variable number of nodes considered as 3 and 5. Here, cooperation has been done in two ways, without elimination of erroneous nodes (WOMCR) and with elimination of erroneous nodes (WMCR). From the figure, it is clear that the misdetection probability is high when we ignored to eliminate erroneous nodes during CSS. Hence, the elimination must be done before cooperation. From Fig. 8, it can be noted that the proposed method (DEWGC with EGESD) has less misdetection probability compared to EGC fusion logic. For instance, in the case of EGC logic, at false alarm probability 
                        
                           
                              P
                              f
                           
                           =
                           0.4
                        
                     , the misdetection probability is 0.94 and 0.81 with M
                     =3 and 5 with possible attacks of MCR users. On the other hand, in same simulation environment, the misdetection probability reduced to 0.85 and 0.41 when we eliminate the erroneous nodes using proposed method. In the case of weighted gain combining using differential evolution (DEWGC), in same simulation environment, the misdetection probability is further reduced to 0.48 and 0.25 when we eliminate the erroneous nodes using proposed EGESD method. In conclusion, performance of the system is significant even at higher false alarm rate and the global decision after elimination of malicious user is reliable which is essential for real time application.

@&#CONCLUSIONS@&#

In this work, the performance of cooperative spectrum sensing is analyzed by considering the most frequent spectrum sensing data falsification (SSDF) attacks such as random attacks (arise due to failure of sensing hardware) and selfish attacks (due to presence of selfish nodes) in a cognitive radio network. The proposed algorithm based on extended generalized extreme studentized deviate (EGESD) method can eliminate effects of both random and selfish attacks presents during cooperative sensing. Moreover, it overcomes the drawbacks of the classical GESD test, which are, estimation of number of expected malicious users in the data and prior information of data distribution. From the simulation results, the misdetection probability reduces as we increase the number of nodes in the cooperative sensing. However, owing to the few RCR and selfish nodes misdetection probability increases further in cooperative performance. Hence, random attacks of malicious user are effectively eliminated using sample covariance and mean absolute deviation methods. The selfish nodes are carried off based on Shapiro–Wilk and GESD tests. In conclusion, proposed system can efficiently eliminate all basic attacks compared to the classical GESD test because of prior knowledge on distribution and expected number of malicious user in the soft decision data set. For instance, the misdetection probability of cooperative sensing is reduced to 0.48 to 0.25 by applying DEWGC and EGESD. This is a significant performance improvement in cooperative sensing over impaired cognitive radio networks. The applications of proposed method with different detection measurements and for different statistical attacks are under development.

@&#ACKNOWLEDGMENT@&#

The authors are thankful to the URC/UCT Post-Doctoral Research funding, University of Cape Town, SA, for providing necessary support to carry out this research work.

@&#REFERENCES@&#

