@&#MAIN-TITLE@&#The disruptive anti-covering location problem

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Proposes a new construct: the Disruptive Anti-Covering Location Problem (DACLP).


                        
                        
                           
                           Solves for the “worst-case,” most disruptive, (lower bound) packing of facilities.


                        
                        
                           
                           Applies to a wide variety of problems from habitat analysis to franchise location.


                        
                        
                           
                           Introduces the concept of stable, proper levels of anti-cover.


                        
                        
                           
                           Provides computational experience for solving DACLP using a MIP model.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Location modeling

Anti-cover

R-separation

Disruption

Packing

@&#ABSTRACT@&#


               
               
                  Dispersion is a desirable element inherent in many location problems. For example, dispersive strategies are used in the location of franchise stores, bank branches, defensive missile silo placement, halfway homes, and correctional facilities, or where there is need to be dispersed as much as possible in order to minimize impacts. Two classic models that capture the essence of dispersion between facilities involve: (1) locating exactly p-facilities while maximizing the smallest distance of separation between any two of them, and (2) maximizing the number of facilities that are being located subject to the condition that each facility is no closer than r-distance to its closest neighboring facility. The latter of these two problems is called the anti-covering problem, the subject of this paper. Virtually all past research has involved an attempt to solve for the “best or maximal packing” solution to a given anti-covering problem. This paper deals with what one may call the worst case solution of an anti-covering problem. That is, what is the smallest number of needed facilities and their placement such that their placement thwarts or prevents any further facility placement without violating the r-separation requirement? We call this the disruptive anti-covering location problem. It is disruptive in the sense that such a solution would efficiently prevent an optimal packing from occurring. We present an integer linear program model for this new location problem, provide example problems which indicate that very disruptive configurations exist, and discuss the generation of a range of stable levels to this problem.
               
            

@&#INTRODUCTION@&#

The anti-covering (or r-separation) location problem (ACLP) involves maximizing the number of selected sites, such that no two selected sites are within a specified distance or time standard of each other. This problem can be defined on a bounded continuous region or a discrete set of sites (Carrizosa & Tóth, 2015). When defined on a bounded continuous domain it is generally assumed that all facilities must be located within the region and be at least r-distance from the boundary and at least r-distance from each other. Although both problem domains are of interest, this paper is concerned with the ACLP defined upon a discrete set of sites. The solution to the ACLP is sometimes referred to as a packed arrangement. There may be many configurations to a problem instance in which all located facilities are at least the prescribed r-distance apart from each other. Those arrangements which involve the maximum number of located facilities are optimal ACLP solutions. Those solutions that use fewer than the maximum possible number of located facilities fall into two classes: (1) at least one unused site exists where it is possible to locate an additional facility while still maintaining all r-separation constraints; and, (2) all remaining unused sites are too close to an existing facility or boundary so that no further facilities can be added to the solution without violating the r-separation constraints. This paper deals with this second class of solution.

A logical question to ask is: what is the smallest number of facilities that can be deployed and placed such that no remaining sites can be used without violating one or more r-separation constraints? The basic idea is to find the smallest configuration that blocks to the greatest extent possible a maximal packing. We call this the Disruptive Anti-Covering Location Problem (DACLP). The objective of this paper is to develop a model to identify facility patterns that prohibit maximally packed configurations from being possible. This model can be useful in a number of possible applications. For example, the anti-cover location problem has been used by Grubesic and Murray (2008) to test possible policies on sex offender residential location. They used the ACLP to identify how many sex offenders could take up residence in a city when each offender had to live at least a given distance apart from all other sex offenders as well as from all public places where children are likely to be present (e.g. parks, day care facilities, and schools). A solution to the ACLP has been used to assess the impact of this proposed public policy for a given separation standard, but only under the assumption that a maximal packing will be possible and achievable. But, it is entirely possible that as sex offenders sequentially choose residential locations in some ad-hoc fashion, while ensuring that they keep away from other offenders and public spaces where children are present, the resulting pattern will be less than what could be maximally packed. In fact, some “choice” residential locations may effectively thwart a maximal packing and considerably reduce possible numbers of who could be accommodated in such a residential placement policy. Another example involves the use of the ACLP to test the impact of possible privatization of liquor sales associated with potential store placement under separation standards (Grubesic et al., 2012). Such an application helps to define the largest number of stores that could be placed. However, this approach ignores the fact that this situation may involve competitors, and each market entrant would most likely choose one or more location(s) which might preempt rivals from being able to locate in a close, packed-in arrangement when there are imposed separation requirements.

Therefore, attention should be directed towards what configurations disrupt maximal packing the most? The importance of this problem is both theoretical and practical. From either perspective, optimal solutions to the DACLP define a lower bound on the number of facilities that can be placed without violating the r-separation constraints as well as pre-empt any additional facilities from being feasibly added. This is an important consideration, particularly in problems where a lower-bound arrangement might occur, like in habitat nest/den site modeling, feasible residence locations for sex-offenders, franchise store location choice, or any other application for which the ACLP has been used or proposed. The main objective of this paper is to present a model for the DACLP, discuss possible solution techniques, and present several example solutions. The next two sections provide a brief background of the ACLP and a description of past approaches in formulating the ACLP as a binary integer programming problem. This is followed by a formulation for the disruptive anti-covering location problem. We also develop a model which can be used to identify “stable” configurations for different levels of potential facility deployment. Computational examples for both models are presented along with a discussion on potential avenues for modeling disruption within this new construct.

@&#BACKGROUND@&#

Dispersion has been an objective of considerable interest in the field of location science. General forms of this problem have also been described for broader cutting and packing type problems (Wang, Huang, Zhang, & Xu, 2002; Wäscher, Haußner, & Schumann, 2007). Disbursing resources such that they are equitably distributed has also been a problem of recent interest (see Batta, Lejeune, & Prasad, 2014; Prokopyev, Konk, & Martinez-Torres, 2009). There are four basic forms of dispersion modeling used in location science. The first involves the dispersal of facilities from population centers (see Church & Cohon, 1976; Church & Garfinkel, 1978). A second form of dispersion involves the dispersal of facilities from each other (see Moon and Chaudhry (1984), and extended work by Erkut (1990) and Current and Storbeck (1994)). A third form of dispersion, which is a hybrid of the first two forms, involves keeping facilities away from each other as well as away from centers of population (Berman & Huang, 2008). Lei and Church (2013) have shown that these previous modeling forms may be represented in a unified model, and Lei and Church (2015) presents an efficient formulation and exact algorithm solution strategy. The fourth form is based upon a standard of minimum separation. Moon and Chaudhry (1984) were the first to focus on the use of a minimum separation standard. They proposed to locate as many facilities as possible while keeping them at least r-distance apart from each other. They called this the anti-covering location problem and is the principal subject of this paper. It has also been referred to as the r-separation problem (Erkut, ReVelle, & Ülküsal, 1996) and the packing problem (Stephenson, 2005; Wang et al., 2002).

In addition to the examples given above in analyzing policies associated with sex-offender residence locations and liquor store outlets, Downs, Gates, and Murray (2008) used the anti-cover problem to analyze the carrying capacity of a population of Sandhill cranes, Williams (2008) employed a separation distance in the selection of biological reserve sites, Church (2013) has used it in estimating the size and extent of core habitat, and Murray and Church (1996) describe a form of anti-covering for a forest harvest selection problem. Problems that use a similar model structure as the ACLP have been defined for dashboard layout (Castillo, Kampas, & Pinter, 2008), placing cutting patterns on fabric (Wong & Leung, 2009), map label placement (Ribeiro & Lorena, 2008a), DNA sequencing (Joseph, Meidanis, & Tiwari, 1992), and the location of undesirable facilities (Berman & Huang, 2008; Murray & Church, 1999). A number of techniques have been used to solve the anti-cover problem and related problems including: greedy (Chaudhry, McCormick, & Moon, 1986), bee colony optimization (Dimitrijević, Teodorović, Simićc, & Šelmicć, 2012), Lagrangian relaxation (Murray & Church, 1997b), genetic algorithms (Chaudhry, 2006; Wei & Murray, 2014), column generation (Ribeiro & Lorena, 2008b), and greedy randomized adaptive search (Cravo, Ribeiro, & Lorena, 2008). Many other similar heuristic approaches have been developed for problems related to the ACLP such as: the container loading problem (Pisinger, 2002), two and three dimensional bin-packing problems (Bischoff, 2006; Lodi, Martello, & Vigo, 1999; 2002), packing cylinders into a rectangular container (Birgin, Martínez, & Ronconi, 2005), packing of unequal sized circles within a larger circle (Wang et al., 2002), and genetic algorithms for the two-dimensional strip packing problem using rectangular pieces (Bortfeldt, 2006).

Most of the applications of the anti-covering problem entail the use of an integer-linear programming model. Prospective sites are identified in advance as “discrete” locations, representing centers of raster cells (Church, 2013), commercial parcels (Murray & Kim, 2008; Grubesic et al., 2012), or nodes of a network. Murray and Church (1997a) have shown that the discrete anti-cover problem is an equivalent problem to the vertex packing problem on a network or the maximal independent set problem on a graph, and therefore is NP hard. There can be possible uncertainty in potential site positions, and Wei and Murray (2012) have analyzed the impacts of site uncertainty within the context of the anti-cover problem.

Optimal solutions to the anti-covering problem represent the largest number of facilities that can be simultaneously located while keeping each of them at least a minimum distance, r, from each other. Unfortunately, there can be circumstances in which a maximum packing is disrupted; that is, not optimally packed. They may be disrupted by earlier residential choices, already established crane nests and territories, or by poor site choices in already located franchisee establishments. Whether maximal packing arrangements are disrupted by accident, happenstance or by intent, such disruption and the potential impact of disruption should be of interest when using this type of model. In the next section we describe the two basic ways in which the anti-covering problem has been formulated as an integer programming problem. Following this we present a brief discussion on packing solutions and a model which seeks to maximally disrupt potential solutions to the anti-covering problem.

The disruptive anti-cover location problem is, in essence, a derivative of the anti-cover location problem (ACLP) as any solution to the disruptive case, by definition, must meet the conditions of anti-cover: that is, all facilities are located at least r-distance apart from each other. In this section we provide details in formulating the anti-cover location problem and in the next section we show how an anti-cover location model can be expanded to represent the disruptive form of anti-cover. Moon and Chaudhry (1984) presented the first formulation of the anti-covering problem as follows:

Notation:
                        
                           N
                        
                        
                           A discrete set of potential facility sites

Indices used to represent specific sites

The shortest distance between sites i and j
                           

The minimum acceptable distance of separation between any two located facilities

{j ∈ N| dij
                               < r where j ≠ i}, defined for each i ∈ N
                           


                              
                                 
                                    {
                                    
                                       
                                          
                                             
                                                1
                                                ,
                                                
                                                   if
                                                   
                                                   site
                                                   
                                                
                                                j
                                                
                                                   
                                                   is
                                                   
                                                   selected
                                                   
                                                   for
                                                   
                                                   a
                                                   
                                                   facility
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                0
                                                ,
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                           

A large positive number

This is a zero-one linear programming problem which is comprised of |N| binary variables and |N| constraints. The objective of this model (1) involves maximizing the number of sites selected for a facility. Constraints (2) ensure that if a given site i is selected for a facility, then all other sites less than r-distance away from site i cannot be used. Essentially, if 
                        
                           
                              x
                              i
                           
                           =
                           1
                        
                     , then the first term of the left hand side of this inequality will be M in value and this will preclude any sites in the set Q
                      
                        i
                      from being selected. When 
                        
                           
                              x
                              i
                           
                           =
                           0
                        
                     , then the first term of the left side of the inequality will be zero in value and this will allow sites in the set, Q
                      
                        i
                     , to be selected for a facility. Constraints (3) are the binary integer restrictions for the facility site selection variables. Small to medium sized problem instances can be solved using commercial solvers. Yoshimoto and Broadie (1994) and Murray and Church (1995) have shown how to tighten this model by reducing the value of M in each nodal constraint (2). This can help lower overall computational time.

A second formulation (ACLP2) of the anti-cover location problem was proposed by both Erkut et al. (1996) and Murray and Church (1996) and contains a constraint structure originally proposed by Thompson, Halterman, Lyon, and Miller (1973). This can be formulated using the previous notation as:

                        
                           (4)
                           
                              
                                 ACLP
                                 2
                                 :
                                 
                                 
                                    Maximize
                                    
                                    Z
                                 
                                 =
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       N
                                    
                                 
                                 
                                    x
                                    j
                                 
                              
                           
                        
                     subject to:

                        
                           (5)
                           
                              
                                 
                                    x
                                    i
                                 
                                 +
                                 
                                    x
                                    j
                                 
                                 ≤
                                 1
                                 
                                 
                                    for
                                    
                                    each
                                    
                                 
                                 i
                                 ,
                                 j
                                 ∈
                                 N
                                 
                                 
                                    where
                                    
                                 
                                 
                                 i
                                 
                                 ≠
                                 
                                 j
                                 
                                 and
                                 
                                 
                                    d
                                    
                                       i
                                       j
                                    
                                 
                                 
                                 <
                                 
                                 r
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    x
                                    j
                                 
                                 ∈
                                 
                                    {
                                    
                                       0
                                       ,
                                       1
                                    
                                    }
                                 
                                 
                                 
                                    
                                    for
                                    
                                    all
                                    
                                 
                                 j
                                 
                                 ∈
                                 
                                 N
                              
                           
                        
                     
                  

This second formulation uses what is called pairwise adjacency constraints (5). For each pair of distinct sites i and j that are too close to each other to be both selected for a solution, the condition, 
                        
                           
                              x
                              i
                           
                           +
                           
                              x
                              j
                           
                           ≤
                           1
                        
                     , prevents no more than one in the pair from being selected. Constraints (5) can be reduced in size through the use of higher ordered cliques. For example, whenever three sites t, u, and v are closer than r-distance from each other, then the three pairwise constraints (i.e.
                     
                        
                           
                              x
                              t
                           
                           +
                           
                              x
                              u
                           
                           ≤
                           1
                        
                     , 
                        
                           
                              x
                              u
                           
                           +
                           
                              x
                              v
                           
                           ≤
                           1
                        
                     , and 
                        
                           
                              x
                              t
                           
                           +
                           
                              x
                              v
                           
                           ≤
                           1
                        
                     ) can be replaced by one clique constraint of the following form:

                        
                           (7)
                           
                              
                                 
                                    x
                                    t
                                 
                                 +
                                 
                                    x
                                    u
                                 
                                 +
                                 
                                    x
                                    v
                                 
                                 ≤
                                 1
                              
                           
                        
                     
                  


                     Murray and Church (1996) show how to determine the smallest number of clique sets that represent all pairwise constraints of a given problem. It should be noted here that both formulations have been presented in an unweighted form. In some contexts it makes sense to weight sites preferentially. For example, the anti-cover model could involve the following weighted objective:

                        
                           (8)
                           
                              
                                 
                                    Maximize
                                    
                                    Z
                                 
                                 =
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       N
                                    
                                 
                                 
                                    
                                       w
                                       j
                                    
                                    
                                       x
                                       j
                                    
                                 
                              
                           
                        
                     where wj
                     represents the value or benefit of selecting site j. Although we address the unweighted form of anti-covering in this paper, virtually all of the work reported here can easily be applied to the weighted form as well.

In summary, there are two principal model forms for the anti-cover location problem where the potential sites are discrete and finite: the nodal restriction constraint form (ACLP1) and the clique constraint form (ACLP2). It is also important to recognize that hybrid models have been proposed as well (see Erkut et al. (1996) and Murray and Church (1997a)) which use a combination of nodal constraints and selected clique constraints and can lead to a reduction in the time needed to solve a given problem.

A feasible solution to an anti-covering location problem must have all located facilities placed at least r-distance apart. If a solution to an anti-covering location problem is feasible with respect to all separation requirements and has the property that no additional sites can be chosen for facilities without violating one or more separation constraints, then we call that solution a proper solution. An optimal solution to an ACLP must be proper, for if it wasn't proper additional sites could be added to the configuration without violating any of the separation requirements, thereby demonstrating that a better ACLP solution exists (and negating the premise that it was an optimal solution). We can formally define this as follows:

                        
                           Definition – Proper Solution: is a solution in which all unused site locations are strictly within the separation standard (e.g. < r-distance) of selected site locations and that each selected site location meets the separation standard between all other selected sites (e.g. ≥ r-distance away).
                     
                  

If a solution is proper, then all unused sites are too close to be chosen for facility locations, so that no further facilities can be placed. Therefore, an optimal solution to the ACLP must be a proper solution, deploying the largest number of facilities possible. The disruptive anti-covering location problem (DACLP) has the opposite goal as that of the anti-covering location problem. The DACLP can be formally defined as:

                        
                           Find a configuration of facilities that forms a proper solution while minimizing the total number of needed facilities.
                        
                     
                  

In order to form a proper solution, it is necessary to select a certain number of sites for facilities. Whereas the ACLP involves placing as many facilities as possible, the DACLP involves placing as few facilities as possible, while solutions to both problems are proper.

If we define:

                        
                           
                              
                                 
                                    
                                       p
                                       max
                                    
                                    =
                                 
                               the number of facilities deployed in an optimal anti-covering solution, and


                              
                                 
                                    
                                       p
                                       min
                                    
                                    =
                                 
                               the number of facilities deployed in an optimal disruptive anti-covering solution,

To illustrate this property and to demonstrate the differences between ACLP and DACLP, consider Fig. 1
                     , which depicts anti-covering on a Euclidean plane. Fig. 1A depicts two facility sites as small squares, A and B. Site A is encircled by two disks, one of radius r, the minimum separation distance between any pair of located facilities and a second inner disk of radius s = r/2. If two facility sites are within r distance, their disks of radius s will overlap. Since site B is exactly the needed separation distance of r away from site A, their inner disks of radius s just touch, but do not overlap. In this simple case, both sites A and B just meet this separation standard and can be simultaneously chosen as part of an ACLP solution. Fig. 1B depicts the case where there are three facility sites A, B, and C. Sites A and B have both been chosen for facilities (depicted as shaded squares). Since their disks of radius s do not overlap this solution is a feasible ACLP solution. Further, site C is very close to the disks of radius s encircling facilities A and B (see Fig. 1C showing that the disk encircling site C overlaps the disks of A and B). Because of this, the solution of facilities at A and B in Fig. 1B is proper, as site C is too close to be chosen as well. Fig. 1C depicts a different solution where site C has been chosen for a facility. The choice of this site precludes the choice of either sites A or B as the disk of site C overlaps those of A and B. Thus, this solution is also a proper solution. For this simple case of 3 sites, Fig. 1B depicts the optimal solution to the ACLP and Fig. 1C depicts an optimal solution to the DACLP.

An optimal solution to the DACLP must be feasible with respect to separation, proper in that no additional sites can be chosen, and utilize the smallest number of facilities, P
                     min . Using the notation that we have already introduced, we can formulate the disruptive anti-covering location problem (DACLP) as follows:

                        
                           (10)
                           
                              
                                 DACLP
                                 :
                                 
                                 Minimize
                                 
                                    ∑
                                    j
                                 
                                 
                                    x
                                    j
                                 
                              
                           
                        
                     Subject to:

                        
                           (11)
                           
                              
                                 M
                                 
                                    x
                                    i
                                 
                                 +
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       
                                          Q
                                          
                                             
                                             i
                                          
                                       
                                    
                                 
                                 
                                    
                                       x
                                       j
                                    
                                    
                                    ≤
                                    
                                    M
                                    
                                    
                                       
                                       for
                                       
                                       all
                                       
                                    
                                    i
                                    
                                    ∈
                                    
                                    N
                                 
                              
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    x
                                    i
                                 
                                 +
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       
                                          Q
                                          
                                             
                                             i
                                          
                                       
                                    
                                 
                                 
                                    
                                       x
                                       j
                                    
                                    
                                    ≥
                                    
                                    1
                                    
                                    
                                       
                                       for
                                       
                                       all
                                       
                                    
                                    
                                    i
                                    
                                    ∈
                                    
                                    N
                                 
                              
                           
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    x
                                    j
                                 
                                 
                                 ∈
                                 
                                 
                                    {
                                    
                                       0
                                       ,
                                       1
                                    
                                    }
                                 
                                 
                                 
                                    
                                    for
                                    
                                    all
                                    
                                 
                                 
                                 j
                                 
                                 ∈
                                 
                                 N
                              
                           
                        
                     
                  

The objective (10) involves minimizing the number of sites selected for facility placement. Constraints (11) ensure that each selected site is separated by at least r-distance from all other located facilities. These are the same nodal separation constraints used in ACLP1 above. Basically, constraints (11) ensure that if site i is chosen for a facility, then no site in the set Q
                      
                        i
                      can be selected or vice versa. This means that the resulting configuration of selected sites is feasible with respect to the separation conditions. Constraints (12) are key to the model. Without them the optimal solution would be to locate exactly zero facilities, as the minimum number can be achieved when no facilities are located. Constraints (12) are used to ensure that the resulting solution is proper, in that any unused site is closer than r distance from a chosen site, making all remaining sites ineligible to be added without violating separation constraints. Mathematically, constraints (12) require that either a site i has been selected for the configuration or a site closer than r-distance of site i has been selected for the solution. From a slightly different perspective, constraints (12) represent location set covering constraints (Toregas, 1970). Within the context of the DACLP, these covering constraints can be thought of as requiring that all unused candidate sites be covered by a facility located within r distance of them. Thus, constraints (12) ensure that the resulting configuration is proper, where no additional sites can be selected without violating the separation requirements. In essence, constraints (12) force the model to locate enough facilities that all sites that are not selected fall within a distance range that is strictly less than r of at least one located facility.

To demonstrate how constraints (11) and (12) work together, consider the case where a facility is located at site i (
                        
                           
                              x
                              i
                           
                           =
                           1
                        
                     ). If 
                        
                           
                              x
                              i
                           
                           =
                           1
                        
                     , then constraint (11) requires that all neighboring sites of i (Q
                      
                        i
                     ) be excluded from being selected for a facility. At the same time, selecting site i means that sites nearby in the set (Q
                      
                        i
                     ) are covered in constraint (12), meaning that each of these sites are too close to be selected for a facility. In this case, site i effectively “covers” all of its site neighbors (Q
                      
                        i
                     ). If site i is not selected (
                        
                           
                              x
                              i
                           
                           =
                           0
                        
                     ) then constraint (11) allows for a neighboring site within r of i (Q
                      
                        i
                     ) to be chosen for a facility, and constraint (12) requires that at least one of the candidate sites in set Q
                      
                        i
                      be selected as a facility location, effectively requiring “coverage” of site i. If site i was not selected, nor were any sites in Q
                      
                        i
                     , then the resulting solution would not be proper. Altogether, the model involves finding a feasible, proper anti-covering solution that uses the smallest number of facilities. This is a critically important distinction. The Anti-Covering Location Problem (ACLP) finds the proper solution representing the maximum configuration of selected sites whereas the Disruptive Anti-Covering Location Problem (DACLP) finds the proper solution representing the minimum configuration of selected sites, or the case for which maximal packing has been disrupted the most. The next section demonstrates the importance of the DACLP.

The above model can also be formulated with pairwise (5) and higher ordered clique constraints (7) instead of constraints (10) as well as be formulated with a combination of both constraints (5) and (7). In many circumstances a hybrid model using both types of constraints may prove to be the best when using off-the-shelf commercial solvers. The model as formulated is an integer programming problem. It is important to observe that constraints (12) are classical set covering constraints, which ensure that each site not used is covered by some selected site within a distance strictly less than r. Because of this, the above model is a combined form of the vertex packing problem and the set covering problem and it is functionally related to the class of NP-hard problems. The fact that it is related to two complex problems virtually ensures that the above model will not always be solvable to provable optimality. As the number of sites increases, we suspect that the difficulty of the problem will tend to increase, and for large problems, one may have to resort to a heuristic approach. In this paper, we concentrate our attention to the solution of disruptive anti-covering location problems using the DACLP formulation. In the next section we provide details associated with the application of the model to two different data sets.

In this section we provide computational examples associated with solving the DACLP. The presentation here is not meant to be exhaustive, but more illustrative of what can be learned from solving the DACLP as compared to the ACLP. We solved both ACLP and DACLP problems on two different spatial datasets over a range of separation distances. The first application involved the well-known Swain (1971) data set of 55 nodes. Each node is a potential facility site location. The second application used the 372 node dataset from Ruggles and Church (1996). For the ACLP, we solved the model as specified in conditions (1)–(3) and for the DACLP we solved the model as specified in conditions (10)–(13). These two formulations involve a “neighborhood” or nodal style of separation constraints, i.e. (2) and (11). We used the approach of Yoshimoto and Broadie (1994) to define the main coefficient for such constraints. We did not attempt to test other formulations, especially a hybrid form involving clique-based separation constraints as this was not the central theme of our work. We used the Mosel (version 3.4.3) modeling language to set up a given problem and then solved each problem with the Xpress solver (version 25.01.05). Xpress and Mosel are products of FICO Corporation. We used a 2.4 Gigahertz Intel Xeon (E5530) workstation with 12 Gigabytes of memory operating with Windows 7 to solve the models.


                     Fig. 2
                      presents the results obtained when solving a selected set of anti-covering and disruptive anti-covering problems applied to the 55 node data set of Swain (1971). Separation distances ranged from 4.00 to 15.00 in increments of 1.00 and from 15.0 to 30.00 in increments of 5.00 as well as the distances of 40.00, 50.00 and 60.00 for a total of 18 problems. The ACLP objective value is indicated by the solid black line. The DACLP objective value is indicated by the dashed black line. The gap percentage between the ACLP and DACLP solution is indicated by the dashed gray line. The horizontal axis of the figure shows the separation distances used. Model setup times and solver times are not reported for each separation distance as all setup times were less than 0.002 seconds and all problems were solved in less than 0.055 seconds. Sites that were closer than r-.00001 distance units were considered to be too close and were prevented from being simultaneously used in a solution. Solutions were obtained by setting specific separation distances, ranging from a low of 4.0 to a high of 60.0. For each specific separation distance, the number of facilities located by the anti-cover model and the disruptive anti-cover model are listed. For example, for a separation distance of 10.0 the anti-cover model packed 17 facilities across the 55 sites and kept all facilities separated by at least 10 distance units. For that same separation distance, the disruptive anti-cover solution involved placing 9 facilities. That is, it is possible to locate 9 facilities in such a manner as to keep all of the facilities separated by at least 10 distance units where all other sites are too close to selected sites to allow any additional sites to be selected. The difference between the number of facilities deployed by the ACLP and the DACLP can be expressed as a percentage difference (i.e. difference / # deployed by the ACLP expressed as a percentage). For example, the difference in the number of facilities deployed when r = 10 is 8. This difference divided by the number deployed by ACLP (i.e. 8/17 = 0.47) means that the disruptive case deploys 47percent fewer facilities as compared to the packed case, which is a substantial amount. The percentages of differences are given for all of the separation distances. Disruption percentages range from a low of 0percent to a high of 75percent.

It is important to observe that the difference between what can be located in the packed case (anti-cover) vs. the disruptive case (disruptive anti-cover) is quite small for relatively small distances as well as for relatively large distances. In the mid-range of distance values, solutions for these two problems can differ considerably. This fact suggests that the ACLP as applied to certain planning or modeling applications (e.g. territorial species carrying capacity, sex offender residences, retail outlet site location, etc.) may result in solutions which are much too optimistic. Because of this the lower bound generated by the DACLP is equally valuable in understanding the impact of siting behavior in light of some policy.

It makes sense that the two problems would involve similar facility deployment when the distance is so large that only one facility can be sited in each model (r = 60.0). It is also understandable that when separation values are very small (e.g. r = 4.0), a high fraction of sites can be chosen in the ACLP case, and that at such small distances, the level of possible disruption is limited. Overall, the results in Fig. 2 indicate that there can be a substantial difference between solutions from these two models and this can be of critical importance when using the ACLP as an assessment methodology. The two types of solutions capture the range in which proper solutions exist for the anti-cover location problem.


                     Fig. 3
                      depicts the optimal solution to the ACLP when using the separation distance of 12.0. All 55 potential facility sites are shown. The optimal solution to the ACLP involves the location of 13 facilities. All selected ACLP sites are depicted by shaded boxes. The circles centered on the 13 facility locations are depicted with a radius of r = 12.0. Observe that no selected location falls within the circle of another selected site (this also means the circles of radius s = 6.0 drawn about the selected sites would have no overlap). Thus, each of the 13 sites is separated by at least the distance of 12.0 and therefore meets the separation requirements. Further, note that all sites fall within the circular disks of one or more selected facility locations, indicating that the solution is a proper one as well. To understand the differences between the ACLP and DACLP, points chosen as a part of the optimal DACLP solution are depicted in Fig. 3 with an X. There is only one site (i.e. site 52) which is selected in both solutions.


                     Fig. 4
                      depicts the optimal DACLP solution for the same separation distance standard of 12.0. For the DACLP case, only 7 facilities are needed. This solution uses 6 fewer facilities, a 46.15percent reduction, than that of the optimal ACLP solution. The selected sites are depicted with shaded boxes, just as in Fig. 3. All sites that were not selected fall within one or more circles of radius r = 12.0 drawn around the selected sites. This again demonstrates that this solution is proper. It also meets the separation standard of r = 12.0 as each selected site falls outside the disks drawn about all other selected sites. This means that it is a feasible, proper solution to ACLP. However, for this case it uses the minimum number of facilities needed to be proper as well as be feasible (thus DACLP optimal). For this figure, sites chosen as a part of the optimal ACLP solution are depicted with an X. Both solutions are useful in understanding the spatial nuances between the two problems, ACLP vs. DACLP. For example, a number of the selected sites of the ACLP tend to be on the periphery of the point set (i.e. sites 51, 24, 28, 14, 54, 40, and 52) whereas the optimal solution to the DACLP uses only one of these peripheral sites (site 52). It should also be observed that the sites selected as a part of the ACLP are placed much closer together than the sites selected as a part of the DACLP. Even though selected sites are further apart in the DACLP, they still maintain the condition of being proper, i.e. no facility locations can be added without violating a separation constraint or without relocating one or more selected facility locations.

We also solved the ACLP and DACLP models for a larger dataset of 372 nodes (Ruggles & Church, 1996). Fig. 5
                      and Table 1
                      present the results of these problems using separation distances that ranged from 2 to 15. Fig. 5 shows the ACLP solution as a solid black line, DACLP solution as a dashed black line, and the percentage gap between solutions as the dashed gray line for several separation distances. For the distance of 2.0, the anti-cover model involved locating 110 facilities, or selecting more than 1 out of 4 sites for a facility on the average. For that same distance, the disruptive model was able to find a proper solution which involved only 68 facilities, a 38.18percent reduction. Over the range of distance values, the disruptive case often differs considerably from the packed case in terms of the number of facilities that were located, a range of disruption from 38.18percent to 63.64percent.

Solution times for solving the ACLP and DACLP on the Ruggles and Church (1996) dataset are given in Table 1 as well. For this larger data set, it can be seen that the disruptive case can be solved in considerably less time than the original ACLP. In most cases the disruptive model (DACLP) was solved in less than a tenth of the time needed for the maximal packing (ACLP) model. Although it may be possible to reduce computational times below what is reported here by using a selected set of clique constraints or a hybrid of cliques and nodal constraints, we believe that the disruptive model is easier to solve in general as compared to the classic anti-covering location problem. It should also be mentioned that modeling languages can exact a cost in terms of execution time, however, this cost is often outweighed by the savings in analyst's time in model programming. The Mosel setup times are not given for the problems solved in Table 1 as all ACLP models were set up in 0.033 seconds or less and all DACLP models were set up in 0.046 seconds or less.

The results of Figs. 2 and 5 are even more significant when considering the potential impact of possible disruption in an application. For example, Downs et al. (2008) use the ACLP model to estimate the number of Sandhill Crane nest sites that can be positioned in a habitat, keeping each nest site separated from others by a minimal separation distance. Such a result may yield an overly optimistic estimate of habitat use as existing or new Sandhill Crane nest sites may disrupt others from being positioned in an optimal manner. Thus, the DACLP model can be used to estimate the maximum level of “disruption” that actual patterns may depart from a theoretical maximum.

In order to further highlight the importance of the DACLP, consider the case of de-regulation as applied to licenses to sell liquor such as that considered by Grubesic et al. (2012). Solutions to the ACLP may provide a too optimistic outlook and may therefore misinform policy makers. For example, policy makers may expect a greater number of retailers in the marketplace and thus greater market penetration and sales from licensed retailers. As another example, Grubesic and Murray (2008) use the ACLP to estimate how many sex offender residences can be located in a town, when each residence needs to be at least a minimum distance apart from each other as well as sensitive places like schools and parks. Whereas the ACLP can be used to solve for an “optimistic case,” the DACLP can be used to solve for the “pessimistic case”, if the objective is to locate as many individual residences as possible. The same can be said of other applications of the ACLP, when there may be an agent, adversary, or competitor that acts independently where their decisions could disrupt a competitor's maximally packed solution. Within a retail/service perspective, Church and Bell (1990) have shown that “disruptive” and “stable” patterns can exist theoretically when applying Central Place theory to an ideal lattice. The results reported here suggest that such disruptive solutions can be a practical reality. Thus, the DACLP has broad implications and should be considered for many types of problems where the ACLP has been applied.

A proper solution to the anti-cover problem maintains a minimum separation of r distance between any pair of located facilities where additional facilities cannot be located without violating a separation constraint. As described in the previous section, the number of facilities, ps
                     , deployed in all proper solutions to a given ACLP will fall within the range:

                        
                           (14)
                           
                              
                                 
                                    P
                                    min
                                 
                                 ≤
                                 
                                    p
                                    s
                                 
                                 ≤
                                 
                                    P
                                    max
                                 
                              
                           
                        
                     
                  

Where
                     
                        
                           
                              p
                              s
                           
                           =
                        
                     the number of facilities deployed in a proper solution to an anti-cover location problem and where P
                     max  and P
                     min can only be generated by solving the ACLP or DACLP models respectively. What we do not know from the outset is whether proper solutions exist for each discrete value of ps
                      within the range or whether solutions exist only at the upper and lower bounds of the range. We also do not know from the outset whether multiple proper configurations exist for specific values of ps
                     . We call any value of ps
                      within the range for which one or more proper solutions exist, a stable level. It makes sense to identify when stable levels exist between the upper and lower bounds, P
                     max  and P
                     min . One may also wish to know how stable ACLP solutions/configurations vary between P
                     max  and P
                     min . Knowing this variation is informative as to how likely a problem may be optimally packed or disrupted. That is, are there many intermediate stable solutions that can thwart an optimal packed arrangement or do few such “disruptive” solutions exist? We can identify whether a stable level exists by appending the following constraint to the model described by conditions (10)–(13):

                        
                           (15)
                           
                              
                                 
                                    ∑
                                    j
                                 
                                 
                                    
                                       x
                                       j
                                    
                                    ≥
                                    
                                       p
                                       s
                                    
                                 
                              
                           
                        
                     
                  

Constraint (15) maintains that at least ps
                      facilities are to be deployed. The value of ps
                      can potentially range from P
                     min  to P
                     max . If an optimal solution to this problem deploys exactly ps
                      facilities, then ps
                      represents a stable level of disruption. If not, then the solution deploys some number of facilities p* > ps
                     . This means that all values of p strictly between p* and ps
                     , including ps
                      itself, are not stable levels for the problem instance. Thus, in solving for the existence of stable levels, it makes sense to first solve the DACLP model to generate the value of P
                     min . Then, one can solve for a stable solution in a series of steps. Initially, this may be done by setting the bound of 
                        
                           
                              p
                              s
                           
                           =
                           
                              P
                              min
                           
                           +
                           1
                           .
                        
                      After solving that problem, each subsequent problem is defined by setting 
                        
                           
                              p
                              s
                           
                           =
                           
                              p
                              *
                           
                           +
                           1
                        
                      until no feasible solution exists (or when p* = p
                     max  or 
                        
                           
                              p
                              *
                           
                           =
                           
                              p
                              max
                           
                           −
                           1
                        
                      if the value of P
                     max  has already been determined). This strategy can be used to efficiently solve for all stable levels of p. We used this strategy in solving for stable levels to several example problems that were presented in the previous section. We call this GSS-DACLP, for Generating Stable Solutions for DACLP.


                     Table 2 presents the results for the search for stable levels for disruptive anti-covering when solving for selected separation distances on the Swain data set. We solved for stable disruption levels for 6 different separation distances ranging from 5.0 to 30.0 with increments of 5.0. Each of these problems was solved in 0.05 seconds or less. Altogether, we found stable disruptive solutions for all 26 possible cases. At first this seems to be somewhat counterintuitive, however, after the fact it seems entirely reasonable as one should be able to make just the needed amount of adjustment to a disruptive pattern so that exactly one more facility can be added, bringing it to the next stable level. Of course this will not hold for all problems, but we suspect that this would be commonplace rather than the exception. One should also note that the solution times are quite small. We suspect that a constraint of the form (12) represents a strong cut and helps to tighten the overall formulation. This property was originally identified by Toregas (1970) in solving location set covering problems using linear programming where a constraint of the form of (12) was found useful in identifying all integer solutions. Although it is hard to generalize from an example problem, it is helpful to view the transition of facilities in moving from the stable pattern using P
                     min  facilities to one involving P
                     max  facilities.

Together, the DACLP and ACLP models can be used to generate the range of proper solutions to a given problem instance. A constrained version of the DACLP model can then be used to generate stable levels within the range of feasible, proper values of p. As stated before, disruption can be accidental, natural, or intentional. For example, the ACLP can be used to generate an arrangement that maximizes the number of Sandhill cranes that can be supported in a bounded area of suitable habitat, where crane nests are separated by a minimum distance of r (Downs et al., 2008). But current nest patterns may not be optimal and together they may thwart the existence of a larger number of nests being supported. The same can be said for a problem of locating liquor stores (Grubesic et al., 2012).

If liquor stores are to be located at least r distance apart from each other and at least a certain distance from special areas, like schools, then an existing store pattern may “disrupt” or prevent the location of new entrants. It also may be possible for a new entrant to locate in such a manner as to prevent others from locating nearby and effectively increase their neighborhood market size (Church & Bell, 1990). Such a circumstance leads to two types of location questions: (1) what is the best location that a new entrant can make within the separation constraints and effectively develop the largest “hegemony” against others in possible encroachment? and; (2) how many facilities are needed and what are their locations that will aid resulting disruption the most? Both problems are of considerable interest. The first of which can be solved by a site search, looking for the site which effectively controls the greatest amount of surrounding area. The second problem is of considerably greater complexity and is an important area for future research. In addition, the importance of searching for stable levels of the ACLP and DACLP should be considered, especially when there are existing sited facilities. Understanding how a new entrant may locate given existing locations is important and can easily be implemented following the model implementation to identify stable levels.

@&#CONCLUSIONS@&#

This paper deals with a new form of the anti-covering location problem (ACLP). This classic problem involves maximizing the number of facilities being placed while keeping them at least r distance apart from each other. The ACLP has been used in a number of different application areas, including reserve design, defense, forest operations models, DNA sequencing, and analyzing policies impacting potential sex offender residence location as well as potential liquor store patterns, among others. This fundamental spatial optimization problem was originally proposed by Moon and Chaudhry (1984). We have defined that any feasible solution to the ACLP (i.e. feasible with respect to the separation constraints) where no further sites can be selected without violating one or more separation conditions to be a proper solution. Although there has been considerable interest in finding the maximum number of facilities that meet the separation requirements, virtually no attention has been directed to the existence of proper solutions which use less than what could be maximally placed. Such patterns are disruptive in the sense that they prevent an optimal anti-cover solution from occurring. Finding disruptive anti-cover patterns is the objective of this paper.

The disruptive anti-cover problem (DACLP) involves finding a solution which minimizes the number of facilities being placed, ensuring that all facilities are separated from each other by a minimum separation distance, r, and where no further sites can be selected without violating a separation condition. We have formulated an integer-linear model for the disruptive anti-covering problem, provided example solutions, and discussed how this model can be used to identify stable levels of disruption. Because the DACLP is functionally related to the vertex packing problem and the location set covering problem, it falls within the class of NP hard. Future research should be directed towards identifying placement strategies to thwart possible location disruption to the greatest extent possible.

The results of our analysis demonstrate the importance of the disruptive form of anti-covering. In fact, when policies are analyzed using the anti-cover location model (e.g. sex offender residences or carrying capacity of a population of Sandhill Cranes), it makes sense to solve the disruptive form of this problem as well in order to capture the range of possible outcomes. When the problem encompasses a number of independent decision making entities, sex offenders (or birds) in selecting housing (or nest sites), it is likely that an optimal pattern will not be generated. Thus, solutions to the DACLP are important and informative within the context of policy analysis and decision making.

@&#ACKNOWLEDGEMENTS@&#

We wish to thank the anonymous reviewers for their very valuable comments and suggestions.

@&#REFERENCES@&#

