@&#MAIN-TITLE@&#Amplitude-aware permutation entropy: Illustration in spike detection and signal segmentation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Permutation entropy (PE) is a fast method to evaluate the irregularity of signals.


                        
                        
                           
                           PE does not consider the average of amplitude values and equal amplitude values.


                        
                        
                           
                           We propose amplitude-aware PE (AAPE).


                        
                        
                           
                           We evaluate the AAPE method for signal segmentation and spike detection applications.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Signal irregularity

Amplitude-aware permutation entropy

Spike detection

Signal segmentation

Electroencephalogram

Extracellular neuronal data

@&#ABSTRACT@&#


               
               
                  Background and objective
                  Signal segmentation and spike detection are two important biomedical signal processing applications. Often, non-stationary signals must be segmented into piece-wise stationary epochs or spikes need to be found among a background of noise before being further analyzed. Permutation entropy (PE) has been proposed to evaluate the irregularity of a time series. PE is conceptually simple, structurally robust to artifacts, and computationally fast. It has been extensively used in many applications, but it has two key shortcomings. First, when a signal is symbolized using the Bandt–Pompe procedure, only the order of the amplitude values is considered and information regarding the amplitudes is discarded. Second, in the PE, the effect of equal amplitude values in each embedded vector is not addressed. To address these issues, we propose a new entropy measure based on PE: the amplitude-aware permutation entropy (AAPE).
               
               
                  Methods
                  AAPE is sensitive to the changes in the amplitude, in addition to the frequency, of the signals thanks to it being more flexible than the classical PE in the quantification of the signal motifs. To demonstrate how the AAPE method can enhance the quality of the signal segmentation and spike detection, a set of synthetic and realistic synthetic neuronal signals, electroencephalograms and neuronal data are processed. We compare the performance of AAPE in these problems against state-of-the-art approaches and evaluate the significance of the differences with a repeated ANOVA with post hoc Tukey's test.
               
               
                  Results
                  In signal segmentation, the accuracy of AAPE-based method is higher than conventional segmentation methods. AAPE also leads to more robust results in the presence of noise. The spike detection results show that AAPE can detect spikes well, even when presented with single-sample spikes, unlike PE. For multi-sample spikes, the changes in AAPE are larger than in PE.
               
               
                  Conclusion
                  We introduce a new entropy metric, AAPE, that enables us to consider amplitude information in the formulation of PE. The AAPE algorithm can be used in almost every irregularity-based application in various signal and image processing fields. We also made freely available the Matlab code of the AAPE.
               
            

@&#INTRODUCTION@&#

Quantifiers based on information theory concepts, such as different entropy approaches and statistical complexities, can be used to characterize the dynamics associated with time series [1]. Entropy, which is a popular and powerful indicator of the regularity of signals, has been extensively used in various signal and image processing applications [2–5]. The level of uncertainty and irregularity of the signal or system can be measured with entropy concepts. Higher entropy values generally demonstrate higher uncertainty, while lower entropy ones illustrate more regularity and certainty of a time-series [6].

Several entropy methods, such as approximate entropy (ApEn) [7], sample entropy (SaEn) [8], fuzzy entropy (FuEn) [9], permutation entropy (PE) [10] and wavelet entropy [11], have been introduced over the few past decades to measure the irregularity of time series. Each of them has its own advantages and disadvantages [12,13].

PE is based on the permutation patterns or the order relations among values of a signal [14]. In fact, PE was naturally proposed based on comparing the order of neighboring relative values, rather than by apportioning amplitudes according to different levels [14]. Compared with other entropy approaches, PE is theoretically simple, relatively robust to observational and dynamical noise, and computationally fast. Moreover, PE is more robust than the zero-crossing rate to the signal length, although both have relatively similar theoretically notions [10]. These characteristics make the PE an appealing tool used in a large number of real world signal and image processing applications [14–16]. PE-based approaches have been used in various studies, such as distinguishing noise from chaos [17], dependences between time series [18], and econophysics [19] and physiological applications [20–22]. PE has been widely used in biomedical signal processing study, such as epilepsy [23], anesthesiology [24], and cognitive neuroscience [25] using electroencephalogram (EEG) and electrocardiogram (ECG) time series.

In spite of the aforementioned advantages over other feature extraction algorithms, PE has two main shortcomings. First, the mean value of amplitudes and the differences between neighboring samples are not considered while a signal is symbolized by the original PE definition. As a result, vectors with very dissimilar amplitudes may be mapped to the same symbol. Second, the problem arising when two samples have equal amplitude values (which is particularly relevant for digitized time series) was not precisely solved in the basic definition of PE [14].

In [26], a modified algorithm was proposed to address the first abovementioned PE's limitation, i.e., its inability to differentiate between distinct patterns of a certain motif. Their approach stands for the fact that patterns might be too disparate in amplitudes and variances. It weights the relative frequency of each extracted vector (associated with every motif) with the variance of the corresponding part of the signal [26]. This leads to a powerful and widely applicable tool. However, this technique would not be able to distinguish the case where a constant value is added to the original signal because its variance would not change. In addition, it does not allow to customize how much importance is given to the amplitude information represented by the variance value.

Bian et al. tackled the equal values’ problem [27]. They used the same symbols to represent equal values. As a result, the algorithm yields a more accurate characterization of system states. In spite of its advantage for long signals, the number of potential motifs increases considerably in comparison with the original PE, which might yield the modified algorithm unreliable in the case of short signals. They employed three groups of heart rate variability data to show the performance of their method [27]. In [28], an algorithm based on Lyapunov exponent was also proposed to overcome the equal values’ problem. Although it improves the performance of PE, this algorithm is sensitive to the precision regulation factor α.

In order to overcome the PE drawbacks and improve on existing alternatives, in this paper, we propose two novel modifications of PE, leading to an amplitude-aware PE (AAPE). We also illustrate them using synthetic and real signals for signal segmentation and spike detection applications.

The EEG is a signal that reflects the electrical activity of a large group of neurons of the brain. It is a powerful measure to diagnose and treat the brain diseases, disorders, and abnormalities [6,29]. It is frequently needed to label the EEG signals by segments of similar statistical characteristics that are meaningful to clinicians and neurophysiologists [29]. Within each segment, the signals are considered statistically stationary, usually with similar mean and standard deviation [29,30]. There are a number of approaches to segment time series based on nonlinear analysis [30–35]. To understand the performance of the proposed method for signal segmentation, two kinds of signals, namely, synthetic signals and real EEG data, are used.

Spike detection is a widely used kind of analysis applied to extracellular neuronal signals to understand brain diseases and abnormalities [1,36]. The quality of a spike detection method remarkably influences the performance of subsequent steps, such as spike sorting (i.e., grouping the recorded spikes into clusters based on the similarity of their shapes). Errors in detecting the number and location of spikes will inevitably propagate through all later analyses [37,38]. To understand the performance of the proposed method for spike detection, two kinds of signals, including realistic synthetic and real neuronal data, are utilized.

The paper is organized as follows. In Section 2, we explain the concept of PE. Next, the proposed modifications to PE are described in Section 3. In Section 4, the synthetic signals and real EEG data for signal segmentation and realistic synthetic and real neuronal data for spike detection are presented. Then, the results of the proposed method and the conventional ones are compared and discussed in Section 5. Finally, Section 6 provides the conclusion of the paper.

Assume we have a given time series of length N, and let the time series be y
                     ={y
                     1, y
                     2, ..., y
                     
                        N
                     }. For each time t, we embed the signal y in a d-dimensional space to obtain the reconstruction vectors 
                        
                           
                              Y
                              t
                              
                                 d
                                 ,
                                 l
                              
                           
                           =
                           {
                           
                              y
                              t
                           
                           ,
                           
                              y
                              
                                 t
                                 +
                                 l
                              
                           
                           ,
                           ...
                           ,
                           
                              y
                              
                                 t
                                 +
                                 (
                                 d
                                 −
                                 2
                                 )
                                 l
                              
                           
                           ,
                           
                              y
                              
                                 t
                                 +
                                 (
                                 d
                                 −
                                 1
                                 )
                                 l
                              
                           
                           }
                        
                      for t
                     =1, 2, …, N
                     −(d
                     −1)l, where d and l denote the embedding dimension and the time delay, respectively. Next, each 
                        
                           
                              Y
                              t
                              
                                 d
                                 ,
                                 l
                              
                           
                        
                      is arranged in an increasing order, with integer indices from 0 to d-1, as 
                        
                           {
                           
                              y
                              
                                 t
                                 +
                                 (
                                 
                                    j
                                    1
                                 
                                 −
                                 1
                                 )
                                 l
                              
                           
                           ,
                           
                              y
                              
                                 t
                                 +
                                 (
                                 
                                    j
                                    2
                                 
                                 −
                                 1
                                 )
                                 l
                              
                           
                           ,
                           ...
                           ,
                           
                              y
                              
                                 t
                                 +
                                 (
                                 
                                    j
                                    
                                       d
                                       −
                                       1
                                    
                                 
                                 −
                                 1
                                 )
                                 l
                              
                           
                           ,
                           
                              y
                              
                                 t
                                 +
                                 (
                                 
                                    j
                                    d
                                 
                                 −
                                 1
                                 )
                                 l
                              
                           
                           }
                        
                     , where j
                     * is the (time) index of the element in the reconstruction vector. For different samples, there are d! potential ordinal patterns or d! symbol sequences π, termed “motifs” [10]. Then we can count the occurrences of the order pattern i, which is denoted as f(π
                     
                        i
                     ), i
                     =1, 2, …, d!. For each π
                     
                        i
                     , p(π
                     
                        i
                     ) represents the relative frequency as follows:
                        
                           (1)
                           
                              
                                 p
                                 (
                                 
                                    π
                                    i
                                 
                                 )
                                 =
                                 
                                    
                                       f
                                       (
                                       
                                          π
                                          i
                                       
                                       )
                                    
                                    
                                       N
                                       −
                                       d
                                       +
                                       1
                                    
                                 
                              
                           
                        
                     
                  

Finally, the PE is computed as follows [10,14]:
                        
                           (2)
                           
                              
                                 P
                                 E
                                 (
                                 
                                    y
                                 
                                 ,
                                 d
                                 ,
                                 l
                                 )
                                 =
                                 −
                                 
                                    ∑
                                    
                                       
                                          π
                                          i
                                       
                                       =
                                       1
                                    
                                    
                                       
                                          π
                                          i
                                       
                                       =
                                       d
                                       !
                                    
                                 
                                 
                                    p
                                    (
                                    
                                       π
                                       i
                                    
                                    )
                                 
                                 ln
                                 p
                                 (
                                 
                                    π
                                    i
                                 
                                 )
                              
                           
                        
                     When all motifs have equal probability, the largest value of PE is obtained, which has a value of ln(d
                     !). In contrast, if there is only one p(π
                     
                        i
                     ) different from zero, which illustrates a completely regular signal, the smallest value of PE is obtained [10,14].

Due to the key role of the embedding dimension d in PE, an important issue is choosing the appropriate value for it. In order to work with reliable statistics when calculating PE, it is highly recommended d
                     !≪
                     N 
                     [1,21]. In addition, when d is too large, the computation time will be higher. On the other hand, when d is high, the number of accessible states will be large, and the value of the PE will probably be more reliable. All in all, we should make a trade-off between the aforementioned cases.

The original PE has two main drawbacks:
                        
                           (1)
                           Since PE solely considers the ordinal structure of a time-series, some crucial information might be missed. For example, {1,10,2} and {1,3,2} have similar permutations, leading to the same motif “021” because the extent of the differences between sequential samples are not considered in the original definition of PE. Another example is the fact that both {1,3,2} and {11,13,12} have the same ordinal pattern “021” because the mean value of these samples is not considered in the original PE method.

When there are equal values in the vector of values, Bandt and Pombe [10] proposed ranking the possible equalities based on their order of emergence or solving this condition by adding noise. Considering the first alternative, for instance, the permutation pattern for both {1,2,4} and {1,4,4} would be “012”. As an another example, assume z
                              
                                 1
                              
                              ={1,2,2,2} and z
                              
                                 2
                              
                              ={1,2,3,4}. The PE of z
                              
                                 1
                               is exactly the same as z
                              
                                 2
                              , both equalling 0 although, unlike z
                              
                                 1
                              , z
                              
                                 2
                               is strictly ascending. Adding noise may not lead to a precise answer because, for example, {1,4,4} has two possible permutation patterns as “012” and “021” and there are not any differences between them. It should be noted that this problem is particularly relevant for digitized signals.

To address the first problem, we suggest adding a variable contribution, depending on amplitude, instead of a constant number to each level in the histogram representing the probability of each motif. That is, in PE, when a vector is assigned to a motif, the histogram bin corresponding to the motif is incremented by one. In contrast, in AAPE, a relative normalized probability 
                        
                           
                              A
                              d
                           
                           
                              ∑
                              
                                 k
                                 =
                                 1
                              
                              d
                           
                           
                              
                                 
                                    
                                       y
                                       
                                          t
                                          +
                                          (
                                          k
                                          −
                                          1
                                          )
                                          l
                                       
                                    
                                 
                              
                           
                           +
                           
                              
                                 1
                                 −
                                 A
                              
                              
                                 d
                                 −
                                 1
                              
                           
                           
                              ∑
                              
                                 k
                                 =
                                 2
                              
                              d
                           
                           
                              
                                 
                                    
                                       y
                                       
                                          t
                                          +
                                          (
                                          k
                                          −
                                          1
                                          )
                                          l
                                       
                                    
                                    −
                                    
                                       y
                                       
                                          t
                                          +
                                          (
                                          k
                                          −
                                          2
                                          )
                                          l
                                       
                                    
                                 
                              
                           
                        
                      is added to the corresponding motif. A is the adjusting coefficient related to the mean value and difference between consecutive samples to make the AAPE algorithm more flexible. A is in the range [0,1]. Finally, the amplitude-aware version of Eq. (1) is normalized by the total sum of the contributions. In brief, the pseudo code of the AAPE algorithm is presented in Fig. 1
                     .

For the practical uses of AAPE, we, similarly to the proposers of PE [10], recommend to assume l
                     =1, because l
                     >1 may be similar to down-sampling without considering the frequency characteristics of the signals, something that might lead to aliasing. Furthermore, to consider multiple temporal scales, the multiscale framework by Costa et al. [39] or its improved version proposed by Azami et al. [20] can be used. Here, we choose l
                     =1 for signal segmentation application. For the spike detection application, assume we have a single-sample spike as {3,1,10,2,5}, the differences between two amplitude values with l
                     =2 are larger than those with l
                     =1. However, for multi-sample spikes, it is recommended to use a delay time larger than 1. Assuming a multi-sample spike as {1,3,10,4,2}, the AAPE with l
                     =2 can detect the spike better than the AAPE with l
                     =1. In fact, multi-sample spike detection application is an exception for the choice of the time delay l. In this piece of research, because there is no information to demonstrate the real neuronal signals consist of only multi-sample spikes, we choose l
                     =1.

To select an appropriate value of A, since the importance of the mean value of amplitudes and the differences of the amplitude values are equal, it is recommended to choose A
                     =0.5. Nevertheless, it is recommended to change the value of A in case we want to emphasize more on either the amplitude values change or average of amplitude values. For example, in spike detection, because the difference between two successive sample points is much more important than the mean value of amplitudes, it is recommended that A
                     <
                     <0.5. In contrast, in signal segmentation applications, the mean of amplitude values and the differences of successive sample points are equally important and, therefore, it is better to choose A
                     =0.5.

For example, for signal segmentation application and for {1,3,2} and {11,13,12}, the contributions to the count of the motifs (“021” in both cases) are 1.75 and 6.75, respectively. Thus, unlike PE, AAPE can discriminate the change in the average. For spike detection and for {1,10,2} and {1,3,2}, assuming A
                     =0.02, the corresponding contributions would respectively be 8.42 and 1.51 even though both motifs are “021”. This makes the effect of motif “021” associated with {1,10,2} considerably larger when compared with the other potential motifs. Thus, using this procedure, spikes may be detected more easily. It is worth noting that for this application, AAPE is not very sensitive to the values of A. For example, assuming A
                     =0.1, 0.2, or even 0.5 leads to detect the spikes correctly.

The second drawback can be overcome by the following approach. To start with, all potential permutations of similar states are considered. Then, all possible contributions coming from motifs with a tie (i.e., same state) are divided by the number of potential permutations of those equal states. For example, assume {1,2,3,2,2} and d
                     =2, leading to “01” (full contribution associated with {1,2}), “01” (full contribution associated with {2,3}), “10” (full contribution associated with {3,2}), “01” (associated with half the contribution of {2,2}), and “10” (associated with the other half of the contribution of {2,2}). In this case, the entropy value considering equal (i.e., half) contributions of the motif {2,2} is AAPE(x, 1, 2)=−(2.5/4)ln(2.5/4)−(1.5/4)ln(1.5/4)=0.6616. As an additional example, consider d
                     =3, leading to “012” (full contribution associated with {1,2,3}), “201” (associated with half the contribution of {2,3,2}), “021” (associated with the other half of the contribution of {2,3,2}), “012” (associated with half the contribution of {3,2,2}), “021” (associated with the other half of the contribution of {3,2,2}). In this case, the entropy value considering equal (i.e., half) contributions of the motifs {2,3,2} and {3,2,2} are AAPE(x, 1, 3)=−(1.5/3)ln(1.5/3)−(1/3)ln(1/3)−(0.5/3)ln(0.5/3)=1.0114. In this way, the proposed method can discriminate between the strictly ascending/descending and only ascending/descending sequences. It is worth noting that the combination of the first and second proposed algorithms makes to the proposed method.

For evaluation of the proposed method, two kinds of synthetic data for signal segmentation and spike detection, and real neuronal and EEG data are used. The existing and proposed approaches were implemented using MATLAB R2010a from Math Works, Inc.

In this paper, a dataset including 40 synthetic multi-component signals was used. In order to make signals similar to actual recordings, we added white Gaussian noise (WGN) to synthetic signals. The WGN has a normal distribution with zero mean and unit variance. The equation of each of multi-component signals is as follows:
                              
                                 (3)
                                 
                                    
                                       y
                                       (
                                       t
                                       )
                                       =
                                       x
                                       (
                                       t
                                       )
                                       +
                                       n
                                       (
                                       t
                                       )
                                    
                                 
                              
                           where n(t) denotes WGN with different signal-to-noise ratios (SNRs) and x(t) is produced by concatenating seven multi-component epochs. One signal of the synthetic multi-component database, consisting of even epochs with random duration between 5.5 and 8s (named test signal), is as follows:
                              
                                 Epoch 1: 0.5cos(πt)+1.5cos(4πt)+4cos(5πt),

Epoch 2: 0.7cos(πt)+2.1cos(4πt)+5.6cos(5πt),

Epoch 3: 1.5cos(2πt)+4cos(8πt),

Epoch 4: 1.5cos(πt)+4cos(4πt),

Epoch 5: 0.5cos(πt)+1.5cos(2πt)+0.8cos(3πt)+3.5cos(5πt),

Epoch 6: 4.5cos(3πt)+2.2cos(5πt),

Epoch 7: 0.8cos(πt)+cos(3πt)+3cos(5πt).

We utilize n(t) with SNR=5, 10, and 15 dBs. Note that the test signal is a general and comprehensive time series since Epochs 1 and 2 are different almost only in terms of amplitude, Epochs 3 and 4 are different nearly only in terms of frequency, and the other adjacent epochs have the different amplitude and frequency characteristics at the same time. In addition, each epoch has different random time duration. All in all, we have all possible states in only one signal.

Because of the lack of ground-truth data (i.e., spike timings for each neuron), spike detection approaches are frequently demanding to evaluate. In [40], the generation and transmission of intracellular signals from neurons to an extracellular electrode were modeled and a set of MATLAB functions based on this was provided. The codes were used here to generate a set of realistic synthetic neural signals. They produce realistic neuronal signals from a set of nearby neurons including interference from more distant neurons and Gaussian noise. These data best resemble the output of deep mesio-temporal brain discharges observed at cortical electrodes. The model also includes correlated and uncorrelated spike noises in neuronal data as well as some Gaussian noise, to imitate the effect of thermal and amplifier noise [40]. By following this synthesizing method, we have randomly generated 40 realistic synthetic neuronal data each including Gaussian noise with SNR=20dB. Each signal contains 12 to 14 spikes.

In the second step, we employed real EEG signals for signal segmentation. As mentioned earlier, the registration of electrical activity of the neurons in the brain, EEG, is a significant tool to identify and treat some neurological disorders like epilepsy. In this paper, several EEG signals recorded from the scalp of a number of patients are used. The length of signals and the sampling frequency respectively are 30s and 256Hz. The data were prepared in the Signal Processing Research Centre at Queensland University of Technology, Queensland, Australia. The data are used in many signal segmentation approaches [30,31,41] provided by Prof. Hamid Hassanpour from the Department of Information Technology and Computer Engineering, Shahrood University of Technology, Iran.

In addition to a set of realistic synthetic neural data, we assessed the proposed and conventional approaches for the real neuronal signal. The data is a part of a publicly available real signal of the CARMEN project managed by Prof. Leslie S. Smith (http://www.carmen.org.uk/). It is around 900s long sampled at 20,000Hz.

@&#RESULTS AND DISCUSSION@&#

In this section, the behaviors of PE and AAPE using synthetic signals and real EEG data for signal segmentation and realistic synthetic and real neuronal signals for spike detection are assessed.

For signal segmentation, the PE/AAPE values of the signal are computed using the sliding window with the length w moving along the signal. Variation in the PE or AAPE is used to obtain the segment boundaries as follows:
                              
                                 (4)
                                 
                                    
                                       
                                          G
                                          m
                                       
                                       =
                                       
                                          
                                             
                                                PE
                                                
                                                   m
                                                   +
                                                   1
                                                
                                             
                                             −
                                             
                                                PE
                                                m
                                             
                                          
                                       
                                        
                                       m
                                       =
                                       1,2
                                       ,
                                       …
                                       ,
                                       n
                                       −
                                       1
                                    
                                 
                              
                           where m and n stand for the number of analyzed windows and the total number of analyzed windows, respectively. Note that 
                              
                                 n
                                 =
                                 
                                    
                                       
                                          
                                             N
                                             −
                                             w
                                          
                                          
                                             OL
                                             ×
                                             w
                                          
                                       
                                    
                                 
                              
                           , where N and OL are the length of the signal and the percentage of overlapping of the sliding window, respectively. For window-based signal segmentation and spike detection approaches, two parameters, including the length of the window and percentage of overlapping of the sliding window, should be chosen by trial and error [30,35,36,38,42]. In this paper, the mean value of G
                           ={G
                           1, G
                           2, ..., G
                           
                              n−1} is defined as threshold. When the local maximum is larger than the defined threshold, the current sample is chosen as the boundary of segment.

The test signal introduced in Section 4.1.1 is shown in Fig. 2(a)–(c) respectively shows the AAPE of the signal and changes in the G function. As it can be seen in Fig. 2, all six boundaries are correctly detected. The signal in Fig. 2(a) is also segmented using PE. Its result is depicted in Fig. 3(c). Two boundaries are not detected by PE (missed boundaries) as well as one boundary is incorrectly detected (false boundary). It should be added that for each signal used here, using PE and AAPE, all employed parameters are alike. As mentioned earlier, because the differences between sample points for signal segmentation are relatively as important as their average, we choose A
                           =0.5, even though changing these values will not change the results significantly. The window length and percentage of overlapping are chosen as much as 50 samples (2.5s) and 50%, respectively. Considering the length of the signal and 3!≪50, the embedding dimension is chosen as 3. These parameters are used for all synthetic signals for segmentation application.

For both the signal segmentation and spike detection applications, two different metrics, including true positive per signal (TPS) and false positive per signal (FPS) ratios are used to evaluate the performance of the proposed and conventional methods. These parameters are defined as 
                              
                                 TPS
                                 =
                                 
                                    
                                       N
                                       
                                          S
                                          t
                                       
                                       /
                                       N
                                       S
                                    
                                 
                              
                            and 
                              
                                 FPS
                                 =
                                 
                                    
                                       N
                                       
                                          S
                                          f
                                       
                                       /
                                       N
                                       S
                                    
                                 
                                 ;
                              
                            where NS
                           t and NS
                           f indicate the number of true and falsely detected boundaries for each signal, respectively. NS denotes the actual number of signal segments’ boundaries or spikes for each signal.

To compare the proposed method with the state-of-the-art signal segmentation methods that usually have a pre-processing step, we use a discrete wavelet transform (DWT). In Table 1
                           , the results of the segmentation for 40 synthetic signals using AAPE with DWT, PE with DWT, the method based on DWT, Katz's fractal dimension (KFD), and bee colony optimization (BCO) [41], the approach based on DWT, KFD, and particle swarm optimization (PSO), AAPE, PE, GLR and WGLR are shown. Note that the key difference between the methods proposed in [41] and [35] is the cost functions used in these papers as well as BCO usually leads to a better performance in comparison with PSO. The DWT used for synthetic signals is with Daubechies wavelet of order 8. The parameters of PSO are: population size=30, C
                           1
                           =
                           C
                           2
                           =2, dimension=2, and iteration=50 according to [35]. The parameters of BCO are defined as: population size=30, dimension=2, and iteration=50 according to [41].

Among the existing and proposed methods, the best algorithm in terms of TPS average is AAPE with DWT. Moreover, the SD values demonstrate that the proposed method is the most stable method. Moreover, the results show for lower SNRs, the SD values usually increase, as expected. The reason why AAPE works better than FD-based approaches is that the KFD may be slightly unreliable when the length of the signal is small [43]. In terms of FPS, AAPE and DWT, the approach based on DWT, KFD, and BCO, and the method using WT, KFD, and PSO are relatively similar. Although in terms of TPS, GLR and WGLR methods have relatively better performance for all SNRs, when considering FPS, both PE-based signal segmentation approaches are far superior to the GLR and WGLR methods. Moreover, considering SNRs, PE and AAPE are more robust than GLR and WGLR. As expected theoretically, AAPE, in comparison with PE, has better performance in terms of FPS and TPS. Comparing the results obtained by the method using AAPE/PE and DWT with AAPE/PE method without DWT shows a pre-processing step can improve the performance of a method considerably.

A repeated measures analysis of variance (ANOVA) was employed to explore the differences among the means of the TPS and FPS values obtained by the proposed and existing methods. When the corresponding p-value was lower than 0.05, thus indicating a significant effect of the choice of method, the Tukey's range test was used to find whether the results obtained with the proposed method were significantly different from those obtained by each of the existing approaches. According to the repeated ANVOA and Tukey's range test, the proposed signal segmentation method is significantly better than the conventional methods in terms of TPS using synthetic signals.

We divide spikes into two main groups: single-sample and multi-sample spikes. Single-sample spike means that the spike has only one sample point much higher than its neighboring sample points, whereas in multi-sample spikes, the amplitude increases/decreases and then decreases/increases gradually, i.e., this kind of spikes includes more than one sample point.

In order to understand the performance of PE and AAPE, 40 synthetic impulse signals with 1000 sample points, with added white Gaussian noise with SNR=20dB, are used. The obtained results using PE and AAPE are shown in Fig. 4
                           . Each error bar depicts the SD of the average of results of 40 signals for each of synthetic data. Since there is not any trend in single-sample spike, the PE cannot detect the spike. However, AAPE is able to detect the spike, because it takes into account the effect of the amplitude. This fact is depicted in Fig. 4.

We also assess the capability of AAPE, in comparison with PE, to detect multi-sample spikes. As mentioned in the Section 4.1.2, we use 40 realistic synthetic signals. One of 40 signals, which is randomly selected, includes 13 spikes and is depicted in Fig. 5
                           .

As can be seen in Fig. 5, both the PE and AAPE can detect this kind of spikes, even though the differences of the results of AAPE is larger than PE. For multi-sample spikes, because there is a descending/ascending inclination at first step and an ascending/descending slope in the second step, both approaches can follow this trend. Inasmuch as for spike detection, the differences between sample points are much more important than their average, we choose A
                           =0.02, although changing this value will not change the results considerably. In addition, considering the length of the window, the embedding dimension was 4. Note that we have evaluated the results with different delay time values and l
                           =1 was better than the other ones.

We evaluate the performance of the proposed and existing methods using 40 realistic synthetic neuronal data proposed in [40]. These results are shown in Table 2
                           . The reason why we use singular spectrum analysis (SSA) as a filter is that SSA was the best algorithm in comparison with DWT, Kalman filter, and Savitzky–Golay filter for neuronal signals [38]. We compare the proposed method using SSA with the spike detection based on FD and SSA as the best algorithm in [38] and normalized cumulative energy difference (NCED) as the best method proposed in [45]. NCED was inspired by the fact that the energy in a spike (either positive or negative) should be greater than the energy in noise of the same length [45]. The results show that in terms of TPS, the proposed method based on AAPE with and without SSA, and the method based on KFD and SSA are the best algorithms. In terms of FPS, the approach based on KFD and SSA is slightly better than the proposed method using AAPE and SSA. The reason why the KFD is better here is that the window moving along the signal has an acceptable length (400) [43]. Although SSA does not improve the TPS ratios of AAPE- and PE-based spike detection, the FPS ratios considerably decrease by using SSA. Note that the SSA used here and [38] has a window length equal to 20 sample points that was selected with trial and error.

The statistical tests show that, in terms of TPS and FPS, the proposed method based on AAPE with SSA and the method based on KFD and SSA, are the two best algorithms for the realistic synthetic neuronal data. Their performance was not significantly different, although we will show the proposed spike detection approach leads to a slightly higher TPS value using the real neuronal time series.

Signal segmentation is a required pre-processing stage for a number of biomedical signals such as EEG. Fig. 6(a) depicts a real newborn EEG recording described in Section 4.2.1. The window length and percentage of overlapping for two windows were chosen 700 samples (2.734s) and 50%, respectively, and the embedding dimension was 5.

The results of applying the proposed method using PE and AAPE are shown in Figs. 6 and 7
                           , respectively. The real EEG signal is illustrated in Fig. 6(a). Fig. 6(b) and (c), respectively, illustrate the AAPE of the signal and changes in the G function. Using the EEG signal shown in Fig. 6(a), we also employ the PE method for signal segmentation. Its result is depicted in Fig. 7 (c). We also evaluate these methods on the other EEG signal depicted in Figs. 8(a) and 9(a)
                           
                           , in that order, for the AAPE and PE method. As can be seen in Figs. 6 and 8, all the segments’ boundaries are accurately detected by AAPE, although for each signal, the method based on the PE incorrectly detects one boundary. Another significant difference between these results is that, in case of segments’ boundaries, the changes of AAPE are larger than PE.

Using 40 real EEG signals, the performance of the proposed method using AAPE with DWT, PE with DWT, the approach based on DWT, KFD, and BCO [41], the method based on DWT, KFD, and PSO, AAPE, PE and WGLR are compared in Table 3
                           . The best method in terms of both the TPS and FPS is the proposed approach based on AAPE and DWT, though not significantly different from signal segmentation based on DWT, KFD, and BCO. It is worth noting that the latter method (the propose approach) is considerably slower than the former one. The FD-based algorithms lead to better TPS and FPS ratios in comparison with the method using PE and DWT. Comparing the results obtained by the proposed and existing approaches with and without DWT shows the importance of the pre-processing step in signal segmentation. The SD values of the TPS and FPS ratios demonstrate that the proposed method based on AAPE with DWT is the most stable method among the proposed and existing EEG signal segmentation methods.

After evaluating the AAPE and PE methods on realistic synthetic neural data, in Fig. 10
                           , the performance of both of which are compared using the real neuronal data. This signal was described in Section 4.2.2. As it can be observed, unlike the PE, the AAPE can detect the first spike. In Table 4
                           , the results of using the above-mentioned spike detection approaches for real neuronal data explained in Section 4.2.2 are demonstrated. The highest TPS ratios are achieved by the proposed method using AAPE and SSA. In terms of FPS, the best algorithms are the proposed method using the AAPE and FD and the method based on FD and SSA [38]. In terms of TPS and FPS parameters, both the AAPE and NCED have better performance than the PE. In terms of FPS the AAPE and NCED are alike, although in terms of TPS, the AAPE-based ratios are remarkably higher than the NCED method’ ones. Note that because we studied on one real neuronal signal with about 200 spikes, the SD of TPS and FPS ratios are 0.

In future work, we will investigate the suitability of AAPE and multiscale AAPE to characterize other physiological time series, such as Alzheimer's disease.

@&#CONCLUSIONS@&#

PE is a powerful irregularity indicator, widely used for biomedical signal processing. However, since PE does not consider the mean value of amplitudes, differences between amplitude values and equal values, its use in some specific applications is limited. Accordingly, we have addressed these important shortcomings in this study. The proposed and existing algorithms have been applied in synthetic multi-component signals and EEG data for signal segmentation and realistic synthetic and real neuronal signals for spike detection application. Results have been compared with the original definition of PE and several other well-known approaches. For signal segmentation, the accuracy of AAPE-based approach has been superior to the accuracy of PE-based one as well as PE-based approaches have been more robust than WGLR in case of noise. In addition, the spike detection results have demonstrated when there is a single-sample spike, unlike PE, AAPE can detect spikes well. Moreover, for those spikes which include more than one sample point, the changes of AAPE values have been larger than those of PE values.

The weighted PE was proposed in [26] addresses the limitation of PE related to the fact that it disregards the information contained in the amplitude values. This method is only dependent on the variance, which measures the spread of the signal amplitudes, and its importance in the metric is always kept constant. In contrast, in AAPE, we can adapt the importance of mean values of amplitudes and differences between samples to different applications by means of A. Therefore, AAPE is more flexible. Unlike that method and PE, AAPE can also discriminate between an original signal and a constant number added to the original signal. As for the equal values’ limitation, the algorithm proposed in [27] increases considerably the number of potential motifs. Hence, the algorithm might yield unreliable results for short signals. The algorithm proposed in [28] is sensitive to the precision regulation factor α. In contrast, AAPE does not have a sensitive factor for this shortcoming. All in all, AAPE is a powerful tool to segment signals and detect spikes. It can be applied in different applications where the mean values of neighboring samples and changes in amplitude values are important. Our modification also deals with the equal amplitude values’ problem. The AAPE's running time is slightly higher than the PE's one and it can be used in every entropy-based application.

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank Prof. Hamid Hassanpour from the Department of Information Technology and Computer Engineering, Shahrood University of Technology, Iran, and Prof. Leslie S. Smith from the Department of Computing Science and Mathematics, University of Stirling, UK, respectively for providing the real EEG signals and neuronal data described in Section 4.

The AAPE Matlab code is available online at http://dx.doi.org/10.7488/ds/1339.

@&#REFERENCES@&#

