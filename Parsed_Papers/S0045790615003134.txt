@&#MAIN-TITLE@&#An efficient approach for image sequence denoising using Zernike moments-based nonlocal means approach

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Image sequence denoising using NLM and Zernike moments proposed.


                        
                        
                           
                           Significant improvement in image sequence denoising achieved.


                        
                        
                           
                           Denoising results are comparable to state-of-the-art methods with much faster speed.


                        
                        
                           
                           Proposed method is faster by a factor lying between 11 and 12.


                        
                        
                           
                           Better rates of improvement achieved at higher levels of noise.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Nonlocal means

Image sequence denoising

Zernike moments

Rotation invariant features

@&#ABSTRACT@&#


               
               
                  Nonlocal means (NLM)-based denoising is an efficient and simple method for image sequence denoising which has been applied successfully in many image sequence denoising applications. We extend the method for image sequence denoising using Zernike moments (ZMs) called NLM–ZMs which provides better denoising performance as compared to NLM-based approach. In addition, the proposed method is faster because the number of computations needed for block matching and weight computation are significantly reduced. The NLM approach uses the photometric distance between two image patches for determining the similarity distance. In the proposed approach, low order ZMs are used for the block matching process, resulting in better denoising performance at a much lower computation cost. Detailed experimental results are provided to demonstrate better performance and higher speed of the proposed approach as compared to the NLM approach. The results are also compared with the state-of-the-art NLM-based image sequence denoising methods and the denoising results are observed to be competitive with higher speed.
               
            

@&#INTRODUCTION@&#

Image sequence denoising is an important image processing task which has wide applications in several areas such as video films, infrared imaging, X-ray imaging, ultra-sound, and confocal microscopy. Restoration of old films and videos is an important area where image sequence denoising finds an important role because of the degradation of such videos over a period of time. The image sequence denoising is a difficult task because it involves estimation of motion while performing denoising. What makes the motion estimation difficult is the movement of the local objects in a scene. Therefore, the task of the denoising process not only involves the treatment of the problem in the spatial domain but also in the temporal domain. This complexity of the problem has kept the area active and more and more researches are being carried out in this area as ever before.

Many methods have been suggested for video sequence denoising. Broadly they are divided into two classes: methods with explicit motion estimation and methods without explicit motion estimation (motion is estimated implicitly). An initial survey of image sequence denoising can be found in [1]. The survey reports that the motion compensation task enhances the performance of both spatiotemporal and temporal filters from their non-motion compensated counterparts. Also, the performance of spatiotemporal filters is reported to be better than that of temporal filters. Later, a Weiner filter based approach for denoising of image sequences using 2D parametric motion model for explicit motion estimation in a spatiotemporal filtering scheme was proposed in [2]. Another spatiotemporal filtering approach has been proposed [3] in which spatial filtering is performed by the combination of wavelet and 2D Weiner filter while for temporal filtering bi-directional block based motion compensation using enhanced predictive zonal search (EPZS) algorithm is used. In contrast to above mentioned approaches, other approaches that do not rely on explicit motion estimation can also be found in the literature. For instance, a video denoising approach has been developed in [4] which is based on 3D anisotropic diffusion equation for noise removal and deblurring of video sequences. The proposed approach has extended the 2D diffusion equations to three dimensions to derive benefit from high degree of spatial and temporal correlation between the frames and thus it is capable of suppressing the flickering effect. Also, transform domain approaches based on DCT-based filtering [5] and wavelet-based filtering [6,7] have been extended and applied to image sequence denoising in spatiotemporal domain. Among the methods without explicit motion estimation, one of the most effective and simple approach is based on the nonlocal means (NLM) filter developed by Buades et al. [8]. This approach has been extended to image sequence denoising [9] and video-denoising [10].

In the NLM approach, denoising is achieved by replacing every pixel by a weighted sum of its neighborhood pixels. The weights are obtained after computing a similarity parameter between the block centered on the pixel being averaged and the blocks centered on the neighborhood pixels being considered for the averaging process. The weights are considered to be proportional to the probability that a pixel might have moved from its current location on an image in the sequence being denoised to the location in its neighborhood. The effectiveness of this approach has been demonstrated by Buades et al. [9,10] and Boulanger et al. [11].

The performance of NLM-based image sequence denoising is quite satisfactory, especially on smooth areas and repetitive textures for which the redundancy is high. On singular structures where the redundancy is low, the algorithm provides poor results because it fails to detect enough similar structures [12,13]. The presence of high noise might affect similarity between two patches because of false patch detection. The similarity measure used for neighborhood blocks in the NLM-based method is simply a Euclidean distance of pixel values between two blocks which suffers from image noise. Two visually similar blocks but affected by noise may not always yield smaller distance as compared to two slightly dissimilar blocks. Moreover, the local motion in image sequence may cause rotation of objects or a slight change in the scene. Under these situations, the NLM-based block matching and denoising process does not work well. The use of block matching under rotation for single image denoising has been analyzed by Grewenig et al. [14] where the authors have used two approaches for this purpose. The first approach uses invariant geometric moments and the second approach is based on the estimation of the rotation angle and realigning the blocks. Improvements in the quality of denoising results have been reported by these authors. Also, an adaptive regularized NLM method has been proposed in [12,13] which combines the NLM approach with total variation (TV) minimization problem in order to reduce the over-smoothing problem of NLM approach due to a combination of multiple irrelevant candidate patches. The authors have conducted experiments on both single images as well as image sequences and have shown improved quality of denoised images/image sequences obtained with their proposed regularized-NLM method. Another major drawback of the NLM method is its high computation time. The major components contributing towards the time requirements are the process of block matching and computation of weights. Mahmoudi and Sapiro [15] have attempted to reduce the time requirements by discarding those blocks which are dissimilar using average gray values of blocks and average gradient direction and magnitude. However, it affects the denoising performance.

In this paper, we propose nonlocal means and Zernike moments (ZMs)-based image sequence denoising approach, called the NLM–ZMs, which has several advantages over the NLM-based approaches. Being orthogonal and rotation invariant, ZMs possess several useful characteristics for image description over patch-based block matching used in the NLM-based approach. The ZMs encode the singular structures in a better way as the first, second and third order ZMs can effectively encode the edges and rapid change in intensity [16]. The ZMs possess minimum information redundancy and, therefore, a few low frequency components can be used to describe an image. This facilitates the process of block matching used in NLM-based approaches. The magnitudes of ZMs are rotation invariant and hence rotation of objects in a scene can be handled effectively by ZMs. This is particularly useful for the estimation of local motion of small objects which may undergo rotation. The moments are derived using a summation process, as a consequence, the effect of noise is reduced in the block matching process. We use a small number of ZMs coefficients as compared to the large number of pixel values in the NLM-based block matching approach. This step significantly reduces the time taken for block matching and weight computation which is one of the major issues in the NLM-based image sequence denoising approaches. Another key feature of the proposed approach is the enhancement of the denoising performance which is achieved by smoothing of weights. Unlike the NLM-based approach which considers the spatial distance of pixels within a patch (intra-patch distance) for smoothing the photometric distance, we smooth weights depending on the spatial distance between a reference patch and the target patch (inter-patch distance). Thus, we improve the performance of NLM–ZMs image sequence denoising approach by incorporating the concept of geometric distance between two image blocks being matched. It is also shown that as the noise level increases, the proposed method performs much better than the NLM-based approaches because ZMs-based block matching is robust to image noise.

It is worth mentioning here that the ZMs-based NLM approach has been applied to image denoising [17] and image super-resolution [18]. In [17], the authors have normalized ZMs which sometimes become unstable due to the normalization process as explained in Section 4.3. Moreover, their approach does not take into account the geometric distance between two image blocks which greatly enhances the denoising performance. In [18], the authors have used ZMs in image super-resolution, again without the use of geometric distance being taken into consideration. Moreover, the proposed method is applied to image sequence denoising, whereas the method in [17] deals single image denoising and the method in [18] deals with image super-resolution.

The rest of the paper is organized as follows. An overview of the NLM-based image sequence denoising is described in Section 2. The proposed NLM–ZMs-based image sequence denoising is presented in Section 3. Detailed experimental results on denoising performance and time complexity analysis are demonstrated in Section 4, followed by conclusion in Section 5.

The NLM-based image sequence denoising is described in [10]. Let 
                        
                           
                              {
                              
                                 u
                                 t
                              
                              }
                           
                           
                              t
                              =
                              1
                           
                           T
                        
                      and 
                        
                           
                              {
                              
                                 v
                                 t
                              
                              }
                           
                           
                              t
                              =
                              1
                           
                           T
                        
                      be the noise-free and noisy image sequences each having T number of frames. Let, ut
                     (i) and vt
                     (i) denote the noise-free and noisy signals at pixel i from an image frame at time t in the sequence affected by Gaussian noise signal ηt
                     (i) with mean zero and variance σ. The relationship between the noisy and noise-free signals is given as
                        
                           (1)
                           
                              
                                 
                                    
                                       
                                          
                                             v
                                             t
                                          
                                          
                                             (
                                             i
                                             )
                                          
                                          =
                                          
                                             u
                                             t
                                          
                                          
                                             (
                                             i
                                             )
                                          
                                          +
                                          
                                             η
                                             t
                                          
                                          
                                             (
                                             i
                                             )
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           t
                           ∈
                           [
                           1
                           ,
                           ⋯
                           ,
                           T
                           ]
                        
                      denotes an image in a sequence of T images. The NLM-based image sequence denoising for the image at time t
                     0 in the sequence is expressed as follows:
                        
                           (2)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                u
                                                ^
                                             
                                             
                                                t
                                                0
                                             
                                          
                                          
                                             (
                                             i
                                             )
                                          
                                          =
                                          
                                             1
                                             
                                                Z
                                                (
                                                i
                                                )
                                             
                                          
                                          
                                             ∑
                                             
                                                t
                                                ∈
                                                [
                                                1
                                                ,
                                                ⋯
                                                ,
                                                T
                                                ]
                                             
                                          
                                          
                                             ∑
                                             
                                                j
                                                ∈
                                                N
                                                (
                                                i
                                                )
                                             
                                          
                                          w
                                          
                                             (
                                             i
                                             ,
                                             j
                                             ,
                                             t
                                             )
                                          
                                          
                                             v
                                             t
                                          
                                          
                                             (
                                             j
                                             )
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              
                                 u
                                 ^
                              
                              
                                 t
                                 0
                              
                           
                           
                              (
                              i
                              )
                           
                        
                      is the estimate of noise-free signal at pixel i for the image at time t
                     0, N(i) is a pre-defined neighborhood of pixels, called search window, centered at pixel i and w(i,
                     j,
                     t) are weights that determine the relative contribution of the noisy pixel vt
                     (j) towards restoring the noise-free signal at pixel i, Z(i) is the normalization factor which is the sum of the weights, i.e.,
                        
                           (3)
                           
                              
                                 
                                    
                                       
                                          Z
                                          
                                             (
                                             i
                                             )
                                          
                                          =
                                          
                                             ∑
                                             
                                                t
                                                ∈
                                                [
                                                1
                                                ,
                                                ⋯
                                                ,
                                                T
                                                ]
                                             
                                          
                                          
                                             ∑
                                             
                                                j
                                                ∈
                                                N
                                                (
                                                i
                                                )
                                             
                                          
                                          w
                                          
                                             (
                                             i
                                             ,
                                             j
                                             ,
                                             t
                                             )
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

In the NLM-based sequence denoising, the weights w(i,
                     j,
                     t) are computed as
                        
                           (4)
                           
                              
                                 
                                    
                                       
                                          w
                                          
                                             (
                                             i
                                             ,
                                             j
                                             ,
                                             t
                                             )
                                          
                                          =
                                          exp
                                          
                                             (
                                             −
                                             
                                                
                                                   
                                                      ∥
                                                      R
                                                   
                                                   
                                                      (
                                                      
                                                         v
                                                         
                                                            t
                                                            0
                                                         
                                                      
                                                      
                                                         (
                                                         i
                                                         )
                                                      
                                                      )
                                                   
                                                   −
                                                   R
                                                   
                                                      (
                                                      
                                                         v
                                                         t
                                                      
                                                      
                                                         (
                                                         j
                                                         )
                                                      
                                                      )
                                                   
                                                   
                                                      ∥
                                                      
                                                         2
                                                         ,
                                                         a
                                                      
                                                      2
                                                   
                                                
                                                
                                                   
                                                      h
                                                   
                                                   2
                                                
                                             
                                             )
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where R(vt
                     (i)) denotes a block of pixels centered at pixel i for the image sequence t, called local window. The operator 
                        
                           
                              ∥
                              ·
                           
                           
                              ∥
                              
                                 2
                                 ,
                                 a
                              
                              2
                           
                        
                      is the L
                     2-squared norm (square of Euclidean distance) filtered by a Gaussian kernel with zero mean and standard deviation a. The parameter h is a filtering parameter controlling the decay of the exponential function and its value is obtained empirically to provide best denoising results. The Gaussian kernel applied in the L
                     2-squared norm provides higher weights to the pixels which are closer to pixel i.

Normally, the size of the search window is fixed as 
                        
                           21
                           ×
                           
                           21
                           ×
                           
                           3
                        
                      and the size of a block (image patch) is fixed as 
                        
                           7
                           ×
                           
                           7
                        
                     . This implies that if we are denoising image sequence tk
                     , then we have to process three search windows centered at pixel i for the image sequences tk
                     
                     −1, tk, tk
                     
                     +1. The blocks of size 
                        
                           7
                           ×
                           
                           7
                        
                      will be taken from the search windows on these three images. As the pixel i moves from the starting location of an image till the end, the search window will also move with its center at pixel i.

The Zernike moments of order p and repetition q of an image function f(x,
                        y) over a unit disk are defined by [19]
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                Z
                                                pq
                                             
                                             =
                                             
                                                
                                                   p
                                                   +
                                                   1
                                                
                                                π
                                             
                                             
                                                
                                                   
                                                   
                                                      ∫
                                                   
                                                   
                                                      ∫
                                                   
                                                   
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      2
                                                   
                                                   +
                                                   
                                                      
                                                         y
                                                      
                                                      2
                                                   
                                                   ≤
                                                   1
                                                
                                             
                                             f
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             
                                                V
                                                
                                                   pq
                                                
                                                *
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             dx
                                             dy
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 V
                                 
                                    pq
                                 
                                 *
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 )
                              
                           
                         are the complex conjugate of the Zernike polynomials Vpq
                        (x, y) defined by
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             
                                                V
                                                pq
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             =
                                             
                                                R
                                                pq
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             
                                                
                                                   e
                                                
                                                
                                                   jq
                                                   θ
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The radial functions Rpq
                        (x, y) are defined by
                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             
                                                R
                                                pq
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             =
                                             
                                                ∑
                                                
                                                   s
                                                   =
                                                   0
                                                
                                                
                                                   (
                                                   p
                                                   −
                                                   |
                                                   q
                                                   |
                                                   )
                                                   /
                                                   2
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      −
                                                      1
                                                      )
                                                   
                                                
                                                s
                                             
                                             
                                                
                                                   (
                                                   p
                                                   −
                                                   s
                                                   )
                                                   !
                                                
                                                
                                                   s
                                                   !
                                                   
                                                      (
                                                      
                                                         
                                                            p
                                                            +
                                                            |
                                                            q
                                                            |
                                                         
                                                         2
                                                      
                                                      −
                                                      s
                                                      )
                                                   
                                                   !
                                                   
                                                      (
                                                      
                                                         
                                                            p
                                                            −
                                                            |
                                                            q
                                                            |
                                                         
                                                         2
                                                      
                                                      −
                                                      s
                                                      )
                                                   
                                                   !
                                                
                                             
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            x
                                                         
                                                         2
                                                      
                                                      +
                                                      
                                                         
                                                            y
                                                         
                                                         2
                                                      
                                                      )
                                                   
                                                
                                                
                                                   
                                                      p
                                                      −
                                                      2
                                                      s
                                                   
                                                   2
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The angle θ is obtained by 
                           
                              θ
                              =
                              
                                 
                                    
                                       tan
                                    
                                 
                                 
                                    −
                                    1
                                 
                              
                              
                                 (
                                 y
                                 /
                                 x
                                 )
                              
                              ,
                              θ
                              ∈
                              
                                 [
                                 0
                                 ,
                                 2
                                 π
                                 ]
                              
                           
                        .

Since the image function is discrete and finding an analytical solution to the double integration involved in Eq. (5) is a complex task [20], the ZMs are computed using the zeroth order approximation:
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             
                                                Z
                                                pq
                                             
                                             =
                                             
                                                
                                                   2
                                                   (
                                                   p
                                                   +
                                                   1
                                                   )
                                                
                                                
                                                   π
                                                   
                                                      
                                                         N
                                                      
                                                      2
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         0
                                                      
                                                      
                                                         N
                                                         −
                                                         1
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         k
                                                         =
                                                         0
                                                      
                                                      
                                                         N
                                                         −
                                                         1
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      2
                                                   
                                                   +
                                                   
                                                      
                                                         y
                                                      
                                                      2
                                                   
                                                   ≤
                                                   1
                                                
                                             
                                             f
                                             
                                                (
                                                i
                                                ,
                                                k
                                                )
                                             
                                             
                                                V
                                                
                                                   pq
                                                
                                                *
                                             
                                             
                                                (
                                                
                                                   x
                                                   i
                                                
                                                ,
                                                
                                                   y
                                                   k
                                                
                                                )
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 x
                                 i
                              
                              =
                              
                                 
                                    2
                                    i
                                    +
                                    1
                                    −
                                    N
                                 
                                 
                                    N
                                    
                                       2
                                    
                                 
                              
                              ,
                              
                                 y
                                 k
                              
                              =
                              
                                 
                                    2
                                    k
                                    +
                                    1
                                    −
                                    N
                                 
                                 
                                    N
                                    
                                       2
                                    
                                 
                              
                           
                        . The size of image is 
                           
                              N
                              ×
                              
                              N
                           
                        .

The Zernike polynomials Vpq
                        (x, y) are orthogonal over unit disk. If all moments Zpq
                         up to a maximum order pmax
                         are available, then the signal f(x, y) can be reconstructed as
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             
                                                f
                                                ^
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             =
                                             
                                                ∑
                                                
                                                   p
                                                   =
                                                   0
                                                
                                                
                                                   p
                                                   max
                                                
                                             
                                             
                                                ∑
                                                
                                                   q
                                                   =
                                                   −
                                                   p
                                                
                                                p
                                             
                                             
                                                Z
                                                pq
                                             
                                             
                                                V
                                                pq
                                             
                                             
                                                (
                                                x
                                                ,
                                                y
                                                )
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The higher is the order of moments pmax
                        , the closer will be the value of 
                           
                              
                                 f
                                 ^
                              
                              
                                 (
                                 x
                                 ,
                                 y
                                 )
                              
                           
                         to f(x, y). However, for effective image description higher order moments are not used because they represent fine details in the image which are vulnerable to image noise.

There are several characteristics of the ZMs which are useful for effective image description. Being orthogonal, ZM possess minimum information redundancy which implies that only a few lower order ZMs are sufficient to describe an image. The various orders of moment have different significance. The lowest order moment Z
                        00 represents the average intensity, the first order moment Z
                        11 represents the centroid of the gray values and the second order moment Z
                        20 represents the contrast of the image. The higher order moments represent the edges and the fine structures of the image [16]. More high order ZMs are not used as they are vulnerable to image noise which, of course, is the problem under investigation. The magnitudes of the moments are invariant to image rotation which is a major advantage over the NLM-based block matching approach. This characteristic of ZMs can be very useful for handling the local motions more effectively as compared to the NLM-based approach in which two identical but rotated blocks will yield a large Euclidean distance. Since the ZMs are computed as an integration process, the moments are robust to image noise. This also facilitates the block matching process because two seemingly identical but noisy blocks will have a lower value of Euclidean distance by using ZMs as compared to NLM-based approach which uses pixel values for deriving Euclidean distance. In view of the above useful characteristics of the ZMs, we propose the NLM–ZMs-based weight computation process as follows:
                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             w
                                             
                                                (
                                                i
                                                ,
                                                j
                                                ,
                                                t
                                                )
                                             
                                             =
                                             exp
                                             
                                                (
                                                −
                                                
                                                   
                                                      
                                                         ∥
                                                         R
                                                      
                                                      
                                                         (
                                                         |
                                                         
                                                            Z
                                                            pq
                                                         
                                                         
                                                            (
                                                            i
                                                            )
                                                         
                                                         
                                                            |
                                                            
                                                               t
                                                               0
                                                            
                                                         
                                                         )
                                                      
                                                      −
                                                      R
                                                      
                                                         (
                                                         
                                                            |
                                                         
                                                         
                                                            Z
                                                            pq
                                                         
                                                         
                                                            (
                                                            j
                                                            )
                                                         
                                                         
                                                            |
                                                            t
                                                         
                                                         )
                                                      
                                                      
                                                         ∥
                                                         
                                                            2
                                                         
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         h
                                                      
                                                      2
                                                   
                                                
                                                )
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where R(|Zpq
                        (i)|
                           t
                        ) represents a set of ZMs computed from a block centered at pixel i from an image at time t in the sequence. Note, that we do not apply a Gaussian smoothing of ZMs coefficients in Eq. (10) unlike the case in the NLM-based weight computation given by Eq. (4). Instead, the geometric distance of blocks is taken into account for the estimation of gray value of the noisy pixel which is given for pixel i:
                           
                              (11)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   u
                                                   ^
                                                
                                                
                                                   t
                                                   0
                                                
                                             
                                             
                                                (
                                                i
                                                )
                                             
                                             =
                                             
                                                1
                                                
                                                   Z
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             
                                                ∑
                                                
                                                   t
                                                   ∈
                                                   [
                                                   1
                                                   ,
                                                   ⋯
                                                   ,
                                                   T
                                                   ]
                                                
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   N
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             w
                                             
                                                (
                                                i
                                                ,
                                                j
                                                ,
                                                t
                                                )
                                             
                                             
                                                v
                                                t
                                             
                                             
                                                (
                                                j
                                                )
                                             
                                             g
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where g(i, j) is a function of the geometric distance between two pixels i and j which may take many forms such as a constant, a Gaussian, a box function, and more.

The proposed NLM–ZMs-based image sequence denoising approach differs from the NLM-based approach in two ways:
                           
                              1.
                              First, the computation of weights in the NLM-based approach depends upon the matching of blocks using the pixel values, while in the NLM–ZMs-based approach, the block matching is performed by finding the Euclidean distance between magnitudes of ZMs coefficients. The ZMs encode the edges and fine structures of an image more effectively as compared to the NLM-based block matching approach. Since the magnitudes of ZMs are rotation invariant and robust to image noise, the ZMs-based block matching is more effective than matching the pixel values of the blocks. Moreover, the ZMs-based block matching requires much less number of computations. Instead of taking an optimum search window of size 
                                    
                                       21
                                       ×
                                       
                                       21
                                    
                                  in NLM method, we take an optimum search window of size 
                                    
                                       15
                                       ×
                                       
                                       15
                                    
                                  in NLM–ZMs which reduces the number of weights to approximately half. For a local window of size 
                                    
                                       7
                                       ×
                                       
                                       7
                                    
                                 , the NLM-based block matching requires 2×49 additions/subtractions and 49 multiplications, while ZMs-based approach which uses 6 ZMs coefficients requires only 2×6 additions/subtractions and 6 multiplications. The overall computation time is expected to reduce by a factor of 
                                    
                                       [
                                       
                                          
                                             (
                                             
                                                21
                                                15
                                             
                                             )
                                          
                                          2
                                       
                                       ×
                                       
                                       
                                          (
                                          
                                             49
                                             6
                                          
                                          )
                                       
                                       ]
                                    
                                  which is approximately 16 times. In actual practice, this turns out to be a value between 11 and 12 as shown in Section 4.5, time complexity analysis.

Second difference between NLM–ZMs-based approach and NLM-based approach is in the estimation of gray value 
                                    
                                       
                                          
                                             u
                                             ^
                                          
                                          
                                             t
                                             0
                                          
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                 . The averaging of pixel values of noisy pixels not only depends on the photometric values of image blocks determined by the weights w(i, j, t) but it also depends on their spatial distance from each other being accounted by the function g(i, j). In fact, the NLM-based averaging process is a special case of the proposed method in which 
                                    
                                       g
                                       (
                                       i
                                       ,
                                       j
                                       )
                                       =
                                       1
                                    
                                  (equal geometric weights). We use box weights [21] and find the performance of the proposed method much more superior as compared to the constant weights.

The proposed NLM–ZMs approach for image sequence denoising can be explained in following steps:
                           
                              1.
                              Let vt
                                  be a noisy image of size 
                                    
                                       M
                                       ×
                                       
                                       N
                                    
                                 . Divide the image into 
                                    
                                       M
                                       ×
                                       
                                       N
                                    
                                  overlapping blocks each of size 
                                    
                                       s
                                       ×
                                       
                                       s
                                    
                                 . In our experiments we have observed 
                                    
                                       s
                                       =
                                       7
                                    
                                  yielding good denoising performance.

Compute ZMs for each block using Eq. (8) where the parameter N is replaced by s.

Represent by 
                                    
                                       
                                          Z
                                          pq
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                       ,
                                       i
                                       =
                                       0
                                       ,
                                       1
                                       ,
                                       ⋯
                                       ,
                                       MN
                                       −
                                       1
                                    
                                 , the ZMs of order p and repetition q for a given maximum order pmax
                                  computed at each pixel location i of the image. For example, if 
                                    
                                       
                                          p
                                          max
                                       
                                       =
                                       3
                                    
                                 , then we have 
                                    
                                       
                                          Z
                                          00
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                       ,
                                       
                                          Z
                                          11
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                       ,
                                       
                                          Z
                                          20
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                       ,
                                       
                                          Z
                                          22
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                       ,
                                       
                                          Z
                                          31
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                       ,
                                       and
                                       
                                          Z
                                          33
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                 . The Zpq
                                 (i) are considered to be ZMs images. Thus, for 
                                    
                                       
                                          p
                                          max
                                       
                                       =
                                       3
                                    
                                 , there are six ZMs images each of the size of the original noisy image.

The support of the search window (SW) around the block centered at pixel i has been set to 
                                    
                                       W
                                       ×
                                       
                                       W
                                       ×
                                       
                                       T
                                    
                                  (
                                    
                                       15
                                       ×
                                       
                                       15
                                       ×
                                       
                                       3
                                    
                                  in the present case) to compensate the motion between the frames as well as to extract the redundant information from the frames. The search window extends both in the spatial (
                                    
                                       W
                                       ×
                                       
                                       W
                                       )
                                    
                                  and the temporal domain (T being the number of frames considered for denoising a single image frame).

Find the square of the Euclidean distance S(i, j) of the magnitude of the ZMs: 
                                    
                                       
                                          
                                             S
                                             
                                                (
                                                i
                                                ,
                                                j
                                                )
                                             
                                             =
                                             
                                                ∥
                                                R
                                                (
                                                |
                                             
                                             
                                                Z
                                                pq
                                             
                                             
                                                (
                                                i
                                                )
                                             
                                             
                                                |
                                                )
                                             
                                             −
                                             R
                                             
                                                (
                                                
                                                   |
                                                
                                                
                                                   Z
                                                   pq
                                                
                                                
                                                   
                                                      (
                                                      j
                                                      )
                                                   
                                                   |
                                                
                                                )
                                             
                                             
                                                ∥
                                                
                                                   2
                                                
                                                2
                                             
                                             =
                                             
                                                ∑
                                                
                                                   p
                                                   =
                                                   0
                                                
                                                
                                                   p
                                                   max
                                                
                                             
                                             
                                                ∑
                                                
                                                   q
                                                   =
                                                   −
                                                   p
                                                
                                                p
                                             
                                             
                                                
                                                   
                                                      (
                                                      
                                                         |
                                                      
                                                      
                                                         Z
                                                         pq
                                                      
                                                      
                                                         
                                                            (
                                                            i
                                                            )
                                                         
                                                         |
                                                         −
                                                         |
                                                      
                                                      
                                                         Z
                                                         pq
                                                      
                                                      
                                                         
                                                            (
                                                            j
                                                            )
                                                         
                                                         |
                                                      
                                                      )
                                                   
                                                
                                                2
                                             
                                          
                                       
                                    
                                  where j ∈ SW(i). The value of S(i, j) is used in the computation of the weights as shown in Eq. (10).

Compute the weights w(i, j, t) for a block centered at pixel i for the reference frame 
                                    
                                       v
                                       
                                          t
                                          0
                                       
                                    
                                  using Eq. (10).

Denoise the pixel intensity using Eq. (11) which is represented by 
                                    
                                       
                                          
                                             u
                                             ^
                                          
                                          
                                             t
                                             0
                                          
                                       
                                       
                                          (
                                          i
                                          )
                                       
                                    
                                 .

Repeat steps 5 through 7 for all pixels of the reference frame.

Both the NLM and NLM–ZMs image sequence denoising approaches have been implemented in Visual C++ 6.0 under Microsoft Windows environment on a PC with 2.13GHz CPU and 3GB RAM. We consider eight image sequences: three image sequences Miss America, Suzie, and Foreman downloaded from [22] and the other five sequences Akiyo, Hall Monitor, Highway, Salesman, and Ship Container downloaded from [23]. The first three image sequences have a spatial and temporal resolution of 
                        
                           189
                           ×
                           
                           270
                           ×
                           
                           30
                        
                     , 
                        
                           351
                           ×
                           
                           240
                           ×
                           
                           30
                        
                     , and 
                        
                           312
                           ×
                           
                           288
                           ×
                           
                           30
                        
                     , respectively. These image sequences are frequently used in many video denoising experiments. The five image sequences Akiyo, Hall Monitor, Highway, Salesman, and Ship Container have a spatial and temporal resolution of 
                        
                           352
                           ×
                           
                           288
                           ×
                           
                           300
                        
                     . The reason for using these five sequences is the large amount of variations present in them, for example, the Highway sequence has been shot in dull and cloudy conditions from a moving vehicle on the highway, Akiyo and Salesman sequences have been shot in dark and low light conditions, and more importantly in Salesman sequence an object is shown to be oriented in multiple directions in its subsequent frames. Also, these sequences are rich in both global and local motion involving sudden appearance and disappearance of objects from the adjacent frames.

All eight image sequences are corrupted by white Gaussian noise with zero mean and standard deviation σ
                     =10, 15, and 20. Fig. 1
                      shows the sample noise free and noisy images of all eight test sequences. The first three sequences (Miss America, Suzie, and Foreman) are used to conduct the experiments for determining the optimum number of frames in the search window (Section 4.1) for NLM and NLM–ZMs approaches, for determining the optimum order for ZMs computation (Section 4.2) and for analyzing the effect of the normalized ZMs on the denoising performance (Section 4.3). The denoising performance evaluation criterion is based on the peak-signal-to-noise (PSNR) ratio defined as:
                        
                           (12)
                           
                              
                                 
                                    
                                       
                                          
                                             PSNR
                                          
                                          =
                                          10
                                          
                                             log
                                             10
                                          
                                          
                                             (
                                             
                                                
                                                   
                                                      255
                                                   
                                                   2
                                                
                                                
                                                   MSE
                                                
                                             
                                             )
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where
                        
                           (13)
                           
                              
                                 
                                    
                                       
                                          
                                             MSE
                                          
                                          =
                                          
                                             1
                                             
                                                MN
                                             
                                          
                                          
                                             ∑
                                             
                                                i
                                                =
                                                0
                                             
                                             
                                                
                                                   MN
                                                
                                                −
                                                1
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   u
                                                   
                                                      (
                                                      i
                                                      )
                                                   
                                                   −
                                                   
                                                      u
                                                      ^
                                                   
                                                   
                                                      (
                                                      i
                                                      )
                                                   
                                                   )
                                                
                                             
                                             2
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

For denoising image sequences, the length of the search window in temporal domain (i.e. the number of image frames included in denoising of each frame of the sequence) is very crucial for effective denoising. Higher number of frames would provide more temporal information but at the cost of higher computation time, while fewer frames would require lesser time to process but at the same time would lack sufficient amount of temporal information. In this section, we conduct experiments to find an optimum value of the number of frames in the temporal domain which maintains a good tradeoff between the denoising performance and computation time. For this purpose, we perform denoising experiments using 1, 3, 5, and 7 frames. The single frame denoising performance is useful from the point of view of comparing the denoising results with or without considering the temporal domain. The size of local window and the search window are set to 
                           
                              7
                              ×
                              
                              7
                           
                        , and 
                           
                              15
                              ×
                              
                              15
                           
                        , respectively. The NLM-based methods normally take the search window of the size 
                           
                              21
                              ×
                              
                              21
                           
                        , which is considered to be a good tradeoff between the denoising performance and computation time. We have observed in our proposed NLM–ZMs method that the search window size 
                           
                              15
                              ×
                              
                              15
                           
                         provides an optimum tradeoff for this purpose. In fact, the ZMs are computed in local windows of size 
                           
                              7
                              ×
                              
                              7
                           
                         which covers the search window up to 
                           
                              21
                              ×
                              
                              21
                           
                        . Therefore, a search window of the size 
                           
                              21
                              ×
                              
                              21
                           
                         for the NLM-based methods is equivalent to a search window of the size 
                           
                              15
                              ×
                              
                              15
                           
                         for the NLM–ZMs-based method. This reduces the time complexity by a factor of (21/15)2. The average PSNR values as a function of the number of frames for Suzie, Foreman, and Miss America image sequences are shown in Figs. 2–4
                        
                        
                         for 
                           
                              
                                 p
                                 max
                              
                              =
                              3
                           
                         and 
                           
                              σ
                              =
                              10
                              ,
                              15
                              ,
                              and
                              20
                           
                        , respectively. We set pmax
                        
                        =3 based on the fact that this order has been used for image denoising and image super-resolution [17,18]. Also, in Section 4.2, it is shown that pmax
                        
                        =3 provides a good tradeoff between denoising performance and number of moments.

We observe that there is a sharp increase in the PSNR values when the number of frames is increased from 1 to 3 and after that the increase is gradual when it is increased from 3 to 5 for all image sequences for all values of σ. But when the number of frames is further increased from 5 to 7, the PSNR value becomes stable and even decreases for a few cases of Suzie and Foreman sequences. The reason for this trend in the PSNR value can be attributed to the presence of local motion (such as movement of lips, movement of eye lids, etc.) in our test sequences. Such kind of local motion involves pixel movement within fewer consecutive frames. Therefore, considering large search window in temporal domain may not provide significant improvement in denoising performance.

Next, we analyze the average computation time as a function of the number of frames. Once the size of local and search windows are fixed in the spatial domain, the average computation time depends only on the number of frames and the size of each frame. Fig. 5
                         depicts the average computation time for the three image sequences as a function of the number of frames which increases linearly. Thus, the cost of the computation is much more than the gain in the PSNR values when we increase the number of frames from 3 to 5, or more. The gain in the PSNR value by increasing the number of frames from 1 to 3 is much more than for the gain in using higher number of frames whereas the computation time increases significantly. Therefore, we set number of frames to 3 in the temporal domain for all experiments.

The low order moments represent gross aspects of an image and are more robust to image noise as compared to high order moments. As we move from low order moments to high order moments, initially the denoising performance increases but after some moment orders it becomes stable or even decreases due to the sensitivity of high order moments to image noise. Also, the time complexity increases quadratically for ZMs computation when moment order increases [24,25]. Therefore, a good tradeoff is required between the denoising performance and the time complexity. For this purpose, we conduct experiments with moment order varying from 2 to 7 on Suzie, Foreman and Miss America image sequences for σ
                        =10, 15, and 20. The average denoising performance computed for all frames for the three image sequences as a function of pmax
                         is plotted in Figs. 6–8
                        
                        
                        . The total number of moments for a given pmax
                         are shown in the brackets. The size of local window and the search window are set to 
                           
                              7
                              ×
                              
                              7
                           
                        , and 
                           
                              15
                              ×
                              
                              15
                              ×
                              
                              3
                           
                        , respectively. It is observed from these figures that the rate of increase in PSNR is much more at lower orders than at higher orders and the performance becomes stable after a certain order of moment. The denoising performance starts decreasing when moment order is increased from 6 to 7 in many cases. As stated earlier, in addition to denoising performance, the time complexity associated with each moment order also plays an important role for the selection of moment order pmax
                         to provide a good tradeoff between denoising performance and computation time. Fig. 9
                         presents the average block matching computation time for each frame of the three image sequences (we do not include weight computation time because it is the same for all orders). It is noted that the computation time does not change due to image contents and, therefore, only one frame is required for this purpose. From the figure it is clear that the rate of increase in computation time increases with increase in the number of moments. Therefore, a good tradeoff appears to lie between 
                           
                              
                                 p
                                 max
                              
                              =
                              2
                              and
                              4
                           
                        . The value of pmax
                        
                        =2 provides very less denoising performance as compared to pmax
                        
                        =4. On the other hand, the computation time is increased by a factor 
                           
                              9
                              4
                           
                         (ratio of square of moment orders). Therefore, pmax
                        
                        =3 seems to be a good tradeoff between denoising performance and computation time. In view of this observation, we select pmax
                        
                        =3 in all our experiments. This order is also used by [17,18] for image denoising and image super-resolution using ZMs. For the moment order pmax
                        
                        =3, the desired moment set is {|Z
                        00|, |Z
                        11|, |Z
                        20|, |Z
                        22|, |Z
                        31|, |Z
                        33|} consisting of 6 moments. The set of moments represents ZMs images. Thus, there are 6 ZMs images each of size equal to the size of the original image. On the face of it, the computations of ZMs for the entire image with a block size of 
                           
                              7
                              ×
                              
                              7
                           
                         appears to be a costly task. But, when we compare the computation time taken for ZMs with the time taken for block matching and weight computation, then it turns out to be insignificant as shown in Section 4.5. The use of the fast recursive algorithms and 8-way symmetry/anti-symmetry property of Zernike polynomials results in considerable reduction in computation time [24,25]. We shall present time complexity analysis in Section 4.5.

Ji et al. [17] have applied ZMs in the NLM-based single-image denoising. They normalize the moments as 
                           
                              
                                 |
                              
                              
                                 Z
                                 pq
                              
                              
                                 |
                                 =
                                 |
                              
                              
                                 Z
                                 pq
                              
                              
                                 |
                                 /
                                 |
                              
                              
                                 Z
                                 
                                    p
                                    −
                                    2
                                    ,
                                    q
                                 
                              
                              
                                 |
                                 if
                              
                              
                                 Z
                                 
                                    p
                                    −
                                    2
                                    ,
                                    q
                                 
                              
                              ≠
                              0
                              and
                              q
                              <
                              p
                              ,
                              else
                              
                                 |
                                 
                                    Z
                                    pq
                                 
                                 |
                              
                           
                         remains as such. This makes some of the modified |Zpq
                        | unstable for small values of 
                           
                              
                                 |
                              
                              
                                 Z
                                 
                                    p
                                    −
                                    2
                                    ,
                                    q
                                 
                              
                              
                                 |
                              
                           
                         and also the normalization process introduces significant difference between the modified and original ZMs which do not undergo a change because of the conditional modification of ZMs. For instance, if pmax
                        
                        =3, then according to these conditions, 
                           
                              
                                 |
                              
                              
                                 Z
                                 20
                              
                              
                                 |
                                 =
                                 |
                              
                              
                                 Z
                                 20
                              
                              
                                 |
                                 /
                                 |
                              
                              
                                 Z
                                 00
                              
                              
                                 |
                              
                           
                         and 
                           
                              
                                 |
                              
                              
                                 Z
                                 31
                              
                              
                                 |
                                 =
                                 |
                              
                              
                                 Z
                                 31
                              
                              
                                 |
                                 /
                                 |
                              
                              
                                 Z
                                 11
                              
                              
                                 |
                              
                           
                        . The values |Z
                        00|, |Z
                        11|, |Z
                        22|, |Z
                        33| will remain unchanged. The modified value of |Z
                        20| will reduce significantly because |Z
                        00| represents the average gray value of a block and |Z
                        20| < |Z
                        00|. On the other hand, the magnitude of modified |Z
                        31| is likely to shoot up, because |Z
                        11| is normally very small. In fact, |Z
                        11| is zero or near zero (due to the property of ZMs) when the center of the mass of a block falls on the center of the unit disk over which ZMs are computed. In fact, we have not come across with any normalization process related to ZMs-based image description and normalization problems including image super-resolution [18]. For this reason, we do not normalize ZMs in our proposed method. In order to substantiate our perception, we carry out a comparative performance analysis of the use of the non-normalized ZMs in NLM–ZMs-based approach (our proposed approach) with the normalized ZMs based NLM–ZMs approach as described in [17]. Table 1
                         represents the PSNR values obtained on Suzie, Miss America and Foreman image sequences using these two approaches. The values of filter parameter h are also given in the table for which best PSNR values are achieved. From the table it can be observed that for all the cases, the proposed approach gives better performance than the normalized NLM–ZMs counterparts, with a minimum increase of 0.39dB to a maximum of 0.76dB.

In this section, we present a comparative performance analysis of NLM approach for video sequence denoising and the proposed NLM–ZMs approach. We use the MATLAB code developed by Herrera and Buades [21] for the NLM based single image denoising and extend it to image sequence denoising for comparing our results. In the proposed NLM–ZMs approach, the block matching and weight computation process is performed by Eq. (10). It is clear that the block matching process involves 12 additions/subtractions and 6 multiplications, for pmax
                        
                        =3. On the other hand, the NLM-based block matching involves 2p
                        2 additions/subtractions and p
                        2 multiplications, at each pixel location, where the size of the local window is 
                           
                              p
                              ×
                              
                              p
                           
                         (in the present case p
                        =7). Further, if a Gaussian smoothing is used in the NLM-based method as given in Eq. (4), then the number of multiplications will be increased by a factor p
                        2. The size of the search window is fixed to 
                           
                              21
                              ×
                              
                              21
                              ×
                              
                              3
                           
                         for the NLM-based approach and 
                           
                              15
                              ×
                              
                              15
                              ×
                              
                              3
                           
                         for the proposed NLM–ZMs approach. The size of the local window is 
                           
                              7
                              ×
                              
                              7
                           
                        . The value of filtering parameter h is selected so as to obtain the best denoising performance. The average PSNR values for the eight sequences for various values of noise parameter σ are presented in the Table 2
                         for the NLM and NLM–ZMs denoising methods. The values of filter parameter h are also given in the table for which best PSNR values are achieved. The results are arranged in the descending order of absolute gain in the PSNR values obtained by the proposed NLM–ZMs approach over the existing NLM approach. Interestingly, the gain in percentage is also in the descending order except for a few values. It is seen from the table that the PSNR values for the NLM–ZMs approach are significantly better than the NLM method for most of the sequences. The increase in the denoising performance is due to the ability of the ZMs to represent rotation invariant and noise-resistant features which provide better estimation of weights required for the averaging process during the estimation of the value of denoised signal. There is an average improvement of 1.9dB, 2.6dB and 3.0dB for 
                           
                              σ
                              =
                              10
                              ,
                              15
                              and
                              20
                           
                        , respectively, using the proposed NLM–ZMs approach over the existing NLM approach for all sequences. The maximum improvement in PSNR is observed in the case of Akiyo sequence with an increase of 3.92dB (11.48%), 4.34dB (13.77%) and 4.50dB (15.13%), followed by Miss America sequence with an increase of 3.26dB (9.52%), 4.06dB (12.66%) and 4.54dB (14.84%), and so on, for 
                           
                              σ
                              =
                              10
                              ,
                              15
                              and
                              20
                           
                        , respectively. The smallest improvements are observed in the Highway sequence which is 0.39dB (1.19%), 1.04dB (3.47%), and 1.51dB (5.36%), for 
                           
                              σ
                              =
                              10
                              ,
                              15
                              and
                              20
                           
                        , respectively. It is also observed that the higher is the noise level, the more improvement is observed in the denoising performance of the proposed method. This proves the robustness of ZMs to image noise while performing the task of block matching.

It is important to note that the sequences that exhibit better improvement are rich in local motion as compared to the global motion. For instance, the Akiyo sequence which yields the maximum gain in the PSNR values contains local motion only, while the Highway sequence contains more global motion than the local motion due to the sudden appearance and disappearance of multiple objects along the road side (for example passing by cars, sign boards, over-bridges, etc.) from the scene, thus providing less improvements in the denoising performance. As explained earlier, the ZMs features are rotation invariant and hence these features are able to incorporate the rotational aspect of image patches in the sequence, thus providing better matching of two similar but rotated blocks. The Highway sequence has a uniform white background and the amount of redundant information in the spatial domain is very small. Therefore, the denoising performance is similar to that obtained by the NLM method. Fig. 10
                         displays the original (3rd frame in the sequence), noisy, and the denoised images for all eight image sequences. A visual inspection of the denoised images also reveals the supremacy of the proposed method over the NLM method.

We further compare our results with three recently published NLM-based approaches [12,13]. The first approach, NL-means 3D, is an extension of NLM method in which a 3D volume is taken instead of a 2D patch. The second and the third approaches are based on the regularization of the NL-means. In these approaches, a variational approach is introduced that corrects the over-smoothing and reduces the residual noise of the NL-means by adaptively regularizing the nonlocal method with the total variation (TV). The method introduces two types of blocks-a 2D patch on each frame and a 3D volume in the spatio-temporal domain, much similar to the 3D volume used for the extended 3D NL-means. These methods are referred to as NL-means 3D, R-NL-2D, and R-NL-3D, respectively. The authors in [12,13] have performed experiments on three image sequences: Target, Bicycle and Tennis with spatial and temporal resolutions of 
                           
                              256
                              ×
                              
                              256
                              ×
                              
                              66
                           
                        , 
                           
                              720
                              ×
                              
                              576
                              ×
                              
                              22
                           
                        , and 
                           
                              352
                              ×
                              
                              240
                              ×
                              
                              142
                           
                        , respectively. Both original and noisy sequences have been downloaded from one of the author’s (C. Sutour’s) home page (http://www.math.u-bordeaux1.fr/~sutou001/R-NL/). We compare our results with that of [12,13] by taking a local window of size 
                           
                              7
                              ×
                              
                              7
                           
                         and a search window of size 
                           
                              7
                              ×
                              
                              7
                              ×
                              
                              9
                           
                        . Table 3
                         presents a comparative analysis of these results with that obtained by our proposed approach. Among the three methods: NL-means 3D, R-NL-2D, and R-NL-3D, the performance of R-NL-3D is the best. Therefore, we compare our denoising results with this approach. It is observed that R-NL-3D performs better for the sequences Target and Tennis while for the sequence Bicycle, the proposed NLM–ZMs approach provides much improved results over R-NL-3D. The results of the two other approaches are either less than NLM–ZMs or they are competitive. It is worth mentioning here that all these compared methods use conventional approach of block matching as used in the NLM-based methods while computing weights which is very computation intensive as explained in Section 4.5. The experimental results for the time analysis are given in the next section.

In general, time complexity is one of the major issues in the NLM-based denoising methods. It is much more important in image sequence denoising because more than one image frame is involved in the denoising process. If the sizes of the image, search window and local window are 
                           
                              M
                              ×
                              
                              N
                           
                        , 
                           
                              s
                              ×
                              
                              s
                              ×
                              
                              t
                           
                        , and 
                           
                              p
                              ×
                              
                              p
                           
                        , respectively, then the orders of time complexity of the block matching and weight computation for the NLM-based approaches are O(MNs2
                        p
                        2
                        t), and O(MNs2
                        t), respectively. When a 3D volume is considered the time complexity becomes O(MNs2
                        p
                        3
                        t) and O(MNs2
                        t). This is the case for the methods NL-means 3D and R-NL-3D. There are several ways to reduce this time complexity [15,26,27] but they affect the denoising performance. The time complexity for weight computation for both NLM and NLM–ZMs is of the order O(MNs2
                        t). The value of s is set to 21 for the NLM-based methods and s
                        =15 for the NLM–ZMs method. Therefore, the total number of weights is reduced from 
                           
                              21
                              ×
                              
                              21
                           
                         to 
                           
                              15
                              ×
                              
                              15
                           
                         which turns out to be approximately 50%. This is again a significant contribution to speed enhancement using the proposed approach. The time complexity for block matching in NLM–ZMs is reduced from O(MNs2
                        p
                        2
                        t) to O(MNs2
                        Lt), where L is the number of ZMs, which is 6 for pmax
                        
                        =3. In particular, let p
                        =7, then the time complexity for block matching is reduced from 49MNs2
                        t operations to 6MNs2
                        t operations for L
                        =6. The reduction in time requirement is much more than the additional time required for ZMs computation for the NLM–ZMs-based method. We demonstrate the time requirement for these two methods in Table 4
                         for the four sets of image sequences depending on the spatial and temporal resolution of the image sequences. Since the five sequences Akiyo, Hall Monitor, Highway, Salesman and Ship Container have the same resolution, they are represented by the fourth set of sequence labelled as Others in Table 4, while the other three sets correspond to image sequences Suzie, Miss America and Foreman, respectively. Since the computation time is independent of the image contents, experimenting on any one sequence out of the five sequences in the set Others would amount to the same computation time taken for each of those five sequences. It is observed in Table 4 that the overall time requirement of the proposed NLM–ZMs approach is reduced by a factor which lies between 11 and 12 as compared to the NLM-based methods. Thus, the proposed NLM–ZMs method provides significantly better denoising performance as compared to NLM approach at a much lower computation cost. Also, it has competitive denoising performance in comparison to the state-of-the-art NLM-based recent approaches with a much faster speed.

@&#CONCLUSION@&#

The proposed NLM–ZMs-based image sequence denoising approach is observed to be much more effective than the existing NLM-based approaches both in its denoising performance and computation time. The detailed experiments conducted on eight different image sequences corrupted with additive white Gaussian noise with standard deviation 10, 15, and 20, provide improvements in denoising performance with a minimum value of 0.39dB (1.19%) to a maximum of 4.54dB (14.84%) on a set of eight image sequences which contain many variations in video recording. It is also observed that the higher is the noise in the image, the more improvement is achieved in the denoising performance using the proposed approach. This establishes the robustness of the ZMs-based block matching approach to the image noise during the denoising process. The overall time requirement for denoising an image frame in an image sequence is reduced by a factor which lies between 11 and 12. A comparative performance analysis with the state-of-the-art methods based on NLM approach also demonstrates the competitive denoising performance of the proposed method at a much faster speed.

@&#ACKNOWLEDGEMENTS@&#

The comments and suggestions provided by the anonymous reviewer to raise the standard of the paper are highly appreciated. One of the authors (Ashutosh Aggarwal) is thankful to the University Grants Commission (UGC), Govt. of India, for providing fellowship under Special Assistance Programme (SAP) of UGC Vide file no.: F.4-16/2015/DRS-III (SAP-II).

@&#REFERENCES@&#

