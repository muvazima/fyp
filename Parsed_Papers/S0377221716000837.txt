@&#MAIN-TITLE@&#The Electric Fleet Size and Mix Vehicle Routing Problem with Time Windows and Recharging Stations

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new rich heterogeneous electric fleet routing problem is modeled and solved.


                        
                        
                           
                           A new benchmark set with bounds computed using a branch-and-price solver is provided.


                        
                        
                           
                           A hybrid Adaptive Large Neighbourhood Search is proposed for larger instances.


                        
                        
                           
                           A sophisticated, constant time move evaluation process is described.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Heterogenous fleet

Electric vehicle routing

Efficient constraint handling

@&#ABSTRACT@&#


               
               
                  Due to new regulations and further technological progress in the field of electric vehicles, the research community faces the new challenge of incorporating the electric energy based restrictions into vehicle routing problems. One of these restrictions is the limited battery capacity which makes detours to recharging stations necessary, thus requiring efficient tour planning mechanisms in order to sustain the competitiveness of electric vehicles compared to conventional vehicles. We introduce the Electric Fleet Size and Mix Vehicle Routing Problem with Time Windows and Recharging Stations (E-FSMFTW) to model decisions to be made with regards to fleet composition and the actual vehicle routes including the choice of recharging times and locations. The available vehicle types differ in their transport capacity, battery size and acquisition cost. Furthermore, we consider time windows at customer locations, which is a common and important constraint in real-world routing and planning problems. We solve this problem by means of branch-and-price as well as proposing a hybrid heuristic, which combines an Adaptive Large Neighbourhood Search with an embedded local search and labeling procedure for intensification. By solving a newly created set of benchmark instances for the E-FSMFTW and the existing single vehicle type benchmark using an exact method as well, we show the effectiveness of the proposed approach.
               
            

@&#INTRODUCTION@&#

Current research in sustainable and energy efficient mobility is strongly motivated by increasing concerns about climate change and rising green house gas emissions. The introduction of electrically powered vehicles is one of the major directions taken in order to address these concerns. Pure battery electric vehicles, as studied in this work, are only powered by an electric engine, using the energy stored in a rechargeable battery. One of the main operational challenges in transport applications is their limited range and long recharging times. Besides acquisition cost, the acceptance of electric vehicles in the transportation business will strongly depend on methods alleviating the range and recharging limitations. Selecting the right vehicles for specific transport requirements while minimizing overall cost is therefore of crucial importance.

Companies have a variety of available electric vehicles with certain variability concerning range, payload, and price to consider (see e.g., Austriatech, 2014). Especially with electric vehicles, acquisition cost play an important role in economic considerations of fleet managers. This means that larger vehicles might be able to serve the transportation needs without recharging operations. But the difference in price, using smaller vehicles in the fleet mix could reduce the overall cost. However, smaller vehicles have a smaller capacity and battery size, thus need to be recharged in order to serve longer tours, which in turn takes time. It is to be expected that smaller and cheaper vehicles will be used alongside larger vehicles depending on the typical customer distribution over the urban area. In this work we will show that a fleet composed of different vehicle types can indeed be beneficial.

We propose to address this task by introducing a new optimization problem, the so-called Electric Fleet Size and Mix Vehicle Routing Problem with Time Windows and Recharging Stations (E-FSMFTW). It combines and subsumes the well known Fleet Size Mix Vehicle Routing Problem with Time Windows (FSMFTW) and the recently defined Electric Vehicle Routing Problem with Time Windows and Recharging Stations (E-VRPTW).

@&#RELATED WORK@&#

Solving and optimizing problems involving tour assignments of vehicles is a well known and well studied field of research, known as Vehicle Routing Problem (VRP) (Toth & Vigo, 2014). The basic problem variant is the Capacitated VRP (CVRP), where each customer has a given demand that has to be satisfied, with respect to a maximum vehicle capacity. The VRP with Time Windows (VRPTW) extends the CVRP by adding time windows to the depot and the customers. A survey on this problem class is provided in Bräysy and Gendreau (2005a, 2005b), Toth and Vigo (2014).

The classical VRP has been extended in various ways to account for additional real world aspects. These more complicated problems are often called “rich VRPs” or “multi-attribute VRPs”; see Vidal, Crainic, Gendreau, and Prins (2013a). Our research combines two such streams of research, (1) the use of electrical/zero-emission vehicles in “green” VRPs and (2) the analysis of VRPs with heterogeneous fleet. The first stream is part of research in the field of green logistics. A general survey on the subject is provided in Sbihi and Eglese (2010) and Dekker, Bloemhof, and Mallidis (2012). A recent discussion on electric vehicles for distribution goods is provided by Pelletier, Jabali, and Laporte (2015). For a summary of the work on non-electric “green” VRPs, minimizing for example emissions by speed optimization, we refer to Toth and Vigo (2014) as well.


                        Erdoǧan and Miller-Hooks (2012) started by extending the CVRP to the Green VRP where tours for Alternative Fuel Vehicles are optimized. The uneven distribution of Alternative Fuelling Stations (AFS) leads to the problem of deciding when a vehicle has to visit AFS during its tour (possibly multiple times) in order to minimize the distance travelled but avert to run out of fuel. Two construction heuristics are presented: a Clarke and Wright savings heuristic (Clarke & Wright, 1964) that is extended to include AFS nodes during the merge process, and a Density Based Clustering exploiting spatial properties of the problem. Both approaches terminate after creating a solution containing a feasible set of routes, which is then improved by means of local search. The methods were tested on a randomly generated test set as well as a real world case study considering up to 500 (randomly located) customers and 21 existing AFS. For smaller random instances the presented methods obtain solutions that are, on average, less than 10% worse than the best known solutions obtained with CPLEX.


                        Schneider, Stenger, and Goeke (2014) adapted the Green VRP to electric vehicles (EV) and added time window constraints, introducing the Electric VRPTW with Recharging Stations (E-VRPTW). The aim is to find tours satisfying charge constraints (the state of charge may never fall below zero) and time window constraints. The recharging process complicates the time calculations, since the required recharging time depends on the state of the charge. The problem is solved by a Variable Neighbourhood Search (VNS) approach using Tabu Search (TS) as local optimization technique. The proposed approach was tested on a new benchmark set based on the traditional Solomon instances for the VRPTW that have been extended with recharging stations as well as the instances of Erdoǧan and Miller-Hooks (2012) for the GreenVRP. In addition, the presented approach has been adapted to solve instances of the related Multi Depot VRP with Inter-depot routes (MDVRPI) (Crevier, Cordeau, & Laporte, 2007; Tarantilis, Zachariadis, & Kiranoudis, 2008), where vehicles can visit depots between customers to restock in order satisfy the demand of the customers. The presented methods were able to improve upon previous results for the GreenVRP and new best solutions have been obtained for the MDVRPI. Based on the proposed benchmark set, smaller instances allowing a direct comparison with CPLEX have been created. The comparison shows, that the VNS/TS approach is able to find optimal solutions (where known).

A different electric vehicle routing problem has been presented in Conrad, Figliozzi, Doolen, and Aken (2011), the so-called Recharging VRP (RVRP). Instead of using dedicated recharging stations the authors assume that a set of customers provides the option to recharge at their location. The EV can perform a recharging operation to a certain percentage of the maximum capacity, a so-called ’quick charge’. It is assumed that this takes a fixed amount of time, independent of the current level of charge. Recharging operations and service at the customer can be performed simultaneously. Different problem instances are proposed and solved with various parameter settings using a modified iterative construction and improvement algorithm. The paper focuses on the analysis of the instance parameters and their contribution to the solutions obtained to generate meaningful solution bounds for the average tour distance.

Recently, Goeke and Schneider (2015) studied a rich fleet mixing problem where not only conventional and electric vehicles are considered, but also load-dependent energy consumption based on a real-world network. They developed an Adaptive Large Neighbourhood Search approach with an embedded local search procedure using an surrogate function to evaluate changes efficiently. In parallel to our work, Desaulniers, Fausto, Irnich, and Schneider (2014) tackled the original E-VRPTW as well as variations concerning variable recharging or allowing a single stop. They proposed a branch-price-and-cut algorithm with efficient labeling and cutting procedures applicable for all studied variants. In their computational results, they showed that their approach is able to solve instances with up to 100 customers, while some instances with 50 customers cannot be solved to optimality.

The second stream of research related to our work is that of VRPs with heterogeneous fleet. The Mixed Fleet or Heterogenous VRP considers problems where different types of vehicles are available. It was first introduced in Golden, Assad, Levy, and Gheysens (1984). Baldacci et al. (2008) identifies five major subclasses differing in the number of vehicles available (limited, unlimited), whether a fixed cost per vehicle is considered or not and if the routing cost depend on the vehicle type. The original formulation by Golden et al. (1984) considers an unlimited number of vehicles with fixed acquisition costs and vehicle type independent routing costs, which is classified as a Fleet Size and Mix VRP with Fixed costs (FSMF) (Baldacci et al., 2008; Toth & Vigo, 2014).


                        Liu and Shen (1999) reformulate the FSMF to consider time windows, creating the Fleet Size and Mix Vehicle Routing Problem with Time Windows (FSMFTW). The so-called En Route time, i.e., the time between departing from and returning to the depot minus the cumulative service time at the customers in the respective route is considered as routing cost. The proposed approach was applied to a new benchmark set based on the well known Solomon instances for the VRPTW. This benchmark extends the 56 VRPTW instances by providing three classes of vehicle type settings (A,B,C) varying from 3 to 6 vehicle types with different cost and capacity margins, resulting in 168 problem instances in total.


                        Bräysy, Dullaert, Hasle, Mester, and Gendreau (2008a) propose a three phase multi-start deterministic annealing metaheuristic (MSDA) to solve the FSMFTW. A threshold acceptance criterion is used where the maximum threshold of accepting a worse solution is reduced after a number of iteration until no worsening is allowed. The solution itself is created using a systematic and deterministic multi-phase approach, starting with a modified Clarke and Wright savings heuristic, followed by a route elimination procedure and a systematic local search where three operators are applied every single, second or third iteration. The proposed algorithm shows a very good performance when run for a similar amount of time compared to previous approaches. Furthermore, with longer run-times new best solutions for almost every instance are obtained.

An Adaptive Memory Program (AMP) was proposed by Repoussis and Tarantilis (2010). A memory of good solution features (route assignments and orderings) is maintained within an Iterated Local Search (ILS) using TS as local improvement procedure. A specialized construction heuristic uses the information of the memory to create new solutions for the following run of the ILS which is repeated until the predefined maximum runtime has been reached. The approach was able to find new best solutions for over a half of the instances and found comparable results for the others.

Most solution approaches in the literature use heuristic methods. However, a few exact approaches were also proposed, most notably by Baldacci, Bartolini, Mingozzi, and Roberti (2010). They presented a general exact branch-and-cut-and-price framework to solve the FSMFTW among others. Their approach was able to solve some larger benchmark instances to optimality for the first time, however, there are still a number of instances left.

Recently, Vidal, Crainic, Gendreau, and Prins (2013b) presented a hybrid evolutionary algorithm using population management mechanisms and a generalized solution representation with modular evaluation which is able to solve a large class of VRPs, including the FSMFTW. The approach was able to find new best solutions for many instances in a reasonable amount of time.

Further noteworthy research for the FSMFTW can be found in Dullaert, Janssens, Sörensen, and Vernimmen (2002), Dell’Amico, Monaci, Pagani, and Vigo (2007), Paraskevopoulos, Repoussis, Tarantilis, Ioannou, and Prastacos (2008) and Bräysy, Porkka, Dullaert, Repoussis, and Tarantilis (2008b).

Recently, Koç, Bektas, and Jabali (2014) presented a related heterogeneous fleet problem, the Fleet Size and Mix Pollution-Routing Problem (FSMPRP), focussing on conventional vehicles only. The FSMPRP contains additional operational details, such as adaptation of travel speed to minimize fuel consumption and CO2 emissions.

We combine the streams of research on the EVRPTW and the FSMFTW and introduce a new vehicle routing problem: the Electric Fleet Size and Mix Vehicle Routing Problem with Time Windows and Recharging Stations (E-FSMFTW). For this new problem, we introduce a new set of benchmark instances for our computational experiments as well as for future research in the field.

To define the problem precisely, we provide a mathematical formulation as a MIP model and use a state-of-the-art branch-and-price algorithm designed for the VRPTW to solve a set of smaller instances to have benchmarks for heuristic approaches. In addition we applied it to larger instances as well to obtain good lower bounds for comparison. In order to tackle problem instances of realistic size, we propose a metaheuristic approach based on Adaptive Large Neighbourhood Search (ALNS) with embedded local search and labeling procedures. We describe a sophisticated move evaluation process, which enables us to calculate the change in the objective value using common moves in constant time. We propose to compute optimal positions of recharging stations in a post-local-search step using a variant of the labeling procedure applied in the branch-and-price.

The presented computational experiments show that our approach is able to find optimal solutions for small instances and that high quality feasible solutions can be found for the larger instances. Furthermore, a sensitivity analysis conducted on additional experiments is included, presenting and discussing the impact of the fleet mix and the recharging constraint in our problem.

In Section 2, a mixed-integer linear programming formulation is given alongside detailed formal notation. Section 3 provides a general insight into the branch-and-price method, and describes the bi-directional labeling algorithm in detail. Section 4 describes the modules of our ALNS approach in detail. Results of our experiments for the new benchmark are presented in Section 5. Section 6 provides a short summary and a conclusion of our work.

The Electric Fleet Size and Mix Vehicle Routing Problem with Time Windows and Recharging Stations (E-FSMFTW) consists of finding admissible tours for vehicles of different types such that every customer is covered by exactly one tour while minimizing acquisition costs and the total distance travelled. Our formulation is based on Bräysy et al. (2008a) for the FSMVRPTW and Schneider et al. (2014) for the E-VRPTW. As for the E-VRPTW, a vehicle is also assumed to always recharge to full capacity every time it visits a recharging station.

An instance of the E-FSMFTW consists of a set of customers C, a set of recharging stations F, a depot node and k different vehicle types. N is defined as a set of nodes 
                           
                              N
                              =
                              C
                              ∪
                              
                                 F
                                 ′
                              
                           
                         consisting of a set of customers C and a set of dummy nodes F′ representing the recharging stations of F multiple times. These copies of stations are needed in the model to account for multiple visits at the original one (even for the same vehicle) . u
                        0 and 
                           
                              u
                              
                                 n
                                 +
                                 1
                              
                           
                         are used to represent the start and end depot nodes respectively. N
                        0 (
                           
                              N
                              
                                 n
                                 +
                                 1
                              
                           
                        ) denotes the set of nodes with the start depot node (end depot node) whereas 
                           
                              N
                              
                                 0
                                 ,
                                 n
                                 +
                                 1
                              
                           
                         addresses 
                           
                              N
                              ∪
                              {
                              
                                 u
                                 0
                              
                              ,
                              
                                 u
                                 
                                    n
                                    +
                                    1
                                 
                              
                              }
                           
                        . The same notation is used for C and F′. A binary variable 
                           
                              x
                              
                                 i
                                 j
                              
                              k
                           
                         is used for indicating whether a vehicle of type k visits node j after visiting node i.

The maximum capacity of vehicle type k is defined in Qk
                        , and pi
                         is the capacity demand of node i. Variables 
                           
                              q
                              i
                              k
                           
                         hold the current load of a vehicle of type k in node i. Similar to the load capacity, Yk
                         is the maximum energy capacity of vehicle type k and 
                           
                              y
                              i
                              k
                           
                         is the variable holding the current energy level of a vehicle of type k in node i. rk
                         represents the assumed energy consumption per distance unit travelled of a vehicle of type k and gk
                         corresponds to the recharging time per energy unit.

For each node i, a range [ei, li
                        ] is defined representing the time windows. The service time of each node is represented by si
                         and the actual start of service time is stored in variable τi
                        . The distance and the travel time between two nodes i and j are denoted as dij
                         and tij
                         respectively.

Furthermore, fk
                         is used for the acquisition cost of a vehicle of type k, whereas dij
                         indicate the distance between node i and j.

The E-FSMFTW can be modeled as follows:

                           
                              (2.1)
                              
                                 
                                    
                                       
                                          
                                             m
                                             i
                                             n
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   V
                                                
                                             
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                f
                                                k
                                             
                                             
                                                x
                                                
                                                   0
                                                   j
                                                
                                                k
                                             
                                             +
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   V
                                                
                                             
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      N
                                                      0
                                                   
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      N
                                                      
                                                         n
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                             
                                                c
                                                
                                                   i
                                                   j
                                                
                                                k
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                k
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.2)
                              
                                 
                                    s
                                    .
                                    t
                                    .
                                    
                                    
                                       ∑
                                       
                                          k
                                          ∈
                                          V
                                       
                                    
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          
                                             N
                                             
                                                n
                                                +
                                                1
                                             
                                          
                                          ,
                                          i
                                          ≠
                                          j
                                       
                                    
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                       k
                                    
                                    =
                                    1
                                    
                                    ∀
                                    i
                                    ∈
                                    C
                                 
                              
                           
                        
                        
                           
                              (2.3)
                              
                                 
                                    
                                       ∑
                                       
                                          k
                                          ∈
                                          V
                                       
                                    
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          
                                             N
                                             
                                                n
                                                +
                                                1
                                             
                                          
                                          ,
                                          i
                                          ≠
                                          j
                                       
                                    
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                       k
                                    
                                    ≤
                                    1
                                    
                                    ∀
                                    i
                                    ∈
                                    
                                       F
                                       ′
                                    
                                 
                              
                           
                        
                        
                           
                              (2.4)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             N
                                             
                                                n
                                                +
                                                1
                                             
                                          
                                          ,
                                          i
                                          ≠
                                          j
                                       
                                    
                                    
                                       x
                                       
                                          j
                                          i
                                       
                                       k
                                    
                                    −
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             N
                                             0
                                          
                                          ,
                                          i
                                          ≠
                                          j
                                       
                                    
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                       k
                                    
                                    =
                                    0
                                    
                                    ∀
                                    j
                                    ∈
                                    N
                                    ,
                                    ∀
                                    k
                                    ∈
                                    V
                                 
                              
                           
                        
                        
                           
                              (2.5)
                              
                                 
                                    
                                       e
                                       j
                                    
                                    ≤
                                    
                                       τ
                                       j
                                    
                                    ≤
                                    
                                       l
                                       j
                                    
                                    
                                    ∀
                                    j
                                    ∈
                                    
                                       N
                                       
                                          0
                                          ,
                                          n
                                          +
                                          1
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.6)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                τ
                                                i
                                             
                                             +
                                             
                                                (
                                                
                                                   t
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                +
                                                
                                                   s
                                                   i
                                                
                                                )
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                k
                                             
                                             −
                                             
                                                l
                                                0
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                   k
                                                
                                                )
                                             
                                             ≤
                                             
                                                τ
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             ∀
                                             
                                             k
                                             ∈
                                             V
                                             ,
                                             ∀
                                             i
                                             ∈
                                             
                                                C
                                                0
                                             
                                             ,
                                             ∀
                                             j
                                             ∈
                                             
                                                N
                                                
                                                   n
                                                   +
                                                   1
                                                
                                             
                                             ,
                                             i
                                             ≠
                                             j
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.7)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                τ
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                k
                                             
                                             +
                                             
                                                g
                                                k
                                             
                                             
                                                (
                                                
                                                   Y
                                                   k
                                                
                                                −
                                                
                                                   y
                                                   i
                                                   k
                                                
                                                )
                                             
                                             −
                                             
                                                (
                                                
                                                   l
                                                   0
                                                
                                                +
                                                
                                                   g
                                                   k
                                                
                                                
                                                   Y
                                                   k
                                                
                                                )
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                   k
                                                
                                                )
                                             
                                             ≤
                                             
                                                τ
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             ∀
                                             k
                                             ∈
                                             V
                                             ,
                                             ∀
                                             i
                                             ∈
                                             
                                                F
                                                ′
                                             
                                             ,
                                             ∀
                                             j
                                             ∈
                                             
                                                N
                                                
                                                   n
                                                   +
                                                   1
                                                
                                             
                                             ,
                                             i
                                             ≠
                                             j
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.8)
                              
                                 
                                    
                                       q
                                       j
                                       k
                                    
                                    ≤
                                    
                                       q
                                       i
                                       k
                                    
                                    −
                                    
                                       p
                                       i
                                    
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                       k
                                    
                                    +
                                    
                                       Q
                                       k
                                    
                                    
                                       (
                                       1
                                       −
                                       
                                          x
                                          
                                             i
                                             j
                                          
                                          k
                                       
                                       )
                                    
                                    
                                    ∀
                                    k
                                    ∈
                                    V
                                    ,
                                    ∀
                                    i
                                    ∈
                                    
                                       N
                                       0
                                    
                                    ,
                                    ∀
                                    j
                                    ∈
                                    
                                       N
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                    ,
                                    i
                                    ≠
                                    j
                                 
                              
                           
                        
                        
                           
                              (2.9)
                              
                                 
                                    0
                                    ≤
                                    
                                       q
                                       j
                                       k
                                    
                                    ≤
                                    
                                       Q
                                       k
                                    
                                    
                                    ∀
                                    k
                                    ∈
                                    V
                                    ,
                                    ∀
                                    j
                                    ∈
                                    
                                       N
                                       
                                          0
                                          ,
                                          n
                                          +
                                          1
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.10)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             0
                                             ≤
                                             
                                                y
                                                j
                                                k
                                             
                                             ≤
                                             
                                                y
                                                i
                                                k
                                             
                                             −
                                             
                                                (
                                                
                                                   r
                                                   k
                                                
                                                
                                                   d
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                )
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                k
                                             
                                             +
                                             
                                                Y
                                                k
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                   
                                                   k
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             ∀
                                             k
                                             ∈
                                             V
                                             ,
                                             ∀
                                             i
                                             ∈
                                             C
                                             ,
                                             ∀
                                             j
                                             ∈
                                             
                                                N
                                                
                                                   n
                                                   +
                                                   1
                                                
                                             
                                             ,
                                             i
                                             ≠
                                             j
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.11)
                              
                                 
                                    0
                                    ≤
                                    
                                       y
                                       j
                                       k
                                    
                                    ≤
                                    
                                       Y
                                       k
                                    
                                    −
                                    
                                       (
                                       
                                          r
                                          k
                                       
                                       
                                          d
                                          
                                             i
                                             j
                                          
                                       
                                       )
                                    
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                       k
                                    
                                    
                                    ∀
                                    k
                                    ∈
                                    V
                                    ,
                                    ∀
                                    i
                                    ∈
                                    
                                       F
                                       0
                                       ′
                                    
                                    ,
                                    ∀
                                    j
                                    ∈
                                    
                                       N
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                    ,
                                    i
                                    ≠
                                    j
                                 
                              
                           
                        
                        
                           
                              (2.12)
                              
                                 
                                    
                                       y
                                       0
                                       k
                                    
                                    =
                                    
                                       Y
                                       k
                                    
                                    
                                    ∀
                                    k
                                    ∈
                                    V
                                 
                              
                           
                        
                        
                           
                              (2.13)
                              
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                       k
                                    
                                    ∈
                                    
                                       {
                                       0
                                       ,
                                       1
                                       }
                                    
                                    
                                    i
                                    ∈
                                    
                                       N
                                       0
                                    
                                    ,
                                    j
                                    ∈
                                    
                                       N
                                       
                                          n
                                          +
                                          1
                                       
                                    
                                    ,
                                    i
                                    ≠
                                    j
                                    ,
                                    ∀
                                    k
                                    ∈
                                    V
                                 
                              
                           
                        
                     

The problem is a minimization problem with an objective function (2.1) consisting of two parts. The first part is the sum of the costs of all vehicles used, i.e., if a vehicle is driving from the depot to any other node than the depot (indicated by a value greater than zero) the corresponding acquisition cost fk
                         is added. The second part counts the total traveling cost or each car – in the case of the E-FSMFTW, the distance travelled, i.e., 
                           
                              
                                 c
                                 
                                    i
                                    j
                                 
                                 k
                              
                              =
                              
                                 d
                                 
                                    i
                                    j
                                 
                              
                           
                        . Eq. (2.2) ensures that every customer is visited by any vehicle exactly once while (2.3) covers the fact that a recharge station does not need to be used in a solution at all. Furthermore, each dummy node representing a recharge station is restricted to be visited at most once by any vehicle to ensure correct assignments to node specific variables like the start of service time τi
                        . Eq. (2.13) forces the value of 
                           
                              x
                              
                                 i
                                 j
                              
                              k
                           
                         to be either zero or one.

The timing constraints are covered by (2.5)–(2.7). The constraint described in (2.5) ensures that the start of service time τi
                         has to be inside the time window [ei, li
                        ] of node i. Constraint (2.6) ensures that the starting time of the next node τj
                         has to consider the start time τi
                         plus the service time si
                         of the previous node i in addition to the travel time tij
                         in case that node i is a customer node or the start depot. If the previous node is a recharging station, i.e., i ∈ F′, constraint (2.7) considers the recharge time instead of a service time. The recharging time depends on the remaining energy when arriving at the recharging station 
                           
                              
                                 y
                                 i
                                 k
                              
                              ,
                           
                         the maximum energy capacity of the vehicle Yk
                         and the recharging rate gk
                        .

To ensure that the demand of the customers can be fulfilled by the assigned vehicle k, constraint (2.8) ensures that the load of the vehicle in the next node 
                           
                              q
                              j
                              k
                           
                         depend on the load of the previous node 
                           
                              q
                              i
                              k
                           
                         plus the demand pi
                        . Eq. (2.9) restricts the load 
                           
                              q
                              i
                              k
                           
                         never to exceed the maximum capacity Qk
                         of the vehicle k as well as ensures a positive value.

Constraint (2.10) restricts the current available energy 
                           
                              y
                              j
                              k
                           
                         to be smaller than the previous 
                           
                              y
                              i
                              k
                           
                         and to consider the energy consumption per km/mile rk
                         when traveling from a customer node i ∈ C to any other node 
                           
                              j
                              ∈
                              
                                 N
                                 
                                    n
                                    +
                                    1
                                 
                              
                           
                        . As it is assumed, that a vehicle is recharged to the maximum capacity when visiting a recharge station, constraint (2.11) ensures that the current load is assumed to be the maximum minus the consumed amount. Both constraints also ensure that the available energy is always positive in any node 
                           
                              i
                              ∈
                              
                                 N
                                 
                                    0
                                    ,
                                    n
                                    +
                                    1
                                 
                              
                           
                        .

To formulate the problem as a generalized set partitioning problem, let Ωk
                         denote the set of all feasible routes of vehicle type k that satisfy constraints (2.2)–(2.13). Let 
                           
                              c
                              
                                 r
                              
                              k
                           
                         be the cost of the route r ∈ Ωk
                         and 
                           
                              a
                              
                                 i
                                 r
                              
                              k
                           
                         be the number of times node i ∈ C. Furthermore, let 
                           
                              λ
                              
                                 r
                              
                              k
                           
                         be a binary variable equal to 1 if and only if route r ∈ Ωk
                         is used in the solution. The E-FSMFTW can then be formulated as follows:

                           
                              (2.14)
                              
                                 
                                    
                                       
                                          
                                             m
                                             i
                                             n
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   V
                                                
                                             
                                             
                                                ∑
                                                
                                                   r
                                                   ∈
                                                   
                                                      Ω
                                                      k
                                                   
                                                
                                             
                                             
                                                c
                                                
                                                   r
                                                
                                                k
                                             
                                             
                                                λ
                                                
                                                   r
                                                
                                                k
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.15)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   k
                                                   ∈
                                                   V
                                                
                                             
                                             
                                                ∑
                                                
                                                   r
                                                   ∈
                                                   
                                                      Ω
                                                      k
                                                   
                                                
                                             
                                             
                                                a
                                                
                                                   i
                                                   r
                                                
                                                k
                                             
                                             
                                                λ
                                                
                                                   r
                                                
                                                k
                                             
                                             =
                                             1
                                             ,
                                             ∀
                                             i
                                             ∈
                                             C
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.16)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   r
                                                   ∈
                                                   
                                                      Ω
                                                      k
                                                   
                                                
                                             
                                             
                                                a
                                                
                                                   i
                                                   r
                                                
                                                k
                                             
                                             ≤
                                             
                                                U
                                                k
                                             
                                             ,
                                             ∀
                                             k
                                             ∈
                                             V
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2.17)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                λ
                                                
                                                   r
                                                
                                                k
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             ,
                                             ∀
                                             r
                                             ∈
                                             
                                                Ω
                                                k
                                             
                                             ,
                                             ∀
                                             k
                                             ∈
                                             V
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The objective function (2.14) minimizes the cost of the selected routes, whereas constraint (2.15) ensures that every request is served once.

As the number of routes is usually very large, enumerating all columns may not be possible. In order to solve the LP relaxation of such a problem, a so-called restricted master problem (Desrosiers & Lübbecke, 2011) is used whose columns are extended as needed using column generation. Such a restricted master problem can be optained by replacing Ωk
                         with a set of restricted routes 
                           
                              Ω
                              k
                              ′
                           
                         as well as replacing (2.17) with 
                           
                              
                                 λ
                                 
                                    r
                                 
                                 k
                              
                              ≥
                              0
                              ,
                              r
                              ∈
                              
                                 Ω
                                 k
                                 ′
                              
                           
                        .

Additional columns with negative reduced cost to the restricted master problem are created by solving the corresponding pricing problems (one per vehicle type k):

                           
                              (2.18)
                              
                                 
                                    
                                       
                                          
                                             m
                                             i
                                             n
                                             
                                          
                                       
                                       
                                          
                                             
                                                f
                                                k
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   
                                                      N
                                                      0
                                                   
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      N
                                                      
                                                         n
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   i
                                                   ≠
                                                   j
                                                
                                             
                                             
                                                c
                                                
                                                   i
                                                   j
                                                
                                                k
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                k
                                             
                                             −
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   C
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      N
                                                      
                                                         n
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                k
                                             
                                             
                                                π
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                        subject to constraints (2.2)–(2.13), where πi
                         is the negative reduced cost associated with node i. This type of pricing problem is also called a Shortest Path Problem with Resource Constraints (SPPRC). The next section will describe how this general problem is adapted for the E-FSMFTW and how it is solved.

The set partitioning formulation described in the previous section is solved using a branch-and-price algorithm. The algorithm is similar to existing branch-and-price algorithms for the VRPTW (see e.g. Desaulniers, Lessard, & Hadjar, 2008), but differs in the algorithm for solving the pricing problem since it has to incorporate the constraints related to charging. The procedure for solving the pricing problem is described in details in Section 3.1.

In order to obtain integer solutions, the algorithm branches on the number of vehicles as long as this number is fractional. Once the number of vehicles used is integer, the algorithm switches to branching on the original variables. For a pair of nodes i, j ∈ N
                     0, i < j the algorithm computes 
                        
                           
                              ∑
                              
                                 k
                                 ∈
                                 V
                              
                           
                           
                              (
                              
                                 x
                                 
                                    i
                                    j
                                 
                                 k
                              
                              +
                              
                                 x
                                 
                                    j
                                    i
                                 
                                 k
                              
                              )
                           
                        
                      as well as 
                        
                           
                              ∑
                              
                                 k
                                 ∈
                                 V
                              
                           
                           
                              x
                              
                                 i
                                 j
                              
                              k
                           
                        
                      and 
                        
                           
                              ∑
                              
                                 k
                                 ∈
                                 V
                              
                           
                           
                              x
                              
                                 j
                                 i
                              
                              k
                           
                           ,
                        
                     and ensures that this number is integer. It also ensures that 
                        
                           x
                           
                              i
                              ,
                              n
                              +
                              1
                           
                           k
                        
                      is integer for all i ∈ N and all k ∈ V. When both conditions are satisfied an integer solution is obtained

This section will now focus on describing how the new pricing problem - called the Elementary Shortest Path Problem with Time Windows and Recharging Stations (ESPPTWRS) - is solved using a bi-directional labeling algorithm. The SPPRC in context of vehicle routing problems is primarily solved using dynamic programming approaches, so-called labeling algorithms. An overview of SPPRC and solution techniques are provided in Irnich, Desaulniers, Desaulniers, Desrosiers, and Solomon (2005).

In this work, the pricing problem is solved using a bi-directional labeling algorithm. This variant of a labeling algorithm utilizes a forward (labels are extended by adding an additional visit at the end of the current path) and a backward (extension by adding a visit before to the current path) labeling procedure. Labels of both directions are extended in turn until a termination criterion is reached followed by a merging process of the remaining non-dominated labels.

The procedures follows the general steps (see Irnich et al., 2005), but differ in their label definition, extension and dominance criterion. The description of the labeling algorithm uses a function style notation to address the value of a field of a specific label, i.e., node(L) refers to the node of label L, the resources are referred by 
                           
                              
                                 R
                                 1
                              
                              
                                 (
                                 L
                                 )
                              
                              ,
                              …
                              ,
                              
                                 R
                                 γ
                              
                              
                                 (
                                 L
                                 )
                              
                              ,
                           
                         and prev(L), 
                           
                              V
                              (
                              L
                              )
                           
                         for the pointer to the previous label, and the bit set of unreachable nodes respectively. In the following, the forward and backward cases are covered first before describing the merging procedure resulting in the final bi-directional algorithm.

The forward variant extends the labels in such a way, that the next node is added at the end of the current path. To ensure feasibility and perform dominance checks efficiently, four resources are used: the current cost of the path (Rc
                           ), the load after visiting the current node (Rq
                           ), the earliest begin of service time at the current node (Rt
                           ) and the energy usage since the last visit of a recharging station (Ry
                           ). The forward label denoted as 
                              
                                 
                                    L
                                    F
                                 
                                 =
                                 
                                    {
                                    n
                                    o
                                    d
                                    e
                                    ,
                                    
                                       (
                                       
                                          R
                                          c
                                       
                                       ,
                                       
                                          R
                                          q
                                       
                                       ,
                                       
                                          R
                                          t
                                       
                                       ,
                                       
                                          R
                                          y
                                       
                                       )
                                    
                                    ,
                                    prev
                                    ,
                                    V
                                    }
                                 
                              
                           
                        

An extension of a label LF
                               to a node j, where (node(LF
                              ), j) ∈ A, is feasible if following constraints are fulfilled:

                                 
                                    (3.1)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      R
                                                      q
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         F
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      p
                                                      j
                                                   
                                                   ≤
                                                   
                                                      Q
                                                      k
                                                   
                                                   ,
                                                   
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         F
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      t
                                                      
                                                         node
                                                         (
                                                         
                                                            L
                                                            F
                                                         
                                                         )
                                                         j
                                                      
                                                   
                                                   ≤
                                                   
                                                      l
                                                      j
                                                   
                                                   ,
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         F
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      d
                                                      
                                                         node
                                                         (
                                                         
                                                            L
                                                            F
                                                         
                                                         )
                                                         j
                                                      
                                                   
                                                   ·
                                                   r
                                                   ≤
                                                   
                                                      Y
                                                      k
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

The constraints in (3.1) only ensure the feasibility of the next extension, but to reduce the number of labels created – and thus reducing the overall computational time – more restrictive constraints are introduced. These harness the requirement to return to the depot and the possibility to recharge along the way.

                                 
                                    (3.2)
                                    
                                       
                                          
                                             
                                                
                                                   l
                                                   
                                                      n
                                                      +
                                                      1
                                                   
                                                
                                             
                                             
                                                ≥
                                             
                                             
                                                
                                                   m
                                                   a
                                                   x
                                                   
                                                      (
                                                      
                                                         R
                                                         t
                                                      
                                                      
                                                         (
                                                         
                                                            L
                                                            F
                                                         
                                                         )
                                                      
                                                      +
                                                      
                                                         t
                                                         
                                                            node
                                                            (
                                                            
                                                               L
                                                               F
                                                            
                                                            )
                                                            j
                                                         
                                                      
                                                      ,
                                                      
                                                         e
                                                         j
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      t
                                                      
                                                         j
                                                         n
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   +
                                                   
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  s
                                                                  j
                                                               
                                                            
                                                            
                                                               
                                                                  j
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  g
                                                                  (
                                                                  
                                                                     R
                                                                     y
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        L
                                                                        F
                                                                     
                                                                     )
                                                                  
                                                                  +
                                                                  
                                                                     d
                                                                     
                                                                        node
                                                                        (
                                                                        
                                                                           L
                                                                           F
                                                                        
                                                                        )
                                                                        j
                                                                     
                                                                  
                                                                  ·
                                                                  r
                                                                  )
                                                               
                                                            
                                                            
                                                               
                                                                  j
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.3)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         F
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      d
                                                      
                                                         node
                                                         (
                                                         
                                                            L
                                                            F
                                                         
                                                         )
                                                         j
                                                      
                                                   
                                                   ≥
                                                   m
                                                   i
                                                   n
                                                   
                                                      (
                                                      
                                                         d
                                                         
                                                            j
                                                            n
                                                            +
                                                            1
                                                         
                                                      
                                                      ,
                                                      
                                                         d
                                                         
                                                            j
                                                            f
                                                         
                                                      
                                                      )
                                                   
                                                   ·
                                                   r
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   
                                                   f
                                                   =
                                                   
                                                   m
                                                   i
                                                   n
                                                   {
                                                   f
                                                   |
                                                   
                                                      d
                                                      
                                                         f
                                                         j
                                                      
                                                   
                                                   ,
                                                   f
                                                   ∈
                                                   F
                                                   }
                                                   ,
                                                   j
                                                   ∈
                                                   C
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

With Eq. (3.2) it is ensured that the depot can be reached in time to satisfy the latest arrival time, if the label LF
                               is extended to node j. Apart from the travel time and the possible waiting time at node j, the time spent in the node has to be accounted for too. There are two possibilities, depending on whether node j being a customer, where a service time is present, or a recharging station. Due to the fixed recharging policy of the problem – always recharging to full capacity – the time spent recharging is calculated using the information of label LF
                              . By satisfying Eq. (3.3) it is ensured that a recharging station (or the depot) can be reached after visiting customer node j.

If (3.1)–(3.3) are valid for an extension of LF
                               to node j, then a new label 
                                 
                                    L
                                    
                                       n
                                       e
                                       w
                                    
                                    F
                                 
                               is created as follows:

                                 
                                    (3.4)
                                    
                                       
                                          
                                             
                                                
                                                   node
                                                   (
                                                   
                                                      L
                                                      
                                                         n
                                                         e
                                                         w
                                                      
                                                      F
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.5)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      c
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         F
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      R
                                                      c
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         F
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      
                                                         c
                                                         ^
                                                      
                                                      
                                                         node
                                                         (
                                                         
                                                            L
                                                            F
                                                         
                                                         )
                                                         j
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.6)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      q
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         F
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     R
                                                                     q
                                                                  
                                                                  +
                                                                  
                                                                     p
                                                                     j
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  j
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  R
                                                                  q
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  j
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.7)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         F
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   max
                                                   (
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         F
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      t
                                                      
                                                         node
                                                         (
                                                         
                                                            L
                                                            F
                                                         
                                                         )
                                                         j
                                                      
                                                   
                                                   ,
                                                   
                                                      e
                                                      j
                                                   
                                                   )
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   ×
                                                   
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  +
                                                                  
                                                                  
                                                                     s
                                                                     j
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  j
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  +
                                                                  
                                                                  g
                                                                  (
                                                                  
                                                                     R
                                                                     y
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        L
                                                                        F
                                                                     
                                                                     )
                                                                  
                                                                  +
                                                                  
                                                                     d
                                                                     
                                                                        node
                                                                        (
                                                                        
                                                                           L
                                                                           F
                                                                        
                                                                        )
                                                                        j
                                                                     
                                                                  
                                                                  ·
                                                                  r
                                                                  )
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  j
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.8)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         F
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     R
                                                                     y
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        L
                                                                        F
                                                                     
                                                                     )
                                                                  
                                                                  +
                                                                  
                                                                     d
                                                                     
                                                                        node
                                                                        (
                                                                        
                                                                           L
                                                                           F
                                                                        
                                                                        )
                                                                        j
                                                                     
                                                                  
                                                                  ·
                                                                  r
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  j
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  j
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.9)
                                    
                                       
                                          
                                             
                                                
                                                   V
                                                   (
                                                   
                                                      L
                                                      
                                                         n
                                                         e
                                                         w
                                                      
                                                      F
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   V
                                                   
                                                      (
                                                      
                                                         L
                                                         F
                                                      
                                                      )
                                                   
                                                   
                                                   ∪
                                                   
                                                   
                                                      {
                                                      j
                                                      }
                                                   
                                                   
                                                   ∪
                                                   
                                                   unreachables
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         F
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

The equations in (3.4)–(3.8) set the last visited node, cost, load, time and consumed energy of label 
                                 
                                    L
                                    
                                       n
                                       e
                                       w
                                    
                                    F
                                 
                              . The cost resource uses the modified cost 
                                 
                                    
                                       
                                          c
                                          ^
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                 
                               which incorporates the dual value of the current pricing problem. The set of unreachable nodes is updated in Eq. (3.9) by adding the new node j and – substituted by the function unreachables(LF
                              ) – all nodes u, (node(LF
                              ), u) ∈ A, violating the capacity or time constraint in (3.1) and (3.2). The energy constraint is not part of the check for unreachable nodes, as Ry
                              (LF
                              ) can be replenished, i.e., re-set to 0, see Eq. (3.8). Therefore a node u might only be temporarily unreachable, and might lead to an undesired and invalid domination.

To reduce the number of labels extended, a label elimination method based on dominance checks (as described in Feillet, Dejax, Gendreau, & Gueguen, 2004) is used. By identifying and removing dominated labels, the number of labels can be reduced significantly which directly impacts the overall runtime of the algorithm.

For the ESPPTWRS, using forward labeling, the criterion is as follows: a forward label 
                                 
                                    L
                                    1
                                    F
                                 
                               dominates 
                                 
                                    L
                                    2
                                    F
                                 
                               if

                                 
                                    (3.10)
                                    
                                       
                                          
                                             
                                                
                                                   node
                                                   (
                                                   
                                                      L
                                                      1
                                                      F
                                                   
                                                   )
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   node
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         F
                                                      
                                                      )
                                                   
                                                   ,
                                                   
                                                      R
                                                      q
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         1
                                                         F
                                                      
                                                      )
                                                   
                                                   ≤
                                                   
                                                      R
                                                      q
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         F
                                                      
                                                      )
                                                   
                                                   ,
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         1
                                                         F
                                                      
                                                      )
                                                   
                                                   ≤
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         F
                                                      
                                                      )
                                                   
                                                   ,
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         1
                                                         F
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                ≥
                                             
                                             
                                                
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         F
                                                      
                                                      )
                                                   
                                                   ,
                                                   V
                                                   
                                                      (
                                                      
                                                         L
                                                         1
                                                         F
                                                      
                                                      )
                                                   
                                                   ⊆
                                                   V
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         F
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

The proof of this criterion is an extension of Feillet et al. (2004). Let 
                                 
                                    L
                                    1
                                    F
                                 
                               and 
                                 
                                    L
                                    2
                                    F
                                 
                               be two forward labels with 
                                 
                                    i
                                    =
                                    node
                                    
                                       (
                                       
                                          L
                                          1
                                          F
                                       
                                       )
                                    
                                    =
                                    node
                                    
                                       (
                                       
                                          L
                                          2
                                          F
                                       
                                       )
                                    
                                 
                               where 
                                 
                                    L
                                    1
                                    F
                                 
                               dominates 
                                 
                                    L
                                    2
                                    F
                                 
                               according to criterion (3.10). Let j be a node 
                                 
                                    L
                                    1
                                    F
                                 
                               can be extended to. If 
                                 
                                    L
                                    2
                                    F
                                 
                               cannot be extended to j then it is clearly dominated. Otherwise, based on cost, time, and energy, 
                                 
                                    L
                                    1
                                    F
                                 
                               dominates 
                                 
                                    L
                                    2
                                    F
                                 
                               after an extension as well, if they are extended to node j directly. Let assume a recharge at station f is needed in order to reach j. After recharging at station f, both labels have the same amount of energy consumed when arriving at node j, i.e., dfj
                               · r, thus the criterion is still fulfilled with respect to the energy resource. The time resource calculation contains the starting time, travel times from i to f and further to j and the recharging time at f. As the travel time is equal for both labels, it is omitted in the further consideration. Due to the direct correlation between the energy consumed and the recharging time needed, the following can be deduced: 
                                 
                                    
                                       R
                                       t
                                    
                                    
                                       (
                                       
                                          L
                                          1
                                          F
                                       
                                       )
                                    
                                    +
                                    g
                                    
                                       (
                                       
                                          R
                                          y
                                       
                                       
                                          (
                                          
                                             L
                                             1
                                             F
                                          
                                          )
                                       
                                       +
                                       
                                          d
                                          
                                             i
                                             f
                                          
                                       
                                       ·
                                       r
                                       )
                                    
                                    ≤
                                    
                                       R
                                       t
                                    
                                    
                                       (
                                       
                                          L
                                          2
                                          F
                                       
                                       )
                                    
                                    +
                                    g
                                    
                                       (
                                       
                                          R
                                          y
                                       
                                       
                                          (
                                          
                                             L
                                             2
                                             F
                                          
                                          )
                                       
                                       +
                                       
                                          d
                                          
                                             i
                                             f
                                          
                                       
                                       ·
                                       r
                                       )
                                    
                                 
                              . This is true as 
                                 
                                    
                                       R
                                       t
                                    
                                    
                                       (
                                       
                                          L
                                          1
                                          F
                                       
                                       )
                                    
                                    ≤
                                    
                                       R
                                       t
                                    
                                    
                                       (
                                       
                                          L
                                          2
                                          F
                                       
                                       )
                                    
                                 
                               and 
                                 
                                    
                                       R
                                       y
                                    
                                    
                                       (
                                       
                                          L
                                          1
                                          F
                                       
                                       )
                                    
                                    ≤
                                    
                                       R
                                       y
                                    
                                    
                                       (
                                       
                                          L
                                          2
                                          F
                                       
                                       )
                                    
                                 
                               holds as assumed previously. As our method to update the set of unreachable nodes do not consider the energy constraint, the remaining proof follows directly from Feillet et al. (2004).

For the backward case, the next node in the extension is added at the beginning of the current path. In addition to the resources used in the forward label, three additional resources are maintained: the minimum (Rrs
                           ) and the maximum (
                              
                                 R
                                 
                                    rs
                                    ¯
                                 
                              
                           ) time available to recharge at the first recharging station in the current path; and the earliest begin of service 
                              
                                 
                                    R
                                    
                                       t
                                       ¯
                                    
                                 
                                 ,
                              
                            with the recharging time for the current energy consumption already included. In contrast to the forward label, the time resource Rt
                            denote the the latest begin of the route. The backward label denoted as 
                              
                                 
                                    L
                                    B
                                 
                                 =
                                 
                                    {
                                    n
                                    o
                                    d
                                    e
                                    ,
                                    
                                       (
                                       
                                          R
                                          c
                                       
                                       ,
                                       
                                          R
                                          q
                                       
                                       ,
                                       
                                          R
                                          t
                                       
                                       ,
                                       
                                          R
                                          y
                                       
                                       ,
                                       
                                          R
                                          
                                             t
                                             ¯
                                          
                                       
                                       ,
                                       
                                          R
                                          rs
                                       
                                       ,
                                       
                                          R
                                          
                                             rs
                                             ¯
                                          
                                       
                                       )
                                    
                                    ,
                                    prev
                                    ,
                                    V
                                    }
                                 
                              
                           
                        

An extension of a label LB
                               to a node i, where (i, node(LB
                              )) ∈ A, is valid if following constraints are fulfilled:

                                 
                                    (3.11)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      p
                                                      i
                                                   
                                                   +
                                                   
                                                      R
                                                      q
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   ≤
                                                   
                                                      Q
                                                      k
                                                   
                                                   ,
                                                   
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   −
                                                   
                                                      s
                                                      i
                                                   
                                                   −
                                                   
                                                      t
                                                      
                                                         i
                                                         node
                                                         (
                                                         
                                                            L
                                                            B
                                                         
                                                         )
                                                      
                                                   
                                                   ≥
                                                   
                                                      e
                                                      i
                                                   
                                                   ,
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   
                                                   
                                                      d
                                                      
                                                         i
                                                         node
                                                         (
                                                         
                                                            L
                                                            B
                                                         
                                                         )
                                                      
                                                   
                                                   ·
                                                   r
                                                   +
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   ≤
                                                   
                                                      Y
                                                      k
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.12)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   min
                                                   (
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   −
                                                   
                                                      s
                                                      i
                                                   
                                                   −
                                                   
                                                      t
                                                      
                                                         i
                                                         node
                                                         (
                                                         
                                                            L
                                                            B
                                                         
                                                         )
                                                      
                                                   
                                                   −
                                                   
                                                      e
                                                      i
                                                   
                                                   +
                                                   
                                                      R
                                                      rs
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   ,
                                                   
                                                      R
                                                      
                                                         rs
                                                         ¯
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   )
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   
                                                   ≥
                                                   
                                                   g
                                                   (
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      d
                                                      
                                                         i
                                                         node
                                                         (
                                                         
                                                            L
                                                            B
                                                         
                                                         )
                                                      
                                                   
                                                   ·
                                                   r
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Constraints (3.11) ensures the feasibility of the next extension on a basic level by checking the capacity, time window and energy constraint similar to the forward label constraints. The time needed to recharge at the next possible recharging station is not yet fully known when visiting a customer. Therefore constraint (3.12) ensures that after adding node i, a recharge of the energy consumed (rhs) is between the minimal and maximal recharging time available. Further restrictive constraints are used to reduce the number of labels created, i.e., Eq. (3.3) and

                                 
                                    (3.13)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      e
                                                      0
                                                   
                                                   +
                                                   
                                                      t
                                                      
                                                         0
                                                         i
                                                      
                                                   
                                                   
                                                      ≤
                                                      min
                                                      (
                                                   
                                                   
                                                      l
                                                      i
                                                   
                                                   ,
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   −
                                                   
                                                      t
                                                      
                                                         i
                                                         node
                                                         (
                                                         
                                                            L
                                                            B
                                                         
                                                         )
                                                      
                                                   
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  −
                                                                  
                                                                     s
                                                                     i
                                                                  
                                                                  
                                                                     )
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  j
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  −
                                                                  Δ
                                                                  rs
                                                                  −
                                                                  g
                                                                  (
                                                                  
                                                                     d
                                                                     
                                                                        0
                                                                        i
                                                                     
                                                                  
                                                                  ·
                                                                  r
                                                                  )
                                                                  )
                                                               
                                                            
                                                            
                                                               
                                                                  j
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                 
                              where 
                                 
                                    Δ
                                    rs
                                    =
                                    max
                                    (
                                    0
                                    ,
                                    g
                                    
                                       (
                                       
                                          R
                                          y
                                       
                                       
                                          (
                                          
                                             L
                                             B
                                          
                                          )
                                       
                                       +
                                       
                                          d
                                          
                                             i
                                             node
                                             (
                                             
                                                L
                                                B
                                             
                                             )
                                          
                                       
                                       ·
                                       r
                                       )
                                    
                                    −
                                    
                                       R
                                       rs
                                    
                                    
                                       (
                                       
                                          L
                                          B
                                       
                                       )
                                    
                                    )
                                 
                               represents the additional time needed for the recharging operation. Notice that the maximum time will never exceeded due to constraint (3.12). With (3.13), extensions to a node i are prohibited, if the depot cannot be reached after that visit.

If (3.11)–(3.13) and (3.3) are valid for an extension of LB
                               to node i, then a new label 
                                 
                                    L
                                    
                                       n
                                       e
                                       w
                                    
                                    B
                                 
                               is created as follows:

                                 
                                    (3.14)
                                    
                                       
                                          
                                             
                                                
                                                   node
                                                   (
                                                   
                                                      L
                                                      
                                                         n
                                                         e
                                                         w
                                                      
                                                      B
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.15)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      c
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      R
                                                      c
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      
                                                         c
                                                         ^
                                                      
                                                      
                                                         i
                                                         node
                                                         (
                                                         
                                                            L
                                                            B
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.16)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      q
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     R
                                                                     q
                                                                  
                                                                  +
                                                                  
                                                                     p
                                                                     j
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  i
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  R
                                                                  q
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  i
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.17)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   min
                                                   (
                                                   
                                                      l
                                                      i
                                                   
                                                   ,
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   −
                                                   
                                                      t
                                                      
                                                         i
                                                         node
                                                         (
                                                         
                                                            L
                                                            B
                                                         
                                                         )
                                                      
                                                   
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  −
                                                                  
                                                                     s
                                                                     i
                                                                  
                                                                  
                                                                     )
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  i
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  −
                                                                  Δ
                                                                  rs
                                                                  )
                                                               
                                                            
                                                            
                                                               
                                                                  i
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.18)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     R
                                                                     y
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        L
                                                                        B
                                                                     
                                                                     )
                                                                  
                                                                  +
                                                                  
                                                                     d
                                                                     
                                                                        i
                                                                        node
                                                                        (
                                                                        
                                                                           L
                                                                           B
                                                                        
                                                                        )
                                                                     
                                                                  
                                                                  ·
                                                                  r
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  i
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  i
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.19)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      
                                                         t
                                                         ¯
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   min
                                                   (
                                                   
                                                      l
                                                      i
                                                   
                                                   ,
                                                   
                                                      R
                                                      t
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   −
                                                   
                                                      t
                                                      
                                                         i
                                                         node
                                                         (
                                                         
                                                            L
                                                            B
                                                         
                                                         )
                                                      
                                                   
                                                   −
                                                   Δ
                                                   
                                                      r
                                                      s
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.20)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      rs
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  min
                                                                  (
                                                                  
                                                                     R
                                                                     
                                                                        t
                                                                        ¯
                                                                     
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        L
                                                                        
                                                                           n
                                                                           e
                                                                           w
                                                                        
                                                                        B
                                                                     
                                                                     )
                                                                  
                                                                  ,
                                                                  
                                                                     Y
                                                                     k
                                                                  
                                                                  ·
                                                                  g
                                                                  ,
                                                                  
                                                                     R
                                                                     rs
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        L
                                                                        B
                                                                     
                                                                     )
                                                                  
                                                                  +
                                                                  
                                                                     Δ
                                                                     
                                                                        W
                                                                        T
                                                                     
                                                                  
                                                                  )
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  i
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  i
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.21)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      R
                                                      
                                                         rs
                                                         ¯
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     R
                                                                     
                                                                        t
                                                                        ¯
                                                                     
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        L
                                                                        
                                                                           n
                                                                           e
                                                                           w
                                                                        
                                                                        B
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  i
                                                                  ∈
                                                                  C
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  i
                                                                  ∈
                                                                  F
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (3.22)
                                    
                                       
                                          
                                             
                                                
                                                   V
                                                   (
                                                   
                                                      L
                                                      
                                                         n
                                                         e
                                                         w
                                                      
                                                      B
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   V
                                                   
                                                      (
                                                      
                                                         L
                                                         B
                                                      
                                                      )
                                                   
                                                   
                                                   ∪
                                                   
                                                   
                                                      {
                                                      i
                                                      }
                                                   
                                                   
                                                   ∪
                                                   
                                                   unreachables
                                                   
                                                      (
                                                      
                                                         L
                                                         
                                                            n
                                                            e
                                                            w
                                                         
                                                         F
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where 
                                 
                                    
                                       Δ
                                       
                                          W
                                          T
                                       
                                    
                                    =
                                    max
                                    
                                       (
                                       0
                                       ,
                                       
                                          l
                                          i
                                       
                                       −
                                       
                                          R
                                          t
                                       
                                       
                                          (
                                          
                                             L
                                             B
                                          
                                          )
                                       
                                       −
                                       
                                          t
                                          
                                             i
                                             node
                                             (
                                             
                                                L
                                                B
                                             
                                             )
                                          
                                       
                                       −
                                       
                                          s
                                          i
                                       
                                       )
                                    
                                 
                               denotes the amount of unavoidable waiting time at customer i and 
                                 
                                    Δ
                                    rs
                                    =
                                    max
                                    (
                                    0
                                    ,
                                    g
                                    
                                       (
                                       
                                          R
                                          y
                                       
                                       
                                          (
                                          
                                             L
                                             B
                                          
                                          )
                                       
                                       +
                                       
                                          d
                                          
                                             i
                                             node
                                             (
                                             
                                                L
                                                B
                                             
                                             )
                                          
                                       
                                       ·
                                       r
                                       )
                                    
                                    −
                                    
                                       R
                                       rs
                                    
                                    
                                       (
                                       
                                          L
                                          B
                                       
                                       )
                                    
                                    )
                                 
                               the additional recharging time as before.

Again, Eqs. (3.14)–(3.18) set the last visited node, cost, load, time and remaining energy of label 
                                 
                                    L
                                    
                                       n
                                       e
                                       w
                                    
                                    B
                                 
                              . Eq. (3.19) stores the earliest begin of service with the recharging time of the current energy consumption included for later use in the dominance checks. With (3.20) and (3.21) the time spent at least at the next recharging station and the maximum time available are updated. Eq. (3.22) updates the set of unreachable nodes.

A backward label 
                                 
                                    L
                                    1
                                    B
                                 
                               dominates 
                                 
                                    L
                                    2
                                    B
                                 
                               if

                                 
                                    (3.23)
                                    
                                       
                                          
                                             
                                                
                                                   node
                                                   (
                                                   
                                                      L
                                                      1
                                                      B
                                                   
                                                   )
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   node
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         B
                                                      
                                                      )
                                                   
                                                   ,
                                                   
                                                      R
                                                      q
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         1
                                                         B
                                                      
                                                      )
                                                   
                                                   ≤
                                                   
                                                      R
                                                      q
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         B
                                                      
                                                      )
                                                   
                                                   ,
                                                   
                                                      R
                                                      
                                                         t
                                                         ¯
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         1
                                                         B
                                                      
                                                      )
                                                   
                                                   ≥
                                                   
                                                      R
                                                      
                                                         t
                                                         ¯
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         B
                                                      
                                                      )
                                                   
                                                   ,
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         1
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                ≥
                                             
                                             
                                                
                                                   
                                                      R
                                                      y
                                                   
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         B
                                                      
                                                      )
                                                   
                                                   ,
                                                   V
                                                   
                                                      (
                                                      
                                                         L
                                                         1
                                                         B
                                                      
                                                      )
                                                   
                                                   ⊆
                                                   V
                                                   
                                                      (
                                                      
                                                         L
                                                         2
                                                         B
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Similar to the forward label domination criterion, the capacity, time and energy resources are compared. However, instead of using the current time at the label, the time with recharging is used. The proof of this criterion follows the same rules as for the forward label case.

By combining forward and backward labeling, the overall number of labels created is expected to be smaller than for the single directional cases. A bounded version of this method is known to improve the runtime of ESPPRC for VRP’s as shown by Righini and Salani (2006).

Forward and backward labels are retrieved and extended in turn, using the same extension procedures and dominance checks as described before. A resource bound was used as suggested by Righini and Salani (2006). For the ESPPTWRS the time resource is utilized. The labels are extended using priority queues, which are sorted by the time resource – ascending for the forward labels and descending for the backward labels. As soon as the time resource of the next element in the queues have met, the extension can be stopped and a splicing (joining) procedure is called. This is used to combine all remaining non-dominated labels to obtain a set of feasible ESPPRC paths.

To accelerate the search, the pricing problem is solved heuristically as long as columns with negative costs can be generated. This is achieved by iteratively searching on a reduced graph Gl
                         with increasing complexity, as used by Irnich and Villeneuve (2006). In step l, the reduced graph Gl
                         is build by connecting each customer node to its 
                           
                              (
                              2
                              l
                              −
                              1
                              )
                           
                         nearest neighbours and the pricing problem is solved in Gl
                        . The algorithm let l run from 1 to 6 but aborts the search as soon a path with negative reduced cost has been found (i.e. skipping the more complex graphs if possible).

In order to be able to solve benchmark instances of realistic sizes, an heuristic solver has been developed based on the Adaptive Large Neighbourhood Search (ALNS) described in Ropke and Pisinger (2006) . The ALNS is combined with a local search procedure for intensification, as well as a labeling procedure to optimize the position of recharging stations within the routes at certain points during search. First the data structures for representing, evaluating and improving solutions are described. Then the local search and labeling procedures are presented. Finally the ALNS including the used destroy and repair operators will be discussed.

The evaluation of solutions in this approach is based on the work of Vidal et al. (2013b), where a sequence-based evaluation approach is introduced. It exploits the fact that solutions resulting from a bounded number of edge exchanges and node relocations performed on a solution can also be achieved using a recombination of a bounded number of sequences of visits of the same solution (see Kindervater, Savelsbergh, Aarts, & Lenstra, 1997; Vidal et al., 2013b).

For two sequences of nodes 
                           
                              
                                 σ
                                 1
                              
                              =
                              
                                 {
                                 u
                                 ,
                                 …
                                 ,
                                 v
                                 }
                              
                           
                         and 
                           
                              
                                 σ
                                 2
                              
                              =
                              
                                 {
                                 
                                    u
                                    ′
                                 
                                 ,
                                 …
                                 ,
                                 
                                    v
                                    ′
                                 
                                 }
                              
                           
                         a concatenation results in a new sequence 
                           
                              
                                 σ
                                 ′
                              
                              =
                              
                                 σ
                                 1
                              
                              ⊕
                              
                                 σ
                                 2
                              
                              ,
                           
                         where the data of σ
                        1 and σ
                        2 has been combined to reflect the data needed to evaluate 
                           
                              
                                 σ
                                 ′
                              
                              =
                              
                                 {
                                 u
                                 ,
                                 …
                                 ,
                                 v
                                 ,
                                 
                                    u
                                    ′
                                 
                                 ,
                                 …
                                 ,
                                 
                                    v
                                    ′
                                 
                                 }
                              
                           
                        . The effectiveness of this approach depends substantially on efficient concatenation operator. However, as shown in Vidal et al. (2013b), there exists a large number of objective values and constraints that can be evaluated in O(1).


                        Fig. 1
                         shows an example of a move evaluation by concatenation of preprocessed sequences. Starting with two routes, as shown at the top, the changed state (at the bottom) can be evaluated using three concatenation operations.

In the following, we will present a new constance-ctime concatenation operator for evaluating routes in of the E-VRPTW. For the E-FSMFTW we restrict these operations to preprocessed sequences using the same vehicle type. When sequences of different vehicle types are combined, one part has to be recalculated, which can be done in time linear to the number of nodes.

According to the categorization introduced by Vidal et al. (2013a), the E-FSMFTW consists of several EVAL attributes, i.e., capacity, distance, and state of charge, as well as a single ASSIGN attribute: the vehicle type. For the concatenation of the capacity and distance attributes – and the time attribute to some extent, – the definitions also presented in Vidal et al. (2013b) are used. The general battery charge concatenation is based on the work of Schneider et al. (2014) for the E-VRPTW, but was adapted here for the sequence-based evaluation approach. To simplify the equations, the vehicle type k is omitted in the following description of the concatenation operators.

Both, capacity Q(σ) and distance Dist(σ) can be concatenated by constant operations:

                                 
                                    (4.1)
                                    
                                       
                                          
                                             
                                                
                                                   Q
                                                   (
                                                   
                                                      σ
                                                      1
                                                   
                                                   ⊕
                                                   
                                                      σ
                                                      2
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   Q
                                                   
                                                      (
                                                      
                                                         σ
                                                         1
                                                      
                                                      )
                                                   
                                                   +
                                                   Q
                                                   
                                                      (
                                                      
                                                         σ
                                                         2
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (4.2)
                                    
                                       
                                          
                                             
                                                
                                                   D
                                                   i
                                                   s
                                                   t
                                                   (
                                                   
                                                      σ
                                                      1
                                                   
                                                   ⊕
                                                   
                                                      σ
                                                      2
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   D
                                                   i
                                                   s
                                                   t
                                                   
                                                      (
                                                      
                                                         σ
                                                         1
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      d
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                   +
                                                   D
                                                   i
                                                   s
                                                   t
                                                   
                                                      (
                                                      
                                                         σ
                                                         2
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where i is the last node of σ
                              1 and j first node of σ
                              2 The load capacity of a concatenation is simply the sum of both capacities. The distance of a concatenation is the sum of the individual distances plus the distance from the last node of the first sequence to first node of the second sequence.

In order to compute the information concerning the state of charge, four values for each sequence are required. First, a boolean value f(σ) indicating whether a sequence contains at least one recharging station. Second, the energy required to reach the first recharging station in the sequence is stored in 
                                 
                                    
                                       Y
                                       ←
                                    
                                    
                                       (
                                       σ
                                       )
                                    
                                 
                              . Third, 
                                 
                                    
                                       Y
                                       →
                                    
                                    
                                       (
                                       σ
                                       )
                                    
                                 
                               stores the energy needed to get from the last recharging station to the last node in the sequence. In sequences with no recharging station both values are set to the total energy needed to travel through the sequence. The final value EY(σ) stores the overall violation of charge in a sequence, i.e., how much extra energy would be additionally needed to satisfy the constraint.

                                 
                                    (4.3)
                                    
                                       
                                          
                                             
                                                
                                                   f
                                                   (
                                                   
                                                      σ
                                                      1
                                                   
                                                   ⊕
                                                   
                                                      σ
                                                      2
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   f
                                                   
                                                      (
                                                      
                                                         σ
                                                         1
                                                      
                                                      )
                                                   
                                                   ∨
                                                   f
                                                   
                                                      (
                                                      
                                                         σ
                                                         2
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (4.4)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Y
                                                      ←
                                                   
                                                   
                                                      (
                                                      
                                                         σ
                                                         1
                                                      
                                                      ⊕
                                                      
                                                         σ
                                                         2
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     Y
                                                                     ←
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        σ
                                                                        1
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                  if
                                                                  
                                                                  f
                                                                  (
                                                                  
                                                                     σ
                                                                     1
                                                                  
                                                                  )
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     Y
                                                                     ←
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        σ
                                                                        1
                                                                     
                                                                     )
                                                                  
                                                                  +
                                                                  r
                                                                  ·
                                                                  
                                                                     d
                                                                     
                                                                        
                                                                           σ
                                                                           1
                                                                        
                                                                        
                                                                           σ
                                                                           2
                                                                        
                                                                     
                                                                  
                                                                  +
                                                                  
                                                                     Y
                                                                     ←
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        σ
                                                                        2
                                                                     
                                                                     )
                                                                  
                                                                  −
                                                                  
                                                                     Δ
                                                                     Y
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                  otherwise
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (4.5)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Y
                                                      →
                                                   
                                                   
                                                      (
                                                      
                                                         σ
                                                         1
                                                      
                                                      ⊕
                                                      
                                                         σ
                                                         2
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     Y
                                                                     →
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        σ
                                                                        2
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                  if
                                                                  
                                                                  f
                                                                  (
                                                                  
                                                                     σ
                                                                     2
                                                                  
                                                                  )
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     Y
                                                                     →
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        σ
                                                                        1
                                                                     
                                                                     )
                                                                  
                                                                  +
                                                                  r
                                                                  ·
                                                                  
                                                                     d
                                                                     
                                                                        
                                                                           σ
                                                                           1
                                                                        
                                                                        
                                                                           σ
                                                                           2
                                                                        
                                                                     
                                                                  
                                                                  +
                                                                  
                                                                     Y
                                                                     →
                                                                  
                                                                  
                                                                     (
                                                                     
                                                                        σ
                                                                        2
                                                                     
                                                                     )
                                                                  
                                                                  −
                                                                  
                                                                     Δ
                                                                     Y
                                                                  
                                                               
                                                            
                                                            
                                                               
                                                                  
                                                                  otherwise
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (4.6)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      E
                                                      Y
                                                   
                                                   (
                                                   
                                                      σ
                                                      1
                                                   
                                                   ⊕
                                                   
                                                      σ
                                                      2
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      E
                                                      Y
                                                   
                                                   
                                                      (
                                                      
                                                         σ
                                                         1
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      E
                                                      Y
                                                   
                                                   
                                                      (
                                                      
                                                         σ
                                                         2
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      Δ
                                                      Y
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where 
                                 
                                    
                                       Δ
                                       Y
                                    
                                    =
                                    m
                                    a
                                    x
                                    
                                       {
                                       
                                          Y
                                          →
                                       
                                       
                                          (
                                          
                                             σ
                                             1
                                          
                                          )
                                       
                                       +
                                       r
                                       ·
                                       
                                          d
                                          
                                             
                                                σ
                                                1
                                             
                                             
                                                σ
                                                2
                                             
                                          
                                       
                                       +
                                       
                                          Y
                                          ←
                                       
                                       
                                          (
                                          
                                             σ
                                             2
                                          
                                          )
                                       
                                       −
                                       Y
                                       ,
                                       0
                                       }
                                    
                                 
                              . For simplicity, the index of the vehicle type for the energy consumption r is omitted in these equations.

For the concatenation process, first the additional violation with regards to energy consumption – which is obtained when combining two sequences – is calculated. This value, denoted as ΔY
                              , is obtained using the information of the amount of charge needed from the last charging station of the first sequence to the first charging station of the second sequence. If such an additional violation exists (ΔY
                               > 0), the amount is added to the total violation of the new sequence; see (4.6). To avoid counting violations multiple times throughout concatenations, the value ΔY
                               is subtracted in Eqs. (4.4) and (4.5) in the cases where the first respectively second sequence does not contain a recharging station. This also implies that neither 
                                 
                                    
                                       Y
                                       ←
                                    
                                    
                                       (
                                       σ
                                       )
                                    
                                 
                               nor 
                                 
                                    
                                       Y
                                       →
                                    
                                    
                                       (
                                       σ
                                       )
                                    
                                 
                               will ever exceed the maximum battery charge.

An effective way to relax the time window constraint and efficiently calculate the time window violation was presented by Nagata, Bräysy, and Dullaert (2010) and was enhanced by Schneider, Sand, and Stenger (2013) in the context of VRPTW. A time window penalty (TW) counting the cumulative time needed to travel back in time in order to satisfy the time window constraints is introduced. By ’repairing’ the time using this time window penalty, violations in one location do not propagate to later locations. The concept of slack variables presented by Kindervater et al. (1997) to evaluate moves efficiently in constant time is used.

Proper concatenation operators for this approach have been presented in Vidal et al. (2013b). In addition to the duration Dur(σ) and the amount of time window violation TW(σ), the earliest E(σ) and latest departure L(σ) from the first node are stored.

                                 
                                    (4.7)
                                    
                                       
                                          
                                             
                                                
                                                   D
                                                   u
                                                   r
                                                   (
                                                   
                                                      σ
                                                      1
                                                   
                                                   ⊕
                                                   
                                                      σ
                                                      2
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   D
                                                   u
                                                   r
                                                   
                                                      (
                                                      
                                                         σ
                                                         1
                                                      
                                                      )
                                                   
                                                   +
                                                   D
                                                   u
                                                   r
                                                   
                                                      (
                                                      
                                                         σ
                                                         2
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      t
                                                      
                                                         
                                                            σ
                                                            1
                                                         
                                                         
                                                            σ
                                                            2
                                                         
                                                      
                                                   
                                                   +
                                                   
                                                      Δ
                                                      
                                                         W
                                                         T
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (4.8)
                                    
                                       
                                          
                                             
                                                
                                                   T
                                                   W
                                                   (
                                                   
                                                      σ
                                                      1
                                                   
                                                   ⊕
                                                   
                                                      σ
                                                      2
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   T
                                                   W
                                                   
                                                      (
                                                      
                                                         σ
                                                         1
                                                      
                                                      )
                                                   
                                                   +
                                                   T
                                                   W
                                                   
                                                      (
                                                      
                                                         σ
                                                         2
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      Δ
                                                      
                                                         T
                                                         W
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (4.9)
                                    
                                       
                                          
                                             
                                                
                                                   E
                                                   (
                                                   
                                                      σ
                                                      1
                                                   
                                                   ⊕
                                                   
                                                      σ
                                                      2
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   m
                                                   a
                                                   x
                                                   
                                                      {
                                                      E
                                                      
                                                         (
                                                         
                                                            σ
                                                            2
                                                         
                                                         )
                                                      
                                                      −
                                                      Δ
                                                      ,
                                                      E
                                                      
                                                         (
                                                         
                                                            σ
                                                            1
                                                         
                                                         )
                                                      
                                                      }
                                                   
                                                   −
                                                   
                                                      Δ
                                                      
                                                         W
                                                         T
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (4.10)
                                    
                                       
                                          
                                             
                                                
                                                   L
                                                   (
                                                   
                                                      σ
                                                      1
                                                   
                                                   ⊕
                                                   
                                                      σ
                                                      2
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   =
                                                   m
                                                   i
                                                   n
                                                   
                                                      {
                                                      L
                                                      
                                                         (
                                                         
                                                            σ
                                                            2
                                                         
                                                         )
                                                      
                                                      −
                                                      Δ
                                                      ,
                                                      L
                                                      
                                                         (
                                                         
                                                            σ
                                                            1
                                                         
                                                         )
                                                      
                                                      }
                                                   
                                                   +
                                                   
                                                      Δ
                                                      
                                                         T
                                                         W
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where 
                                 
                                    Δ
                                    =
                                    D
                                    u
                                    r
                                    
                                       (
                                       
                                          σ
                                          1
                                       
                                       )
                                    
                                    −
                                    T
                                    W
                                    
                                       (
                                       
                                          σ
                                          1
                                       
                                       )
                                    
                                    +
                                    
                                       t
                                       
                                          
                                             σ
                                             1
                                          
                                          
                                             σ
                                             2
                                          
                                       
                                    
                                    ,
                                 
                              
                              
                                 
                                    
                                       Δ
                                       
                                          W
                                          T
                                       
                                    
                                    =
                                    m
                                    a
                                    x
                                    
                                       {
                                       E
                                       
                                          (
                                          
                                             σ
                                             2
                                          
                                          )
                                       
                                       −
                                       Δ
                                       −
                                       L
                                       
                                          (
                                          
                                             σ
                                             1
                                          
                                          )
                                       
                                       ,
                                       0
                                       }
                                    
                                 
                               and 
                                 
                                    
                                       Δ
                                       
                                          T
                                          W
                                       
                                    
                                    =
                                    m
                                    a
                                    x
                                    
                                       {
                                       E
                                       
                                          (
                                          
                                             σ
                                             1
                                          
                                          )
                                       
                                       +
                                       Δ
                                       −
                                       L
                                       
                                          (
                                          
                                             σ
                                             2
                                          
                                          )
                                       
                                       ,
                                       0
                                       }
                                    
                                 
                              
                           

For each concatenation of two sequences σ
                              1, σ
                              2 the additional waiting time ΔWT
                               is calculated as well as the additional time window violation ΔTW
                               introduced by the concatenation. These are used to compute the concatenation values of (4.7)–(4.10) properly. We use Δ as an auxiliary variable for the time needed to reach the first node of the second segment σ
                              2.

With this operator definition the time window violations can be calculated, however, the charging times and its effect on the time calculation are still unaccounted for. In Schneider et al. (2014) a slack-based approach was presented. Here the authors utilized the concept of time traveling and showed that for combining two partial routes, 
                                 
                                    {
                                    u
                                    ,
                                    …
                                    ,
                                    v
                                    }
                                 
                               and 
                                 
                                    {
                                    w
                                    ,
                                    …
                                    ,
                                    f
                                    ,
                                    …
                                    ,
                                    h
                                    }
                                    ,
                                 
                               only a part of the second route has to be recalculated, i.e., until the first recharging station f is encountered. After recalculating the additional charge needed at the recharging station as well as the new arrival time, a violation in the time constraint can be checked using this new time values. In case there is no recharging station in the second part, no recalculation is needed.

The complexity of this approach is O(B), where B is the number of nodes prior to the first recharging station in the second partial route. In most situations, B might only be a small number. However, if additional nodes are placed prior to the new partial route, the subsequent re-evaluations are going to have an impact on the performance. In the following, a new concatenation operator is proposed to address this issue.

In this work, the definition for the capacity and distance data concatenation introduced at the beginning of this chapter is used. However, the energy constraint has a direct impact on the time window constraint. Therefore the modified time window and energy calculation of Schneider et al. (2014) are adapted and extended for the sequence-based evaluation approach of Vidal et al. (2013b). As this calculation also depends on the vehicle type (see state of charge operator), this concatenation operator is also limited to sequence data concatenations of the same vehicle type. However, as described in the following, this restriction lead to an efficient constant time operator formulation.

The problem in the calculation of time window violations with recharging is the possibility of increasing recharging time at the first recharging station due to increasing energy demand by adding additional nodes before this visit. However, after the first recharging station has been visited, the precise recharging time required in each following station is known. This is due to the assumption to recharge to full capacity at each recharging station visit and the nature of the sequence-based evaluation, where a sequence can only be added before or after another sequence.

To solve this problem, the calculation of the final amount recharged and its effect on the remaining sequence is delayed by splitting the sequence into three sub-sequences right before and after the first recharging station encountered. That is, for 
                              
                                 σ
                                 =
                                 {
                                 u
                                 ,
                                 …
                                 ,
                                 v
                                 ,
                                 f
                                 ,
                                 
                                    v
                                    ′
                                 
                                 ,
                                 …
                                 ,
                                 w
                                 }
                                 ,
                              
                            let 
                              
                                 
                                    σ
                                    ←
                                 
                                 =
                                 
                                    {
                                    u
                                    ,
                                    …
                                    ,
                                    v
                                    }
                                 
                                 ,
                              
                           
                           
                              
                                 
                                    
                                       σ
                                    
                                    
                                       R
                                       C
                                    
                                 
                                 =
                                 
                                    {
                                    f
                                    }
                                 
                                 ,
                              
                           
                           
                              
                                 
                                    σ
                                    →
                                 
                                 =
                                 
                                    {
                                    
                                       v
                                       ′
                                    
                                    ,
                                    …
                                    ,
                                    w
                                    }
                                 
                              
                            , where f ∈ F′ is the first recharging station in σ. If 
                              
                                 σ
                                 =
                                 {
                                 u
                                 ,
                                 …
                                 ,
                                 w
                                 }
                              
                            does not have any recharging stations, then let 
                              
                                 
                                    σ
                                    ←
                                 
                                 =
                                 
                                    {
                                    u
                                    ,
                                    …
                                    ,
                                    w
                                    }
                                 
                              
                            and 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       R
                                       C
                                    
                                 
                                 =
                                 
                                    σ
                                    →
                                 
                                 =
                                 
                                    {
                                    }
                                 
                              
                           . To get the evaluation data for the full sequence, constant concatenation operations are performed on the three sub-sequences, i.e., 
                              
                                 σ
                                 =
                                 
                                    σ
                                    ←
                                 
                                 ⊕
                                 
                                    
                                       σ
                                    
                                    
                                       R
                                       C
                                    
                                 
                                 ⊕
                                 
                                    σ
                                    →
                                 
                              
                           .

The concatenation operator for two sequences σ
                           1 and σ
                           2 is defined as a set of concatenation operations on the sub-sequences 
                              
                                 {
                                 
                                    
                                       σ
                                       1
                                    
                                    ←
                                 
                                 ,
                                 
                                    σ
                                    1
                                    
                                       R
                                       C
                                    
                                 
                                 ,
                                 
                                    
                                       σ
                                       1
                                    
                                    →
                                 
                                 }
                              
                            and 
                              
                                 {
                                 
                                    
                                       σ
                                       2
                                    
                                    ←
                                 
                                 ,
                                 
                                    σ
                                    2
                                    
                                       R
                                       C
                                    
                                 
                                 ,
                                 
                                    
                                       σ
                                       2
                                    
                                    →
                                 
                                 }
                              
                           . Depending on whether recharging stations exists on the sequences, there exists four cases:

                              
                                 •
                                 
                                    No recharging station in both sequences. Both sequences can be linked in a single concatenation operation 
                                       
                                          
                                             σ
                                             ′
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   σ
                                                   1
                                                
                                                ←
                                             
                                             ⊕
                                             
                                                
                                                   σ
                                                   2
                                                
                                                ←
                                             
                                             ,
                                             
                                                {
                                                }
                                             
                                             ,
                                             
                                                {
                                                }
                                             
                                             }
                                          
                                          .
                                       
                                    
                                 


                                    No recharging station in σ
                                    1, but one in σ
                                    2. In this case, the additional distance and time travelled in σ
                                    1 is considered and the changes when combining this information with the first part of σ
                                    2 is calculated, i.e., 
                                       
                                          
                                             σ
                                             ′
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   σ
                                                   1
                                                
                                                ←
                                             
                                             ⊕
                                             
                                                
                                                   σ
                                                   2
                                                
                                                ←
                                             
                                             ,
                                             
                                                σ
                                                2
                                                
                                                   R
                                                   C
                                                
                                             
                                             ,
                                             
                                                
                                                   σ
                                                   2
                                                
                                                →
                                             
                                             }
                                          
                                          .
                                       
                                    
                                 


                                    A recharging station in σ
                                    1 
                                    but not in σ
                                    2. Although the recharging time of the first recharging station in σ
                                    1 will not change, the information of the second part 
                                       
                                          σ
                                          →
                                       
                                     has to be updated to account for the reduced energy capacity available after traveling the additional distance of σ
                                    2. The concatenation of both sequences is therefore 
                                       
                                          
                                             σ
                                             ′
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   σ
                                                   1
                                                
                                                ←
                                             
                                             ,
                                             
                                                σ
                                                1
                                                
                                                   R
                                                   C
                                                
                                             
                                             ,
                                             
                                                
                                                   σ
                                                   1
                                                
                                                →
                                             
                                             ⊕
                                             
                                                
                                                   σ
                                                   2
                                                
                                                ←
                                             
                                             }
                                          
                                          .
                                       
                                    
                                 


                                    A recharging station in both sequences. If both sequences contain recharging stations, the changes in σ
                                    2 need to be evaluated using two concatenations: First the changes in distance and time for σ
                                    2 is calculated by concatenating 
                                       
                                          
                                             σ
                                             1
                                          
                                          →
                                       
                                     with 
                                       
                                          
                                             σ
                                             2
                                          
                                          ←
                                       
                                    . With the final distance and time bounds stored, the actual recharging time is calculated by concatenating 
                                       
                                          
                                             
                                                σ
                                                1
                                             
                                             →
                                          
                                          ⊕
                                          
                                             
                                                σ
                                                2
                                             
                                             ←
                                          
                                       
                                     with 
                                       
                                          
                                             σ
                                             2
                                          
                                          →
                                       
                                    . This newly acquired information is also the second part of the new sequence, i.e., 
                                       
                                          
                                             σ
                                             ′
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   σ
                                                   1
                                                
                                                ←
                                             
                                             ,
                                             
                                                σ
                                                1
                                                
                                                   R
                                                   C
                                                
                                             
                                             ,
                                             
                                                
                                                   σ
                                                   1
                                                
                                                →
                                             
                                             ⊕
                                             
                                                
                                                   σ
                                                   2
                                                
                                                ←
                                             
                                             ⊕
                                             
                                                σ
                                                2
                                                
                                                   R
                                                   C
                                                
                                             
                                             ⊕
                                             
                                                
                                                   σ
                                                   2
                                                
                                                →
                                             
                                             }
                                          
                                       
                                    .

In summary, the concatenation operations for time windows with recharging are as follows:

                              
                                 (4.11)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   σ
                                                   1
                                                
                                                ⊕
                                                
                                                   σ
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                =
                                                
                                                   {
                                                   
                                                      
                                                         
                                                            
                                                               {
                                                               
                                                                  
                                                                     σ
                                                                     1
                                                                  
                                                                  ←
                                                               
                                                               ⊕
                                                               
                                                                  
                                                                     σ
                                                                     2
                                                                  
                                                                  ←
                                                               
                                                               ,
                                                               
                                                                  {
                                                                  }
                                                               
                                                               ,
                                                               
                                                                  {
                                                                  }
                                                               
                                                               }
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               if
                                                               
                                                               
                                                                  σ
                                                                  1
                                                                  
                                                                     R
                                                                     C
                                                                  
                                                               
                                                               =
                                                               
                                                                  {
                                                                  }
                                                               
                                                               ,
                                                               
                                                                  σ
                                                                  2
                                                                  
                                                                     R
                                                                     C
                                                                  
                                                               
                                                               =
                                                               
                                                                  {
                                                                  }
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               {
                                                               
                                                                  
                                                                     σ
                                                                     1
                                                                  
                                                                  ←
                                                               
                                                               ⊕
                                                               
                                                                  
                                                                     σ
                                                                     2
                                                                  
                                                                  ←
                                                               
                                                               ,
                                                               
                                                                  
                                                                     σ
                                                                     2
                                                                  
                                                                  →
                                                               
                                                               }
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               if
                                                               
                                                               
                                                                  σ
                                                                  1
                                                                  
                                                                     R
                                                                     C
                                                                  
                                                               
                                                               =
                                                               
                                                                  {
                                                                  }
                                                               
                                                               ,
                                                               
                                                                  σ
                                                                  2
                                                                  
                                                                     R
                                                                     C
                                                                  
                                                               
                                                               ≠
                                                               
                                                                  {
                                                                  }
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               {
                                                               
                                                                  
                                                                     σ
                                                                     1
                                                                  
                                                                  ←
                                                               
                                                               ,
                                                               
                                                                  
                                                                     σ
                                                                     1
                                                                  
                                                                  →
                                                               
                                                               ⊕
                                                               
                                                                  
                                                                     σ
                                                                     2
                                                                  
                                                                  ←
                                                               
                                                               }
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               if
                                                               
                                                               
                                                                  σ
                                                                  1
                                                                  
                                                                     R
                                                                     C
                                                                  
                                                               
                                                               ≠
                                                               
                                                                  {
                                                                  }
                                                               
                                                               ,
                                                               
                                                                  σ
                                                                  2
                                                                  
                                                                     R
                                                                     C
                                                                  
                                                               
                                                               =
                                                               
                                                                  {
                                                                  }
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               {
                                                               
                                                                  
                                                                     σ
                                                                     1
                                                                  
                                                                  ←
                                                               
                                                               ,
                                                               
                                                                  
                                                                     σ
                                                                     1
                                                                  
                                                                  →
                                                               
                                                               ⊕
                                                               
                                                                  
                                                                     σ
                                                                     2
                                                                  
                                                                  ←
                                                               
                                                               ⊕
                                                               
                                                                  
                                                                     σ
                                                                     2
                                                                  
                                                                  →
                                                               
                                                               }
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               if
                                                               
                                                               
                                                                  σ
                                                                  1
                                                                  
                                                                     R
                                                                     C
                                                                  
                                                               
                                                               ≠
                                                               
                                                                  {
                                                                  }
                                                               
                                                               ,
                                                               
                                                                  σ
                                                                  2
                                                                  
                                                                     R
                                                                     C
                                                                  
                                                               
                                                               ≠
                                                               
                                                                  {
                                                                  }
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           Eq. (4.11) shows that the constraint data of a combination of two sequences can be build using at most three concatenation operations. The actual values is calculated by combining the data from 
                              
                                 
                                    σ
                                    ←
                                 
                                 ,
                              
                            
                           σRC
                            and 
                              
                                 
                                    σ
                                    →
                                 
                                 ,
                              
                            i.e., perform two additional concatenation operation 
                              
                                 
                                    σ
                                    ←
                                 
                                 ⊕
                                 
                                    σ
                                    
                                       R
                                       C
                                    
                                 
                                 ⊕
                                 
                                    σ
                                    →
                                 
                              
                           . This leads to a total of three constant time operations per concatenation. By storing additional information, inter-route moves as described in Schneider et al. (2014) can be evaluated in constant time – regardless of whether recharging stations are present or not – without the need to recalculate a subsequence. Furthermore, this approach is applicable to any move resulting from a bounded number of edge changes.

For the E-FSMFTW using differentvehicle types, only preprocessed sequences of the one route can be used. The new part has to be recalculated using this vehicle type before it can be concatenated. This recalculation depends on the length of the sequence added, and is thus no longer constant. We therefore restriced our neighbourhood creation in our local search to consider only moves between routes of the same vehicle type, and use additional, smaller neighbourhoods for combining different vehicle types.

The feasibility of a route can be checked using the data calculated for the corresponding sequences:

                              
                                 (4.12)
                                 
                                    
                                       
                                          
                                             
                                                isFeasible
                                                
                                                   (
                                                   
                                                      σ
                                                      k
                                                   
                                                   )
                                                
                                                =
                                                Q
                                                
                                                   (
                                                   
                                                      σ
                                                      k
                                                   
                                                   )
                                                
                                                ≤
                                                
                                                   Q
                                                   k
                                                
                                                ∧
                                                
                                                   E
                                                   Y
                                                
                                                
                                                   (
                                                   
                                                      σ
                                                      k
                                                   
                                                   )
                                                
                                                ≤
                                                0
                                                ∧
                                                
                                                   T
                                                   W
                                                
                                                
                                                   (
                                                   
                                                      σ
                                                      k
                                                   
                                                   )
                                                
                                                ≤
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                           where k ∈ V is the vehicle type used to calculate the penalties. We note that the calculation of Q(σ) is independent of the vehicle type, but the charge and time window penalty are not. Although identical travel times for each vehicle are assumed, the time window penalty calculation is influenced by the battery charge constraint, which itself depends on the vehicle type.

The heuristic solver proposed in this paper works with infeasible solutions and uses penalty values for violations of the constraints (thus relaxing the problem) in the objective function:

                                 
                                    (4.13)
                                    
                                       
                                          
                                             
                                                
                                                   obj
                                                   
                                                      (
                                                      
                                                         σ
                                                         k
                                                      
                                                      )
                                                   
                                                   
                                                   =
                                                   
                                                   Dist
                                                   
                                                      (
                                                      
                                                         σ
                                                         k
                                                      
                                                      )
                                                   
                                                   
                                                   +
                                                   
                                                   
                                                      ρ
                                                      Q
                                                   
                                                   
                                                      (
                                                      Q
                                                      
                                                         (
                                                         
                                                            σ
                                                            k
                                                         
                                                         )
                                                      
                                                      −
                                                      
                                                         Q
                                                         k
                                                      
                                                      )
                                                   
                                                   
                                                   +
                                                   
                                                   
                                                      ρ
                                                      
                                                         E
                                                         Y
                                                      
                                                   
                                                   
                                                      E
                                                      Y
                                                   
                                                   
                                                      (
                                                      
                                                         σ
                                                         k
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      ρ
                                                      
                                                         T
                                                         W
                                                      
                                                   
                                                   
                                                      T
                                                      W
                                                   
                                                   
                                                      (
                                                      
                                                         σ
                                                         k
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              Each constraint has a corresponding penalty weight ρ which is multiplied with the amount of violation for each of the three relaxed constraints and added to the total distance travelled. We use ρQ
                               to weight load capacity violations, ρEY
                               for energy capacity violations and ρTW
                               for time window violations.

For the construction of an initial solution and later also in the repair step of each iteration of the ALNS, partial solutions have to be extended, i.e., solutions with at least one customer not being assigned to any route, in order to create a complete solution. This is done using different insertion based approaches, i.e., inserting nodes into existing or newly created routes until all nodes have been assigned. To diversify the search, the concept of a Restricted Candidate List (RCL) introduced by Hart and Shogan (1987) is employed to select the next node and insertion position in a probabilistic way. Each position in the RCL is selected based on its contribution to the sum of all insertion costs in the RCL.

As recharging stations do not have to be part of a route and can be inserted multiple times, a special procedure is implemented to insert recharging stations during the insertion and construction phase. Besides trying to insert a node v at position i of a route r, three additional attempts are performed, where a recharging station f is inserted right before v, a station g right after v, or both. This means a total of four sequences are tested to be inserted for each node v: {v}, {f, v}, {v, g} and {f, v, g}, where f and g can be the same station. To determine f, g ∈ F′, the recharging station which is reachable with the available energy capacity and which has the smallest additional detour is selected. This approach is myopic in the sense that just a subset of recharging stations is considered, and that only the direct effect on the value of the route (and not the effect on future inserts). Furthermore, all previously inserted recharging stations are kept unchanged.

Similar to the work of Paraskevopoulos et al. (2008) and Repoussis and Tarantilis (2010), an iterative route construction heuristic is implemented. In each iteration, a single route for each vehicle type is created using only unassigned nodes until the capacity constraint is violated. These routes are constructed independently, i.e., nodes can be used in multiple routes, and the route with the best lowest cost is added to the current partial solution. We use the Average Cost per Unit Transfered (ACUT
                           k
                        ) value defined in Paraskevopoulos et al. (2008) to measure the cost of a tour. This value represents the relative costs of serving the demand of a route σ of vehicle type k (see Eq. (4.14)).

                           
                              (4.14)
                              
                                 
                                    
                                       
                                          
                                             
                                                ACUT
                                                k
                                             
                                             
                                                (
                                                σ
                                                )
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                (
                                                
                                                   f
                                                   k
                                                
                                                +
                                                D
                                                i
                                                s
                                                t
                                                
                                                   (
                                                   σ
                                                   )
                                                
                                                )
                                             
                                             /
                                             
                                                (
                                                Q
                                                
                                                   (
                                                   σ
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        The remaining routes are dismissed and the next iteration is performed until no further unassigned nodes are available.

The approach described in this paper combines the general search methodology of ALNS with a local search method to intensify the search in each iteration. A mix of well-researched neighbourhoods and specifically tailored problem specific neighbourhoods is used. First the moves defining these neighbourhoods are presented followed by a description of the local search method applied.


                              Fig. 2a. This intra-route move (i.e., operation on a single route) optimizes a route by inverting a subsequence. As shown in the figure, this move involves the deletion and reinsertion of two edges as well as the inversion of the directions between the nodes of the selected sequence. To further reduce the neighbourhood size and thus the runtime, only moves including subsequences of size two at maximum are considered.


                              Fig. 2b. The 2-Opt* move removes two edges of two distinct routes of the same vehicle type and reconnects the remaining sequences as shown in the figure. An additional cross is made at the end of the route to ensure that the depots are assigned to the same node after the move is performed. As described in Section 4.1, this restriction is needed to compute the move changes using concatenation efficiently.


                              Fig. 2c. In this move, a single node is shifted (relocated) from one route in between nodes of a different route.


                              Fig. 2d. This moves switches (exchanges) the position of two nodes assigned to different routes.


                              Fig. 2e. In this move, a recharging station is inserted prior to a node vi
                               in order to improve the value of a route due to repairing violations of the battery capacity constraint, or an existing recharging station is removed from the route. This problem specific move is the only one capable to insert and/or remove an optional recharging station in the local search procedure.

All moves described so far only change node assignments or positions but never the vehicle type assignment. The Resize move changes the vehicle assigned without changing the route itself.

This move works like the Relocate move described before, but with an additional procedure performed after relocating a node. If a node v is moved from a route ri
                               to rj
                              , the vehicle type of ri
                               and rj
                               are tried to be changed at the same time in order to benefit from either lower costs from selecting a cheaper vehicle type or reducing the penalty of constraint violations due to the change to a vehicle type with more capacities.

In the implementation of this move, the effect of changing the vehicle type on the evaluation process has to be considered, which requires an additional preprocessing of the subsequences with the new type. In this approach, the preprocessing is delayed until the neighbourhood is used and store the data from this point onwards until the route changes again (which triggers a recalculation on the next use of this neighbourhood).

The embedded local search procedure utilizes a list of different neighbourhoods, which are searched in a cyclic manner (see Di Gaspero, Schaerf, Burke, & De Causmaecker, 2002; Hiermann, Prandtstetter, Rendl, Puchinger, & Raidl, 2015). Each neighbourhood is searched until no further improvement can be found, after which the next neighbourhood in the list is selected and searched. When the end of the list is reached, the search starts again from the first entry in the list. The procedure terminates, if a local optimum is reached in every single neighbourhood. By cycling through the list, it is ensured that a local optimum has been reached in each neighbourhood. Preliminary tests showed that random ordering of the list of neighbourhoods at the beginning of the local search call improves the overall performance.

As improvement strategy, a best of 50-policy is used, where the best of the first 50 moves encountered during a single search iteration is applied. If none of them is an improving move, the search continues until an improving move is found or the neighbourhood has been searched completely. This way the search terminates faster than with a best improvement-policy, but it still provides higher quality solutions than first improvement.

As described in Section 4.3.2, a varying penalty cost is used to guide the search through the infeasible search space. To reach a feasible solution using the existing tools, a similar approach as described in Vidal et al. (2013b) is employed. A feasible solution is tried to be obtained twice by multiplying each penalty costs by 100 and call the local search procedure. If the solution is still not feasible, the penalty costs are further multiplied by ten each and the local search is called again. No further attempts are made to make the solution feasible, i.e. solutions might still be infeasible after applying this repair operator. However, using this approach, feasible regions close to the infeasible solution may be found at low cost.

The heuristic solver described in this paper depends heavily on the embedded local search procedure, which in turn uses a number of neighbourhoods to improve the search. As the number of neighbours is large and computationally expensive, a pruning approach as described in Vidal et al. (2013b) is used to reduce the number of neighbours considered. In this approach, a set of so-called promising arcs is calculated for each customer node. This set is then used to prohibit introducing arcs into the solution that are not in this set. With Eq. (4.15), the so-called customer correlations measure is calculated, which is used for the pruning.

                              
                                 (4.15)
                                 
                                    
                                       
                                          
                                             
                                                γ
                                                (
                                                u
                                                ,
                                                v
                                                )
                                             
                                          
                                          
                                             =
                                          
                                          
                                             
                                                
                                                   d
                                                   
                                                      u
                                                      v
                                                   
                                                
                                                +
                                                
                                                   γ
                                                   
                                                      W
                                                      T
                                                   
                                                
                                                ·
                                                m
                                                a
                                                x
                                                
                                                   (
                                                   
                                                      e
                                                      v
                                                   
                                                   −
                                                   
                                                      s
                                                      u
                                                   
                                                   −
                                                   
                                                      t
                                                      
                                                         u
                                                         v
                                                      
                                                   
                                                   −
                                                   
                                                      l
                                                      u
                                                   
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                +
                                                
                                                
                                                   γ
                                                   
                                                      T
                                                      W
                                                   
                                                
                                                ·
                                                m
                                                a
                                                x
                                                
                                                   (
                                                   
                                                      e
                                                      u
                                                   
                                                   +
                                                   
                                                      s
                                                      u
                                                   
                                                   +
                                                   
                                                      t
                                                      
                                                         u
                                                         v
                                                      
                                                   
                                                   −
                                                   
                                                      l
                                                      v
                                                   
                                                   ,
                                                   0
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

For a customer vi
                            not only the direct distance, but fractions of the waiting (γWT
                           ) and time window violation (γTW
                           ) are considered as well. The final set of promising arcs Γ(u) consists of the |Γ| closest customers v with respect to the correlation measure γ(u, v). The same settings as in Vidal et al. (2013b) are used, setting 
                              
                                 |
                                 Γ
                                 |
                                 =
                                 40
                                 ,
                              
                           
                           
                              
                                 
                                    γ
                                    
                                       W
                                       T
                                    
                                 
                                 =
                                 0.2
                                 ,
                              
                            and 
                              
                                 
                                    γ
                                    
                                       T
                                       W
                                    
                                 
                                 =
                                 1.0
                              
                           .

Recharging stations are handled explicitly in this work, i.e., stations are added directly as entries in the routes. As the construction and insertion heuristics described earlier have a rather narrow view on the positioning of recharging stations in order to keep the runtime low, a post-processing procedure is used to improve the selection and positioning of recharging stations in a route of fixed visiting orders.

The method employed is a labeling algorithm similar to the procedure described in Section 3.1 for the ESPPTWRS. However, several simplifications can be derived and exploiting from the fixed visiting order:

Let r be the route for which the optimal assignment of recharging stations r* has to be found. Furthermore, let 
                           
                              
                                 r
                                 ′
                              
                              =
                              r
                              ∖
                              f
                              ∈
                              F
                           
                         and ui
                         be the ith node of r′. The set of possible nodes to extend to is restricted by r′. Only recharging stations and a next customer (or depot) in r′, i.e., node 
                           
                              
                                 u
                                 
                                    i
                                    +
                                    1
                                 
                              
                              ,
                           
                         can be considered. Additionally, not every recharging station has to be considered, just a subset relevant for a detour between u
                        1 and 
                           
                              u
                              
                                 i
                                 +
                                 1
                              
                           
                        . The visits are restricted to r′, thus the set of already visited (unreachable) nodes is no longer necessary.

To exploit this features, a modified forward labeling procedure with a label 
                           
                              
                                 L
                                 ′
                              
                              =
                              
                                 {
                                 i
                                 ,
                                 
                                    (
                                    
                                       R
                                       c
                                    
                                    ,
                                    
                                       R
                                       t
                                    
                                    ,
                                    
                                       R
                                       y
                                    
                                    )
                                 
                                 ,
                                 prev
                                 ,
                                 f
                                 }
                              
                           
                         is used, where i is the index in r′. The load resource Rq
                         is omitted in the modified label, as the total demand will never increase by adding recharging stations. f stores the recharging station used before arriving in node node ui
                        . Algorithm 1
                         outlines this modified procedure.

For this procedure, only a single recharging station is assumed to be needed between two consecutive nodes. We are aware that this assumption might prohibit the labeling procedure to reach an optimum. However, preliminary experiments with implementations permitting two or three recharging stations between nodes in r′ showed that the additional computation time leads to no improvement in the overall performance.

This simple but effective procedure is performed for each route after construction, reinsertion and local search.

The E-FSMFTW is solved using an Adaptive Large Neighbourhood Search (ALNS) as proposed by Ropke and Pisinger (2006), but extended by an intensification mechanism in form of an embedded Local Search procedure. A general introduction to LNS and its variants and extensions can be found in Pisinger, Ropke, Gendreau, and Potvin (2010). An outline of the approach proposed in this paper is shown in Algorithm 2
                        .

In Shaw, Maher, and Puget (1998), a search procedure for a larger neighbourhood defined by a destroy and repair operators is presented. A neighbour is a solution which is reachable by removing some nodes using the destroy operator, followed by the repair operator.


                        Ropke and Pisinger (2006) extend this by using learning mechanisms to bias a selection of a variety of destroy and repair operators effectively. For each phase (destroy or repair) the corresponding operator i is selected using a roulette wheel based on so-called weights νi
                        . These weights νi
                         are changed to adapt the algorithm based on the performance of the selected operators for the last couple of iterations. This adaption is done using exponential smoothing of the observed scores 
                           
                              
                                 ν
                                 ¯
                              
                              i
                           
                        . Similar to Ropke and Pisinger (2006), the score of an operator is increased in the following cases, if the newly generated solution

                           
                              •
                              is an overall best solution,

has not been accepted before and is better than the current solution,

has not been accepted before and is worse, but was accepted in this iteration.

After a learning period (of ηL
                         iterations) this score 
                           
                              
                                 ν
                                 ¯
                              
                              i
                           
                         is used to update the selection probabilities of operator i using the following equation (cf. Ropke & Pisinger, 2006)

                           
                              (4.16)
                              
                                 
                                    
                                       
                                          
                                             ν
                                             
                                                i
                                                ,
                                                j
                                                +
                                                1
                                             
                                          
                                       
                                       
                                          
                                             =
                                             ϕ
                                             
                                                (
                                                
                                                   
                                                      
                                                         ν
                                                         ¯
                                                      
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                   
                                                   
                                                      a
                                                      i
                                                   
                                                
                                                )
                                             
                                             +
                                             
                                                (
                                                1
                                                −
                                                ϕ
                                                )
                                             
                                             
                                                ν
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        The weight 
                           
                              ν
                              
                                 i
                                 ,
                                 j
                                 +
                                 1
                              
                           
                         of heuristic i in the next period 
                           
                              j
                              +
                              1
                           
                         is calculated using iteration (4.16). The counted score 
                           
                              
                                 ν
                                 ¯
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                         for the last period is divided by the number of times the heuristic has been used ai
                        , which influences the new score for period 
                           
                              j
                              +
                              1
                           
                        . The step size 
                           
                              ϕ
                              =
                              [
                              0
                              ;
                              1
                              ]
                           
                         measures the influence of the new observation compared to the past. If 
                           
                              ϕ
                              =
                              1
                           
                         the score reflects the performance of the previous iteration only.

As described in Section 4.1.3, some constraints are relaxed during search in order to also investigate infeasible regions, while penalizing infeasible solutions. The penalties are managed using an adaptive mechanism as presented in Cordeau, Laporte, and Mercier (2001). However, instead of adapting the penalty weights in each iteration of the embedded local search, these values are controlled within the ALNS iteration. The embedded intensification procedure is therefore used to improve the newly generated solution towards a local optimum for the given penalty settings. As the procedure moves rather slowly towards feasible solutions, the repair approach described in Section 4.3.2 is employed to find these earlier in the search.

During the search two types of best solutions are stored. On the one hand the best feasible solution is stored and on the other hand the best solution with the current penalty setting is remembered as well. Every time the penalty values change, the value of the best (possibly infeasible) solution is adapted as well. This might lead to an objective value for the best solution which is worse than the value for the best feasible solution. In this case the best is replaced by the best feasible solution. The penalty weight is multiplied by wi
                         if the constraint i was violated in the last iteration or divide it by the same value if it was satisfied.

To avoid searching too deep in infeasible regions and to escape possible local optima, a restarting mechanism is used. After a certain number of iterations (ηR
                        ) with no overall improvement the current solution is reset to the best overall solution found so far. In contrast to other restarting mechanisms, only the current solution is changed and no other values (e.g., no change in the penalty values).

Similar to the original ALNS, an SA approach to handle the acceptance of new solutions generated in an iteration was tested. However, preliminary experiments showed that using an ’accept only improvements’ policy yields better results for the given problem. This might be due to the use of adaptive penalties and the restart mechanism, which already contributes to the diversification process sufficiently.

An important aspect of ALNS is the number and functionality of the operators used. In the remainder of this section the applied operators will be presented.

A solution is destroyed by removing at least q nodes from the current solution, where q is a random number between [ζmax, ζmin
                           ].

The RandomRemoval operator simply removes q nodes from the current solution randomly with equal probability.


                           RandomAndRelatedRemoval operator is based on the definition of Shaw et al. (1998) where nodes are iteratively select and removed at random (with equal probability). Following that, a node is selected which is similar using an RCL of five nodes and roulette wheel selection and remove it as well. The similarity of nodes is calculated using the relatedness measure (4.15). The procedure continues until at least q nodes have been removed in total.

A similar operator is the WorstAndRelatedRemoval. Here, however, a node is first selected and removed based on the detour needed to travel in the solution induced by it. This is done using an RCL of the five worst nodes where a roulette wheel is used based on the detour cost. Then up to 
                              
                                 q
                                 −
                                 1
                              
                            additional nodes are removed based on their relatedness to the selected node. The relatedness is again calculated using (4.15).

With the ability to remove whole routes the InefficientRouteAndNeighbourRemoval starts by selecting and removing a route at random using roulette wheel based on the ACUT (4.14). Then neighbouring routes are selected and removed iteratively – starting from the route with the smallest maximum distance between any pair of nodes – until at least q nodes have been removed in total.

The TargetRemoval operator is similar to the target operator used by Dell’Amico et al. (2007) but simplified. Instead of trying different combinations of a target route, a single node is considered, the so-called target node. The node with the highest contribution to the total distance of its assigned tour is selected. Afterwards, routes based on the minimum distance from any node of a route to the target node are selected and removed. Starting from the route with the highest minimum distance, they are destroyed until at least 
                              
                                 q
                                 −
                                 1
                              
                            nodes have been removed.

The repair operators are all based on insertion heuristics with the ability to insert recharging stations as described in Section 4.2.

The first basic SequentialNodeInsertion heuristic implemented is a myopic but fast approach. Nodes are processed in a sequential manner based on the removal order. One after another, the insertion cost of each route and position is calculated first, followed by the selection using a RCL containing the five best options. To handle different vehicle types, the vehicle type assignment is changed if necessary (when a constraint is violated) and add the resulting costs to the insertion costs. This is also done in the other insertion heuristics. When used as a repair operator in the ALNS, the sequential order of the insertion depends on removal order of the nodes .

The second heuristic is a ParallelRegretInsertion approach. Basic parallel greedy insertion heuristics tend to place ’difficult’ nodes late in the process, leaving only a few possibilities. To avoid this behavior, the regret heuristic uses a so-called regret value which represents the expected costs of inserting a node not in this iteration but in a future iteration. Such heuristics have been used by Potvin and Rousseau (1993) for the VRPTW and by Trick (1992) for the Generalized Assignment Problem. The regret value for a node v is obtained as follows. For each route σi
                            in the current partial solution, the position and cost ci
                            of the best insertion (based on the objective value) of v into σi
                            is calculated . Let l ∈ L be the index of the routes where L is sorted based on cl
                           , i.e., l ≤ l′ if 
                              
                                 
                                    c
                                    l
                                 
                                 ≤
                                 
                                    c
                                    
                                       l
                                       ′
                                    
                                 
                              
                           . The regret value is calculated considering the k best insertion costs using following equation:

                              
                                 (4.17)
                                 
                                    
                                       
                                          
                                             
                                                regret
                                                (
                                                v
                                                )
                                             
                                          
                                          
                                             
                                                =
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      2
                                                   
                                                   k
                                                
                                                
                                                   (
                                                   
                                                      c
                                                      
                                                         l
                                                         i
                                                      
                                                   
                                                   −
                                                   
                                                      c
                                                      
                                                         l
                                                         1
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

The SemiParallelConstruction heuristic used to create the initial solution can be easily modified to work as a repair operator too. Instead of creating a full solution from scratch this approach starts with the partial (destroyed) solution and creates new routes without considering existing ones.

A variant, the SemiParallelInsertion procedure, extends the previous approach as also existing routes are considered. Instead of creating only new routes, existing routes are extended by inserting unassigned nodes until the capacity constraint is violated.

In this section we present computational results of the proposed ALNS approach for solving the E-FSMFTW. We use our branch-and-price solver – further refered as BnP – to obtain optimal solutions for smaller instances, and lower bounds for larger instances of our new benchmark.

Our experiments using the BnP procedure were run on a cluster system on single 3.3 Gigahertz cores (Intel Xeon 2643) and a maximum of 7 gigabytes RAM, running on with CentOS (Red Hat Enterprise Linux). The solver uses Cplex 12.6 through the Open Solver Interface (OSI; v0.105.2).

The experiments with the ALNS were run on a single core of a cluster system with an Intel Core2 Quad CPU Q6600 with 2.40 Gigahertz where a memory of 4 gigabytes RAM is shared between 4 cores, operating on the Linux distribution openSuse 12.1 (Asparagus) 64 Bit. The ALNS with embedded local search and labeling is a single-thread implementation in Java 7 and was run using the Java Runtime Environment 1.7, Update 25 (JRE 7u25).

In calibrating the parameters of our ALNS approach, we mostly relied on parameters chosen in the literature. Indeed, in our experience ALNS is a rather robust approach which is not very sensitive w.r.t parameters. After some preliminary experiments on a reduced number of instances we chose the parameter setting as shown in Table 1
                     
                     
                     
                     
                     
                     
                     , if not stated otherwise. Ten test runs were performed and average and best results are reported.

We also tested our approach for the related E-VRPTW with both proposed solver. The BnP was able to prove all results on the small instances reported by Schneider et al. (2014) to be optimal. For the larger instances, six instances were solved to optimality. The results are presented in the appendix. Our heuristic solver was also able to obtain two new best solutions for the larger instances, with an average gap to the best known below one percent (see Goeke & Schneider, 2015).

Our benchmark instances are based on the modified Solomon instances of Schneider et al. (2014) and the description of the vehicle type classes of Liu and Shen (1999). The instances of Schneider et al. (2014) consists of six data sets varying in the distribution of the customers, i.e., whether they are clustered (C), randomly distributed (R) or a combination of both (RC). Furthermore, they are divided in instances with a shorter (1) or a longer (2) scheduling horizon. In Liu and Shen (1999), the vehicle types are defined for each of these instance sets, differing in their acquisition cost. These vehicle types are extended for our problem by energy consumption per km/mile, battery size and recharging rate. The consumption and recharging rate is directly taken from the instances of Schneider et al. (2014) and set as the same value for each vehicle type. For the battery size we use the value defined in the E-VRPTW instances as base value and scale it upon the rank of the vehicle types as follows: Given an instance with |V| vehicle types defined by Liu and Shen (1999) and the battery size Y for the E-VRPTW, we set the battery size of vehicle type k for the E-FSMFTW to

                           
                              (5.1)
                              
                                 
                                    
                                       
                                          
                                             
                                                Y
                                                k
                                             
                                             =
                                             
                                                (
                                                1.0
                                                +
                                                (
                                                s
                                                ·
                                                (
                                                k
                                                /
                                                |
                                                V
                                                |
                                                )
                                                −
                                                
                                                   (
                                                   s
                                                   /
                                                   2
                                                   )
                                                
                                                )
                                                ·
                                                Y
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              s
                              =
                              0.1
                              ·
                              |
                              V
                              |
                           
                        . Using this approach we encourage the use of larger vehicles due to their larger battery size which leads to a different fleet composition compared to the non-electrical vehicles used by Liu and Shen (1999). Although a different choice of the recharging and energy consumption factors may result in more realistic scenarios, we note that this could be easily included in our model and algorithms. However, changes in the battery size and other energy related factors have to be weighted against each other to avoid vehicle type dominations.

For the exact approach we solve the smaller sets created by Schneider et al. (2014) using our BnP solver (which uses CoinOR and CPLEX12.6) with the model and modifications described in Section 2. The sizes of these instances are either 5, 10 or 15 customers with 2 to 8 recharging stations. In preliminary experiements we tried to solve these smaller instances with the MIP model also described in Section 2 using branch-and-bound only. However, only 5 customer instances could be solved, but almost none of the instances with 10 and 15 customer within a 12 hours runtime.


                        Table 2 presents the comparison of the proposed ALNS with the BnP for the 15 customer instances. The results for 5 and 10 customer instances can be found in Appendix A. The BnP was able to obtain an optimal solution within the time limit of two hours for all instances. We show the objective value (obj) and the included sum of the acquisition costs (F) for the optimal fleet composition specified in the column mix as well as the runtime in seconds (t[s]). The fleet composition is presented as in Repoussis and Tarantilis (2010), where the vehicle type is referenced using capital letters (starting with the cheapest vehicle type using the letter ’A’ ) and the number of vehicles used shown superscript after the corresponding letter. The objective of the initial solution (i.e., the improved solution after construction using LS and the labeling procedure) is shown in the column init. For the ALNS solutions we present these values for the best solution (obj) as well as the average objective function (
                           
                              
                                 o
                                 b
                                 j
                              
                              ¯
                           
                        ) of all ten runs.

The BnP is able to find the optimal solutions for all of the instances in a matter of seconds in most cases, only for one instance it took several minutes. Our ALNS approach is able to obtain optimal solutions in all cases as well, requiring less than a minute of runtime.

In order to further evaluate the performance of our algorithm, we conduct experiments on the larger benchmark instances (as described earlier in this section). We test four settings of our approach denoted as

                           
                              •
                              
                                 ALNS
                                 2000 as our default settings, with a limit of 2000 iterations,


                                 
                                    
                                       ALNS
                                       1500
                                       800
                                    
                                  using a limit of 1500 iterations or 800 iterations without an improvement,


                                 ALNS
                                 800 with a limit of 800 iterations and,


                                 
                                    
                                       
                                          ALNS
                                          ¯
                                       
                                       1500
                                       800
                                    
                                  where we use the same termination criteria as 
                                    
                                       
                                          ALNS
                                          1500
                                          800
                                       
                                       ,
                                    
                                  but without calling the labeling algorithm described in Section 4.4.
                              


                        Table 3 shows the average deviations from the best solutions (BKS) we have been able to find by the BnP algorithm or in ten runs (
                           
                              
                                 o
                                 b
                                 j
                              
                              ¯
                           
                        ) as well as the average runtime in minutes (t[m]) grouped by instance type (C,R,RC).

As expected the best average performance is achieved using a setting with a higher iteration limit (ALNS
                        2000) which itself results in higher runtime ( ∼25 minutes on average). However, terminating earlier (
                           
                              ALNS
                              1500
                              800
                           
                        ) reduces the runtime by around one third while keeping the average solution quality on a high level. Although almost 2% worse than the best known solutions the fast variant (ALNS
                        800) is around 60% faster than the default variant, on average.

When comparing the fast approach 
                           
                              ALNS
                              1500
                              800
                           
                         including the labeling procedure with the version without labeling, one can observe that, on average, the labeling procedure increases solution quality while slightly reducing the overall runtime. This is due to the termination criterion of 800 iterations without improvement. Furthermore, a detailed analysis of our test runs shows, that the contribution of the labeling procedure to the overall runtime is only around 1%.

For future reference, we included the results for each of the newly proposed instances in the appendix.

In this work we proposed instances for using different types of electric vehicles. To analyze the gain of considering a fleet mix, we conducted experiments where the set of vehicle types is reduced to a single one. Table 4 shows the average objective value over 10 runs grouped by instance type (C,R,RC) for each vehicle type set (A,B,C). The best known solution (BKS), i.e., the best solution found in any run (heuristic or BnP), is shown in the third column. The fourth shows the average objective value for runs using all vehicle types. The following columns uses only a single vehicle type (A,B,C,D,E, or F) and tries to solve the instance with this restriction. In case of the R1 instances, the algorithm couldn’t find a single feasible solution using only the first vehicle type (A) due to customers with demands larger than the vehicle’s transport capacity. In the other cases, where no values are provided, the instances do not have more than three (C1), four (C2, R2, RC1), or five (R1) vehicle types defined.

As we can see in the results, considering the whole mix of vehicles does indeed improve the quality of the solution. In some cases, where good solutions uses only a single type, the algorithm tends to produce slightly inferior results on average. This can be seen in Table 5, where the average fleet mix is presented as defined before. For most instances, the mix does not only contain two, but three and four different vehicles used in the final solution.

To evaluate the impact on the number of recharging stations available in the instances, Table 6 shows three values for the best known solution (BKS) and again for the mix (All) and single vehicle case (A,B,C,D,E, or F): First the number of recharging stations used in total (
                           
                              #
                              r
                              s
                           
                        ), followed by the number of distinct recharging stations visited ({rs}) and the average number of visits per route (
                           
                              
                                 r
                                 s
                              
                              ¯
                           
                        ). In terms of number of visits to recharging stations per vehicle, we see that at most two are visited on average. Even when increasing the transport capacity (by using larger vehicles), the number does not increase over two as well. These results are in line with the ones in Desaulniers et al. (2014), where the impact of allowing only a single or multiple visits to recharging stations per route was presented. Allowing multiple visits does lead to a lower objective value for these instances, as was expected. On average, although, for our instances we see that the best known solutions tend to have less than one stop per route scheduled. This differs from the E-VRPTW results, where more than one station was scheduled per route on average. We deduce that this is a feature of using a mix of vehicles, where larger vehicles with more battery capacity are used, which in turn need fewer (or no) recharging operations during their route.

The instances we propose consists – like the original instances for the E-VRPTW – of 21 recharging stations per instance. As we can deduce from the results, not even half of the recharging stations are needed in the solutions obtained (on average, less than a third are needed). Most distinct recharging stations are used in the instances with random spatial distribution and short time windows (R1). This was to be expected, as the tight time windows forces vehicles to travel larger distances between visits, thus covering a larger area. The fewest are visited on the set of instances with larger time windows and a combination of clustered and spatial distribution (RC2).

We also conducted the same set of experiments on the same instances, but without the energy constraint. The problem is therefore relaxed to the FSMF problem with a minimal distance as objective. Table 7 shows the comparison of the objective value when allowing a mix or restricting the fleet to a single type as in Table 4. The results are very similar, also showing a gain of using a mix, but also a lower objective value in general due to the missing detours. However, experimental results do not show any significant differences between the two problem variants in terms of gap between the mix and restricted types. Table 8 shows a compact view on these results. From these results we can see, that the total number of vehicles required is only slightly higher, with up to a single vehicle more on average. We then compared the fleet composition with the E-FSMFTW variant, to see whether the mix might be different, but the results showed a similar distribution of vehicle types in both variants. We therefore can conclude, that the transport capacity is a dominant factor in finding a good fleet composition. Including the energy constraint does not influence the distribution of vehicles in the fleet. However, the constraint requires different routing decisions with additional detours to recharging stations. This can be deduced from the comparison of the objective value, where the E-FSMFTW is, as expected, always higher. The table showing the average fleet composition can be found in the appendix as well.

@&#CONCLUSION@&#

In this paper, we introduced a new fleet composition and routing problem using electric vehicles: the E-FSMFTW considers multiple vehicle types differing in their capacities and costs. Each vehicle has the possibility of recharging on tour at dedicated recharging stations. Each recharge operation consumes an amount of time depending on the distance travelled and the resulting battery charge. This adds additional complexity to the problem since time windows at customer locations have to be observed.

We proposed a hybrid solution method based on Adaptive Large Neighbourhood Search (ALNS) extended with an embedded intensification mechanism. This intensification was done using intelligent local search for route improvement and efficient labeling procedures for the optimal placement of charging stations. For defining the problem rigorously, we also provided a MIP formulation and presented a Set-Partitioning formulation which was solved using a branch-and-price procedure. We constructed a new benchmark set for the E-FSMFTW and performed extensive computational experiments with our branch-and-price solver and our extended ALNS. On small instances, the ALNS was able to find all optimal solutions. We also presented results of our algorithms on larger instances, comparable in size to those of benchmark instances published for related problems. For these our heuristic solver is able to find solutions within a gap of around one percent to the best known solution. Several of these best known solution have been proven optimal by our branch-and-price procedure.

A sensitivity analysis was conducted, showing the expected benefit of considering a fleet mix of different vehicle types. Furthermore, usage of recharging stations in the obtained results was investigated. Our computational study shows that not even half of the recharging stations are used in the current benchmark instances, and at most one is visited per vehicle in good solutions.

Since our work extends the research on E-VRPTW, it also shares some of the limiting assumptions of this model. We assume that the vehicle is always charged to full capacity every time a vehicle reaches a recharging station. While this can be partly defended by the fact that in reality drivers will prefer to do this rather than to leave with a partially charged vehicle, it would be interesting to relax this limiting assumption. Furthermore, like most of the vehicle routing literature we assume that the resource (energy) consumption rate is constant and does not depend on the carrying load of the vehicles. A more realistic modeling of this aspect e.g. in the sense of the pollution-routing problem (Bektas & Laporte, 2011) will be one of the subjects of future work focusing on extending and applying our model to real world cases.
                     
                  

@&#ACKNOWLEDGMENTS@&#

Thanks are due to our colleagues at the Austrian Institute of Technology and the University of Vienna as well as the participants of conference VeRoLog 2013 and the workshop AWGM 2013 (where preliminary results were presented) for useful discussions and suggestions. We would also like to thank the reviewers for their valuable feedback which helped to improve the overall quality of this paper.

This work is partially funded by the Austrian Climate and Energy Fund within the “Electric Mobility Flagship Projects” program under Grant 834868 (project VECEPT).


                              Table A.9 shows more detailed results for the E-VRPTW instances by Schneider et al. (2014). An upper bound of the best feasible integer solution (m, obj) found during the search is presented where available. If the upper bound is proven optimal, the field of column (opt.) is marked with an X.

The BnP approach calculated 24 lower bounds, 20 upper bounds, from which 6 are proven to be optimal.


                              Table A.9 shows more detailed results for the E-FSMFTW instances used in our studies. An upper bound of the best feasible integer solution (obj) found during the search is presented where available. If the upper bound is proven optimal, the field of column (opt.) is marked with an X.

Our BnP approach calculated 75 lower bounds, 51 upper bounds with 7 also proven to be optimal.

To results for each instance of the proposed new benchmark set is shown in Tables A.11
                              
                              –A.13
                              . Here we show the best known solution obtained using BnP or any run in our experiments, the average of 10 runs using our algorithm as well as the fleet mix.

To complete our results, we also show the results obtained for the smaller benchmarks with only 5 and 10 customers similar to Table 2 in Tables A.14
                               and A.15
                              .

The additional results on the fleet composition using the E-FSMFTW instances but without the energy restriction is shown in Table A.16
                              .

@&#REFERENCES@&#

