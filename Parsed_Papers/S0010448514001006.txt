@&#MAIN-TITLE@&#Mendable consistent orientation of point clouds

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An orientation-benefit normal estimation method is proposed.


                        
                        
                           
                           We use multi-sources normal propagation to achieve more consistent orientation.


                        
                        
                           
                           Propagation sources are extracted automatically to alleviate the manual work.


                        
                        
                           
                           A considerable amount of comparisons with state-of-the-art are provided.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Point cloud

Orientation

Surface reconstruction

@&#ABSTRACT@&#


               
               
                  Consistent normal orientation is challenging in the presence of noise, non-uniformities and thin sharp features. None of any existing local or global methods is capable of orienting all point cloud models consistently, and none of them offers a mechanism to rectify the inconsistent normals. In this paper, we present a new normal orientation method based on the multi-source propagation technique with two insights: faithful normals respecting sharp features tend to cause incorrect orientation propagation, and propagation orientation just using one source is problematic. It includes a novel orientation-benefit normal estimation algorithm for reducing wrong normal propagation near sharp features, and a multi-source orientation propagation algorithm for orientation improvement. The results of any orientation methods can be corrected by adding more credible sources, interactively or automatically, then propagating. To alleviate the manual work of interactive orientation, we devise an automatic propagation source extraction method by visibility voting. It can be applied directly to find multiple credible sources, combining with our orientation-benefit normals and multi-source propagation technique, to generate a consistent orientation, or to rectify an inconsistent orientation. The experimental results show that our methods generate consistent orientation more or as faithful as those global methods with far less computational cost. Hence it is more pragmatic and suitable to handle large point cloud models.
               
            

@&#INTRODUCTION@&#

Surface reconstruction from raw points is a fundamental problem in computer vision and computer graphics  [1–8]. Consistently oriented normals are critical for surface reconstruction. The state-of-the-art reconstruction algorithms  [1,9,2,10] may produce poor quality results without consistent orientation  [11,12]. Although some advanced 3D scanning devices are capable of generating some additional properties, such as color and normal, when acquiring point positions, more general digitizing devices and computer vision algorithms do not provide such properties. Hence consistent orientation of raw points has drawn increasing attention recently  [13,14,11,12,15–17].

As pointed out in  [4,7], robust orientation is as difficult as reconstructing the whole surface itself. Furthermore the acquired point sets are inevitably ridden with noise, outliers, non-uniformities and holes  [7], which challenges the traditional local orientation methods. Hence, more attention is paid to global approaches [15–17], since they are robust to these defects. In addition, sharp features also bring changes to both local approaches (see (b) and (d) of Fig. 1
                     ) and global approaches (see (c) of Fig. 1). Many feature-preserving methods, such as  [18], generate faithful normals which benefit consistent orientation. However, normals preserving features may lead to incorrect orientation as illustrated in Fig. 2
                     . Thus we design an orientation-benefit normal estimation algorithm for reducing wrong normal propagation across sharp features. Finally, as far as we know, none of any local, even global methods is capable of achieving consistent orientation for all point clouds and none of them offers a mechanism or strategy to identify and make right the inconsistent normals. The inconsistent orientation is hard to detect just from the surface itself, because they tend to be surrounded by sharp features and satisfy the geometry constraints of the algorithm generating them.

To address the above issues, we present a mendable local orientation propagation method, since it generates comparable results as the global approaches and has the potentiality of rectifying inconsistent orientation faster for huge point cloud data. We have to mention that not all the local or global methods can exploit the inconsistent orientation identified to correct their results. Detailed descriptions can be found in Section  2. Our method consists of a novel orientation-benefit normal estimation algorithm (OBNE) for reducing wrong normal propagation across sharp features, a multi-source orientation propagation algorithm (MMST) for orientation improvement, and visibility voting process to identify multiple credible sources. It involves four main steps. Taking a raw point set as input, its initial normals are estimated by weighted principal component analysis (WPCA). Based on the initial normals, we apply OBNE to generate new normals which benefit the orientation propagation near sharp features. Then, multiple propagation sources are identified automatically by visibility voting. At last, our MMST is applied to compute a consistent orientation. If the result is not faithful, we pick points with incorrect orientations interactively or using our automatic propagation sources extraction method again, invert the orientation of them, and apply MMST to generate more a faithful orientation until there is no incorrect region left. In our experiments, the automatically identified sources are enough to generate a consistent orientation and no further rectification is needed.

Our approach is straightforward yet effective without resorting to any complicated data structures and advanced solvers. The experimental results show that it generates consistent orientations as faithful as those global methods with far less computational cost, which makes it suitable to handle large point cloud models with millions of points. Our method is also more robust against noise, non-uniformities, sparsity and thin sharp features than previous local methods  [13,14,11,12]. We demonstrate the effectiveness of our method by reconstructing high-quality surfaces using our consistent orientation result. Fig. 3
                      shows the normal orientation result of a noisy scan data with our method.

@&#RELATED WORK@&#

Propagating normal is a challenge for point clouds with noise, sharp features and nearby surface sheets. The most frequently used geometric orienter is proposed by Hoppe et al.  [19]. Starting from a seed point, it flips inconsistent normals of its neighbors along an MST. Each edge is equipped with a cost encoding the degree to which two neighbor normals are consistently oriented. Xie et al.  [13] try to avoid propagation along high curvature regions resulting in multiple orientated patches. Then a modified normal flipping criterion is used to orientate these patches. A correct estimation of feature size is necessary for this algorithm. In  [14], they propose a flipping rule to handle thin sharp features by measuring the smoothness of a Hermite curve connecting two adjacent points projected on to a common reference plane. But, this method requires original point clouds with quite high quality. Instead of computing each edge cost locally, Lee et al.  [16] utilize global harmonic functions to assign each edge a cost. However the orientation is still generated by MST. The method  [11] first detects thin sharp features by a simple and conservative approach and then executes a check operation to flip orientation between nearby surface sheets. However, it can only handle the sharp feature with a convex crease. To handle various sharp features, our OBNE adjusts the initial normals by WPCA to enlarge angles between neighbor normals across features, which avoids propagating across sharp features (Fig. 2). Because the local approaches are quite efficient and suitable for massive point clouds, we combine OBNE with multi-source propagation MMST to a rapid and mendable orienter.


                        Volumetric methods tend to split the space based on volumetric representations. In general, volumetric approaches deal with noise and outliers well at the cost of heavy computation. Methods of [20,21,13,22] employ the regular volumetric grid enclosing the point set. Chen et al.  [23] use a visibility checking method to tag an octree. According to their visibility relative to the input point set from a set of pre-defined viewpoints, the in/out tags of the corners are determined. However, they tag a corner as out with only one view, which restricts the algorithm to the complete point clouds. Recently, Mullen et al.  [24] apply a robust unsigned distance function by means of stochastic ray tracing and global smoothing. Even though this method is insensitive to noise and outliers, it is complicated, with many heuristic parameters.


                        Surface-based non-propagation methods Surface-based non-propagation methods  [12,15,17] are more robust than local normal propagation approaches  [19,13,14,11], since they are global approaches or reconstruction based. Liu et al.  [12] use the triangular mesh generated from the point cloud to orientate normals. While the thick structure and heavy noises are prone to result in degenerated reconstruction, it gives rise to inconsistent orientation in turn. However, such a method cannot use incorrect oriented normals identified interactively to improve its result. Recently, a variational model presented by  [17] is applied to compute the oriented normal field on a point cloud integrating the unoriented normal estimation and the consistent normal orientation together. The variation model solves a constrained quadratic programming problem, which is relaxed to be a standard eigenvalue problem with the time complexity 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        . Although the algorithm is effective and robust, carefully tuning up is needed when a model contains sharp features with different scales. If we wish to add some specified oriented normals as linear constraints to fix some isolated incorrect oriented normals, the model’s time complexity would be far higher than 
                           O
                           
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        , which is unbearable for large point cloud models. The method of  [15] combines constrained Laplacian smoothing and visibility voting for consistently orienting a raw point. More linear constraints can be added to refine the orientation since it solves a least square problem.

Although the above methods are robust, consistent orientation for all kinds of the point cloud models is not guaranteed. There is no practical way to fix incorrect orientation or too much of time especially for the huge data set. Thus we present an interactive orientation method based on local propagation to tackle these challenges.

Given a raw, unoriented and noisy point cloud 
                           P
                           =
                           
                              
                                 
                                    {
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                              
                              
                                 i
                                 =
                                 1
                              
                              
                                 m
                              
                           
                         as input, we design three main steps to generate the oriented normal consistently for each point 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        . First, a novel orientation-benefit normal is estimated solving a generalized eigenvalue problem (Section  3.2). Then, we present a multi-source normal propagation scheme where each region grows anisotropically (Section  3.3). For providing credible propagation sources and reducing the manual work of choosing propagation sources interactively, we devise an automatic propagation sources detector, which is detailed in Section  3.4.

WPCA is the most common algorithm to compute point cloud normals. The typical WPCA model  [25] is: 
                           
                              
                                 (1)
                                 
                                    min
                                    
                                       
                                          E
                                       
                                       
                                          
                                             WPCA
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             n
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    =
                                    min
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          N
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    
                                       
                                          w
                                       
                                       
                                          i
                                          j
                                       
                                    
                                    
                                       
                                          
                                             [
                                             
                                                
                                                   n
                                                
                                                
                                                   i
                                                
                                                
                                                   T
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      j
                                                   
                                                
                                                −
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                             ]
                                          
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              
                                 
                                    s.t.  
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    1
                                    ,
                                 
                              
                           
                         where 
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 
                                    (
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                       
                                          3
                                       
                                    
                                    )
                                 
                              
                              
                                 T
                              
                           
                         is the unit normal vector of a point 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        , 
                           N
                           
                              (
                              i
                              )
                           
                         denotes the index set of 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        ’s 
                           k
                        -nearest neighbors, 
                           
                              
                                 w
                              
                              
                                 i
                                 j
                              
                           
                           =
                           
                              
                                 e
                              
                              
                                 −
                                 
                                    
                                       
                                          ‖
                                          
                                             
                                                p
                                             
                                             
                                                i
                                             
                                          
                                          −
                                          
                                             
                                                p
                                             
                                             
                                                j
                                             
                                          
                                          ‖
                                       
                                    
                                    
                                       2
                                    
                                 
                                 /
                                 
                                    
                                       ρ
                                    
                                    
                                       2
                                    
                                 
                              
                           
                         and 
                           ρ
                           =
                           
                              
                                 max
                              
                              
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                              
                           
                           
                              
                                 
                                    ‖
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                    −
                                    
                                       
                                          p
                                       
                                       
                                          j
                                       
                                    
                                    ‖
                                 
                              
                              
                                 2
                              
                           
                        . When 
                           
                              
                                 w
                              
                              
                                 i
                                 j
                              
                           
                           =
                           1
                        , WPCA degenerates into PCA. Normals computed by WPCA are not suitable for normal propagation for two reasons. First, unsigned normal directions from WPCA near thin sharp features make small angles which give priority for propagating across these regions, as shown in Fig. 2(a), while ours not (Fig. 2(b)). On the other hand, its computation is not stable in the presence of noise and nonuniform distribution of its neighbors (see the left column of Fig. 4
                        ). When the propagation has to be across sharp features, the normal of yellow point in Fig. 4(c) leads to incorrect normal flips. In such a case, our OBNE leads to correct propagation as shown in Fig. 4(b) and (d). It ponders the position of neighbor points and the extent of normal variation near sharp features: 
                           
                              
                                 (2)
                                 
                                    min
                                    
                                    
                                       
                                          E
                                       
                                       
                                          
                                             OBNE
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             n
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ,
                                          k
                                          ∈
                                          N
                                          
                                             (
                                             i
                                             )
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             w
                                          
                                          
                                             j
                                             k
                                          
                                       
                                       +
                                       
                                          
                                             d
                                          
                                          
                                             j
                                             k
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             [
                                             
                                                
                                                   n
                                                
                                                
                                                   i
                                                
                                                
                                                   T
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      j
                                                   
                                                
                                                −
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      k
                                                   
                                                
                                                )
                                             
                                             ]
                                          
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              
                                 
                                    s.t.  
                                    
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    1
                                    .
                                 
                              
                           
                        
                     

Instead of considering the relationship between 
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                           −
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                         in WPCA, OBNE takes into account the relationship between 
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                           −
                           
                              
                                 p
                              
                              
                                 k
                              
                           
                        , where 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 k
                              
                           
                         are neighbors of 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        . Beside the points distance weight in WPCA, a new weight 
                           
                              
                                 d
                              
                              
                                 j
                                 k
                              
                           
                         is introduced to reflect the extent of normal variation. The weight 
                           
                              
                                 d
                              
                              
                                 j
                                 k
                              
                           
                         defined in  [11]: 
                           
                              (3)
                              
                                 
                                    
                                       d
                                    
                                    
                                       j
                                       k
                                    
                                 
                                 =
                                 1
                                 −
                                 
                                    |
                                    
                                       
                                          
                                             
                                                n
                                             
                                             
                                                j
                                             
                                          
                                       
                                       ¯
                                    
                                    ⋅
                                    
                                       
                                          
                                             
                                                n
                                             
                                             
                                                k
                                             
                                          
                                       
                                       ¯
                                    
                                    |
                                 
                                 
                                    
                                       
                                          
                                             max
                                          
                                          
                                             r
                                             ,
                                             s
                                             ∈
                                             
                                                {
                                                1
                                                ,
                                                2
                                                }
                                             
                                          
                                       
                                       
                                          ‖
                                          
                                             
                                                m
                                             
                                             
                                                r
                                                s
                                             
                                          
                                          −
                                          
                                             
                                                o
                                             
                                             
                                                r
                                                s
                                             
                                          
                                          ‖
                                       
                                    
                                    
                                       1
                                       +
                                       
                                          ‖
                                          
                                             
                                                p
                                             
                                             
                                                j
                                             
                                          
                                          −
                                          
                                             
                                                p
                                             
                                             
                                                k
                                             
                                          
                                          ‖
                                       
                                    
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 m
                              
                              
                                 r
                                 s
                              
                           
                         is the midpoint of the line segment 
                           
                              
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                    
                                       r
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                    
                                       s
                                    
                                 
                              
                              ¯
                           
                           ,
                           
                           r
                           ,
                           s
                           ∈
                           
                              {
                              1
                              ,
                              2
                              }
                           
                        , points 
                           
                              
                                 p
                              
                              
                                 j
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 j
                              
                              
                                 2
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 k
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 k
                              
                              
                                 2
                              
                           
                         are unit distance away from 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 k
                              
                           
                         along 
                           
                              
                                 
                                    
                                       n
                                    
                                    
                                       j
                                    
                                 
                              
                              ¯
                           
                         and 
                           
                              
                                 
                                    
                                       n
                                    
                                    
                                       k
                                    
                                 
                              
                              ¯
                           
                         which are estimated by WPCA, 
                           
                              
                                 o
                              
                              
                                 r
                                 s
                              
                           
                         is the perpendicular projection of 
                           
                              
                                 m
                              
                              
                                 r
                                 s
                              
                           
                         onto the estimated tangent line 
                           
                              
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                 
                              
                              ¯
                           
                         or its extensions and 
                           
                              
                                 
                                    
                                       d
                                    
                                    
                                       k
                                       j
                                    
                                 
                              
                              ¯
                           
                           =
                           
                              
                                 max
                              
                              
                                 r
                                 ,
                                 s
                                 ∈
                                 
                                    {
                                    1
                                    ,
                                    2
                                    }
                                 
                              
                           
                           
                              ‖
                              
                                 
                                    m
                                 
                                 
                                    r
                                    s
                                 
                              
                              −
                              
                                 
                                    o
                                 
                                 
                                    r
                                    s
                                 
                              
                              ‖
                           
                        . We remark that 
                           
                              
                                 d
                              
                              
                                 j
                                 k
                              
                           
                         contributes to enlarge the angle between two newly estimated undirected normals, near thin sharp regions, relative to the initial normals by WPCA, which, in turn, lowers the propagation priority and avoids propagating across thin sharp features. We favor that the normal at thin sharp features is perpendicular to the line 
                           
                              
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                    
                                       r
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       k
                                    
                                    
                                       s
                                    
                                 
                              
                              ¯
                           
                        , where 
                           
                              
                                 p
                              
                              
                                 j
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 k
                              
                           
                         locate at different sides of the feature curve, with coincided unsigned normal directions. If that happens, the corresponding weight 
                           
                              
                                 d
                              
                              
                                 j
                                 k
                              
                           
                         is bigger, which means the larger angle between estimated neighbor normals. Otherwise, 
                           
                              
                                 d
                              
                              
                                 j
                                 k
                              
                           
                         is small. Thus it benefits consistent orientation by lowering priority across thin sharp features (see Fig. 2(b)). The MST or our multi-source orientation propagation algorithm (MMST) defined later will find another path to propagate normals avoiding those features.


                        
                           
                              
                           
                        
                     

OBNE solves the following constrained optimization problem: 
                           
                              
                                 (4)
                                 
                                    min
                                    
                                    
                                       
                                          E
                                       
                                       
                                          
                                             OBNE
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             n
                                          
                                          
                                             i
                                          
                                       
                                       )
                                    
                                    =
                                    min
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          U
                                       
                                       
                                          ̄
                                       
                                    
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                              
                                 
                                    s.t.  
                                    
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    1
                                    ,
                                 
                              
                           
                         where the symmetrical positive determined matrix 
                           
                              
                                 
                                    
                                       U
                                    
                                    
                                       ̄
                                    
                                 
                              
                              
                                 3
                                 ×
                                 3
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                                 ,
                                 k
                                 ∈
                                 N
                                 
                                    (
                                    i
                                    )
                                 
                              
                           
                           
                              
                                 U
                              
                              
                                 j
                                 k
                              
                              
                                 i
                              
                           
                         with 
                           
                              
                                 U
                              
                              
                                 j
                                 k
                              
                              
                                 i
                              
                           
                           =
                           
                              (
                              
                                 
                                    w
                                 
                                 
                                    j
                                    k
                                 
                              
                              +
                              
                                 
                                    d
                                 
                                 
                                    j
                                    k
                                 
                              
                              )
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                              −
                              
                                 
                                    p
                                 
                                 
                                    k
                                 
                              
                              )
                           
                           
                              
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          j
                                       
                                    
                                    −
                                    
                                       
                                          p
                                       
                                       
                                          k
                                       
                                    
                                    )
                                 
                              
                              
                                 T
                              
                           
                        . We use Lagrangian multiplier method and overwrite the above formula as a minimization of the following objective function: 
                           
                              
                                 E
                                 =
                                 
                                    
                                       n
                                    
                                    
                                       i
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       U
                                    
                                    
                                       ̄
                                    
                                 
                                 
                                    
                                       n
                                    
                                    
                                       i
                                    
                                 
                                 +
                                 λ
                                 
                                    (
                                    1
                                    −
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          n
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 ,
                              
                           
                         requiring 
                           
                              
                                 ∂
                                 E
                              
                              
                                 ∂
                                 
                                    
                                       n
                                    
                                    
                                       i
                                    
                                 
                              
                           
                           =
                           0
                         
                        i.e.   
                           
                              
                                 U
                              
                              
                                 ̄
                              
                           
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                           =
                           λ
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                        . 
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                         is an eigenvector and 
                           λ
                         is its corresponding eigenvalue. The eigenvector of the smallest eigenvalue is regarded as the final estimated normal of each point 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        .


                        
                           
                              
                           
                        
                     

The widely used normal propagation strategy is MST and various approaches have been devised based on it. However, propagation using just one source is problematic, and none of them present a mechanism to correct inconsistent orientation. To address the issue, we design a multi-source normal propagation method—MMST. Given any orientation propagated from one or more sources, inconsistent orientation can be rectified by more sources identified interactively or automatically. The pseudocode of it is shown in Algorithm 1.

We define an orientated point set 
                           A
                         and an unoriented point set 
                           B
                        , satisfying 
                           A
                           ⋃
                           B
                           =
                           P
                           ,
                           A
                           ⋂
                           B
                           =
                           0̸
                        . 
                           A
                         and 
                           B
                         are initialized with 
                           0̸
                         and 
                           P
                         respectively. If inconsistent orientation happens after running a standard MST approach, the source point 
                           
                              
                                 p
                              
                              
                                 0
                              
                           
                         using in the above MST approach and an interactively selected point 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                         with incorrect orientation are pushed into 
                           A
                        . We flip the normal of 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                         and propagate orientation from multiple source points in 
                           A
                        . Similar to MST, we prefer propagate orientation where the neighbor normals are nearly parallel, i.e. prefer smaller cost 
                           1
                           −
                           
                              |
                              
                                 〈
                                 
                                    
                                       n
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       n
                                    
                                    
                                       j
                                    
                                 
                                 〉
                              
                              |
                           
                         of the edge
                           
                              (
                              i
                              ,
                              j
                              )
                           
                        . Therefor, we define an edge weight stack 
                           C
                         on edges connecting 
                           A
                         and 
                           B
                         as stated in Algorithm 1. When 
                           B
                           ≠
                           0̸
                        , the edge 
                           e
                         with the minimal weight is popped. Then the orientation is propagated from one end point of 
                           e
                         belonging to 
                           A
                         to the other end point 
                           
                              nextSource
                           
                         of it belonging to 
                           B
                        , and 
                           C
                         is updated with edges connecting 
                           
                              nextSource
                           
                         and a point in 
                           B
                        . The process stops when 
                           C
                           =
                           0̸
                        , i.e. all points are orientated. If the generated orientation is not faithful, more source points in incorrect regions can be added and repeat the above steps until the consistent orientation is achieved. Our OBNE propagates the normals of source points in a compatible way by globally considering the parallelity of the neighboring normals. Experiments show that the more source points are selected, the more faithful orientation generated.

To propagate the orientation, we need to use correctly oriented points as sources of propagation. Hoppe et al.  [19] offer a mechanism to choose one source point. However, it can only give us one. So we present an automatic method for extracting more sources, which contribute to generate a more faithful orientation and reduce the manual work of choosing sources interactively.

The basic idea is that given a viewpoint 
                           
                              
                                 v
                              
                              
                                 j
                              
                           
                         outside of the point cloud 
                           P
                        , the orientation of a visible point 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         can be estimated by the inner product of a unit vector 
                           
                              
                                 m
                              
                              
                                 j
                              
                           
                         from the viewpoint directing to the centroid of 
                           P
                        , and the normal 
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                        . If their inner product is less than zero, 
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                         may direct outside and the confidence is determined by the absolute value of the inner product. Inspired by  [15], we employ a robust HPR operator  [24] estimating robust visibility of noisy point cloud to compute visible points fast without resorting to voxelization.

We obtain sources from the visible point set. For each visible point 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        , we compute 
                           
                              
                                 c
                              
                              
                                 i
                                 j
                              
                           
                           =
                           
                              sign
                           
                           
                              (
                              
                                 〈
                                 
                                    
                                       n
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       m
                                    
                                    
                                       j
                                    
                                 
                                 〉
                              
                              )
                           
                           ⋅
                           
                              
                                 e
                              
                              
                                 −
                                 arccos
                                 
                                    
                                       
                                          (
                                          
                                             |
                                             
                                                〈
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      j
                                                   
                                                
                                                〉
                                             
                                             |
                                          
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                                 /
                                 
                                    
                                       σ
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        , where 
                           σ
                           =
                           π
                           /
                           6
                         in all our experiments. Higher 
                           
                              |
                              
                                 
                                    c
                                 
                                 
                                    i
                                    j
                                 
                              
                              |
                           
                         means 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         is more reliable as a source and the sign of 
                           
                              〈
                              
                                 
                                    n
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    m
                                 
                                 
                                    j
                                 
                              
                              〉
                           
                         determines the orientation of 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                        . If 
                           
                              〈
                              
                                 
                                    n
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    m
                                 
                                 
                                    j
                                 
                              
                              〉
                           
                           >
                           0
                        , we flip 
                           
                              
                                 n
                              
                              
                                 i
                              
                           
                        . To handle models with missing parts and holes and extract more sources with higher confidence, more viewpoints 
                           
                              
                                 v
                              
                              
                                 j
                              
                           
                         with different view directions are taken use of. The weight 
                           
                              
                                 C
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                              
                           
                           
                              
                                 c
                              
                              
                                 i
                                 j
                              
                           
                         are accumulated to evaluate the confidence of choosing 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         as a source from multiple viewpoints. In our experiments, eight viewpoints, i.e.  eight corners of the bounding box of the input model, are enough to generate faithful results.

The point 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         is chosen as a source if 
                           
                              
                                 C
                              
                              
                                 i
                              
                           
                           ∈
                           
                              [
                              
                                 
                                    min
                                 
                                 
                                    i
                                 
                              
                              
                                 {
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              ,
                              
                                 
                                    min
                                 
                                 
                                    i
                                 
                              
                              
                                 {
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              +
                              η
                              ]
                           
                           ∪
                           
                              [
                              
                                 
                                    max
                                 
                                 
                                    i
                                 
                              
                              
                                 {
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              −
                              η
                              ,
                              
                                 
                                    max
                                 
                                 
                                    i
                                 
                              
                              
                                 {
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              ]
                           
                        . If 
                           
                              
                                 p
                              
                              
                                 i
                              
                           
                         belongs to the right interval, we flip its normal before the propagation. Taking the second column of Fig. 5
                         as an example, the number of sources extracted with 
                           η
                           =
                           0.1
                         is 15584. The sources satisfying 
                           
                              
                                 C
                              
                              
                                 i
                              
                           
                           ∈
                           
                              [
                              
                                 
                                    max
                                 
                                 
                                    i
                                 
                              
                              
                                 {
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              −
                              η
                              ,
                              
                                 
                                    max
                                 
                                 
                                    i
                                 
                              
                              
                                 {
                                 
                                    
                                       C
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                              ]
                           
                         are rendered in pink spheres and their normals need to be flipped before propagation. The rest sources are shown in green spheres. As illustrated in Fig. 5, consistent orientation can be generated from sources with higher confidence, i.e.  lower 
                           η
                         (Fig. 5). Conservatively, we choose 
                           η
                           =
                           0.07
                         (see the third column of Fig. 5) in the experiment of automatic multi-source normal propagation (Section  4.2).

@&#EXPERIMENTAL RESULTS@&#

To evaluate the performance of our method, we test our method on a variety of unorganized point clouds with sharp features, thick parts, nearby surface sheets, non-uniformities and noise. We compare the influence of different normal computation methods over normal propagation first, followed by the comparison of our local method with other state-of-the-art local and global approaches. At last, we demonstrate that our automatic propagation sources extraction method alleviates the manual work of interaction source selection greatly.

We implement our approach on a personal notebook with an Intel Core(TM) i5 CPU @2.60-GHz processor and 4.0 Gb memory. The OBNE algorithm is implemented with C++ and the automatic propagation sources extraction is implemented by Matlab. A typical example, such as the Oilpump (31K) in Fig. 10, takes a total of 6.546 s. Of that time, the construction of graph takes 0.57 s, propagating normal takes 0.526 s and the sources extraction takes 5.45 s. The most time-consuming step is to estimate robust visibility of point clouds when extracting propagation sources. A C++ implementation could increase the performance remarkably.

To evaluate the superiority of our orientation-benefit normal estimation method, we compare PCA  [19] plus MST, WPCA  [25] plus MST, RRHT (Robust Randomized Hough Transform)  [26] plus MST with our orientation-benefit normal estimation algorithm (OBNE) plus MST. Fig. 6
                         demonstrates obviously our normal estimator’s advantage on the data with sharp features over other local methods, such as PCA, WPCA, and RRHT. For the Fandisk model, there are many parts enclosed by sharp features and normal propagation has to be across these feature regions. RRHT does generate more faithful normals respecting sharp features. However, as explained in Section  3.2, using such normals may lead to incorrect normal flips near sharp features, while in-between normals by our OBNE lead to correct propagation. Data with thick parts always challenge local oriented approaches. Propagation using our OBNE still achieves better results than using PCA and WPCA, as illustrated Fig. 7
                        . ORT, the recently proposed mesh-based method, generates comparable result as ours.

The second and third columns of Fig. 8
                         show that the result of interactive orientation rectification from orientation used only one source. As we stated before, orientation propagation from one source tends to generate inconsistent orientation. Adding more credible sources interactively helps to improve it. Although the interaction is effective for many common models, it may need much time of manual work. Because we do not know how many sources are needed and where they should be located before the orientation rectification. Our automatic multi-source extraction method alleviates the manual work by decreasing times of interaction. Consistent orientation can be achieved by just one time of orientation propagation since it distributes much more creditable sources on the models (see the fourth column of Fig. 8).

For the comparisons of consistent orientation of point clouds, we carry out seven state-of-art orienters: PCA plus MST  [19], RRHT  [26] plus MST, EAR (Edge-aware point set resampling)  [18], Cons  [11], ORT  [12], CSV  [15], and VNC  [17]. Results of the EAR and Cons orienters are chosen in a trial-and-error way. We try to maximize the sampling rates and apply the normal propagation and orientation-aware PCA iteration multiple times to estimate the normals more accurately.


                        Thin sharp features and nearby surface sheets: models with thin sharp features and nearby surface sheets always challenge normal estimation and orientation. Fig. 1 shows the orientation of the point cloud with close-by sheets. Fig. 9
                        
                         shows examples of data with thin sharp features. Our method generates the faithful result as Cons, VNC and ORT for the Fish model. For the Scissor model, VNC and our method perform well.

RRHT plus MST leads to inconsistent orientation again as we explained before. Normals preserving sharp features may cause incorrect orientation propagation. Both CONS and EAR down-sample the input point set first. The process may damage sparse or thin-sheet regions. Furthermore, the up-sampling process of EAR is aware of orientation. Without inputting normals with consistent orientation, EAR may produce incorrect up-sampling and generate qualified edge-aware resampling with inconsistent normals as illustrated in Fig. 9.

To evaluate our method more precisely, the oil-pump model (see Fig. 10) is oriented. Owing to that VNC selects a global Dirichlet energy weight to orient normal directions, it has issues with the data simultaneously containing various sharp features. ORT tends to generate isolated incorrect orientation near sharp features. In contrast, our MMST method obtains a much more faithful orientation.


                        Non-uniformity and sparsity: our method is also robust for point clouds with non-uniformity and sparsity (Fig. 11
                        ). The Cons approach is not suitable for sparsely sampled models because of the down-sampling strategy, especially in the highly sparse region. VNC is a global approach, and it performs better than other methods with much higher computational cost, about 552 s. Our local approach outperforms MST, Cons and ORT for the Venus model with non-uniform sparseness. It takes a total of 11.04 s. Of that time, propagation of normal takes 2.8 s, and extraction of propagation sources by the Matlab implementation takes 8.24 s.


                        Noise: our approach is also resilient to noise, as shown by the reconstructed surfaces in Fig. 12
                        . In contrast, ORT produces some isolated incorrect orientations using the default parameters. In Fig. 12, noise is added to each point by randomly displacing the position by a fixed distance (0.5%, 1% and 2% of the length of the main diagonal of the bounding box of the point set). ORT handles noise by increasing the default spherical covering radius. 0.01, 0.05 and 0.1 are carefully chosen to handle the increasing noise level in the middle of Fig. 12. Note that a too-large default spherical covering radius may make the generated coarse mesh over simplified, which causes incorrect orientation. As illustrated in Fig. 12, a faithful surface can be recovered using the orientation of our method if the noise level is 0.5%. Although a 2% rate of noise damages the input shape and the recovered surface is not faithful, the generated orientation is still correct. ORT fails to orient the model consistently in the same noise level.


                        Holes and open boundaries: Fig. 13
                         demonstrates that our method generates the graceful result in the presence of holes and open boundaries. The man model contains roughly two pieces (front and back) with non-uniformity and holes. The Laurana model contains large open boundary. As mentioned in Section  3.4, only 8 viewpoints are leveraged to generate faithful orientations of the two models, without taking the boundaries’ position and facing information into consideration. Unfortunately, if the model is to flat, liking the face model Fig. 7, our automatic multi-source normal propagation cannot handle it well.

To evaluate the performance of our approach thoroughly and quantitatively, we compare our automatic multi-sources propagation method with the state-of-the-art approaches such as the PCA, ORT, CSV and VNC on one hundred and two models with different properties. Among them, there are twenty models with sharp features, twenty models with close-by sheets, twenty models with high genus, twenty one models with non-uniform distribution and twenty one models with noise. The non-uniformly distributed point clouds are generated from seven models sampled with three different densities. The noisy point clouds include seven models perturbed by centered Gaussian noise with 30%, 40% and 50% average distance between points. Fig. 14
                         illustrates that our approach generates much more faithful orientation for models with sharp features, close-by sheets, high genus, and non-uniform distribution. Even for the noisy models, our method outperforms PCA, VNC and CSV, and is comparable with ORT. During conducting these experiments, we use the default parameters for all the methods.

The automatic propagation sources extraction by HPR operator does not work for the complicated surface on which many regions may be invisible. Without enough trustable sources, the consistent orientation is impossible. A possible future project would identify inconsistent orientation in an automatical way just by evaluating local geometry.

@&#CONCLUSION@&#

In this paper, we present an orientation-benefit normal estimation algorithm and multi-source orientation propagation algorithm. Our approach tackles the challenging problem without resorting to any complicated data structures and advanced solvers. The main advantage of our method is that inconsistent orientation results can be corrected easily and rapidly, which makes it suitable for dealing with large point cloud data. Although it is a local approach, consistent orientation is generated as faithful as those global methods. We also design an automatic propagation sources extraction method to alleviate the interactions. Hence it is a pragmatic tool for improving the quality of reconstructed surfaces via conventional reconstruction schemes from raw and defect-ridden point sets. The efficacy of our method is demonstrated in numerous experiments.

@&#ACKNOWLEDGMENTS@&#

We would like to appreciate the reviewers for their valuable comments and suggestions improving greatly the manuscript. Our sincere thanks also go to Aim@Shape project and the Standford Computer Graphic Laboratory for providing the models in the paper. This work is partially supported by the National Natural Science Foundation of China (No. 61173102, 61370143, 61363048), the Research Funds for the Central Universities (No. DUT13JS04, DUT13RC206), the funding of “Jiangsu Specially-Appointed Professor” and “The Outstanding Talent of NUAA (NE2014402)”.

@&#REFERENCES@&#

